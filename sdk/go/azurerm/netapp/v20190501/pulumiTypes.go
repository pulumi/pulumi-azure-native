// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20190501

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// NetApp account properties
type AccountPropertiesResponse struct {
	// Active Directories
	ActiveDirectories []ActiveDirectoryResponse `pulumi:"activeDirectories"`
	// Azure lifecycle management
	ProvisioningState string `pulumi:"provisioningState"`
}

// AccountPropertiesResponseInput is an input type that accepts AccountPropertiesResponseArgs and AccountPropertiesResponseOutput values.
// You can construct a concrete instance of `AccountPropertiesResponseInput` via:
//
//          AccountPropertiesResponseArgs{...}
type AccountPropertiesResponseInput interface {
	pulumi.Input

	ToAccountPropertiesResponseOutput() AccountPropertiesResponseOutput
	ToAccountPropertiesResponseOutputWithContext(context.Context) AccountPropertiesResponseOutput
}

// NetApp account properties
type AccountPropertiesResponseArgs struct {
	// Active Directories
	ActiveDirectories ActiveDirectoryResponseArrayInput `pulumi:"activeDirectories"`
	// Azure lifecycle management
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
}

func (AccountPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountPropertiesResponse)(nil)).Elem()
}

func (i AccountPropertiesResponseArgs) ToAccountPropertiesResponseOutput() AccountPropertiesResponseOutput {
	return i.ToAccountPropertiesResponseOutputWithContext(context.Background())
}

func (i AccountPropertiesResponseArgs) ToAccountPropertiesResponseOutputWithContext(ctx context.Context) AccountPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountPropertiesResponseOutput)
}

// NetApp account properties
type AccountPropertiesResponseOutput struct{ *pulumi.OutputState }

func (AccountPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountPropertiesResponse)(nil)).Elem()
}

func (o AccountPropertiesResponseOutput) ToAccountPropertiesResponseOutput() AccountPropertiesResponseOutput {
	return o
}

func (o AccountPropertiesResponseOutput) ToAccountPropertiesResponseOutputWithContext(ctx context.Context) AccountPropertiesResponseOutput {
	return o
}

// Active Directories
func (o AccountPropertiesResponseOutput) ActiveDirectories() ActiveDirectoryResponseArrayOutput {
	return o.ApplyT(func(v AccountPropertiesResponse) []ActiveDirectoryResponse { return v.ActiveDirectories }).(ActiveDirectoryResponseArrayOutput)
}

// Azure lifecycle management
func (o AccountPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AccountPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Active Directory
type ActiveDirectory struct {
	// Id of the Active Directory
	ActiveDirectoryId *string `pulumi:"activeDirectoryId"`
	// Comma separated list of DNS server IP addresses for the Active Directory domain
	Dns *string `pulumi:"dns"`
	// Name of the Active Directory domain
	Domain *string `pulumi:"domain"`
	// The Organizational Unit (OU) within the Windows Active Directory
	OrganizationalUnit *string `pulumi:"organizationalUnit"`
	// Plain text password of Active Directory domain administrator
	Password *string `pulumi:"password"`
	// NetBIOS name of the SMB server. This name will be registered as a computer account in the AD and used to mount volumes
	SmbServerName *string `pulumi:"smbServerName"`
	// Status of the Active Directory
	Status *string `pulumi:"status"`
	// Username of Active Directory domain administrator
	Username *string `pulumi:"username"`
}

// ActiveDirectoryInput is an input type that accepts ActiveDirectoryArgs and ActiveDirectoryOutput values.
// You can construct a concrete instance of `ActiveDirectoryInput` via:
//
//          ActiveDirectoryArgs{...}
type ActiveDirectoryInput interface {
	pulumi.Input

	ToActiveDirectoryOutput() ActiveDirectoryOutput
	ToActiveDirectoryOutputWithContext(context.Context) ActiveDirectoryOutput
}

// Active Directory
type ActiveDirectoryArgs struct {
	// Id of the Active Directory
	ActiveDirectoryId pulumi.StringPtrInput `pulumi:"activeDirectoryId"`
	// Comma separated list of DNS server IP addresses for the Active Directory domain
	Dns pulumi.StringPtrInput `pulumi:"dns"`
	// Name of the Active Directory domain
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// The Organizational Unit (OU) within the Windows Active Directory
	OrganizationalUnit pulumi.StringPtrInput `pulumi:"organizationalUnit"`
	// Plain text password of Active Directory domain administrator
	Password pulumi.StringPtrInput `pulumi:"password"`
	// NetBIOS name of the SMB server. This name will be registered as a computer account in the AD and used to mount volumes
	SmbServerName pulumi.StringPtrInput `pulumi:"smbServerName"`
	// Status of the Active Directory
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Username of Active Directory domain administrator
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ActiveDirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveDirectory)(nil)).Elem()
}

func (i ActiveDirectoryArgs) ToActiveDirectoryOutput() ActiveDirectoryOutput {
	return i.ToActiveDirectoryOutputWithContext(context.Background())
}

func (i ActiveDirectoryArgs) ToActiveDirectoryOutputWithContext(ctx context.Context) ActiveDirectoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActiveDirectoryOutput)
}

// Active Directory
type ActiveDirectoryOutput struct{ *pulumi.OutputState }

func (ActiveDirectoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveDirectory)(nil)).Elem()
}

func (o ActiveDirectoryOutput) ToActiveDirectoryOutput() ActiveDirectoryOutput {
	return o
}

func (o ActiveDirectoryOutput) ToActiveDirectoryOutputWithContext(ctx context.Context) ActiveDirectoryOutput {
	return o
}

// Id of the Active Directory
func (o ActiveDirectoryOutput) ActiveDirectoryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDirectory) *string { return v.ActiveDirectoryId }).(pulumi.StringPtrOutput)
}

// Comma separated list of DNS server IP addresses for the Active Directory domain
func (o ActiveDirectoryOutput) Dns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDirectory) *string { return v.Dns }).(pulumi.StringPtrOutput)
}

// Name of the Active Directory domain
func (o ActiveDirectoryOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDirectory) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// The Organizational Unit (OU) within the Windows Active Directory
func (o ActiveDirectoryOutput) OrganizationalUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDirectory) *string { return v.OrganizationalUnit }).(pulumi.StringPtrOutput)
}

// Plain text password of Active Directory domain administrator
func (o ActiveDirectoryOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDirectory) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// NetBIOS name of the SMB server. This name will be registered as a computer account in the AD and used to mount volumes
func (o ActiveDirectoryOutput) SmbServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDirectory) *string { return v.SmbServerName }).(pulumi.StringPtrOutput)
}

// Status of the Active Directory
func (o ActiveDirectoryOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDirectory) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Username of Active Directory domain administrator
func (o ActiveDirectoryOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDirectory) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// Active Directory
type ActiveDirectoryResponse struct {
	// Id of the Active Directory
	ActiveDirectoryId *string `pulumi:"activeDirectoryId"`
	// Comma separated list of DNS server IP addresses for the Active Directory domain
	Dns *string `pulumi:"dns"`
	// Name of the Active Directory domain
	Domain *string `pulumi:"domain"`
	// The Organizational Unit (OU) within the Windows Active Directory
	OrganizationalUnit *string `pulumi:"organizationalUnit"`
	// Plain text password of Active Directory domain administrator
	Password *string `pulumi:"password"`
	// NetBIOS name of the SMB server. This name will be registered as a computer account in the AD and used to mount volumes
	SmbServerName *string `pulumi:"smbServerName"`
	// Status of the Active Directory
	Status *string `pulumi:"status"`
	// Username of Active Directory domain administrator
	Username *string `pulumi:"username"`
}

// ActiveDirectoryResponseInput is an input type that accepts ActiveDirectoryResponseArgs and ActiveDirectoryResponseOutput values.
// You can construct a concrete instance of `ActiveDirectoryResponseInput` via:
//
//          ActiveDirectoryResponseArgs{...}
type ActiveDirectoryResponseInput interface {
	pulumi.Input

	ToActiveDirectoryResponseOutput() ActiveDirectoryResponseOutput
	ToActiveDirectoryResponseOutputWithContext(context.Context) ActiveDirectoryResponseOutput
}

// Active Directory
type ActiveDirectoryResponseArgs struct {
	// Id of the Active Directory
	ActiveDirectoryId pulumi.StringPtrInput `pulumi:"activeDirectoryId"`
	// Comma separated list of DNS server IP addresses for the Active Directory domain
	Dns pulumi.StringPtrInput `pulumi:"dns"`
	// Name of the Active Directory domain
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// The Organizational Unit (OU) within the Windows Active Directory
	OrganizationalUnit pulumi.StringPtrInput `pulumi:"organizationalUnit"`
	// Plain text password of Active Directory domain administrator
	Password pulumi.StringPtrInput `pulumi:"password"`
	// NetBIOS name of the SMB server. This name will be registered as a computer account in the AD and used to mount volumes
	SmbServerName pulumi.StringPtrInput `pulumi:"smbServerName"`
	// Status of the Active Directory
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Username of Active Directory domain administrator
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ActiveDirectoryResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveDirectoryResponse)(nil)).Elem()
}

func (i ActiveDirectoryResponseArgs) ToActiveDirectoryResponseOutput() ActiveDirectoryResponseOutput {
	return i.ToActiveDirectoryResponseOutputWithContext(context.Background())
}

func (i ActiveDirectoryResponseArgs) ToActiveDirectoryResponseOutputWithContext(ctx context.Context) ActiveDirectoryResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActiveDirectoryResponseOutput)
}

// ActiveDirectoryResponseArrayInput is an input type that accepts ActiveDirectoryResponseArray and ActiveDirectoryResponseArrayOutput values.
// You can construct a concrete instance of `ActiveDirectoryResponseArrayInput` via:
//
//          ActiveDirectoryResponseArray{ ActiveDirectoryResponseArgs{...} }
type ActiveDirectoryResponseArrayInput interface {
	pulumi.Input

	ToActiveDirectoryResponseArrayOutput() ActiveDirectoryResponseArrayOutput
	ToActiveDirectoryResponseArrayOutputWithContext(context.Context) ActiveDirectoryResponseArrayOutput
}

type ActiveDirectoryResponseArray []ActiveDirectoryResponseInput

func (ActiveDirectoryResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActiveDirectoryResponse)(nil)).Elem()
}

func (i ActiveDirectoryResponseArray) ToActiveDirectoryResponseArrayOutput() ActiveDirectoryResponseArrayOutput {
	return i.ToActiveDirectoryResponseArrayOutputWithContext(context.Background())
}

func (i ActiveDirectoryResponseArray) ToActiveDirectoryResponseArrayOutputWithContext(ctx context.Context) ActiveDirectoryResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActiveDirectoryResponseArrayOutput)
}

// Active Directory
type ActiveDirectoryResponseOutput struct{ *pulumi.OutputState }

func (ActiveDirectoryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveDirectoryResponse)(nil)).Elem()
}

func (o ActiveDirectoryResponseOutput) ToActiveDirectoryResponseOutput() ActiveDirectoryResponseOutput {
	return o
}

func (o ActiveDirectoryResponseOutput) ToActiveDirectoryResponseOutputWithContext(ctx context.Context) ActiveDirectoryResponseOutput {
	return o
}

// Id of the Active Directory
func (o ActiveDirectoryResponseOutput) ActiveDirectoryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDirectoryResponse) *string { return v.ActiveDirectoryId }).(pulumi.StringPtrOutput)
}

// Comma separated list of DNS server IP addresses for the Active Directory domain
func (o ActiveDirectoryResponseOutput) Dns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDirectoryResponse) *string { return v.Dns }).(pulumi.StringPtrOutput)
}

// Name of the Active Directory domain
func (o ActiveDirectoryResponseOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDirectoryResponse) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// The Organizational Unit (OU) within the Windows Active Directory
func (o ActiveDirectoryResponseOutput) OrganizationalUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDirectoryResponse) *string { return v.OrganizationalUnit }).(pulumi.StringPtrOutput)
}

// Plain text password of Active Directory domain administrator
func (o ActiveDirectoryResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDirectoryResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// NetBIOS name of the SMB server. This name will be registered as a computer account in the AD and used to mount volumes
func (o ActiveDirectoryResponseOutput) SmbServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDirectoryResponse) *string { return v.SmbServerName }).(pulumi.StringPtrOutput)
}

// Status of the Active Directory
func (o ActiveDirectoryResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDirectoryResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Username of Active Directory domain administrator
func (o ActiveDirectoryResponseOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDirectoryResponse) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ActiveDirectoryResponseArrayOutput struct{ *pulumi.OutputState }

func (ActiveDirectoryResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActiveDirectoryResponse)(nil)).Elem()
}

func (o ActiveDirectoryResponseArrayOutput) ToActiveDirectoryResponseArrayOutput() ActiveDirectoryResponseArrayOutput {
	return o
}

func (o ActiveDirectoryResponseArrayOutput) ToActiveDirectoryResponseArrayOutputWithContext(ctx context.Context) ActiveDirectoryResponseArrayOutput {
	return o
}

func (o ActiveDirectoryResponseArrayOutput) Index(i pulumi.IntInput) ActiveDirectoryResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ActiveDirectoryResponse {
		return vs[0].([]ActiveDirectoryResponse)[vs[1].(int)]
	}).(ActiveDirectoryResponseOutput)
}

// Volume Export Policy Rule
type ExportPolicyRule struct {
	// Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names
	AllowedClients *string `pulumi:"allowedClients"`
	// Allows CIFS protocol
	Cifs *bool `pulumi:"cifs"`
	// Allows NFSv3 protocol
	Nfsv3 *bool `pulumi:"nfsv3"`
	// Deprecated: Will use the NFSv4.1 protocol, please use swagger version 2019-07-01 or later
	Nfsv4 *bool `pulumi:"nfsv4"`
	// Order index
	RuleIndex *int `pulumi:"ruleIndex"`
	// Read only access
	UnixReadOnly *bool `pulumi:"unixReadOnly"`
	// Read and write access
	UnixReadWrite *bool `pulumi:"unixReadWrite"`
}

// ExportPolicyRuleInput is an input type that accepts ExportPolicyRuleArgs and ExportPolicyRuleOutput values.
// You can construct a concrete instance of `ExportPolicyRuleInput` via:
//
//          ExportPolicyRuleArgs{...}
type ExportPolicyRuleInput interface {
	pulumi.Input

	ToExportPolicyRuleOutput() ExportPolicyRuleOutput
	ToExportPolicyRuleOutputWithContext(context.Context) ExportPolicyRuleOutput
}

// Volume Export Policy Rule
type ExportPolicyRuleArgs struct {
	// Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names
	AllowedClients pulumi.StringPtrInput `pulumi:"allowedClients"`
	// Allows CIFS protocol
	Cifs pulumi.BoolPtrInput `pulumi:"cifs"`
	// Allows NFSv3 protocol
	Nfsv3 pulumi.BoolPtrInput `pulumi:"nfsv3"`
	// Deprecated: Will use the NFSv4.1 protocol, please use swagger version 2019-07-01 or later
	Nfsv4 pulumi.BoolPtrInput `pulumi:"nfsv4"`
	// Order index
	RuleIndex pulumi.IntPtrInput `pulumi:"ruleIndex"`
	// Read only access
	UnixReadOnly pulumi.BoolPtrInput `pulumi:"unixReadOnly"`
	// Read and write access
	UnixReadWrite pulumi.BoolPtrInput `pulumi:"unixReadWrite"`
}

func (ExportPolicyRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExportPolicyRule)(nil)).Elem()
}

func (i ExportPolicyRuleArgs) ToExportPolicyRuleOutput() ExportPolicyRuleOutput {
	return i.ToExportPolicyRuleOutputWithContext(context.Background())
}

func (i ExportPolicyRuleArgs) ToExportPolicyRuleOutputWithContext(ctx context.Context) ExportPolicyRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExportPolicyRuleOutput)
}

// ExportPolicyRuleArrayInput is an input type that accepts ExportPolicyRuleArray and ExportPolicyRuleArrayOutput values.
// You can construct a concrete instance of `ExportPolicyRuleArrayInput` via:
//
//          ExportPolicyRuleArray{ ExportPolicyRuleArgs{...} }
type ExportPolicyRuleArrayInput interface {
	pulumi.Input

	ToExportPolicyRuleArrayOutput() ExportPolicyRuleArrayOutput
	ToExportPolicyRuleArrayOutputWithContext(context.Context) ExportPolicyRuleArrayOutput
}

type ExportPolicyRuleArray []ExportPolicyRuleInput

func (ExportPolicyRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExportPolicyRule)(nil)).Elem()
}

func (i ExportPolicyRuleArray) ToExportPolicyRuleArrayOutput() ExportPolicyRuleArrayOutput {
	return i.ToExportPolicyRuleArrayOutputWithContext(context.Background())
}

func (i ExportPolicyRuleArray) ToExportPolicyRuleArrayOutputWithContext(ctx context.Context) ExportPolicyRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExportPolicyRuleArrayOutput)
}

// Volume Export Policy Rule
type ExportPolicyRuleOutput struct{ *pulumi.OutputState }

func (ExportPolicyRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExportPolicyRule)(nil)).Elem()
}

func (o ExportPolicyRuleOutput) ToExportPolicyRuleOutput() ExportPolicyRuleOutput {
	return o
}

func (o ExportPolicyRuleOutput) ToExportPolicyRuleOutputWithContext(ctx context.Context) ExportPolicyRuleOutput {
	return o
}

// Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names
func (o ExportPolicyRuleOutput) AllowedClients() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExportPolicyRule) *string { return v.AllowedClients }).(pulumi.StringPtrOutput)
}

// Allows CIFS protocol
func (o ExportPolicyRuleOutput) Cifs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExportPolicyRule) *bool { return v.Cifs }).(pulumi.BoolPtrOutput)
}

// Allows NFSv3 protocol
func (o ExportPolicyRuleOutput) Nfsv3() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExportPolicyRule) *bool { return v.Nfsv3 }).(pulumi.BoolPtrOutput)
}

// Deprecated: Will use the NFSv4.1 protocol, please use swagger version 2019-07-01 or later
func (o ExportPolicyRuleOutput) Nfsv4() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExportPolicyRule) *bool { return v.Nfsv4 }).(pulumi.BoolPtrOutput)
}

// Order index
func (o ExportPolicyRuleOutput) RuleIndex() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExportPolicyRule) *int { return v.RuleIndex }).(pulumi.IntPtrOutput)
}

// Read only access
func (o ExportPolicyRuleOutput) UnixReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExportPolicyRule) *bool { return v.UnixReadOnly }).(pulumi.BoolPtrOutput)
}

// Read and write access
func (o ExportPolicyRuleOutput) UnixReadWrite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExportPolicyRule) *bool { return v.UnixReadWrite }).(pulumi.BoolPtrOutput)
}

type ExportPolicyRuleArrayOutput struct{ *pulumi.OutputState }

func (ExportPolicyRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExportPolicyRule)(nil)).Elem()
}

func (o ExportPolicyRuleArrayOutput) ToExportPolicyRuleArrayOutput() ExportPolicyRuleArrayOutput {
	return o
}

func (o ExportPolicyRuleArrayOutput) ToExportPolicyRuleArrayOutputWithContext(ctx context.Context) ExportPolicyRuleArrayOutput {
	return o
}

func (o ExportPolicyRuleArrayOutput) Index(i pulumi.IntInput) ExportPolicyRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExportPolicyRule {
		return vs[0].([]ExportPolicyRule)[vs[1].(int)]
	}).(ExportPolicyRuleOutput)
}

// Volume Export Policy Rule
type ExportPolicyRuleResponse struct {
	// Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names
	AllowedClients *string `pulumi:"allowedClients"`
	// Allows CIFS protocol
	Cifs *bool `pulumi:"cifs"`
	// Allows NFSv3 protocol
	Nfsv3 *bool `pulumi:"nfsv3"`
	// Deprecated: Will use the NFSv4.1 protocol, please use swagger version 2019-07-01 or later
	Nfsv4 *bool `pulumi:"nfsv4"`
	// Order index
	RuleIndex *int `pulumi:"ruleIndex"`
	// Read only access
	UnixReadOnly *bool `pulumi:"unixReadOnly"`
	// Read and write access
	UnixReadWrite *bool `pulumi:"unixReadWrite"`
}

// ExportPolicyRuleResponseInput is an input type that accepts ExportPolicyRuleResponseArgs and ExportPolicyRuleResponseOutput values.
// You can construct a concrete instance of `ExportPolicyRuleResponseInput` via:
//
//          ExportPolicyRuleResponseArgs{...}
type ExportPolicyRuleResponseInput interface {
	pulumi.Input

	ToExportPolicyRuleResponseOutput() ExportPolicyRuleResponseOutput
	ToExportPolicyRuleResponseOutputWithContext(context.Context) ExportPolicyRuleResponseOutput
}

// Volume Export Policy Rule
type ExportPolicyRuleResponseArgs struct {
	// Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names
	AllowedClients pulumi.StringPtrInput `pulumi:"allowedClients"`
	// Allows CIFS protocol
	Cifs pulumi.BoolPtrInput `pulumi:"cifs"`
	// Allows NFSv3 protocol
	Nfsv3 pulumi.BoolPtrInput `pulumi:"nfsv3"`
	// Deprecated: Will use the NFSv4.1 protocol, please use swagger version 2019-07-01 or later
	Nfsv4 pulumi.BoolPtrInput `pulumi:"nfsv4"`
	// Order index
	RuleIndex pulumi.IntPtrInput `pulumi:"ruleIndex"`
	// Read only access
	UnixReadOnly pulumi.BoolPtrInput `pulumi:"unixReadOnly"`
	// Read and write access
	UnixReadWrite pulumi.BoolPtrInput `pulumi:"unixReadWrite"`
}

func (ExportPolicyRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExportPolicyRuleResponse)(nil)).Elem()
}

func (i ExportPolicyRuleResponseArgs) ToExportPolicyRuleResponseOutput() ExportPolicyRuleResponseOutput {
	return i.ToExportPolicyRuleResponseOutputWithContext(context.Background())
}

func (i ExportPolicyRuleResponseArgs) ToExportPolicyRuleResponseOutputWithContext(ctx context.Context) ExportPolicyRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExportPolicyRuleResponseOutput)
}

// ExportPolicyRuleResponseArrayInput is an input type that accepts ExportPolicyRuleResponseArray and ExportPolicyRuleResponseArrayOutput values.
// You can construct a concrete instance of `ExportPolicyRuleResponseArrayInput` via:
//
//          ExportPolicyRuleResponseArray{ ExportPolicyRuleResponseArgs{...} }
type ExportPolicyRuleResponseArrayInput interface {
	pulumi.Input

	ToExportPolicyRuleResponseArrayOutput() ExportPolicyRuleResponseArrayOutput
	ToExportPolicyRuleResponseArrayOutputWithContext(context.Context) ExportPolicyRuleResponseArrayOutput
}

type ExportPolicyRuleResponseArray []ExportPolicyRuleResponseInput

func (ExportPolicyRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExportPolicyRuleResponse)(nil)).Elem()
}

func (i ExportPolicyRuleResponseArray) ToExportPolicyRuleResponseArrayOutput() ExportPolicyRuleResponseArrayOutput {
	return i.ToExportPolicyRuleResponseArrayOutputWithContext(context.Background())
}

func (i ExportPolicyRuleResponseArray) ToExportPolicyRuleResponseArrayOutputWithContext(ctx context.Context) ExportPolicyRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExportPolicyRuleResponseArrayOutput)
}

// Volume Export Policy Rule
type ExportPolicyRuleResponseOutput struct{ *pulumi.OutputState }

func (ExportPolicyRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExportPolicyRuleResponse)(nil)).Elem()
}

func (o ExportPolicyRuleResponseOutput) ToExportPolicyRuleResponseOutput() ExportPolicyRuleResponseOutput {
	return o
}

func (o ExportPolicyRuleResponseOutput) ToExportPolicyRuleResponseOutputWithContext(ctx context.Context) ExportPolicyRuleResponseOutput {
	return o
}

// Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names
func (o ExportPolicyRuleResponseOutput) AllowedClients() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExportPolicyRuleResponse) *string { return v.AllowedClients }).(pulumi.StringPtrOutput)
}

// Allows CIFS protocol
func (o ExportPolicyRuleResponseOutput) Cifs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExportPolicyRuleResponse) *bool { return v.Cifs }).(pulumi.BoolPtrOutput)
}

// Allows NFSv3 protocol
func (o ExportPolicyRuleResponseOutput) Nfsv3() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExportPolicyRuleResponse) *bool { return v.Nfsv3 }).(pulumi.BoolPtrOutput)
}

// Deprecated: Will use the NFSv4.1 protocol, please use swagger version 2019-07-01 or later
func (o ExportPolicyRuleResponseOutput) Nfsv4() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExportPolicyRuleResponse) *bool { return v.Nfsv4 }).(pulumi.BoolPtrOutput)
}

// Order index
func (o ExportPolicyRuleResponseOutput) RuleIndex() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExportPolicyRuleResponse) *int { return v.RuleIndex }).(pulumi.IntPtrOutput)
}

// Read only access
func (o ExportPolicyRuleResponseOutput) UnixReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExportPolicyRuleResponse) *bool { return v.UnixReadOnly }).(pulumi.BoolPtrOutput)
}

// Read and write access
func (o ExportPolicyRuleResponseOutput) UnixReadWrite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExportPolicyRuleResponse) *bool { return v.UnixReadWrite }).(pulumi.BoolPtrOutput)
}

type ExportPolicyRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (ExportPolicyRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExportPolicyRuleResponse)(nil)).Elem()
}

func (o ExportPolicyRuleResponseArrayOutput) ToExportPolicyRuleResponseArrayOutput() ExportPolicyRuleResponseArrayOutput {
	return o
}

func (o ExportPolicyRuleResponseArrayOutput) ToExportPolicyRuleResponseArrayOutputWithContext(ctx context.Context) ExportPolicyRuleResponseArrayOutput {
	return o
}

func (o ExportPolicyRuleResponseArrayOutput) Index(i pulumi.IntInput) ExportPolicyRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExportPolicyRuleResponse {
		return vs[0].([]ExportPolicyRuleResponse)[vs[1].(int)]
	}).(ExportPolicyRuleResponseOutput)
}

// Mount target properties
type MountTargetProperties struct {
	// The end of IPv4 address range to use when creating a new mount target
	EndIp *string `pulumi:"endIp"`
	// UUID v4 used to identify the MountTarget
	FileSystemId string `pulumi:"fileSystemId"`
	// The gateway of the IPv4 address range to use when creating a new mount target
	Gateway *string `pulumi:"gateway"`
	// The netmask of the IPv4 address range to use when creating a new mount target
	Netmask *string `pulumi:"netmask"`
	// The SMB server's Fully Qualified Domain Name, FQDN
	SmbServerFqdn *string `pulumi:"smbServerFqdn"`
	// The start of IPv4 address range to use when creating a new mount target
	StartIp *string `pulumi:"startIp"`
	// The subnet
	Subnet *string `pulumi:"subnet"`
}

// MountTargetPropertiesInput is an input type that accepts MountTargetPropertiesArgs and MountTargetPropertiesOutput values.
// You can construct a concrete instance of `MountTargetPropertiesInput` via:
//
//          MountTargetPropertiesArgs{...}
type MountTargetPropertiesInput interface {
	pulumi.Input

	ToMountTargetPropertiesOutput() MountTargetPropertiesOutput
	ToMountTargetPropertiesOutputWithContext(context.Context) MountTargetPropertiesOutput
}

// Mount target properties
type MountTargetPropertiesArgs struct {
	// The end of IPv4 address range to use when creating a new mount target
	EndIp pulumi.StringPtrInput `pulumi:"endIp"`
	// UUID v4 used to identify the MountTarget
	FileSystemId pulumi.StringInput `pulumi:"fileSystemId"`
	// The gateway of the IPv4 address range to use when creating a new mount target
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
	// The netmask of the IPv4 address range to use when creating a new mount target
	Netmask pulumi.StringPtrInput `pulumi:"netmask"`
	// The SMB server's Fully Qualified Domain Name, FQDN
	SmbServerFqdn pulumi.StringPtrInput `pulumi:"smbServerFqdn"`
	// The start of IPv4 address range to use when creating a new mount target
	StartIp pulumi.StringPtrInput `pulumi:"startIp"`
	// The subnet
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
}

func (MountTargetPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MountTargetProperties)(nil)).Elem()
}

func (i MountTargetPropertiesArgs) ToMountTargetPropertiesOutput() MountTargetPropertiesOutput {
	return i.ToMountTargetPropertiesOutputWithContext(context.Background())
}

func (i MountTargetPropertiesArgs) ToMountTargetPropertiesOutputWithContext(ctx context.Context) MountTargetPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MountTargetPropertiesOutput)
}

// Mount target properties
type MountTargetPropertiesOutput struct{ *pulumi.OutputState }

func (MountTargetPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MountTargetProperties)(nil)).Elem()
}

func (o MountTargetPropertiesOutput) ToMountTargetPropertiesOutput() MountTargetPropertiesOutput {
	return o
}

func (o MountTargetPropertiesOutput) ToMountTargetPropertiesOutputWithContext(ctx context.Context) MountTargetPropertiesOutput {
	return o
}

// The end of IPv4 address range to use when creating a new mount target
func (o MountTargetPropertiesOutput) EndIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountTargetProperties) *string { return v.EndIp }).(pulumi.StringPtrOutput)
}

// UUID v4 used to identify the MountTarget
func (o MountTargetPropertiesOutput) FileSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v MountTargetProperties) string { return v.FileSystemId }).(pulumi.StringOutput)
}

// The gateway of the IPv4 address range to use when creating a new mount target
func (o MountTargetPropertiesOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountTargetProperties) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

// The netmask of the IPv4 address range to use when creating a new mount target
func (o MountTargetPropertiesOutput) Netmask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountTargetProperties) *string { return v.Netmask }).(pulumi.StringPtrOutput)
}

// The SMB server's Fully Qualified Domain Name, FQDN
func (o MountTargetPropertiesOutput) SmbServerFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountTargetProperties) *string { return v.SmbServerFqdn }).(pulumi.StringPtrOutput)
}

// The start of IPv4 address range to use when creating a new mount target
func (o MountTargetPropertiesOutput) StartIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountTargetProperties) *string { return v.StartIp }).(pulumi.StringPtrOutput)
}

// The subnet
func (o MountTargetPropertiesOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountTargetProperties) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

// Mount target properties
type MountTargetPropertiesResponse struct {
	// The end of IPv4 address range to use when creating a new mount target
	EndIp *string `pulumi:"endIp"`
	// UUID v4 used to identify the MountTarget
	FileSystemId string `pulumi:"fileSystemId"`
	// The gateway of the IPv4 address range to use when creating a new mount target
	Gateway *string `pulumi:"gateway"`
	// The mount target's IPv4 address
	IpAddress string `pulumi:"ipAddress"`
	// UUID v4 used to identify the MountTarget
	MountTargetId string `pulumi:"mountTargetId"`
	// The netmask of the IPv4 address range to use when creating a new mount target
	Netmask *string `pulumi:"netmask"`
	// Azure lifecycle management
	ProvisioningState string `pulumi:"provisioningState"`
	// The SMB server's Fully Qualified Domain Name, FQDN
	SmbServerFqdn *string `pulumi:"smbServerFqdn"`
	// The start of IPv4 address range to use when creating a new mount target
	StartIp *string `pulumi:"startIp"`
	// The subnet
	Subnet *string `pulumi:"subnet"`
}

// MountTargetPropertiesResponseInput is an input type that accepts MountTargetPropertiesResponseArgs and MountTargetPropertiesResponseOutput values.
// You can construct a concrete instance of `MountTargetPropertiesResponseInput` via:
//
//          MountTargetPropertiesResponseArgs{...}
type MountTargetPropertiesResponseInput interface {
	pulumi.Input

	ToMountTargetPropertiesResponseOutput() MountTargetPropertiesResponseOutput
	ToMountTargetPropertiesResponseOutputWithContext(context.Context) MountTargetPropertiesResponseOutput
}

// Mount target properties
type MountTargetPropertiesResponseArgs struct {
	// The end of IPv4 address range to use when creating a new mount target
	EndIp pulumi.StringPtrInput `pulumi:"endIp"`
	// UUID v4 used to identify the MountTarget
	FileSystemId pulumi.StringInput `pulumi:"fileSystemId"`
	// The gateway of the IPv4 address range to use when creating a new mount target
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
	// The mount target's IPv4 address
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// UUID v4 used to identify the MountTarget
	MountTargetId pulumi.StringInput `pulumi:"mountTargetId"`
	// The netmask of the IPv4 address range to use when creating a new mount target
	Netmask pulumi.StringPtrInput `pulumi:"netmask"`
	// Azure lifecycle management
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The SMB server's Fully Qualified Domain Name, FQDN
	SmbServerFqdn pulumi.StringPtrInput `pulumi:"smbServerFqdn"`
	// The start of IPv4 address range to use when creating a new mount target
	StartIp pulumi.StringPtrInput `pulumi:"startIp"`
	// The subnet
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
}

func (MountTargetPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MountTargetPropertiesResponse)(nil)).Elem()
}

func (i MountTargetPropertiesResponseArgs) ToMountTargetPropertiesResponseOutput() MountTargetPropertiesResponseOutput {
	return i.ToMountTargetPropertiesResponseOutputWithContext(context.Background())
}

func (i MountTargetPropertiesResponseArgs) ToMountTargetPropertiesResponseOutputWithContext(ctx context.Context) MountTargetPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MountTargetPropertiesResponseOutput)
}

// MountTargetPropertiesResponseArrayInput is an input type that accepts MountTargetPropertiesResponseArray and MountTargetPropertiesResponseArrayOutput values.
// You can construct a concrete instance of `MountTargetPropertiesResponseArrayInput` via:
//
//          MountTargetPropertiesResponseArray{ MountTargetPropertiesResponseArgs{...} }
type MountTargetPropertiesResponseArrayInput interface {
	pulumi.Input

	ToMountTargetPropertiesResponseArrayOutput() MountTargetPropertiesResponseArrayOutput
	ToMountTargetPropertiesResponseArrayOutputWithContext(context.Context) MountTargetPropertiesResponseArrayOutput
}

type MountTargetPropertiesResponseArray []MountTargetPropertiesResponseInput

func (MountTargetPropertiesResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MountTargetPropertiesResponse)(nil)).Elem()
}

func (i MountTargetPropertiesResponseArray) ToMountTargetPropertiesResponseArrayOutput() MountTargetPropertiesResponseArrayOutput {
	return i.ToMountTargetPropertiesResponseArrayOutputWithContext(context.Background())
}

func (i MountTargetPropertiesResponseArray) ToMountTargetPropertiesResponseArrayOutputWithContext(ctx context.Context) MountTargetPropertiesResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MountTargetPropertiesResponseArrayOutput)
}

// Mount target properties
type MountTargetPropertiesResponseOutput struct{ *pulumi.OutputState }

func (MountTargetPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MountTargetPropertiesResponse)(nil)).Elem()
}

func (o MountTargetPropertiesResponseOutput) ToMountTargetPropertiesResponseOutput() MountTargetPropertiesResponseOutput {
	return o
}

func (o MountTargetPropertiesResponseOutput) ToMountTargetPropertiesResponseOutputWithContext(ctx context.Context) MountTargetPropertiesResponseOutput {
	return o
}

// The end of IPv4 address range to use when creating a new mount target
func (o MountTargetPropertiesResponseOutput) EndIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountTargetPropertiesResponse) *string { return v.EndIp }).(pulumi.StringPtrOutput)
}

// UUID v4 used to identify the MountTarget
func (o MountTargetPropertiesResponseOutput) FileSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v MountTargetPropertiesResponse) string { return v.FileSystemId }).(pulumi.StringOutput)
}

// The gateway of the IPv4 address range to use when creating a new mount target
func (o MountTargetPropertiesResponseOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountTargetPropertiesResponse) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

// The mount target's IPv4 address
func (o MountTargetPropertiesResponseOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v MountTargetPropertiesResponse) string { return v.IpAddress }).(pulumi.StringOutput)
}

// UUID v4 used to identify the MountTarget
func (o MountTargetPropertiesResponseOutput) MountTargetId() pulumi.StringOutput {
	return o.ApplyT(func(v MountTargetPropertiesResponse) string { return v.MountTargetId }).(pulumi.StringOutput)
}

// The netmask of the IPv4 address range to use when creating a new mount target
func (o MountTargetPropertiesResponseOutput) Netmask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountTargetPropertiesResponse) *string { return v.Netmask }).(pulumi.StringPtrOutput)
}

// Azure lifecycle management
func (o MountTargetPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v MountTargetPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The SMB server's Fully Qualified Domain Name, FQDN
func (o MountTargetPropertiesResponseOutput) SmbServerFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountTargetPropertiesResponse) *string { return v.SmbServerFqdn }).(pulumi.StringPtrOutput)
}

// The start of IPv4 address range to use when creating a new mount target
func (o MountTargetPropertiesResponseOutput) StartIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountTargetPropertiesResponse) *string { return v.StartIp }).(pulumi.StringPtrOutput)
}

// The subnet
func (o MountTargetPropertiesResponseOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountTargetPropertiesResponse) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

type MountTargetPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (MountTargetPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MountTargetPropertiesResponse)(nil)).Elem()
}

func (o MountTargetPropertiesResponseArrayOutput) ToMountTargetPropertiesResponseArrayOutput() MountTargetPropertiesResponseArrayOutput {
	return o
}

func (o MountTargetPropertiesResponseArrayOutput) ToMountTargetPropertiesResponseArrayOutputWithContext(ctx context.Context) MountTargetPropertiesResponseArrayOutput {
	return o
}

func (o MountTargetPropertiesResponseArrayOutput) Index(i pulumi.IntInput) MountTargetPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MountTargetPropertiesResponse {
		return vs[0].([]MountTargetPropertiesResponse)[vs[1].(int)]
	}).(MountTargetPropertiesResponseOutput)
}

// Pool properties
type PoolPropertiesResponse struct {
	// UUID v4 used to identify the Pool
	PoolId string `pulumi:"poolId"`
	// Azure lifecycle management
	ProvisioningState string `pulumi:"provisioningState"`
	// The service level of the file system
	ServiceLevel string `pulumi:"serviceLevel"`
	// Provisioned size of the pool (in bytes). Allowed values are in 4TiB chunks (value must be multiply of 4398046511104).
	Size int `pulumi:"size"`
}

// PoolPropertiesResponseInput is an input type that accepts PoolPropertiesResponseArgs and PoolPropertiesResponseOutput values.
// You can construct a concrete instance of `PoolPropertiesResponseInput` via:
//
//          PoolPropertiesResponseArgs{...}
type PoolPropertiesResponseInput interface {
	pulumi.Input

	ToPoolPropertiesResponseOutput() PoolPropertiesResponseOutput
	ToPoolPropertiesResponseOutputWithContext(context.Context) PoolPropertiesResponseOutput
}

// Pool properties
type PoolPropertiesResponseArgs struct {
	// UUID v4 used to identify the Pool
	PoolId pulumi.StringInput `pulumi:"poolId"`
	// Azure lifecycle management
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The service level of the file system
	ServiceLevel pulumi.StringInput `pulumi:"serviceLevel"`
	// Provisioned size of the pool (in bytes). Allowed values are in 4TiB chunks (value must be multiply of 4398046511104).
	Size pulumi.IntInput `pulumi:"size"`
}

func (PoolPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolPropertiesResponse)(nil)).Elem()
}

func (i PoolPropertiesResponseArgs) ToPoolPropertiesResponseOutput() PoolPropertiesResponseOutput {
	return i.ToPoolPropertiesResponseOutputWithContext(context.Background())
}

func (i PoolPropertiesResponseArgs) ToPoolPropertiesResponseOutputWithContext(ctx context.Context) PoolPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolPropertiesResponseOutput)
}

// Pool properties
type PoolPropertiesResponseOutput struct{ *pulumi.OutputState }

func (PoolPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolPropertiesResponse)(nil)).Elem()
}

func (o PoolPropertiesResponseOutput) ToPoolPropertiesResponseOutput() PoolPropertiesResponseOutput {
	return o
}

func (o PoolPropertiesResponseOutput) ToPoolPropertiesResponseOutputWithContext(ctx context.Context) PoolPropertiesResponseOutput {
	return o
}

// UUID v4 used to identify the Pool
func (o PoolPropertiesResponseOutput) PoolId() pulumi.StringOutput {
	return o.ApplyT(func(v PoolPropertiesResponse) string { return v.PoolId }).(pulumi.StringOutput)
}

// Azure lifecycle management
func (o PoolPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PoolPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The service level of the file system
func (o PoolPropertiesResponseOutput) ServiceLevel() pulumi.StringOutput {
	return o.ApplyT(func(v PoolPropertiesResponse) string { return v.ServiceLevel }).(pulumi.StringOutput)
}

// Provisioned size of the pool (in bytes). Allowed values are in 4TiB chunks (value must be multiply of 4398046511104).
func (o PoolPropertiesResponseOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v PoolPropertiesResponse) int { return v.Size }).(pulumi.IntOutput)
}

// Resource tags
type ResourceTags struct {
}

// ResourceTagsInput is an input type that accepts ResourceTagsArgs and ResourceTagsOutput values.
// You can construct a concrete instance of `ResourceTagsInput` via:
//
//          ResourceTagsArgs{...}
type ResourceTagsInput interface {
	pulumi.Input

	ToResourceTagsOutput() ResourceTagsOutput
	ToResourceTagsOutputWithContext(context.Context) ResourceTagsOutput
}

// Resource tags
type ResourceTagsArgs struct {
}

func (ResourceTagsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceTags)(nil)).Elem()
}

func (i ResourceTagsArgs) ToResourceTagsOutput() ResourceTagsOutput {
	return i.ToResourceTagsOutputWithContext(context.Background())
}

func (i ResourceTagsArgs) ToResourceTagsOutputWithContext(ctx context.Context) ResourceTagsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceTagsOutput)
}

// Resource tags
type ResourceTagsOutput struct{ *pulumi.OutputState }

func (ResourceTagsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceTags)(nil)).Elem()
}

func (o ResourceTagsOutput) ToResourceTagsOutput() ResourceTagsOutput {
	return o
}

func (o ResourceTagsOutput) ToResourceTagsOutputWithContext(ctx context.Context) ResourceTagsOutput {
	return o
}

// Resource tags
type ResourceTagsResponse struct {
}

// ResourceTagsResponseInput is an input type that accepts ResourceTagsResponseArgs and ResourceTagsResponseOutput values.
// You can construct a concrete instance of `ResourceTagsResponseInput` via:
//
//          ResourceTagsResponseArgs{...}
type ResourceTagsResponseInput interface {
	pulumi.Input

	ToResourceTagsResponseOutput() ResourceTagsResponseOutput
	ToResourceTagsResponseOutputWithContext(context.Context) ResourceTagsResponseOutput
}

// Resource tags
type ResourceTagsResponseArgs struct {
}

func (ResourceTagsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceTagsResponse)(nil)).Elem()
}

func (i ResourceTagsResponseArgs) ToResourceTagsResponseOutput() ResourceTagsResponseOutput {
	return i.ToResourceTagsResponseOutputWithContext(context.Background())
}

func (i ResourceTagsResponseArgs) ToResourceTagsResponseOutputWithContext(ctx context.Context) ResourceTagsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceTagsResponseOutput)
}

// Resource tags
type ResourceTagsResponseOutput struct{ *pulumi.OutputState }

func (ResourceTagsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceTagsResponse)(nil)).Elem()
}

func (o ResourceTagsResponseOutput) ToResourceTagsResponseOutput() ResourceTagsResponseOutput {
	return o
}

func (o ResourceTagsResponseOutput) ToResourceTagsResponseOutputWithContext(ctx context.Context) ResourceTagsResponseOutput {
	return o
}

// Snapshot properties
type SnapshotPropertiesResponse struct {
	// The creation date of the snapshot
	CreationDate string `pulumi:"creationDate"`
	// UUID v4 used to identify the FileSystem
	FileSystemId *string `pulumi:"fileSystemId"`
	// Azure lifecycle management
	ProvisioningState string `pulumi:"provisioningState"`
	// UUID v4 used to identify the Snapshot
	SnapshotId string `pulumi:"snapshotId"`
}

// SnapshotPropertiesResponseInput is an input type that accepts SnapshotPropertiesResponseArgs and SnapshotPropertiesResponseOutput values.
// You can construct a concrete instance of `SnapshotPropertiesResponseInput` via:
//
//          SnapshotPropertiesResponseArgs{...}
type SnapshotPropertiesResponseInput interface {
	pulumi.Input

	ToSnapshotPropertiesResponseOutput() SnapshotPropertiesResponseOutput
	ToSnapshotPropertiesResponseOutputWithContext(context.Context) SnapshotPropertiesResponseOutput
}

// Snapshot properties
type SnapshotPropertiesResponseArgs struct {
	// The creation date of the snapshot
	CreationDate pulumi.StringInput `pulumi:"creationDate"`
	// UUID v4 used to identify the FileSystem
	FileSystemId pulumi.StringPtrInput `pulumi:"fileSystemId"`
	// Azure lifecycle management
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// UUID v4 used to identify the Snapshot
	SnapshotId pulumi.StringInput `pulumi:"snapshotId"`
}

func (SnapshotPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotPropertiesResponse)(nil)).Elem()
}

func (i SnapshotPropertiesResponseArgs) ToSnapshotPropertiesResponseOutput() SnapshotPropertiesResponseOutput {
	return i.ToSnapshotPropertiesResponseOutputWithContext(context.Background())
}

func (i SnapshotPropertiesResponseArgs) ToSnapshotPropertiesResponseOutputWithContext(ctx context.Context) SnapshotPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotPropertiesResponseOutput)
}

// Snapshot properties
type SnapshotPropertiesResponseOutput struct{ *pulumi.OutputState }

func (SnapshotPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotPropertiesResponse)(nil)).Elem()
}

func (o SnapshotPropertiesResponseOutput) ToSnapshotPropertiesResponseOutput() SnapshotPropertiesResponseOutput {
	return o
}

func (o SnapshotPropertiesResponseOutput) ToSnapshotPropertiesResponseOutputWithContext(ctx context.Context) SnapshotPropertiesResponseOutput {
	return o
}

// The creation date of the snapshot
func (o SnapshotPropertiesResponseOutput) CreationDate() pulumi.StringOutput {
	return o.ApplyT(func(v SnapshotPropertiesResponse) string { return v.CreationDate }).(pulumi.StringOutput)
}

// UUID v4 used to identify the FileSystem
func (o SnapshotPropertiesResponseOutput) FileSystemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnapshotPropertiesResponse) *string { return v.FileSystemId }).(pulumi.StringPtrOutput)
}

// Azure lifecycle management
func (o SnapshotPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SnapshotPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// UUID v4 used to identify the Snapshot
func (o SnapshotPropertiesResponseOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v SnapshotPropertiesResponse) string { return v.SnapshotId }).(pulumi.StringOutput)
}

// Set of export policy rules
type VolumePropertiesProperties struct {
	// Export policy rule
	Rules []ExportPolicyRule `pulumi:"rules"`
}

// VolumePropertiesPropertiesInput is an input type that accepts VolumePropertiesPropertiesArgs and VolumePropertiesPropertiesOutput values.
// You can construct a concrete instance of `VolumePropertiesPropertiesInput` via:
//
//          VolumePropertiesPropertiesArgs{...}
type VolumePropertiesPropertiesInput interface {
	pulumi.Input

	ToVolumePropertiesPropertiesOutput() VolumePropertiesPropertiesOutput
	ToVolumePropertiesPropertiesOutputWithContext(context.Context) VolumePropertiesPropertiesOutput
}

// Set of export policy rules
type VolumePropertiesPropertiesArgs struct {
	// Export policy rule
	Rules ExportPolicyRuleArrayInput `pulumi:"rules"`
}

func (VolumePropertiesPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumePropertiesProperties)(nil)).Elem()
}

func (i VolumePropertiesPropertiesArgs) ToVolumePropertiesPropertiesOutput() VolumePropertiesPropertiesOutput {
	return i.ToVolumePropertiesPropertiesOutputWithContext(context.Background())
}

func (i VolumePropertiesPropertiesArgs) ToVolumePropertiesPropertiesOutputWithContext(ctx context.Context) VolumePropertiesPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumePropertiesPropertiesOutput)
}

// Set of export policy rules
type VolumePropertiesPropertiesOutput struct{ *pulumi.OutputState }

func (VolumePropertiesPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumePropertiesProperties)(nil)).Elem()
}

func (o VolumePropertiesPropertiesOutput) ToVolumePropertiesPropertiesOutput() VolumePropertiesPropertiesOutput {
	return o
}

func (o VolumePropertiesPropertiesOutput) ToVolumePropertiesPropertiesOutputWithContext(ctx context.Context) VolumePropertiesPropertiesOutput {
	return o
}

// Export policy rule
func (o VolumePropertiesPropertiesOutput) Rules() ExportPolicyRuleArrayOutput {
	return o.ApplyT(func(v VolumePropertiesProperties) []ExportPolicyRule { return v.Rules }).(ExportPolicyRuleArrayOutput)
}

// Volume properties
type VolumePropertiesResponse struct {
	// Unique Baremetal Tenant Identifier.
	BaremetalTenantId string `pulumi:"baremetalTenantId"`
	// A unique file path for the volume. Used when creating mount targets
	CreationToken string `pulumi:"creationToken"`
	// Set of export policy rules
	ExportPolicy *VolumePropertiesResponseProperties `pulumi:"exportPolicy"`
	// Unique FileSystem Identifier.
	FileSystemId string `pulumi:"fileSystemId"`
	// List of mount targets
	MountTargets []MountTargetPropertiesResponse `pulumi:"mountTargets"`
	// Set of protocol types
	ProtocolTypes []string `pulumi:"protocolTypes"`
	// Azure lifecycle management
	ProvisioningState string `pulumi:"provisioningState"`
	// The service level of the file system
	ServiceLevel *string `pulumi:"serviceLevel"`
	// UUID v4 used to identify the Snapshot
	SnapshotId *string `pulumi:"snapshotId"`
	// The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes
	SubnetId string `pulumi:"subnetId"`
	// Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB. Specified in bytes.
	UsageThreshold int `pulumi:"usageThreshold"`
}

// VolumePropertiesResponseInput is an input type that accepts VolumePropertiesResponseArgs and VolumePropertiesResponseOutput values.
// You can construct a concrete instance of `VolumePropertiesResponseInput` via:
//
//          VolumePropertiesResponseArgs{...}
type VolumePropertiesResponseInput interface {
	pulumi.Input

	ToVolumePropertiesResponseOutput() VolumePropertiesResponseOutput
	ToVolumePropertiesResponseOutputWithContext(context.Context) VolumePropertiesResponseOutput
}

// Volume properties
type VolumePropertiesResponseArgs struct {
	// Unique Baremetal Tenant Identifier.
	BaremetalTenantId pulumi.StringInput `pulumi:"baremetalTenantId"`
	// A unique file path for the volume. Used when creating mount targets
	CreationToken pulumi.StringInput `pulumi:"creationToken"`
	// Set of export policy rules
	ExportPolicy VolumePropertiesResponsePropertiesPtrInput `pulumi:"exportPolicy"`
	// Unique FileSystem Identifier.
	FileSystemId pulumi.StringInput `pulumi:"fileSystemId"`
	// List of mount targets
	MountTargets MountTargetPropertiesResponseArrayInput `pulumi:"mountTargets"`
	// Set of protocol types
	ProtocolTypes pulumi.StringArrayInput `pulumi:"protocolTypes"`
	// Azure lifecycle management
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The service level of the file system
	ServiceLevel pulumi.StringPtrInput `pulumi:"serviceLevel"`
	// UUID v4 used to identify the Snapshot
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	// The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB. Specified in bytes.
	UsageThreshold pulumi.IntInput `pulumi:"usageThreshold"`
}

func (VolumePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumePropertiesResponse)(nil)).Elem()
}

func (i VolumePropertiesResponseArgs) ToVolumePropertiesResponseOutput() VolumePropertiesResponseOutput {
	return i.ToVolumePropertiesResponseOutputWithContext(context.Background())
}

func (i VolumePropertiesResponseArgs) ToVolumePropertiesResponseOutputWithContext(ctx context.Context) VolumePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumePropertiesResponseOutput)
}

// Volume properties
type VolumePropertiesResponseOutput struct{ *pulumi.OutputState }

func (VolumePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumePropertiesResponse)(nil)).Elem()
}

func (o VolumePropertiesResponseOutput) ToVolumePropertiesResponseOutput() VolumePropertiesResponseOutput {
	return o
}

func (o VolumePropertiesResponseOutput) ToVolumePropertiesResponseOutputWithContext(ctx context.Context) VolumePropertiesResponseOutput {
	return o
}

// Unique Baremetal Tenant Identifier.
func (o VolumePropertiesResponseOutput) BaremetalTenantId() pulumi.StringOutput {
	return o.ApplyT(func(v VolumePropertiesResponse) string { return v.BaremetalTenantId }).(pulumi.StringOutput)
}

// A unique file path for the volume. Used when creating mount targets
func (o VolumePropertiesResponseOutput) CreationToken() pulumi.StringOutput {
	return o.ApplyT(func(v VolumePropertiesResponse) string { return v.CreationToken }).(pulumi.StringOutput)
}

// Set of export policy rules
func (o VolumePropertiesResponseOutput) ExportPolicy() VolumePropertiesResponsePropertiesPtrOutput {
	return o.ApplyT(func(v VolumePropertiesResponse) *VolumePropertiesResponseProperties { return v.ExportPolicy }).(VolumePropertiesResponsePropertiesPtrOutput)
}

// Unique FileSystem Identifier.
func (o VolumePropertiesResponseOutput) FileSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v VolumePropertiesResponse) string { return v.FileSystemId }).(pulumi.StringOutput)
}

// List of mount targets
func (o VolumePropertiesResponseOutput) MountTargets() MountTargetPropertiesResponseArrayOutput {
	return o.ApplyT(func(v VolumePropertiesResponse) []MountTargetPropertiesResponse { return v.MountTargets }).(MountTargetPropertiesResponseArrayOutput)
}

// Set of protocol types
func (o VolumePropertiesResponseOutput) ProtocolTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VolumePropertiesResponse) []string { return v.ProtocolTypes }).(pulumi.StringArrayOutput)
}

// Azure lifecycle management
func (o VolumePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VolumePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The service level of the file system
func (o VolumePropertiesResponseOutput) ServiceLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumePropertiesResponse) *string { return v.ServiceLevel }).(pulumi.StringPtrOutput)
}

// UUID v4 used to identify the Snapshot
func (o VolumePropertiesResponseOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumePropertiesResponse) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes
func (o VolumePropertiesResponseOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v VolumePropertiesResponse) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB. Specified in bytes.
func (o VolumePropertiesResponseOutput) UsageThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v VolumePropertiesResponse) int { return v.UsageThreshold }).(pulumi.IntOutput)
}

// Set of export policy rules
type VolumePropertiesResponseProperties struct {
	// Export policy rule
	Rules []ExportPolicyRuleResponse `pulumi:"rules"`
}

// VolumePropertiesResponsePropertiesInput is an input type that accepts VolumePropertiesResponsePropertiesArgs and VolumePropertiesResponsePropertiesOutput values.
// You can construct a concrete instance of `VolumePropertiesResponsePropertiesInput` via:
//
//          VolumePropertiesResponsePropertiesArgs{...}
type VolumePropertiesResponsePropertiesInput interface {
	pulumi.Input

	ToVolumePropertiesResponsePropertiesOutput() VolumePropertiesResponsePropertiesOutput
	ToVolumePropertiesResponsePropertiesOutputWithContext(context.Context) VolumePropertiesResponsePropertiesOutput
}

// Set of export policy rules
type VolumePropertiesResponsePropertiesArgs struct {
	// Export policy rule
	Rules ExportPolicyRuleResponseArrayInput `pulumi:"rules"`
}

func (VolumePropertiesResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumePropertiesResponseProperties)(nil)).Elem()
}

func (i VolumePropertiesResponsePropertiesArgs) ToVolumePropertiesResponsePropertiesOutput() VolumePropertiesResponsePropertiesOutput {
	return i.ToVolumePropertiesResponsePropertiesOutputWithContext(context.Background())
}

func (i VolumePropertiesResponsePropertiesArgs) ToVolumePropertiesResponsePropertiesOutputWithContext(ctx context.Context) VolumePropertiesResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumePropertiesResponsePropertiesOutput)
}

func (i VolumePropertiesResponsePropertiesArgs) ToVolumePropertiesResponsePropertiesPtrOutput() VolumePropertiesResponsePropertiesPtrOutput {
	return i.ToVolumePropertiesResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i VolumePropertiesResponsePropertiesArgs) ToVolumePropertiesResponsePropertiesPtrOutputWithContext(ctx context.Context) VolumePropertiesResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumePropertiesResponsePropertiesOutput).ToVolumePropertiesResponsePropertiesPtrOutputWithContext(ctx)
}

// VolumePropertiesResponsePropertiesPtrInput is an input type that accepts VolumePropertiesResponsePropertiesArgs, VolumePropertiesResponsePropertiesPtr and VolumePropertiesResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `VolumePropertiesResponsePropertiesPtrInput` via:
//
//          VolumePropertiesResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type VolumePropertiesResponsePropertiesPtrInput interface {
	pulumi.Input

	ToVolumePropertiesResponsePropertiesPtrOutput() VolumePropertiesResponsePropertiesPtrOutput
	ToVolumePropertiesResponsePropertiesPtrOutputWithContext(context.Context) VolumePropertiesResponsePropertiesPtrOutput
}

type volumePropertiesResponsePropertiesPtrType VolumePropertiesResponsePropertiesArgs

func VolumePropertiesResponsePropertiesPtr(v *VolumePropertiesResponsePropertiesArgs) VolumePropertiesResponsePropertiesPtrInput {
	return (*volumePropertiesResponsePropertiesPtrType)(v)
}

func (*volumePropertiesResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumePropertiesResponseProperties)(nil)).Elem()
}

func (i *volumePropertiesResponsePropertiesPtrType) ToVolumePropertiesResponsePropertiesPtrOutput() VolumePropertiesResponsePropertiesPtrOutput {
	return i.ToVolumePropertiesResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *volumePropertiesResponsePropertiesPtrType) ToVolumePropertiesResponsePropertiesPtrOutputWithContext(ctx context.Context) VolumePropertiesResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumePropertiesResponsePropertiesPtrOutput)
}

// Set of export policy rules
type VolumePropertiesResponsePropertiesOutput struct{ *pulumi.OutputState }

func (VolumePropertiesResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumePropertiesResponseProperties)(nil)).Elem()
}

func (o VolumePropertiesResponsePropertiesOutput) ToVolumePropertiesResponsePropertiesOutput() VolumePropertiesResponsePropertiesOutput {
	return o
}

func (o VolumePropertiesResponsePropertiesOutput) ToVolumePropertiesResponsePropertiesOutputWithContext(ctx context.Context) VolumePropertiesResponsePropertiesOutput {
	return o
}

func (o VolumePropertiesResponsePropertiesOutput) ToVolumePropertiesResponsePropertiesPtrOutput() VolumePropertiesResponsePropertiesPtrOutput {
	return o.ToVolumePropertiesResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o VolumePropertiesResponsePropertiesOutput) ToVolumePropertiesResponsePropertiesPtrOutputWithContext(ctx context.Context) VolumePropertiesResponsePropertiesPtrOutput {
	return o.ApplyT(func(v VolumePropertiesResponseProperties) *VolumePropertiesResponseProperties {
		return &v
	}).(VolumePropertiesResponsePropertiesPtrOutput)
}

// Export policy rule
func (o VolumePropertiesResponsePropertiesOutput) Rules() ExportPolicyRuleResponseArrayOutput {
	return o.ApplyT(func(v VolumePropertiesResponseProperties) []ExportPolicyRuleResponse { return v.Rules }).(ExportPolicyRuleResponseArrayOutput)
}

type VolumePropertiesResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (VolumePropertiesResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumePropertiesResponseProperties)(nil)).Elem()
}

func (o VolumePropertiesResponsePropertiesPtrOutput) ToVolumePropertiesResponsePropertiesPtrOutput() VolumePropertiesResponsePropertiesPtrOutput {
	return o
}

func (o VolumePropertiesResponsePropertiesPtrOutput) ToVolumePropertiesResponsePropertiesPtrOutputWithContext(ctx context.Context) VolumePropertiesResponsePropertiesPtrOutput {
	return o
}

func (o VolumePropertiesResponsePropertiesPtrOutput) Elem() VolumePropertiesResponsePropertiesOutput {
	return o.ApplyT(func(v *VolumePropertiesResponseProperties) VolumePropertiesResponseProperties { return *v }).(VolumePropertiesResponsePropertiesOutput)
}

// Export policy rule
func (o VolumePropertiesResponsePropertiesPtrOutput) Rules() ExportPolicyRuleResponseArrayOutput {
	return o.ApplyT(func(v *VolumePropertiesResponseProperties) []ExportPolicyRuleResponse {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(ExportPolicyRuleResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(AccountPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ActiveDirectoryOutput{})
	pulumi.RegisterOutputType(ActiveDirectoryResponseOutput{})
	pulumi.RegisterOutputType(ActiveDirectoryResponseArrayOutput{})
	pulumi.RegisterOutputType(ExportPolicyRuleOutput{})
	pulumi.RegisterOutputType(ExportPolicyRuleArrayOutput{})
	pulumi.RegisterOutputType(ExportPolicyRuleResponseOutput{})
	pulumi.RegisterOutputType(ExportPolicyRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(MountTargetPropertiesOutput{})
	pulumi.RegisterOutputType(MountTargetPropertiesResponseOutput{})
	pulumi.RegisterOutputType(MountTargetPropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(PoolPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ResourceTagsOutput{})
	pulumi.RegisterOutputType(ResourceTagsResponseOutput{})
	pulumi.RegisterOutputType(SnapshotPropertiesResponseOutput{})
	pulumi.RegisterOutputType(VolumePropertiesPropertiesOutput{})
	pulumi.RegisterOutputType(VolumePropertiesResponseOutput{})
	pulumi.RegisterOutputType(VolumePropertiesResponsePropertiesOutput{})
	pulumi.RegisterOutputType(VolumePropertiesResponsePropertiesPtrOutput{})
}
