// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20190701

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// NetApp account resource
type AccountType struct {
	// Resource location
	Location string `pulumi:"location"`
	// Resource name
	Name string `pulumi:"name"`
	// NetApp Account properties
	Properties AccountPropertiesResponse `pulumi:"properties"`
	// Resource tags
	Tags *ResourceTagsResponse `pulumi:"tags"`
	// Resource type
	Type string `pulumi:"type"`
}

// AccountTypeInput is an input type that accepts AccountTypeArgs and AccountTypeOutput values.
// You can construct a concrete instance of `AccountTypeInput` via:
//
//          AccountTypeArgs{...}
type AccountTypeInput interface {
	pulumi.Input

	ToAccountTypeOutput() AccountTypeOutput
	ToAccountTypeOutputWithContext(context.Context) AccountTypeOutput
}

// NetApp account resource
type AccountTypeArgs struct {
	// Resource location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource name
	Name pulumi.StringInput `pulumi:"name"`
	// NetApp Account properties
	Properties AccountPropertiesResponseInput `pulumi:"properties"`
	// Resource tags
	Tags ResourceTagsResponsePtrInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringInput `pulumi:"type"`
}

func (AccountTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountType)(nil)).Elem()
}

func (i AccountTypeArgs) ToAccountTypeOutput() AccountTypeOutput {
	return i.ToAccountTypeOutputWithContext(context.Background())
}

func (i AccountTypeArgs) ToAccountTypeOutputWithContext(ctx context.Context) AccountTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountTypeOutput)
}

// NetApp account resource
type AccountTypeOutput struct{ *pulumi.OutputState }

func (AccountTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountType)(nil)).Elem()
}

func (o AccountTypeOutput) ToAccountTypeOutput() AccountTypeOutput {
	return o
}

func (o AccountTypeOutput) ToAccountTypeOutputWithContext(ctx context.Context) AccountTypeOutput {
	return o
}

// Resource location
func (o AccountTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v AccountType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource name
func (o AccountTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AccountType) string { return v.Name }).(pulumi.StringOutput)
}

// NetApp Account properties
func (o AccountTypeOutput) Properties() AccountPropertiesResponseOutput {
	return o.ApplyT(func(v AccountType) AccountPropertiesResponse { return v.Properties }).(AccountPropertiesResponseOutput)
}

// Resource tags
func (o AccountTypeOutput) Tags() ResourceTagsResponsePtrOutput {
	return o.ApplyT(func(v AccountType) *ResourceTagsResponse { return v.Tags }).(ResourceTagsResponsePtrOutput)
}

// Resource type
func (o AccountTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AccountType) string { return v.Type }).(pulumi.StringOutput)
}

// Capacity pool resource
type PoolType struct {
	// Resource location
	Location string `pulumi:"location"`
	// Resource name
	Name string `pulumi:"name"`
	// Capacity pool properties
	Properties PoolPropertiesResponse `pulumi:"properties"`
	// Resource tags
	Tags *ResourceTagsResponse `pulumi:"tags"`
	// Resource type
	Type string `pulumi:"type"`
}

// PoolTypeInput is an input type that accepts PoolTypeArgs and PoolTypeOutput values.
// You can construct a concrete instance of `PoolTypeInput` via:
//
//          PoolTypeArgs{...}
type PoolTypeInput interface {
	pulumi.Input

	ToPoolTypeOutput() PoolTypeOutput
	ToPoolTypeOutputWithContext(context.Context) PoolTypeOutput
}

// Capacity pool resource
type PoolTypeArgs struct {
	// Resource location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource name
	Name pulumi.StringInput `pulumi:"name"`
	// Capacity pool properties
	Properties PoolPropertiesResponseInput `pulumi:"properties"`
	// Resource tags
	Tags ResourceTagsResponsePtrInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringInput `pulumi:"type"`
}

func (PoolTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolType)(nil)).Elem()
}

func (i PoolTypeArgs) ToPoolTypeOutput() PoolTypeOutput {
	return i.ToPoolTypeOutputWithContext(context.Background())
}

func (i PoolTypeArgs) ToPoolTypeOutputWithContext(ctx context.Context) PoolTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolTypeOutput)
}

// Capacity pool resource
type PoolTypeOutput struct{ *pulumi.OutputState }

func (PoolTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolType)(nil)).Elem()
}

func (o PoolTypeOutput) ToPoolTypeOutput() PoolTypeOutput {
	return o
}

func (o PoolTypeOutput) ToPoolTypeOutputWithContext(ctx context.Context) PoolTypeOutput {
	return o
}

// Resource location
func (o PoolTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v PoolType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource name
func (o PoolTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PoolType) string { return v.Name }).(pulumi.StringOutput)
}

// Capacity pool properties
func (o PoolTypeOutput) Properties() PoolPropertiesResponseOutput {
	return o.ApplyT(func(v PoolType) PoolPropertiesResponse { return v.Properties }).(PoolPropertiesResponseOutput)
}

// Resource tags
func (o PoolTypeOutput) Tags() ResourceTagsResponsePtrOutput {
	return o.ApplyT(func(v PoolType) *ResourceTagsResponse { return v.Tags }).(ResourceTagsResponsePtrOutput)
}

// Resource type
func (o PoolTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PoolType) string { return v.Type }).(pulumi.StringOutput)
}

// Snapshot of a Volume
type SnapshotType struct {
	// Resource location
	Location string `pulumi:"location"`
	// Resource name
	Name string `pulumi:"name"`
	// Snapshot Properties
	Properties SnapshotPropertiesResponse `pulumi:"properties"`
	// Resource tags
	Tags *ResourceTagsResponse `pulumi:"tags"`
	// Resource type
	Type string `pulumi:"type"`
}

// SnapshotTypeInput is an input type that accepts SnapshotTypeArgs and SnapshotTypeOutput values.
// You can construct a concrete instance of `SnapshotTypeInput` via:
//
//          SnapshotTypeArgs{...}
type SnapshotTypeInput interface {
	pulumi.Input

	ToSnapshotTypeOutput() SnapshotTypeOutput
	ToSnapshotTypeOutputWithContext(context.Context) SnapshotTypeOutput
}

// Snapshot of a Volume
type SnapshotTypeArgs struct {
	// Resource location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource name
	Name pulumi.StringInput `pulumi:"name"`
	// Snapshot Properties
	Properties SnapshotPropertiesResponseInput `pulumi:"properties"`
	// Resource tags
	Tags ResourceTagsResponsePtrInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringInput `pulumi:"type"`
}

func (SnapshotTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotType)(nil)).Elem()
}

func (i SnapshotTypeArgs) ToSnapshotTypeOutput() SnapshotTypeOutput {
	return i.ToSnapshotTypeOutputWithContext(context.Background())
}

func (i SnapshotTypeArgs) ToSnapshotTypeOutputWithContext(ctx context.Context) SnapshotTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotTypeOutput)
}

// Snapshot of a Volume
type SnapshotTypeOutput struct{ *pulumi.OutputState }

func (SnapshotTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotType)(nil)).Elem()
}

func (o SnapshotTypeOutput) ToSnapshotTypeOutput() SnapshotTypeOutput {
	return o
}

func (o SnapshotTypeOutput) ToSnapshotTypeOutputWithContext(ctx context.Context) SnapshotTypeOutput {
	return o
}

// Resource location
func (o SnapshotTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v SnapshotType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource name
func (o SnapshotTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SnapshotType) string { return v.Name }).(pulumi.StringOutput)
}

// Snapshot Properties
func (o SnapshotTypeOutput) Properties() SnapshotPropertiesResponseOutput {
	return o.ApplyT(func(v SnapshotType) SnapshotPropertiesResponse { return v.Properties }).(SnapshotPropertiesResponseOutput)
}

// Resource tags
func (o SnapshotTypeOutput) Tags() ResourceTagsResponsePtrOutput {
	return o.ApplyT(func(v SnapshotType) *ResourceTagsResponse { return v.Tags }).(ResourceTagsResponsePtrOutput)
}

// Resource type
func (o SnapshotTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SnapshotType) string { return v.Type }).(pulumi.StringOutput)
}

// Volume resource
type VolumeType struct {
	// Resource location
	Location string `pulumi:"location"`
	// Resource name
	Name string `pulumi:"name"`
	// Volume properties
	Properties VolumePropertiesResponse `pulumi:"properties"`
	// Resource tags
	Tags *ResourceTagsResponse `pulumi:"tags"`
	// Resource type
	Type string `pulumi:"type"`
}

// VolumeTypeInput is an input type that accepts VolumeTypeArgs and VolumeTypeOutput values.
// You can construct a concrete instance of `VolumeTypeInput` via:
//
//          VolumeTypeArgs{...}
type VolumeTypeInput interface {
	pulumi.Input

	ToVolumeTypeOutput() VolumeTypeOutput
	ToVolumeTypeOutputWithContext(context.Context) VolumeTypeOutput
}

// Volume resource
type VolumeTypeArgs struct {
	// Resource location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource name
	Name pulumi.StringInput `pulumi:"name"`
	// Volume properties
	Properties VolumePropertiesResponseInput `pulumi:"properties"`
	// Resource tags
	Tags ResourceTagsResponsePtrInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringInput `pulumi:"type"`
}

func (VolumeTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeType)(nil)).Elem()
}

func (i VolumeTypeArgs) ToVolumeTypeOutput() VolumeTypeOutput {
	return i.ToVolumeTypeOutputWithContext(context.Background())
}

func (i VolumeTypeArgs) ToVolumeTypeOutputWithContext(ctx context.Context) VolumeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeTypeOutput)
}

// Volume resource
type VolumeTypeOutput struct{ *pulumi.OutputState }

func (VolumeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeType)(nil)).Elem()
}

func (o VolumeTypeOutput) ToVolumeTypeOutput() VolumeTypeOutput {
	return o
}

func (o VolumeTypeOutput) ToVolumeTypeOutputWithContext(ctx context.Context) VolumeTypeOutput {
	return o
}

// Resource location
func (o VolumeTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v VolumeType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource name
func (o VolumeTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VolumeType) string { return v.Name }).(pulumi.StringOutput)
}

// Volume properties
func (o VolumeTypeOutput) Properties() VolumePropertiesResponseOutput {
	return o.ApplyT(func(v VolumeType) VolumePropertiesResponse { return v.Properties }).(VolumePropertiesResponseOutput)
}

// Resource tags
func (o VolumeTypeOutput) Tags() ResourceTagsResponsePtrOutput {
	return o.ApplyT(func(v VolumeType) *ResourceTagsResponse { return v.Tags }).(ResourceTagsResponsePtrOutput)
}

// Resource type
func (o VolumeTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VolumeType) string { return v.Type }).(pulumi.StringOutput)
}

// NetApp account properties
type AccountProperties struct {
	// Active Directories
	ActiveDirectories []ActiveDirectory `pulumi:"activeDirectories"`
}

// AccountPropertiesInput is an input type that accepts AccountPropertiesArgs and AccountPropertiesOutput values.
// You can construct a concrete instance of `AccountPropertiesInput` via:
//
//          AccountPropertiesArgs{...}
type AccountPropertiesInput interface {
	pulumi.Input

	ToAccountPropertiesOutput() AccountPropertiesOutput
	ToAccountPropertiesOutputWithContext(context.Context) AccountPropertiesOutput
}

// NetApp account properties
type AccountPropertiesArgs struct {
	// Active Directories
	ActiveDirectories ActiveDirectoryArrayInput `pulumi:"activeDirectories"`
}

func (AccountPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountProperties)(nil)).Elem()
}

func (i AccountPropertiesArgs) ToAccountPropertiesOutput() AccountPropertiesOutput {
	return i.ToAccountPropertiesOutputWithContext(context.Background())
}

func (i AccountPropertiesArgs) ToAccountPropertiesOutputWithContext(ctx context.Context) AccountPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountPropertiesOutput)
}

func (i AccountPropertiesArgs) ToAccountPropertiesPtrOutput() AccountPropertiesPtrOutput {
	return i.ToAccountPropertiesPtrOutputWithContext(context.Background())
}

func (i AccountPropertiesArgs) ToAccountPropertiesPtrOutputWithContext(ctx context.Context) AccountPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountPropertiesOutput).ToAccountPropertiesPtrOutputWithContext(ctx)
}

// AccountPropertiesPtrInput is an input type that accepts AccountPropertiesArgs, AccountPropertiesPtr and AccountPropertiesPtrOutput values.
// You can construct a concrete instance of `AccountPropertiesPtrInput` via:
//
//          AccountPropertiesArgs{...}
//
//  or:
//
//          nil
type AccountPropertiesPtrInput interface {
	pulumi.Input

	ToAccountPropertiesPtrOutput() AccountPropertiesPtrOutput
	ToAccountPropertiesPtrOutputWithContext(context.Context) AccountPropertiesPtrOutput
}

type accountPropertiesPtrType AccountPropertiesArgs

func AccountPropertiesPtr(v *AccountPropertiesArgs) AccountPropertiesPtrInput {
	return (*accountPropertiesPtrType)(v)
}

func (*accountPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountProperties)(nil)).Elem()
}

func (i *accountPropertiesPtrType) ToAccountPropertiesPtrOutput() AccountPropertiesPtrOutput {
	return i.ToAccountPropertiesPtrOutputWithContext(context.Background())
}

func (i *accountPropertiesPtrType) ToAccountPropertiesPtrOutputWithContext(ctx context.Context) AccountPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountPropertiesPtrOutput)
}

// NetApp account properties
type AccountPropertiesOutput struct{ *pulumi.OutputState }

func (AccountPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountProperties)(nil)).Elem()
}

func (o AccountPropertiesOutput) ToAccountPropertiesOutput() AccountPropertiesOutput {
	return o
}

func (o AccountPropertiesOutput) ToAccountPropertiesOutputWithContext(ctx context.Context) AccountPropertiesOutput {
	return o
}

func (o AccountPropertiesOutput) ToAccountPropertiesPtrOutput() AccountPropertiesPtrOutput {
	return o.ToAccountPropertiesPtrOutputWithContext(context.Background())
}

func (o AccountPropertiesOutput) ToAccountPropertiesPtrOutputWithContext(ctx context.Context) AccountPropertiesPtrOutput {
	return o.ApplyT(func(v AccountProperties) *AccountProperties {
		return &v
	}).(AccountPropertiesPtrOutput)
}

// Active Directories
func (o AccountPropertiesOutput) ActiveDirectories() ActiveDirectoryArrayOutput {
	return o.ApplyT(func(v AccountProperties) []ActiveDirectory { return v.ActiveDirectories }).(ActiveDirectoryArrayOutput)
}

type AccountPropertiesPtrOutput struct{ *pulumi.OutputState }

func (AccountPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountProperties)(nil)).Elem()
}

func (o AccountPropertiesPtrOutput) ToAccountPropertiesPtrOutput() AccountPropertiesPtrOutput {
	return o
}

func (o AccountPropertiesPtrOutput) ToAccountPropertiesPtrOutputWithContext(ctx context.Context) AccountPropertiesPtrOutput {
	return o
}

func (o AccountPropertiesPtrOutput) Elem() AccountPropertiesOutput {
	return o.ApplyT(func(v *AccountProperties) AccountProperties { return *v }).(AccountPropertiesOutput)
}

// Active Directories
func (o AccountPropertiesPtrOutput) ActiveDirectories() ActiveDirectoryArrayOutput {
	return o.ApplyT(func(v *AccountProperties) []ActiveDirectory {
		if v == nil {
			return nil
		}
		return v.ActiveDirectories
	}).(ActiveDirectoryArrayOutput)
}

// NetApp account properties
type AccountPropertiesResponse struct {
	// Active Directories
	ActiveDirectories []ActiveDirectoryResponse `pulumi:"activeDirectories"`
	// Azure lifecycle management
	ProvisioningState string `pulumi:"provisioningState"`
}

// AccountPropertiesResponseInput is an input type that accepts AccountPropertiesResponseArgs and AccountPropertiesResponseOutput values.
// You can construct a concrete instance of `AccountPropertiesResponseInput` via:
//
//          AccountPropertiesResponseArgs{...}
type AccountPropertiesResponseInput interface {
	pulumi.Input

	ToAccountPropertiesResponseOutput() AccountPropertiesResponseOutput
	ToAccountPropertiesResponseOutputWithContext(context.Context) AccountPropertiesResponseOutput
}

// NetApp account properties
type AccountPropertiesResponseArgs struct {
	// Active Directories
	ActiveDirectories ActiveDirectoryResponseArrayInput `pulumi:"activeDirectories"`
	// Azure lifecycle management
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
}

func (AccountPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountPropertiesResponse)(nil)).Elem()
}

func (i AccountPropertiesResponseArgs) ToAccountPropertiesResponseOutput() AccountPropertiesResponseOutput {
	return i.ToAccountPropertiesResponseOutputWithContext(context.Background())
}

func (i AccountPropertiesResponseArgs) ToAccountPropertiesResponseOutputWithContext(ctx context.Context) AccountPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountPropertiesResponseOutput)
}

func (i AccountPropertiesResponseArgs) ToAccountPropertiesResponsePtrOutput() AccountPropertiesResponsePtrOutput {
	return i.ToAccountPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i AccountPropertiesResponseArgs) ToAccountPropertiesResponsePtrOutputWithContext(ctx context.Context) AccountPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountPropertiesResponseOutput).ToAccountPropertiesResponsePtrOutputWithContext(ctx)
}

// AccountPropertiesResponsePtrInput is an input type that accepts AccountPropertiesResponseArgs, AccountPropertiesResponsePtr and AccountPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `AccountPropertiesResponsePtrInput` via:
//
//          AccountPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type AccountPropertiesResponsePtrInput interface {
	pulumi.Input

	ToAccountPropertiesResponsePtrOutput() AccountPropertiesResponsePtrOutput
	ToAccountPropertiesResponsePtrOutputWithContext(context.Context) AccountPropertiesResponsePtrOutput
}

type accountPropertiesResponsePtrType AccountPropertiesResponseArgs

func AccountPropertiesResponsePtr(v *AccountPropertiesResponseArgs) AccountPropertiesResponsePtrInput {
	return (*accountPropertiesResponsePtrType)(v)
}

func (*accountPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountPropertiesResponse)(nil)).Elem()
}

func (i *accountPropertiesResponsePtrType) ToAccountPropertiesResponsePtrOutput() AccountPropertiesResponsePtrOutput {
	return i.ToAccountPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *accountPropertiesResponsePtrType) ToAccountPropertiesResponsePtrOutputWithContext(ctx context.Context) AccountPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountPropertiesResponsePtrOutput)
}

// NetApp account properties
type AccountPropertiesResponseOutput struct{ *pulumi.OutputState }

func (AccountPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountPropertiesResponse)(nil)).Elem()
}

func (o AccountPropertiesResponseOutput) ToAccountPropertiesResponseOutput() AccountPropertiesResponseOutput {
	return o
}

func (o AccountPropertiesResponseOutput) ToAccountPropertiesResponseOutputWithContext(ctx context.Context) AccountPropertiesResponseOutput {
	return o
}

func (o AccountPropertiesResponseOutput) ToAccountPropertiesResponsePtrOutput() AccountPropertiesResponsePtrOutput {
	return o.ToAccountPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o AccountPropertiesResponseOutput) ToAccountPropertiesResponsePtrOutputWithContext(ctx context.Context) AccountPropertiesResponsePtrOutput {
	return o.ApplyT(func(v AccountPropertiesResponse) *AccountPropertiesResponse {
		return &v
	}).(AccountPropertiesResponsePtrOutput)
}

// Active Directories
func (o AccountPropertiesResponseOutput) ActiveDirectories() ActiveDirectoryResponseArrayOutput {
	return o.ApplyT(func(v AccountPropertiesResponse) []ActiveDirectoryResponse { return v.ActiveDirectories }).(ActiveDirectoryResponseArrayOutput)
}

// Azure lifecycle management
func (o AccountPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AccountPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type AccountPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (AccountPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountPropertiesResponse)(nil)).Elem()
}

func (o AccountPropertiesResponsePtrOutput) ToAccountPropertiesResponsePtrOutput() AccountPropertiesResponsePtrOutput {
	return o
}

func (o AccountPropertiesResponsePtrOutput) ToAccountPropertiesResponsePtrOutputWithContext(ctx context.Context) AccountPropertiesResponsePtrOutput {
	return o
}

func (o AccountPropertiesResponsePtrOutput) Elem() AccountPropertiesResponseOutput {
	return o.ApplyT(func(v *AccountPropertiesResponse) AccountPropertiesResponse { return *v }).(AccountPropertiesResponseOutput)
}

// Active Directories
func (o AccountPropertiesResponsePtrOutput) ActiveDirectories() ActiveDirectoryResponseArrayOutput {
	return o.ApplyT(func(v *AccountPropertiesResponse) []ActiveDirectoryResponse {
		if v == nil {
			return nil
		}
		return v.ActiveDirectories
	}).(ActiveDirectoryResponseArrayOutput)
}

// Azure lifecycle management
func (o AccountPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Active Directory
type ActiveDirectory struct {
	// Id of the Active Directory
	ActiveDirectoryId *string `pulumi:"activeDirectoryId"`
	// Comma separated list of DNS server IP addresses for the Active Directory domain
	Dns *string `pulumi:"dns"`
	// Name of the Active Directory domain
	Domain *string `pulumi:"domain"`
	// The Organizational Unit (OU) within the Windows Active Directory
	OrganizationalUnit *string `pulumi:"organizationalUnit"`
	// Plain text password of Active Directory domain administrator
	Password *string `pulumi:"password"`
	// NetBIOS name of the SMB server. This name will be registered as a computer account in the AD and used to mount volumes
	SmbServerName *string `pulumi:"smbServerName"`
	// Status of the Active Directory
	Status *string `pulumi:"status"`
	// Username of Active Directory domain administrator
	Username *string `pulumi:"username"`
}

// ActiveDirectoryInput is an input type that accepts ActiveDirectoryArgs and ActiveDirectoryOutput values.
// You can construct a concrete instance of `ActiveDirectoryInput` via:
//
//          ActiveDirectoryArgs{...}
type ActiveDirectoryInput interface {
	pulumi.Input

	ToActiveDirectoryOutput() ActiveDirectoryOutput
	ToActiveDirectoryOutputWithContext(context.Context) ActiveDirectoryOutput
}

// Active Directory
type ActiveDirectoryArgs struct {
	// Id of the Active Directory
	ActiveDirectoryId pulumi.StringPtrInput `pulumi:"activeDirectoryId"`
	// Comma separated list of DNS server IP addresses for the Active Directory domain
	Dns pulumi.StringPtrInput `pulumi:"dns"`
	// Name of the Active Directory domain
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// The Organizational Unit (OU) within the Windows Active Directory
	OrganizationalUnit pulumi.StringPtrInput `pulumi:"organizationalUnit"`
	// Plain text password of Active Directory domain administrator
	Password pulumi.StringPtrInput `pulumi:"password"`
	// NetBIOS name of the SMB server. This name will be registered as a computer account in the AD and used to mount volumes
	SmbServerName pulumi.StringPtrInput `pulumi:"smbServerName"`
	// Status of the Active Directory
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Username of Active Directory domain administrator
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ActiveDirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveDirectory)(nil)).Elem()
}

func (i ActiveDirectoryArgs) ToActiveDirectoryOutput() ActiveDirectoryOutput {
	return i.ToActiveDirectoryOutputWithContext(context.Background())
}

func (i ActiveDirectoryArgs) ToActiveDirectoryOutputWithContext(ctx context.Context) ActiveDirectoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActiveDirectoryOutput)
}

// ActiveDirectoryArrayInput is an input type that accepts ActiveDirectoryArray and ActiveDirectoryArrayOutput values.
// You can construct a concrete instance of `ActiveDirectoryArrayInput` via:
//
//          ActiveDirectoryArray{ ActiveDirectoryArgs{...} }
type ActiveDirectoryArrayInput interface {
	pulumi.Input

	ToActiveDirectoryArrayOutput() ActiveDirectoryArrayOutput
	ToActiveDirectoryArrayOutputWithContext(context.Context) ActiveDirectoryArrayOutput
}

type ActiveDirectoryArray []ActiveDirectoryInput

func (ActiveDirectoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActiveDirectory)(nil)).Elem()
}

func (i ActiveDirectoryArray) ToActiveDirectoryArrayOutput() ActiveDirectoryArrayOutput {
	return i.ToActiveDirectoryArrayOutputWithContext(context.Background())
}

func (i ActiveDirectoryArray) ToActiveDirectoryArrayOutputWithContext(ctx context.Context) ActiveDirectoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActiveDirectoryArrayOutput)
}

// Active Directory
type ActiveDirectoryOutput struct{ *pulumi.OutputState }

func (ActiveDirectoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveDirectory)(nil)).Elem()
}

func (o ActiveDirectoryOutput) ToActiveDirectoryOutput() ActiveDirectoryOutput {
	return o
}

func (o ActiveDirectoryOutput) ToActiveDirectoryOutputWithContext(ctx context.Context) ActiveDirectoryOutput {
	return o
}

// Id of the Active Directory
func (o ActiveDirectoryOutput) ActiveDirectoryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDirectory) *string { return v.ActiveDirectoryId }).(pulumi.StringPtrOutput)
}

// Comma separated list of DNS server IP addresses for the Active Directory domain
func (o ActiveDirectoryOutput) Dns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDirectory) *string { return v.Dns }).(pulumi.StringPtrOutput)
}

// Name of the Active Directory domain
func (o ActiveDirectoryOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDirectory) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// The Organizational Unit (OU) within the Windows Active Directory
func (o ActiveDirectoryOutput) OrganizationalUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDirectory) *string { return v.OrganizationalUnit }).(pulumi.StringPtrOutput)
}

// Plain text password of Active Directory domain administrator
func (o ActiveDirectoryOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDirectory) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// NetBIOS name of the SMB server. This name will be registered as a computer account in the AD and used to mount volumes
func (o ActiveDirectoryOutput) SmbServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDirectory) *string { return v.SmbServerName }).(pulumi.StringPtrOutput)
}

// Status of the Active Directory
func (o ActiveDirectoryOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDirectory) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Username of Active Directory domain administrator
func (o ActiveDirectoryOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDirectory) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ActiveDirectoryArrayOutput struct{ *pulumi.OutputState }

func (ActiveDirectoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActiveDirectory)(nil)).Elem()
}

func (o ActiveDirectoryArrayOutput) ToActiveDirectoryArrayOutput() ActiveDirectoryArrayOutput {
	return o
}

func (o ActiveDirectoryArrayOutput) ToActiveDirectoryArrayOutputWithContext(ctx context.Context) ActiveDirectoryArrayOutput {
	return o
}

func (o ActiveDirectoryArrayOutput) Index(i pulumi.IntInput) ActiveDirectoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ActiveDirectory {
		return vs[0].([]ActiveDirectory)[vs[1].(int)]
	}).(ActiveDirectoryOutput)
}

// Active Directory
type ActiveDirectoryResponse struct {
	// Id of the Active Directory
	ActiveDirectoryId *string `pulumi:"activeDirectoryId"`
	// Comma separated list of DNS server IP addresses for the Active Directory domain
	Dns *string `pulumi:"dns"`
	// Name of the Active Directory domain
	Domain *string `pulumi:"domain"`
	// The Organizational Unit (OU) within the Windows Active Directory
	OrganizationalUnit *string `pulumi:"organizationalUnit"`
	// Plain text password of Active Directory domain administrator
	Password *string `pulumi:"password"`
	// NetBIOS name of the SMB server. This name will be registered as a computer account in the AD and used to mount volumes
	SmbServerName *string `pulumi:"smbServerName"`
	// Status of the Active Directory
	Status *string `pulumi:"status"`
	// Username of Active Directory domain administrator
	Username *string `pulumi:"username"`
}

// ActiveDirectoryResponseInput is an input type that accepts ActiveDirectoryResponseArgs and ActiveDirectoryResponseOutput values.
// You can construct a concrete instance of `ActiveDirectoryResponseInput` via:
//
//          ActiveDirectoryResponseArgs{...}
type ActiveDirectoryResponseInput interface {
	pulumi.Input

	ToActiveDirectoryResponseOutput() ActiveDirectoryResponseOutput
	ToActiveDirectoryResponseOutputWithContext(context.Context) ActiveDirectoryResponseOutput
}

// Active Directory
type ActiveDirectoryResponseArgs struct {
	// Id of the Active Directory
	ActiveDirectoryId pulumi.StringPtrInput `pulumi:"activeDirectoryId"`
	// Comma separated list of DNS server IP addresses for the Active Directory domain
	Dns pulumi.StringPtrInput `pulumi:"dns"`
	// Name of the Active Directory domain
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// The Organizational Unit (OU) within the Windows Active Directory
	OrganizationalUnit pulumi.StringPtrInput `pulumi:"organizationalUnit"`
	// Plain text password of Active Directory domain administrator
	Password pulumi.StringPtrInput `pulumi:"password"`
	// NetBIOS name of the SMB server. This name will be registered as a computer account in the AD and used to mount volumes
	SmbServerName pulumi.StringPtrInput `pulumi:"smbServerName"`
	// Status of the Active Directory
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Username of Active Directory domain administrator
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ActiveDirectoryResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveDirectoryResponse)(nil)).Elem()
}

func (i ActiveDirectoryResponseArgs) ToActiveDirectoryResponseOutput() ActiveDirectoryResponseOutput {
	return i.ToActiveDirectoryResponseOutputWithContext(context.Background())
}

func (i ActiveDirectoryResponseArgs) ToActiveDirectoryResponseOutputWithContext(ctx context.Context) ActiveDirectoryResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActiveDirectoryResponseOutput)
}

// ActiveDirectoryResponseArrayInput is an input type that accepts ActiveDirectoryResponseArray and ActiveDirectoryResponseArrayOutput values.
// You can construct a concrete instance of `ActiveDirectoryResponseArrayInput` via:
//
//          ActiveDirectoryResponseArray{ ActiveDirectoryResponseArgs{...} }
type ActiveDirectoryResponseArrayInput interface {
	pulumi.Input

	ToActiveDirectoryResponseArrayOutput() ActiveDirectoryResponseArrayOutput
	ToActiveDirectoryResponseArrayOutputWithContext(context.Context) ActiveDirectoryResponseArrayOutput
}

type ActiveDirectoryResponseArray []ActiveDirectoryResponseInput

func (ActiveDirectoryResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActiveDirectoryResponse)(nil)).Elem()
}

func (i ActiveDirectoryResponseArray) ToActiveDirectoryResponseArrayOutput() ActiveDirectoryResponseArrayOutput {
	return i.ToActiveDirectoryResponseArrayOutputWithContext(context.Background())
}

func (i ActiveDirectoryResponseArray) ToActiveDirectoryResponseArrayOutputWithContext(ctx context.Context) ActiveDirectoryResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActiveDirectoryResponseArrayOutput)
}

// Active Directory
type ActiveDirectoryResponseOutput struct{ *pulumi.OutputState }

func (ActiveDirectoryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveDirectoryResponse)(nil)).Elem()
}

func (o ActiveDirectoryResponseOutput) ToActiveDirectoryResponseOutput() ActiveDirectoryResponseOutput {
	return o
}

func (o ActiveDirectoryResponseOutput) ToActiveDirectoryResponseOutputWithContext(ctx context.Context) ActiveDirectoryResponseOutput {
	return o
}

// Id of the Active Directory
func (o ActiveDirectoryResponseOutput) ActiveDirectoryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDirectoryResponse) *string { return v.ActiveDirectoryId }).(pulumi.StringPtrOutput)
}

// Comma separated list of DNS server IP addresses for the Active Directory domain
func (o ActiveDirectoryResponseOutput) Dns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDirectoryResponse) *string { return v.Dns }).(pulumi.StringPtrOutput)
}

// Name of the Active Directory domain
func (o ActiveDirectoryResponseOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDirectoryResponse) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// The Organizational Unit (OU) within the Windows Active Directory
func (o ActiveDirectoryResponseOutput) OrganizationalUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDirectoryResponse) *string { return v.OrganizationalUnit }).(pulumi.StringPtrOutput)
}

// Plain text password of Active Directory domain administrator
func (o ActiveDirectoryResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDirectoryResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// NetBIOS name of the SMB server. This name will be registered as a computer account in the AD and used to mount volumes
func (o ActiveDirectoryResponseOutput) SmbServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDirectoryResponse) *string { return v.SmbServerName }).(pulumi.StringPtrOutput)
}

// Status of the Active Directory
func (o ActiveDirectoryResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDirectoryResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Username of Active Directory domain administrator
func (o ActiveDirectoryResponseOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDirectoryResponse) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ActiveDirectoryResponseArrayOutput struct{ *pulumi.OutputState }

func (ActiveDirectoryResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActiveDirectoryResponse)(nil)).Elem()
}

func (o ActiveDirectoryResponseArrayOutput) ToActiveDirectoryResponseArrayOutput() ActiveDirectoryResponseArrayOutput {
	return o
}

func (o ActiveDirectoryResponseArrayOutput) ToActiveDirectoryResponseArrayOutputWithContext(ctx context.Context) ActiveDirectoryResponseArrayOutput {
	return o
}

func (o ActiveDirectoryResponseArrayOutput) Index(i pulumi.IntInput) ActiveDirectoryResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ActiveDirectoryResponse {
		return vs[0].([]ActiveDirectoryResponse)[vs[1].(int)]
	}).(ActiveDirectoryResponseOutput)
}

// Volume Export Policy Rule
type ExportPolicyRule struct {
	// Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names
	AllowedClients *string `pulumi:"allowedClients"`
	// Allows CIFS protocol
	Cifs *bool `pulumi:"cifs"`
	// Allows NFSv3 protocol
	Nfsv3 *bool `pulumi:"nfsv3"`
	// Allows NFSv4.1 protocol
	Nfsv41 *bool `pulumi:"nfsv41"`
	// Order index
	RuleIndex *int `pulumi:"ruleIndex"`
	// Read only access
	UnixReadOnly *bool `pulumi:"unixReadOnly"`
	// Read and write access
	UnixReadWrite *bool `pulumi:"unixReadWrite"`
}

// ExportPolicyRuleInput is an input type that accepts ExportPolicyRuleArgs and ExportPolicyRuleOutput values.
// You can construct a concrete instance of `ExportPolicyRuleInput` via:
//
//          ExportPolicyRuleArgs{...}
type ExportPolicyRuleInput interface {
	pulumi.Input

	ToExportPolicyRuleOutput() ExportPolicyRuleOutput
	ToExportPolicyRuleOutputWithContext(context.Context) ExportPolicyRuleOutput
}

// Volume Export Policy Rule
type ExportPolicyRuleArgs struct {
	// Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names
	AllowedClients pulumi.StringPtrInput `pulumi:"allowedClients"`
	// Allows CIFS protocol
	Cifs pulumi.BoolPtrInput `pulumi:"cifs"`
	// Allows NFSv3 protocol
	Nfsv3 pulumi.BoolPtrInput `pulumi:"nfsv3"`
	// Allows NFSv4.1 protocol
	Nfsv41 pulumi.BoolPtrInput `pulumi:"nfsv41"`
	// Order index
	RuleIndex pulumi.IntPtrInput `pulumi:"ruleIndex"`
	// Read only access
	UnixReadOnly pulumi.BoolPtrInput `pulumi:"unixReadOnly"`
	// Read and write access
	UnixReadWrite pulumi.BoolPtrInput `pulumi:"unixReadWrite"`
}

func (ExportPolicyRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExportPolicyRule)(nil)).Elem()
}

func (i ExportPolicyRuleArgs) ToExportPolicyRuleOutput() ExportPolicyRuleOutput {
	return i.ToExportPolicyRuleOutputWithContext(context.Background())
}

func (i ExportPolicyRuleArgs) ToExportPolicyRuleOutputWithContext(ctx context.Context) ExportPolicyRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExportPolicyRuleOutput)
}

// ExportPolicyRuleArrayInput is an input type that accepts ExportPolicyRuleArray and ExportPolicyRuleArrayOutput values.
// You can construct a concrete instance of `ExportPolicyRuleArrayInput` via:
//
//          ExportPolicyRuleArray{ ExportPolicyRuleArgs{...} }
type ExportPolicyRuleArrayInput interface {
	pulumi.Input

	ToExportPolicyRuleArrayOutput() ExportPolicyRuleArrayOutput
	ToExportPolicyRuleArrayOutputWithContext(context.Context) ExportPolicyRuleArrayOutput
}

type ExportPolicyRuleArray []ExportPolicyRuleInput

func (ExportPolicyRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExportPolicyRule)(nil)).Elem()
}

func (i ExportPolicyRuleArray) ToExportPolicyRuleArrayOutput() ExportPolicyRuleArrayOutput {
	return i.ToExportPolicyRuleArrayOutputWithContext(context.Background())
}

func (i ExportPolicyRuleArray) ToExportPolicyRuleArrayOutputWithContext(ctx context.Context) ExportPolicyRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExportPolicyRuleArrayOutput)
}

// Volume Export Policy Rule
type ExportPolicyRuleOutput struct{ *pulumi.OutputState }

func (ExportPolicyRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExportPolicyRule)(nil)).Elem()
}

func (o ExportPolicyRuleOutput) ToExportPolicyRuleOutput() ExportPolicyRuleOutput {
	return o
}

func (o ExportPolicyRuleOutput) ToExportPolicyRuleOutputWithContext(ctx context.Context) ExportPolicyRuleOutput {
	return o
}

// Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names
func (o ExportPolicyRuleOutput) AllowedClients() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExportPolicyRule) *string { return v.AllowedClients }).(pulumi.StringPtrOutput)
}

// Allows CIFS protocol
func (o ExportPolicyRuleOutput) Cifs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExportPolicyRule) *bool { return v.Cifs }).(pulumi.BoolPtrOutput)
}

// Allows NFSv3 protocol
func (o ExportPolicyRuleOutput) Nfsv3() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExportPolicyRule) *bool { return v.Nfsv3 }).(pulumi.BoolPtrOutput)
}

// Allows NFSv4.1 protocol
func (o ExportPolicyRuleOutput) Nfsv41() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExportPolicyRule) *bool { return v.Nfsv41 }).(pulumi.BoolPtrOutput)
}

// Order index
func (o ExportPolicyRuleOutput) RuleIndex() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExportPolicyRule) *int { return v.RuleIndex }).(pulumi.IntPtrOutput)
}

// Read only access
func (o ExportPolicyRuleOutput) UnixReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExportPolicyRule) *bool { return v.UnixReadOnly }).(pulumi.BoolPtrOutput)
}

// Read and write access
func (o ExportPolicyRuleOutput) UnixReadWrite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExportPolicyRule) *bool { return v.UnixReadWrite }).(pulumi.BoolPtrOutput)
}

type ExportPolicyRuleArrayOutput struct{ *pulumi.OutputState }

func (ExportPolicyRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExportPolicyRule)(nil)).Elem()
}

func (o ExportPolicyRuleArrayOutput) ToExportPolicyRuleArrayOutput() ExportPolicyRuleArrayOutput {
	return o
}

func (o ExportPolicyRuleArrayOutput) ToExportPolicyRuleArrayOutputWithContext(ctx context.Context) ExportPolicyRuleArrayOutput {
	return o
}

func (o ExportPolicyRuleArrayOutput) Index(i pulumi.IntInput) ExportPolicyRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExportPolicyRule {
		return vs[0].([]ExportPolicyRule)[vs[1].(int)]
	}).(ExportPolicyRuleOutput)
}

// Volume Export Policy Rule
type ExportPolicyRuleResponse struct {
	// Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names
	AllowedClients *string `pulumi:"allowedClients"`
	// Allows CIFS protocol
	Cifs *bool `pulumi:"cifs"`
	// Allows NFSv3 protocol
	Nfsv3 *bool `pulumi:"nfsv3"`
	// Allows NFSv4.1 protocol
	Nfsv41 *bool `pulumi:"nfsv41"`
	// Order index
	RuleIndex *int `pulumi:"ruleIndex"`
	// Read only access
	UnixReadOnly *bool `pulumi:"unixReadOnly"`
	// Read and write access
	UnixReadWrite *bool `pulumi:"unixReadWrite"`
}

// ExportPolicyRuleResponseInput is an input type that accepts ExportPolicyRuleResponseArgs and ExportPolicyRuleResponseOutput values.
// You can construct a concrete instance of `ExportPolicyRuleResponseInput` via:
//
//          ExportPolicyRuleResponseArgs{...}
type ExportPolicyRuleResponseInput interface {
	pulumi.Input

	ToExportPolicyRuleResponseOutput() ExportPolicyRuleResponseOutput
	ToExportPolicyRuleResponseOutputWithContext(context.Context) ExportPolicyRuleResponseOutput
}

// Volume Export Policy Rule
type ExportPolicyRuleResponseArgs struct {
	// Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names
	AllowedClients pulumi.StringPtrInput `pulumi:"allowedClients"`
	// Allows CIFS protocol
	Cifs pulumi.BoolPtrInput `pulumi:"cifs"`
	// Allows NFSv3 protocol
	Nfsv3 pulumi.BoolPtrInput `pulumi:"nfsv3"`
	// Allows NFSv4.1 protocol
	Nfsv41 pulumi.BoolPtrInput `pulumi:"nfsv41"`
	// Order index
	RuleIndex pulumi.IntPtrInput `pulumi:"ruleIndex"`
	// Read only access
	UnixReadOnly pulumi.BoolPtrInput `pulumi:"unixReadOnly"`
	// Read and write access
	UnixReadWrite pulumi.BoolPtrInput `pulumi:"unixReadWrite"`
}

func (ExportPolicyRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExportPolicyRuleResponse)(nil)).Elem()
}

func (i ExportPolicyRuleResponseArgs) ToExportPolicyRuleResponseOutput() ExportPolicyRuleResponseOutput {
	return i.ToExportPolicyRuleResponseOutputWithContext(context.Background())
}

func (i ExportPolicyRuleResponseArgs) ToExportPolicyRuleResponseOutputWithContext(ctx context.Context) ExportPolicyRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExportPolicyRuleResponseOutput)
}

// ExportPolicyRuleResponseArrayInput is an input type that accepts ExportPolicyRuleResponseArray and ExportPolicyRuleResponseArrayOutput values.
// You can construct a concrete instance of `ExportPolicyRuleResponseArrayInput` via:
//
//          ExportPolicyRuleResponseArray{ ExportPolicyRuleResponseArgs{...} }
type ExportPolicyRuleResponseArrayInput interface {
	pulumi.Input

	ToExportPolicyRuleResponseArrayOutput() ExportPolicyRuleResponseArrayOutput
	ToExportPolicyRuleResponseArrayOutputWithContext(context.Context) ExportPolicyRuleResponseArrayOutput
}

type ExportPolicyRuleResponseArray []ExportPolicyRuleResponseInput

func (ExportPolicyRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExportPolicyRuleResponse)(nil)).Elem()
}

func (i ExportPolicyRuleResponseArray) ToExportPolicyRuleResponseArrayOutput() ExportPolicyRuleResponseArrayOutput {
	return i.ToExportPolicyRuleResponseArrayOutputWithContext(context.Background())
}

func (i ExportPolicyRuleResponseArray) ToExportPolicyRuleResponseArrayOutputWithContext(ctx context.Context) ExportPolicyRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExportPolicyRuleResponseArrayOutput)
}

// Volume Export Policy Rule
type ExportPolicyRuleResponseOutput struct{ *pulumi.OutputState }

func (ExportPolicyRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExportPolicyRuleResponse)(nil)).Elem()
}

func (o ExportPolicyRuleResponseOutput) ToExportPolicyRuleResponseOutput() ExportPolicyRuleResponseOutput {
	return o
}

func (o ExportPolicyRuleResponseOutput) ToExportPolicyRuleResponseOutputWithContext(ctx context.Context) ExportPolicyRuleResponseOutput {
	return o
}

// Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names
func (o ExportPolicyRuleResponseOutput) AllowedClients() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExportPolicyRuleResponse) *string { return v.AllowedClients }).(pulumi.StringPtrOutput)
}

// Allows CIFS protocol
func (o ExportPolicyRuleResponseOutput) Cifs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExportPolicyRuleResponse) *bool { return v.Cifs }).(pulumi.BoolPtrOutput)
}

// Allows NFSv3 protocol
func (o ExportPolicyRuleResponseOutput) Nfsv3() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExportPolicyRuleResponse) *bool { return v.Nfsv3 }).(pulumi.BoolPtrOutput)
}

// Allows NFSv4.1 protocol
func (o ExportPolicyRuleResponseOutput) Nfsv41() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExportPolicyRuleResponse) *bool { return v.Nfsv41 }).(pulumi.BoolPtrOutput)
}

// Order index
func (o ExportPolicyRuleResponseOutput) RuleIndex() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExportPolicyRuleResponse) *int { return v.RuleIndex }).(pulumi.IntPtrOutput)
}

// Read only access
func (o ExportPolicyRuleResponseOutput) UnixReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExportPolicyRuleResponse) *bool { return v.UnixReadOnly }).(pulumi.BoolPtrOutput)
}

// Read and write access
func (o ExportPolicyRuleResponseOutput) UnixReadWrite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExportPolicyRuleResponse) *bool { return v.UnixReadWrite }).(pulumi.BoolPtrOutput)
}

type ExportPolicyRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (ExportPolicyRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExportPolicyRuleResponse)(nil)).Elem()
}

func (o ExportPolicyRuleResponseArrayOutput) ToExportPolicyRuleResponseArrayOutput() ExportPolicyRuleResponseArrayOutput {
	return o
}

func (o ExportPolicyRuleResponseArrayOutput) ToExportPolicyRuleResponseArrayOutputWithContext(ctx context.Context) ExportPolicyRuleResponseArrayOutput {
	return o
}

func (o ExportPolicyRuleResponseArrayOutput) Index(i pulumi.IntInput) ExportPolicyRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExportPolicyRuleResponse {
		return vs[0].([]ExportPolicyRuleResponse)[vs[1].(int)]
	}).(ExportPolicyRuleResponseOutput)
}

// Mount target properties
type MountTargetProperties struct {
	// The end of IPv4 address range to use when creating a new mount target
	EndIp *string `pulumi:"endIp"`
	// UUID v4 used to identify the MountTarget
	FileSystemId string `pulumi:"fileSystemId"`
	// The gateway of the IPv4 address range to use when creating a new mount target
	Gateway *string `pulumi:"gateway"`
	// The netmask of the IPv4 address range to use when creating a new mount target
	Netmask *string `pulumi:"netmask"`
	// The SMB server's Fully Qualified Domain Name, FQDN
	SmbServerFqdn *string `pulumi:"smbServerFqdn"`
	// The start of IPv4 address range to use when creating a new mount target
	StartIp *string `pulumi:"startIp"`
	// The subnet
	Subnet *string `pulumi:"subnet"`
}

// MountTargetPropertiesInput is an input type that accepts MountTargetPropertiesArgs and MountTargetPropertiesOutput values.
// You can construct a concrete instance of `MountTargetPropertiesInput` via:
//
//          MountTargetPropertiesArgs{...}
type MountTargetPropertiesInput interface {
	pulumi.Input

	ToMountTargetPropertiesOutput() MountTargetPropertiesOutput
	ToMountTargetPropertiesOutputWithContext(context.Context) MountTargetPropertiesOutput
}

// Mount target properties
type MountTargetPropertiesArgs struct {
	// The end of IPv4 address range to use when creating a new mount target
	EndIp pulumi.StringPtrInput `pulumi:"endIp"`
	// UUID v4 used to identify the MountTarget
	FileSystemId pulumi.StringInput `pulumi:"fileSystemId"`
	// The gateway of the IPv4 address range to use when creating a new mount target
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
	// The netmask of the IPv4 address range to use when creating a new mount target
	Netmask pulumi.StringPtrInput `pulumi:"netmask"`
	// The SMB server's Fully Qualified Domain Name, FQDN
	SmbServerFqdn pulumi.StringPtrInput `pulumi:"smbServerFqdn"`
	// The start of IPv4 address range to use when creating a new mount target
	StartIp pulumi.StringPtrInput `pulumi:"startIp"`
	// The subnet
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
}

func (MountTargetPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MountTargetProperties)(nil)).Elem()
}

func (i MountTargetPropertiesArgs) ToMountTargetPropertiesOutput() MountTargetPropertiesOutput {
	return i.ToMountTargetPropertiesOutputWithContext(context.Background())
}

func (i MountTargetPropertiesArgs) ToMountTargetPropertiesOutputWithContext(ctx context.Context) MountTargetPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MountTargetPropertiesOutput)
}

// MountTargetPropertiesArrayInput is an input type that accepts MountTargetPropertiesArray and MountTargetPropertiesArrayOutput values.
// You can construct a concrete instance of `MountTargetPropertiesArrayInput` via:
//
//          MountTargetPropertiesArray{ MountTargetPropertiesArgs{...} }
type MountTargetPropertiesArrayInput interface {
	pulumi.Input

	ToMountTargetPropertiesArrayOutput() MountTargetPropertiesArrayOutput
	ToMountTargetPropertiesArrayOutputWithContext(context.Context) MountTargetPropertiesArrayOutput
}

type MountTargetPropertiesArray []MountTargetPropertiesInput

func (MountTargetPropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MountTargetProperties)(nil)).Elem()
}

func (i MountTargetPropertiesArray) ToMountTargetPropertiesArrayOutput() MountTargetPropertiesArrayOutput {
	return i.ToMountTargetPropertiesArrayOutputWithContext(context.Background())
}

func (i MountTargetPropertiesArray) ToMountTargetPropertiesArrayOutputWithContext(ctx context.Context) MountTargetPropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MountTargetPropertiesArrayOutput)
}

// Mount target properties
type MountTargetPropertiesOutput struct{ *pulumi.OutputState }

func (MountTargetPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MountTargetProperties)(nil)).Elem()
}

func (o MountTargetPropertiesOutput) ToMountTargetPropertiesOutput() MountTargetPropertiesOutput {
	return o
}

func (o MountTargetPropertiesOutput) ToMountTargetPropertiesOutputWithContext(ctx context.Context) MountTargetPropertiesOutput {
	return o
}

// The end of IPv4 address range to use when creating a new mount target
func (o MountTargetPropertiesOutput) EndIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountTargetProperties) *string { return v.EndIp }).(pulumi.StringPtrOutput)
}

// UUID v4 used to identify the MountTarget
func (o MountTargetPropertiesOutput) FileSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v MountTargetProperties) string { return v.FileSystemId }).(pulumi.StringOutput)
}

// The gateway of the IPv4 address range to use when creating a new mount target
func (o MountTargetPropertiesOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountTargetProperties) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

// The netmask of the IPv4 address range to use when creating a new mount target
func (o MountTargetPropertiesOutput) Netmask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountTargetProperties) *string { return v.Netmask }).(pulumi.StringPtrOutput)
}

// The SMB server's Fully Qualified Domain Name, FQDN
func (o MountTargetPropertiesOutput) SmbServerFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountTargetProperties) *string { return v.SmbServerFqdn }).(pulumi.StringPtrOutput)
}

// The start of IPv4 address range to use when creating a new mount target
func (o MountTargetPropertiesOutput) StartIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountTargetProperties) *string { return v.StartIp }).(pulumi.StringPtrOutput)
}

// The subnet
func (o MountTargetPropertiesOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountTargetProperties) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

type MountTargetPropertiesArrayOutput struct{ *pulumi.OutputState }

func (MountTargetPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MountTargetProperties)(nil)).Elem()
}

func (o MountTargetPropertiesArrayOutput) ToMountTargetPropertiesArrayOutput() MountTargetPropertiesArrayOutput {
	return o
}

func (o MountTargetPropertiesArrayOutput) ToMountTargetPropertiesArrayOutputWithContext(ctx context.Context) MountTargetPropertiesArrayOutput {
	return o
}

func (o MountTargetPropertiesArrayOutput) Index(i pulumi.IntInput) MountTargetPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MountTargetProperties {
		return vs[0].([]MountTargetProperties)[vs[1].(int)]
	}).(MountTargetPropertiesOutput)
}

// Mount target properties
type MountTargetPropertiesResponse struct {
	// The end of IPv4 address range to use when creating a new mount target
	EndIp *string `pulumi:"endIp"`
	// UUID v4 used to identify the MountTarget
	FileSystemId string `pulumi:"fileSystemId"`
	// The gateway of the IPv4 address range to use when creating a new mount target
	Gateway *string `pulumi:"gateway"`
	// The mount target's IPv4 address
	IpAddress string `pulumi:"ipAddress"`
	// UUID v4 used to identify the MountTarget
	MountTargetId string `pulumi:"mountTargetId"`
	// The netmask of the IPv4 address range to use when creating a new mount target
	Netmask *string `pulumi:"netmask"`
	// Azure lifecycle management
	ProvisioningState string `pulumi:"provisioningState"`
	// The SMB server's Fully Qualified Domain Name, FQDN
	SmbServerFqdn *string `pulumi:"smbServerFqdn"`
	// The start of IPv4 address range to use when creating a new mount target
	StartIp *string `pulumi:"startIp"`
	// The subnet
	Subnet *string `pulumi:"subnet"`
}

// MountTargetPropertiesResponseInput is an input type that accepts MountTargetPropertiesResponseArgs and MountTargetPropertiesResponseOutput values.
// You can construct a concrete instance of `MountTargetPropertiesResponseInput` via:
//
//          MountTargetPropertiesResponseArgs{...}
type MountTargetPropertiesResponseInput interface {
	pulumi.Input

	ToMountTargetPropertiesResponseOutput() MountTargetPropertiesResponseOutput
	ToMountTargetPropertiesResponseOutputWithContext(context.Context) MountTargetPropertiesResponseOutput
}

// Mount target properties
type MountTargetPropertiesResponseArgs struct {
	// The end of IPv4 address range to use when creating a new mount target
	EndIp pulumi.StringPtrInput `pulumi:"endIp"`
	// UUID v4 used to identify the MountTarget
	FileSystemId pulumi.StringInput `pulumi:"fileSystemId"`
	// The gateway of the IPv4 address range to use when creating a new mount target
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
	// The mount target's IPv4 address
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// UUID v4 used to identify the MountTarget
	MountTargetId pulumi.StringInput `pulumi:"mountTargetId"`
	// The netmask of the IPv4 address range to use when creating a new mount target
	Netmask pulumi.StringPtrInput `pulumi:"netmask"`
	// Azure lifecycle management
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The SMB server's Fully Qualified Domain Name, FQDN
	SmbServerFqdn pulumi.StringPtrInput `pulumi:"smbServerFqdn"`
	// The start of IPv4 address range to use when creating a new mount target
	StartIp pulumi.StringPtrInput `pulumi:"startIp"`
	// The subnet
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
}

func (MountTargetPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MountTargetPropertiesResponse)(nil)).Elem()
}

func (i MountTargetPropertiesResponseArgs) ToMountTargetPropertiesResponseOutput() MountTargetPropertiesResponseOutput {
	return i.ToMountTargetPropertiesResponseOutputWithContext(context.Background())
}

func (i MountTargetPropertiesResponseArgs) ToMountTargetPropertiesResponseOutputWithContext(ctx context.Context) MountTargetPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MountTargetPropertiesResponseOutput)
}

// MountTargetPropertiesResponseArrayInput is an input type that accepts MountTargetPropertiesResponseArray and MountTargetPropertiesResponseArrayOutput values.
// You can construct a concrete instance of `MountTargetPropertiesResponseArrayInput` via:
//
//          MountTargetPropertiesResponseArray{ MountTargetPropertiesResponseArgs{...} }
type MountTargetPropertiesResponseArrayInput interface {
	pulumi.Input

	ToMountTargetPropertiesResponseArrayOutput() MountTargetPropertiesResponseArrayOutput
	ToMountTargetPropertiesResponseArrayOutputWithContext(context.Context) MountTargetPropertiesResponseArrayOutput
}

type MountTargetPropertiesResponseArray []MountTargetPropertiesResponseInput

func (MountTargetPropertiesResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MountTargetPropertiesResponse)(nil)).Elem()
}

func (i MountTargetPropertiesResponseArray) ToMountTargetPropertiesResponseArrayOutput() MountTargetPropertiesResponseArrayOutput {
	return i.ToMountTargetPropertiesResponseArrayOutputWithContext(context.Background())
}

func (i MountTargetPropertiesResponseArray) ToMountTargetPropertiesResponseArrayOutputWithContext(ctx context.Context) MountTargetPropertiesResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MountTargetPropertiesResponseArrayOutput)
}

// Mount target properties
type MountTargetPropertiesResponseOutput struct{ *pulumi.OutputState }

func (MountTargetPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MountTargetPropertiesResponse)(nil)).Elem()
}

func (o MountTargetPropertiesResponseOutput) ToMountTargetPropertiesResponseOutput() MountTargetPropertiesResponseOutput {
	return o
}

func (o MountTargetPropertiesResponseOutput) ToMountTargetPropertiesResponseOutputWithContext(ctx context.Context) MountTargetPropertiesResponseOutput {
	return o
}

// The end of IPv4 address range to use when creating a new mount target
func (o MountTargetPropertiesResponseOutput) EndIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountTargetPropertiesResponse) *string { return v.EndIp }).(pulumi.StringPtrOutput)
}

// UUID v4 used to identify the MountTarget
func (o MountTargetPropertiesResponseOutput) FileSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v MountTargetPropertiesResponse) string { return v.FileSystemId }).(pulumi.StringOutput)
}

// The gateway of the IPv4 address range to use when creating a new mount target
func (o MountTargetPropertiesResponseOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountTargetPropertiesResponse) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

// The mount target's IPv4 address
func (o MountTargetPropertiesResponseOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v MountTargetPropertiesResponse) string { return v.IpAddress }).(pulumi.StringOutput)
}

// UUID v4 used to identify the MountTarget
func (o MountTargetPropertiesResponseOutput) MountTargetId() pulumi.StringOutput {
	return o.ApplyT(func(v MountTargetPropertiesResponse) string { return v.MountTargetId }).(pulumi.StringOutput)
}

// The netmask of the IPv4 address range to use when creating a new mount target
func (o MountTargetPropertiesResponseOutput) Netmask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountTargetPropertiesResponse) *string { return v.Netmask }).(pulumi.StringPtrOutput)
}

// Azure lifecycle management
func (o MountTargetPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v MountTargetPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The SMB server's Fully Qualified Domain Name, FQDN
func (o MountTargetPropertiesResponseOutput) SmbServerFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountTargetPropertiesResponse) *string { return v.SmbServerFqdn }).(pulumi.StringPtrOutput)
}

// The start of IPv4 address range to use when creating a new mount target
func (o MountTargetPropertiesResponseOutput) StartIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountTargetPropertiesResponse) *string { return v.StartIp }).(pulumi.StringPtrOutput)
}

// The subnet
func (o MountTargetPropertiesResponseOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountTargetPropertiesResponse) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

type MountTargetPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (MountTargetPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MountTargetPropertiesResponse)(nil)).Elem()
}

func (o MountTargetPropertiesResponseArrayOutput) ToMountTargetPropertiesResponseArrayOutput() MountTargetPropertiesResponseArrayOutput {
	return o
}

func (o MountTargetPropertiesResponseArrayOutput) ToMountTargetPropertiesResponseArrayOutputWithContext(ctx context.Context) MountTargetPropertiesResponseArrayOutput {
	return o
}

func (o MountTargetPropertiesResponseArrayOutput) Index(i pulumi.IntInput) MountTargetPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MountTargetPropertiesResponse {
		return vs[0].([]MountTargetPropertiesResponse)[vs[1].(int)]
	}).(MountTargetPropertiesResponseOutput)
}

// Pool properties
type PoolProperties struct {
	// The service level of the file system
	ServiceLevel string `pulumi:"serviceLevel"`
	// Provisioned size of the pool (in bytes). Allowed values are in 4TiB chunks (value must be multiply of 4398046511104).
	Size int `pulumi:"size"`
}

// PoolPropertiesInput is an input type that accepts PoolPropertiesArgs and PoolPropertiesOutput values.
// You can construct a concrete instance of `PoolPropertiesInput` via:
//
//          PoolPropertiesArgs{...}
type PoolPropertiesInput interface {
	pulumi.Input

	ToPoolPropertiesOutput() PoolPropertiesOutput
	ToPoolPropertiesOutputWithContext(context.Context) PoolPropertiesOutput
}

// Pool properties
type PoolPropertiesArgs struct {
	// The service level of the file system
	ServiceLevel pulumi.StringInput `pulumi:"serviceLevel"`
	// Provisioned size of the pool (in bytes). Allowed values are in 4TiB chunks (value must be multiply of 4398046511104).
	Size pulumi.IntInput `pulumi:"size"`
}

func (PoolPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolProperties)(nil)).Elem()
}

func (i PoolPropertiesArgs) ToPoolPropertiesOutput() PoolPropertiesOutput {
	return i.ToPoolPropertiesOutputWithContext(context.Background())
}

func (i PoolPropertiesArgs) ToPoolPropertiesOutputWithContext(ctx context.Context) PoolPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolPropertiesOutput)
}

func (i PoolPropertiesArgs) ToPoolPropertiesPtrOutput() PoolPropertiesPtrOutput {
	return i.ToPoolPropertiesPtrOutputWithContext(context.Background())
}

func (i PoolPropertiesArgs) ToPoolPropertiesPtrOutputWithContext(ctx context.Context) PoolPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolPropertiesOutput).ToPoolPropertiesPtrOutputWithContext(ctx)
}

// PoolPropertiesPtrInput is an input type that accepts PoolPropertiesArgs, PoolPropertiesPtr and PoolPropertiesPtrOutput values.
// You can construct a concrete instance of `PoolPropertiesPtrInput` via:
//
//          PoolPropertiesArgs{...}
//
//  or:
//
//          nil
type PoolPropertiesPtrInput interface {
	pulumi.Input

	ToPoolPropertiesPtrOutput() PoolPropertiesPtrOutput
	ToPoolPropertiesPtrOutputWithContext(context.Context) PoolPropertiesPtrOutput
}

type poolPropertiesPtrType PoolPropertiesArgs

func PoolPropertiesPtr(v *PoolPropertiesArgs) PoolPropertiesPtrInput {
	return (*poolPropertiesPtrType)(v)
}

func (*poolPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolProperties)(nil)).Elem()
}

func (i *poolPropertiesPtrType) ToPoolPropertiesPtrOutput() PoolPropertiesPtrOutput {
	return i.ToPoolPropertiesPtrOutputWithContext(context.Background())
}

func (i *poolPropertiesPtrType) ToPoolPropertiesPtrOutputWithContext(ctx context.Context) PoolPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolPropertiesPtrOutput)
}

// Pool properties
type PoolPropertiesOutput struct{ *pulumi.OutputState }

func (PoolPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolProperties)(nil)).Elem()
}

func (o PoolPropertiesOutput) ToPoolPropertiesOutput() PoolPropertiesOutput {
	return o
}

func (o PoolPropertiesOutput) ToPoolPropertiesOutputWithContext(ctx context.Context) PoolPropertiesOutput {
	return o
}

func (o PoolPropertiesOutput) ToPoolPropertiesPtrOutput() PoolPropertiesPtrOutput {
	return o.ToPoolPropertiesPtrOutputWithContext(context.Background())
}

func (o PoolPropertiesOutput) ToPoolPropertiesPtrOutputWithContext(ctx context.Context) PoolPropertiesPtrOutput {
	return o.ApplyT(func(v PoolProperties) *PoolProperties {
		return &v
	}).(PoolPropertiesPtrOutput)
}

// The service level of the file system
func (o PoolPropertiesOutput) ServiceLevel() pulumi.StringOutput {
	return o.ApplyT(func(v PoolProperties) string { return v.ServiceLevel }).(pulumi.StringOutput)
}

// Provisioned size of the pool (in bytes). Allowed values are in 4TiB chunks (value must be multiply of 4398046511104).
func (o PoolPropertiesOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v PoolProperties) int { return v.Size }).(pulumi.IntOutput)
}

type PoolPropertiesPtrOutput struct{ *pulumi.OutputState }

func (PoolPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolProperties)(nil)).Elem()
}

func (o PoolPropertiesPtrOutput) ToPoolPropertiesPtrOutput() PoolPropertiesPtrOutput {
	return o
}

func (o PoolPropertiesPtrOutput) ToPoolPropertiesPtrOutputWithContext(ctx context.Context) PoolPropertiesPtrOutput {
	return o
}

func (o PoolPropertiesPtrOutput) Elem() PoolPropertiesOutput {
	return o.ApplyT(func(v *PoolProperties) PoolProperties { return *v }).(PoolPropertiesOutput)
}

// The service level of the file system
func (o PoolPropertiesPtrOutput) ServiceLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceLevel
	}).(pulumi.StringPtrOutput)
}

// Provisioned size of the pool (in bytes). Allowed values are in 4TiB chunks (value must be multiply of 4398046511104).
func (o PoolPropertiesPtrOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolProperties) *int {
		if v == nil {
			return nil
		}
		return &v.Size
	}).(pulumi.IntPtrOutput)
}

// Pool properties
type PoolPropertiesResponse struct {
	// UUID v4 used to identify the Pool
	PoolId string `pulumi:"poolId"`
	// Azure lifecycle management
	ProvisioningState string `pulumi:"provisioningState"`
	// The service level of the file system
	ServiceLevel string `pulumi:"serviceLevel"`
	// Provisioned size of the pool (in bytes). Allowed values are in 4TiB chunks (value must be multiply of 4398046511104).
	Size int `pulumi:"size"`
}

// PoolPropertiesResponseInput is an input type that accepts PoolPropertiesResponseArgs and PoolPropertiesResponseOutput values.
// You can construct a concrete instance of `PoolPropertiesResponseInput` via:
//
//          PoolPropertiesResponseArgs{...}
type PoolPropertiesResponseInput interface {
	pulumi.Input

	ToPoolPropertiesResponseOutput() PoolPropertiesResponseOutput
	ToPoolPropertiesResponseOutputWithContext(context.Context) PoolPropertiesResponseOutput
}

// Pool properties
type PoolPropertiesResponseArgs struct {
	// UUID v4 used to identify the Pool
	PoolId pulumi.StringInput `pulumi:"poolId"`
	// Azure lifecycle management
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The service level of the file system
	ServiceLevel pulumi.StringInput `pulumi:"serviceLevel"`
	// Provisioned size of the pool (in bytes). Allowed values are in 4TiB chunks (value must be multiply of 4398046511104).
	Size pulumi.IntInput `pulumi:"size"`
}

func (PoolPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolPropertiesResponse)(nil)).Elem()
}

func (i PoolPropertiesResponseArgs) ToPoolPropertiesResponseOutput() PoolPropertiesResponseOutput {
	return i.ToPoolPropertiesResponseOutputWithContext(context.Background())
}

func (i PoolPropertiesResponseArgs) ToPoolPropertiesResponseOutputWithContext(ctx context.Context) PoolPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolPropertiesResponseOutput)
}

func (i PoolPropertiesResponseArgs) ToPoolPropertiesResponsePtrOutput() PoolPropertiesResponsePtrOutput {
	return i.ToPoolPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i PoolPropertiesResponseArgs) ToPoolPropertiesResponsePtrOutputWithContext(ctx context.Context) PoolPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolPropertiesResponseOutput).ToPoolPropertiesResponsePtrOutputWithContext(ctx)
}

// PoolPropertiesResponsePtrInput is an input type that accepts PoolPropertiesResponseArgs, PoolPropertiesResponsePtr and PoolPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `PoolPropertiesResponsePtrInput` via:
//
//          PoolPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type PoolPropertiesResponsePtrInput interface {
	pulumi.Input

	ToPoolPropertiesResponsePtrOutput() PoolPropertiesResponsePtrOutput
	ToPoolPropertiesResponsePtrOutputWithContext(context.Context) PoolPropertiesResponsePtrOutput
}

type poolPropertiesResponsePtrType PoolPropertiesResponseArgs

func PoolPropertiesResponsePtr(v *PoolPropertiesResponseArgs) PoolPropertiesResponsePtrInput {
	return (*poolPropertiesResponsePtrType)(v)
}

func (*poolPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolPropertiesResponse)(nil)).Elem()
}

func (i *poolPropertiesResponsePtrType) ToPoolPropertiesResponsePtrOutput() PoolPropertiesResponsePtrOutput {
	return i.ToPoolPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *poolPropertiesResponsePtrType) ToPoolPropertiesResponsePtrOutputWithContext(ctx context.Context) PoolPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolPropertiesResponsePtrOutput)
}

// Pool properties
type PoolPropertiesResponseOutput struct{ *pulumi.OutputState }

func (PoolPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolPropertiesResponse)(nil)).Elem()
}

func (o PoolPropertiesResponseOutput) ToPoolPropertiesResponseOutput() PoolPropertiesResponseOutput {
	return o
}

func (o PoolPropertiesResponseOutput) ToPoolPropertiesResponseOutputWithContext(ctx context.Context) PoolPropertiesResponseOutput {
	return o
}

func (o PoolPropertiesResponseOutput) ToPoolPropertiesResponsePtrOutput() PoolPropertiesResponsePtrOutput {
	return o.ToPoolPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o PoolPropertiesResponseOutput) ToPoolPropertiesResponsePtrOutputWithContext(ctx context.Context) PoolPropertiesResponsePtrOutput {
	return o.ApplyT(func(v PoolPropertiesResponse) *PoolPropertiesResponse {
		return &v
	}).(PoolPropertiesResponsePtrOutput)
}

// UUID v4 used to identify the Pool
func (o PoolPropertiesResponseOutput) PoolId() pulumi.StringOutput {
	return o.ApplyT(func(v PoolPropertiesResponse) string { return v.PoolId }).(pulumi.StringOutput)
}

// Azure lifecycle management
func (o PoolPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PoolPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The service level of the file system
func (o PoolPropertiesResponseOutput) ServiceLevel() pulumi.StringOutput {
	return o.ApplyT(func(v PoolPropertiesResponse) string { return v.ServiceLevel }).(pulumi.StringOutput)
}

// Provisioned size of the pool (in bytes). Allowed values are in 4TiB chunks (value must be multiply of 4398046511104).
func (o PoolPropertiesResponseOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v PoolPropertiesResponse) int { return v.Size }).(pulumi.IntOutput)
}

type PoolPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (PoolPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolPropertiesResponse)(nil)).Elem()
}

func (o PoolPropertiesResponsePtrOutput) ToPoolPropertiesResponsePtrOutput() PoolPropertiesResponsePtrOutput {
	return o
}

func (o PoolPropertiesResponsePtrOutput) ToPoolPropertiesResponsePtrOutputWithContext(ctx context.Context) PoolPropertiesResponsePtrOutput {
	return o
}

func (o PoolPropertiesResponsePtrOutput) Elem() PoolPropertiesResponseOutput {
	return o.ApplyT(func(v *PoolPropertiesResponse) PoolPropertiesResponse { return *v }).(PoolPropertiesResponseOutput)
}

// UUID v4 used to identify the Pool
func (o PoolPropertiesResponsePtrOutput) PoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PoolId
	}).(pulumi.StringPtrOutput)
}

// Azure lifecycle management
func (o PoolPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The service level of the file system
func (o PoolPropertiesResponsePtrOutput) ServiceLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceLevel
	}).(pulumi.StringPtrOutput)
}

// Provisioned size of the pool (in bytes). Allowed values are in 4TiB chunks (value must be multiply of 4398046511104).
func (o PoolPropertiesResponsePtrOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Size
	}).(pulumi.IntPtrOutput)
}

// Resource tags
type ResourceTags struct {
}

// ResourceTagsInput is an input type that accepts ResourceTagsArgs and ResourceTagsOutput values.
// You can construct a concrete instance of `ResourceTagsInput` via:
//
//          ResourceTagsArgs{...}
type ResourceTagsInput interface {
	pulumi.Input

	ToResourceTagsOutput() ResourceTagsOutput
	ToResourceTagsOutputWithContext(context.Context) ResourceTagsOutput
}

// Resource tags
type ResourceTagsArgs struct {
}

func (ResourceTagsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceTags)(nil)).Elem()
}

func (i ResourceTagsArgs) ToResourceTagsOutput() ResourceTagsOutput {
	return i.ToResourceTagsOutputWithContext(context.Background())
}

func (i ResourceTagsArgs) ToResourceTagsOutputWithContext(ctx context.Context) ResourceTagsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceTagsOutput)
}

func (i ResourceTagsArgs) ToResourceTagsPtrOutput() ResourceTagsPtrOutput {
	return i.ToResourceTagsPtrOutputWithContext(context.Background())
}

func (i ResourceTagsArgs) ToResourceTagsPtrOutputWithContext(ctx context.Context) ResourceTagsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceTagsOutput).ToResourceTagsPtrOutputWithContext(ctx)
}

// ResourceTagsPtrInput is an input type that accepts ResourceTagsArgs, ResourceTagsPtr and ResourceTagsPtrOutput values.
// You can construct a concrete instance of `ResourceTagsPtrInput` via:
//
//          ResourceTagsArgs{...}
//
//  or:
//
//          nil
type ResourceTagsPtrInput interface {
	pulumi.Input

	ToResourceTagsPtrOutput() ResourceTagsPtrOutput
	ToResourceTagsPtrOutputWithContext(context.Context) ResourceTagsPtrOutput
}

type resourceTagsPtrType ResourceTagsArgs

func ResourceTagsPtr(v *ResourceTagsArgs) ResourceTagsPtrInput {
	return (*resourceTagsPtrType)(v)
}

func (*resourceTagsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceTags)(nil)).Elem()
}

func (i *resourceTagsPtrType) ToResourceTagsPtrOutput() ResourceTagsPtrOutput {
	return i.ToResourceTagsPtrOutputWithContext(context.Background())
}

func (i *resourceTagsPtrType) ToResourceTagsPtrOutputWithContext(ctx context.Context) ResourceTagsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceTagsPtrOutput)
}

// Resource tags
type ResourceTagsOutput struct{ *pulumi.OutputState }

func (ResourceTagsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceTags)(nil)).Elem()
}

func (o ResourceTagsOutput) ToResourceTagsOutput() ResourceTagsOutput {
	return o
}

func (o ResourceTagsOutput) ToResourceTagsOutputWithContext(ctx context.Context) ResourceTagsOutput {
	return o
}

func (o ResourceTagsOutput) ToResourceTagsPtrOutput() ResourceTagsPtrOutput {
	return o.ToResourceTagsPtrOutputWithContext(context.Background())
}

func (o ResourceTagsOutput) ToResourceTagsPtrOutputWithContext(ctx context.Context) ResourceTagsPtrOutput {
	return o.ApplyT(func(v ResourceTags) *ResourceTags {
		return &v
	}).(ResourceTagsPtrOutput)
}

type ResourceTagsPtrOutput struct{ *pulumi.OutputState }

func (ResourceTagsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceTags)(nil)).Elem()
}

func (o ResourceTagsPtrOutput) ToResourceTagsPtrOutput() ResourceTagsPtrOutput {
	return o
}

func (o ResourceTagsPtrOutput) ToResourceTagsPtrOutputWithContext(ctx context.Context) ResourceTagsPtrOutput {
	return o
}

func (o ResourceTagsPtrOutput) Elem() ResourceTagsOutput {
	return o.ApplyT(func(v *ResourceTags) ResourceTags { return *v }).(ResourceTagsOutput)
}

// Resource tags
type ResourceTagsResponse struct {
}

// ResourceTagsResponseInput is an input type that accepts ResourceTagsResponseArgs and ResourceTagsResponseOutput values.
// You can construct a concrete instance of `ResourceTagsResponseInput` via:
//
//          ResourceTagsResponseArgs{...}
type ResourceTagsResponseInput interface {
	pulumi.Input

	ToResourceTagsResponseOutput() ResourceTagsResponseOutput
	ToResourceTagsResponseOutputWithContext(context.Context) ResourceTagsResponseOutput
}

// Resource tags
type ResourceTagsResponseArgs struct {
}

func (ResourceTagsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceTagsResponse)(nil)).Elem()
}

func (i ResourceTagsResponseArgs) ToResourceTagsResponseOutput() ResourceTagsResponseOutput {
	return i.ToResourceTagsResponseOutputWithContext(context.Background())
}

func (i ResourceTagsResponseArgs) ToResourceTagsResponseOutputWithContext(ctx context.Context) ResourceTagsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceTagsResponseOutput)
}

func (i ResourceTagsResponseArgs) ToResourceTagsResponsePtrOutput() ResourceTagsResponsePtrOutput {
	return i.ToResourceTagsResponsePtrOutputWithContext(context.Background())
}

func (i ResourceTagsResponseArgs) ToResourceTagsResponsePtrOutputWithContext(ctx context.Context) ResourceTagsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceTagsResponseOutput).ToResourceTagsResponsePtrOutputWithContext(ctx)
}

// ResourceTagsResponsePtrInput is an input type that accepts ResourceTagsResponseArgs, ResourceTagsResponsePtr and ResourceTagsResponsePtrOutput values.
// You can construct a concrete instance of `ResourceTagsResponsePtrInput` via:
//
//          ResourceTagsResponseArgs{...}
//
//  or:
//
//          nil
type ResourceTagsResponsePtrInput interface {
	pulumi.Input

	ToResourceTagsResponsePtrOutput() ResourceTagsResponsePtrOutput
	ToResourceTagsResponsePtrOutputWithContext(context.Context) ResourceTagsResponsePtrOutput
}

type resourceTagsResponsePtrType ResourceTagsResponseArgs

func ResourceTagsResponsePtr(v *ResourceTagsResponseArgs) ResourceTagsResponsePtrInput {
	return (*resourceTagsResponsePtrType)(v)
}

func (*resourceTagsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceTagsResponse)(nil)).Elem()
}

func (i *resourceTagsResponsePtrType) ToResourceTagsResponsePtrOutput() ResourceTagsResponsePtrOutput {
	return i.ToResourceTagsResponsePtrOutputWithContext(context.Background())
}

func (i *resourceTagsResponsePtrType) ToResourceTagsResponsePtrOutputWithContext(ctx context.Context) ResourceTagsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceTagsResponsePtrOutput)
}

// Resource tags
type ResourceTagsResponseOutput struct{ *pulumi.OutputState }

func (ResourceTagsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceTagsResponse)(nil)).Elem()
}

func (o ResourceTagsResponseOutput) ToResourceTagsResponseOutput() ResourceTagsResponseOutput {
	return o
}

func (o ResourceTagsResponseOutput) ToResourceTagsResponseOutputWithContext(ctx context.Context) ResourceTagsResponseOutput {
	return o
}

func (o ResourceTagsResponseOutput) ToResourceTagsResponsePtrOutput() ResourceTagsResponsePtrOutput {
	return o.ToResourceTagsResponsePtrOutputWithContext(context.Background())
}

func (o ResourceTagsResponseOutput) ToResourceTagsResponsePtrOutputWithContext(ctx context.Context) ResourceTagsResponsePtrOutput {
	return o.ApplyT(func(v ResourceTagsResponse) *ResourceTagsResponse {
		return &v
	}).(ResourceTagsResponsePtrOutput)
}

type ResourceTagsResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceTagsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceTagsResponse)(nil)).Elem()
}

func (o ResourceTagsResponsePtrOutput) ToResourceTagsResponsePtrOutput() ResourceTagsResponsePtrOutput {
	return o
}

func (o ResourceTagsResponsePtrOutput) ToResourceTagsResponsePtrOutputWithContext(ctx context.Context) ResourceTagsResponsePtrOutput {
	return o
}

func (o ResourceTagsResponsePtrOutput) Elem() ResourceTagsResponseOutput {
	return o.ApplyT(func(v *ResourceTagsResponse) ResourceTagsResponse { return *v }).(ResourceTagsResponseOutput)
}

// Snapshot properties
type SnapshotProperties struct {
	// UUID v4 used to identify the FileSystem
	FileSystemId *string `pulumi:"fileSystemId"`
}

// SnapshotPropertiesInput is an input type that accepts SnapshotPropertiesArgs and SnapshotPropertiesOutput values.
// You can construct a concrete instance of `SnapshotPropertiesInput` via:
//
//          SnapshotPropertiesArgs{...}
type SnapshotPropertiesInput interface {
	pulumi.Input

	ToSnapshotPropertiesOutput() SnapshotPropertiesOutput
	ToSnapshotPropertiesOutputWithContext(context.Context) SnapshotPropertiesOutput
}

// Snapshot properties
type SnapshotPropertiesArgs struct {
	// UUID v4 used to identify the FileSystem
	FileSystemId pulumi.StringPtrInput `pulumi:"fileSystemId"`
}

func (SnapshotPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotProperties)(nil)).Elem()
}

func (i SnapshotPropertiesArgs) ToSnapshotPropertiesOutput() SnapshotPropertiesOutput {
	return i.ToSnapshotPropertiesOutputWithContext(context.Background())
}

func (i SnapshotPropertiesArgs) ToSnapshotPropertiesOutputWithContext(ctx context.Context) SnapshotPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotPropertiesOutput)
}

func (i SnapshotPropertiesArgs) ToSnapshotPropertiesPtrOutput() SnapshotPropertiesPtrOutput {
	return i.ToSnapshotPropertiesPtrOutputWithContext(context.Background())
}

func (i SnapshotPropertiesArgs) ToSnapshotPropertiesPtrOutputWithContext(ctx context.Context) SnapshotPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotPropertiesOutput).ToSnapshotPropertiesPtrOutputWithContext(ctx)
}

// SnapshotPropertiesPtrInput is an input type that accepts SnapshotPropertiesArgs, SnapshotPropertiesPtr and SnapshotPropertiesPtrOutput values.
// You can construct a concrete instance of `SnapshotPropertiesPtrInput` via:
//
//          SnapshotPropertiesArgs{...}
//
//  or:
//
//          nil
type SnapshotPropertiesPtrInput interface {
	pulumi.Input

	ToSnapshotPropertiesPtrOutput() SnapshotPropertiesPtrOutput
	ToSnapshotPropertiesPtrOutputWithContext(context.Context) SnapshotPropertiesPtrOutput
}

type snapshotPropertiesPtrType SnapshotPropertiesArgs

func SnapshotPropertiesPtr(v *SnapshotPropertiesArgs) SnapshotPropertiesPtrInput {
	return (*snapshotPropertiesPtrType)(v)
}

func (*snapshotPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotProperties)(nil)).Elem()
}

func (i *snapshotPropertiesPtrType) ToSnapshotPropertiesPtrOutput() SnapshotPropertiesPtrOutput {
	return i.ToSnapshotPropertiesPtrOutputWithContext(context.Background())
}

func (i *snapshotPropertiesPtrType) ToSnapshotPropertiesPtrOutputWithContext(ctx context.Context) SnapshotPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotPropertiesPtrOutput)
}

// Snapshot properties
type SnapshotPropertiesOutput struct{ *pulumi.OutputState }

func (SnapshotPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotProperties)(nil)).Elem()
}

func (o SnapshotPropertiesOutput) ToSnapshotPropertiesOutput() SnapshotPropertiesOutput {
	return o
}

func (o SnapshotPropertiesOutput) ToSnapshotPropertiesOutputWithContext(ctx context.Context) SnapshotPropertiesOutput {
	return o
}

func (o SnapshotPropertiesOutput) ToSnapshotPropertiesPtrOutput() SnapshotPropertiesPtrOutput {
	return o.ToSnapshotPropertiesPtrOutputWithContext(context.Background())
}

func (o SnapshotPropertiesOutput) ToSnapshotPropertiesPtrOutputWithContext(ctx context.Context) SnapshotPropertiesPtrOutput {
	return o.ApplyT(func(v SnapshotProperties) *SnapshotProperties {
		return &v
	}).(SnapshotPropertiesPtrOutput)
}

// UUID v4 used to identify the FileSystem
func (o SnapshotPropertiesOutput) FileSystemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnapshotProperties) *string { return v.FileSystemId }).(pulumi.StringPtrOutput)
}

type SnapshotPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SnapshotPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotProperties)(nil)).Elem()
}

func (o SnapshotPropertiesPtrOutput) ToSnapshotPropertiesPtrOutput() SnapshotPropertiesPtrOutput {
	return o
}

func (o SnapshotPropertiesPtrOutput) ToSnapshotPropertiesPtrOutputWithContext(ctx context.Context) SnapshotPropertiesPtrOutput {
	return o
}

func (o SnapshotPropertiesPtrOutput) Elem() SnapshotPropertiesOutput {
	return o.ApplyT(func(v *SnapshotProperties) SnapshotProperties { return *v }).(SnapshotPropertiesOutput)
}

// UUID v4 used to identify the FileSystem
func (o SnapshotPropertiesPtrOutput) FileSystemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnapshotProperties) *string {
		if v == nil {
			return nil
		}
		return v.FileSystemId
	}).(pulumi.StringPtrOutput)
}

// Snapshot properties
type SnapshotPropertiesResponse struct {
	// The creation date of the snapshot
	Created string `pulumi:"created"`
	// UUID v4 used to identify the FileSystem
	FileSystemId *string `pulumi:"fileSystemId"`
	// Azure lifecycle management
	ProvisioningState string `pulumi:"provisioningState"`
	// UUID v4 used to identify the Snapshot
	SnapshotId string `pulumi:"snapshotId"`
}

// SnapshotPropertiesResponseInput is an input type that accepts SnapshotPropertiesResponseArgs and SnapshotPropertiesResponseOutput values.
// You can construct a concrete instance of `SnapshotPropertiesResponseInput` via:
//
//          SnapshotPropertiesResponseArgs{...}
type SnapshotPropertiesResponseInput interface {
	pulumi.Input

	ToSnapshotPropertiesResponseOutput() SnapshotPropertiesResponseOutput
	ToSnapshotPropertiesResponseOutputWithContext(context.Context) SnapshotPropertiesResponseOutput
}

// Snapshot properties
type SnapshotPropertiesResponseArgs struct {
	// The creation date of the snapshot
	Created pulumi.StringInput `pulumi:"created"`
	// UUID v4 used to identify the FileSystem
	FileSystemId pulumi.StringPtrInput `pulumi:"fileSystemId"`
	// Azure lifecycle management
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// UUID v4 used to identify the Snapshot
	SnapshotId pulumi.StringInput `pulumi:"snapshotId"`
}

func (SnapshotPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotPropertiesResponse)(nil)).Elem()
}

func (i SnapshotPropertiesResponseArgs) ToSnapshotPropertiesResponseOutput() SnapshotPropertiesResponseOutput {
	return i.ToSnapshotPropertiesResponseOutputWithContext(context.Background())
}

func (i SnapshotPropertiesResponseArgs) ToSnapshotPropertiesResponseOutputWithContext(ctx context.Context) SnapshotPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotPropertiesResponseOutput)
}

func (i SnapshotPropertiesResponseArgs) ToSnapshotPropertiesResponsePtrOutput() SnapshotPropertiesResponsePtrOutput {
	return i.ToSnapshotPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i SnapshotPropertiesResponseArgs) ToSnapshotPropertiesResponsePtrOutputWithContext(ctx context.Context) SnapshotPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotPropertiesResponseOutput).ToSnapshotPropertiesResponsePtrOutputWithContext(ctx)
}

// SnapshotPropertiesResponsePtrInput is an input type that accepts SnapshotPropertiesResponseArgs, SnapshotPropertiesResponsePtr and SnapshotPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `SnapshotPropertiesResponsePtrInput` via:
//
//          SnapshotPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type SnapshotPropertiesResponsePtrInput interface {
	pulumi.Input

	ToSnapshotPropertiesResponsePtrOutput() SnapshotPropertiesResponsePtrOutput
	ToSnapshotPropertiesResponsePtrOutputWithContext(context.Context) SnapshotPropertiesResponsePtrOutput
}

type snapshotPropertiesResponsePtrType SnapshotPropertiesResponseArgs

func SnapshotPropertiesResponsePtr(v *SnapshotPropertiesResponseArgs) SnapshotPropertiesResponsePtrInput {
	return (*snapshotPropertiesResponsePtrType)(v)
}

func (*snapshotPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotPropertiesResponse)(nil)).Elem()
}

func (i *snapshotPropertiesResponsePtrType) ToSnapshotPropertiesResponsePtrOutput() SnapshotPropertiesResponsePtrOutput {
	return i.ToSnapshotPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *snapshotPropertiesResponsePtrType) ToSnapshotPropertiesResponsePtrOutputWithContext(ctx context.Context) SnapshotPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotPropertiesResponsePtrOutput)
}

// Snapshot properties
type SnapshotPropertiesResponseOutput struct{ *pulumi.OutputState }

func (SnapshotPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotPropertiesResponse)(nil)).Elem()
}

func (o SnapshotPropertiesResponseOutput) ToSnapshotPropertiesResponseOutput() SnapshotPropertiesResponseOutput {
	return o
}

func (o SnapshotPropertiesResponseOutput) ToSnapshotPropertiesResponseOutputWithContext(ctx context.Context) SnapshotPropertiesResponseOutput {
	return o
}

func (o SnapshotPropertiesResponseOutput) ToSnapshotPropertiesResponsePtrOutput() SnapshotPropertiesResponsePtrOutput {
	return o.ToSnapshotPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o SnapshotPropertiesResponseOutput) ToSnapshotPropertiesResponsePtrOutputWithContext(ctx context.Context) SnapshotPropertiesResponsePtrOutput {
	return o.ApplyT(func(v SnapshotPropertiesResponse) *SnapshotPropertiesResponse {
		return &v
	}).(SnapshotPropertiesResponsePtrOutput)
}

// The creation date of the snapshot
func (o SnapshotPropertiesResponseOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v SnapshotPropertiesResponse) string { return v.Created }).(pulumi.StringOutput)
}

// UUID v4 used to identify the FileSystem
func (o SnapshotPropertiesResponseOutput) FileSystemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnapshotPropertiesResponse) *string { return v.FileSystemId }).(pulumi.StringPtrOutput)
}

// Azure lifecycle management
func (o SnapshotPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SnapshotPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// UUID v4 used to identify the Snapshot
func (o SnapshotPropertiesResponseOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v SnapshotPropertiesResponse) string { return v.SnapshotId }).(pulumi.StringOutput)
}

type SnapshotPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (SnapshotPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotPropertiesResponse)(nil)).Elem()
}

func (o SnapshotPropertiesResponsePtrOutput) ToSnapshotPropertiesResponsePtrOutput() SnapshotPropertiesResponsePtrOutput {
	return o
}

func (o SnapshotPropertiesResponsePtrOutput) ToSnapshotPropertiesResponsePtrOutputWithContext(ctx context.Context) SnapshotPropertiesResponsePtrOutput {
	return o
}

func (o SnapshotPropertiesResponsePtrOutput) Elem() SnapshotPropertiesResponseOutput {
	return o.ApplyT(func(v *SnapshotPropertiesResponse) SnapshotPropertiesResponse { return *v }).(SnapshotPropertiesResponseOutput)
}

// The creation date of the snapshot
func (o SnapshotPropertiesResponsePtrOutput) Created() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnapshotPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Created
	}).(pulumi.StringPtrOutput)
}

// UUID v4 used to identify the FileSystem
func (o SnapshotPropertiesResponsePtrOutput) FileSystemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnapshotPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.FileSystemId
	}).(pulumi.StringPtrOutput)
}

// Azure lifecycle management
func (o SnapshotPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnapshotPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// UUID v4 used to identify the Snapshot
func (o SnapshotPropertiesResponsePtrOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnapshotPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SnapshotId
	}).(pulumi.StringPtrOutput)
}

// Volume properties
type VolumeProperties struct {
	// A unique file path for the volume. Used when creating mount targets
	CreationToken string `pulumi:"creationToken"`
	// Set of export policy rules
	ExportPolicy *VolumePropertiesProperties `pulumi:"exportPolicy"`
	// List of mount targets
	MountTargets []MountTargetProperties `pulumi:"mountTargets"`
	// Set of protocol types
	ProtocolTypes []string `pulumi:"protocolTypes"`
	// The service level of the file system
	ServiceLevel *string `pulumi:"serviceLevel"`
	// UUID v4 or resource identifier used to identify the Snapshot.
	SnapshotId *string `pulumi:"snapshotId"`
	// The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes
	SubnetId string `pulumi:"subnetId"`
	// Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB. Specified in bytes.
	UsageThreshold int `pulumi:"usageThreshold"`
}

// VolumePropertiesInput is an input type that accepts VolumePropertiesArgs and VolumePropertiesOutput values.
// You can construct a concrete instance of `VolumePropertiesInput` via:
//
//          VolumePropertiesArgs{...}
type VolumePropertiesInput interface {
	pulumi.Input

	ToVolumePropertiesOutput() VolumePropertiesOutput
	ToVolumePropertiesOutputWithContext(context.Context) VolumePropertiesOutput
}

// Volume properties
type VolumePropertiesArgs struct {
	// A unique file path for the volume. Used when creating mount targets
	CreationToken pulumi.StringInput `pulumi:"creationToken"`
	// Set of export policy rules
	ExportPolicy VolumePropertiesPropertiesPtrInput `pulumi:"exportPolicy"`
	// List of mount targets
	MountTargets MountTargetPropertiesArrayInput `pulumi:"mountTargets"`
	// Set of protocol types
	ProtocolTypes pulumi.StringArrayInput `pulumi:"protocolTypes"`
	// The service level of the file system
	ServiceLevel pulumi.StringPtrInput `pulumi:"serviceLevel"`
	// UUID v4 or resource identifier used to identify the Snapshot.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	// The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB. Specified in bytes.
	UsageThreshold pulumi.IntInput `pulumi:"usageThreshold"`
}

func (VolumePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeProperties)(nil)).Elem()
}

func (i VolumePropertiesArgs) ToVolumePropertiesOutput() VolumePropertiesOutput {
	return i.ToVolumePropertiesOutputWithContext(context.Background())
}

func (i VolumePropertiesArgs) ToVolumePropertiesOutputWithContext(ctx context.Context) VolumePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumePropertiesOutput)
}

func (i VolumePropertiesArgs) ToVolumePropertiesPtrOutput() VolumePropertiesPtrOutput {
	return i.ToVolumePropertiesPtrOutputWithContext(context.Background())
}

func (i VolumePropertiesArgs) ToVolumePropertiesPtrOutputWithContext(ctx context.Context) VolumePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumePropertiesOutput).ToVolumePropertiesPtrOutputWithContext(ctx)
}

// VolumePropertiesPtrInput is an input type that accepts VolumePropertiesArgs, VolumePropertiesPtr and VolumePropertiesPtrOutput values.
// You can construct a concrete instance of `VolumePropertiesPtrInput` via:
//
//          VolumePropertiesArgs{...}
//
//  or:
//
//          nil
type VolumePropertiesPtrInput interface {
	pulumi.Input

	ToVolumePropertiesPtrOutput() VolumePropertiesPtrOutput
	ToVolumePropertiesPtrOutputWithContext(context.Context) VolumePropertiesPtrOutput
}

type volumePropertiesPtrType VolumePropertiesArgs

func VolumePropertiesPtr(v *VolumePropertiesArgs) VolumePropertiesPtrInput {
	return (*volumePropertiesPtrType)(v)
}

func (*volumePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeProperties)(nil)).Elem()
}

func (i *volumePropertiesPtrType) ToVolumePropertiesPtrOutput() VolumePropertiesPtrOutput {
	return i.ToVolumePropertiesPtrOutputWithContext(context.Background())
}

func (i *volumePropertiesPtrType) ToVolumePropertiesPtrOutputWithContext(ctx context.Context) VolumePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumePropertiesPtrOutput)
}

// Volume properties
type VolumePropertiesOutput struct{ *pulumi.OutputState }

func (VolumePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeProperties)(nil)).Elem()
}

func (o VolumePropertiesOutput) ToVolumePropertiesOutput() VolumePropertiesOutput {
	return o
}

func (o VolumePropertiesOutput) ToVolumePropertiesOutputWithContext(ctx context.Context) VolumePropertiesOutput {
	return o
}

func (o VolumePropertiesOutput) ToVolumePropertiesPtrOutput() VolumePropertiesPtrOutput {
	return o.ToVolumePropertiesPtrOutputWithContext(context.Background())
}

func (o VolumePropertiesOutput) ToVolumePropertiesPtrOutputWithContext(ctx context.Context) VolumePropertiesPtrOutput {
	return o.ApplyT(func(v VolumeProperties) *VolumeProperties {
		return &v
	}).(VolumePropertiesPtrOutput)
}

// A unique file path for the volume. Used when creating mount targets
func (o VolumePropertiesOutput) CreationToken() pulumi.StringOutput {
	return o.ApplyT(func(v VolumeProperties) string { return v.CreationToken }).(pulumi.StringOutput)
}

// Set of export policy rules
func (o VolumePropertiesOutput) ExportPolicy() VolumePropertiesPropertiesPtrOutput {
	return o.ApplyT(func(v VolumeProperties) *VolumePropertiesProperties { return v.ExportPolicy }).(VolumePropertiesPropertiesPtrOutput)
}

// List of mount targets
func (o VolumePropertiesOutput) MountTargets() MountTargetPropertiesArrayOutput {
	return o.ApplyT(func(v VolumeProperties) []MountTargetProperties { return v.MountTargets }).(MountTargetPropertiesArrayOutput)
}

// Set of protocol types
func (o VolumePropertiesOutput) ProtocolTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VolumeProperties) []string { return v.ProtocolTypes }).(pulumi.StringArrayOutput)
}

// The service level of the file system
func (o VolumePropertiesOutput) ServiceLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeProperties) *string { return v.ServiceLevel }).(pulumi.StringPtrOutput)
}

// UUID v4 or resource identifier used to identify the Snapshot.
func (o VolumePropertiesOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeProperties) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes
func (o VolumePropertiesOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v VolumeProperties) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB. Specified in bytes.
func (o VolumePropertiesOutput) UsageThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v VolumeProperties) int { return v.UsageThreshold }).(pulumi.IntOutput)
}

type VolumePropertiesPtrOutput struct{ *pulumi.OutputState }

func (VolumePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeProperties)(nil)).Elem()
}

func (o VolumePropertiesPtrOutput) ToVolumePropertiesPtrOutput() VolumePropertiesPtrOutput {
	return o
}

func (o VolumePropertiesPtrOutput) ToVolumePropertiesPtrOutputWithContext(ctx context.Context) VolumePropertiesPtrOutput {
	return o
}

func (o VolumePropertiesPtrOutput) Elem() VolumePropertiesOutput {
	return o.ApplyT(func(v *VolumeProperties) VolumeProperties { return *v }).(VolumePropertiesOutput)
}

// A unique file path for the volume. Used when creating mount targets
func (o VolumePropertiesPtrOutput) CreationToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumeProperties) *string {
		if v == nil {
			return nil
		}
		return &v.CreationToken
	}).(pulumi.StringPtrOutput)
}

// Set of export policy rules
func (o VolumePropertiesPtrOutput) ExportPolicy() VolumePropertiesPropertiesPtrOutput {
	return o.ApplyT(func(v *VolumeProperties) *VolumePropertiesProperties {
		if v == nil {
			return nil
		}
		return v.ExportPolicy
	}).(VolumePropertiesPropertiesPtrOutput)
}

// List of mount targets
func (o VolumePropertiesPtrOutput) MountTargets() MountTargetPropertiesArrayOutput {
	return o.ApplyT(func(v *VolumeProperties) []MountTargetProperties {
		if v == nil {
			return nil
		}
		return v.MountTargets
	}).(MountTargetPropertiesArrayOutput)
}

// Set of protocol types
func (o VolumePropertiesPtrOutput) ProtocolTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VolumeProperties) []string {
		if v == nil {
			return nil
		}
		return v.ProtocolTypes
	}).(pulumi.StringArrayOutput)
}

// The service level of the file system
func (o VolumePropertiesPtrOutput) ServiceLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumeProperties) *string {
		if v == nil {
			return nil
		}
		return v.ServiceLevel
	}).(pulumi.StringPtrOutput)
}

// UUID v4 or resource identifier used to identify the Snapshot.
func (o VolumePropertiesPtrOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumeProperties) *string {
		if v == nil {
			return nil
		}
		return v.SnapshotId
	}).(pulumi.StringPtrOutput)
}

// The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes
func (o VolumePropertiesPtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumeProperties) *string {
		if v == nil {
			return nil
		}
		return &v.SubnetId
	}).(pulumi.StringPtrOutput)
}

// Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB. Specified in bytes.
func (o VolumePropertiesPtrOutput) UsageThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VolumeProperties) *int {
		if v == nil {
			return nil
		}
		return &v.UsageThreshold
	}).(pulumi.IntPtrOutput)
}

// Set of export policy rules
type VolumePropertiesProperties struct {
	// Export policy rule
	Rules []ExportPolicyRule `pulumi:"rules"`
}

// VolumePropertiesPropertiesInput is an input type that accepts VolumePropertiesPropertiesArgs and VolumePropertiesPropertiesOutput values.
// You can construct a concrete instance of `VolumePropertiesPropertiesInput` via:
//
//          VolumePropertiesPropertiesArgs{...}
type VolumePropertiesPropertiesInput interface {
	pulumi.Input

	ToVolumePropertiesPropertiesOutput() VolumePropertiesPropertiesOutput
	ToVolumePropertiesPropertiesOutputWithContext(context.Context) VolumePropertiesPropertiesOutput
}

// Set of export policy rules
type VolumePropertiesPropertiesArgs struct {
	// Export policy rule
	Rules ExportPolicyRuleArrayInput `pulumi:"rules"`
}

func (VolumePropertiesPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumePropertiesProperties)(nil)).Elem()
}

func (i VolumePropertiesPropertiesArgs) ToVolumePropertiesPropertiesOutput() VolumePropertiesPropertiesOutput {
	return i.ToVolumePropertiesPropertiesOutputWithContext(context.Background())
}

func (i VolumePropertiesPropertiesArgs) ToVolumePropertiesPropertiesOutputWithContext(ctx context.Context) VolumePropertiesPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumePropertiesPropertiesOutput)
}

func (i VolumePropertiesPropertiesArgs) ToVolumePropertiesPropertiesPtrOutput() VolumePropertiesPropertiesPtrOutput {
	return i.ToVolumePropertiesPropertiesPtrOutputWithContext(context.Background())
}

func (i VolumePropertiesPropertiesArgs) ToVolumePropertiesPropertiesPtrOutputWithContext(ctx context.Context) VolumePropertiesPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumePropertiesPropertiesOutput).ToVolumePropertiesPropertiesPtrOutputWithContext(ctx)
}

// VolumePropertiesPropertiesPtrInput is an input type that accepts VolumePropertiesPropertiesArgs, VolumePropertiesPropertiesPtr and VolumePropertiesPropertiesPtrOutput values.
// You can construct a concrete instance of `VolumePropertiesPropertiesPtrInput` via:
//
//          VolumePropertiesPropertiesArgs{...}
//
//  or:
//
//          nil
type VolumePropertiesPropertiesPtrInput interface {
	pulumi.Input

	ToVolumePropertiesPropertiesPtrOutput() VolumePropertiesPropertiesPtrOutput
	ToVolumePropertiesPropertiesPtrOutputWithContext(context.Context) VolumePropertiesPropertiesPtrOutput
}

type volumePropertiesPropertiesPtrType VolumePropertiesPropertiesArgs

func VolumePropertiesPropertiesPtr(v *VolumePropertiesPropertiesArgs) VolumePropertiesPropertiesPtrInput {
	return (*volumePropertiesPropertiesPtrType)(v)
}

func (*volumePropertiesPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumePropertiesProperties)(nil)).Elem()
}

func (i *volumePropertiesPropertiesPtrType) ToVolumePropertiesPropertiesPtrOutput() VolumePropertiesPropertiesPtrOutput {
	return i.ToVolumePropertiesPropertiesPtrOutputWithContext(context.Background())
}

func (i *volumePropertiesPropertiesPtrType) ToVolumePropertiesPropertiesPtrOutputWithContext(ctx context.Context) VolumePropertiesPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumePropertiesPropertiesPtrOutput)
}

// Set of export policy rules
type VolumePropertiesPropertiesOutput struct{ *pulumi.OutputState }

func (VolumePropertiesPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumePropertiesProperties)(nil)).Elem()
}

func (o VolumePropertiesPropertiesOutput) ToVolumePropertiesPropertiesOutput() VolumePropertiesPropertiesOutput {
	return o
}

func (o VolumePropertiesPropertiesOutput) ToVolumePropertiesPropertiesOutputWithContext(ctx context.Context) VolumePropertiesPropertiesOutput {
	return o
}

func (o VolumePropertiesPropertiesOutput) ToVolumePropertiesPropertiesPtrOutput() VolumePropertiesPropertiesPtrOutput {
	return o.ToVolumePropertiesPropertiesPtrOutputWithContext(context.Background())
}

func (o VolumePropertiesPropertiesOutput) ToVolumePropertiesPropertiesPtrOutputWithContext(ctx context.Context) VolumePropertiesPropertiesPtrOutput {
	return o.ApplyT(func(v VolumePropertiesProperties) *VolumePropertiesProperties {
		return &v
	}).(VolumePropertiesPropertiesPtrOutput)
}

// Export policy rule
func (o VolumePropertiesPropertiesOutput) Rules() ExportPolicyRuleArrayOutput {
	return o.ApplyT(func(v VolumePropertiesProperties) []ExportPolicyRule { return v.Rules }).(ExportPolicyRuleArrayOutput)
}

type VolumePropertiesPropertiesPtrOutput struct{ *pulumi.OutputState }

func (VolumePropertiesPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumePropertiesProperties)(nil)).Elem()
}

func (o VolumePropertiesPropertiesPtrOutput) ToVolumePropertiesPropertiesPtrOutput() VolumePropertiesPropertiesPtrOutput {
	return o
}

func (o VolumePropertiesPropertiesPtrOutput) ToVolumePropertiesPropertiesPtrOutputWithContext(ctx context.Context) VolumePropertiesPropertiesPtrOutput {
	return o
}

func (o VolumePropertiesPropertiesPtrOutput) Elem() VolumePropertiesPropertiesOutput {
	return o.ApplyT(func(v *VolumePropertiesProperties) VolumePropertiesProperties { return *v }).(VolumePropertiesPropertiesOutput)
}

// Export policy rule
func (o VolumePropertiesPropertiesPtrOutput) Rules() ExportPolicyRuleArrayOutput {
	return o.ApplyT(func(v *VolumePropertiesProperties) []ExportPolicyRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(ExportPolicyRuleArrayOutput)
}

// Volume properties
type VolumePropertiesResponse struct {
	// Unique Baremetal Tenant Identifier.
	BaremetalTenantId string `pulumi:"baremetalTenantId"`
	// A unique file path for the volume. Used when creating mount targets
	CreationToken string `pulumi:"creationToken"`
	// Set of export policy rules
	ExportPolicy *VolumePropertiesResponseProperties `pulumi:"exportPolicy"`
	// Unique FileSystem Identifier.
	FileSystemId string `pulumi:"fileSystemId"`
	// List of mount targets
	MountTargets []MountTargetPropertiesResponse `pulumi:"mountTargets"`
	// Set of protocol types
	ProtocolTypes []string `pulumi:"protocolTypes"`
	// Azure lifecycle management
	ProvisioningState string `pulumi:"provisioningState"`
	// The service level of the file system
	ServiceLevel *string `pulumi:"serviceLevel"`
	// UUID v4 or resource identifier used to identify the Snapshot.
	SnapshotId *string `pulumi:"snapshotId"`
	// The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes
	SubnetId string `pulumi:"subnetId"`
	// Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB. Specified in bytes.
	UsageThreshold int `pulumi:"usageThreshold"`
}

// VolumePropertiesResponseInput is an input type that accepts VolumePropertiesResponseArgs and VolumePropertiesResponseOutput values.
// You can construct a concrete instance of `VolumePropertiesResponseInput` via:
//
//          VolumePropertiesResponseArgs{...}
type VolumePropertiesResponseInput interface {
	pulumi.Input

	ToVolumePropertiesResponseOutput() VolumePropertiesResponseOutput
	ToVolumePropertiesResponseOutputWithContext(context.Context) VolumePropertiesResponseOutput
}

// Volume properties
type VolumePropertiesResponseArgs struct {
	// Unique Baremetal Tenant Identifier.
	BaremetalTenantId pulumi.StringInput `pulumi:"baremetalTenantId"`
	// A unique file path for the volume. Used when creating mount targets
	CreationToken pulumi.StringInput `pulumi:"creationToken"`
	// Set of export policy rules
	ExportPolicy VolumePropertiesResponsePropertiesPtrInput `pulumi:"exportPolicy"`
	// Unique FileSystem Identifier.
	FileSystemId pulumi.StringInput `pulumi:"fileSystemId"`
	// List of mount targets
	MountTargets MountTargetPropertiesResponseArrayInput `pulumi:"mountTargets"`
	// Set of protocol types
	ProtocolTypes pulumi.StringArrayInput `pulumi:"protocolTypes"`
	// Azure lifecycle management
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The service level of the file system
	ServiceLevel pulumi.StringPtrInput `pulumi:"serviceLevel"`
	// UUID v4 or resource identifier used to identify the Snapshot.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	// The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB. Specified in bytes.
	UsageThreshold pulumi.IntInput `pulumi:"usageThreshold"`
}

func (VolumePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumePropertiesResponse)(nil)).Elem()
}

func (i VolumePropertiesResponseArgs) ToVolumePropertiesResponseOutput() VolumePropertiesResponseOutput {
	return i.ToVolumePropertiesResponseOutputWithContext(context.Background())
}

func (i VolumePropertiesResponseArgs) ToVolumePropertiesResponseOutputWithContext(ctx context.Context) VolumePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumePropertiesResponseOutput)
}

func (i VolumePropertiesResponseArgs) ToVolumePropertiesResponsePtrOutput() VolumePropertiesResponsePtrOutput {
	return i.ToVolumePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i VolumePropertiesResponseArgs) ToVolumePropertiesResponsePtrOutputWithContext(ctx context.Context) VolumePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumePropertiesResponseOutput).ToVolumePropertiesResponsePtrOutputWithContext(ctx)
}

// VolumePropertiesResponsePtrInput is an input type that accepts VolumePropertiesResponseArgs, VolumePropertiesResponsePtr and VolumePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `VolumePropertiesResponsePtrInput` via:
//
//          VolumePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type VolumePropertiesResponsePtrInput interface {
	pulumi.Input

	ToVolumePropertiesResponsePtrOutput() VolumePropertiesResponsePtrOutput
	ToVolumePropertiesResponsePtrOutputWithContext(context.Context) VolumePropertiesResponsePtrOutput
}

type volumePropertiesResponsePtrType VolumePropertiesResponseArgs

func VolumePropertiesResponsePtr(v *VolumePropertiesResponseArgs) VolumePropertiesResponsePtrInput {
	return (*volumePropertiesResponsePtrType)(v)
}

func (*volumePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumePropertiesResponse)(nil)).Elem()
}

func (i *volumePropertiesResponsePtrType) ToVolumePropertiesResponsePtrOutput() VolumePropertiesResponsePtrOutput {
	return i.ToVolumePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *volumePropertiesResponsePtrType) ToVolumePropertiesResponsePtrOutputWithContext(ctx context.Context) VolumePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumePropertiesResponsePtrOutput)
}

// Volume properties
type VolumePropertiesResponseOutput struct{ *pulumi.OutputState }

func (VolumePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumePropertiesResponse)(nil)).Elem()
}

func (o VolumePropertiesResponseOutput) ToVolumePropertiesResponseOutput() VolumePropertiesResponseOutput {
	return o
}

func (o VolumePropertiesResponseOutput) ToVolumePropertiesResponseOutputWithContext(ctx context.Context) VolumePropertiesResponseOutput {
	return o
}

func (o VolumePropertiesResponseOutput) ToVolumePropertiesResponsePtrOutput() VolumePropertiesResponsePtrOutput {
	return o.ToVolumePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o VolumePropertiesResponseOutput) ToVolumePropertiesResponsePtrOutputWithContext(ctx context.Context) VolumePropertiesResponsePtrOutput {
	return o.ApplyT(func(v VolumePropertiesResponse) *VolumePropertiesResponse {
		return &v
	}).(VolumePropertiesResponsePtrOutput)
}

// Unique Baremetal Tenant Identifier.
func (o VolumePropertiesResponseOutput) BaremetalTenantId() pulumi.StringOutput {
	return o.ApplyT(func(v VolumePropertiesResponse) string { return v.BaremetalTenantId }).(pulumi.StringOutput)
}

// A unique file path for the volume. Used when creating mount targets
func (o VolumePropertiesResponseOutput) CreationToken() pulumi.StringOutput {
	return o.ApplyT(func(v VolumePropertiesResponse) string { return v.CreationToken }).(pulumi.StringOutput)
}

// Set of export policy rules
func (o VolumePropertiesResponseOutput) ExportPolicy() VolumePropertiesResponsePropertiesPtrOutput {
	return o.ApplyT(func(v VolumePropertiesResponse) *VolumePropertiesResponseProperties { return v.ExportPolicy }).(VolumePropertiesResponsePropertiesPtrOutput)
}

// Unique FileSystem Identifier.
func (o VolumePropertiesResponseOutput) FileSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v VolumePropertiesResponse) string { return v.FileSystemId }).(pulumi.StringOutput)
}

// List of mount targets
func (o VolumePropertiesResponseOutput) MountTargets() MountTargetPropertiesResponseArrayOutput {
	return o.ApplyT(func(v VolumePropertiesResponse) []MountTargetPropertiesResponse { return v.MountTargets }).(MountTargetPropertiesResponseArrayOutput)
}

// Set of protocol types
func (o VolumePropertiesResponseOutput) ProtocolTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VolumePropertiesResponse) []string { return v.ProtocolTypes }).(pulumi.StringArrayOutput)
}

// Azure lifecycle management
func (o VolumePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VolumePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The service level of the file system
func (o VolumePropertiesResponseOutput) ServiceLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumePropertiesResponse) *string { return v.ServiceLevel }).(pulumi.StringPtrOutput)
}

// UUID v4 or resource identifier used to identify the Snapshot.
func (o VolumePropertiesResponseOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumePropertiesResponse) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes
func (o VolumePropertiesResponseOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v VolumePropertiesResponse) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB. Specified in bytes.
func (o VolumePropertiesResponseOutput) UsageThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v VolumePropertiesResponse) int { return v.UsageThreshold }).(pulumi.IntOutput)
}

type VolumePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (VolumePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumePropertiesResponse)(nil)).Elem()
}

func (o VolumePropertiesResponsePtrOutput) ToVolumePropertiesResponsePtrOutput() VolumePropertiesResponsePtrOutput {
	return o
}

func (o VolumePropertiesResponsePtrOutput) ToVolumePropertiesResponsePtrOutputWithContext(ctx context.Context) VolumePropertiesResponsePtrOutput {
	return o
}

func (o VolumePropertiesResponsePtrOutput) Elem() VolumePropertiesResponseOutput {
	return o.ApplyT(func(v *VolumePropertiesResponse) VolumePropertiesResponse { return *v }).(VolumePropertiesResponseOutput)
}

// Unique Baremetal Tenant Identifier.
func (o VolumePropertiesResponsePtrOutput) BaremetalTenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.BaremetalTenantId
	}).(pulumi.StringPtrOutput)
}

// A unique file path for the volume. Used when creating mount targets
func (o VolumePropertiesResponsePtrOutput) CreationToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreationToken
	}).(pulumi.StringPtrOutput)
}

// Set of export policy rules
func (o VolumePropertiesResponsePtrOutput) ExportPolicy() VolumePropertiesResponsePropertiesPtrOutput {
	return o.ApplyT(func(v *VolumePropertiesResponse) *VolumePropertiesResponseProperties {
		if v == nil {
			return nil
		}
		return v.ExportPolicy
	}).(VolumePropertiesResponsePropertiesPtrOutput)
}

// Unique FileSystem Identifier.
func (o VolumePropertiesResponsePtrOutput) FileSystemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.FileSystemId
	}).(pulumi.StringPtrOutput)
}

// List of mount targets
func (o VolumePropertiesResponsePtrOutput) MountTargets() MountTargetPropertiesResponseArrayOutput {
	return o.ApplyT(func(v *VolumePropertiesResponse) []MountTargetPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.MountTargets
	}).(MountTargetPropertiesResponseArrayOutput)
}

// Set of protocol types
func (o VolumePropertiesResponsePtrOutput) ProtocolTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VolumePropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.ProtocolTypes
	}).(pulumi.StringArrayOutput)
}

// Azure lifecycle management
func (o VolumePropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The service level of the file system
func (o VolumePropertiesResponsePtrOutput) ServiceLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServiceLevel
	}).(pulumi.StringPtrOutput)
}

// UUID v4 or resource identifier used to identify the Snapshot.
func (o VolumePropertiesResponsePtrOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.SnapshotId
	}).(pulumi.StringPtrOutput)
}

// The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes
func (o VolumePropertiesResponsePtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SubnetId
	}).(pulumi.StringPtrOutput)
}

// Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB. Specified in bytes.
func (o VolumePropertiesResponsePtrOutput) UsageThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VolumePropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.UsageThreshold
	}).(pulumi.IntPtrOutput)
}

// Set of export policy rules
type VolumePropertiesResponseProperties struct {
	// Export policy rule
	Rules []ExportPolicyRuleResponse `pulumi:"rules"`
}

// VolumePropertiesResponsePropertiesInput is an input type that accepts VolumePropertiesResponsePropertiesArgs and VolumePropertiesResponsePropertiesOutput values.
// You can construct a concrete instance of `VolumePropertiesResponsePropertiesInput` via:
//
//          VolumePropertiesResponsePropertiesArgs{...}
type VolumePropertiesResponsePropertiesInput interface {
	pulumi.Input

	ToVolumePropertiesResponsePropertiesOutput() VolumePropertiesResponsePropertiesOutput
	ToVolumePropertiesResponsePropertiesOutputWithContext(context.Context) VolumePropertiesResponsePropertiesOutput
}

// Set of export policy rules
type VolumePropertiesResponsePropertiesArgs struct {
	// Export policy rule
	Rules ExportPolicyRuleResponseArrayInput `pulumi:"rules"`
}

func (VolumePropertiesResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumePropertiesResponseProperties)(nil)).Elem()
}

func (i VolumePropertiesResponsePropertiesArgs) ToVolumePropertiesResponsePropertiesOutput() VolumePropertiesResponsePropertiesOutput {
	return i.ToVolumePropertiesResponsePropertiesOutputWithContext(context.Background())
}

func (i VolumePropertiesResponsePropertiesArgs) ToVolumePropertiesResponsePropertiesOutputWithContext(ctx context.Context) VolumePropertiesResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumePropertiesResponsePropertiesOutput)
}

func (i VolumePropertiesResponsePropertiesArgs) ToVolumePropertiesResponsePropertiesPtrOutput() VolumePropertiesResponsePropertiesPtrOutput {
	return i.ToVolumePropertiesResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i VolumePropertiesResponsePropertiesArgs) ToVolumePropertiesResponsePropertiesPtrOutputWithContext(ctx context.Context) VolumePropertiesResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumePropertiesResponsePropertiesOutput).ToVolumePropertiesResponsePropertiesPtrOutputWithContext(ctx)
}

// VolumePropertiesResponsePropertiesPtrInput is an input type that accepts VolumePropertiesResponsePropertiesArgs, VolumePropertiesResponsePropertiesPtr and VolumePropertiesResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `VolumePropertiesResponsePropertiesPtrInput` via:
//
//          VolumePropertiesResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type VolumePropertiesResponsePropertiesPtrInput interface {
	pulumi.Input

	ToVolumePropertiesResponsePropertiesPtrOutput() VolumePropertiesResponsePropertiesPtrOutput
	ToVolumePropertiesResponsePropertiesPtrOutputWithContext(context.Context) VolumePropertiesResponsePropertiesPtrOutput
}

type volumePropertiesResponsePropertiesPtrType VolumePropertiesResponsePropertiesArgs

func VolumePropertiesResponsePropertiesPtr(v *VolumePropertiesResponsePropertiesArgs) VolumePropertiesResponsePropertiesPtrInput {
	return (*volumePropertiesResponsePropertiesPtrType)(v)
}

func (*volumePropertiesResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumePropertiesResponseProperties)(nil)).Elem()
}

func (i *volumePropertiesResponsePropertiesPtrType) ToVolumePropertiesResponsePropertiesPtrOutput() VolumePropertiesResponsePropertiesPtrOutput {
	return i.ToVolumePropertiesResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *volumePropertiesResponsePropertiesPtrType) ToVolumePropertiesResponsePropertiesPtrOutputWithContext(ctx context.Context) VolumePropertiesResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumePropertiesResponsePropertiesPtrOutput)
}

// Set of export policy rules
type VolumePropertiesResponsePropertiesOutput struct{ *pulumi.OutputState }

func (VolumePropertiesResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumePropertiesResponseProperties)(nil)).Elem()
}

func (o VolumePropertiesResponsePropertiesOutput) ToVolumePropertiesResponsePropertiesOutput() VolumePropertiesResponsePropertiesOutput {
	return o
}

func (o VolumePropertiesResponsePropertiesOutput) ToVolumePropertiesResponsePropertiesOutputWithContext(ctx context.Context) VolumePropertiesResponsePropertiesOutput {
	return o
}

func (o VolumePropertiesResponsePropertiesOutput) ToVolumePropertiesResponsePropertiesPtrOutput() VolumePropertiesResponsePropertiesPtrOutput {
	return o.ToVolumePropertiesResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o VolumePropertiesResponsePropertiesOutput) ToVolumePropertiesResponsePropertiesPtrOutputWithContext(ctx context.Context) VolumePropertiesResponsePropertiesPtrOutput {
	return o.ApplyT(func(v VolumePropertiesResponseProperties) *VolumePropertiesResponseProperties {
		return &v
	}).(VolumePropertiesResponsePropertiesPtrOutput)
}

// Export policy rule
func (o VolumePropertiesResponsePropertiesOutput) Rules() ExportPolicyRuleResponseArrayOutput {
	return o.ApplyT(func(v VolumePropertiesResponseProperties) []ExportPolicyRuleResponse { return v.Rules }).(ExportPolicyRuleResponseArrayOutput)
}

type VolumePropertiesResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (VolumePropertiesResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumePropertiesResponseProperties)(nil)).Elem()
}

func (o VolumePropertiesResponsePropertiesPtrOutput) ToVolumePropertiesResponsePropertiesPtrOutput() VolumePropertiesResponsePropertiesPtrOutput {
	return o
}

func (o VolumePropertiesResponsePropertiesPtrOutput) ToVolumePropertiesResponsePropertiesPtrOutputWithContext(ctx context.Context) VolumePropertiesResponsePropertiesPtrOutput {
	return o
}

func (o VolumePropertiesResponsePropertiesPtrOutput) Elem() VolumePropertiesResponsePropertiesOutput {
	return o.ApplyT(func(v *VolumePropertiesResponseProperties) VolumePropertiesResponseProperties { return *v }).(VolumePropertiesResponsePropertiesOutput)
}

// Export policy rule
func (o VolumePropertiesResponsePropertiesPtrOutput) Rules() ExportPolicyRuleResponseArrayOutput {
	return o.ApplyT(func(v *VolumePropertiesResponseProperties) []ExportPolicyRuleResponse {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(ExportPolicyRuleResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(AccountTypeOutput{})
	pulumi.RegisterOutputType(PoolTypeOutput{})
	pulumi.RegisterOutputType(SnapshotTypeOutput{})
	pulumi.RegisterOutputType(VolumeTypeOutput{})
	pulumi.RegisterOutputType(AccountPropertiesOutput{})
	pulumi.RegisterOutputType(AccountPropertiesPtrOutput{})
	pulumi.RegisterOutputType(AccountPropertiesResponseOutput{})
	pulumi.RegisterOutputType(AccountPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ActiveDirectoryOutput{})
	pulumi.RegisterOutputType(ActiveDirectoryArrayOutput{})
	pulumi.RegisterOutputType(ActiveDirectoryResponseOutput{})
	pulumi.RegisterOutputType(ActiveDirectoryResponseArrayOutput{})
	pulumi.RegisterOutputType(ExportPolicyRuleOutput{})
	pulumi.RegisterOutputType(ExportPolicyRuleArrayOutput{})
	pulumi.RegisterOutputType(ExportPolicyRuleResponseOutput{})
	pulumi.RegisterOutputType(ExportPolicyRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(MountTargetPropertiesOutput{})
	pulumi.RegisterOutputType(MountTargetPropertiesArrayOutput{})
	pulumi.RegisterOutputType(MountTargetPropertiesResponseOutput{})
	pulumi.RegisterOutputType(MountTargetPropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(PoolPropertiesOutput{})
	pulumi.RegisterOutputType(PoolPropertiesPtrOutput{})
	pulumi.RegisterOutputType(PoolPropertiesResponseOutput{})
	pulumi.RegisterOutputType(PoolPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceTagsOutput{})
	pulumi.RegisterOutputType(ResourceTagsPtrOutput{})
	pulumi.RegisterOutputType(ResourceTagsResponseOutput{})
	pulumi.RegisterOutputType(ResourceTagsResponsePtrOutput{})
	pulumi.RegisterOutputType(SnapshotPropertiesOutput{})
	pulumi.RegisterOutputType(SnapshotPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SnapshotPropertiesResponseOutput{})
	pulumi.RegisterOutputType(SnapshotPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(VolumePropertiesOutput{})
	pulumi.RegisterOutputType(VolumePropertiesPtrOutput{})
	pulumi.RegisterOutputType(VolumePropertiesPropertiesOutput{})
	pulumi.RegisterOutputType(VolumePropertiesPropertiesPtrOutput{})
	pulumi.RegisterOutputType(VolumePropertiesResponseOutput{})
	pulumi.RegisterOutputType(VolumePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(VolumePropertiesResponsePropertiesOutput{})
	pulumi.RegisterOutputType(VolumePropertiesResponsePropertiesPtrOutput{})
}
