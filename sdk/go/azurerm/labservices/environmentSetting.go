// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package labservices

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Represents settings of an environment, from which environment instances would be created
type EnvironmentSetting struct {
	pulumi.CustomResourceState

	// The location of the resource.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// The name of the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// The properties of the Environment Setting resource
	Properties EnvironmentSettingPropertiesResponseOutput `pulumi:"properties"`
	// The tags of the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewEnvironmentSetting registers a new resource with the given unique name, arguments, and options.
func NewEnvironmentSetting(ctx *pulumi.Context,
	name string, args *EnvironmentSettingArgs, opts ...pulumi.ResourceOption) (*EnvironmentSetting, error) {
	if args == nil || args.LabAccountName == nil {
		return nil, errors.New("missing required argument 'LabAccountName'")
	}
	if args == nil || args.LabName == nil {
		return nil, errors.New("missing required argument 'LabName'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &EnvironmentSettingArgs{}
	}
	var resource EnvironmentSetting
	err := ctx.RegisterResource("azurerm:labservices:EnvironmentSetting", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEnvironmentSetting gets an existing EnvironmentSetting resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEnvironmentSetting(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EnvironmentSettingState, opts ...pulumi.ResourceOption) (*EnvironmentSetting, error) {
	var resource EnvironmentSetting
	err := ctx.ReadResource("azurerm:labservices:EnvironmentSetting", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EnvironmentSetting resources.
type environmentSettingState struct {
	// The location of the resource.
	Location *string `pulumi:"location"`
	// The name of the resource.
	Name *string `pulumi:"name"`
	// The properties of the Environment Setting resource
	Properties *EnvironmentSettingPropertiesResponse `pulumi:"properties"`
	// The tags of the resource.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource.
	Type *string `pulumi:"type"`
}

type EnvironmentSettingState struct {
	// The location of the resource.
	Location pulumi.StringPtrInput
	// The name of the resource.
	Name pulumi.StringPtrInput
	// The properties of the Environment Setting resource
	Properties EnvironmentSettingPropertiesResponsePtrInput
	// The tags of the resource.
	Tags pulumi.StringMapInput
	// The type of the resource.
	Type pulumi.StringPtrInput
}

func (EnvironmentSettingState) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentSettingState)(nil)).Elem()
}

type environmentSettingArgs struct {
	// The name of the lab Account.
	LabAccountName string `pulumi:"labAccountName"`
	// The name of the lab.
	LabName string `pulumi:"labName"`
	// The location of the resource.
	Location *string `pulumi:"location"`
	// The name of the environment Setting.
	Name string `pulumi:"name"`
	// The properties of the Environment Setting resource
	Properties *EnvironmentSettingProperties `pulumi:"properties"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The tags of the resource.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a EnvironmentSetting resource.
type EnvironmentSettingArgs struct {
	// The name of the lab Account.
	LabAccountName pulumi.StringInput
	// The name of the lab.
	LabName pulumi.StringInput
	// The location of the resource.
	Location pulumi.StringPtrInput
	// The name of the environment Setting.
	Name pulumi.StringInput
	// The properties of the Environment Setting resource
	Properties EnvironmentSettingPropertiesPtrInput
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput
	// The tags of the resource.
	Tags pulumi.StringMapInput
}

func (EnvironmentSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentSettingArgs)(nil)).Elem()
}
