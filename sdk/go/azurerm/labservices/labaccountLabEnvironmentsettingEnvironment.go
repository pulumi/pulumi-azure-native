// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package labservices

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Represents an environment instance
type LabaccountLabEnvironmentsettingEnvironment struct {
	pulumi.CustomResourceState

	// The location of the resource.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// The name of the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// The properties of the Environment resource
	Properties EnvironmentPropertiesResponseOutput `pulumi:"properties"`
	// The tags of the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewLabaccountLabEnvironmentsettingEnvironment registers a new resource with the given unique name, arguments, and options.
func NewLabaccountLabEnvironmentsettingEnvironment(ctx *pulumi.Context,
	name string, args *LabaccountLabEnvironmentsettingEnvironmentArgs, opts ...pulumi.ResourceOption) (*LabaccountLabEnvironmentsettingEnvironment, error) {
	if args == nil || args.EnvironmentSettingName == nil {
		return nil, errors.New("missing required argument 'EnvironmentSettingName'")
	}
	if args == nil || args.LabAccountName == nil {
		return nil, errors.New("missing required argument 'LabAccountName'")
	}
	if args == nil || args.LabName == nil {
		return nil, errors.New("missing required argument 'LabName'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &LabaccountLabEnvironmentsettingEnvironmentArgs{}
	}
	var resource LabaccountLabEnvironmentsettingEnvironment
	err := ctx.RegisterResource("azurerm:labservices:LabaccountLabEnvironmentsettingEnvironment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLabaccountLabEnvironmentsettingEnvironment gets an existing LabaccountLabEnvironmentsettingEnvironment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLabaccountLabEnvironmentsettingEnvironment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LabaccountLabEnvironmentsettingEnvironmentState, opts ...pulumi.ResourceOption) (*LabaccountLabEnvironmentsettingEnvironment, error) {
	var resource LabaccountLabEnvironmentsettingEnvironment
	err := ctx.ReadResource("azurerm:labservices:LabaccountLabEnvironmentsettingEnvironment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LabaccountLabEnvironmentsettingEnvironment resources.
type labaccountLabEnvironmentsettingEnvironmentState struct {
	// The location of the resource.
	Location *string `pulumi:"location"`
	// The name of the resource.
	Name *string `pulumi:"name"`
	// The properties of the Environment resource
	Properties *EnvironmentPropertiesResponse `pulumi:"properties"`
	// The tags of the resource.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource.
	Type *string `pulumi:"type"`
}

type LabaccountLabEnvironmentsettingEnvironmentState struct {
	// The location of the resource.
	Location pulumi.StringPtrInput
	// The name of the resource.
	Name pulumi.StringPtrInput
	// The properties of the Environment resource
	Properties EnvironmentPropertiesResponsePtrInput
	// The tags of the resource.
	Tags pulumi.StringMapInput
	// The type of the resource.
	Type pulumi.StringPtrInput
}

func (LabaccountLabEnvironmentsettingEnvironmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*labaccountLabEnvironmentsettingEnvironmentState)(nil)).Elem()
}

type labaccountLabEnvironmentsettingEnvironmentArgs struct {
	// The name of the environment Setting.
	EnvironmentSettingName string `pulumi:"environmentSettingName"`
	// The name of the lab Account.
	LabAccountName string `pulumi:"labAccountName"`
	// The name of the lab.
	LabName string `pulumi:"labName"`
	// The location of the resource.
	Location *string `pulumi:"location"`
	// The name of the environment.
	Name string `pulumi:"name"`
	// The properties of the Environment resource
	Properties *EnvironmentProperties `pulumi:"properties"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The tags of the resource.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a LabaccountLabEnvironmentsettingEnvironment resource.
type LabaccountLabEnvironmentsettingEnvironmentArgs struct {
	// The name of the environment Setting.
	EnvironmentSettingName pulumi.StringInput
	// The name of the lab Account.
	LabAccountName pulumi.StringInput
	// The name of the lab.
	LabName pulumi.StringInput
	// The location of the resource.
	Location pulumi.StringPtrInput
	// The name of the environment.
	Name pulumi.StringInput
	// The properties of the Environment resource
	Properties EnvironmentPropertiesPtrInput
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput
	// The tags of the resource.
	Tags pulumi.StringMapInput
}

func (LabaccountLabEnvironmentsettingEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*labaccountLabEnvironmentsettingEnvironmentArgs)(nil)).Elem()
}
