// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20181015

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// This represents the details about a User's environment and its state.
type EnvironmentDetailsResponse struct {
	// Description of the Environment
	Description string `pulumi:"description"`
	// Publishing state of the environment setting Possible values are Creating, Created, Failed
	EnvironmentState string `pulumi:"environmentState"`
	// Resource Id of the environment
	Id string `pulumi:"id"`
	// The details of the latest operation. ex: status, error
	LatestOperationResult LatestOperationResultResponse `pulumi:"latestOperationResult"`
	// Name of the Environment
	Name string `pulumi:"name"`
	// When the password was last reset on the environment.
	PasswordLastReset string `pulumi:"passwordLastReset"`
	// The provisioning state of the environment. This also includes LabIsFull and NotYetProvisioned status.
	ProvisioningState string `pulumi:"provisioningState"`
	// How long the environment has been used by a lab user
	TotalUsage string `pulumi:"totalUsage"`
	// Details of backing DTL virtual machine with compute and network details.
	VirtualMachineDetails VirtualMachineDetailsResponse `pulumi:"virtualMachineDetails"`
}

// Represents a size category supported by this Lab Account (small, medium or large)
type EnvironmentSizeResponse struct {
	// The pay-as-you-go dollar price per hour this size will cost. It does not include discounts and may not reflect the actual price the size will cost. This is the maximum price of all prices within this tier.
	MaxPrice float64 `pulumi:"maxPrice"`
	// The amount of memory available (in GB). This is the minimum amount of memory within this tier.
	MinMemory float64 `pulumi:"minMemory"`
	// The number of cores a VM of this size has. This is the minimum number of cores within this tier.
	MinNumberOfCores int `pulumi:"minNumberOfCores"`
	// The size category
	Name *string `pulumi:"name"`
	// Represents a set of compute sizes that can serve this given size type
	VmSizes []SizeInfoResponse `pulumi:"vmSizes"`
}

// Represents a size category supported by this Lab Account (small, medium or large)
type EnvironmentSizeResponseOutput struct{ *pulumi.OutputState }

func (EnvironmentSizeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentSizeResponse)(nil)).Elem()
}

func (o EnvironmentSizeResponseOutput) ToEnvironmentSizeResponseOutput() EnvironmentSizeResponseOutput {
	return o
}

func (o EnvironmentSizeResponseOutput) ToEnvironmentSizeResponseOutputWithContext(ctx context.Context) EnvironmentSizeResponseOutput {
	return o
}

// The pay-as-you-go dollar price per hour this size will cost. It does not include discounts and may not reflect the actual price the size will cost. This is the maximum price of all prices within this tier.
func (o EnvironmentSizeResponseOutput) MaxPrice() pulumi.Float64Output {
	return o.ApplyT(func(v EnvironmentSizeResponse) float64 { return v.MaxPrice }).(pulumi.Float64Output)
}

// The amount of memory available (in GB). This is the minimum amount of memory within this tier.
func (o EnvironmentSizeResponseOutput) MinMemory() pulumi.Float64Output {
	return o.ApplyT(func(v EnvironmentSizeResponse) float64 { return v.MinMemory }).(pulumi.Float64Output)
}

// The number of cores a VM of this size has. This is the minimum number of cores within this tier.
func (o EnvironmentSizeResponseOutput) MinNumberOfCores() pulumi.IntOutput {
	return o.ApplyT(func(v EnvironmentSizeResponse) int { return v.MinNumberOfCores }).(pulumi.IntOutput)
}

// The size category
func (o EnvironmentSizeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentSizeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Represents a set of compute sizes that can serve this given size type
func (o EnvironmentSizeResponseOutput) VmSizes() SizeInfoResponseArrayOutput {
	return o.ApplyT(func(v EnvironmentSizeResponse) []SizeInfoResponse { return v.VmSizes }).(SizeInfoResponseArrayOutput)
}

type EnvironmentSizeResponseArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentSizeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentSizeResponse)(nil)).Elem()
}

func (o EnvironmentSizeResponseArrayOutput) ToEnvironmentSizeResponseArrayOutput() EnvironmentSizeResponseArrayOutput {
	return o
}

func (o EnvironmentSizeResponseArrayOutput) ToEnvironmentSizeResponseArrayOutputWithContext(ctx context.Context) EnvironmentSizeResponseArrayOutput {
	return o
}

func (o EnvironmentSizeResponseArrayOutput) Index(i pulumi.IntInput) EnvironmentSizeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnvironmentSizeResponse {
		return vs[0].([]EnvironmentSizeResponse)[vs[1].(int)]
	}).(EnvironmentSizeResponseOutput)
}

// The reference information for an Azure Marketplace image.
type GalleryImageReferenceResponse struct {
	// The offer of the gallery image.
	Offer *string `pulumi:"offer"`
	// The OS type of the gallery image.
	OsType *string `pulumi:"osType"`
	// The publisher of the gallery image.
	Publisher *string `pulumi:"publisher"`
	// The SKU of the gallery image.
	Sku *string `pulumi:"sku"`
	// The version of the gallery image.
	Version *string `pulumi:"version"`
}

// The reference information for an Azure Marketplace image.
type GalleryImageReferenceResponseOutput struct{ *pulumi.OutputState }

func (GalleryImageReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageReferenceResponse)(nil)).Elem()
}

func (o GalleryImageReferenceResponseOutput) ToGalleryImageReferenceResponseOutput() GalleryImageReferenceResponseOutput {
	return o
}

func (o GalleryImageReferenceResponseOutput) ToGalleryImageReferenceResponseOutputWithContext(ctx context.Context) GalleryImageReferenceResponseOutput {
	return o
}

func (o GalleryImageReferenceResponseOutput) ToGalleryImageReferenceResponsePtrOutput() GalleryImageReferenceResponsePtrOutput {
	return o.ToGalleryImageReferenceResponsePtrOutputWithContext(context.Background())
}

func (o GalleryImageReferenceResponseOutput) ToGalleryImageReferenceResponsePtrOutputWithContext(ctx context.Context) GalleryImageReferenceResponsePtrOutput {
	return o.ApplyT(func(v GalleryImageReferenceResponse) *GalleryImageReferenceResponse {
		return &v
	}).(GalleryImageReferenceResponsePtrOutput)
}

// The offer of the gallery image.
func (o GalleryImageReferenceResponseOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageReferenceResponse) *string { return v.Offer }).(pulumi.StringPtrOutput)
}

// The OS type of the gallery image.
func (o GalleryImageReferenceResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageReferenceResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// The publisher of the gallery image.
func (o GalleryImageReferenceResponseOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageReferenceResponse) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

// The SKU of the gallery image.
func (o GalleryImageReferenceResponseOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageReferenceResponse) *string { return v.Sku }).(pulumi.StringPtrOutput)
}

// The version of the gallery image.
func (o GalleryImageReferenceResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageReferenceResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type GalleryImageReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (GalleryImageReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryImageReferenceResponse)(nil)).Elem()
}

func (o GalleryImageReferenceResponsePtrOutput) ToGalleryImageReferenceResponsePtrOutput() GalleryImageReferenceResponsePtrOutput {
	return o
}

func (o GalleryImageReferenceResponsePtrOutput) ToGalleryImageReferenceResponsePtrOutputWithContext(ctx context.Context) GalleryImageReferenceResponsePtrOutput {
	return o
}

func (o GalleryImageReferenceResponsePtrOutput) Elem() GalleryImageReferenceResponseOutput {
	return o.ApplyT(func(v *GalleryImageReferenceResponse) GalleryImageReferenceResponse { return *v }).(GalleryImageReferenceResponseOutput)
}

// The offer of the gallery image.
func (o GalleryImageReferenceResponsePtrOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Offer
	}).(pulumi.StringPtrOutput)
}

// The OS type of the gallery image.
func (o GalleryImageReferenceResponsePtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// The publisher of the gallery image.
func (o GalleryImageReferenceResponsePtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Publisher
	}).(pulumi.StringPtrOutput)
}

// The SKU of the gallery image.
func (o GalleryImageReferenceResponsePtrOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(pulumi.StringPtrOutput)
}

// The version of the gallery image.
func (o GalleryImageReferenceResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// This represents the details about a lab that the User is in, and its state.
type LabDetailsResponse struct {
	// The Id of the lab.
	Id *string `pulumi:"id"`
	// Name of the lab
	Name *string `pulumi:"name"`
	// The provisioning state of the lab.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The maximum duration a user can use a VM in this lab.
	UsageQuota string `pulumi:"usageQuota"`
}

// Details of the status of an operation.
type LatestOperationResultResponse struct {
	// Error code on failure.
	ErrorCode string `pulumi:"errorCode"`
	// The error message.
	ErrorMessage string `pulumi:"errorMessage"`
	// The HttpMethod - PUT/POST/DELETE for the operation.
	HttpMethod string `pulumi:"httpMethod"`
	// The URL to use to check long-running operation status
	OperationUrl string `pulumi:"operationUrl"`
	// Request URI of the operation.
	RequestUri string `pulumi:"requestUri"`
	// The current status of the operation.
	Status string `pulumi:"status"`
}

// Details of the status of an operation.
type LatestOperationResultResponseOutput struct{ *pulumi.OutputState }

func (LatestOperationResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LatestOperationResultResponse)(nil)).Elem()
}

func (o LatestOperationResultResponseOutput) ToLatestOperationResultResponseOutput() LatestOperationResultResponseOutput {
	return o
}

func (o LatestOperationResultResponseOutput) ToLatestOperationResultResponseOutputWithContext(ctx context.Context) LatestOperationResultResponseOutput {
	return o
}

func (o LatestOperationResultResponseOutput) ToLatestOperationResultResponsePtrOutput() LatestOperationResultResponsePtrOutput {
	return o.ToLatestOperationResultResponsePtrOutputWithContext(context.Background())
}

func (o LatestOperationResultResponseOutput) ToLatestOperationResultResponsePtrOutputWithContext(ctx context.Context) LatestOperationResultResponsePtrOutput {
	return o.ApplyT(func(v LatestOperationResultResponse) *LatestOperationResultResponse {
		return &v
	}).(LatestOperationResultResponsePtrOutput)
}

// Error code on failure.
func (o LatestOperationResultResponseOutput) ErrorCode() pulumi.StringOutput {
	return o.ApplyT(func(v LatestOperationResultResponse) string { return v.ErrorCode }).(pulumi.StringOutput)
}

// The error message.
func (o LatestOperationResultResponseOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v LatestOperationResultResponse) string { return v.ErrorMessage }).(pulumi.StringOutput)
}

// The HttpMethod - PUT/POST/DELETE for the operation.
func (o LatestOperationResultResponseOutput) HttpMethod() pulumi.StringOutput {
	return o.ApplyT(func(v LatestOperationResultResponse) string { return v.HttpMethod }).(pulumi.StringOutput)
}

// The URL to use to check long-running operation status
func (o LatestOperationResultResponseOutput) OperationUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LatestOperationResultResponse) string { return v.OperationUrl }).(pulumi.StringOutput)
}

// Request URI of the operation.
func (o LatestOperationResultResponseOutput) RequestUri() pulumi.StringOutput {
	return o.ApplyT(func(v LatestOperationResultResponse) string { return v.RequestUri }).(pulumi.StringOutput)
}

// The current status of the operation.
func (o LatestOperationResultResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LatestOperationResultResponse) string { return v.Status }).(pulumi.StringOutput)
}

type LatestOperationResultResponsePtrOutput struct{ *pulumi.OutputState }

func (LatestOperationResultResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LatestOperationResultResponse)(nil)).Elem()
}

func (o LatestOperationResultResponsePtrOutput) ToLatestOperationResultResponsePtrOutput() LatestOperationResultResponsePtrOutput {
	return o
}

func (o LatestOperationResultResponsePtrOutput) ToLatestOperationResultResponsePtrOutputWithContext(ctx context.Context) LatestOperationResultResponsePtrOutput {
	return o
}

func (o LatestOperationResultResponsePtrOutput) Elem() LatestOperationResultResponseOutput {
	return o.ApplyT(func(v *LatestOperationResultResponse) LatestOperationResultResponse { return *v }).(LatestOperationResultResponseOutput)
}

// Error code on failure.
func (o LatestOperationResultResponsePtrOutput) ErrorCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LatestOperationResultResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ErrorCode
	}).(pulumi.StringPtrOutput)
}

// The error message.
func (o LatestOperationResultResponsePtrOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LatestOperationResultResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ErrorMessage
	}).(pulumi.StringPtrOutput)
}

// The HttpMethod - PUT/POST/DELETE for the operation.
func (o LatestOperationResultResponsePtrOutput) HttpMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LatestOperationResultResponse) *string {
		if v == nil {
			return nil
		}
		return &v.HttpMethod
	}).(pulumi.StringPtrOutput)
}

// The URL to use to check long-running operation status
func (o LatestOperationResultResponsePtrOutput) OperationUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LatestOperationResultResponse) *string {
		if v == nil {
			return nil
		}
		return &v.OperationUrl
	}).(pulumi.StringPtrOutput)
}

// Request URI of the operation.
func (o LatestOperationResultResponsePtrOutput) RequestUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LatestOperationResultResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RequestUri
	}).(pulumi.StringPtrOutput)
}

// The current status of the operation.
func (o LatestOperationResultResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LatestOperationResultResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// Network details of the environment
type NetworkInterfaceResponse struct {
	// PrivateIp address of the Compute VM
	PrivateIpAddress string `pulumi:"privateIpAddress"`
	// Connection information for Windows
	RdpAuthority string `pulumi:"rdpAuthority"`
	// Connection information for Linux
	SshAuthority string `pulumi:"sshAuthority"`
	// Username of the VM
	Username string `pulumi:"username"`
}

// Network details of the environment
type NetworkInterfaceResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceResponse)(nil)).Elem()
}

func (o NetworkInterfaceResponseOutput) ToNetworkInterfaceResponseOutput() NetworkInterfaceResponseOutput {
	return o
}

func (o NetworkInterfaceResponseOutput) ToNetworkInterfaceResponseOutputWithContext(ctx context.Context) NetworkInterfaceResponseOutput {
	return o
}

func (o NetworkInterfaceResponseOutput) ToNetworkInterfaceResponsePtrOutput() NetworkInterfaceResponsePtrOutput {
	return o.ToNetworkInterfaceResponsePtrOutputWithContext(context.Background())
}

func (o NetworkInterfaceResponseOutput) ToNetworkInterfaceResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *NetworkInterfaceResponse {
		return &v
	}).(NetworkInterfaceResponsePtrOutput)
}

// PrivateIp address of the Compute VM
func (o NetworkInterfaceResponseOutput) PrivateIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) string { return v.PrivateIpAddress }).(pulumi.StringOutput)
}

// Connection information for Windows
func (o NetworkInterfaceResponseOutput) RdpAuthority() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) string { return v.RdpAuthority }).(pulumi.StringOutput)
}

// Connection information for Linux
func (o NetworkInterfaceResponseOutput) SshAuthority() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) string { return v.SshAuthority }).(pulumi.StringOutput)
}

// Username of the VM
func (o NetworkInterfaceResponseOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) string { return v.Username }).(pulumi.StringOutput)
}

type NetworkInterfaceResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceResponse)(nil)).Elem()
}

func (o NetworkInterfaceResponsePtrOutput) ToNetworkInterfaceResponsePtrOutput() NetworkInterfaceResponsePtrOutput {
	return o
}

func (o NetworkInterfaceResponsePtrOutput) ToNetworkInterfaceResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceResponsePtrOutput {
	return o
}

func (o NetworkInterfaceResponsePtrOutput) Elem() NetworkInterfaceResponseOutput {
	return o.ApplyT(func(v *NetworkInterfaceResponse) NetworkInterfaceResponse { return *v }).(NetworkInterfaceResponseOutput)
}

// PrivateIp address of the Compute VM
func (o NetworkInterfaceResponsePtrOutput) PrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrivateIpAddress
	}).(pulumi.StringPtrOutput)
}

// Connection information for Windows
func (o NetworkInterfaceResponsePtrOutput) RdpAuthority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RdpAuthority
	}).(pulumi.StringPtrOutput)
}

// Connection information for Linux
func (o NetworkInterfaceResponsePtrOutput) SshAuthority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SshAuthority
	}).(pulumi.StringPtrOutput)
}

// Username of the VM
func (o NetworkInterfaceResponsePtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

// Details of a Reference Vm
type ReferenceVm struct {
	// The password of the virtual machine. This will be set to null in GET resource API
	Password *string `pulumi:"password"`
	// The username of the virtual machine
	UserName string `pulumi:"userName"`
}

// ReferenceVmInput is an input type that accepts ReferenceVmArgs and ReferenceVmOutput values.
// You can construct a concrete instance of `ReferenceVmInput` via:
//
//          ReferenceVmArgs{...}
type ReferenceVmInput interface {
	pulumi.Input

	ToReferenceVmOutput() ReferenceVmOutput
	ToReferenceVmOutputWithContext(context.Context) ReferenceVmOutput
}

// Details of a Reference Vm
type ReferenceVmArgs struct {
	// The password of the virtual machine. This will be set to null in GET resource API
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The username of the virtual machine
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (ReferenceVmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferenceVm)(nil)).Elem()
}

func (i ReferenceVmArgs) ToReferenceVmOutput() ReferenceVmOutput {
	return i.ToReferenceVmOutputWithContext(context.Background())
}

func (i ReferenceVmArgs) ToReferenceVmOutputWithContext(ctx context.Context) ReferenceVmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferenceVmOutput)
}

func (i ReferenceVmArgs) ToReferenceVmPtrOutput() ReferenceVmPtrOutput {
	return i.ToReferenceVmPtrOutputWithContext(context.Background())
}

func (i ReferenceVmArgs) ToReferenceVmPtrOutputWithContext(ctx context.Context) ReferenceVmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferenceVmOutput).ToReferenceVmPtrOutputWithContext(ctx)
}

// ReferenceVmPtrInput is an input type that accepts ReferenceVmArgs, ReferenceVmPtr and ReferenceVmPtrOutput values.
// You can construct a concrete instance of `ReferenceVmPtrInput` via:
//
//          ReferenceVmArgs{...}
//
//  or:
//
//          nil
type ReferenceVmPtrInput interface {
	pulumi.Input

	ToReferenceVmPtrOutput() ReferenceVmPtrOutput
	ToReferenceVmPtrOutputWithContext(context.Context) ReferenceVmPtrOutput
}

type referenceVmPtrType ReferenceVmArgs

func ReferenceVmPtr(v *ReferenceVmArgs) ReferenceVmPtrInput {
	return (*referenceVmPtrType)(v)
}

func (*referenceVmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReferenceVm)(nil)).Elem()
}

func (i *referenceVmPtrType) ToReferenceVmPtrOutput() ReferenceVmPtrOutput {
	return i.ToReferenceVmPtrOutputWithContext(context.Background())
}

func (i *referenceVmPtrType) ToReferenceVmPtrOutputWithContext(ctx context.Context) ReferenceVmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferenceVmPtrOutput)
}

// Details of a Reference Vm
type ReferenceVmResponse struct {
	// The password of the virtual machine. This will be set to null in GET resource API
	Password *string `pulumi:"password"`
	// The username of the virtual machine
	UserName string `pulumi:"userName"`
	// VM resource Id for the environment
	VmResourceId string `pulumi:"vmResourceId"`
	// The state details for the reference virtual machine.
	VmStateDetails VmStateDetailsResponse `pulumi:"vmStateDetails"`
}

// Details of a Reference Vm
type ReferenceVmResponseOutput struct{ *pulumi.OutputState }

func (ReferenceVmResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferenceVmResponse)(nil)).Elem()
}

func (o ReferenceVmResponseOutput) ToReferenceVmResponseOutput() ReferenceVmResponseOutput {
	return o
}

func (o ReferenceVmResponseOutput) ToReferenceVmResponseOutputWithContext(ctx context.Context) ReferenceVmResponseOutput {
	return o
}

func (o ReferenceVmResponseOutput) ToReferenceVmResponsePtrOutput() ReferenceVmResponsePtrOutput {
	return o.ToReferenceVmResponsePtrOutputWithContext(context.Background())
}

func (o ReferenceVmResponseOutput) ToReferenceVmResponsePtrOutputWithContext(ctx context.Context) ReferenceVmResponsePtrOutput {
	return o.ApplyT(func(v ReferenceVmResponse) *ReferenceVmResponse {
		return &v
	}).(ReferenceVmResponsePtrOutput)
}

// The password of the virtual machine. This will be set to null in GET resource API
func (o ReferenceVmResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReferenceVmResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The username of the virtual machine
func (o ReferenceVmResponseOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v ReferenceVmResponse) string { return v.UserName }).(pulumi.StringOutput)
}

// VM resource Id for the environment
func (o ReferenceVmResponseOutput) VmResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v ReferenceVmResponse) string { return v.VmResourceId }).(pulumi.StringOutput)
}

// The state details for the reference virtual machine.
func (o ReferenceVmResponseOutput) VmStateDetails() VmStateDetailsResponseOutput {
	return o.ApplyT(func(v ReferenceVmResponse) VmStateDetailsResponse { return v.VmStateDetails }).(VmStateDetailsResponseOutput)
}

type ReferenceVmResponsePtrOutput struct{ *pulumi.OutputState }

func (ReferenceVmResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReferenceVmResponse)(nil)).Elem()
}

func (o ReferenceVmResponsePtrOutput) ToReferenceVmResponsePtrOutput() ReferenceVmResponsePtrOutput {
	return o
}

func (o ReferenceVmResponsePtrOutput) ToReferenceVmResponsePtrOutputWithContext(ctx context.Context) ReferenceVmResponsePtrOutput {
	return o
}

func (o ReferenceVmResponsePtrOutput) Elem() ReferenceVmResponseOutput {
	return o.ApplyT(func(v *ReferenceVmResponse) ReferenceVmResponse { return *v }).(ReferenceVmResponseOutput)
}

// The password of the virtual machine. This will be set to null in GET resource API
func (o ReferenceVmResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReferenceVmResponse) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// The username of the virtual machine
func (o ReferenceVmResponsePtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReferenceVmResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UserName
	}).(pulumi.StringPtrOutput)
}

// VM resource Id for the environment
func (o ReferenceVmResponsePtrOutput) VmResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReferenceVmResponse) *string {
		if v == nil {
			return nil
		}
		return &v.VmResourceId
	}).(pulumi.StringPtrOutput)
}

// The state details for the reference virtual machine.
func (o ReferenceVmResponsePtrOutput) VmStateDetails() VmStateDetailsResponsePtrOutput {
	return o.ApplyT(func(v *ReferenceVmResponse) *VmStateDetailsResponse {
		if v == nil {
			return nil
		}
		return &v.VmStateDetails
	}).(VmStateDetailsResponsePtrOutput)
}

// Represents a VM and the setting Id it was created for.
type ResourceSet struct {
	// resourceSettingId for the environment
	ResourceSettingId *string `pulumi:"resourceSettingId"`
	// VM resource Id for the environment
	VmResourceId *string `pulumi:"vmResourceId"`
}

// ResourceSetInput is an input type that accepts ResourceSetArgs and ResourceSetOutput values.
// You can construct a concrete instance of `ResourceSetInput` via:
//
//          ResourceSetArgs{...}
type ResourceSetInput interface {
	pulumi.Input

	ToResourceSetOutput() ResourceSetOutput
	ToResourceSetOutputWithContext(context.Context) ResourceSetOutput
}

// Represents a VM and the setting Id it was created for.
type ResourceSetArgs struct {
	// resourceSettingId for the environment
	ResourceSettingId pulumi.StringPtrInput `pulumi:"resourceSettingId"`
	// VM resource Id for the environment
	VmResourceId pulumi.StringPtrInput `pulumi:"vmResourceId"`
}

func (ResourceSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSet)(nil)).Elem()
}

func (i ResourceSetArgs) ToResourceSetOutput() ResourceSetOutput {
	return i.ToResourceSetOutputWithContext(context.Background())
}

func (i ResourceSetArgs) ToResourceSetOutputWithContext(ctx context.Context) ResourceSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSetOutput)
}

func (i ResourceSetArgs) ToResourceSetPtrOutput() ResourceSetPtrOutput {
	return i.ToResourceSetPtrOutputWithContext(context.Background())
}

func (i ResourceSetArgs) ToResourceSetPtrOutputWithContext(ctx context.Context) ResourceSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSetOutput).ToResourceSetPtrOutputWithContext(ctx)
}

// ResourceSetPtrInput is an input type that accepts ResourceSetArgs, ResourceSetPtr and ResourceSetPtrOutput values.
// You can construct a concrete instance of `ResourceSetPtrInput` via:
//
//          ResourceSetArgs{...}
//
//  or:
//
//          nil
type ResourceSetPtrInput interface {
	pulumi.Input

	ToResourceSetPtrOutput() ResourceSetPtrOutput
	ToResourceSetPtrOutputWithContext(context.Context) ResourceSetPtrOutput
}

type resourceSetPtrType ResourceSetArgs

func ResourceSetPtr(v *ResourceSetArgs) ResourceSetPtrInput {
	return (*resourceSetPtrType)(v)
}

func (*resourceSetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceSet)(nil)).Elem()
}

func (i *resourceSetPtrType) ToResourceSetPtrOutput() ResourceSetPtrOutput {
	return i.ToResourceSetPtrOutputWithContext(context.Background())
}

func (i *resourceSetPtrType) ToResourceSetPtrOutputWithContext(ctx context.Context) ResourceSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSetPtrOutput)
}

// Represents a VM and the setting Id it was created for.
type ResourceSetResponse struct {
	// resourceSettingId for the environment
	ResourceSettingId *string `pulumi:"resourceSettingId"`
	// VM resource Id for the environment
	VmResourceId *string `pulumi:"vmResourceId"`
}

// Represents a VM and the setting Id it was created for.
type ResourceSetResponseOutput struct{ *pulumi.OutputState }

func (ResourceSetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSetResponse)(nil)).Elem()
}

func (o ResourceSetResponseOutput) ToResourceSetResponseOutput() ResourceSetResponseOutput {
	return o
}

func (o ResourceSetResponseOutput) ToResourceSetResponseOutputWithContext(ctx context.Context) ResourceSetResponseOutput {
	return o
}

func (o ResourceSetResponseOutput) ToResourceSetResponsePtrOutput() ResourceSetResponsePtrOutput {
	return o.ToResourceSetResponsePtrOutputWithContext(context.Background())
}

func (o ResourceSetResponseOutput) ToResourceSetResponsePtrOutputWithContext(ctx context.Context) ResourceSetResponsePtrOutput {
	return o.ApplyT(func(v ResourceSetResponse) *ResourceSetResponse {
		return &v
	}).(ResourceSetResponsePtrOutput)
}

// resourceSettingId for the environment
func (o ResourceSetResponseOutput) ResourceSettingId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceSetResponse) *string { return v.ResourceSettingId }).(pulumi.StringPtrOutput)
}

// VM resource Id for the environment
func (o ResourceSetResponseOutput) VmResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceSetResponse) *string { return v.VmResourceId }).(pulumi.StringPtrOutput)
}

type ResourceSetResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceSetResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceSetResponse)(nil)).Elem()
}

func (o ResourceSetResponsePtrOutput) ToResourceSetResponsePtrOutput() ResourceSetResponsePtrOutput {
	return o
}

func (o ResourceSetResponsePtrOutput) ToResourceSetResponsePtrOutputWithContext(ctx context.Context) ResourceSetResponsePtrOutput {
	return o
}

func (o ResourceSetResponsePtrOutput) Elem() ResourceSetResponseOutput {
	return o.ApplyT(func(v *ResourceSetResponse) ResourceSetResponse { return *v }).(ResourceSetResponseOutput)
}

// resourceSettingId for the environment
func (o ResourceSetResponsePtrOutput) ResourceSettingId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceSetResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceSettingId
	}).(pulumi.StringPtrOutput)
}

// VM resource Id for the environment
func (o ResourceSetResponsePtrOutput) VmResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceSetResponse) *string {
		if v == nil {
			return nil
		}
		return v.VmResourceId
	}).(pulumi.StringPtrOutput)
}

// Represents resource specific settings
type ResourceSettings struct {
	// The resource id of the gallery image used for creating the virtual machine
	GalleryImageResourceId *string `pulumi:"galleryImageResourceId"`
	// Details specific to Reference Vm
	ReferenceVm ReferenceVm `pulumi:"referenceVm"`
	// The size of the virtual machine
	Size *string `pulumi:"size"`
}

// ResourceSettingsInput is an input type that accepts ResourceSettingsArgs and ResourceSettingsOutput values.
// You can construct a concrete instance of `ResourceSettingsInput` via:
//
//          ResourceSettingsArgs{...}
type ResourceSettingsInput interface {
	pulumi.Input

	ToResourceSettingsOutput() ResourceSettingsOutput
	ToResourceSettingsOutputWithContext(context.Context) ResourceSettingsOutput
}

// Represents resource specific settings
type ResourceSettingsArgs struct {
	// The resource id of the gallery image used for creating the virtual machine
	GalleryImageResourceId pulumi.StringPtrInput `pulumi:"galleryImageResourceId"`
	// Details specific to Reference Vm
	ReferenceVm ReferenceVmInput `pulumi:"referenceVm"`
	// The size of the virtual machine
	Size pulumi.StringPtrInput `pulumi:"size"`
}

func (ResourceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSettings)(nil)).Elem()
}

func (i ResourceSettingsArgs) ToResourceSettingsOutput() ResourceSettingsOutput {
	return i.ToResourceSettingsOutputWithContext(context.Background())
}

func (i ResourceSettingsArgs) ToResourceSettingsOutputWithContext(ctx context.Context) ResourceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSettingsOutput)
}

func (i ResourceSettingsArgs) ToResourceSettingsPtrOutput() ResourceSettingsPtrOutput {
	return i.ToResourceSettingsPtrOutputWithContext(context.Background())
}

func (i ResourceSettingsArgs) ToResourceSettingsPtrOutputWithContext(ctx context.Context) ResourceSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSettingsOutput).ToResourceSettingsPtrOutputWithContext(ctx)
}

// ResourceSettingsPtrInput is an input type that accepts ResourceSettingsArgs, ResourceSettingsPtr and ResourceSettingsPtrOutput values.
// You can construct a concrete instance of `ResourceSettingsPtrInput` via:
//
//          ResourceSettingsArgs{...}
//
//  or:
//
//          nil
type ResourceSettingsPtrInput interface {
	pulumi.Input

	ToResourceSettingsPtrOutput() ResourceSettingsPtrOutput
	ToResourceSettingsPtrOutputWithContext(context.Context) ResourceSettingsPtrOutput
}

type resourceSettingsPtrType ResourceSettingsArgs

func ResourceSettingsPtr(v *ResourceSettingsArgs) ResourceSettingsPtrInput {
	return (*resourceSettingsPtrType)(v)
}

func (*resourceSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceSettings)(nil)).Elem()
}

func (i *resourceSettingsPtrType) ToResourceSettingsPtrOutput() ResourceSettingsPtrOutput {
	return i.ToResourceSettingsPtrOutputWithContext(context.Background())
}

func (i *resourceSettingsPtrType) ToResourceSettingsPtrOutputWithContext(ctx context.Context) ResourceSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSettingsPtrOutput)
}

// Represents resource specific settings
type ResourceSettingsResponse struct {
	// The translated compute cores of the virtual machine
	Cores int `pulumi:"cores"`
	// The resource id of the gallery image used for creating the virtual machine
	GalleryImageResourceId *string `pulumi:"galleryImageResourceId"`
	// The unique id of the resource setting
	Id string `pulumi:"id"`
	// The name of the image used to created the environment setting
	ImageName string `pulumi:"imageName"`
	// Details specific to Reference Vm
	ReferenceVm ReferenceVmResponse `pulumi:"referenceVm"`
	// The size of the virtual machine
	Size *string `pulumi:"size"`
}

// Represents resource specific settings
type ResourceSettingsResponseOutput struct{ *pulumi.OutputState }

func (ResourceSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSettingsResponse)(nil)).Elem()
}

func (o ResourceSettingsResponseOutput) ToResourceSettingsResponseOutput() ResourceSettingsResponseOutput {
	return o
}

func (o ResourceSettingsResponseOutput) ToResourceSettingsResponseOutputWithContext(ctx context.Context) ResourceSettingsResponseOutput {
	return o
}

func (o ResourceSettingsResponseOutput) ToResourceSettingsResponsePtrOutput() ResourceSettingsResponsePtrOutput {
	return o.ToResourceSettingsResponsePtrOutputWithContext(context.Background())
}

func (o ResourceSettingsResponseOutput) ToResourceSettingsResponsePtrOutputWithContext(ctx context.Context) ResourceSettingsResponsePtrOutput {
	return o.ApplyT(func(v ResourceSettingsResponse) *ResourceSettingsResponse {
		return &v
	}).(ResourceSettingsResponsePtrOutput)
}

// The translated compute cores of the virtual machine
func (o ResourceSettingsResponseOutput) Cores() pulumi.IntOutput {
	return o.ApplyT(func(v ResourceSettingsResponse) int { return v.Cores }).(pulumi.IntOutput)
}

// The resource id of the gallery image used for creating the virtual machine
func (o ResourceSettingsResponseOutput) GalleryImageResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceSettingsResponse) *string { return v.GalleryImageResourceId }).(pulumi.StringPtrOutput)
}

// The unique id of the resource setting
func (o ResourceSettingsResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceSettingsResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the image used to created the environment setting
func (o ResourceSettingsResponseOutput) ImageName() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceSettingsResponse) string { return v.ImageName }).(pulumi.StringOutput)
}

// Details specific to Reference Vm
func (o ResourceSettingsResponseOutput) ReferenceVm() ReferenceVmResponseOutput {
	return o.ApplyT(func(v ResourceSettingsResponse) ReferenceVmResponse { return v.ReferenceVm }).(ReferenceVmResponseOutput)
}

// The size of the virtual machine
func (o ResourceSettingsResponseOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceSettingsResponse) *string { return v.Size }).(pulumi.StringPtrOutput)
}

type ResourceSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceSettingsResponse)(nil)).Elem()
}

func (o ResourceSettingsResponsePtrOutput) ToResourceSettingsResponsePtrOutput() ResourceSettingsResponsePtrOutput {
	return o
}

func (o ResourceSettingsResponsePtrOutput) ToResourceSettingsResponsePtrOutputWithContext(ctx context.Context) ResourceSettingsResponsePtrOutput {
	return o
}

func (o ResourceSettingsResponsePtrOutput) Elem() ResourceSettingsResponseOutput {
	return o.ApplyT(func(v *ResourceSettingsResponse) ResourceSettingsResponse { return *v }).(ResourceSettingsResponseOutput)
}

// The translated compute cores of the virtual machine
func (o ResourceSettingsResponsePtrOutput) Cores() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResourceSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Cores
	}).(pulumi.IntPtrOutput)
}

// The resource id of the gallery image used for creating the virtual machine
func (o ResourceSettingsResponsePtrOutput) GalleryImageResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.GalleryImageResourceId
	}).(pulumi.StringPtrOutput)
}

// The unique id of the resource setting
func (o ResourceSettingsResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the image used to created the environment setting
func (o ResourceSettingsResponsePtrOutput) ImageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ImageName
	}).(pulumi.StringPtrOutput)
}

// Details specific to Reference Vm
func (o ResourceSettingsResponsePtrOutput) ReferenceVm() ReferenceVmResponsePtrOutput {
	return o.ApplyT(func(v *ResourceSettingsResponse) *ReferenceVmResponse {
		if v == nil {
			return nil
		}
		return &v.ReferenceVm
	}).(ReferenceVmResponsePtrOutput)
}

// The size of the virtual machine
func (o ResourceSettingsResponsePtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// Represents the size configuration under the lab account
type SizeConfigurationPropertiesResponse struct {
	// Represents a list of size categories supported by this Lab Account (Small, Medium, Large)
	EnvironmentSizes []EnvironmentSizeResponse `pulumi:"environmentSizes"`
}

// Represents the size configuration under the lab account
type SizeConfigurationPropertiesResponseOutput struct{ *pulumi.OutputState }

func (SizeConfigurationPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SizeConfigurationPropertiesResponse)(nil)).Elem()
}

func (o SizeConfigurationPropertiesResponseOutput) ToSizeConfigurationPropertiesResponseOutput() SizeConfigurationPropertiesResponseOutput {
	return o
}

func (o SizeConfigurationPropertiesResponseOutput) ToSizeConfigurationPropertiesResponseOutputWithContext(ctx context.Context) SizeConfigurationPropertiesResponseOutput {
	return o
}

func (o SizeConfigurationPropertiesResponseOutput) ToSizeConfigurationPropertiesResponsePtrOutput() SizeConfigurationPropertiesResponsePtrOutput {
	return o.ToSizeConfigurationPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o SizeConfigurationPropertiesResponseOutput) ToSizeConfigurationPropertiesResponsePtrOutputWithContext(ctx context.Context) SizeConfigurationPropertiesResponsePtrOutput {
	return o.ApplyT(func(v SizeConfigurationPropertiesResponse) *SizeConfigurationPropertiesResponse {
		return &v
	}).(SizeConfigurationPropertiesResponsePtrOutput)
}

// Represents a list of size categories supported by this Lab Account (Small, Medium, Large)
func (o SizeConfigurationPropertiesResponseOutput) EnvironmentSizes() EnvironmentSizeResponseArrayOutput {
	return o.ApplyT(func(v SizeConfigurationPropertiesResponse) []EnvironmentSizeResponse { return v.EnvironmentSizes }).(EnvironmentSizeResponseArrayOutput)
}

type SizeConfigurationPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (SizeConfigurationPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SizeConfigurationPropertiesResponse)(nil)).Elem()
}

func (o SizeConfigurationPropertiesResponsePtrOutput) ToSizeConfigurationPropertiesResponsePtrOutput() SizeConfigurationPropertiesResponsePtrOutput {
	return o
}

func (o SizeConfigurationPropertiesResponsePtrOutput) ToSizeConfigurationPropertiesResponsePtrOutputWithContext(ctx context.Context) SizeConfigurationPropertiesResponsePtrOutput {
	return o
}

func (o SizeConfigurationPropertiesResponsePtrOutput) Elem() SizeConfigurationPropertiesResponseOutput {
	return o.ApplyT(func(v *SizeConfigurationPropertiesResponse) SizeConfigurationPropertiesResponse { return *v }).(SizeConfigurationPropertiesResponseOutput)
}

// Represents a list of size categories supported by this Lab Account (Small, Medium, Large)
func (o SizeConfigurationPropertiesResponsePtrOutput) EnvironmentSizes() EnvironmentSizeResponseArrayOutput {
	return o.ApplyT(func(v *SizeConfigurationPropertiesResponse) []EnvironmentSizeResponse {
		if v == nil {
			return nil
		}
		return v.EnvironmentSizes
	}).(EnvironmentSizeResponseArrayOutput)
}

// Contains detailed information about a size
type SizeInfoResponse struct {
	// Represents the actual compute size, e.g. Standard_A2_v2.
	ComputeSize *string `pulumi:"computeSize"`
	// The amount of memory available (in GB).
	Memory *float64 `pulumi:"memory"`
	// The number of cores a VM of this size has.
	NumberOfCores *int `pulumi:"numberOfCores"`
	// The pay-as-you-go price per hour this size will cost. It does not include discounts and may not reflect the actual price the size will cost.
	Price *float64 `pulumi:"price"`
}

// Contains detailed information about a size
type SizeInfoResponseOutput struct{ *pulumi.OutputState }

func (SizeInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SizeInfoResponse)(nil)).Elem()
}

func (o SizeInfoResponseOutput) ToSizeInfoResponseOutput() SizeInfoResponseOutput {
	return o
}

func (o SizeInfoResponseOutput) ToSizeInfoResponseOutputWithContext(ctx context.Context) SizeInfoResponseOutput {
	return o
}

// Represents the actual compute size, e.g. Standard_A2_v2.
func (o SizeInfoResponseOutput) ComputeSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SizeInfoResponse) *string { return v.ComputeSize }).(pulumi.StringPtrOutput)
}

// The amount of memory available (in GB).
func (o SizeInfoResponseOutput) Memory() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SizeInfoResponse) *float64 { return v.Memory }).(pulumi.Float64PtrOutput)
}

// The number of cores a VM of this size has.
func (o SizeInfoResponseOutput) NumberOfCores() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SizeInfoResponse) *int { return v.NumberOfCores }).(pulumi.IntPtrOutput)
}

// The pay-as-you-go price per hour this size will cost. It does not include discounts and may not reflect the actual price the size will cost.
func (o SizeInfoResponseOutput) Price() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SizeInfoResponse) *float64 { return v.Price }).(pulumi.Float64PtrOutput)
}

type SizeInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (SizeInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SizeInfoResponse)(nil)).Elem()
}

func (o SizeInfoResponseArrayOutput) ToSizeInfoResponseArrayOutput() SizeInfoResponseArrayOutput {
	return o
}

func (o SizeInfoResponseArrayOutput) ToSizeInfoResponseArrayOutputWithContext(ctx context.Context) SizeInfoResponseArrayOutput {
	return o
}

func (o SizeInfoResponseArrayOutput) Index(i pulumi.IntInput) SizeInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SizeInfoResponse {
		return vs[0].([]SizeInfoResponse)[vs[1].(int)]
	}).(SizeInfoResponseOutput)
}

// Details of the backing virtual machine.
type VirtualMachineDetailsResponse struct {
	// Last known compute power state captured in DTL
	LastKnownPowerState string `pulumi:"lastKnownPowerState"`
	// PrivateIp address of the compute VM
	PrivateIpAddress string `pulumi:"privateIpAddress"`
	// Provisioning state of the Dtl VM
	ProvisioningState string `pulumi:"provisioningState"`
	// Connection information for Windows
	RdpAuthority string `pulumi:"rdpAuthority"`
	// Connection information for Linux
	SshAuthority string `pulumi:"sshAuthority"`
	// Compute VM login user name
	UserName string `pulumi:"userName"`
}

// Details about the state of the reference virtual machine.
type VmStateDetailsResponse struct {
	// Last known compute power state captured in DTL
	LastKnownPowerState string `pulumi:"lastKnownPowerState"`
	// The power state of the reference virtual machine.
	PowerState string `pulumi:"powerState"`
	// The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol).
	RdpAuthority string `pulumi:"rdpAuthority"`
	// The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH.
	SshAuthority string `pulumi:"sshAuthority"`
}

// Details about the state of the reference virtual machine.
type VmStateDetailsResponseOutput struct{ *pulumi.OutputState }

func (VmStateDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmStateDetailsResponse)(nil)).Elem()
}

func (o VmStateDetailsResponseOutput) ToVmStateDetailsResponseOutput() VmStateDetailsResponseOutput {
	return o
}

func (o VmStateDetailsResponseOutput) ToVmStateDetailsResponseOutputWithContext(ctx context.Context) VmStateDetailsResponseOutput {
	return o
}

func (o VmStateDetailsResponseOutput) ToVmStateDetailsResponsePtrOutput() VmStateDetailsResponsePtrOutput {
	return o.ToVmStateDetailsResponsePtrOutputWithContext(context.Background())
}

func (o VmStateDetailsResponseOutput) ToVmStateDetailsResponsePtrOutputWithContext(ctx context.Context) VmStateDetailsResponsePtrOutput {
	return o.ApplyT(func(v VmStateDetailsResponse) *VmStateDetailsResponse {
		return &v
	}).(VmStateDetailsResponsePtrOutput)
}

// Last known compute power state captured in DTL
func (o VmStateDetailsResponseOutput) LastKnownPowerState() pulumi.StringOutput {
	return o.ApplyT(func(v VmStateDetailsResponse) string { return v.LastKnownPowerState }).(pulumi.StringOutput)
}

// The power state of the reference virtual machine.
func (o VmStateDetailsResponseOutput) PowerState() pulumi.StringOutput {
	return o.ApplyT(func(v VmStateDetailsResponse) string { return v.PowerState }).(pulumi.StringOutput)
}

// The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol).
func (o VmStateDetailsResponseOutput) RdpAuthority() pulumi.StringOutput {
	return o.ApplyT(func(v VmStateDetailsResponse) string { return v.RdpAuthority }).(pulumi.StringOutput)
}

// The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH.
func (o VmStateDetailsResponseOutput) SshAuthority() pulumi.StringOutput {
	return o.ApplyT(func(v VmStateDetailsResponse) string { return v.SshAuthority }).(pulumi.StringOutput)
}

type VmStateDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (VmStateDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VmStateDetailsResponse)(nil)).Elem()
}

func (o VmStateDetailsResponsePtrOutput) ToVmStateDetailsResponsePtrOutput() VmStateDetailsResponsePtrOutput {
	return o
}

func (o VmStateDetailsResponsePtrOutput) ToVmStateDetailsResponsePtrOutputWithContext(ctx context.Context) VmStateDetailsResponsePtrOutput {
	return o
}

func (o VmStateDetailsResponsePtrOutput) Elem() VmStateDetailsResponseOutput {
	return o.ApplyT(func(v *VmStateDetailsResponse) VmStateDetailsResponse { return *v }).(VmStateDetailsResponseOutput)
}

// Last known compute power state captured in DTL
func (o VmStateDetailsResponsePtrOutput) LastKnownPowerState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmStateDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastKnownPowerState
	}).(pulumi.StringPtrOutput)
}

// The power state of the reference virtual machine.
func (o VmStateDetailsResponsePtrOutput) PowerState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmStateDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PowerState
	}).(pulumi.StringPtrOutput)
}

// The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol).
func (o VmStateDetailsResponsePtrOutput) RdpAuthority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmStateDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RdpAuthority
	}).(pulumi.StringPtrOutput)
}

// The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH.
func (o VmStateDetailsResponsePtrOutput) SshAuthority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmStateDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SshAuthority
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(EnvironmentDetailsResponseOutput{})
	pulumi.RegisterOutputType(EnvironmentDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(EnvironmentSizeResponseOutput{})
	pulumi.RegisterOutputType(EnvironmentSizeResponseArrayOutput{})
	pulumi.RegisterOutputType(GalleryImageReferenceResponseOutput{})
	pulumi.RegisterOutputType(GalleryImageReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(LabDetailsResponseOutput{})
	pulumi.RegisterOutputType(LabDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(LatestOperationResultResponseOutput{})
	pulumi.RegisterOutputType(LatestOperationResultResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceResponsePtrOutput{})
	pulumi.RegisterOutputType(ReferenceVmOutput{})
	pulumi.RegisterOutputType(ReferenceVmPtrOutput{})
	pulumi.RegisterOutputType(ReferenceVmResponseOutput{})
	pulumi.RegisterOutputType(ReferenceVmResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceSetOutput{})
	pulumi.RegisterOutputType(ResourceSetPtrOutput{})
	pulumi.RegisterOutputType(ResourceSetResponseOutput{})
	pulumi.RegisterOutputType(ResourceSetResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceSettingsOutput{})
	pulumi.RegisterOutputType(ResourceSettingsPtrOutput{})
	pulumi.RegisterOutputType(ResourceSettingsResponseOutput{})
	pulumi.RegisterOutputType(ResourceSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(SizeConfigurationPropertiesResponseOutput{})
	pulumi.RegisterOutputType(SizeConfigurationPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(SizeInfoResponseOutput{})
	pulumi.RegisterOutputType(SizeInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineDetailsResponseOutput{})
	pulumi.RegisterOutputType(VmStateDetailsResponseOutput{})
	pulumi.RegisterOutputType(VmStateDetailsResponsePtrOutput{})
}
