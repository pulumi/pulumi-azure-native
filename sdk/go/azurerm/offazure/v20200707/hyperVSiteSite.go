// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20200707

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Site REST Resource.
type HyperVSiteSite struct {
	pulumi.CustomResourceState

	// eTag for concurrency control.
	ETag pulumi.StringPtrOutput `pulumi:"eTag"`
	// Azure location in which Sites is created.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// Name of the Hyper-V site.
	Name pulumi.StringPtrOutput `pulumi:"name"`
	// Nested properties of Hyper-V site.
	Properties SitePropertiesResponseOutput `pulumi:"properties"`
	Tags       pulumi.StringMapOutput       `pulumi:"tags"`
	// Type of resource. Type = Microsoft.OffAzure/HyperVSites.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewHyperVSiteSite registers a new resource with the given unique name, arguments, and options.
func NewHyperVSiteSite(ctx *pulumi.Context,
	name string, args *HyperVSiteSiteArgs, opts ...pulumi.ResourceOption) (*HyperVSiteSite, error) {
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.SiteName == nil {
		return nil, errors.New("missing required argument 'SiteName'")
	}
	if args == nil {
		args = &HyperVSiteSiteArgs{}
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azurerm:offazure/v20200101:HyperVSiteSite"),
		},
	})
	opts = append(opts, aliases)
	var resource HyperVSiteSite
	err := ctx.RegisterResource("azurerm:offazure/v20200707:HyperVSiteSite", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHyperVSiteSite gets an existing HyperVSiteSite resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHyperVSiteSite(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HyperVSiteSiteState, opts ...pulumi.ResourceOption) (*HyperVSiteSite, error) {
	var resource HyperVSiteSite
	err := ctx.ReadResource("azurerm:offazure/v20200707:HyperVSiteSite", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering HyperVSiteSite resources.
type hyperVSiteSiteState struct {
	// eTag for concurrency control.
	ETag *string `pulumi:"eTag"`
	// Azure location in which Sites is created.
	Location *string `pulumi:"location"`
	// Name of the Hyper-V site.
	Name *string `pulumi:"name"`
	// Nested properties of Hyper-V site.
	Properties *SitePropertiesResponse `pulumi:"properties"`
	Tags       map[string]string       `pulumi:"tags"`
	// Type of resource. Type = Microsoft.OffAzure/HyperVSites.
	Type *string `pulumi:"type"`
}

type HyperVSiteSiteState struct {
	// eTag for concurrency control.
	ETag pulumi.StringPtrInput
	// Azure location in which Sites is created.
	Location pulumi.StringPtrInput
	// Name of the Hyper-V site.
	Name pulumi.StringPtrInput
	// Nested properties of Hyper-V site.
	Properties SitePropertiesResponsePtrInput
	Tags       pulumi.StringMapInput
	// Type of resource. Type = Microsoft.OffAzure/HyperVSites.
	Type pulumi.StringPtrInput
}

func (HyperVSiteSiteState) ElementType() reflect.Type {
	return reflect.TypeOf((*hyperVSiteSiteState)(nil)).Elem()
}

type hyperVSiteSiteArgs struct {
	// eTag for concurrency control.
	ETag *string `pulumi:"eTag"`
	// Azure location in which Sites is created.
	Location *string `pulumi:"location"`
	// Name of the Hyper-V site.
	Name *string `pulumi:"name"`
	// Nested properties of Hyper-V site.
	Properties *SiteProperties `pulumi:"properties"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Site name.
	SiteName string            `pulumi:"siteName"`
	Tags     map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a HyperVSiteSite resource.
type HyperVSiteSiteArgs struct {
	// eTag for concurrency control.
	ETag pulumi.StringPtrInput
	// Azure location in which Sites is created.
	Location pulumi.StringPtrInput
	// Name of the Hyper-V site.
	Name pulumi.StringPtrInput
	// Nested properties of Hyper-V site.
	Properties SitePropertiesPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Site name.
	SiteName pulumi.StringInput
	Tags     pulumi.StringMapInput
}

func (HyperVSiteSiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*hyperVSiteSiteArgs)(nil)).Elem()
}
