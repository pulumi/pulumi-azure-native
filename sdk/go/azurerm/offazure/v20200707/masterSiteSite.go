// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20200707

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Site REST Resource.
type MasterSiteSite struct {
	pulumi.CustomResourceState

	// eTag for concurrency control.
	ETag pulumi.StringPtrOutput `pulumi:"eTag"`
	// Azure location in which Sites is created.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// Name of the Master site.
	Name pulumi.StringPtrOutput `pulumi:"name"`
	// Nested properties of Master site.
	Properties MasterSitePropertiesResponseOutput `pulumi:"properties"`
	// Type of resource. Type = Microsoft.OffAzure/MasterSites.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewMasterSiteSite registers a new resource with the given unique name, arguments, and options.
func NewMasterSiteSite(ctx *pulumi.Context,
	name string, args *MasterSiteSiteArgs, opts ...pulumi.ResourceOption) (*MasterSiteSite, error) {
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.SiteName == nil {
		return nil, errors.New("missing required argument 'SiteName'")
	}
	if args == nil {
		args = &MasterSiteSiteArgs{}
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azurerm:offazure/latest:MasterSiteSite"),
		},
	})
	opts = append(opts, aliases)
	var resource MasterSiteSite
	err := ctx.RegisterResource("azurerm:offazure/v20200707:MasterSiteSite", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMasterSiteSite gets an existing MasterSiteSite resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMasterSiteSite(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MasterSiteSiteState, opts ...pulumi.ResourceOption) (*MasterSiteSite, error) {
	var resource MasterSiteSite
	err := ctx.ReadResource("azurerm:offazure/v20200707:MasterSiteSite", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MasterSiteSite resources.
type masterSiteSiteState struct {
	// eTag for concurrency control.
	ETag *string `pulumi:"eTag"`
	// Azure location in which Sites is created.
	Location *string `pulumi:"location"`
	// Name of the Master site.
	Name *string `pulumi:"name"`
	// Nested properties of Master site.
	Properties *MasterSitePropertiesResponse `pulumi:"properties"`
	// Type of resource. Type = Microsoft.OffAzure/MasterSites.
	Type *string `pulumi:"type"`
}

type MasterSiteSiteState struct {
	// eTag for concurrency control.
	ETag pulumi.StringPtrInput
	// Azure location in which Sites is created.
	Location pulumi.StringPtrInput
	// Name of the Master site.
	Name pulumi.StringPtrInput
	// Nested properties of Master site.
	Properties MasterSitePropertiesResponsePtrInput
	// Type of resource. Type = Microsoft.OffAzure/MasterSites.
	Type pulumi.StringPtrInput
}

func (MasterSiteSiteState) ElementType() reflect.Type {
	return reflect.TypeOf((*masterSiteSiteState)(nil)).Elem()
}

type masterSiteSiteArgs struct {
	// eTag for concurrency control.
	ETag *string `pulumi:"eTag"`
	// Azure location in which Sites is created.
	Location *string `pulumi:"location"`
	// Name of the Master site.
	Name *string `pulumi:"name"`
	// Nested properties of Master site.
	Properties *MasterSiteProperties `pulumi:"properties"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Site name.
	SiteName string `pulumi:"siteName"`
}

// The set of arguments for constructing a MasterSiteSite resource.
type MasterSiteSiteArgs struct {
	// eTag for concurrency control.
	ETag pulumi.StringPtrInput
	// Azure location in which Sites is created.
	Location pulumi.StringPtrInput
	// Name of the Master site.
	Name pulumi.StringPtrInput
	// Nested properties of Master site.
	Properties MasterSitePropertiesPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Site name.
	SiteName pulumi.StringInput
}

func (MasterSiteSiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*masterSiteSiteArgs)(nil)).Elem()
}
