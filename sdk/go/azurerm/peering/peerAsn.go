// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package peering

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The essential information related to the peer's ASN.
type PeerAsn struct {
	pulumi.CustomResourceState

	// The name of the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// The properties that define a peer's ASN.
	Properties PeerAsnPropertiesResponseOutput `pulumi:"properties"`
	// The type of the resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewPeerAsn registers a new resource with the given unique name, arguments, and options.
func NewPeerAsn(ctx *pulumi.Context,
	name string, args *PeerAsnArgs, opts ...pulumi.ResourceOption) (*PeerAsn, error) {
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil {
		args = &PeerAsnArgs{}
	}
	var resource PeerAsn
	err := ctx.RegisterResource("azurerm:peering:PeerAsn", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPeerAsn gets an existing PeerAsn resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPeerAsn(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PeerAsnState, opts ...pulumi.ResourceOption) (*PeerAsn, error) {
	var resource PeerAsn
	err := ctx.ReadResource("azurerm:peering:PeerAsn", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PeerAsn resources.
type peerAsnState struct {
	// The name of the resource.
	Name *string `pulumi:"name"`
	// The properties that define a peer's ASN.
	Properties *PeerAsnPropertiesResponse `pulumi:"properties"`
	// The type of the resource.
	Type *string `pulumi:"type"`
}

type PeerAsnState struct {
	// The name of the resource.
	Name pulumi.StringPtrInput
	// The properties that define a peer's ASN.
	Properties PeerAsnPropertiesResponsePtrInput
	// The type of the resource.
	Type pulumi.StringPtrInput
}

func (PeerAsnState) ElementType() reflect.Type {
	return reflect.TypeOf((*peerAsnState)(nil)).Elem()
}

type peerAsnArgs struct {
	// The peer ASN name.
	Name string `pulumi:"name"`
	// The properties that define a peer's ASN.
	Properties *PeerAsnProperties `pulumi:"properties"`
}

// The set of arguments for constructing a PeerAsn resource.
type PeerAsnArgs struct {
	// The peer ASN name.
	Name pulumi.StringInput
	// The properties that define a peer's ASN.
	Properties PeerAsnPropertiesPtrInput
}

func (PeerAsnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*peerAsnArgs)(nil)).Elem()
}
