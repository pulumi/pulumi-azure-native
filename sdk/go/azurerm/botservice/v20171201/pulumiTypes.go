// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20171201

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The parameters to provide for the Bot.
type BotProperties struct {
	// The description of the bot
	Description *string `pulumi:"description"`
	// The Application Insights key
	DeveloperAppInsightKey *string `pulumi:"developerAppInsightKey"`
	// The Application Insights Api Key
	DeveloperAppInsightsApiKey *string `pulumi:"developerAppInsightsApiKey"`
	// The Application Insights App Id
	DeveloperAppInsightsApplicationId *string `pulumi:"developerAppInsightsApplicationId"`
	// The Name of the bot
	DisplayName string `pulumi:"displayName"`
	// The bot's endpoint
	Endpoint string `pulumi:"endpoint"`
	// The Icon Url of the bot
	IconUrl *string `pulumi:"iconUrl"`
	// Collection of LUIS App Ids
	LuisAppIds []string `pulumi:"luisAppIds"`
	// The LUIS Key
	LuisKey *string `pulumi:"luisKey"`
	// Microsoft App Id for the bot
	MsaAppId string `pulumi:"msaAppId"`
}

// BotPropertiesInput is an input type that accepts BotPropertiesArgs and BotPropertiesOutput values.
// You can construct a concrete instance of `BotPropertiesInput` via:
//
//          BotPropertiesArgs{...}
type BotPropertiesInput interface {
	pulumi.Input

	ToBotPropertiesOutput() BotPropertiesOutput
	ToBotPropertiesOutputWithContext(context.Context) BotPropertiesOutput
}

// The parameters to provide for the Bot.
type BotPropertiesArgs struct {
	// The description of the bot
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The Application Insights key
	DeveloperAppInsightKey pulumi.StringPtrInput `pulumi:"developerAppInsightKey"`
	// The Application Insights Api Key
	DeveloperAppInsightsApiKey pulumi.StringPtrInput `pulumi:"developerAppInsightsApiKey"`
	// The Application Insights App Id
	DeveloperAppInsightsApplicationId pulumi.StringPtrInput `pulumi:"developerAppInsightsApplicationId"`
	// The Name of the bot
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// The bot's endpoint
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
	// The Icon Url of the bot
	IconUrl pulumi.StringPtrInput `pulumi:"iconUrl"`
	// Collection of LUIS App Ids
	LuisAppIds pulumi.StringArrayInput `pulumi:"luisAppIds"`
	// The LUIS Key
	LuisKey pulumi.StringPtrInput `pulumi:"luisKey"`
	// Microsoft App Id for the bot
	MsaAppId pulumi.StringInput `pulumi:"msaAppId"`
}

func (BotPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BotProperties)(nil)).Elem()
}

func (i BotPropertiesArgs) ToBotPropertiesOutput() BotPropertiesOutput {
	return i.ToBotPropertiesOutputWithContext(context.Background())
}

func (i BotPropertiesArgs) ToBotPropertiesOutputWithContext(ctx context.Context) BotPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotPropertiesOutput)
}

func (i BotPropertiesArgs) ToBotPropertiesPtrOutput() BotPropertiesPtrOutput {
	return i.ToBotPropertiesPtrOutputWithContext(context.Background())
}

func (i BotPropertiesArgs) ToBotPropertiesPtrOutputWithContext(ctx context.Context) BotPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotPropertiesOutput).ToBotPropertiesPtrOutputWithContext(ctx)
}

// BotPropertiesPtrInput is an input type that accepts BotPropertiesArgs, BotPropertiesPtr and BotPropertiesPtrOutput values.
// You can construct a concrete instance of `BotPropertiesPtrInput` via:
//
//          BotPropertiesArgs{...}
//
//  or:
//
//          nil
type BotPropertiesPtrInput interface {
	pulumi.Input

	ToBotPropertiesPtrOutput() BotPropertiesPtrOutput
	ToBotPropertiesPtrOutputWithContext(context.Context) BotPropertiesPtrOutput
}

type botPropertiesPtrType BotPropertiesArgs

func BotPropertiesPtr(v *BotPropertiesArgs) BotPropertiesPtrInput {
	return (*botPropertiesPtrType)(v)
}

func (*botPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BotProperties)(nil)).Elem()
}

func (i *botPropertiesPtrType) ToBotPropertiesPtrOutput() BotPropertiesPtrOutput {
	return i.ToBotPropertiesPtrOutputWithContext(context.Background())
}

func (i *botPropertiesPtrType) ToBotPropertiesPtrOutputWithContext(ctx context.Context) BotPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotPropertiesPtrOutput)
}

// The parameters to provide for the Bot.
type BotPropertiesResponse struct {
	// Collection of channels for which the bot is configured
	ConfiguredChannels []string `pulumi:"configuredChannels"`
	// The description of the bot
	Description *string `pulumi:"description"`
	// The Application Insights key
	DeveloperAppInsightKey *string `pulumi:"developerAppInsightKey"`
	// The Application Insights Api Key
	DeveloperAppInsightsApiKey *string `pulumi:"developerAppInsightsApiKey"`
	// The Application Insights App Id
	DeveloperAppInsightsApplicationId *string `pulumi:"developerAppInsightsApplicationId"`
	// The Name of the bot
	DisplayName string `pulumi:"displayName"`
	// Collection of channels for which the bot is enabled
	EnabledChannels []string `pulumi:"enabledChannels"`
	// The bot's endpoint
	Endpoint string `pulumi:"endpoint"`
	// The bot's endpoint version
	EndpointVersion string `pulumi:"endpointVersion"`
	// The Icon Url of the bot
	IconUrl *string `pulumi:"iconUrl"`
	// Collection of LUIS App Ids
	LuisAppIds []string `pulumi:"luisAppIds"`
	// The LUIS Key
	LuisKey *string `pulumi:"luisKey"`
	// Microsoft App Id for the bot
	MsaAppId string `pulumi:"msaAppId"`
}

// The parameters to provide for the Bot.
type BotPropertiesResponseOutput struct{ *pulumi.OutputState }

func (BotPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BotPropertiesResponse)(nil)).Elem()
}

func (o BotPropertiesResponseOutput) ToBotPropertiesResponseOutput() BotPropertiesResponseOutput {
	return o
}

func (o BotPropertiesResponseOutput) ToBotPropertiesResponseOutputWithContext(ctx context.Context) BotPropertiesResponseOutput {
	return o
}

func (o BotPropertiesResponseOutput) ToBotPropertiesResponsePtrOutput() BotPropertiesResponsePtrOutput {
	return o.ToBotPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o BotPropertiesResponseOutput) ToBotPropertiesResponsePtrOutputWithContext(ctx context.Context) BotPropertiesResponsePtrOutput {
	return o.ApplyT(func(v BotPropertiesResponse) *BotPropertiesResponse {
		return &v
	}).(BotPropertiesResponsePtrOutput)
}

// Collection of channels for which the bot is configured
func (o BotPropertiesResponseOutput) ConfiguredChannels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BotPropertiesResponse) []string { return v.ConfiguredChannels }).(pulumi.StringArrayOutput)
}

// The description of the bot
func (o BotPropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotPropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The Application Insights key
func (o BotPropertiesResponseOutput) DeveloperAppInsightKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotPropertiesResponse) *string { return v.DeveloperAppInsightKey }).(pulumi.StringPtrOutput)
}

// The Application Insights Api Key
func (o BotPropertiesResponseOutput) DeveloperAppInsightsApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotPropertiesResponse) *string { return v.DeveloperAppInsightsApiKey }).(pulumi.StringPtrOutput)
}

// The Application Insights App Id
func (o BotPropertiesResponseOutput) DeveloperAppInsightsApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotPropertiesResponse) *string { return v.DeveloperAppInsightsApplicationId }).(pulumi.StringPtrOutput)
}

// The Name of the bot
func (o BotPropertiesResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v BotPropertiesResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Collection of channels for which the bot is enabled
func (o BotPropertiesResponseOutput) EnabledChannels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BotPropertiesResponse) []string { return v.EnabledChannels }).(pulumi.StringArrayOutput)
}

// The bot's endpoint
func (o BotPropertiesResponseOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v BotPropertiesResponse) string { return v.Endpoint }).(pulumi.StringOutput)
}

// The bot's endpoint version
func (o BotPropertiesResponseOutput) EndpointVersion() pulumi.StringOutput {
	return o.ApplyT(func(v BotPropertiesResponse) string { return v.EndpointVersion }).(pulumi.StringOutput)
}

// The Icon Url of the bot
func (o BotPropertiesResponseOutput) IconUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotPropertiesResponse) *string { return v.IconUrl }).(pulumi.StringPtrOutput)
}

// Collection of LUIS App Ids
func (o BotPropertiesResponseOutput) LuisAppIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BotPropertiesResponse) []string { return v.LuisAppIds }).(pulumi.StringArrayOutput)
}

// The LUIS Key
func (o BotPropertiesResponseOutput) LuisKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotPropertiesResponse) *string { return v.LuisKey }).(pulumi.StringPtrOutput)
}

// Microsoft App Id for the bot
func (o BotPropertiesResponseOutput) MsaAppId() pulumi.StringOutput {
	return o.ApplyT(func(v BotPropertiesResponse) string { return v.MsaAppId }).(pulumi.StringOutput)
}

type BotPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (BotPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BotPropertiesResponse)(nil)).Elem()
}

func (o BotPropertiesResponsePtrOutput) ToBotPropertiesResponsePtrOutput() BotPropertiesResponsePtrOutput {
	return o
}

func (o BotPropertiesResponsePtrOutput) ToBotPropertiesResponsePtrOutputWithContext(ctx context.Context) BotPropertiesResponsePtrOutput {
	return o
}

func (o BotPropertiesResponsePtrOutput) Elem() BotPropertiesResponseOutput {
	return o.ApplyT(func(v *BotPropertiesResponse) BotPropertiesResponse { return *v }).(BotPropertiesResponseOutput)
}

// Collection of channels for which the bot is configured
func (o BotPropertiesResponsePtrOutput) ConfiguredChannels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BotPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.ConfiguredChannels
	}).(pulumi.StringArrayOutput)
}

// The description of the bot
func (o BotPropertiesResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The Application Insights key
func (o BotPropertiesResponsePtrOutput) DeveloperAppInsightKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DeveloperAppInsightKey
	}).(pulumi.StringPtrOutput)
}

// The Application Insights Api Key
func (o BotPropertiesResponsePtrOutput) DeveloperAppInsightsApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DeveloperAppInsightsApiKey
	}).(pulumi.StringPtrOutput)
}

// The Application Insights App Id
func (o BotPropertiesResponsePtrOutput) DeveloperAppInsightsApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DeveloperAppInsightsApplicationId
	}).(pulumi.StringPtrOutput)
}

// The Name of the bot
func (o BotPropertiesResponsePtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// Collection of channels for which the bot is enabled
func (o BotPropertiesResponsePtrOutput) EnabledChannels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BotPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.EnabledChannels
	}).(pulumi.StringArrayOutput)
}

// The bot's endpoint
func (o BotPropertiesResponsePtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoint
	}).(pulumi.StringPtrOutput)
}

// The bot's endpoint version
func (o BotPropertiesResponsePtrOutput) EndpointVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.EndpointVersion
	}).(pulumi.StringPtrOutput)
}

// The Icon Url of the bot
func (o BotPropertiesResponsePtrOutput) IconUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.IconUrl
	}).(pulumi.StringPtrOutput)
}

// Collection of LUIS App Ids
func (o BotPropertiesResponsePtrOutput) LuisAppIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BotPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.LuisAppIds
	}).(pulumi.StringArrayOutput)
}

// The LUIS Key
func (o BotPropertiesResponsePtrOutput) LuisKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.LuisKey
	}).(pulumi.StringPtrOutput)
}

// Microsoft App Id for the bot
func (o BotPropertiesResponsePtrOutput) MsaAppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MsaAppId
	}).(pulumi.StringPtrOutput)
}

// Extra Parameter in a Connection Setting Properties to indicate service provider specific properties
type ConnectionSettingParameter struct {
	// Key for the Connection Setting Parameter.
	Key *string `pulumi:"key"`
	// Value associated with the Connection Setting Parameter.
	Value *string `pulumi:"value"`
}

// ConnectionSettingParameterInput is an input type that accepts ConnectionSettingParameterArgs and ConnectionSettingParameterOutput values.
// You can construct a concrete instance of `ConnectionSettingParameterInput` via:
//
//          ConnectionSettingParameterArgs{...}
type ConnectionSettingParameterInput interface {
	pulumi.Input

	ToConnectionSettingParameterOutput() ConnectionSettingParameterOutput
	ToConnectionSettingParameterOutputWithContext(context.Context) ConnectionSettingParameterOutput
}

// Extra Parameter in a Connection Setting Properties to indicate service provider specific properties
type ConnectionSettingParameterArgs struct {
	// Key for the Connection Setting Parameter.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Value associated with the Connection Setting Parameter.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ConnectionSettingParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionSettingParameter)(nil)).Elem()
}

func (i ConnectionSettingParameterArgs) ToConnectionSettingParameterOutput() ConnectionSettingParameterOutput {
	return i.ToConnectionSettingParameterOutputWithContext(context.Background())
}

func (i ConnectionSettingParameterArgs) ToConnectionSettingParameterOutputWithContext(ctx context.Context) ConnectionSettingParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionSettingParameterOutput)
}

// ConnectionSettingParameterArrayInput is an input type that accepts ConnectionSettingParameterArray and ConnectionSettingParameterArrayOutput values.
// You can construct a concrete instance of `ConnectionSettingParameterArrayInput` via:
//
//          ConnectionSettingParameterArray{ ConnectionSettingParameterArgs{...} }
type ConnectionSettingParameterArrayInput interface {
	pulumi.Input

	ToConnectionSettingParameterArrayOutput() ConnectionSettingParameterArrayOutput
	ToConnectionSettingParameterArrayOutputWithContext(context.Context) ConnectionSettingParameterArrayOutput
}

type ConnectionSettingParameterArray []ConnectionSettingParameterInput

func (ConnectionSettingParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionSettingParameter)(nil)).Elem()
}

func (i ConnectionSettingParameterArray) ToConnectionSettingParameterArrayOutput() ConnectionSettingParameterArrayOutput {
	return i.ToConnectionSettingParameterArrayOutputWithContext(context.Background())
}

func (i ConnectionSettingParameterArray) ToConnectionSettingParameterArrayOutputWithContext(ctx context.Context) ConnectionSettingParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionSettingParameterArrayOutput)
}

// Extra Parameter in a Connection Setting Properties to indicate service provider specific properties
type ConnectionSettingParameterResponse struct {
	// Key for the Connection Setting Parameter.
	Key *string `pulumi:"key"`
	// Value associated with the Connection Setting Parameter.
	Value *string `pulumi:"value"`
}

// Extra Parameter in a Connection Setting Properties to indicate service provider specific properties
type ConnectionSettingParameterResponseOutput struct{ *pulumi.OutputState }

func (ConnectionSettingParameterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionSettingParameterResponse)(nil)).Elem()
}

func (o ConnectionSettingParameterResponseOutput) ToConnectionSettingParameterResponseOutput() ConnectionSettingParameterResponseOutput {
	return o
}

func (o ConnectionSettingParameterResponseOutput) ToConnectionSettingParameterResponseOutputWithContext(ctx context.Context) ConnectionSettingParameterResponseOutput {
	return o
}

// Key for the Connection Setting Parameter.
func (o ConnectionSettingParameterResponseOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingParameterResponse) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Value associated with the Connection Setting Parameter.
func (o ConnectionSettingParameterResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingParameterResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ConnectionSettingParameterResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnectionSettingParameterResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionSettingParameterResponse)(nil)).Elem()
}

func (o ConnectionSettingParameterResponseArrayOutput) ToConnectionSettingParameterResponseArrayOutput() ConnectionSettingParameterResponseArrayOutput {
	return o
}

func (o ConnectionSettingParameterResponseArrayOutput) ToConnectionSettingParameterResponseArrayOutputWithContext(ctx context.Context) ConnectionSettingParameterResponseArrayOutput {
	return o
}

func (o ConnectionSettingParameterResponseArrayOutput) Index(i pulumi.IntInput) ConnectionSettingParameterResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionSettingParameterResponse {
		return vs[0].([]ConnectionSettingParameterResponse)[vs[1].(int)]
	}).(ConnectionSettingParameterResponseOutput)
}

// Properties for a Connection Setting Item
type ConnectionSettingProperties struct {
	// Client Id associated with the Connection Setting.
	ClientId *string `pulumi:"clientId"`
	// Client Secret associated with the Connection Setting
	ClientSecret *string `pulumi:"clientSecret"`
	// Service Provider Parameters associated with the Connection Setting
	Parameters []ConnectionSettingParameter `pulumi:"parameters"`
	// Scopes associated with the Connection Setting
	Scopes *string `pulumi:"scopes"`
	// Service Provider Display Name associated with the Connection Setting
	ServiceProviderDisplayName *string `pulumi:"serviceProviderDisplayName"`
	// Service Provider Id associated with the Connection Setting
	ServiceProviderId *string `pulumi:"serviceProviderId"`
}

// ConnectionSettingPropertiesInput is an input type that accepts ConnectionSettingPropertiesArgs and ConnectionSettingPropertiesOutput values.
// You can construct a concrete instance of `ConnectionSettingPropertiesInput` via:
//
//          ConnectionSettingPropertiesArgs{...}
type ConnectionSettingPropertiesInput interface {
	pulumi.Input

	ToConnectionSettingPropertiesOutput() ConnectionSettingPropertiesOutput
	ToConnectionSettingPropertiesOutputWithContext(context.Context) ConnectionSettingPropertiesOutput
}

// Properties for a Connection Setting Item
type ConnectionSettingPropertiesArgs struct {
	// Client Id associated with the Connection Setting.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// Client Secret associated with the Connection Setting
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	// Service Provider Parameters associated with the Connection Setting
	Parameters ConnectionSettingParameterArrayInput `pulumi:"parameters"`
	// Scopes associated with the Connection Setting
	Scopes pulumi.StringPtrInput `pulumi:"scopes"`
	// Service Provider Display Name associated with the Connection Setting
	ServiceProviderDisplayName pulumi.StringPtrInput `pulumi:"serviceProviderDisplayName"`
	// Service Provider Id associated with the Connection Setting
	ServiceProviderId pulumi.StringPtrInput `pulumi:"serviceProviderId"`
}

func (ConnectionSettingPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionSettingProperties)(nil)).Elem()
}

func (i ConnectionSettingPropertiesArgs) ToConnectionSettingPropertiesOutput() ConnectionSettingPropertiesOutput {
	return i.ToConnectionSettingPropertiesOutputWithContext(context.Background())
}

func (i ConnectionSettingPropertiesArgs) ToConnectionSettingPropertiesOutputWithContext(ctx context.Context) ConnectionSettingPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionSettingPropertiesOutput)
}

func (i ConnectionSettingPropertiesArgs) ToConnectionSettingPropertiesPtrOutput() ConnectionSettingPropertiesPtrOutput {
	return i.ToConnectionSettingPropertiesPtrOutputWithContext(context.Background())
}

func (i ConnectionSettingPropertiesArgs) ToConnectionSettingPropertiesPtrOutputWithContext(ctx context.Context) ConnectionSettingPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionSettingPropertiesOutput).ToConnectionSettingPropertiesPtrOutputWithContext(ctx)
}

// ConnectionSettingPropertiesPtrInput is an input type that accepts ConnectionSettingPropertiesArgs, ConnectionSettingPropertiesPtr and ConnectionSettingPropertiesPtrOutput values.
// You can construct a concrete instance of `ConnectionSettingPropertiesPtrInput` via:
//
//          ConnectionSettingPropertiesArgs{...}
//
//  or:
//
//          nil
type ConnectionSettingPropertiesPtrInput interface {
	pulumi.Input

	ToConnectionSettingPropertiesPtrOutput() ConnectionSettingPropertiesPtrOutput
	ToConnectionSettingPropertiesPtrOutputWithContext(context.Context) ConnectionSettingPropertiesPtrOutput
}

type connectionSettingPropertiesPtrType ConnectionSettingPropertiesArgs

func ConnectionSettingPropertiesPtr(v *ConnectionSettingPropertiesArgs) ConnectionSettingPropertiesPtrInput {
	return (*connectionSettingPropertiesPtrType)(v)
}

func (*connectionSettingPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionSettingProperties)(nil)).Elem()
}

func (i *connectionSettingPropertiesPtrType) ToConnectionSettingPropertiesPtrOutput() ConnectionSettingPropertiesPtrOutput {
	return i.ToConnectionSettingPropertiesPtrOutputWithContext(context.Background())
}

func (i *connectionSettingPropertiesPtrType) ToConnectionSettingPropertiesPtrOutputWithContext(ctx context.Context) ConnectionSettingPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionSettingPropertiesPtrOutput)
}

// Properties for a Connection Setting Item
type ConnectionSettingPropertiesResponse struct {
	// Client Id associated with the Connection Setting.
	ClientId *string `pulumi:"clientId"`
	// Client Secret associated with the Connection Setting
	ClientSecret *string `pulumi:"clientSecret"`
	// Service Provider Parameters associated with the Connection Setting
	Parameters []ConnectionSettingParameterResponse `pulumi:"parameters"`
	// Scopes associated with the Connection Setting
	Scopes *string `pulumi:"scopes"`
	// Service Provider Display Name associated with the Connection Setting
	ServiceProviderDisplayName *string `pulumi:"serviceProviderDisplayName"`
	// Service Provider Id associated with the Connection Setting
	ServiceProviderId *string `pulumi:"serviceProviderId"`
	// Setting Id set by the service for the Connection Setting.
	SettingId string `pulumi:"settingId"`
}

// Properties for a Connection Setting Item
type ConnectionSettingPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ConnectionSettingPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionSettingPropertiesResponse)(nil)).Elem()
}

func (o ConnectionSettingPropertiesResponseOutput) ToConnectionSettingPropertiesResponseOutput() ConnectionSettingPropertiesResponseOutput {
	return o
}

func (o ConnectionSettingPropertiesResponseOutput) ToConnectionSettingPropertiesResponseOutputWithContext(ctx context.Context) ConnectionSettingPropertiesResponseOutput {
	return o
}

func (o ConnectionSettingPropertiesResponseOutput) ToConnectionSettingPropertiesResponsePtrOutput() ConnectionSettingPropertiesResponsePtrOutput {
	return o.ToConnectionSettingPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ConnectionSettingPropertiesResponseOutput) ToConnectionSettingPropertiesResponsePtrOutputWithContext(ctx context.Context) ConnectionSettingPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ConnectionSettingPropertiesResponse) *ConnectionSettingPropertiesResponse {
		return &v
	}).(ConnectionSettingPropertiesResponsePtrOutput)
}

// Client Id associated with the Connection Setting.
func (o ConnectionSettingPropertiesResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingPropertiesResponse) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Client Secret associated with the Connection Setting
func (o ConnectionSettingPropertiesResponseOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingPropertiesResponse) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// Service Provider Parameters associated with the Connection Setting
func (o ConnectionSettingPropertiesResponseOutput) Parameters() ConnectionSettingParameterResponseArrayOutput {
	return o.ApplyT(func(v ConnectionSettingPropertiesResponse) []ConnectionSettingParameterResponse { return v.Parameters }).(ConnectionSettingParameterResponseArrayOutput)
}

// Scopes associated with the Connection Setting
func (o ConnectionSettingPropertiesResponseOutput) Scopes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingPropertiesResponse) *string { return v.Scopes }).(pulumi.StringPtrOutput)
}

// Service Provider Display Name associated with the Connection Setting
func (o ConnectionSettingPropertiesResponseOutput) ServiceProviderDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingPropertiesResponse) *string { return v.ServiceProviderDisplayName }).(pulumi.StringPtrOutput)
}

// Service Provider Id associated with the Connection Setting
func (o ConnectionSettingPropertiesResponseOutput) ServiceProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingPropertiesResponse) *string { return v.ServiceProviderId }).(pulumi.StringPtrOutput)
}

// Setting Id set by the service for the Connection Setting.
func (o ConnectionSettingPropertiesResponseOutput) SettingId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionSettingPropertiesResponse) string { return v.SettingId }).(pulumi.StringOutput)
}

type ConnectionSettingPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectionSettingPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionSettingPropertiesResponse)(nil)).Elem()
}

func (o ConnectionSettingPropertiesResponsePtrOutput) ToConnectionSettingPropertiesResponsePtrOutput() ConnectionSettingPropertiesResponsePtrOutput {
	return o
}

func (o ConnectionSettingPropertiesResponsePtrOutput) ToConnectionSettingPropertiesResponsePtrOutputWithContext(ctx context.Context) ConnectionSettingPropertiesResponsePtrOutput {
	return o
}

func (o ConnectionSettingPropertiesResponsePtrOutput) Elem() ConnectionSettingPropertiesResponseOutput {
	return o.ApplyT(func(v *ConnectionSettingPropertiesResponse) ConnectionSettingPropertiesResponse { return *v }).(ConnectionSettingPropertiesResponseOutput)
}

// Client Id associated with the Connection Setting.
func (o ConnectionSettingPropertiesResponsePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionSettingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Client Secret associated with the Connection Setting
func (o ConnectionSettingPropertiesResponsePtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionSettingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// Service Provider Parameters associated with the Connection Setting
func (o ConnectionSettingPropertiesResponsePtrOutput) Parameters() ConnectionSettingParameterResponseArrayOutput {
	return o.ApplyT(func(v *ConnectionSettingPropertiesResponse) []ConnectionSettingParameterResponse {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(ConnectionSettingParameterResponseArrayOutput)
}

// Scopes associated with the Connection Setting
func (o ConnectionSettingPropertiesResponsePtrOutput) Scopes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionSettingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Scopes
	}).(pulumi.StringPtrOutput)
}

// Service Provider Display Name associated with the Connection Setting
func (o ConnectionSettingPropertiesResponsePtrOutput) ServiceProviderDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionSettingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServiceProviderDisplayName
	}).(pulumi.StringPtrOutput)
}

// Service Provider Id associated with the Connection Setting
func (o ConnectionSettingPropertiesResponsePtrOutput) ServiceProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionSettingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServiceProviderId
	}).(pulumi.StringPtrOutput)
}

// Setting Id set by the service for the Connection Setting.
func (o ConnectionSettingPropertiesResponsePtrOutput) SettingId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionSettingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SettingId
	}).(pulumi.StringPtrOutput)
}

// Direct Line channel definition
type DirectLineChannel struct {
	// The channel name
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to Direct Line channel resource
	Properties *DirectLineChannelProperties `pulumi:"properties"`
}

// DirectLineChannelInput is an input type that accepts DirectLineChannelArgs and DirectLineChannelOutput values.
// You can construct a concrete instance of `DirectLineChannelInput` via:
//
//          DirectLineChannelArgs{...}
type DirectLineChannelInput interface {
	pulumi.Input

	ToDirectLineChannelOutput() DirectLineChannelOutput
	ToDirectLineChannelOutputWithContext(context.Context) DirectLineChannelOutput
}

// Direct Line channel definition
type DirectLineChannelArgs struct {
	// The channel name
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// The set of properties specific to Direct Line channel resource
	Properties DirectLineChannelPropertiesPtrInput `pulumi:"properties"`
}

func (DirectLineChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectLineChannel)(nil)).Elem()
}

func (i DirectLineChannelArgs) ToDirectLineChannelOutput() DirectLineChannelOutput {
	return i.ToDirectLineChannelOutputWithContext(context.Background())
}

func (i DirectLineChannelArgs) ToDirectLineChannelOutputWithContext(ctx context.Context) DirectLineChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectLineChannelOutput)
}

// The parameters to provide for the Direct Line channel.
type DirectLineChannelProperties struct {
	// The list of Direct Line sites
	Sites []DirectLineSite `pulumi:"sites"`
}

// DirectLineChannelPropertiesInput is an input type that accepts DirectLineChannelPropertiesArgs and DirectLineChannelPropertiesOutput values.
// You can construct a concrete instance of `DirectLineChannelPropertiesInput` via:
//
//          DirectLineChannelPropertiesArgs{...}
type DirectLineChannelPropertiesInput interface {
	pulumi.Input

	ToDirectLineChannelPropertiesOutput() DirectLineChannelPropertiesOutput
	ToDirectLineChannelPropertiesOutputWithContext(context.Context) DirectLineChannelPropertiesOutput
}

// The parameters to provide for the Direct Line channel.
type DirectLineChannelPropertiesArgs struct {
	// The list of Direct Line sites
	Sites DirectLineSiteArrayInput `pulumi:"sites"`
}

func (DirectLineChannelPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectLineChannelProperties)(nil)).Elem()
}

func (i DirectLineChannelPropertiesArgs) ToDirectLineChannelPropertiesOutput() DirectLineChannelPropertiesOutput {
	return i.ToDirectLineChannelPropertiesOutputWithContext(context.Background())
}

func (i DirectLineChannelPropertiesArgs) ToDirectLineChannelPropertiesOutputWithContext(ctx context.Context) DirectLineChannelPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectLineChannelPropertiesOutput)
}

func (i DirectLineChannelPropertiesArgs) ToDirectLineChannelPropertiesPtrOutput() DirectLineChannelPropertiesPtrOutput {
	return i.ToDirectLineChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i DirectLineChannelPropertiesArgs) ToDirectLineChannelPropertiesPtrOutputWithContext(ctx context.Context) DirectLineChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectLineChannelPropertiesOutput).ToDirectLineChannelPropertiesPtrOutputWithContext(ctx)
}

// DirectLineChannelPropertiesPtrInput is an input type that accepts DirectLineChannelPropertiesArgs, DirectLineChannelPropertiesPtr and DirectLineChannelPropertiesPtrOutput values.
// You can construct a concrete instance of `DirectLineChannelPropertiesPtrInput` via:
//
//          DirectLineChannelPropertiesArgs{...}
//
//  or:
//
//          nil
type DirectLineChannelPropertiesPtrInput interface {
	pulumi.Input

	ToDirectLineChannelPropertiesPtrOutput() DirectLineChannelPropertiesPtrOutput
	ToDirectLineChannelPropertiesPtrOutputWithContext(context.Context) DirectLineChannelPropertiesPtrOutput
}

type directLineChannelPropertiesPtrType DirectLineChannelPropertiesArgs

func DirectLineChannelPropertiesPtr(v *DirectLineChannelPropertiesArgs) DirectLineChannelPropertiesPtrInput {
	return (*directLineChannelPropertiesPtrType)(v)
}

func (*directLineChannelPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectLineChannelProperties)(nil)).Elem()
}

func (i *directLineChannelPropertiesPtrType) ToDirectLineChannelPropertiesPtrOutput() DirectLineChannelPropertiesPtrOutput {
	return i.ToDirectLineChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i *directLineChannelPropertiesPtrType) ToDirectLineChannelPropertiesPtrOutputWithContext(ctx context.Context) DirectLineChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectLineChannelPropertiesPtrOutput)
}

// The parameters to provide for the Direct Line channel.
type DirectLineChannelPropertiesResponse struct {
	// The list of Direct Line sites
	Sites []DirectLineSiteResponse `pulumi:"sites"`
}

// The parameters to provide for the Direct Line channel.
type DirectLineChannelPropertiesResponseOutput struct{ *pulumi.OutputState }

func (DirectLineChannelPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectLineChannelPropertiesResponse)(nil)).Elem()
}

func (o DirectLineChannelPropertiesResponseOutput) ToDirectLineChannelPropertiesResponseOutput() DirectLineChannelPropertiesResponseOutput {
	return o
}

func (o DirectLineChannelPropertiesResponseOutput) ToDirectLineChannelPropertiesResponseOutputWithContext(ctx context.Context) DirectLineChannelPropertiesResponseOutput {
	return o
}

func (o DirectLineChannelPropertiesResponseOutput) ToDirectLineChannelPropertiesResponsePtrOutput() DirectLineChannelPropertiesResponsePtrOutput {
	return o.ToDirectLineChannelPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o DirectLineChannelPropertiesResponseOutput) ToDirectLineChannelPropertiesResponsePtrOutputWithContext(ctx context.Context) DirectLineChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v DirectLineChannelPropertiesResponse) *DirectLineChannelPropertiesResponse {
		return &v
	}).(DirectLineChannelPropertiesResponsePtrOutput)
}

// The list of Direct Line sites
func (o DirectLineChannelPropertiesResponseOutput) Sites() DirectLineSiteResponseArrayOutput {
	return o.ApplyT(func(v DirectLineChannelPropertiesResponse) []DirectLineSiteResponse { return v.Sites }).(DirectLineSiteResponseArrayOutput)
}

type DirectLineChannelPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (DirectLineChannelPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectLineChannelPropertiesResponse)(nil)).Elem()
}

func (o DirectLineChannelPropertiesResponsePtrOutput) ToDirectLineChannelPropertiesResponsePtrOutput() DirectLineChannelPropertiesResponsePtrOutput {
	return o
}

func (o DirectLineChannelPropertiesResponsePtrOutput) ToDirectLineChannelPropertiesResponsePtrOutputWithContext(ctx context.Context) DirectLineChannelPropertiesResponsePtrOutput {
	return o
}

func (o DirectLineChannelPropertiesResponsePtrOutput) Elem() DirectLineChannelPropertiesResponseOutput {
	return o.ApplyT(func(v *DirectLineChannelPropertiesResponse) DirectLineChannelPropertiesResponse { return *v }).(DirectLineChannelPropertiesResponseOutput)
}

// The list of Direct Line sites
func (o DirectLineChannelPropertiesResponsePtrOutput) Sites() DirectLineSiteResponseArrayOutput {
	return o.ApplyT(func(v *DirectLineChannelPropertiesResponse) []DirectLineSiteResponse {
		if v == nil {
			return nil
		}
		return v.Sites
	}).(DirectLineSiteResponseArrayOutput)
}

// Direct Line channel definition
type DirectLineChannelResponse struct {
	// The channel name
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to Direct Line channel resource
	Properties *DirectLineChannelPropertiesResponse `pulumi:"properties"`
}

// Direct Line channel definition
type DirectLineChannelResponseOutput struct{ *pulumi.OutputState }

func (DirectLineChannelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectLineChannelResponse)(nil)).Elem()
}

func (o DirectLineChannelResponseOutput) ToDirectLineChannelResponseOutput() DirectLineChannelResponseOutput {
	return o
}

func (o DirectLineChannelResponseOutput) ToDirectLineChannelResponseOutputWithContext(ctx context.Context) DirectLineChannelResponseOutput {
	return o
}

// The channel name
func (o DirectLineChannelResponseOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v DirectLineChannelResponse) string { return v.ChannelName }).(pulumi.StringOutput)
}

// The set of properties specific to Direct Line channel resource
func (o DirectLineChannelResponseOutput) Properties() DirectLineChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v DirectLineChannelResponse) *DirectLineChannelPropertiesResponse { return v.Properties }).(DirectLineChannelPropertiesResponsePtrOutput)
}

// A site for the Direct Line channel
type DirectLineSite struct {
	// Whether this site is enabled for DirectLine channel
	IsEnabled bool `pulumi:"isEnabled"`
	// Whether this site is enabled for Bot Framework V1 protocol
	IsV1Enabled bool `pulumi:"isV1Enabled"`
	// Whether this site is enabled for Bot Framework V1 protocol
	IsV3Enabled bool `pulumi:"isV3Enabled"`
	// Site name
	SiteName string `pulumi:"siteName"`
}

// DirectLineSiteInput is an input type that accepts DirectLineSiteArgs and DirectLineSiteOutput values.
// You can construct a concrete instance of `DirectLineSiteInput` via:
//
//          DirectLineSiteArgs{...}
type DirectLineSiteInput interface {
	pulumi.Input

	ToDirectLineSiteOutput() DirectLineSiteOutput
	ToDirectLineSiteOutputWithContext(context.Context) DirectLineSiteOutput
}

// A site for the Direct Line channel
type DirectLineSiteArgs struct {
	// Whether this site is enabled for DirectLine channel
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// Whether this site is enabled for Bot Framework V1 protocol
	IsV1Enabled pulumi.BoolInput `pulumi:"isV1Enabled"`
	// Whether this site is enabled for Bot Framework V1 protocol
	IsV3Enabled pulumi.BoolInput `pulumi:"isV3Enabled"`
	// Site name
	SiteName pulumi.StringInput `pulumi:"siteName"`
}

func (DirectLineSiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectLineSite)(nil)).Elem()
}

func (i DirectLineSiteArgs) ToDirectLineSiteOutput() DirectLineSiteOutput {
	return i.ToDirectLineSiteOutputWithContext(context.Background())
}

func (i DirectLineSiteArgs) ToDirectLineSiteOutputWithContext(ctx context.Context) DirectLineSiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectLineSiteOutput)
}

// DirectLineSiteArrayInput is an input type that accepts DirectLineSiteArray and DirectLineSiteArrayOutput values.
// You can construct a concrete instance of `DirectLineSiteArrayInput` via:
//
//          DirectLineSiteArray{ DirectLineSiteArgs{...} }
type DirectLineSiteArrayInput interface {
	pulumi.Input

	ToDirectLineSiteArrayOutput() DirectLineSiteArrayOutput
	ToDirectLineSiteArrayOutputWithContext(context.Context) DirectLineSiteArrayOutput
}

type DirectLineSiteArray []DirectLineSiteInput

func (DirectLineSiteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectLineSite)(nil)).Elem()
}

func (i DirectLineSiteArray) ToDirectLineSiteArrayOutput() DirectLineSiteArrayOutput {
	return i.ToDirectLineSiteArrayOutputWithContext(context.Background())
}

func (i DirectLineSiteArray) ToDirectLineSiteArrayOutputWithContext(ctx context.Context) DirectLineSiteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectLineSiteArrayOutput)
}

// A site for the Direct Line channel
type DirectLineSiteResponse struct {
	// Whether this site is enabled for DirectLine channel
	IsEnabled bool `pulumi:"isEnabled"`
	// Whether this site is enabled for Bot Framework V1 protocol
	IsV1Enabled bool `pulumi:"isV1Enabled"`
	// Whether this site is enabled for Bot Framework V1 protocol
	IsV3Enabled bool `pulumi:"isV3Enabled"`
	// Primary key. Value only returned through POST to the action Channel List API, otherwise empty.
	Key string `pulumi:"key"`
	// Secondary key. Value only returned through POST to the action Channel List API, otherwise empty.
	Key2 string `pulumi:"key2"`
	// Site Id
	SiteId string `pulumi:"siteId"`
	// Site name
	SiteName string `pulumi:"siteName"`
}

// A site for the Direct Line channel
type DirectLineSiteResponseOutput struct{ *pulumi.OutputState }

func (DirectLineSiteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectLineSiteResponse)(nil)).Elem()
}

func (o DirectLineSiteResponseOutput) ToDirectLineSiteResponseOutput() DirectLineSiteResponseOutput {
	return o
}

func (o DirectLineSiteResponseOutput) ToDirectLineSiteResponseOutputWithContext(ctx context.Context) DirectLineSiteResponseOutput {
	return o
}

// Whether this site is enabled for DirectLine channel
func (o DirectLineSiteResponseOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v DirectLineSiteResponse) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Whether this site is enabled for Bot Framework V1 protocol
func (o DirectLineSiteResponseOutput) IsV1Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v DirectLineSiteResponse) bool { return v.IsV1Enabled }).(pulumi.BoolOutput)
}

// Whether this site is enabled for Bot Framework V1 protocol
func (o DirectLineSiteResponseOutput) IsV3Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v DirectLineSiteResponse) bool { return v.IsV3Enabled }).(pulumi.BoolOutput)
}

// Primary key. Value only returned through POST to the action Channel List API, otherwise empty.
func (o DirectLineSiteResponseOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DirectLineSiteResponse) string { return v.Key }).(pulumi.StringOutput)
}

// Secondary key. Value only returned through POST to the action Channel List API, otherwise empty.
func (o DirectLineSiteResponseOutput) Key2() pulumi.StringOutput {
	return o.ApplyT(func(v DirectLineSiteResponse) string { return v.Key2 }).(pulumi.StringOutput)
}

// Site Id
func (o DirectLineSiteResponseOutput) SiteId() pulumi.StringOutput {
	return o.ApplyT(func(v DirectLineSiteResponse) string { return v.SiteId }).(pulumi.StringOutput)
}

// Site name
func (o DirectLineSiteResponseOutput) SiteName() pulumi.StringOutput {
	return o.ApplyT(func(v DirectLineSiteResponse) string { return v.SiteName }).(pulumi.StringOutput)
}

type DirectLineSiteResponseArrayOutput struct{ *pulumi.OutputState }

func (DirectLineSiteResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectLineSiteResponse)(nil)).Elem()
}

func (o DirectLineSiteResponseArrayOutput) ToDirectLineSiteResponseArrayOutput() DirectLineSiteResponseArrayOutput {
	return o
}

func (o DirectLineSiteResponseArrayOutput) ToDirectLineSiteResponseArrayOutputWithContext(ctx context.Context) DirectLineSiteResponseArrayOutput {
	return o
}

func (o DirectLineSiteResponseArrayOutput) Index(i pulumi.IntInput) DirectLineSiteResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DirectLineSiteResponse {
		return vs[0].([]DirectLineSiteResponse)[vs[1].(int)]
	}).(DirectLineSiteResponseOutput)
}

// Email channel definition
type EmailChannel struct {
	// The channel name
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to email channel resource
	Properties *EmailChannelProperties `pulumi:"properties"`
}

// EmailChannelInput is an input type that accepts EmailChannelArgs and EmailChannelOutput values.
// You can construct a concrete instance of `EmailChannelInput` via:
//
//          EmailChannelArgs{...}
type EmailChannelInput interface {
	pulumi.Input

	ToEmailChannelOutput() EmailChannelOutput
	ToEmailChannelOutputWithContext(context.Context) EmailChannelOutput
}

// Email channel definition
type EmailChannelArgs struct {
	// The channel name
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// The set of properties specific to email channel resource
	Properties EmailChannelPropertiesPtrInput `pulumi:"properties"`
}

func (EmailChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailChannel)(nil)).Elem()
}

func (i EmailChannelArgs) ToEmailChannelOutput() EmailChannelOutput {
	return i.ToEmailChannelOutputWithContext(context.Background())
}

func (i EmailChannelArgs) ToEmailChannelOutputWithContext(ctx context.Context) EmailChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailChannelOutput)
}

// The parameters to provide for the Email channel.
type EmailChannelProperties struct {
	// The email address
	EmailAddress string `pulumi:"emailAddress"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
	// The password for the email address. Value only returned through POST to the action Channel List API, otherwise empty.
	Password string `pulumi:"password"`
}

// EmailChannelPropertiesInput is an input type that accepts EmailChannelPropertiesArgs and EmailChannelPropertiesOutput values.
// You can construct a concrete instance of `EmailChannelPropertiesInput` via:
//
//          EmailChannelPropertiesArgs{...}
type EmailChannelPropertiesInput interface {
	pulumi.Input

	ToEmailChannelPropertiesOutput() EmailChannelPropertiesOutput
	ToEmailChannelPropertiesOutputWithContext(context.Context) EmailChannelPropertiesOutput
}

// The parameters to provide for the Email channel.
type EmailChannelPropertiesArgs struct {
	// The email address
	EmailAddress pulumi.StringInput `pulumi:"emailAddress"`
	// Whether this channel is enabled for the bot
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The password for the email address. Value only returned through POST to the action Channel List API, otherwise empty.
	Password pulumi.StringInput `pulumi:"password"`
}

func (EmailChannelPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailChannelProperties)(nil)).Elem()
}

func (i EmailChannelPropertiesArgs) ToEmailChannelPropertiesOutput() EmailChannelPropertiesOutput {
	return i.ToEmailChannelPropertiesOutputWithContext(context.Background())
}

func (i EmailChannelPropertiesArgs) ToEmailChannelPropertiesOutputWithContext(ctx context.Context) EmailChannelPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailChannelPropertiesOutput)
}

func (i EmailChannelPropertiesArgs) ToEmailChannelPropertiesPtrOutput() EmailChannelPropertiesPtrOutput {
	return i.ToEmailChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i EmailChannelPropertiesArgs) ToEmailChannelPropertiesPtrOutputWithContext(ctx context.Context) EmailChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailChannelPropertiesOutput).ToEmailChannelPropertiesPtrOutputWithContext(ctx)
}

// EmailChannelPropertiesPtrInput is an input type that accepts EmailChannelPropertiesArgs, EmailChannelPropertiesPtr and EmailChannelPropertiesPtrOutput values.
// You can construct a concrete instance of `EmailChannelPropertiesPtrInput` via:
//
//          EmailChannelPropertiesArgs{...}
//
//  or:
//
//          nil
type EmailChannelPropertiesPtrInput interface {
	pulumi.Input

	ToEmailChannelPropertiesPtrOutput() EmailChannelPropertiesPtrOutput
	ToEmailChannelPropertiesPtrOutputWithContext(context.Context) EmailChannelPropertiesPtrOutput
}

type emailChannelPropertiesPtrType EmailChannelPropertiesArgs

func EmailChannelPropertiesPtr(v *EmailChannelPropertiesArgs) EmailChannelPropertiesPtrInput {
	return (*emailChannelPropertiesPtrType)(v)
}

func (*emailChannelPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailChannelProperties)(nil)).Elem()
}

func (i *emailChannelPropertiesPtrType) ToEmailChannelPropertiesPtrOutput() EmailChannelPropertiesPtrOutput {
	return i.ToEmailChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i *emailChannelPropertiesPtrType) ToEmailChannelPropertiesPtrOutputWithContext(ctx context.Context) EmailChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailChannelPropertiesPtrOutput)
}

// The parameters to provide for the Email channel.
type EmailChannelPropertiesResponse struct {
	// The email address
	EmailAddress string `pulumi:"emailAddress"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
	// The password for the email address. Value only returned through POST to the action Channel List API, otherwise empty.
	Password string `pulumi:"password"`
}

// The parameters to provide for the Email channel.
type EmailChannelPropertiesResponseOutput struct{ *pulumi.OutputState }

func (EmailChannelPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailChannelPropertiesResponse)(nil)).Elem()
}

func (o EmailChannelPropertiesResponseOutput) ToEmailChannelPropertiesResponseOutput() EmailChannelPropertiesResponseOutput {
	return o
}

func (o EmailChannelPropertiesResponseOutput) ToEmailChannelPropertiesResponseOutputWithContext(ctx context.Context) EmailChannelPropertiesResponseOutput {
	return o
}

func (o EmailChannelPropertiesResponseOutput) ToEmailChannelPropertiesResponsePtrOutput() EmailChannelPropertiesResponsePtrOutput {
	return o.ToEmailChannelPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o EmailChannelPropertiesResponseOutput) ToEmailChannelPropertiesResponsePtrOutputWithContext(ctx context.Context) EmailChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v EmailChannelPropertiesResponse) *EmailChannelPropertiesResponse {
		return &v
	}).(EmailChannelPropertiesResponsePtrOutput)
}

// The email address
func (o EmailChannelPropertiesResponseOutput) EmailAddress() pulumi.StringOutput {
	return o.ApplyT(func(v EmailChannelPropertiesResponse) string { return v.EmailAddress }).(pulumi.StringOutput)
}

// Whether this channel is enabled for the bot
func (o EmailChannelPropertiesResponseOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v EmailChannelPropertiesResponse) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The password for the email address. Value only returned through POST to the action Channel List API, otherwise empty.
func (o EmailChannelPropertiesResponseOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v EmailChannelPropertiesResponse) string { return v.Password }).(pulumi.StringOutput)
}

type EmailChannelPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (EmailChannelPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailChannelPropertiesResponse)(nil)).Elem()
}

func (o EmailChannelPropertiesResponsePtrOutput) ToEmailChannelPropertiesResponsePtrOutput() EmailChannelPropertiesResponsePtrOutput {
	return o
}

func (o EmailChannelPropertiesResponsePtrOutput) ToEmailChannelPropertiesResponsePtrOutputWithContext(ctx context.Context) EmailChannelPropertiesResponsePtrOutput {
	return o
}

func (o EmailChannelPropertiesResponsePtrOutput) Elem() EmailChannelPropertiesResponseOutput {
	return o.ApplyT(func(v *EmailChannelPropertiesResponse) EmailChannelPropertiesResponse { return *v }).(EmailChannelPropertiesResponseOutput)
}

// The email address
func (o EmailChannelPropertiesResponsePtrOutput) EmailAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.EmailAddress
	}).(pulumi.StringPtrOutput)
}

// Whether this channel is enabled for the bot
func (o EmailChannelPropertiesResponsePtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EmailChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// The password for the email address. Value only returned through POST to the action Channel List API, otherwise empty.
func (o EmailChannelPropertiesResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// Email channel definition
type EmailChannelResponse struct {
	// The channel name
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to email channel resource
	Properties *EmailChannelPropertiesResponse `pulumi:"properties"`
}

// Email channel definition
type EmailChannelResponseOutput struct{ *pulumi.OutputState }

func (EmailChannelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailChannelResponse)(nil)).Elem()
}

func (o EmailChannelResponseOutput) ToEmailChannelResponseOutput() EmailChannelResponseOutput {
	return o
}

func (o EmailChannelResponseOutput) ToEmailChannelResponseOutputWithContext(ctx context.Context) EmailChannelResponseOutput {
	return o
}

// The channel name
func (o EmailChannelResponseOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v EmailChannelResponse) string { return v.ChannelName }).(pulumi.StringOutput)
}

// The set of properties specific to email channel resource
func (o EmailChannelResponseOutput) Properties() EmailChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v EmailChannelResponse) *EmailChannelPropertiesResponse { return v.Properties }).(EmailChannelPropertiesResponsePtrOutput)
}

// Facebook channel definition
type FacebookChannel struct {
	// The channel name
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to bot facebook channel
	Properties *FacebookChannelProperties `pulumi:"properties"`
}

// FacebookChannelInput is an input type that accepts FacebookChannelArgs and FacebookChannelOutput values.
// You can construct a concrete instance of `FacebookChannelInput` via:
//
//          FacebookChannelArgs{...}
type FacebookChannelInput interface {
	pulumi.Input

	ToFacebookChannelOutput() FacebookChannelOutput
	ToFacebookChannelOutputWithContext(context.Context) FacebookChannelOutput
}

// Facebook channel definition
type FacebookChannelArgs struct {
	// The channel name
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// The set of properties specific to bot facebook channel
	Properties FacebookChannelPropertiesPtrInput `pulumi:"properties"`
}

func (FacebookChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FacebookChannel)(nil)).Elem()
}

func (i FacebookChannelArgs) ToFacebookChannelOutput() FacebookChannelOutput {
	return i.ToFacebookChannelOutputWithContext(context.Background())
}

func (i FacebookChannelArgs) ToFacebookChannelOutputWithContext(ctx context.Context) FacebookChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FacebookChannelOutput)
}

// The parameters to provide for the Facebook channel.
type FacebookChannelProperties struct {
	// Facebook application id
	AppId string `pulumi:"appId"`
	// Facebook application secret. Value only returned through POST to the action Channel List API, otherwise empty.
	AppSecret string `pulumi:"appSecret"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
	// The list of Facebook pages
	Pages []FacebookPage `pulumi:"pages"`
}

// FacebookChannelPropertiesInput is an input type that accepts FacebookChannelPropertiesArgs and FacebookChannelPropertiesOutput values.
// You can construct a concrete instance of `FacebookChannelPropertiesInput` via:
//
//          FacebookChannelPropertiesArgs{...}
type FacebookChannelPropertiesInput interface {
	pulumi.Input

	ToFacebookChannelPropertiesOutput() FacebookChannelPropertiesOutput
	ToFacebookChannelPropertiesOutputWithContext(context.Context) FacebookChannelPropertiesOutput
}

// The parameters to provide for the Facebook channel.
type FacebookChannelPropertiesArgs struct {
	// Facebook application id
	AppId pulumi.StringInput `pulumi:"appId"`
	// Facebook application secret. Value only returned through POST to the action Channel List API, otherwise empty.
	AppSecret pulumi.StringInput `pulumi:"appSecret"`
	// Whether this channel is enabled for the bot
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The list of Facebook pages
	Pages FacebookPageArrayInput `pulumi:"pages"`
}

func (FacebookChannelPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FacebookChannelProperties)(nil)).Elem()
}

func (i FacebookChannelPropertiesArgs) ToFacebookChannelPropertiesOutput() FacebookChannelPropertiesOutput {
	return i.ToFacebookChannelPropertiesOutputWithContext(context.Background())
}

func (i FacebookChannelPropertiesArgs) ToFacebookChannelPropertiesOutputWithContext(ctx context.Context) FacebookChannelPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FacebookChannelPropertiesOutput)
}

func (i FacebookChannelPropertiesArgs) ToFacebookChannelPropertiesPtrOutput() FacebookChannelPropertiesPtrOutput {
	return i.ToFacebookChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i FacebookChannelPropertiesArgs) ToFacebookChannelPropertiesPtrOutputWithContext(ctx context.Context) FacebookChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FacebookChannelPropertiesOutput).ToFacebookChannelPropertiesPtrOutputWithContext(ctx)
}

// FacebookChannelPropertiesPtrInput is an input type that accepts FacebookChannelPropertiesArgs, FacebookChannelPropertiesPtr and FacebookChannelPropertiesPtrOutput values.
// You can construct a concrete instance of `FacebookChannelPropertiesPtrInput` via:
//
//          FacebookChannelPropertiesArgs{...}
//
//  or:
//
//          nil
type FacebookChannelPropertiesPtrInput interface {
	pulumi.Input

	ToFacebookChannelPropertiesPtrOutput() FacebookChannelPropertiesPtrOutput
	ToFacebookChannelPropertiesPtrOutputWithContext(context.Context) FacebookChannelPropertiesPtrOutput
}

type facebookChannelPropertiesPtrType FacebookChannelPropertiesArgs

func FacebookChannelPropertiesPtr(v *FacebookChannelPropertiesArgs) FacebookChannelPropertiesPtrInput {
	return (*facebookChannelPropertiesPtrType)(v)
}

func (*facebookChannelPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FacebookChannelProperties)(nil)).Elem()
}

func (i *facebookChannelPropertiesPtrType) ToFacebookChannelPropertiesPtrOutput() FacebookChannelPropertiesPtrOutput {
	return i.ToFacebookChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i *facebookChannelPropertiesPtrType) ToFacebookChannelPropertiesPtrOutputWithContext(ctx context.Context) FacebookChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FacebookChannelPropertiesPtrOutput)
}

// The parameters to provide for the Facebook channel.
type FacebookChannelPropertiesResponse struct {
	// Facebook application id
	AppId string `pulumi:"appId"`
	// Facebook application secret. Value only returned through POST to the action Channel List API, otherwise empty.
	AppSecret string `pulumi:"appSecret"`
	// Callback Url
	CallbackUrl string `pulumi:"callbackUrl"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
	// The list of Facebook pages
	Pages []FacebookPageResponse `pulumi:"pages"`
	// Verify token. Value only returned through POST to the action Channel List API, otherwise empty.
	VerifyToken string `pulumi:"verifyToken"`
}

// The parameters to provide for the Facebook channel.
type FacebookChannelPropertiesResponseOutput struct{ *pulumi.OutputState }

func (FacebookChannelPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FacebookChannelPropertiesResponse)(nil)).Elem()
}

func (o FacebookChannelPropertiesResponseOutput) ToFacebookChannelPropertiesResponseOutput() FacebookChannelPropertiesResponseOutput {
	return o
}

func (o FacebookChannelPropertiesResponseOutput) ToFacebookChannelPropertiesResponseOutputWithContext(ctx context.Context) FacebookChannelPropertiesResponseOutput {
	return o
}

func (o FacebookChannelPropertiesResponseOutput) ToFacebookChannelPropertiesResponsePtrOutput() FacebookChannelPropertiesResponsePtrOutput {
	return o.ToFacebookChannelPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o FacebookChannelPropertiesResponseOutput) ToFacebookChannelPropertiesResponsePtrOutputWithContext(ctx context.Context) FacebookChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v FacebookChannelPropertiesResponse) *FacebookChannelPropertiesResponse {
		return &v
	}).(FacebookChannelPropertiesResponsePtrOutput)
}

// Facebook application id
func (o FacebookChannelPropertiesResponseOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v FacebookChannelPropertiesResponse) string { return v.AppId }).(pulumi.StringOutput)
}

// Facebook application secret. Value only returned through POST to the action Channel List API, otherwise empty.
func (o FacebookChannelPropertiesResponseOutput) AppSecret() pulumi.StringOutput {
	return o.ApplyT(func(v FacebookChannelPropertiesResponse) string { return v.AppSecret }).(pulumi.StringOutput)
}

// Callback Url
func (o FacebookChannelPropertiesResponseOutput) CallbackUrl() pulumi.StringOutput {
	return o.ApplyT(func(v FacebookChannelPropertiesResponse) string { return v.CallbackUrl }).(pulumi.StringOutput)
}

// Whether this channel is enabled for the bot
func (o FacebookChannelPropertiesResponseOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v FacebookChannelPropertiesResponse) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The list of Facebook pages
func (o FacebookChannelPropertiesResponseOutput) Pages() FacebookPageResponseArrayOutput {
	return o.ApplyT(func(v FacebookChannelPropertiesResponse) []FacebookPageResponse { return v.Pages }).(FacebookPageResponseArrayOutput)
}

// Verify token. Value only returned through POST to the action Channel List API, otherwise empty.
func (o FacebookChannelPropertiesResponseOutput) VerifyToken() pulumi.StringOutput {
	return o.ApplyT(func(v FacebookChannelPropertiesResponse) string { return v.VerifyToken }).(pulumi.StringOutput)
}

type FacebookChannelPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (FacebookChannelPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FacebookChannelPropertiesResponse)(nil)).Elem()
}

func (o FacebookChannelPropertiesResponsePtrOutput) ToFacebookChannelPropertiesResponsePtrOutput() FacebookChannelPropertiesResponsePtrOutput {
	return o
}

func (o FacebookChannelPropertiesResponsePtrOutput) ToFacebookChannelPropertiesResponsePtrOutputWithContext(ctx context.Context) FacebookChannelPropertiesResponsePtrOutput {
	return o
}

func (o FacebookChannelPropertiesResponsePtrOutput) Elem() FacebookChannelPropertiesResponseOutput {
	return o.ApplyT(func(v *FacebookChannelPropertiesResponse) FacebookChannelPropertiesResponse { return *v }).(FacebookChannelPropertiesResponseOutput)
}

// Facebook application id
func (o FacebookChannelPropertiesResponsePtrOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FacebookChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AppId
	}).(pulumi.StringPtrOutput)
}

// Facebook application secret. Value only returned through POST to the action Channel List API, otherwise empty.
func (o FacebookChannelPropertiesResponsePtrOutput) AppSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FacebookChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AppSecret
	}).(pulumi.StringPtrOutput)
}

// Callback Url
func (o FacebookChannelPropertiesResponsePtrOutput) CallbackUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FacebookChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CallbackUrl
	}).(pulumi.StringPtrOutput)
}

// Whether this channel is enabled for the bot
func (o FacebookChannelPropertiesResponsePtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FacebookChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// The list of Facebook pages
func (o FacebookChannelPropertiesResponsePtrOutput) Pages() FacebookPageResponseArrayOutput {
	return o.ApplyT(func(v *FacebookChannelPropertiesResponse) []FacebookPageResponse {
		if v == nil {
			return nil
		}
		return v.Pages
	}).(FacebookPageResponseArrayOutput)
}

// Verify token. Value only returned through POST to the action Channel List API, otherwise empty.
func (o FacebookChannelPropertiesResponsePtrOutput) VerifyToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FacebookChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.VerifyToken
	}).(pulumi.StringPtrOutput)
}

// Facebook channel definition
type FacebookChannelResponse struct {
	// The channel name
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to bot facebook channel
	Properties *FacebookChannelPropertiesResponse `pulumi:"properties"`
}

// Facebook channel definition
type FacebookChannelResponseOutput struct{ *pulumi.OutputState }

func (FacebookChannelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FacebookChannelResponse)(nil)).Elem()
}

func (o FacebookChannelResponseOutput) ToFacebookChannelResponseOutput() FacebookChannelResponseOutput {
	return o
}

func (o FacebookChannelResponseOutput) ToFacebookChannelResponseOutputWithContext(ctx context.Context) FacebookChannelResponseOutput {
	return o
}

// The channel name
func (o FacebookChannelResponseOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v FacebookChannelResponse) string { return v.ChannelName }).(pulumi.StringOutput)
}

// The set of properties specific to bot facebook channel
func (o FacebookChannelResponseOutput) Properties() FacebookChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v FacebookChannelResponse) *FacebookChannelPropertiesResponse { return v.Properties }).(FacebookChannelPropertiesResponsePtrOutput)
}

// A Facebook page for Facebook channel registration
type FacebookPage struct {
	// Facebook application access token. Value only returned through POST to the action Channel List API, otherwise empty.
	AccessToken string `pulumi:"accessToken"`
	// Page id
	Id string `pulumi:"id"`
}

// FacebookPageInput is an input type that accepts FacebookPageArgs and FacebookPageOutput values.
// You can construct a concrete instance of `FacebookPageInput` via:
//
//          FacebookPageArgs{...}
type FacebookPageInput interface {
	pulumi.Input

	ToFacebookPageOutput() FacebookPageOutput
	ToFacebookPageOutputWithContext(context.Context) FacebookPageOutput
}

// A Facebook page for Facebook channel registration
type FacebookPageArgs struct {
	// Facebook application access token. Value only returned through POST to the action Channel List API, otherwise empty.
	AccessToken pulumi.StringInput `pulumi:"accessToken"`
	// Page id
	Id pulumi.StringInput `pulumi:"id"`
}

func (FacebookPageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FacebookPage)(nil)).Elem()
}

func (i FacebookPageArgs) ToFacebookPageOutput() FacebookPageOutput {
	return i.ToFacebookPageOutputWithContext(context.Background())
}

func (i FacebookPageArgs) ToFacebookPageOutputWithContext(ctx context.Context) FacebookPageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FacebookPageOutput)
}

// FacebookPageArrayInput is an input type that accepts FacebookPageArray and FacebookPageArrayOutput values.
// You can construct a concrete instance of `FacebookPageArrayInput` via:
//
//          FacebookPageArray{ FacebookPageArgs{...} }
type FacebookPageArrayInput interface {
	pulumi.Input

	ToFacebookPageArrayOutput() FacebookPageArrayOutput
	ToFacebookPageArrayOutputWithContext(context.Context) FacebookPageArrayOutput
}

type FacebookPageArray []FacebookPageInput

func (FacebookPageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FacebookPage)(nil)).Elem()
}

func (i FacebookPageArray) ToFacebookPageArrayOutput() FacebookPageArrayOutput {
	return i.ToFacebookPageArrayOutputWithContext(context.Background())
}

func (i FacebookPageArray) ToFacebookPageArrayOutputWithContext(ctx context.Context) FacebookPageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FacebookPageArrayOutput)
}

// A Facebook page for Facebook channel registration
type FacebookPageResponse struct {
	// Facebook application access token. Value only returned through POST to the action Channel List API, otherwise empty.
	AccessToken string `pulumi:"accessToken"`
	// Page id
	Id string `pulumi:"id"`
}

// A Facebook page for Facebook channel registration
type FacebookPageResponseOutput struct{ *pulumi.OutputState }

func (FacebookPageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FacebookPageResponse)(nil)).Elem()
}

func (o FacebookPageResponseOutput) ToFacebookPageResponseOutput() FacebookPageResponseOutput {
	return o
}

func (o FacebookPageResponseOutput) ToFacebookPageResponseOutputWithContext(ctx context.Context) FacebookPageResponseOutput {
	return o
}

// Facebook application access token. Value only returned through POST to the action Channel List API, otherwise empty.
func (o FacebookPageResponseOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v FacebookPageResponse) string { return v.AccessToken }).(pulumi.StringOutput)
}

// Page id
func (o FacebookPageResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v FacebookPageResponse) string { return v.Id }).(pulumi.StringOutput)
}

type FacebookPageResponseArrayOutput struct{ *pulumi.OutputState }

func (FacebookPageResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FacebookPageResponse)(nil)).Elem()
}

func (o FacebookPageResponseArrayOutput) ToFacebookPageResponseArrayOutput() FacebookPageResponseArrayOutput {
	return o
}

func (o FacebookPageResponseArrayOutput) ToFacebookPageResponseArrayOutputWithContext(ctx context.Context) FacebookPageResponseArrayOutput {
	return o
}

func (o FacebookPageResponseArrayOutput) Index(i pulumi.IntInput) FacebookPageResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FacebookPageResponse {
		return vs[0].([]FacebookPageResponse)[vs[1].(int)]
	}).(FacebookPageResponseOutput)
}

// Kik channel definition
type KikChannel struct {
	// The channel name
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to Kik channel resource
	Properties *KikChannelProperties `pulumi:"properties"`
}

// KikChannelInput is an input type that accepts KikChannelArgs and KikChannelOutput values.
// You can construct a concrete instance of `KikChannelInput` via:
//
//          KikChannelArgs{...}
type KikChannelInput interface {
	pulumi.Input

	ToKikChannelOutput() KikChannelOutput
	ToKikChannelOutputWithContext(context.Context) KikChannelOutput
}

// Kik channel definition
type KikChannelArgs struct {
	// The channel name
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// The set of properties specific to Kik channel resource
	Properties KikChannelPropertiesPtrInput `pulumi:"properties"`
}

func (KikChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KikChannel)(nil)).Elem()
}

func (i KikChannelArgs) ToKikChannelOutput() KikChannelOutput {
	return i.ToKikChannelOutputWithContext(context.Background())
}

func (i KikChannelArgs) ToKikChannelOutputWithContext(ctx context.Context) KikChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KikChannelOutput)
}

// The parameters to provide for the Kik channel.
type KikChannelProperties struct {
	// Kik API key. Value only returned through POST to the action Channel List API, otherwise empty.
	ApiKey string `pulumi:"apiKey"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
	// Whether this channel is validated for the bot
	IsValidated *bool `pulumi:"isValidated"`
	// The Kik user name
	UserName string `pulumi:"userName"`
}

// KikChannelPropertiesInput is an input type that accepts KikChannelPropertiesArgs and KikChannelPropertiesOutput values.
// You can construct a concrete instance of `KikChannelPropertiesInput` via:
//
//          KikChannelPropertiesArgs{...}
type KikChannelPropertiesInput interface {
	pulumi.Input

	ToKikChannelPropertiesOutput() KikChannelPropertiesOutput
	ToKikChannelPropertiesOutputWithContext(context.Context) KikChannelPropertiesOutput
}

// The parameters to provide for the Kik channel.
type KikChannelPropertiesArgs struct {
	// Kik API key. Value only returned through POST to the action Channel List API, otherwise empty.
	ApiKey pulumi.StringInput `pulumi:"apiKey"`
	// Whether this channel is enabled for the bot
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// Whether this channel is validated for the bot
	IsValidated pulumi.BoolPtrInput `pulumi:"isValidated"`
	// The Kik user name
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (KikChannelPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KikChannelProperties)(nil)).Elem()
}

func (i KikChannelPropertiesArgs) ToKikChannelPropertiesOutput() KikChannelPropertiesOutput {
	return i.ToKikChannelPropertiesOutputWithContext(context.Background())
}

func (i KikChannelPropertiesArgs) ToKikChannelPropertiesOutputWithContext(ctx context.Context) KikChannelPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KikChannelPropertiesOutput)
}

func (i KikChannelPropertiesArgs) ToKikChannelPropertiesPtrOutput() KikChannelPropertiesPtrOutput {
	return i.ToKikChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i KikChannelPropertiesArgs) ToKikChannelPropertiesPtrOutputWithContext(ctx context.Context) KikChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KikChannelPropertiesOutput).ToKikChannelPropertiesPtrOutputWithContext(ctx)
}

// KikChannelPropertiesPtrInput is an input type that accepts KikChannelPropertiesArgs, KikChannelPropertiesPtr and KikChannelPropertiesPtrOutput values.
// You can construct a concrete instance of `KikChannelPropertiesPtrInput` via:
//
//          KikChannelPropertiesArgs{...}
//
//  or:
//
//          nil
type KikChannelPropertiesPtrInput interface {
	pulumi.Input

	ToKikChannelPropertiesPtrOutput() KikChannelPropertiesPtrOutput
	ToKikChannelPropertiesPtrOutputWithContext(context.Context) KikChannelPropertiesPtrOutput
}

type kikChannelPropertiesPtrType KikChannelPropertiesArgs

func KikChannelPropertiesPtr(v *KikChannelPropertiesArgs) KikChannelPropertiesPtrInput {
	return (*kikChannelPropertiesPtrType)(v)
}

func (*kikChannelPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KikChannelProperties)(nil)).Elem()
}

func (i *kikChannelPropertiesPtrType) ToKikChannelPropertiesPtrOutput() KikChannelPropertiesPtrOutput {
	return i.ToKikChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i *kikChannelPropertiesPtrType) ToKikChannelPropertiesPtrOutputWithContext(ctx context.Context) KikChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KikChannelPropertiesPtrOutput)
}

// The parameters to provide for the Kik channel.
type KikChannelPropertiesResponse struct {
	// Kik API key. Value only returned through POST to the action Channel List API, otherwise empty.
	ApiKey string `pulumi:"apiKey"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
	// Whether this channel is validated for the bot
	IsValidated *bool `pulumi:"isValidated"`
	// The Kik user name
	UserName string `pulumi:"userName"`
}

// The parameters to provide for the Kik channel.
type KikChannelPropertiesResponseOutput struct{ *pulumi.OutputState }

func (KikChannelPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KikChannelPropertiesResponse)(nil)).Elem()
}

func (o KikChannelPropertiesResponseOutput) ToKikChannelPropertiesResponseOutput() KikChannelPropertiesResponseOutput {
	return o
}

func (o KikChannelPropertiesResponseOutput) ToKikChannelPropertiesResponseOutputWithContext(ctx context.Context) KikChannelPropertiesResponseOutput {
	return o
}

func (o KikChannelPropertiesResponseOutput) ToKikChannelPropertiesResponsePtrOutput() KikChannelPropertiesResponsePtrOutput {
	return o.ToKikChannelPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o KikChannelPropertiesResponseOutput) ToKikChannelPropertiesResponsePtrOutputWithContext(ctx context.Context) KikChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v KikChannelPropertiesResponse) *KikChannelPropertiesResponse {
		return &v
	}).(KikChannelPropertiesResponsePtrOutput)
}

// Kik API key. Value only returned through POST to the action Channel List API, otherwise empty.
func (o KikChannelPropertiesResponseOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v KikChannelPropertiesResponse) string { return v.ApiKey }).(pulumi.StringOutput)
}

// Whether this channel is enabled for the bot
func (o KikChannelPropertiesResponseOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v KikChannelPropertiesResponse) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Whether this channel is validated for the bot
func (o KikChannelPropertiesResponseOutput) IsValidated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KikChannelPropertiesResponse) *bool { return v.IsValidated }).(pulumi.BoolPtrOutput)
}

// The Kik user name
func (o KikChannelPropertiesResponseOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v KikChannelPropertiesResponse) string { return v.UserName }).(pulumi.StringOutput)
}

type KikChannelPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (KikChannelPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KikChannelPropertiesResponse)(nil)).Elem()
}

func (o KikChannelPropertiesResponsePtrOutput) ToKikChannelPropertiesResponsePtrOutput() KikChannelPropertiesResponsePtrOutput {
	return o
}

func (o KikChannelPropertiesResponsePtrOutput) ToKikChannelPropertiesResponsePtrOutputWithContext(ctx context.Context) KikChannelPropertiesResponsePtrOutput {
	return o
}

func (o KikChannelPropertiesResponsePtrOutput) Elem() KikChannelPropertiesResponseOutput {
	return o.ApplyT(func(v *KikChannelPropertiesResponse) KikChannelPropertiesResponse { return *v }).(KikChannelPropertiesResponseOutput)
}

// Kik API key. Value only returned through POST to the action Channel List API, otherwise empty.
func (o KikChannelPropertiesResponsePtrOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KikChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ApiKey
	}).(pulumi.StringPtrOutput)
}

// Whether this channel is enabled for the bot
func (o KikChannelPropertiesResponsePtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KikChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Whether this channel is validated for the bot
func (o KikChannelPropertiesResponsePtrOutput) IsValidated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KikChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsValidated
	}).(pulumi.BoolPtrOutput)
}

// The Kik user name
func (o KikChannelPropertiesResponsePtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KikChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UserName
	}).(pulumi.StringPtrOutput)
}

// Kik channel definition
type KikChannelResponse struct {
	// The channel name
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to Kik channel resource
	Properties *KikChannelPropertiesResponse `pulumi:"properties"`
}

// Kik channel definition
type KikChannelResponseOutput struct{ *pulumi.OutputState }

func (KikChannelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KikChannelResponse)(nil)).Elem()
}

func (o KikChannelResponseOutput) ToKikChannelResponseOutput() KikChannelResponseOutput {
	return o
}

func (o KikChannelResponseOutput) ToKikChannelResponseOutputWithContext(ctx context.Context) KikChannelResponseOutput {
	return o
}

// The channel name
func (o KikChannelResponseOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v KikChannelResponse) string { return v.ChannelName }).(pulumi.StringOutput)
}

// The set of properties specific to Kik channel resource
func (o KikChannelResponseOutput) Properties() KikChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v KikChannelResponse) *KikChannelPropertiesResponse { return v.Properties }).(KikChannelPropertiesResponsePtrOutput)
}

// Microsoft Teams channel definition
type MsTeamsChannel struct {
	// The channel name
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to Microsoft Teams channel resource
	Properties *MsTeamsChannelProperties `pulumi:"properties"`
}

// MsTeamsChannelInput is an input type that accepts MsTeamsChannelArgs and MsTeamsChannelOutput values.
// You can construct a concrete instance of `MsTeamsChannelInput` via:
//
//          MsTeamsChannelArgs{...}
type MsTeamsChannelInput interface {
	pulumi.Input

	ToMsTeamsChannelOutput() MsTeamsChannelOutput
	ToMsTeamsChannelOutputWithContext(context.Context) MsTeamsChannelOutput
}

// Microsoft Teams channel definition
type MsTeamsChannelArgs struct {
	// The channel name
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// The set of properties specific to Microsoft Teams channel resource
	Properties MsTeamsChannelPropertiesPtrInput `pulumi:"properties"`
}

func (MsTeamsChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MsTeamsChannel)(nil)).Elem()
}

func (i MsTeamsChannelArgs) ToMsTeamsChannelOutput() MsTeamsChannelOutput {
	return i.ToMsTeamsChannelOutputWithContext(context.Background())
}

func (i MsTeamsChannelArgs) ToMsTeamsChannelOutputWithContext(ctx context.Context) MsTeamsChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MsTeamsChannelOutput)
}

// The parameters to provide for the Microsoft Teams channel.
type MsTeamsChannelProperties struct {
	// Enable messaging for Microsoft Teams channel
	CallMode *string `pulumi:"callMode"`
	// Enable calling for Microsoft Teams channel
	EnableCalling *bool `pulumi:"enableCalling"`
	// Enable media cards for Microsoft Teams channel
	EnableMediaCards *bool `pulumi:"enableMediaCards"`
	// Enable messaging for Microsoft Teams channel
	EnableMessaging *bool `pulumi:"enableMessaging"`
	// Enable video for Microsoft Teams channel
	EnableVideo *bool `pulumi:"enableVideo"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
}

// MsTeamsChannelPropertiesInput is an input type that accepts MsTeamsChannelPropertiesArgs and MsTeamsChannelPropertiesOutput values.
// You can construct a concrete instance of `MsTeamsChannelPropertiesInput` via:
//
//          MsTeamsChannelPropertiesArgs{...}
type MsTeamsChannelPropertiesInput interface {
	pulumi.Input

	ToMsTeamsChannelPropertiesOutput() MsTeamsChannelPropertiesOutput
	ToMsTeamsChannelPropertiesOutputWithContext(context.Context) MsTeamsChannelPropertiesOutput
}

// The parameters to provide for the Microsoft Teams channel.
type MsTeamsChannelPropertiesArgs struct {
	// Enable messaging for Microsoft Teams channel
	CallMode pulumi.StringPtrInput `pulumi:"callMode"`
	// Enable calling for Microsoft Teams channel
	EnableCalling pulumi.BoolPtrInput `pulumi:"enableCalling"`
	// Enable media cards for Microsoft Teams channel
	EnableMediaCards pulumi.BoolPtrInput `pulumi:"enableMediaCards"`
	// Enable messaging for Microsoft Teams channel
	EnableMessaging pulumi.BoolPtrInput `pulumi:"enableMessaging"`
	// Enable video for Microsoft Teams channel
	EnableVideo pulumi.BoolPtrInput `pulumi:"enableVideo"`
	// Whether this channel is enabled for the bot
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
}

func (MsTeamsChannelPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MsTeamsChannelProperties)(nil)).Elem()
}

func (i MsTeamsChannelPropertiesArgs) ToMsTeamsChannelPropertiesOutput() MsTeamsChannelPropertiesOutput {
	return i.ToMsTeamsChannelPropertiesOutputWithContext(context.Background())
}

func (i MsTeamsChannelPropertiesArgs) ToMsTeamsChannelPropertiesOutputWithContext(ctx context.Context) MsTeamsChannelPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MsTeamsChannelPropertiesOutput)
}

func (i MsTeamsChannelPropertiesArgs) ToMsTeamsChannelPropertiesPtrOutput() MsTeamsChannelPropertiesPtrOutput {
	return i.ToMsTeamsChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i MsTeamsChannelPropertiesArgs) ToMsTeamsChannelPropertiesPtrOutputWithContext(ctx context.Context) MsTeamsChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MsTeamsChannelPropertiesOutput).ToMsTeamsChannelPropertiesPtrOutputWithContext(ctx)
}

// MsTeamsChannelPropertiesPtrInput is an input type that accepts MsTeamsChannelPropertiesArgs, MsTeamsChannelPropertiesPtr and MsTeamsChannelPropertiesPtrOutput values.
// You can construct a concrete instance of `MsTeamsChannelPropertiesPtrInput` via:
//
//          MsTeamsChannelPropertiesArgs{...}
//
//  or:
//
//          nil
type MsTeamsChannelPropertiesPtrInput interface {
	pulumi.Input

	ToMsTeamsChannelPropertiesPtrOutput() MsTeamsChannelPropertiesPtrOutput
	ToMsTeamsChannelPropertiesPtrOutputWithContext(context.Context) MsTeamsChannelPropertiesPtrOutput
}

type msTeamsChannelPropertiesPtrType MsTeamsChannelPropertiesArgs

func MsTeamsChannelPropertiesPtr(v *MsTeamsChannelPropertiesArgs) MsTeamsChannelPropertiesPtrInput {
	return (*msTeamsChannelPropertiesPtrType)(v)
}

func (*msTeamsChannelPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MsTeamsChannelProperties)(nil)).Elem()
}

func (i *msTeamsChannelPropertiesPtrType) ToMsTeamsChannelPropertiesPtrOutput() MsTeamsChannelPropertiesPtrOutput {
	return i.ToMsTeamsChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i *msTeamsChannelPropertiesPtrType) ToMsTeamsChannelPropertiesPtrOutputWithContext(ctx context.Context) MsTeamsChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MsTeamsChannelPropertiesPtrOutput)
}

// The parameters to provide for the Microsoft Teams channel.
type MsTeamsChannelPropertiesResponse struct {
	// Enable messaging for Microsoft Teams channel
	CallMode *string `pulumi:"callMode"`
	// Enable calling for Microsoft Teams channel
	EnableCalling *bool `pulumi:"enableCalling"`
	// Enable media cards for Microsoft Teams channel
	EnableMediaCards *bool `pulumi:"enableMediaCards"`
	// Enable messaging for Microsoft Teams channel
	EnableMessaging *bool `pulumi:"enableMessaging"`
	// Enable video for Microsoft Teams channel
	EnableVideo *bool `pulumi:"enableVideo"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
}

// The parameters to provide for the Microsoft Teams channel.
type MsTeamsChannelPropertiesResponseOutput struct{ *pulumi.OutputState }

func (MsTeamsChannelPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MsTeamsChannelPropertiesResponse)(nil)).Elem()
}

func (o MsTeamsChannelPropertiesResponseOutput) ToMsTeamsChannelPropertiesResponseOutput() MsTeamsChannelPropertiesResponseOutput {
	return o
}

func (o MsTeamsChannelPropertiesResponseOutput) ToMsTeamsChannelPropertiesResponseOutputWithContext(ctx context.Context) MsTeamsChannelPropertiesResponseOutput {
	return o
}

func (o MsTeamsChannelPropertiesResponseOutput) ToMsTeamsChannelPropertiesResponsePtrOutput() MsTeamsChannelPropertiesResponsePtrOutput {
	return o.ToMsTeamsChannelPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o MsTeamsChannelPropertiesResponseOutput) ToMsTeamsChannelPropertiesResponsePtrOutputWithContext(ctx context.Context) MsTeamsChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v MsTeamsChannelPropertiesResponse) *MsTeamsChannelPropertiesResponse {
		return &v
	}).(MsTeamsChannelPropertiesResponsePtrOutput)
}

// Enable messaging for Microsoft Teams channel
func (o MsTeamsChannelPropertiesResponseOutput) CallMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MsTeamsChannelPropertiesResponse) *string { return v.CallMode }).(pulumi.StringPtrOutput)
}

// Enable calling for Microsoft Teams channel
func (o MsTeamsChannelPropertiesResponseOutput) EnableCalling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MsTeamsChannelPropertiesResponse) *bool { return v.EnableCalling }).(pulumi.BoolPtrOutput)
}

// Enable media cards for Microsoft Teams channel
func (o MsTeamsChannelPropertiesResponseOutput) EnableMediaCards() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MsTeamsChannelPropertiesResponse) *bool { return v.EnableMediaCards }).(pulumi.BoolPtrOutput)
}

// Enable messaging for Microsoft Teams channel
func (o MsTeamsChannelPropertiesResponseOutput) EnableMessaging() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MsTeamsChannelPropertiesResponse) *bool { return v.EnableMessaging }).(pulumi.BoolPtrOutput)
}

// Enable video for Microsoft Teams channel
func (o MsTeamsChannelPropertiesResponseOutput) EnableVideo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MsTeamsChannelPropertiesResponse) *bool { return v.EnableVideo }).(pulumi.BoolPtrOutput)
}

// Whether this channel is enabled for the bot
func (o MsTeamsChannelPropertiesResponseOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v MsTeamsChannelPropertiesResponse) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

type MsTeamsChannelPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (MsTeamsChannelPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MsTeamsChannelPropertiesResponse)(nil)).Elem()
}

func (o MsTeamsChannelPropertiesResponsePtrOutput) ToMsTeamsChannelPropertiesResponsePtrOutput() MsTeamsChannelPropertiesResponsePtrOutput {
	return o
}

func (o MsTeamsChannelPropertiesResponsePtrOutput) ToMsTeamsChannelPropertiesResponsePtrOutputWithContext(ctx context.Context) MsTeamsChannelPropertiesResponsePtrOutput {
	return o
}

func (o MsTeamsChannelPropertiesResponsePtrOutput) Elem() MsTeamsChannelPropertiesResponseOutput {
	return o.ApplyT(func(v *MsTeamsChannelPropertiesResponse) MsTeamsChannelPropertiesResponse { return *v }).(MsTeamsChannelPropertiesResponseOutput)
}

// Enable messaging for Microsoft Teams channel
func (o MsTeamsChannelPropertiesResponsePtrOutput) CallMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MsTeamsChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.CallMode
	}).(pulumi.StringPtrOutput)
}

// Enable calling for Microsoft Teams channel
func (o MsTeamsChannelPropertiesResponsePtrOutput) EnableCalling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MsTeamsChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableCalling
	}).(pulumi.BoolPtrOutput)
}

// Enable media cards for Microsoft Teams channel
func (o MsTeamsChannelPropertiesResponsePtrOutput) EnableMediaCards() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MsTeamsChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableMediaCards
	}).(pulumi.BoolPtrOutput)
}

// Enable messaging for Microsoft Teams channel
func (o MsTeamsChannelPropertiesResponsePtrOutput) EnableMessaging() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MsTeamsChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableMessaging
	}).(pulumi.BoolPtrOutput)
}

// Enable video for Microsoft Teams channel
func (o MsTeamsChannelPropertiesResponsePtrOutput) EnableVideo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MsTeamsChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableVideo
	}).(pulumi.BoolPtrOutput)
}

// Whether this channel is enabled for the bot
func (o MsTeamsChannelPropertiesResponsePtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MsTeamsChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Microsoft Teams channel definition
type MsTeamsChannelResponse struct {
	// The channel name
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to Microsoft Teams channel resource
	Properties *MsTeamsChannelPropertiesResponse `pulumi:"properties"`
}

// Microsoft Teams channel definition
type MsTeamsChannelResponseOutput struct{ *pulumi.OutputState }

func (MsTeamsChannelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MsTeamsChannelResponse)(nil)).Elem()
}

func (o MsTeamsChannelResponseOutput) ToMsTeamsChannelResponseOutput() MsTeamsChannelResponseOutput {
	return o
}

func (o MsTeamsChannelResponseOutput) ToMsTeamsChannelResponseOutputWithContext(ctx context.Context) MsTeamsChannelResponseOutput {
	return o
}

// The channel name
func (o MsTeamsChannelResponseOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v MsTeamsChannelResponse) string { return v.ChannelName }).(pulumi.StringOutput)
}

// The set of properties specific to Microsoft Teams channel resource
func (o MsTeamsChannelResponseOutput) Properties() MsTeamsChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v MsTeamsChannelResponse) *MsTeamsChannelPropertiesResponse { return v.Properties }).(MsTeamsChannelPropertiesResponsePtrOutput)
}

// Extra Parameters specific to each Service Provider
type ServiceProviderParameterResponse struct {
	// Default Name for the Service Provider
	Default string `pulumi:"default"`
	// Description of the Service Provider
	Description string `pulumi:"description"`
	// Display Name of the Service Provider
	DisplayName string `pulumi:"displayName"`
	// Help Url for the  Service Provider
	HelpUrl string `pulumi:"helpUrl"`
	// Name of the Service Provider
	Name string `pulumi:"name"`
	// Type of the Service Provider
	Type string `pulumi:"type"`
}

// The Object used to describe a Service Provider supported by Bot Service
type ServiceProviderPropertiesResponse struct {
	// Display Name of the Service Provider
	DevPortalUrl string `pulumi:"devPortalUrl"`
	// Display Name of the Service Provider
	DisplayName string `pulumi:"displayName"`
	// Display Name of the Service Provider
	IconUrl string `pulumi:"iconUrl"`
	// Id for Service Provider
	Id string `pulumi:"id"`
	// The list of parameters for the Service Provider
	Parameters []ServiceProviderParameterResponse `pulumi:"parameters"`
	// Display Name of the Service Provider
	ServiceProviderName string `pulumi:"serviceProviderName"`
}

// Service Provider Definition
type ServiceProviderResponse struct {
	// The Properties of a Service Provider Object
	Properties *ServiceProviderPropertiesResponse `pulumi:"properties"`
}

// The SKU of the cognitive services account.
type Sku struct {
	// The sku name
	Name string `pulumi:"name"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//          SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// The SKU of the cognitive services account.
type SkuArgs struct {
	// The sku name
	Name pulumi.StringInput `pulumi:"name"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//          SkuArgs{...}
//
//  or:
//
//          nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// The SKU of the cognitive services account.
type SkuResponse struct {
	// The sku name
	Name string `pulumi:"name"`
	// Gets the sku tier. This is based on the SKU name.
	Tier string `pulumi:"tier"`
}

// The SKU of the cognitive services account.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (o SkuResponseOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o.ApplyT(func(v SkuResponse) *SkuResponse {
		return &v
	}).(SkuResponsePtrOutput)
}

// The sku name
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Gets the sku tier. This is based on the SKU name.
func (o SkuResponseOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Tier }).(pulumi.StringOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse { return *v }).(SkuResponseOutput)
}

// The sku name
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Gets the sku tier. This is based on the SKU name.
func (o SkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Tier
	}).(pulumi.StringPtrOutput)
}

// Skype channel definition
type SkypeChannel struct {
	// The channel name
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to Skype channel resource
	Properties *SkypeChannelProperties `pulumi:"properties"`
}

// SkypeChannelInput is an input type that accepts SkypeChannelArgs and SkypeChannelOutput values.
// You can construct a concrete instance of `SkypeChannelInput` via:
//
//          SkypeChannelArgs{...}
type SkypeChannelInput interface {
	pulumi.Input

	ToSkypeChannelOutput() SkypeChannelOutput
	ToSkypeChannelOutputWithContext(context.Context) SkypeChannelOutput
}

// Skype channel definition
type SkypeChannelArgs struct {
	// The channel name
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// The set of properties specific to Skype channel resource
	Properties SkypeChannelPropertiesPtrInput `pulumi:"properties"`
}

func (SkypeChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkypeChannel)(nil)).Elem()
}

func (i SkypeChannelArgs) ToSkypeChannelOutput() SkypeChannelOutput {
	return i.ToSkypeChannelOutputWithContext(context.Background())
}

func (i SkypeChannelArgs) ToSkypeChannelOutputWithContext(ctx context.Context) SkypeChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkypeChannelOutput)
}

// The parameters to provide for the Microsoft Teams channel.
type SkypeChannelProperties struct {
	// Calling web hook for Skype channel
	CallingWebHook *string `pulumi:"callingWebHook"`
	// Enable calling for Skype channel
	EnableCalling *bool `pulumi:"enableCalling"`
	// Enable groups for Skype channel
	EnableGroups *bool `pulumi:"enableGroups"`
	// Enable media cards for Skype channel
	EnableMediaCards *bool `pulumi:"enableMediaCards"`
	// Enable messaging for Skype channel
	EnableMessaging *bool `pulumi:"enableMessaging"`
	// Enable screen sharing for Skype channel
	EnableScreenSharing *bool `pulumi:"enableScreenSharing"`
	// Enable video for Skype channel
	EnableVideo *bool `pulumi:"enableVideo"`
	// Group mode for Skype channel
	GroupsMode *string `pulumi:"groupsMode"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
}

// SkypeChannelPropertiesInput is an input type that accepts SkypeChannelPropertiesArgs and SkypeChannelPropertiesOutput values.
// You can construct a concrete instance of `SkypeChannelPropertiesInput` via:
//
//          SkypeChannelPropertiesArgs{...}
type SkypeChannelPropertiesInput interface {
	pulumi.Input

	ToSkypeChannelPropertiesOutput() SkypeChannelPropertiesOutput
	ToSkypeChannelPropertiesOutputWithContext(context.Context) SkypeChannelPropertiesOutput
}

// The parameters to provide for the Microsoft Teams channel.
type SkypeChannelPropertiesArgs struct {
	// Calling web hook for Skype channel
	CallingWebHook pulumi.StringPtrInput `pulumi:"callingWebHook"`
	// Enable calling for Skype channel
	EnableCalling pulumi.BoolPtrInput `pulumi:"enableCalling"`
	// Enable groups for Skype channel
	EnableGroups pulumi.BoolPtrInput `pulumi:"enableGroups"`
	// Enable media cards for Skype channel
	EnableMediaCards pulumi.BoolPtrInput `pulumi:"enableMediaCards"`
	// Enable messaging for Skype channel
	EnableMessaging pulumi.BoolPtrInput `pulumi:"enableMessaging"`
	// Enable screen sharing for Skype channel
	EnableScreenSharing pulumi.BoolPtrInput `pulumi:"enableScreenSharing"`
	// Enable video for Skype channel
	EnableVideo pulumi.BoolPtrInput `pulumi:"enableVideo"`
	// Group mode for Skype channel
	GroupsMode pulumi.StringPtrInput `pulumi:"groupsMode"`
	// Whether this channel is enabled for the bot
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
}

func (SkypeChannelPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkypeChannelProperties)(nil)).Elem()
}

func (i SkypeChannelPropertiesArgs) ToSkypeChannelPropertiesOutput() SkypeChannelPropertiesOutput {
	return i.ToSkypeChannelPropertiesOutputWithContext(context.Background())
}

func (i SkypeChannelPropertiesArgs) ToSkypeChannelPropertiesOutputWithContext(ctx context.Context) SkypeChannelPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkypeChannelPropertiesOutput)
}

func (i SkypeChannelPropertiesArgs) ToSkypeChannelPropertiesPtrOutput() SkypeChannelPropertiesPtrOutput {
	return i.ToSkypeChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i SkypeChannelPropertiesArgs) ToSkypeChannelPropertiesPtrOutputWithContext(ctx context.Context) SkypeChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkypeChannelPropertiesOutput).ToSkypeChannelPropertiesPtrOutputWithContext(ctx)
}

// SkypeChannelPropertiesPtrInput is an input type that accepts SkypeChannelPropertiesArgs, SkypeChannelPropertiesPtr and SkypeChannelPropertiesPtrOutput values.
// You can construct a concrete instance of `SkypeChannelPropertiesPtrInput` via:
//
//          SkypeChannelPropertiesArgs{...}
//
//  or:
//
//          nil
type SkypeChannelPropertiesPtrInput interface {
	pulumi.Input

	ToSkypeChannelPropertiesPtrOutput() SkypeChannelPropertiesPtrOutput
	ToSkypeChannelPropertiesPtrOutputWithContext(context.Context) SkypeChannelPropertiesPtrOutput
}

type skypeChannelPropertiesPtrType SkypeChannelPropertiesArgs

func SkypeChannelPropertiesPtr(v *SkypeChannelPropertiesArgs) SkypeChannelPropertiesPtrInput {
	return (*skypeChannelPropertiesPtrType)(v)
}

func (*skypeChannelPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkypeChannelProperties)(nil)).Elem()
}

func (i *skypeChannelPropertiesPtrType) ToSkypeChannelPropertiesPtrOutput() SkypeChannelPropertiesPtrOutput {
	return i.ToSkypeChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i *skypeChannelPropertiesPtrType) ToSkypeChannelPropertiesPtrOutputWithContext(ctx context.Context) SkypeChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkypeChannelPropertiesPtrOutput)
}

// The parameters to provide for the Microsoft Teams channel.
type SkypeChannelPropertiesResponse struct {
	// Calling web hook for Skype channel
	CallingWebHook *string `pulumi:"callingWebHook"`
	// Enable calling for Skype channel
	EnableCalling *bool `pulumi:"enableCalling"`
	// Enable groups for Skype channel
	EnableGroups *bool `pulumi:"enableGroups"`
	// Enable media cards for Skype channel
	EnableMediaCards *bool `pulumi:"enableMediaCards"`
	// Enable messaging for Skype channel
	EnableMessaging *bool `pulumi:"enableMessaging"`
	// Enable screen sharing for Skype channel
	EnableScreenSharing *bool `pulumi:"enableScreenSharing"`
	// Enable video for Skype channel
	EnableVideo *bool `pulumi:"enableVideo"`
	// Group mode for Skype channel
	GroupsMode *string `pulumi:"groupsMode"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
}

// The parameters to provide for the Microsoft Teams channel.
type SkypeChannelPropertiesResponseOutput struct{ *pulumi.OutputState }

func (SkypeChannelPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkypeChannelPropertiesResponse)(nil)).Elem()
}

func (o SkypeChannelPropertiesResponseOutput) ToSkypeChannelPropertiesResponseOutput() SkypeChannelPropertiesResponseOutput {
	return o
}

func (o SkypeChannelPropertiesResponseOutput) ToSkypeChannelPropertiesResponseOutputWithContext(ctx context.Context) SkypeChannelPropertiesResponseOutput {
	return o
}

func (o SkypeChannelPropertiesResponseOutput) ToSkypeChannelPropertiesResponsePtrOutput() SkypeChannelPropertiesResponsePtrOutput {
	return o.ToSkypeChannelPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o SkypeChannelPropertiesResponseOutput) ToSkypeChannelPropertiesResponsePtrOutputWithContext(ctx context.Context) SkypeChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v SkypeChannelPropertiesResponse) *SkypeChannelPropertiesResponse {
		return &v
	}).(SkypeChannelPropertiesResponsePtrOutput)
}

// Calling web hook for Skype channel
func (o SkypeChannelPropertiesResponseOutput) CallingWebHook() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkypeChannelPropertiesResponse) *string { return v.CallingWebHook }).(pulumi.StringPtrOutput)
}

// Enable calling for Skype channel
func (o SkypeChannelPropertiesResponseOutput) EnableCalling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SkypeChannelPropertiesResponse) *bool { return v.EnableCalling }).(pulumi.BoolPtrOutput)
}

// Enable groups for Skype channel
func (o SkypeChannelPropertiesResponseOutput) EnableGroups() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SkypeChannelPropertiesResponse) *bool { return v.EnableGroups }).(pulumi.BoolPtrOutput)
}

// Enable media cards for Skype channel
func (o SkypeChannelPropertiesResponseOutput) EnableMediaCards() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SkypeChannelPropertiesResponse) *bool { return v.EnableMediaCards }).(pulumi.BoolPtrOutput)
}

// Enable messaging for Skype channel
func (o SkypeChannelPropertiesResponseOutput) EnableMessaging() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SkypeChannelPropertiesResponse) *bool { return v.EnableMessaging }).(pulumi.BoolPtrOutput)
}

// Enable screen sharing for Skype channel
func (o SkypeChannelPropertiesResponseOutput) EnableScreenSharing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SkypeChannelPropertiesResponse) *bool { return v.EnableScreenSharing }).(pulumi.BoolPtrOutput)
}

// Enable video for Skype channel
func (o SkypeChannelPropertiesResponseOutput) EnableVideo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SkypeChannelPropertiesResponse) *bool { return v.EnableVideo }).(pulumi.BoolPtrOutput)
}

// Group mode for Skype channel
func (o SkypeChannelPropertiesResponseOutput) GroupsMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkypeChannelPropertiesResponse) *string { return v.GroupsMode }).(pulumi.StringPtrOutput)
}

// Whether this channel is enabled for the bot
func (o SkypeChannelPropertiesResponseOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v SkypeChannelPropertiesResponse) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

type SkypeChannelPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (SkypeChannelPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkypeChannelPropertiesResponse)(nil)).Elem()
}

func (o SkypeChannelPropertiesResponsePtrOutput) ToSkypeChannelPropertiesResponsePtrOutput() SkypeChannelPropertiesResponsePtrOutput {
	return o
}

func (o SkypeChannelPropertiesResponsePtrOutput) ToSkypeChannelPropertiesResponsePtrOutputWithContext(ctx context.Context) SkypeChannelPropertiesResponsePtrOutput {
	return o
}

func (o SkypeChannelPropertiesResponsePtrOutput) Elem() SkypeChannelPropertiesResponseOutput {
	return o.ApplyT(func(v *SkypeChannelPropertiesResponse) SkypeChannelPropertiesResponse { return *v }).(SkypeChannelPropertiesResponseOutput)
}

// Calling web hook for Skype channel
func (o SkypeChannelPropertiesResponsePtrOutput) CallingWebHook() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkypeChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.CallingWebHook
	}).(pulumi.StringPtrOutput)
}

// Enable calling for Skype channel
func (o SkypeChannelPropertiesResponsePtrOutput) EnableCalling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SkypeChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableCalling
	}).(pulumi.BoolPtrOutput)
}

// Enable groups for Skype channel
func (o SkypeChannelPropertiesResponsePtrOutput) EnableGroups() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SkypeChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableGroups
	}).(pulumi.BoolPtrOutput)
}

// Enable media cards for Skype channel
func (o SkypeChannelPropertiesResponsePtrOutput) EnableMediaCards() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SkypeChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableMediaCards
	}).(pulumi.BoolPtrOutput)
}

// Enable messaging for Skype channel
func (o SkypeChannelPropertiesResponsePtrOutput) EnableMessaging() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SkypeChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableMessaging
	}).(pulumi.BoolPtrOutput)
}

// Enable screen sharing for Skype channel
func (o SkypeChannelPropertiesResponsePtrOutput) EnableScreenSharing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SkypeChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableScreenSharing
	}).(pulumi.BoolPtrOutput)
}

// Enable video for Skype channel
func (o SkypeChannelPropertiesResponsePtrOutput) EnableVideo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SkypeChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableVideo
	}).(pulumi.BoolPtrOutput)
}

// Group mode for Skype channel
func (o SkypeChannelPropertiesResponsePtrOutput) GroupsMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkypeChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.GroupsMode
	}).(pulumi.StringPtrOutput)
}

// Whether this channel is enabled for the bot
func (o SkypeChannelPropertiesResponsePtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SkypeChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Skype channel definition
type SkypeChannelResponse struct {
	// The channel name
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to Skype channel resource
	Properties *SkypeChannelPropertiesResponse `pulumi:"properties"`
}

// Skype channel definition
type SkypeChannelResponseOutput struct{ *pulumi.OutputState }

func (SkypeChannelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkypeChannelResponse)(nil)).Elem()
}

func (o SkypeChannelResponseOutput) ToSkypeChannelResponseOutput() SkypeChannelResponseOutput {
	return o
}

func (o SkypeChannelResponseOutput) ToSkypeChannelResponseOutputWithContext(ctx context.Context) SkypeChannelResponseOutput {
	return o
}

// The channel name
func (o SkypeChannelResponseOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v SkypeChannelResponse) string { return v.ChannelName }).(pulumi.StringOutput)
}

// The set of properties specific to Skype channel resource
func (o SkypeChannelResponseOutput) Properties() SkypeChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v SkypeChannelResponse) *SkypeChannelPropertiesResponse { return v.Properties }).(SkypeChannelPropertiesResponsePtrOutput)
}

// Slack channel definition
type SlackChannel struct {
	// The channel name
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to Slack channel resource
	Properties *SlackChannelProperties `pulumi:"properties"`
}

// SlackChannelInput is an input type that accepts SlackChannelArgs and SlackChannelOutput values.
// You can construct a concrete instance of `SlackChannelInput` via:
//
//          SlackChannelArgs{...}
type SlackChannelInput interface {
	pulumi.Input

	ToSlackChannelOutput() SlackChannelOutput
	ToSlackChannelOutputWithContext(context.Context) SlackChannelOutput
}

// Slack channel definition
type SlackChannelArgs struct {
	// The channel name
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// The set of properties specific to Slack channel resource
	Properties SlackChannelPropertiesPtrInput `pulumi:"properties"`
}

func (SlackChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SlackChannel)(nil)).Elem()
}

func (i SlackChannelArgs) ToSlackChannelOutput() SlackChannelOutput {
	return i.ToSlackChannelOutputWithContext(context.Background())
}

func (i SlackChannelArgs) ToSlackChannelOutputWithContext(ctx context.Context) SlackChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlackChannelOutput)
}

// The parameters to provide for the Slack channel.
type SlackChannelProperties struct {
	// The Slack client id
	ClientId string `pulumi:"clientId"`
	// The Slack client secret. Value only returned through POST to the action Channel List API, otherwise empty.
	ClientSecret string `pulumi:"clientSecret"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
	// The Slack landing page Url
	LandingPageUrl *string `pulumi:"landingPageUrl"`
	// The Slack verification token. Value only returned through POST to the action Channel List API, otherwise empty.
	VerificationToken string `pulumi:"verificationToken"`
}

// SlackChannelPropertiesInput is an input type that accepts SlackChannelPropertiesArgs and SlackChannelPropertiesOutput values.
// You can construct a concrete instance of `SlackChannelPropertiesInput` via:
//
//          SlackChannelPropertiesArgs{...}
type SlackChannelPropertiesInput interface {
	pulumi.Input

	ToSlackChannelPropertiesOutput() SlackChannelPropertiesOutput
	ToSlackChannelPropertiesOutputWithContext(context.Context) SlackChannelPropertiesOutput
}

// The parameters to provide for the Slack channel.
type SlackChannelPropertiesArgs struct {
	// The Slack client id
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The Slack client secret. Value only returned through POST to the action Channel List API, otherwise empty.
	ClientSecret pulumi.StringInput `pulumi:"clientSecret"`
	// Whether this channel is enabled for the bot
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The Slack landing page Url
	LandingPageUrl pulumi.StringPtrInput `pulumi:"landingPageUrl"`
	// The Slack verification token. Value only returned through POST to the action Channel List API, otherwise empty.
	VerificationToken pulumi.StringInput `pulumi:"verificationToken"`
}

func (SlackChannelPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SlackChannelProperties)(nil)).Elem()
}

func (i SlackChannelPropertiesArgs) ToSlackChannelPropertiesOutput() SlackChannelPropertiesOutput {
	return i.ToSlackChannelPropertiesOutputWithContext(context.Background())
}

func (i SlackChannelPropertiesArgs) ToSlackChannelPropertiesOutputWithContext(ctx context.Context) SlackChannelPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlackChannelPropertiesOutput)
}

func (i SlackChannelPropertiesArgs) ToSlackChannelPropertiesPtrOutput() SlackChannelPropertiesPtrOutput {
	return i.ToSlackChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i SlackChannelPropertiesArgs) ToSlackChannelPropertiesPtrOutputWithContext(ctx context.Context) SlackChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlackChannelPropertiesOutput).ToSlackChannelPropertiesPtrOutputWithContext(ctx)
}

// SlackChannelPropertiesPtrInput is an input type that accepts SlackChannelPropertiesArgs, SlackChannelPropertiesPtr and SlackChannelPropertiesPtrOutput values.
// You can construct a concrete instance of `SlackChannelPropertiesPtrInput` via:
//
//          SlackChannelPropertiesArgs{...}
//
//  or:
//
//          nil
type SlackChannelPropertiesPtrInput interface {
	pulumi.Input

	ToSlackChannelPropertiesPtrOutput() SlackChannelPropertiesPtrOutput
	ToSlackChannelPropertiesPtrOutputWithContext(context.Context) SlackChannelPropertiesPtrOutput
}

type slackChannelPropertiesPtrType SlackChannelPropertiesArgs

func SlackChannelPropertiesPtr(v *SlackChannelPropertiesArgs) SlackChannelPropertiesPtrInput {
	return (*slackChannelPropertiesPtrType)(v)
}

func (*slackChannelPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SlackChannelProperties)(nil)).Elem()
}

func (i *slackChannelPropertiesPtrType) ToSlackChannelPropertiesPtrOutput() SlackChannelPropertiesPtrOutput {
	return i.ToSlackChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i *slackChannelPropertiesPtrType) ToSlackChannelPropertiesPtrOutputWithContext(ctx context.Context) SlackChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlackChannelPropertiesPtrOutput)
}

// The parameters to provide for the Slack channel.
type SlackChannelPropertiesResponse struct {
	// The Slack client id
	ClientId string `pulumi:"clientId"`
	// The Slack client secret. Value only returned through POST to the action Channel List API, otherwise empty.
	ClientSecret string `pulumi:"clientSecret"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
	// Whether this channel is validated for the bot
	IsValidated bool `pulumi:"isValidated"`
	// The Slack landing page Url
	LandingPageUrl *string `pulumi:"landingPageUrl"`
	// The Sms auth token
	LastSubmissionId string `pulumi:"lastSubmissionId"`
	// The Slack redirect action
	RedirectAction string `pulumi:"redirectAction"`
	// Whether to register the settings before OAuth validation is performed. Recommended to True.
	RegisterBeforeOAuthFlow bool `pulumi:"registerBeforeOAuthFlow"`
	// The Slack verification token. Value only returned through POST to the action Channel List API, otherwise empty.
	VerificationToken string `pulumi:"verificationToken"`
}

// The parameters to provide for the Slack channel.
type SlackChannelPropertiesResponseOutput struct{ *pulumi.OutputState }

func (SlackChannelPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlackChannelPropertiesResponse)(nil)).Elem()
}

func (o SlackChannelPropertiesResponseOutput) ToSlackChannelPropertiesResponseOutput() SlackChannelPropertiesResponseOutput {
	return o
}

func (o SlackChannelPropertiesResponseOutput) ToSlackChannelPropertiesResponseOutputWithContext(ctx context.Context) SlackChannelPropertiesResponseOutput {
	return o
}

func (o SlackChannelPropertiesResponseOutput) ToSlackChannelPropertiesResponsePtrOutput() SlackChannelPropertiesResponsePtrOutput {
	return o.ToSlackChannelPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o SlackChannelPropertiesResponseOutput) ToSlackChannelPropertiesResponsePtrOutputWithContext(ctx context.Context) SlackChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v SlackChannelPropertiesResponse) *SlackChannelPropertiesResponse {
		return &v
	}).(SlackChannelPropertiesResponsePtrOutput)
}

// The Slack client id
func (o SlackChannelPropertiesResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v SlackChannelPropertiesResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// The Slack client secret. Value only returned through POST to the action Channel List API, otherwise empty.
func (o SlackChannelPropertiesResponseOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v SlackChannelPropertiesResponse) string { return v.ClientSecret }).(pulumi.StringOutput)
}

// Whether this channel is enabled for the bot
func (o SlackChannelPropertiesResponseOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v SlackChannelPropertiesResponse) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Whether this channel is validated for the bot
func (o SlackChannelPropertiesResponseOutput) IsValidated() pulumi.BoolOutput {
	return o.ApplyT(func(v SlackChannelPropertiesResponse) bool { return v.IsValidated }).(pulumi.BoolOutput)
}

// The Slack landing page Url
func (o SlackChannelPropertiesResponseOutput) LandingPageUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlackChannelPropertiesResponse) *string { return v.LandingPageUrl }).(pulumi.StringPtrOutput)
}

// The Sms auth token
func (o SlackChannelPropertiesResponseOutput) LastSubmissionId() pulumi.StringOutput {
	return o.ApplyT(func(v SlackChannelPropertiesResponse) string { return v.LastSubmissionId }).(pulumi.StringOutput)
}

// The Slack redirect action
func (o SlackChannelPropertiesResponseOutput) RedirectAction() pulumi.StringOutput {
	return o.ApplyT(func(v SlackChannelPropertiesResponse) string { return v.RedirectAction }).(pulumi.StringOutput)
}

// Whether to register the settings before OAuth validation is performed. Recommended to True.
func (o SlackChannelPropertiesResponseOutput) RegisterBeforeOAuthFlow() pulumi.BoolOutput {
	return o.ApplyT(func(v SlackChannelPropertiesResponse) bool { return v.RegisterBeforeOAuthFlow }).(pulumi.BoolOutput)
}

// The Slack verification token. Value only returned through POST to the action Channel List API, otherwise empty.
func (o SlackChannelPropertiesResponseOutput) VerificationToken() pulumi.StringOutput {
	return o.ApplyT(func(v SlackChannelPropertiesResponse) string { return v.VerificationToken }).(pulumi.StringOutput)
}

type SlackChannelPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (SlackChannelPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SlackChannelPropertiesResponse)(nil)).Elem()
}

func (o SlackChannelPropertiesResponsePtrOutput) ToSlackChannelPropertiesResponsePtrOutput() SlackChannelPropertiesResponsePtrOutput {
	return o
}

func (o SlackChannelPropertiesResponsePtrOutput) ToSlackChannelPropertiesResponsePtrOutputWithContext(ctx context.Context) SlackChannelPropertiesResponsePtrOutput {
	return o
}

func (o SlackChannelPropertiesResponsePtrOutput) Elem() SlackChannelPropertiesResponseOutput {
	return o.ApplyT(func(v *SlackChannelPropertiesResponse) SlackChannelPropertiesResponse { return *v }).(SlackChannelPropertiesResponseOutput)
}

// The Slack client id
func (o SlackChannelPropertiesResponsePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The Slack client secret. Value only returned through POST to the action Channel List API, otherwise empty.
func (o SlackChannelPropertiesResponsePtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// Whether this channel is enabled for the bot
func (o SlackChannelPropertiesResponsePtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SlackChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Whether this channel is validated for the bot
func (o SlackChannelPropertiesResponsePtrOutput) IsValidated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SlackChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsValidated
	}).(pulumi.BoolPtrOutput)
}

// The Slack landing page Url
func (o SlackChannelPropertiesResponsePtrOutput) LandingPageUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.LandingPageUrl
	}).(pulumi.StringPtrOutput)
}

// The Sms auth token
func (o SlackChannelPropertiesResponsePtrOutput) LastSubmissionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastSubmissionId
	}).(pulumi.StringPtrOutput)
}

// The Slack redirect action
func (o SlackChannelPropertiesResponsePtrOutput) RedirectAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RedirectAction
	}).(pulumi.StringPtrOutput)
}

// Whether to register the settings before OAuth validation is performed. Recommended to True.
func (o SlackChannelPropertiesResponsePtrOutput) RegisterBeforeOAuthFlow() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SlackChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.RegisterBeforeOAuthFlow
	}).(pulumi.BoolPtrOutput)
}

// The Slack verification token. Value only returned through POST to the action Channel List API, otherwise empty.
func (o SlackChannelPropertiesResponsePtrOutput) VerificationToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.VerificationToken
	}).(pulumi.StringPtrOutput)
}

// Slack channel definition
type SlackChannelResponse struct {
	// The channel name
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to Slack channel resource
	Properties *SlackChannelPropertiesResponse `pulumi:"properties"`
}

// Slack channel definition
type SlackChannelResponseOutput struct{ *pulumi.OutputState }

func (SlackChannelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlackChannelResponse)(nil)).Elem()
}

func (o SlackChannelResponseOutput) ToSlackChannelResponseOutput() SlackChannelResponseOutput {
	return o
}

func (o SlackChannelResponseOutput) ToSlackChannelResponseOutputWithContext(ctx context.Context) SlackChannelResponseOutput {
	return o
}

// The channel name
func (o SlackChannelResponseOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v SlackChannelResponse) string { return v.ChannelName }).(pulumi.StringOutput)
}

// The set of properties specific to Slack channel resource
func (o SlackChannelResponseOutput) Properties() SlackChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v SlackChannelResponse) *SlackChannelPropertiesResponse { return v.Properties }).(SlackChannelPropertiesResponsePtrOutput)
}

// Sms channel definition
type SmsChannel struct {
	// The channel name
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to Sms channel resource
	Properties *SmsChannelProperties `pulumi:"properties"`
}

// SmsChannelInput is an input type that accepts SmsChannelArgs and SmsChannelOutput values.
// You can construct a concrete instance of `SmsChannelInput` via:
//
//          SmsChannelArgs{...}
type SmsChannelInput interface {
	pulumi.Input

	ToSmsChannelOutput() SmsChannelOutput
	ToSmsChannelOutputWithContext(context.Context) SmsChannelOutput
}

// Sms channel definition
type SmsChannelArgs struct {
	// The channel name
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// The set of properties specific to Sms channel resource
	Properties SmsChannelPropertiesPtrInput `pulumi:"properties"`
}

func (SmsChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SmsChannel)(nil)).Elem()
}

func (i SmsChannelArgs) ToSmsChannelOutput() SmsChannelOutput {
	return i.ToSmsChannelOutputWithContext(context.Background())
}

func (i SmsChannelArgs) ToSmsChannelOutputWithContext(ctx context.Context) SmsChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmsChannelOutput)
}

// The parameters to provide for the Sms channel.
type SmsChannelProperties struct {
	// The Sms account SID. Value only returned through POST to the action Channel List API, otherwise empty.
	AccountSID string `pulumi:"accountSID"`
	// The Sms auth token. Value only returned through POST to the action Channel List API, otherwise empty.
	AuthToken string `pulumi:"authToken"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
	// Whether this channel is validated for the bot
	IsValidated *bool `pulumi:"isValidated"`
	// The Sms phone
	Phone string `pulumi:"phone"`
}

// SmsChannelPropertiesInput is an input type that accepts SmsChannelPropertiesArgs and SmsChannelPropertiesOutput values.
// You can construct a concrete instance of `SmsChannelPropertiesInput` via:
//
//          SmsChannelPropertiesArgs{...}
type SmsChannelPropertiesInput interface {
	pulumi.Input

	ToSmsChannelPropertiesOutput() SmsChannelPropertiesOutput
	ToSmsChannelPropertiesOutputWithContext(context.Context) SmsChannelPropertiesOutput
}

// The parameters to provide for the Sms channel.
type SmsChannelPropertiesArgs struct {
	// The Sms account SID. Value only returned through POST to the action Channel List API, otherwise empty.
	AccountSID pulumi.StringInput `pulumi:"accountSID"`
	// The Sms auth token. Value only returned through POST to the action Channel List API, otherwise empty.
	AuthToken pulumi.StringInput `pulumi:"authToken"`
	// Whether this channel is enabled for the bot
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// Whether this channel is validated for the bot
	IsValidated pulumi.BoolPtrInput `pulumi:"isValidated"`
	// The Sms phone
	Phone pulumi.StringInput `pulumi:"phone"`
}

func (SmsChannelPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SmsChannelProperties)(nil)).Elem()
}

func (i SmsChannelPropertiesArgs) ToSmsChannelPropertiesOutput() SmsChannelPropertiesOutput {
	return i.ToSmsChannelPropertiesOutputWithContext(context.Background())
}

func (i SmsChannelPropertiesArgs) ToSmsChannelPropertiesOutputWithContext(ctx context.Context) SmsChannelPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmsChannelPropertiesOutput)
}

func (i SmsChannelPropertiesArgs) ToSmsChannelPropertiesPtrOutput() SmsChannelPropertiesPtrOutput {
	return i.ToSmsChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i SmsChannelPropertiesArgs) ToSmsChannelPropertiesPtrOutputWithContext(ctx context.Context) SmsChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmsChannelPropertiesOutput).ToSmsChannelPropertiesPtrOutputWithContext(ctx)
}

// SmsChannelPropertiesPtrInput is an input type that accepts SmsChannelPropertiesArgs, SmsChannelPropertiesPtr and SmsChannelPropertiesPtrOutput values.
// You can construct a concrete instance of `SmsChannelPropertiesPtrInput` via:
//
//          SmsChannelPropertiesArgs{...}
//
//  or:
//
//          nil
type SmsChannelPropertiesPtrInput interface {
	pulumi.Input

	ToSmsChannelPropertiesPtrOutput() SmsChannelPropertiesPtrOutput
	ToSmsChannelPropertiesPtrOutputWithContext(context.Context) SmsChannelPropertiesPtrOutput
}

type smsChannelPropertiesPtrType SmsChannelPropertiesArgs

func SmsChannelPropertiesPtr(v *SmsChannelPropertiesArgs) SmsChannelPropertiesPtrInput {
	return (*smsChannelPropertiesPtrType)(v)
}

func (*smsChannelPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SmsChannelProperties)(nil)).Elem()
}

func (i *smsChannelPropertiesPtrType) ToSmsChannelPropertiesPtrOutput() SmsChannelPropertiesPtrOutput {
	return i.ToSmsChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i *smsChannelPropertiesPtrType) ToSmsChannelPropertiesPtrOutputWithContext(ctx context.Context) SmsChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmsChannelPropertiesPtrOutput)
}

// The parameters to provide for the Sms channel.
type SmsChannelPropertiesResponse struct {
	// The Sms account SID. Value only returned through POST to the action Channel List API, otherwise empty.
	AccountSID string `pulumi:"accountSID"`
	// The Sms auth token. Value only returned through POST to the action Channel List API, otherwise empty.
	AuthToken string `pulumi:"authToken"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
	// Whether this channel is validated for the bot
	IsValidated *bool `pulumi:"isValidated"`
	// The Sms phone
	Phone string `pulumi:"phone"`
}

// The parameters to provide for the Sms channel.
type SmsChannelPropertiesResponseOutput struct{ *pulumi.OutputState }

func (SmsChannelPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SmsChannelPropertiesResponse)(nil)).Elem()
}

func (o SmsChannelPropertiesResponseOutput) ToSmsChannelPropertiesResponseOutput() SmsChannelPropertiesResponseOutput {
	return o
}

func (o SmsChannelPropertiesResponseOutput) ToSmsChannelPropertiesResponseOutputWithContext(ctx context.Context) SmsChannelPropertiesResponseOutput {
	return o
}

func (o SmsChannelPropertiesResponseOutput) ToSmsChannelPropertiesResponsePtrOutput() SmsChannelPropertiesResponsePtrOutput {
	return o.ToSmsChannelPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o SmsChannelPropertiesResponseOutput) ToSmsChannelPropertiesResponsePtrOutputWithContext(ctx context.Context) SmsChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v SmsChannelPropertiesResponse) *SmsChannelPropertiesResponse {
		return &v
	}).(SmsChannelPropertiesResponsePtrOutput)
}

// The Sms account SID. Value only returned through POST to the action Channel List API, otherwise empty.
func (o SmsChannelPropertiesResponseOutput) AccountSID() pulumi.StringOutput {
	return o.ApplyT(func(v SmsChannelPropertiesResponse) string { return v.AccountSID }).(pulumi.StringOutput)
}

// The Sms auth token. Value only returned through POST to the action Channel List API, otherwise empty.
func (o SmsChannelPropertiesResponseOutput) AuthToken() pulumi.StringOutput {
	return o.ApplyT(func(v SmsChannelPropertiesResponse) string { return v.AuthToken }).(pulumi.StringOutput)
}

// Whether this channel is enabled for the bot
func (o SmsChannelPropertiesResponseOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v SmsChannelPropertiesResponse) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Whether this channel is validated for the bot
func (o SmsChannelPropertiesResponseOutput) IsValidated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SmsChannelPropertiesResponse) *bool { return v.IsValidated }).(pulumi.BoolPtrOutput)
}

// The Sms phone
func (o SmsChannelPropertiesResponseOutput) Phone() pulumi.StringOutput {
	return o.ApplyT(func(v SmsChannelPropertiesResponse) string { return v.Phone }).(pulumi.StringOutput)
}

type SmsChannelPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (SmsChannelPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SmsChannelPropertiesResponse)(nil)).Elem()
}

func (o SmsChannelPropertiesResponsePtrOutput) ToSmsChannelPropertiesResponsePtrOutput() SmsChannelPropertiesResponsePtrOutput {
	return o
}

func (o SmsChannelPropertiesResponsePtrOutput) ToSmsChannelPropertiesResponsePtrOutputWithContext(ctx context.Context) SmsChannelPropertiesResponsePtrOutput {
	return o
}

func (o SmsChannelPropertiesResponsePtrOutput) Elem() SmsChannelPropertiesResponseOutput {
	return o.ApplyT(func(v *SmsChannelPropertiesResponse) SmsChannelPropertiesResponse { return *v }).(SmsChannelPropertiesResponseOutput)
}

// The Sms account SID. Value only returned through POST to the action Channel List API, otherwise empty.
func (o SmsChannelPropertiesResponsePtrOutput) AccountSID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SmsChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AccountSID
	}).(pulumi.StringPtrOutput)
}

// The Sms auth token. Value only returned through POST to the action Channel List API, otherwise empty.
func (o SmsChannelPropertiesResponsePtrOutput) AuthToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SmsChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AuthToken
	}).(pulumi.StringPtrOutput)
}

// Whether this channel is enabled for the bot
func (o SmsChannelPropertiesResponsePtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SmsChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Whether this channel is validated for the bot
func (o SmsChannelPropertiesResponsePtrOutput) IsValidated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SmsChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsValidated
	}).(pulumi.BoolPtrOutput)
}

// The Sms phone
func (o SmsChannelPropertiesResponsePtrOutput) Phone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SmsChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Phone
	}).(pulumi.StringPtrOutput)
}

// Sms channel definition
type SmsChannelResponse struct {
	// The channel name
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to Sms channel resource
	Properties *SmsChannelPropertiesResponse `pulumi:"properties"`
}

// Sms channel definition
type SmsChannelResponseOutput struct{ *pulumi.OutputState }

func (SmsChannelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SmsChannelResponse)(nil)).Elem()
}

func (o SmsChannelResponseOutput) ToSmsChannelResponseOutput() SmsChannelResponseOutput {
	return o
}

func (o SmsChannelResponseOutput) ToSmsChannelResponseOutputWithContext(ctx context.Context) SmsChannelResponseOutput {
	return o
}

// The channel name
func (o SmsChannelResponseOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v SmsChannelResponse) string { return v.ChannelName }).(pulumi.StringOutput)
}

// The set of properties specific to Sms channel resource
func (o SmsChannelResponseOutput) Properties() SmsChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v SmsChannelResponse) *SmsChannelPropertiesResponse { return v.Properties }).(SmsChannelPropertiesResponsePtrOutput)
}

// Telegram channel definition
type TelegramChannel struct {
	// The channel name
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to Telegram channel resource
	Properties *TelegramChannelProperties `pulumi:"properties"`
}

// TelegramChannelInput is an input type that accepts TelegramChannelArgs and TelegramChannelOutput values.
// You can construct a concrete instance of `TelegramChannelInput` via:
//
//          TelegramChannelArgs{...}
type TelegramChannelInput interface {
	pulumi.Input

	ToTelegramChannelOutput() TelegramChannelOutput
	ToTelegramChannelOutputWithContext(context.Context) TelegramChannelOutput
}

// Telegram channel definition
type TelegramChannelArgs struct {
	// The channel name
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// The set of properties specific to Telegram channel resource
	Properties TelegramChannelPropertiesPtrInput `pulumi:"properties"`
}

func (TelegramChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TelegramChannel)(nil)).Elem()
}

func (i TelegramChannelArgs) ToTelegramChannelOutput() TelegramChannelOutput {
	return i.ToTelegramChannelOutputWithContext(context.Background())
}

func (i TelegramChannelArgs) ToTelegramChannelOutputWithContext(ctx context.Context) TelegramChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TelegramChannelOutput)
}

// The parameters to provide for the Telegram channel.
type TelegramChannelProperties struct {
	// The Telegram access token. Value only returned through POST to the action Channel List API, otherwise empty.
	AccessToken string `pulumi:"accessToken"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
	// Whether this channel is validated for the bot
	IsValidated *bool `pulumi:"isValidated"`
}

// TelegramChannelPropertiesInput is an input type that accepts TelegramChannelPropertiesArgs and TelegramChannelPropertiesOutput values.
// You can construct a concrete instance of `TelegramChannelPropertiesInput` via:
//
//          TelegramChannelPropertiesArgs{...}
type TelegramChannelPropertiesInput interface {
	pulumi.Input

	ToTelegramChannelPropertiesOutput() TelegramChannelPropertiesOutput
	ToTelegramChannelPropertiesOutputWithContext(context.Context) TelegramChannelPropertiesOutput
}

// The parameters to provide for the Telegram channel.
type TelegramChannelPropertiesArgs struct {
	// The Telegram access token. Value only returned through POST to the action Channel List API, otherwise empty.
	AccessToken pulumi.StringInput `pulumi:"accessToken"`
	// Whether this channel is enabled for the bot
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// Whether this channel is validated for the bot
	IsValidated pulumi.BoolPtrInput `pulumi:"isValidated"`
}

func (TelegramChannelPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TelegramChannelProperties)(nil)).Elem()
}

func (i TelegramChannelPropertiesArgs) ToTelegramChannelPropertiesOutput() TelegramChannelPropertiesOutput {
	return i.ToTelegramChannelPropertiesOutputWithContext(context.Background())
}

func (i TelegramChannelPropertiesArgs) ToTelegramChannelPropertiesOutputWithContext(ctx context.Context) TelegramChannelPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TelegramChannelPropertiesOutput)
}

func (i TelegramChannelPropertiesArgs) ToTelegramChannelPropertiesPtrOutput() TelegramChannelPropertiesPtrOutput {
	return i.ToTelegramChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i TelegramChannelPropertiesArgs) ToTelegramChannelPropertiesPtrOutputWithContext(ctx context.Context) TelegramChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TelegramChannelPropertiesOutput).ToTelegramChannelPropertiesPtrOutputWithContext(ctx)
}

// TelegramChannelPropertiesPtrInput is an input type that accepts TelegramChannelPropertiesArgs, TelegramChannelPropertiesPtr and TelegramChannelPropertiesPtrOutput values.
// You can construct a concrete instance of `TelegramChannelPropertiesPtrInput` via:
//
//          TelegramChannelPropertiesArgs{...}
//
//  or:
//
//          nil
type TelegramChannelPropertiesPtrInput interface {
	pulumi.Input

	ToTelegramChannelPropertiesPtrOutput() TelegramChannelPropertiesPtrOutput
	ToTelegramChannelPropertiesPtrOutputWithContext(context.Context) TelegramChannelPropertiesPtrOutput
}

type telegramChannelPropertiesPtrType TelegramChannelPropertiesArgs

func TelegramChannelPropertiesPtr(v *TelegramChannelPropertiesArgs) TelegramChannelPropertiesPtrInput {
	return (*telegramChannelPropertiesPtrType)(v)
}

func (*telegramChannelPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TelegramChannelProperties)(nil)).Elem()
}

func (i *telegramChannelPropertiesPtrType) ToTelegramChannelPropertiesPtrOutput() TelegramChannelPropertiesPtrOutput {
	return i.ToTelegramChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i *telegramChannelPropertiesPtrType) ToTelegramChannelPropertiesPtrOutputWithContext(ctx context.Context) TelegramChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TelegramChannelPropertiesPtrOutput)
}

// The parameters to provide for the Telegram channel.
type TelegramChannelPropertiesResponse struct {
	// The Telegram access token. Value only returned through POST to the action Channel List API, otherwise empty.
	AccessToken string `pulumi:"accessToken"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
	// Whether this channel is validated for the bot
	IsValidated *bool `pulumi:"isValidated"`
}

// The parameters to provide for the Telegram channel.
type TelegramChannelPropertiesResponseOutput struct{ *pulumi.OutputState }

func (TelegramChannelPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TelegramChannelPropertiesResponse)(nil)).Elem()
}

func (o TelegramChannelPropertiesResponseOutput) ToTelegramChannelPropertiesResponseOutput() TelegramChannelPropertiesResponseOutput {
	return o
}

func (o TelegramChannelPropertiesResponseOutput) ToTelegramChannelPropertiesResponseOutputWithContext(ctx context.Context) TelegramChannelPropertiesResponseOutput {
	return o
}

func (o TelegramChannelPropertiesResponseOutput) ToTelegramChannelPropertiesResponsePtrOutput() TelegramChannelPropertiesResponsePtrOutput {
	return o.ToTelegramChannelPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o TelegramChannelPropertiesResponseOutput) ToTelegramChannelPropertiesResponsePtrOutputWithContext(ctx context.Context) TelegramChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v TelegramChannelPropertiesResponse) *TelegramChannelPropertiesResponse {
		return &v
	}).(TelegramChannelPropertiesResponsePtrOutput)
}

// The Telegram access token. Value only returned through POST to the action Channel List API, otherwise empty.
func (o TelegramChannelPropertiesResponseOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v TelegramChannelPropertiesResponse) string { return v.AccessToken }).(pulumi.StringOutput)
}

// Whether this channel is enabled for the bot
func (o TelegramChannelPropertiesResponseOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v TelegramChannelPropertiesResponse) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Whether this channel is validated for the bot
func (o TelegramChannelPropertiesResponseOutput) IsValidated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TelegramChannelPropertiesResponse) *bool { return v.IsValidated }).(pulumi.BoolPtrOutput)
}

type TelegramChannelPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (TelegramChannelPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TelegramChannelPropertiesResponse)(nil)).Elem()
}

func (o TelegramChannelPropertiesResponsePtrOutput) ToTelegramChannelPropertiesResponsePtrOutput() TelegramChannelPropertiesResponsePtrOutput {
	return o
}

func (o TelegramChannelPropertiesResponsePtrOutput) ToTelegramChannelPropertiesResponsePtrOutputWithContext(ctx context.Context) TelegramChannelPropertiesResponsePtrOutput {
	return o
}

func (o TelegramChannelPropertiesResponsePtrOutput) Elem() TelegramChannelPropertiesResponseOutput {
	return o.ApplyT(func(v *TelegramChannelPropertiesResponse) TelegramChannelPropertiesResponse { return *v }).(TelegramChannelPropertiesResponseOutput)
}

// The Telegram access token. Value only returned through POST to the action Channel List API, otherwise empty.
func (o TelegramChannelPropertiesResponsePtrOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TelegramChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AccessToken
	}).(pulumi.StringPtrOutput)
}

// Whether this channel is enabled for the bot
func (o TelegramChannelPropertiesResponsePtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TelegramChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Whether this channel is validated for the bot
func (o TelegramChannelPropertiesResponsePtrOutput) IsValidated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TelegramChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsValidated
	}).(pulumi.BoolPtrOutput)
}

// Telegram channel definition
type TelegramChannelResponse struct {
	// The channel name
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to Telegram channel resource
	Properties *TelegramChannelPropertiesResponse `pulumi:"properties"`
}

// Telegram channel definition
type TelegramChannelResponseOutput struct{ *pulumi.OutputState }

func (TelegramChannelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TelegramChannelResponse)(nil)).Elem()
}

func (o TelegramChannelResponseOutput) ToTelegramChannelResponseOutput() TelegramChannelResponseOutput {
	return o
}

func (o TelegramChannelResponseOutput) ToTelegramChannelResponseOutputWithContext(ctx context.Context) TelegramChannelResponseOutput {
	return o
}

// The channel name
func (o TelegramChannelResponseOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v TelegramChannelResponse) string { return v.ChannelName }).(pulumi.StringOutput)
}

// The set of properties specific to Telegram channel resource
func (o TelegramChannelResponseOutput) Properties() TelegramChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v TelegramChannelResponse) *TelegramChannelPropertiesResponse { return v.Properties }).(TelegramChannelPropertiesResponsePtrOutput)
}

// Web Chat channel definition
type WebChatChannel struct {
	// The channel name
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to Web Chat channel resource
	Properties *WebChatChannelProperties `pulumi:"properties"`
}

// WebChatChannelInput is an input type that accepts WebChatChannelArgs and WebChatChannelOutput values.
// You can construct a concrete instance of `WebChatChannelInput` via:
//
//          WebChatChannelArgs{...}
type WebChatChannelInput interface {
	pulumi.Input

	ToWebChatChannelOutput() WebChatChannelOutput
	ToWebChatChannelOutputWithContext(context.Context) WebChatChannelOutput
}

// Web Chat channel definition
type WebChatChannelArgs struct {
	// The channel name
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// The set of properties specific to Web Chat channel resource
	Properties WebChatChannelPropertiesPtrInput `pulumi:"properties"`
}

func (WebChatChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebChatChannel)(nil)).Elem()
}

func (i WebChatChannelArgs) ToWebChatChannelOutput() WebChatChannelOutput {
	return i.ToWebChatChannelOutputWithContext(context.Background())
}

func (i WebChatChannelArgs) ToWebChatChannelOutputWithContext(ctx context.Context) WebChatChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebChatChannelOutput)
}

// The parameters to provide for the Web Chat channel.
type WebChatChannelProperties struct {
	// The list of Web Chat sites
	Sites []WebChatSite `pulumi:"sites"`
}

// WebChatChannelPropertiesInput is an input type that accepts WebChatChannelPropertiesArgs and WebChatChannelPropertiesOutput values.
// You can construct a concrete instance of `WebChatChannelPropertiesInput` via:
//
//          WebChatChannelPropertiesArgs{...}
type WebChatChannelPropertiesInput interface {
	pulumi.Input

	ToWebChatChannelPropertiesOutput() WebChatChannelPropertiesOutput
	ToWebChatChannelPropertiesOutputWithContext(context.Context) WebChatChannelPropertiesOutput
}

// The parameters to provide for the Web Chat channel.
type WebChatChannelPropertiesArgs struct {
	// The list of Web Chat sites
	Sites WebChatSiteArrayInput `pulumi:"sites"`
}

func (WebChatChannelPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebChatChannelProperties)(nil)).Elem()
}

func (i WebChatChannelPropertiesArgs) ToWebChatChannelPropertiesOutput() WebChatChannelPropertiesOutput {
	return i.ToWebChatChannelPropertiesOutputWithContext(context.Background())
}

func (i WebChatChannelPropertiesArgs) ToWebChatChannelPropertiesOutputWithContext(ctx context.Context) WebChatChannelPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebChatChannelPropertiesOutput)
}

func (i WebChatChannelPropertiesArgs) ToWebChatChannelPropertiesPtrOutput() WebChatChannelPropertiesPtrOutput {
	return i.ToWebChatChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i WebChatChannelPropertiesArgs) ToWebChatChannelPropertiesPtrOutputWithContext(ctx context.Context) WebChatChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebChatChannelPropertiesOutput).ToWebChatChannelPropertiesPtrOutputWithContext(ctx)
}

// WebChatChannelPropertiesPtrInput is an input type that accepts WebChatChannelPropertiesArgs, WebChatChannelPropertiesPtr and WebChatChannelPropertiesPtrOutput values.
// You can construct a concrete instance of `WebChatChannelPropertiesPtrInput` via:
//
//          WebChatChannelPropertiesArgs{...}
//
//  or:
//
//          nil
type WebChatChannelPropertiesPtrInput interface {
	pulumi.Input

	ToWebChatChannelPropertiesPtrOutput() WebChatChannelPropertiesPtrOutput
	ToWebChatChannelPropertiesPtrOutputWithContext(context.Context) WebChatChannelPropertiesPtrOutput
}

type webChatChannelPropertiesPtrType WebChatChannelPropertiesArgs

func WebChatChannelPropertiesPtr(v *WebChatChannelPropertiesArgs) WebChatChannelPropertiesPtrInput {
	return (*webChatChannelPropertiesPtrType)(v)
}

func (*webChatChannelPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebChatChannelProperties)(nil)).Elem()
}

func (i *webChatChannelPropertiesPtrType) ToWebChatChannelPropertiesPtrOutput() WebChatChannelPropertiesPtrOutput {
	return i.ToWebChatChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i *webChatChannelPropertiesPtrType) ToWebChatChannelPropertiesPtrOutputWithContext(ctx context.Context) WebChatChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebChatChannelPropertiesPtrOutput)
}

// The parameters to provide for the Web Chat channel.
type WebChatChannelPropertiesResponse struct {
	// The list of Web Chat sites
	Sites []WebChatSiteResponse `pulumi:"sites"`
	// Web chat control embed code
	WebChatEmbedCode string `pulumi:"webChatEmbedCode"`
}

// The parameters to provide for the Web Chat channel.
type WebChatChannelPropertiesResponseOutput struct{ *pulumi.OutputState }

func (WebChatChannelPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebChatChannelPropertiesResponse)(nil)).Elem()
}

func (o WebChatChannelPropertiesResponseOutput) ToWebChatChannelPropertiesResponseOutput() WebChatChannelPropertiesResponseOutput {
	return o
}

func (o WebChatChannelPropertiesResponseOutput) ToWebChatChannelPropertiesResponseOutputWithContext(ctx context.Context) WebChatChannelPropertiesResponseOutput {
	return o
}

func (o WebChatChannelPropertiesResponseOutput) ToWebChatChannelPropertiesResponsePtrOutput() WebChatChannelPropertiesResponsePtrOutput {
	return o.ToWebChatChannelPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o WebChatChannelPropertiesResponseOutput) ToWebChatChannelPropertiesResponsePtrOutputWithContext(ctx context.Context) WebChatChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v WebChatChannelPropertiesResponse) *WebChatChannelPropertiesResponse {
		return &v
	}).(WebChatChannelPropertiesResponsePtrOutput)
}

// The list of Web Chat sites
func (o WebChatChannelPropertiesResponseOutput) Sites() WebChatSiteResponseArrayOutput {
	return o.ApplyT(func(v WebChatChannelPropertiesResponse) []WebChatSiteResponse { return v.Sites }).(WebChatSiteResponseArrayOutput)
}

// Web chat control embed code
func (o WebChatChannelPropertiesResponseOutput) WebChatEmbedCode() pulumi.StringOutput {
	return o.ApplyT(func(v WebChatChannelPropertiesResponse) string { return v.WebChatEmbedCode }).(pulumi.StringOutput)
}

type WebChatChannelPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (WebChatChannelPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebChatChannelPropertiesResponse)(nil)).Elem()
}

func (o WebChatChannelPropertiesResponsePtrOutput) ToWebChatChannelPropertiesResponsePtrOutput() WebChatChannelPropertiesResponsePtrOutput {
	return o
}

func (o WebChatChannelPropertiesResponsePtrOutput) ToWebChatChannelPropertiesResponsePtrOutputWithContext(ctx context.Context) WebChatChannelPropertiesResponsePtrOutput {
	return o
}

func (o WebChatChannelPropertiesResponsePtrOutput) Elem() WebChatChannelPropertiesResponseOutput {
	return o.ApplyT(func(v *WebChatChannelPropertiesResponse) WebChatChannelPropertiesResponse { return *v }).(WebChatChannelPropertiesResponseOutput)
}

// The list of Web Chat sites
func (o WebChatChannelPropertiesResponsePtrOutput) Sites() WebChatSiteResponseArrayOutput {
	return o.ApplyT(func(v *WebChatChannelPropertiesResponse) []WebChatSiteResponse {
		if v == nil {
			return nil
		}
		return v.Sites
	}).(WebChatSiteResponseArrayOutput)
}

// Web chat control embed code
func (o WebChatChannelPropertiesResponsePtrOutput) WebChatEmbedCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebChatChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.WebChatEmbedCode
	}).(pulumi.StringPtrOutput)
}

// Web Chat channel definition
type WebChatChannelResponse struct {
	// The channel name
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to Web Chat channel resource
	Properties *WebChatChannelPropertiesResponse `pulumi:"properties"`
}

// Web Chat channel definition
type WebChatChannelResponseOutput struct{ *pulumi.OutputState }

func (WebChatChannelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebChatChannelResponse)(nil)).Elem()
}

func (o WebChatChannelResponseOutput) ToWebChatChannelResponseOutput() WebChatChannelResponseOutput {
	return o
}

func (o WebChatChannelResponseOutput) ToWebChatChannelResponseOutputWithContext(ctx context.Context) WebChatChannelResponseOutput {
	return o
}

// The channel name
func (o WebChatChannelResponseOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v WebChatChannelResponse) string { return v.ChannelName }).(pulumi.StringOutput)
}

// The set of properties specific to Web Chat channel resource
func (o WebChatChannelResponseOutput) Properties() WebChatChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v WebChatChannelResponse) *WebChatChannelPropertiesResponse { return v.Properties }).(WebChatChannelPropertiesResponsePtrOutput)
}

// A site for the Webchat channel
type WebChatSite struct {
	// Whether this site is enabled for preview versions of Webchat
	EnablePreview bool `pulumi:"enablePreview"`
	// Whether this site is enabled for DirectLine channel
	IsEnabled bool `pulumi:"isEnabled"`
	// Site name
	SiteName string `pulumi:"siteName"`
}

// WebChatSiteInput is an input type that accepts WebChatSiteArgs and WebChatSiteOutput values.
// You can construct a concrete instance of `WebChatSiteInput` via:
//
//          WebChatSiteArgs{...}
type WebChatSiteInput interface {
	pulumi.Input

	ToWebChatSiteOutput() WebChatSiteOutput
	ToWebChatSiteOutputWithContext(context.Context) WebChatSiteOutput
}

// A site for the Webchat channel
type WebChatSiteArgs struct {
	// Whether this site is enabled for preview versions of Webchat
	EnablePreview pulumi.BoolInput `pulumi:"enablePreview"`
	// Whether this site is enabled for DirectLine channel
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// Site name
	SiteName pulumi.StringInput `pulumi:"siteName"`
}

func (WebChatSiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebChatSite)(nil)).Elem()
}

func (i WebChatSiteArgs) ToWebChatSiteOutput() WebChatSiteOutput {
	return i.ToWebChatSiteOutputWithContext(context.Background())
}

func (i WebChatSiteArgs) ToWebChatSiteOutputWithContext(ctx context.Context) WebChatSiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebChatSiteOutput)
}

// WebChatSiteArrayInput is an input type that accepts WebChatSiteArray and WebChatSiteArrayOutput values.
// You can construct a concrete instance of `WebChatSiteArrayInput` via:
//
//          WebChatSiteArray{ WebChatSiteArgs{...} }
type WebChatSiteArrayInput interface {
	pulumi.Input

	ToWebChatSiteArrayOutput() WebChatSiteArrayOutput
	ToWebChatSiteArrayOutputWithContext(context.Context) WebChatSiteArrayOutput
}

type WebChatSiteArray []WebChatSiteInput

func (WebChatSiteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebChatSite)(nil)).Elem()
}

func (i WebChatSiteArray) ToWebChatSiteArrayOutput() WebChatSiteArrayOutput {
	return i.ToWebChatSiteArrayOutputWithContext(context.Background())
}

func (i WebChatSiteArray) ToWebChatSiteArrayOutputWithContext(ctx context.Context) WebChatSiteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebChatSiteArrayOutput)
}

// A site for the Webchat channel
type WebChatSiteResponse struct {
	// Whether this site is enabled for preview versions of Webchat
	EnablePreview bool `pulumi:"enablePreview"`
	// Whether this site is enabled for DirectLine channel
	IsEnabled bool `pulumi:"isEnabled"`
	// Primary key. Value only returned through POST to the action Channel List API, otherwise empty.
	Key string `pulumi:"key"`
	// Secondary key. Value only returned through POST to the action Channel List API, otherwise empty.
	Key2 string `pulumi:"key2"`
	// Site Id
	SiteId string `pulumi:"siteId"`
	// Site name
	SiteName string `pulumi:"siteName"`
}

// A site for the Webchat channel
type WebChatSiteResponseOutput struct{ *pulumi.OutputState }

func (WebChatSiteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebChatSiteResponse)(nil)).Elem()
}

func (o WebChatSiteResponseOutput) ToWebChatSiteResponseOutput() WebChatSiteResponseOutput {
	return o
}

func (o WebChatSiteResponseOutput) ToWebChatSiteResponseOutputWithContext(ctx context.Context) WebChatSiteResponseOutput {
	return o
}

// Whether this site is enabled for preview versions of Webchat
func (o WebChatSiteResponseOutput) EnablePreview() pulumi.BoolOutput {
	return o.ApplyT(func(v WebChatSiteResponse) bool { return v.EnablePreview }).(pulumi.BoolOutput)
}

// Whether this site is enabled for DirectLine channel
func (o WebChatSiteResponseOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v WebChatSiteResponse) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Primary key. Value only returned through POST to the action Channel List API, otherwise empty.
func (o WebChatSiteResponseOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v WebChatSiteResponse) string { return v.Key }).(pulumi.StringOutput)
}

// Secondary key. Value only returned through POST to the action Channel List API, otherwise empty.
func (o WebChatSiteResponseOutput) Key2() pulumi.StringOutput {
	return o.ApplyT(func(v WebChatSiteResponse) string { return v.Key2 }).(pulumi.StringOutput)
}

// Site Id
func (o WebChatSiteResponseOutput) SiteId() pulumi.StringOutput {
	return o.ApplyT(func(v WebChatSiteResponse) string { return v.SiteId }).(pulumi.StringOutput)
}

// Site name
func (o WebChatSiteResponseOutput) SiteName() pulumi.StringOutput {
	return o.ApplyT(func(v WebChatSiteResponse) string { return v.SiteName }).(pulumi.StringOutput)
}

type WebChatSiteResponseArrayOutput struct{ *pulumi.OutputState }

func (WebChatSiteResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebChatSiteResponse)(nil)).Elem()
}

func (o WebChatSiteResponseArrayOutput) ToWebChatSiteResponseArrayOutput() WebChatSiteResponseArrayOutput {
	return o
}

func (o WebChatSiteResponseArrayOutput) ToWebChatSiteResponseArrayOutputWithContext(ctx context.Context) WebChatSiteResponseArrayOutput {
	return o
}

func (o WebChatSiteResponseArrayOutput) Index(i pulumi.IntInput) WebChatSiteResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebChatSiteResponse {
		return vs[0].([]WebChatSiteResponse)[vs[1].(int)]
	}).(WebChatSiteResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(BotPropertiesOutput{})
	pulumi.RegisterOutputType(BotPropertiesPtrOutput{})
	pulumi.RegisterOutputType(BotPropertiesResponseOutput{})
	pulumi.RegisterOutputType(BotPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectionSettingParameterOutput{})
	pulumi.RegisterOutputType(ConnectionSettingParameterArrayOutput{})
	pulumi.RegisterOutputType(ConnectionSettingParameterResponseOutput{})
	pulumi.RegisterOutputType(ConnectionSettingParameterResponseArrayOutput{})
	pulumi.RegisterOutputType(ConnectionSettingPropertiesOutput{})
	pulumi.RegisterOutputType(ConnectionSettingPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ConnectionSettingPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ConnectionSettingPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(DirectLineChannelOutput{})
	pulumi.RegisterOutputType(DirectLineChannelPropertiesOutput{})
	pulumi.RegisterOutputType(DirectLineChannelPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DirectLineChannelPropertiesResponseOutput{})
	pulumi.RegisterOutputType(DirectLineChannelPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(DirectLineChannelResponseOutput{})
	pulumi.RegisterOutputType(DirectLineSiteOutput{})
	pulumi.RegisterOutputType(DirectLineSiteArrayOutput{})
	pulumi.RegisterOutputType(DirectLineSiteResponseOutput{})
	pulumi.RegisterOutputType(DirectLineSiteResponseArrayOutput{})
	pulumi.RegisterOutputType(EmailChannelOutput{})
	pulumi.RegisterOutputType(EmailChannelPropertiesOutput{})
	pulumi.RegisterOutputType(EmailChannelPropertiesPtrOutput{})
	pulumi.RegisterOutputType(EmailChannelPropertiesResponseOutput{})
	pulumi.RegisterOutputType(EmailChannelPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(EmailChannelResponseOutput{})
	pulumi.RegisterOutputType(FacebookChannelOutput{})
	pulumi.RegisterOutputType(FacebookChannelPropertiesOutput{})
	pulumi.RegisterOutputType(FacebookChannelPropertiesPtrOutput{})
	pulumi.RegisterOutputType(FacebookChannelPropertiesResponseOutput{})
	pulumi.RegisterOutputType(FacebookChannelPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(FacebookChannelResponseOutput{})
	pulumi.RegisterOutputType(FacebookPageOutput{})
	pulumi.RegisterOutputType(FacebookPageArrayOutput{})
	pulumi.RegisterOutputType(FacebookPageResponseOutput{})
	pulumi.RegisterOutputType(FacebookPageResponseArrayOutput{})
	pulumi.RegisterOutputType(KikChannelOutput{})
	pulumi.RegisterOutputType(KikChannelPropertiesOutput{})
	pulumi.RegisterOutputType(KikChannelPropertiesPtrOutput{})
	pulumi.RegisterOutputType(KikChannelPropertiesResponseOutput{})
	pulumi.RegisterOutputType(KikChannelPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(KikChannelResponseOutput{})
	pulumi.RegisterOutputType(MsTeamsChannelOutput{})
	pulumi.RegisterOutputType(MsTeamsChannelPropertiesOutput{})
	pulumi.RegisterOutputType(MsTeamsChannelPropertiesPtrOutput{})
	pulumi.RegisterOutputType(MsTeamsChannelPropertiesResponseOutput{})
	pulumi.RegisterOutputType(MsTeamsChannelPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(MsTeamsChannelResponseOutput{})
	pulumi.RegisterOutputType(ServiceProviderParameterResponseOutput{})
	pulumi.RegisterOutputType(ServiceProviderParameterResponseArrayOutput{})
	pulumi.RegisterOutputType(ServiceProviderPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ServiceProviderPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ServiceProviderResponseOutput{})
	pulumi.RegisterOutputType(ServiceProviderResponseArrayOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
	pulumi.RegisterOutputType(SkypeChannelOutput{})
	pulumi.RegisterOutputType(SkypeChannelPropertiesOutput{})
	pulumi.RegisterOutputType(SkypeChannelPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SkypeChannelPropertiesResponseOutput{})
	pulumi.RegisterOutputType(SkypeChannelPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(SkypeChannelResponseOutput{})
	pulumi.RegisterOutputType(SlackChannelOutput{})
	pulumi.RegisterOutputType(SlackChannelPropertiesOutput{})
	pulumi.RegisterOutputType(SlackChannelPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SlackChannelPropertiesResponseOutput{})
	pulumi.RegisterOutputType(SlackChannelPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(SlackChannelResponseOutput{})
	pulumi.RegisterOutputType(SmsChannelOutput{})
	pulumi.RegisterOutputType(SmsChannelPropertiesOutput{})
	pulumi.RegisterOutputType(SmsChannelPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SmsChannelPropertiesResponseOutput{})
	pulumi.RegisterOutputType(SmsChannelPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(SmsChannelResponseOutput{})
	pulumi.RegisterOutputType(TelegramChannelOutput{})
	pulumi.RegisterOutputType(TelegramChannelPropertiesOutput{})
	pulumi.RegisterOutputType(TelegramChannelPropertiesPtrOutput{})
	pulumi.RegisterOutputType(TelegramChannelPropertiesResponseOutput{})
	pulumi.RegisterOutputType(TelegramChannelPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(TelegramChannelResponseOutput{})
	pulumi.RegisterOutputType(WebChatChannelOutput{})
	pulumi.RegisterOutputType(WebChatChannelPropertiesOutput{})
	pulumi.RegisterOutputType(WebChatChannelPropertiesPtrOutput{})
	pulumi.RegisterOutputType(WebChatChannelPropertiesResponseOutput{})
	pulumi.RegisterOutputType(WebChatChannelPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(WebChatChannelResponseOutput{})
	pulumi.RegisterOutputType(WebChatSiteOutput{})
	pulumi.RegisterOutputType(WebChatSiteArrayOutput{})
	pulumi.RegisterOutputType(WebChatSiteResponseOutput{})
	pulumi.RegisterOutputType(WebChatSiteResponseArrayOutput{})
}
