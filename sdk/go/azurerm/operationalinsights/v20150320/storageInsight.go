// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20150320

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The top level storage insight resource container.
type StorageInsight struct {
	pulumi.CustomResourceState

	// The ETag of the storage insight.
	ETag pulumi.StringPtrOutput `pulumi:"eTag"`
	// Resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Storage insight properties.
	Properties StorageInsightPropertiesResponseOutput `pulumi:"properties"`
	// Resource tags
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewStorageInsight registers a new resource with the given unique name, arguments, and options.
func NewStorageInsight(ctx *pulumi.Context,
	name string, args *StorageInsightArgs, opts ...pulumi.ResourceOption) (*StorageInsight, error) {
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.StorageAccount == nil {
		return nil, errors.New("missing required argument 'StorageAccount'")
	}
	if args == nil || args.WorkspaceName == nil {
		return nil, errors.New("missing required argument 'WorkspaceName'")
	}
	if args == nil {
		args = &StorageInsightArgs{}
	}
	var resource StorageInsight
	err := ctx.RegisterResource("azurerm:operationalinsights/v20150320:StorageInsight", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStorageInsight gets an existing StorageInsight resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStorageInsight(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StorageInsightState, opts ...pulumi.ResourceOption) (*StorageInsight, error) {
	var resource StorageInsight
	err := ctx.ReadResource("azurerm:operationalinsights/v20150320:StorageInsight", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StorageInsight resources.
type storageInsightState struct {
	// The ETag of the storage insight.
	ETag *string `pulumi:"eTag"`
	// Resource name.
	Name *string `pulumi:"name"`
	// Storage insight properties.
	Properties *StorageInsightPropertiesResponse `pulumi:"properties"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type *string `pulumi:"type"`
}

type StorageInsightState struct {
	// The ETag of the storage insight.
	ETag pulumi.StringPtrInput
	// Resource name.
	Name pulumi.StringPtrInput
	// Storage insight properties.
	Properties StorageInsightPropertiesResponsePtrInput
	// Resource tags
	Tags pulumi.StringMapInput
	// Resource type.
	Type pulumi.StringPtrInput
}

func (StorageInsightState) ElementType() reflect.Type {
	return reflect.TypeOf((*storageInsightState)(nil)).Elem()
}

type storageInsightArgs struct {
	// The names of the blob containers that the workspace should read
	Containers []string `pulumi:"containers"`
	// The ETag of the storage insight.
	ETag *string `pulumi:"eTag"`
	// Name of the storageInsightsConfigs resource
	Name string `pulumi:"name"`
	// The Resource Group name.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The storage account connection details
	StorageAccount StorageAccount `pulumi:"storageAccount"`
	// The names of the Azure tables that the workspace should read
	Tables []string `pulumi:"tables"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// The Log Analytics Workspace name.
	WorkspaceName string `pulumi:"workspaceName"`
}

// The set of arguments for constructing a StorageInsight resource.
type StorageInsightArgs struct {
	// The names of the blob containers that the workspace should read
	Containers pulumi.StringArrayInput
	// The ETag of the storage insight.
	ETag pulumi.StringPtrInput
	// Name of the storageInsightsConfigs resource
	Name pulumi.StringInput
	// The Resource Group name.
	ResourceGroupName pulumi.StringInput
	// The storage account connection details
	StorageAccount StorageAccountInput
	// The names of the Azure tables that the workspace should read
	Tables pulumi.StringArrayInput
	// Resource tags
	Tags pulumi.StringMapInput
	// The Log Analytics Workspace name.
	WorkspaceName pulumi.StringInput
}

func (StorageInsightArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*storageInsightArgs)(nil)).Elem()
}
