// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20180630

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Definition of the runbook type.
type Runbook struct {
	pulumi.CustomResourceState

	// Gets or sets the etag of the resource.
	Etag pulumi.StringPtrOutput `pulumi:"etag"`
	// The Azure Region where the resource lives
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Gets or sets the runbook properties.
	Properties RunbookPropertiesResponseOutput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewRunbook registers a new resource with the given unique name, arguments, and options.
func NewRunbook(ctx *pulumi.Context,
	name string, args *RunbookArgs, opts ...pulumi.ResourceOption) (*Runbook, error) {
	if args == nil || args.AutomationAccountName == nil {
		return nil, errors.New("missing required argument 'AutomationAccountName'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.RunbookType == nil {
		return nil, errors.New("missing required argument 'RunbookType'")
	}
	if args == nil {
		args = &RunbookArgs{}
	}
	var resource Runbook
	err := ctx.RegisterResource("azurerm:automation/v20180630:Runbook", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRunbook gets an existing Runbook resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRunbook(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RunbookState, opts ...pulumi.ResourceOption) (*Runbook, error) {
	var resource Runbook
	err := ctx.ReadResource("azurerm:automation/v20180630:Runbook", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Runbook resources.
type runbookState struct {
	// Gets or sets the etag of the resource.
	Etag *string `pulumi:"etag"`
	// The Azure Region where the resource lives
	Location *string `pulumi:"location"`
	// The name of the resource
	Name *string `pulumi:"name"`
	// Gets or sets the runbook properties.
	Properties *RunbookPropertiesResponse `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource.
	Type *string `pulumi:"type"`
}

type RunbookState struct {
	// Gets or sets the etag of the resource.
	Etag pulumi.StringPtrInput
	// The Azure Region where the resource lives
	Location pulumi.StringPtrInput
	// The name of the resource
	Name pulumi.StringPtrInput
	// Gets or sets the runbook properties.
	Properties RunbookPropertiesResponsePtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// The type of the resource.
	Type pulumi.StringPtrInput
}

func (RunbookState) ElementType() reflect.Type {
	return reflect.TypeOf((*runbookState)(nil)).Elem()
}

type runbookArgs struct {
	// The name of the automation account.
	AutomationAccountName string `pulumi:"automationAccountName"`
	// Gets or sets the description of the runbook.
	Description *string `pulumi:"description"`
	// Gets or sets the draft runbook properties.
	Draft *RunbookDraft `pulumi:"draft"`
	// Gets or sets the location of the resource.
	Location *string `pulumi:"location"`
	// Gets or sets the activity-level tracing options of the runbook.
	LogActivityTrace *int `pulumi:"logActivityTrace"`
	// Gets or sets progress log option.
	LogProgress *bool `pulumi:"logProgress"`
	// Gets or sets verbose log option.
	LogVerbose *bool `pulumi:"logVerbose"`
	// The runbook name.
	Name string `pulumi:"name"`
	// Gets or sets the published runbook content link.
	PublishContentLink *ContentLink `pulumi:"publishContentLink"`
	// Name of an Azure Resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Gets or sets the type of the runbook.
	RunbookType string `pulumi:"runbookType"`
	// Gets or sets the tags attached to the resource.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Runbook resource.
type RunbookArgs struct {
	// The name of the automation account.
	AutomationAccountName pulumi.StringInput
	// Gets or sets the description of the runbook.
	Description pulumi.StringPtrInput
	// Gets or sets the draft runbook properties.
	Draft RunbookDraftPtrInput
	// Gets or sets the location of the resource.
	Location pulumi.StringPtrInput
	// Gets or sets the activity-level tracing options of the runbook.
	LogActivityTrace pulumi.IntPtrInput
	// Gets or sets progress log option.
	LogProgress pulumi.BoolPtrInput
	// Gets or sets verbose log option.
	LogVerbose pulumi.BoolPtrInput
	// The runbook name.
	Name pulumi.StringInput
	// Gets or sets the published runbook content link.
	PublishContentLink ContentLinkPtrInput
	// Name of an Azure Resource group.
	ResourceGroupName pulumi.StringInput
	// Gets or sets the type of the runbook.
	RunbookType pulumi.StringInput
	// Gets or sets the tags attached to the resource.
	Tags pulumi.StringMapInput
}

func (RunbookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*runbookArgs)(nil)).Elem()
}
