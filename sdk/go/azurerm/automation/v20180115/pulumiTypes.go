// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20180115

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Definition of the runbook property type.
type ContentHash struct {
	// Gets or sets the content hash algorithm used to hash the content.
	Algorithm string `pulumi:"algorithm"`
	// Gets or sets expected hash value of the content.
	Value string `pulumi:"value"`
}

// ContentHashInput is an input type that accepts ContentHashArgs and ContentHashOutput values.
// You can construct a concrete instance of `ContentHashInput` via:
//
//          ContentHashArgs{...}
type ContentHashInput interface {
	pulumi.Input

	ToContentHashOutput() ContentHashOutput
	ToContentHashOutputWithContext(context.Context) ContentHashOutput
}

// Definition of the runbook property type.
type ContentHashArgs struct {
	// Gets or sets the content hash algorithm used to hash the content.
	Algorithm pulumi.StringInput `pulumi:"algorithm"`
	// Gets or sets expected hash value of the content.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ContentHashArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContentHash)(nil)).Elem()
}

func (i ContentHashArgs) ToContentHashOutput() ContentHashOutput {
	return i.ToContentHashOutputWithContext(context.Background())
}

func (i ContentHashArgs) ToContentHashOutputWithContext(ctx context.Context) ContentHashOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContentHashOutput)
}

func (i ContentHashArgs) ToContentHashPtrOutput() ContentHashPtrOutput {
	return i.ToContentHashPtrOutputWithContext(context.Background())
}

func (i ContentHashArgs) ToContentHashPtrOutputWithContext(ctx context.Context) ContentHashPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContentHashOutput).ToContentHashPtrOutputWithContext(ctx)
}

// ContentHashPtrInput is an input type that accepts ContentHashArgs, ContentHashPtr and ContentHashPtrOutput values.
// You can construct a concrete instance of `ContentHashPtrInput` via:
//
//          ContentHashArgs{...}
//
//  or:
//
//          nil
type ContentHashPtrInput interface {
	pulumi.Input

	ToContentHashPtrOutput() ContentHashPtrOutput
	ToContentHashPtrOutputWithContext(context.Context) ContentHashPtrOutput
}

type contentHashPtrType ContentHashArgs

func ContentHashPtr(v *ContentHashArgs) ContentHashPtrInput {
	return (*contentHashPtrType)(v)
}

func (*contentHashPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContentHash)(nil)).Elem()
}

func (i *contentHashPtrType) ToContentHashPtrOutput() ContentHashPtrOutput {
	return i.ToContentHashPtrOutputWithContext(context.Background())
}

func (i *contentHashPtrType) ToContentHashPtrOutputWithContext(ctx context.Context) ContentHashPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContentHashPtrOutput)
}

// Definition of the content source.
type ContentSource struct {
	// Gets or sets the hash.
	Hash *ContentHash `pulumi:"hash"`
	// Gets or sets the content source type.
	Type *string `pulumi:"type"`
	// Gets or sets the value of the content. This is based on the content source type.
	Value *string `pulumi:"value"`
	// Gets or sets the version of the content.
	Version *string `pulumi:"version"`
}

// ContentSourceInput is an input type that accepts ContentSourceArgs and ContentSourceOutput values.
// You can construct a concrete instance of `ContentSourceInput` via:
//
//          ContentSourceArgs{...}
type ContentSourceInput interface {
	pulumi.Input

	ToContentSourceOutput() ContentSourceOutput
	ToContentSourceOutputWithContext(context.Context) ContentSourceOutput
}

// Definition of the content source.
type ContentSourceArgs struct {
	// Gets or sets the hash.
	Hash ContentHashPtrInput `pulumi:"hash"`
	// Gets or sets the content source type.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Gets or sets the value of the content. This is based on the content source type.
	Value pulumi.StringPtrInput `pulumi:"value"`
	// Gets or sets the version of the content.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ContentSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContentSource)(nil)).Elem()
}

func (i ContentSourceArgs) ToContentSourceOutput() ContentSourceOutput {
	return i.ToContentSourceOutputWithContext(context.Background())
}

func (i ContentSourceArgs) ToContentSourceOutputWithContext(ctx context.Context) ContentSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContentSourceOutput)
}

func (i ContentSourceArgs) ToContentSourcePtrOutput() ContentSourcePtrOutput {
	return i.ToContentSourcePtrOutputWithContext(context.Background())
}

func (i ContentSourceArgs) ToContentSourcePtrOutputWithContext(ctx context.Context) ContentSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContentSourceOutput).ToContentSourcePtrOutputWithContext(ctx)
}

// ContentSourcePtrInput is an input type that accepts ContentSourceArgs, ContentSourcePtr and ContentSourcePtrOutput values.
// You can construct a concrete instance of `ContentSourcePtrInput` via:
//
//          ContentSourceArgs{...}
//
//  or:
//
//          nil
type ContentSourcePtrInput interface {
	pulumi.Input

	ToContentSourcePtrOutput() ContentSourcePtrOutput
	ToContentSourcePtrOutputWithContext(context.Context) ContentSourcePtrOutput
}

type contentSourcePtrType ContentSourceArgs

func ContentSourcePtr(v *ContentSourceArgs) ContentSourcePtrInput {
	return (*contentSourcePtrType)(v)
}

func (*contentSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContentSource)(nil)).Elem()
}

func (i *contentSourcePtrType) ToContentSourcePtrOutput() ContentSourcePtrOutput {
	return i.ToContentSourcePtrOutputWithContext(context.Background())
}

func (i *contentSourcePtrType) ToContentSourcePtrOutputWithContext(ctx context.Context) ContentSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContentSourcePtrOutput)
}

// The Dsc configuration property associated with the entity.
type DscConfigurationAssociationProperty struct {
	// Gets or sets the name of the Dsc configuration.
	Name *string `pulumi:"name"`
}

// DscConfigurationAssociationPropertyInput is an input type that accepts DscConfigurationAssociationPropertyArgs and DscConfigurationAssociationPropertyOutput values.
// You can construct a concrete instance of `DscConfigurationAssociationPropertyInput` via:
//
//          DscConfigurationAssociationPropertyArgs{...}
type DscConfigurationAssociationPropertyInput interface {
	pulumi.Input

	ToDscConfigurationAssociationPropertyOutput() DscConfigurationAssociationPropertyOutput
	ToDscConfigurationAssociationPropertyOutputWithContext(context.Context) DscConfigurationAssociationPropertyOutput
}

// The Dsc configuration property associated with the entity.
type DscConfigurationAssociationPropertyArgs struct {
	// Gets or sets the name of the Dsc configuration.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (DscConfigurationAssociationPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DscConfigurationAssociationProperty)(nil)).Elem()
}

func (i DscConfigurationAssociationPropertyArgs) ToDscConfigurationAssociationPropertyOutput() DscConfigurationAssociationPropertyOutput {
	return i.ToDscConfigurationAssociationPropertyOutputWithContext(context.Background())
}

func (i DscConfigurationAssociationPropertyArgs) ToDscConfigurationAssociationPropertyOutputWithContext(ctx context.Context) DscConfigurationAssociationPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DscConfigurationAssociationPropertyOutput)
}

func (i DscConfigurationAssociationPropertyArgs) ToDscConfigurationAssociationPropertyPtrOutput() DscConfigurationAssociationPropertyPtrOutput {
	return i.ToDscConfigurationAssociationPropertyPtrOutputWithContext(context.Background())
}

func (i DscConfigurationAssociationPropertyArgs) ToDscConfigurationAssociationPropertyPtrOutputWithContext(ctx context.Context) DscConfigurationAssociationPropertyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DscConfigurationAssociationPropertyOutput).ToDscConfigurationAssociationPropertyPtrOutputWithContext(ctx)
}

// DscConfigurationAssociationPropertyPtrInput is an input type that accepts DscConfigurationAssociationPropertyArgs, DscConfigurationAssociationPropertyPtr and DscConfigurationAssociationPropertyPtrOutput values.
// You can construct a concrete instance of `DscConfigurationAssociationPropertyPtrInput` via:
//
//          DscConfigurationAssociationPropertyArgs{...}
//
//  or:
//
//          nil
type DscConfigurationAssociationPropertyPtrInput interface {
	pulumi.Input

	ToDscConfigurationAssociationPropertyPtrOutput() DscConfigurationAssociationPropertyPtrOutput
	ToDscConfigurationAssociationPropertyPtrOutputWithContext(context.Context) DscConfigurationAssociationPropertyPtrOutput
}

type dscConfigurationAssociationPropertyPtrType DscConfigurationAssociationPropertyArgs

func DscConfigurationAssociationPropertyPtr(v *DscConfigurationAssociationPropertyArgs) DscConfigurationAssociationPropertyPtrInput {
	return (*dscConfigurationAssociationPropertyPtrType)(v)
}

func (*dscConfigurationAssociationPropertyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DscConfigurationAssociationProperty)(nil)).Elem()
}

func (i *dscConfigurationAssociationPropertyPtrType) ToDscConfigurationAssociationPropertyPtrOutput() DscConfigurationAssociationPropertyPtrOutput {
	return i.ToDscConfigurationAssociationPropertyPtrOutputWithContext(context.Background())
}

func (i *dscConfigurationAssociationPropertyPtrType) ToDscConfigurationAssociationPropertyPtrOutputWithContext(ctx context.Context) DscConfigurationAssociationPropertyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DscConfigurationAssociationPropertyPtrOutput)
}

// The Dsc configuration property associated with the entity.
type DscConfigurationAssociationPropertyResponse struct {
	// Gets or sets the name of the Dsc configuration.
	Name *string `pulumi:"name"`
}

// The Dsc configuration property associated with the entity.
type DscConfigurationAssociationPropertyResponseOutput struct{ *pulumi.OutputState }

func (DscConfigurationAssociationPropertyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DscConfigurationAssociationPropertyResponse)(nil)).Elem()
}

func (o DscConfigurationAssociationPropertyResponseOutput) ToDscConfigurationAssociationPropertyResponseOutput() DscConfigurationAssociationPropertyResponseOutput {
	return o
}

func (o DscConfigurationAssociationPropertyResponseOutput) ToDscConfigurationAssociationPropertyResponseOutputWithContext(ctx context.Context) DscConfigurationAssociationPropertyResponseOutput {
	return o
}

func (o DscConfigurationAssociationPropertyResponseOutput) ToDscConfigurationAssociationPropertyResponsePtrOutput() DscConfigurationAssociationPropertyResponsePtrOutput {
	return o.ToDscConfigurationAssociationPropertyResponsePtrOutputWithContext(context.Background())
}

func (o DscConfigurationAssociationPropertyResponseOutput) ToDscConfigurationAssociationPropertyResponsePtrOutputWithContext(ctx context.Context) DscConfigurationAssociationPropertyResponsePtrOutput {
	return o.ApplyT(func(v DscConfigurationAssociationPropertyResponse) *DscConfigurationAssociationPropertyResponse {
		return &v
	}).(DscConfigurationAssociationPropertyResponsePtrOutput)
}

// Gets or sets the name of the Dsc configuration.
func (o DscConfigurationAssociationPropertyResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DscConfigurationAssociationPropertyResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type DscConfigurationAssociationPropertyResponsePtrOutput struct{ *pulumi.OutputState }

func (DscConfigurationAssociationPropertyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DscConfigurationAssociationPropertyResponse)(nil)).Elem()
}

func (o DscConfigurationAssociationPropertyResponsePtrOutput) ToDscConfigurationAssociationPropertyResponsePtrOutput() DscConfigurationAssociationPropertyResponsePtrOutput {
	return o
}

func (o DscConfigurationAssociationPropertyResponsePtrOutput) ToDscConfigurationAssociationPropertyResponsePtrOutputWithContext(ctx context.Context) DscConfigurationAssociationPropertyResponsePtrOutput {
	return o
}

func (o DscConfigurationAssociationPropertyResponsePtrOutput) Elem() DscConfigurationAssociationPropertyResponseOutput {
	return o.ApplyT(func(v *DscConfigurationAssociationPropertyResponse) DscConfigurationAssociationPropertyResponse {
		return *v
	}).(DscConfigurationAssociationPropertyResponseOutput)
}

// Gets or sets the name of the Dsc configuration.
func (o DscConfigurationAssociationPropertyResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DscConfigurationAssociationPropertyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ContentHashOutput{})
	pulumi.RegisterOutputType(ContentHashPtrOutput{})
	pulumi.RegisterOutputType(ContentSourceOutput{})
	pulumi.RegisterOutputType(ContentSourcePtrOutput{})
	pulumi.RegisterOutputType(DscConfigurationAssociationPropertyOutput{})
	pulumi.RegisterOutputType(DscConfigurationAssociationPropertyPtrOutput{})
	pulumi.RegisterOutputType(DscConfigurationAssociationPropertyResponseOutput{})
	pulumi.RegisterOutputType(DscConfigurationAssociationPropertyResponsePtrOutput{})
}
