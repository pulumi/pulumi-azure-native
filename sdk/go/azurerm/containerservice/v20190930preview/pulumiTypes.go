// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20190930preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Represents the OpenShift networking configuration
type NetworkProfile struct {
	// CIDR of the Vnet to peer.
	PeerVnetId *string `pulumi:"peerVnetId"`
	// CIDR for the OpenShift Vnet.
	VnetCidr *string `pulumi:"vnetCidr"`
	// ID of the Vnet created for OSA cluster.
	VnetId *string `pulumi:"vnetId"`
}

// NetworkProfileInput is an input type that accepts NetworkProfileArgs and NetworkProfileOutput values.
// You can construct a concrete instance of `NetworkProfileInput` via:
//
//          NetworkProfileArgs{...}
type NetworkProfileInput interface {
	pulumi.Input

	ToNetworkProfileOutput() NetworkProfileOutput
	ToNetworkProfileOutputWithContext(context.Context) NetworkProfileOutput
}

// Represents the OpenShift networking configuration
type NetworkProfileArgs struct {
	// CIDR of the Vnet to peer.
	PeerVnetId pulumi.StringPtrInput `pulumi:"peerVnetId"`
	// CIDR for the OpenShift Vnet.
	VnetCidr pulumi.StringPtrInput `pulumi:"vnetCidr"`
	// ID of the Vnet created for OSA cluster.
	VnetId pulumi.StringPtrInput `pulumi:"vnetId"`
}

func (NetworkProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkProfile)(nil)).Elem()
}

func (i NetworkProfileArgs) ToNetworkProfileOutput() NetworkProfileOutput {
	return i.ToNetworkProfileOutputWithContext(context.Background())
}

func (i NetworkProfileArgs) ToNetworkProfileOutputWithContext(ctx context.Context) NetworkProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfileOutput)
}

func (i NetworkProfileArgs) ToNetworkProfilePtrOutput() NetworkProfilePtrOutput {
	return i.ToNetworkProfilePtrOutputWithContext(context.Background())
}

func (i NetworkProfileArgs) ToNetworkProfilePtrOutputWithContext(ctx context.Context) NetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfileOutput).ToNetworkProfilePtrOutputWithContext(ctx)
}

// NetworkProfilePtrInput is an input type that accepts NetworkProfileArgs, NetworkProfilePtr and NetworkProfilePtrOutput values.
// You can construct a concrete instance of `NetworkProfilePtrInput` via:
//
//          NetworkProfileArgs{...}
//
//  or:
//
//          nil
type NetworkProfilePtrInput interface {
	pulumi.Input

	ToNetworkProfilePtrOutput() NetworkProfilePtrOutput
	ToNetworkProfilePtrOutputWithContext(context.Context) NetworkProfilePtrOutput
}

type networkProfilePtrType NetworkProfileArgs

func NetworkProfilePtr(v *NetworkProfileArgs) NetworkProfilePtrInput {
	return (*networkProfilePtrType)(v)
}

func (*networkProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkProfile)(nil)).Elem()
}

func (i *networkProfilePtrType) ToNetworkProfilePtrOutput() NetworkProfilePtrOutput {
	return i.ToNetworkProfilePtrOutputWithContext(context.Background())
}

func (i *networkProfilePtrType) ToNetworkProfilePtrOutputWithContext(ctx context.Context) NetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfilePtrOutput)
}

// Represents the OpenShift networking configuration
type NetworkProfileOutput struct{ *pulumi.OutputState }

func (NetworkProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkProfile)(nil)).Elem()
}

func (o NetworkProfileOutput) ToNetworkProfileOutput() NetworkProfileOutput {
	return o
}

func (o NetworkProfileOutput) ToNetworkProfileOutputWithContext(ctx context.Context) NetworkProfileOutput {
	return o
}

func (o NetworkProfileOutput) ToNetworkProfilePtrOutput() NetworkProfilePtrOutput {
	return o.ToNetworkProfilePtrOutputWithContext(context.Background())
}

func (o NetworkProfileOutput) ToNetworkProfilePtrOutputWithContext(ctx context.Context) NetworkProfilePtrOutput {
	return o.ApplyT(func(v NetworkProfile) *NetworkProfile {
		return &v
	}).(NetworkProfilePtrOutput)
}

// CIDR of the Vnet to peer.
func (o NetworkProfileOutput) PeerVnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkProfile) *string { return v.PeerVnetId }).(pulumi.StringPtrOutput)
}

// CIDR for the OpenShift Vnet.
func (o NetworkProfileOutput) VnetCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkProfile) *string { return v.VnetCidr }).(pulumi.StringPtrOutput)
}

// ID of the Vnet created for OSA cluster.
func (o NetworkProfileOutput) VnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkProfile) *string { return v.VnetId }).(pulumi.StringPtrOutput)
}

type NetworkProfilePtrOutput struct{ *pulumi.OutputState }

func (NetworkProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkProfile)(nil)).Elem()
}

func (o NetworkProfilePtrOutput) ToNetworkProfilePtrOutput() NetworkProfilePtrOutput {
	return o
}

func (o NetworkProfilePtrOutput) ToNetworkProfilePtrOutputWithContext(ctx context.Context) NetworkProfilePtrOutput {
	return o
}

func (o NetworkProfilePtrOutput) Elem() NetworkProfileOutput {
	return o.ApplyT(func(v *NetworkProfile) NetworkProfile { return *v }).(NetworkProfileOutput)
}

// CIDR of the Vnet to peer.
func (o NetworkProfilePtrOutput) PeerVnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.PeerVnetId
	}).(pulumi.StringPtrOutput)
}

// CIDR for the OpenShift Vnet.
func (o NetworkProfilePtrOutput) VnetCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.VnetCidr
	}).(pulumi.StringPtrOutput)
}

// ID of the Vnet created for OSA cluster.
func (o NetworkProfilePtrOutput) VnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.VnetId
	}).(pulumi.StringPtrOutput)
}

// Represents the OpenShift networking configuration
type NetworkProfileResponse struct {
	// CIDR of the Vnet to peer.
	PeerVnetId *string `pulumi:"peerVnetId"`
	// CIDR for the OpenShift Vnet.
	VnetCidr *string `pulumi:"vnetCidr"`
	// ID of the Vnet created for OSA cluster.
	VnetId *string `pulumi:"vnetId"`
}

// NetworkProfileResponseInput is an input type that accepts NetworkProfileResponseArgs and NetworkProfileResponseOutput values.
// You can construct a concrete instance of `NetworkProfileResponseInput` via:
//
//          NetworkProfileResponseArgs{...}
type NetworkProfileResponseInput interface {
	pulumi.Input

	ToNetworkProfileResponseOutput() NetworkProfileResponseOutput
	ToNetworkProfileResponseOutputWithContext(context.Context) NetworkProfileResponseOutput
}

// Represents the OpenShift networking configuration
type NetworkProfileResponseArgs struct {
	// CIDR of the Vnet to peer.
	PeerVnetId pulumi.StringPtrInput `pulumi:"peerVnetId"`
	// CIDR for the OpenShift Vnet.
	VnetCidr pulumi.StringPtrInput `pulumi:"vnetCidr"`
	// ID of the Vnet created for OSA cluster.
	VnetId pulumi.StringPtrInput `pulumi:"vnetId"`
}

func (NetworkProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkProfileResponse)(nil)).Elem()
}

func (i NetworkProfileResponseArgs) ToNetworkProfileResponseOutput() NetworkProfileResponseOutput {
	return i.ToNetworkProfileResponseOutputWithContext(context.Background())
}

func (i NetworkProfileResponseArgs) ToNetworkProfileResponseOutputWithContext(ctx context.Context) NetworkProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfileResponseOutput)
}

func (i NetworkProfileResponseArgs) ToNetworkProfileResponsePtrOutput() NetworkProfileResponsePtrOutput {
	return i.ToNetworkProfileResponsePtrOutputWithContext(context.Background())
}

func (i NetworkProfileResponseArgs) ToNetworkProfileResponsePtrOutputWithContext(ctx context.Context) NetworkProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfileResponseOutput).ToNetworkProfileResponsePtrOutputWithContext(ctx)
}

// NetworkProfileResponsePtrInput is an input type that accepts NetworkProfileResponseArgs, NetworkProfileResponsePtr and NetworkProfileResponsePtrOutput values.
// You can construct a concrete instance of `NetworkProfileResponsePtrInput` via:
//
//          NetworkProfileResponseArgs{...}
//
//  or:
//
//          nil
type NetworkProfileResponsePtrInput interface {
	pulumi.Input

	ToNetworkProfileResponsePtrOutput() NetworkProfileResponsePtrOutput
	ToNetworkProfileResponsePtrOutputWithContext(context.Context) NetworkProfileResponsePtrOutput
}

type networkProfileResponsePtrType NetworkProfileResponseArgs

func NetworkProfileResponsePtr(v *NetworkProfileResponseArgs) NetworkProfileResponsePtrInput {
	return (*networkProfileResponsePtrType)(v)
}

func (*networkProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkProfileResponse)(nil)).Elem()
}

func (i *networkProfileResponsePtrType) ToNetworkProfileResponsePtrOutput() NetworkProfileResponsePtrOutput {
	return i.ToNetworkProfileResponsePtrOutputWithContext(context.Background())
}

func (i *networkProfileResponsePtrType) ToNetworkProfileResponsePtrOutputWithContext(ctx context.Context) NetworkProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfileResponsePtrOutput)
}

// Represents the OpenShift networking configuration
type NetworkProfileResponseOutput struct{ *pulumi.OutputState }

func (NetworkProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkProfileResponse)(nil)).Elem()
}

func (o NetworkProfileResponseOutput) ToNetworkProfileResponseOutput() NetworkProfileResponseOutput {
	return o
}

func (o NetworkProfileResponseOutput) ToNetworkProfileResponseOutputWithContext(ctx context.Context) NetworkProfileResponseOutput {
	return o
}

func (o NetworkProfileResponseOutput) ToNetworkProfileResponsePtrOutput() NetworkProfileResponsePtrOutput {
	return o.ToNetworkProfileResponsePtrOutputWithContext(context.Background())
}

func (o NetworkProfileResponseOutput) ToNetworkProfileResponsePtrOutputWithContext(ctx context.Context) NetworkProfileResponsePtrOutput {
	return o.ApplyT(func(v NetworkProfileResponse) *NetworkProfileResponse {
		return &v
	}).(NetworkProfileResponsePtrOutput)
}

// CIDR of the Vnet to peer.
func (o NetworkProfileResponseOutput) PeerVnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkProfileResponse) *string { return v.PeerVnetId }).(pulumi.StringPtrOutput)
}

// CIDR for the OpenShift Vnet.
func (o NetworkProfileResponseOutput) VnetCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkProfileResponse) *string { return v.VnetCidr }).(pulumi.StringPtrOutput)
}

// ID of the Vnet created for OSA cluster.
func (o NetworkProfileResponseOutput) VnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkProfileResponse) *string { return v.VnetId }).(pulumi.StringPtrOutput)
}

type NetworkProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkProfileResponse)(nil)).Elem()
}

func (o NetworkProfileResponsePtrOutput) ToNetworkProfileResponsePtrOutput() NetworkProfileResponsePtrOutput {
	return o
}

func (o NetworkProfileResponsePtrOutput) ToNetworkProfileResponsePtrOutputWithContext(ctx context.Context) NetworkProfileResponsePtrOutput {
	return o
}

func (o NetworkProfileResponsePtrOutput) Elem() NetworkProfileResponseOutput {
	return o.ApplyT(func(v *NetworkProfileResponse) NetworkProfileResponse { return *v }).(NetworkProfileResponseOutput)
}

// CIDR of the Vnet to peer.
func (o NetworkProfileResponsePtrOutput) PeerVnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.PeerVnetId
	}).(pulumi.StringPtrOutput)
}

// CIDR for the OpenShift Vnet.
func (o NetworkProfileResponsePtrOutput) VnetCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.VnetCidr
	}).(pulumi.StringPtrOutput)
}

// ID of the Vnet created for OSA cluster.
func (o NetworkProfileResponsePtrOutput) VnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.VnetId
	}).(pulumi.StringPtrOutput)
}

// Defines the Identity provider for MS AAD.
type OpenShiftManagedClusterAADIdentityProvider struct {
	// The clientId password associated with the provider.
	ClientId *string `pulumi:"clientId"`
	// The groupId to be granted cluster admin role.
	CustomerAdminGroupId *string `pulumi:"customerAdminGroupId"`
	// The kind of the provider.
	Kind string `pulumi:"kind"`
	// The secret password associated with the provider.
	Secret *string `pulumi:"secret"`
	// The tenantId associated with the provider.
	TenantId *string `pulumi:"tenantId"`
}

// OpenShiftManagedClusterAADIdentityProviderInput is an input type that accepts OpenShiftManagedClusterAADIdentityProviderArgs and OpenShiftManagedClusterAADIdentityProviderOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterAADIdentityProviderInput` via:
//
//          OpenShiftManagedClusterAADIdentityProviderArgs{...}
type OpenShiftManagedClusterAADIdentityProviderInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterAADIdentityProviderOutput() OpenShiftManagedClusterAADIdentityProviderOutput
	ToOpenShiftManagedClusterAADIdentityProviderOutputWithContext(context.Context) OpenShiftManagedClusterAADIdentityProviderOutput
}

// Defines the Identity provider for MS AAD.
type OpenShiftManagedClusterAADIdentityProviderArgs struct {
	// The clientId password associated with the provider.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// The groupId to be granted cluster admin role.
	CustomerAdminGroupId pulumi.StringPtrInput `pulumi:"customerAdminGroupId"`
	// The kind of the provider.
	Kind pulumi.StringInput `pulumi:"kind"`
	// The secret password associated with the provider.
	Secret pulumi.StringPtrInput `pulumi:"secret"`
	// The tenantId associated with the provider.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
}

func (OpenShiftManagedClusterAADIdentityProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterAADIdentityProvider)(nil)).Elem()
}

func (i OpenShiftManagedClusterAADIdentityProviderArgs) ToOpenShiftManagedClusterAADIdentityProviderOutput() OpenShiftManagedClusterAADIdentityProviderOutput {
	return i.ToOpenShiftManagedClusterAADIdentityProviderOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterAADIdentityProviderArgs) ToOpenShiftManagedClusterAADIdentityProviderOutputWithContext(ctx context.Context) OpenShiftManagedClusterAADIdentityProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterAADIdentityProviderOutput)
}

func (i OpenShiftManagedClusterAADIdentityProviderArgs) ToOpenShiftManagedClusterAADIdentityProviderPtrOutput() OpenShiftManagedClusterAADIdentityProviderPtrOutput {
	return i.ToOpenShiftManagedClusterAADIdentityProviderPtrOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterAADIdentityProviderArgs) ToOpenShiftManagedClusterAADIdentityProviderPtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterAADIdentityProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterAADIdentityProviderOutput).ToOpenShiftManagedClusterAADIdentityProviderPtrOutputWithContext(ctx)
}

// OpenShiftManagedClusterAADIdentityProviderPtrInput is an input type that accepts OpenShiftManagedClusterAADIdentityProviderArgs, OpenShiftManagedClusterAADIdentityProviderPtr and OpenShiftManagedClusterAADIdentityProviderPtrOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterAADIdentityProviderPtrInput` via:
//
//          OpenShiftManagedClusterAADIdentityProviderArgs{...}
//
//  or:
//
//          nil
type OpenShiftManagedClusterAADIdentityProviderPtrInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterAADIdentityProviderPtrOutput() OpenShiftManagedClusterAADIdentityProviderPtrOutput
	ToOpenShiftManagedClusterAADIdentityProviderPtrOutputWithContext(context.Context) OpenShiftManagedClusterAADIdentityProviderPtrOutput
}

type openShiftManagedClusterAADIdentityProviderPtrType OpenShiftManagedClusterAADIdentityProviderArgs

func OpenShiftManagedClusterAADIdentityProviderPtr(v *OpenShiftManagedClusterAADIdentityProviderArgs) OpenShiftManagedClusterAADIdentityProviderPtrInput {
	return (*openShiftManagedClusterAADIdentityProviderPtrType)(v)
}

func (*openShiftManagedClusterAADIdentityProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenShiftManagedClusterAADIdentityProvider)(nil)).Elem()
}

func (i *openShiftManagedClusterAADIdentityProviderPtrType) ToOpenShiftManagedClusterAADIdentityProviderPtrOutput() OpenShiftManagedClusterAADIdentityProviderPtrOutput {
	return i.ToOpenShiftManagedClusterAADIdentityProviderPtrOutputWithContext(context.Background())
}

func (i *openShiftManagedClusterAADIdentityProviderPtrType) ToOpenShiftManagedClusterAADIdentityProviderPtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterAADIdentityProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterAADIdentityProviderPtrOutput)
}

// Defines the Identity provider for MS AAD.
type OpenShiftManagedClusterAADIdentityProviderOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterAADIdentityProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterAADIdentityProvider)(nil)).Elem()
}

func (o OpenShiftManagedClusterAADIdentityProviderOutput) ToOpenShiftManagedClusterAADIdentityProviderOutput() OpenShiftManagedClusterAADIdentityProviderOutput {
	return o
}

func (o OpenShiftManagedClusterAADIdentityProviderOutput) ToOpenShiftManagedClusterAADIdentityProviderOutputWithContext(ctx context.Context) OpenShiftManagedClusterAADIdentityProviderOutput {
	return o
}

func (o OpenShiftManagedClusterAADIdentityProviderOutput) ToOpenShiftManagedClusterAADIdentityProviderPtrOutput() OpenShiftManagedClusterAADIdentityProviderPtrOutput {
	return o.ToOpenShiftManagedClusterAADIdentityProviderPtrOutputWithContext(context.Background())
}

func (o OpenShiftManagedClusterAADIdentityProviderOutput) ToOpenShiftManagedClusterAADIdentityProviderPtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterAADIdentityProviderPtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterAADIdentityProvider) *OpenShiftManagedClusterAADIdentityProvider {
		return &v
	}).(OpenShiftManagedClusterAADIdentityProviderPtrOutput)
}

// The clientId password associated with the provider.
func (o OpenShiftManagedClusterAADIdentityProviderOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterAADIdentityProvider) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The groupId to be granted cluster admin role.
func (o OpenShiftManagedClusterAADIdentityProviderOutput) CustomerAdminGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterAADIdentityProvider) *string { return v.CustomerAdminGroupId }).(pulumi.StringPtrOutput)
}

// The kind of the provider.
func (o OpenShiftManagedClusterAADIdentityProviderOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterAADIdentityProvider) string { return v.Kind }).(pulumi.StringOutput)
}

// The secret password associated with the provider.
func (o OpenShiftManagedClusterAADIdentityProviderOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterAADIdentityProvider) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

// The tenantId associated with the provider.
func (o OpenShiftManagedClusterAADIdentityProviderOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterAADIdentityProvider) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type OpenShiftManagedClusterAADIdentityProviderPtrOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterAADIdentityProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenShiftManagedClusterAADIdentityProvider)(nil)).Elem()
}

func (o OpenShiftManagedClusterAADIdentityProviderPtrOutput) ToOpenShiftManagedClusterAADIdentityProviderPtrOutput() OpenShiftManagedClusterAADIdentityProviderPtrOutput {
	return o
}

func (o OpenShiftManagedClusterAADIdentityProviderPtrOutput) ToOpenShiftManagedClusterAADIdentityProviderPtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterAADIdentityProviderPtrOutput {
	return o
}

func (o OpenShiftManagedClusterAADIdentityProviderPtrOutput) Elem() OpenShiftManagedClusterAADIdentityProviderOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterAADIdentityProvider) OpenShiftManagedClusterAADIdentityProvider {
		return *v
	}).(OpenShiftManagedClusterAADIdentityProviderOutput)
}

// The clientId password associated with the provider.
func (o OpenShiftManagedClusterAADIdentityProviderPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterAADIdentityProvider) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The groupId to be granted cluster admin role.
func (o OpenShiftManagedClusterAADIdentityProviderPtrOutput) CustomerAdminGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterAADIdentityProvider) *string {
		if v == nil {
			return nil
		}
		return v.CustomerAdminGroupId
	}).(pulumi.StringPtrOutput)
}

// The kind of the provider.
func (o OpenShiftManagedClusterAADIdentityProviderPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterAADIdentityProvider) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// The secret password associated with the provider.
func (o OpenShiftManagedClusterAADIdentityProviderPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterAADIdentityProvider) *string {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(pulumi.StringPtrOutput)
}

// The tenantId associated with the provider.
func (o OpenShiftManagedClusterAADIdentityProviderPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterAADIdentityProvider) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Defines the Identity provider for MS AAD.
type OpenShiftManagedClusterAADIdentityProviderResponse struct {
	// The clientId password associated with the provider.
	ClientId *string `pulumi:"clientId"`
	// The groupId to be granted cluster admin role.
	CustomerAdminGroupId *string `pulumi:"customerAdminGroupId"`
	// The kind of the provider.
	Kind string `pulumi:"kind"`
	// The secret password associated with the provider.
	Secret *string `pulumi:"secret"`
	// The tenantId associated with the provider.
	TenantId *string `pulumi:"tenantId"`
}

// OpenShiftManagedClusterAADIdentityProviderResponseInput is an input type that accepts OpenShiftManagedClusterAADIdentityProviderResponseArgs and OpenShiftManagedClusterAADIdentityProviderResponseOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterAADIdentityProviderResponseInput` via:
//
//          OpenShiftManagedClusterAADIdentityProviderResponseArgs{...}
type OpenShiftManagedClusterAADIdentityProviderResponseInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterAADIdentityProviderResponseOutput() OpenShiftManagedClusterAADIdentityProviderResponseOutput
	ToOpenShiftManagedClusterAADIdentityProviderResponseOutputWithContext(context.Context) OpenShiftManagedClusterAADIdentityProviderResponseOutput
}

// Defines the Identity provider for MS AAD.
type OpenShiftManagedClusterAADIdentityProviderResponseArgs struct {
	// The clientId password associated with the provider.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// The groupId to be granted cluster admin role.
	CustomerAdminGroupId pulumi.StringPtrInput `pulumi:"customerAdminGroupId"`
	// The kind of the provider.
	Kind pulumi.StringInput `pulumi:"kind"`
	// The secret password associated with the provider.
	Secret pulumi.StringPtrInput `pulumi:"secret"`
	// The tenantId associated with the provider.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
}

func (OpenShiftManagedClusterAADIdentityProviderResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterAADIdentityProviderResponse)(nil)).Elem()
}

func (i OpenShiftManagedClusterAADIdentityProviderResponseArgs) ToOpenShiftManagedClusterAADIdentityProviderResponseOutput() OpenShiftManagedClusterAADIdentityProviderResponseOutput {
	return i.ToOpenShiftManagedClusterAADIdentityProviderResponseOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterAADIdentityProviderResponseArgs) ToOpenShiftManagedClusterAADIdentityProviderResponseOutputWithContext(ctx context.Context) OpenShiftManagedClusterAADIdentityProviderResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterAADIdentityProviderResponseOutput)
}

func (i OpenShiftManagedClusterAADIdentityProviderResponseArgs) ToOpenShiftManagedClusterAADIdentityProviderResponsePtrOutput() OpenShiftManagedClusterAADIdentityProviderResponsePtrOutput {
	return i.ToOpenShiftManagedClusterAADIdentityProviderResponsePtrOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterAADIdentityProviderResponseArgs) ToOpenShiftManagedClusterAADIdentityProviderResponsePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterAADIdentityProviderResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterAADIdentityProviderResponseOutput).ToOpenShiftManagedClusterAADIdentityProviderResponsePtrOutputWithContext(ctx)
}

// OpenShiftManagedClusterAADIdentityProviderResponsePtrInput is an input type that accepts OpenShiftManagedClusterAADIdentityProviderResponseArgs, OpenShiftManagedClusterAADIdentityProviderResponsePtr and OpenShiftManagedClusterAADIdentityProviderResponsePtrOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterAADIdentityProviderResponsePtrInput` via:
//
//          OpenShiftManagedClusterAADIdentityProviderResponseArgs{...}
//
//  or:
//
//          nil
type OpenShiftManagedClusterAADIdentityProviderResponsePtrInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterAADIdentityProviderResponsePtrOutput() OpenShiftManagedClusterAADIdentityProviderResponsePtrOutput
	ToOpenShiftManagedClusterAADIdentityProviderResponsePtrOutputWithContext(context.Context) OpenShiftManagedClusterAADIdentityProviderResponsePtrOutput
}

type openShiftManagedClusterAADIdentityProviderResponsePtrType OpenShiftManagedClusterAADIdentityProviderResponseArgs

func OpenShiftManagedClusterAADIdentityProviderResponsePtr(v *OpenShiftManagedClusterAADIdentityProviderResponseArgs) OpenShiftManagedClusterAADIdentityProviderResponsePtrInput {
	return (*openShiftManagedClusterAADIdentityProviderResponsePtrType)(v)
}

func (*openShiftManagedClusterAADIdentityProviderResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenShiftManagedClusterAADIdentityProviderResponse)(nil)).Elem()
}

func (i *openShiftManagedClusterAADIdentityProviderResponsePtrType) ToOpenShiftManagedClusterAADIdentityProviderResponsePtrOutput() OpenShiftManagedClusterAADIdentityProviderResponsePtrOutput {
	return i.ToOpenShiftManagedClusterAADIdentityProviderResponsePtrOutputWithContext(context.Background())
}

func (i *openShiftManagedClusterAADIdentityProviderResponsePtrType) ToOpenShiftManagedClusterAADIdentityProviderResponsePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterAADIdentityProviderResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterAADIdentityProviderResponsePtrOutput)
}

// Defines the Identity provider for MS AAD.
type OpenShiftManagedClusterAADIdentityProviderResponseOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterAADIdentityProviderResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterAADIdentityProviderResponse)(nil)).Elem()
}

func (o OpenShiftManagedClusterAADIdentityProviderResponseOutput) ToOpenShiftManagedClusterAADIdentityProviderResponseOutput() OpenShiftManagedClusterAADIdentityProviderResponseOutput {
	return o
}

func (o OpenShiftManagedClusterAADIdentityProviderResponseOutput) ToOpenShiftManagedClusterAADIdentityProviderResponseOutputWithContext(ctx context.Context) OpenShiftManagedClusterAADIdentityProviderResponseOutput {
	return o
}

func (o OpenShiftManagedClusterAADIdentityProviderResponseOutput) ToOpenShiftManagedClusterAADIdentityProviderResponsePtrOutput() OpenShiftManagedClusterAADIdentityProviderResponsePtrOutput {
	return o.ToOpenShiftManagedClusterAADIdentityProviderResponsePtrOutputWithContext(context.Background())
}

func (o OpenShiftManagedClusterAADIdentityProviderResponseOutput) ToOpenShiftManagedClusterAADIdentityProviderResponsePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterAADIdentityProviderResponsePtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterAADIdentityProviderResponse) *OpenShiftManagedClusterAADIdentityProviderResponse {
		return &v
	}).(OpenShiftManagedClusterAADIdentityProviderResponsePtrOutput)
}

// The clientId password associated with the provider.
func (o OpenShiftManagedClusterAADIdentityProviderResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterAADIdentityProviderResponse) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The groupId to be granted cluster admin role.
func (o OpenShiftManagedClusterAADIdentityProviderResponseOutput) CustomerAdminGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterAADIdentityProviderResponse) *string { return v.CustomerAdminGroupId }).(pulumi.StringPtrOutput)
}

// The kind of the provider.
func (o OpenShiftManagedClusterAADIdentityProviderResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterAADIdentityProviderResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// The secret password associated with the provider.
func (o OpenShiftManagedClusterAADIdentityProviderResponseOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterAADIdentityProviderResponse) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

// The tenantId associated with the provider.
func (o OpenShiftManagedClusterAADIdentityProviderResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterAADIdentityProviderResponse) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type OpenShiftManagedClusterAADIdentityProviderResponsePtrOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterAADIdentityProviderResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenShiftManagedClusterAADIdentityProviderResponse)(nil)).Elem()
}

func (o OpenShiftManagedClusterAADIdentityProviderResponsePtrOutput) ToOpenShiftManagedClusterAADIdentityProviderResponsePtrOutput() OpenShiftManagedClusterAADIdentityProviderResponsePtrOutput {
	return o
}

func (o OpenShiftManagedClusterAADIdentityProviderResponsePtrOutput) ToOpenShiftManagedClusterAADIdentityProviderResponsePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterAADIdentityProviderResponsePtrOutput {
	return o
}

func (o OpenShiftManagedClusterAADIdentityProviderResponsePtrOutput) Elem() OpenShiftManagedClusterAADIdentityProviderResponseOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterAADIdentityProviderResponse) OpenShiftManagedClusterAADIdentityProviderResponse {
		return *v
	}).(OpenShiftManagedClusterAADIdentityProviderResponseOutput)
}

// The clientId password associated with the provider.
func (o OpenShiftManagedClusterAADIdentityProviderResponsePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterAADIdentityProviderResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The groupId to be granted cluster admin role.
func (o OpenShiftManagedClusterAADIdentityProviderResponsePtrOutput) CustomerAdminGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterAADIdentityProviderResponse) *string {
		if v == nil {
			return nil
		}
		return v.CustomerAdminGroupId
	}).(pulumi.StringPtrOutput)
}

// The kind of the provider.
func (o OpenShiftManagedClusterAADIdentityProviderResponsePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterAADIdentityProviderResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// The secret password associated with the provider.
func (o OpenShiftManagedClusterAADIdentityProviderResponsePtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterAADIdentityProviderResponse) *string {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(pulumi.StringPtrOutput)
}

// The tenantId associated with the provider.
func (o OpenShiftManagedClusterAADIdentityProviderResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterAADIdentityProviderResponse) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Defines the configuration of the OpenShift cluster VMs.
type OpenShiftManagedClusterAgentPoolProfile struct {
	// Number of agents (VMs) to host docker containers.
	Count int `pulumi:"count"`
	// Unique name of the pool profile in the context of the subscription and resource group.
	Name string `pulumi:"name"`
	// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
	OsType *string `pulumi:"osType"`
	// Define the role of the AgentPoolProfile.
	Role *string `pulumi:"role"`
	// Subnet CIDR for the peering.
	SubnetCidr *string `pulumi:"subnetCidr"`
	// Size of agent VMs.
	VmSize string `pulumi:"vmSize"`
}

// OpenShiftManagedClusterAgentPoolProfileInput is an input type that accepts OpenShiftManagedClusterAgentPoolProfileArgs and OpenShiftManagedClusterAgentPoolProfileOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterAgentPoolProfileInput` via:
//
//          OpenShiftManagedClusterAgentPoolProfileArgs{...}
type OpenShiftManagedClusterAgentPoolProfileInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterAgentPoolProfileOutput() OpenShiftManagedClusterAgentPoolProfileOutput
	ToOpenShiftManagedClusterAgentPoolProfileOutputWithContext(context.Context) OpenShiftManagedClusterAgentPoolProfileOutput
}

// Defines the configuration of the OpenShift cluster VMs.
type OpenShiftManagedClusterAgentPoolProfileArgs struct {
	// Number of agents (VMs) to host docker containers.
	Count pulumi.IntInput `pulumi:"count"`
	// Unique name of the pool profile in the context of the subscription and resource group.
	Name pulumi.StringInput `pulumi:"name"`
	// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// Define the role of the AgentPoolProfile.
	Role pulumi.StringPtrInput `pulumi:"role"`
	// Subnet CIDR for the peering.
	SubnetCidr pulumi.StringPtrInput `pulumi:"subnetCidr"`
	// Size of agent VMs.
	VmSize pulumi.StringInput `pulumi:"vmSize"`
}

func (OpenShiftManagedClusterAgentPoolProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterAgentPoolProfile)(nil)).Elem()
}

func (i OpenShiftManagedClusterAgentPoolProfileArgs) ToOpenShiftManagedClusterAgentPoolProfileOutput() OpenShiftManagedClusterAgentPoolProfileOutput {
	return i.ToOpenShiftManagedClusterAgentPoolProfileOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterAgentPoolProfileArgs) ToOpenShiftManagedClusterAgentPoolProfileOutputWithContext(ctx context.Context) OpenShiftManagedClusterAgentPoolProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterAgentPoolProfileOutput)
}

// OpenShiftManagedClusterAgentPoolProfileArrayInput is an input type that accepts OpenShiftManagedClusterAgentPoolProfileArray and OpenShiftManagedClusterAgentPoolProfileArrayOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterAgentPoolProfileArrayInput` via:
//
//          OpenShiftManagedClusterAgentPoolProfileArray{ OpenShiftManagedClusterAgentPoolProfileArgs{...} }
type OpenShiftManagedClusterAgentPoolProfileArrayInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterAgentPoolProfileArrayOutput() OpenShiftManagedClusterAgentPoolProfileArrayOutput
	ToOpenShiftManagedClusterAgentPoolProfileArrayOutputWithContext(context.Context) OpenShiftManagedClusterAgentPoolProfileArrayOutput
}

type OpenShiftManagedClusterAgentPoolProfileArray []OpenShiftManagedClusterAgentPoolProfileInput

func (OpenShiftManagedClusterAgentPoolProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OpenShiftManagedClusterAgentPoolProfile)(nil)).Elem()
}

func (i OpenShiftManagedClusterAgentPoolProfileArray) ToOpenShiftManagedClusterAgentPoolProfileArrayOutput() OpenShiftManagedClusterAgentPoolProfileArrayOutput {
	return i.ToOpenShiftManagedClusterAgentPoolProfileArrayOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterAgentPoolProfileArray) ToOpenShiftManagedClusterAgentPoolProfileArrayOutputWithContext(ctx context.Context) OpenShiftManagedClusterAgentPoolProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterAgentPoolProfileArrayOutput)
}

// Defines the configuration of the OpenShift cluster VMs.
type OpenShiftManagedClusterAgentPoolProfileOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterAgentPoolProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterAgentPoolProfile)(nil)).Elem()
}

func (o OpenShiftManagedClusterAgentPoolProfileOutput) ToOpenShiftManagedClusterAgentPoolProfileOutput() OpenShiftManagedClusterAgentPoolProfileOutput {
	return o
}

func (o OpenShiftManagedClusterAgentPoolProfileOutput) ToOpenShiftManagedClusterAgentPoolProfileOutputWithContext(ctx context.Context) OpenShiftManagedClusterAgentPoolProfileOutput {
	return o
}

// Number of agents (VMs) to host docker containers.
func (o OpenShiftManagedClusterAgentPoolProfileOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterAgentPoolProfile) int { return v.Count }).(pulumi.IntOutput)
}

// Unique name of the pool profile in the context of the subscription and resource group.
func (o OpenShiftManagedClusterAgentPoolProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterAgentPoolProfile) string { return v.Name }).(pulumi.StringOutput)
}

// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
func (o OpenShiftManagedClusterAgentPoolProfileOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterAgentPoolProfile) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// Define the role of the AgentPoolProfile.
func (o OpenShiftManagedClusterAgentPoolProfileOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterAgentPoolProfile) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// Subnet CIDR for the peering.
func (o OpenShiftManagedClusterAgentPoolProfileOutput) SubnetCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterAgentPoolProfile) *string { return v.SubnetCidr }).(pulumi.StringPtrOutput)
}

// Size of agent VMs.
func (o OpenShiftManagedClusterAgentPoolProfileOutput) VmSize() pulumi.StringOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterAgentPoolProfile) string { return v.VmSize }).(pulumi.StringOutput)
}

type OpenShiftManagedClusterAgentPoolProfileArrayOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterAgentPoolProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OpenShiftManagedClusterAgentPoolProfile)(nil)).Elem()
}

func (o OpenShiftManagedClusterAgentPoolProfileArrayOutput) ToOpenShiftManagedClusterAgentPoolProfileArrayOutput() OpenShiftManagedClusterAgentPoolProfileArrayOutput {
	return o
}

func (o OpenShiftManagedClusterAgentPoolProfileArrayOutput) ToOpenShiftManagedClusterAgentPoolProfileArrayOutputWithContext(ctx context.Context) OpenShiftManagedClusterAgentPoolProfileArrayOutput {
	return o
}

func (o OpenShiftManagedClusterAgentPoolProfileArrayOutput) Index(i pulumi.IntInput) OpenShiftManagedClusterAgentPoolProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OpenShiftManagedClusterAgentPoolProfile {
		return vs[0].([]OpenShiftManagedClusterAgentPoolProfile)[vs[1].(int)]
	}).(OpenShiftManagedClusterAgentPoolProfileOutput)
}

// Defines the configuration of the OpenShift cluster VMs.
type OpenShiftManagedClusterAgentPoolProfileResponse struct {
	// Number of agents (VMs) to host docker containers.
	Count int `pulumi:"count"`
	// Unique name of the pool profile in the context of the subscription and resource group.
	Name string `pulumi:"name"`
	// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
	OsType *string `pulumi:"osType"`
	// Define the role of the AgentPoolProfile.
	Role *string `pulumi:"role"`
	// Subnet CIDR for the peering.
	SubnetCidr *string `pulumi:"subnetCidr"`
	// Size of agent VMs.
	VmSize string `pulumi:"vmSize"`
}

// OpenShiftManagedClusterAgentPoolProfileResponseInput is an input type that accepts OpenShiftManagedClusterAgentPoolProfileResponseArgs and OpenShiftManagedClusterAgentPoolProfileResponseOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterAgentPoolProfileResponseInput` via:
//
//          OpenShiftManagedClusterAgentPoolProfileResponseArgs{...}
type OpenShiftManagedClusterAgentPoolProfileResponseInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterAgentPoolProfileResponseOutput() OpenShiftManagedClusterAgentPoolProfileResponseOutput
	ToOpenShiftManagedClusterAgentPoolProfileResponseOutputWithContext(context.Context) OpenShiftManagedClusterAgentPoolProfileResponseOutput
}

// Defines the configuration of the OpenShift cluster VMs.
type OpenShiftManagedClusterAgentPoolProfileResponseArgs struct {
	// Number of agents (VMs) to host docker containers.
	Count pulumi.IntInput `pulumi:"count"`
	// Unique name of the pool profile in the context of the subscription and resource group.
	Name pulumi.StringInput `pulumi:"name"`
	// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// Define the role of the AgentPoolProfile.
	Role pulumi.StringPtrInput `pulumi:"role"`
	// Subnet CIDR for the peering.
	SubnetCidr pulumi.StringPtrInput `pulumi:"subnetCidr"`
	// Size of agent VMs.
	VmSize pulumi.StringInput `pulumi:"vmSize"`
}

func (OpenShiftManagedClusterAgentPoolProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterAgentPoolProfileResponse)(nil)).Elem()
}

func (i OpenShiftManagedClusterAgentPoolProfileResponseArgs) ToOpenShiftManagedClusterAgentPoolProfileResponseOutput() OpenShiftManagedClusterAgentPoolProfileResponseOutput {
	return i.ToOpenShiftManagedClusterAgentPoolProfileResponseOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterAgentPoolProfileResponseArgs) ToOpenShiftManagedClusterAgentPoolProfileResponseOutputWithContext(ctx context.Context) OpenShiftManagedClusterAgentPoolProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterAgentPoolProfileResponseOutput)
}

// OpenShiftManagedClusterAgentPoolProfileResponseArrayInput is an input type that accepts OpenShiftManagedClusterAgentPoolProfileResponseArray and OpenShiftManagedClusterAgentPoolProfileResponseArrayOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterAgentPoolProfileResponseArrayInput` via:
//
//          OpenShiftManagedClusterAgentPoolProfileResponseArray{ OpenShiftManagedClusterAgentPoolProfileResponseArgs{...} }
type OpenShiftManagedClusterAgentPoolProfileResponseArrayInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterAgentPoolProfileResponseArrayOutput() OpenShiftManagedClusterAgentPoolProfileResponseArrayOutput
	ToOpenShiftManagedClusterAgentPoolProfileResponseArrayOutputWithContext(context.Context) OpenShiftManagedClusterAgentPoolProfileResponseArrayOutput
}

type OpenShiftManagedClusterAgentPoolProfileResponseArray []OpenShiftManagedClusterAgentPoolProfileResponseInput

func (OpenShiftManagedClusterAgentPoolProfileResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OpenShiftManagedClusterAgentPoolProfileResponse)(nil)).Elem()
}

func (i OpenShiftManagedClusterAgentPoolProfileResponseArray) ToOpenShiftManagedClusterAgentPoolProfileResponseArrayOutput() OpenShiftManagedClusterAgentPoolProfileResponseArrayOutput {
	return i.ToOpenShiftManagedClusterAgentPoolProfileResponseArrayOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterAgentPoolProfileResponseArray) ToOpenShiftManagedClusterAgentPoolProfileResponseArrayOutputWithContext(ctx context.Context) OpenShiftManagedClusterAgentPoolProfileResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterAgentPoolProfileResponseArrayOutput)
}

// Defines the configuration of the OpenShift cluster VMs.
type OpenShiftManagedClusterAgentPoolProfileResponseOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterAgentPoolProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterAgentPoolProfileResponse)(nil)).Elem()
}

func (o OpenShiftManagedClusterAgentPoolProfileResponseOutput) ToOpenShiftManagedClusterAgentPoolProfileResponseOutput() OpenShiftManagedClusterAgentPoolProfileResponseOutput {
	return o
}

func (o OpenShiftManagedClusterAgentPoolProfileResponseOutput) ToOpenShiftManagedClusterAgentPoolProfileResponseOutputWithContext(ctx context.Context) OpenShiftManagedClusterAgentPoolProfileResponseOutput {
	return o
}

// Number of agents (VMs) to host docker containers.
func (o OpenShiftManagedClusterAgentPoolProfileResponseOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterAgentPoolProfileResponse) int { return v.Count }).(pulumi.IntOutput)
}

// Unique name of the pool profile in the context of the subscription and resource group.
func (o OpenShiftManagedClusterAgentPoolProfileResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterAgentPoolProfileResponse) string { return v.Name }).(pulumi.StringOutput)
}

// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
func (o OpenShiftManagedClusterAgentPoolProfileResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterAgentPoolProfileResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// Define the role of the AgentPoolProfile.
func (o OpenShiftManagedClusterAgentPoolProfileResponseOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterAgentPoolProfileResponse) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// Subnet CIDR for the peering.
func (o OpenShiftManagedClusterAgentPoolProfileResponseOutput) SubnetCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterAgentPoolProfileResponse) *string { return v.SubnetCidr }).(pulumi.StringPtrOutput)
}

// Size of agent VMs.
func (o OpenShiftManagedClusterAgentPoolProfileResponseOutput) VmSize() pulumi.StringOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterAgentPoolProfileResponse) string { return v.VmSize }).(pulumi.StringOutput)
}

type OpenShiftManagedClusterAgentPoolProfileResponseArrayOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterAgentPoolProfileResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OpenShiftManagedClusterAgentPoolProfileResponse)(nil)).Elem()
}

func (o OpenShiftManagedClusterAgentPoolProfileResponseArrayOutput) ToOpenShiftManagedClusterAgentPoolProfileResponseArrayOutput() OpenShiftManagedClusterAgentPoolProfileResponseArrayOutput {
	return o
}

func (o OpenShiftManagedClusterAgentPoolProfileResponseArrayOutput) ToOpenShiftManagedClusterAgentPoolProfileResponseArrayOutputWithContext(ctx context.Context) OpenShiftManagedClusterAgentPoolProfileResponseArrayOutput {
	return o
}

func (o OpenShiftManagedClusterAgentPoolProfileResponseArrayOutput) Index(i pulumi.IntInput) OpenShiftManagedClusterAgentPoolProfileResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OpenShiftManagedClusterAgentPoolProfileResponse {
		return vs[0].([]OpenShiftManagedClusterAgentPoolProfileResponse)[vs[1].(int)]
	}).(OpenShiftManagedClusterAgentPoolProfileResponseOutput)
}

// Defines all possible authentication profiles for the OpenShift cluster.
type OpenShiftManagedClusterAuthProfile struct {
	// Type of authentication profile to use.
	IdentityProviders []OpenShiftManagedClusterIdentityProvider `pulumi:"identityProviders"`
}

// OpenShiftManagedClusterAuthProfileInput is an input type that accepts OpenShiftManagedClusterAuthProfileArgs and OpenShiftManagedClusterAuthProfileOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterAuthProfileInput` via:
//
//          OpenShiftManagedClusterAuthProfileArgs{...}
type OpenShiftManagedClusterAuthProfileInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterAuthProfileOutput() OpenShiftManagedClusterAuthProfileOutput
	ToOpenShiftManagedClusterAuthProfileOutputWithContext(context.Context) OpenShiftManagedClusterAuthProfileOutput
}

// Defines all possible authentication profiles for the OpenShift cluster.
type OpenShiftManagedClusterAuthProfileArgs struct {
	// Type of authentication profile to use.
	IdentityProviders OpenShiftManagedClusterIdentityProviderArrayInput `pulumi:"identityProviders"`
}

func (OpenShiftManagedClusterAuthProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterAuthProfile)(nil)).Elem()
}

func (i OpenShiftManagedClusterAuthProfileArgs) ToOpenShiftManagedClusterAuthProfileOutput() OpenShiftManagedClusterAuthProfileOutput {
	return i.ToOpenShiftManagedClusterAuthProfileOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterAuthProfileArgs) ToOpenShiftManagedClusterAuthProfileOutputWithContext(ctx context.Context) OpenShiftManagedClusterAuthProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterAuthProfileOutput)
}

func (i OpenShiftManagedClusterAuthProfileArgs) ToOpenShiftManagedClusterAuthProfilePtrOutput() OpenShiftManagedClusterAuthProfilePtrOutput {
	return i.ToOpenShiftManagedClusterAuthProfilePtrOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterAuthProfileArgs) ToOpenShiftManagedClusterAuthProfilePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterAuthProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterAuthProfileOutput).ToOpenShiftManagedClusterAuthProfilePtrOutputWithContext(ctx)
}

// OpenShiftManagedClusterAuthProfilePtrInput is an input type that accepts OpenShiftManagedClusterAuthProfileArgs, OpenShiftManagedClusterAuthProfilePtr and OpenShiftManagedClusterAuthProfilePtrOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterAuthProfilePtrInput` via:
//
//          OpenShiftManagedClusterAuthProfileArgs{...}
//
//  or:
//
//          nil
type OpenShiftManagedClusterAuthProfilePtrInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterAuthProfilePtrOutput() OpenShiftManagedClusterAuthProfilePtrOutput
	ToOpenShiftManagedClusterAuthProfilePtrOutputWithContext(context.Context) OpenShiftManagedClusterAuthProfilePtrOutput
}

type openShiftManagedClusterAuthProfilePtrType OpenShiftManagedClusterAuthProfileArgs

func OpenShiftManagedClusterAuthProfilePtr(v *OpenShiftManagedClusterAuthProfileArgs) OpenShiftManagedClusterAuthProfilePtrInput {
	return (*openShiftManagedClusterAuthProfilePtrType)(v)
}

func (*openShiftManagedClusterAuthProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenShiftManagedClusterAuthProfile)(nil)).Elem()
}

func (i *openShiftManagedClusterAuthProfilePtrType) ToOpenShiftManagedClusterAuthProfilePtrOutput() OpenShiftManagedClusterAuthProfilePtrOutput {
	return i.ToOpenShiftManagedClusterAuthProfilePtrOutputWithContext(context.Background())
}

func (i *openShiftManagedClusterAuthProfilePtrType) ToOpenShiftManagedClusterAuthProfilePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterAuthProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterAuthProfilePtrOutput)
}

// Defines all possible authentication profiles for the OpenShift cluster.
type OpenShiftManagedClusterAuthProfileOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterAuthProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterAuthProfile)(nil)).Elem()
}

func (o OpenShiftManagedClusterAuthProfileOutput) ToOpenShiftManagedClusterAuthProfileOutput() OpenShiftManagedClusterAuthProfileOutput {
	return o
}

func (o OpenShiftManagedClusterAuthProfileOutput) ToOpenShiftManagedClusterAuthProfileOutputWithContext(ctx context.Context) OpenShiftManagedClusterAuthProfileOutput {
	return o
}

func (o OpenShiftManagedClusterAuthProfileOutput) ToOpenShiftManagedClusterAuthProfilePtrOutput() OpenShiftManagedClusterAuthProfilePtrOutput {
	return o.ToOpenShiftManagedClusterAuthProfilePtrOutputWithContext(context.Background())
}

func (o OpenShiftManagedClusterAuthProfileOutput) ToOpenShiftManagedClusterAuthProfilePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterAuthProfilePtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterAuthProfile) *OpenShiftManagedClusterAuthProfile {
		return &v
	}).(OpenShiftManagedClusterAuthProfilePtrOutput)
}

// Type of authentication profile to use.
func (o OpenShiftManagedClusterAuthProfileOutput) IdentityProviders() OpenShiftManagedClusterIdentityProviderArrayOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterAuthProfile) []OpenShiftManagedClusterIdentityProvider {
		return v.IdentityProviders
	}).(OpenShiftManagedClusterIdentityProviderArrayOutput)
}

type OpenShiftManagedClusterAuthProfilePtrOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterAuthProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenShiftManagedClusterAuthProfile)(nil)).Elem()
}

func (o OpenShiftManagedClusterAuthProfilePtrOutput) ToOpenShiftManagedClusterAuthProfilePtrOutput() OpenShiftManagedClusterAuthProfilePtrOutput {
	return o
}

func (o OpenShiftManagedClusterAuthProfilePtrOutput) ToOpenShiftManagedClusterAuthProfilePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterAuthProfilePtrOutput {
	return o
}

func (o OpenShiftManagedClusterAuthProfilePtrOutput) Elem() OpenShiftManagedClusterAuthProfileOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterAuthProfile) OpenShiftManagedClusterAuthProfile { return *v }).(OpenShiftManagedClusterAuthProfileOutput)
}

// Type of authentication profile to use.
func (o OpenShiftManagedClusterAuthProfilePtrOutput) IdentityProviders() OpenShiftManagedClusterIdentityProviderArrayOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterAuthProfile) []OpenShiftManagedClusterIdentityProvider {
		if v == nil {
			return nil
		}
		return v.IdentityProviders
	}).(OpenShiftManagedClusterIdentityProviderArrayOutput)
}

// Defines all possible authentication profiles for the OpenShift cluster.
type OpenShiftManagedClusterAuthProfileResponse struct {
	// Type of authentication profile to use.
	IdentityProviders []OpenShiftManagedClusterIdentityProviderResponse `pulumi:"identityProviders"`
}

// OpenShiftManagedClusterAuthProfileResponseInput is an input type that accepts OpenShiftManagedClusterAuthProfileResponseArgs and OpenShiftManagedClusterAuthProfileResponseOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterAuthProfileResponseInput` via:
//
//          OpenShiftManagedClusterAuthProfileResponseArgs{...}
type OpenShiftManagedClusterAuthProfileResponseInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterAuthProfileResponseOutput() OpenShiftManagedClusterAuthProfileResponseOutput
	ToOpenShiftManagedClusterAuthProfileResponseOutputWithContext(context.Context) OpenShiftManagedClusterAuthProfileResponseOutput
}

// Defines all possible authentication profiles for the OpenShift cluster.
type OpenShiftManagedClusterAuthProfileResponseArgs struct {
	// Type of authentication profile to use.
	IdentityProviders OpenShiftManagedClusterIdentityProviderResponseArrayInput `pulumi:"identityProviders"`
}

func (OpenShiftManagedClusterAuthProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterAuthProfileResponse)(nil)).Elem()
}

func (i OpenShiftManagedClusterAuthProfileResponseArgs) ToOpenShiftManagedClusterAuthProfileResponseOutput() OpenShiftManagedClusterAuthProfileResponseOutput {
	return i.ToOpenShiftManagedClusterAuthProfileResponseOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterAuthProfileResponseArgs) ToOpenShiftManagedClusterAuthProfileResponseOutputWithContext(ctx context.Context) OpenShiftManagedClusterAuthProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterAuthProfileResponseOutput)
}

func (i OpenShiftManagedClusterAuthProfileResponseArgs) ToOpenShiftManagedClusterAuthProfileResponsePtrOutput() OpenShiftManagedClusterAuthProfileResponsePtrOutput {
	return i.ToOpenShiftManagedClusterAuthProfileResponsePtrOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterAuthProfileResponseArgs) ToOpenShiftManagedClusterAuthProfileResponsePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterAuthProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterAuthProfileResponseOutput).ToOpenShiftManagedClusterAuthProfileResponsePtrOutputWithContext(ctx)
}

// OpenShiftManagedClusterAuthProfileResponsePtrInput is an input type that accepts OpenShiftManagedClusterAuthProfileResponseArgs, OpenShiftManagedClusterAuthProfileResponsePtr and OpenShiftManagedClusterAuthProfileResponsePtrOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterAuthProfileResponsePtrInput` via:
//
//          OpenShiftManagedClusterAuthProfileResponseArgs{...}
//
//  or:
//
//          nil
type OpenShiftManagedClusterAuthProfileResponsePtrInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterAuthProfileResponsePtrOutput() OpenShiftManagedClusterAuthProfileResponsePtrOutput
	ToOpenShiftManagedClusterAuthProfileResponsePtrOutputWithContext(context.Context) OpenShiftManagedClusterAuthProfileResponsePtrOutput
}

type openShiftManagedClusterAuthProfileResponsePtrType OpenShiftManagedClusterAuthProfileResponseArgs

func OpenShiftManagedClusterAuthProfileResponsePtr(v *OpenShiftManagedClusterAuthProfileResponseArgs) OpenShiftManagedClusterAuthProfileResponsePtrInput {
	return (*openShiftManagedClusterAuthProfileResponsePtrType)(v)
}

func (*openShiftManagedClusterAuthProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenShiftManagedClusterAuthProfileResponse)(nil)).Elem()
}

func (i *openShiftManagedClusterAuthProfileResponsePtrType) ToOpenShiftManagedClusterAuthProfileResponsePtrOutput() OpenShiftManagedClusterAuthProfileResponsePtrOutput {
	return i.ToOpenShiftManagedClusterAuthProfileResponsePtrOutputWithContext(context.Background())
}

func (i *openShiftManagedClusterAuthProfileResponsePtrType) ToOpenShiftManagedClusterAuthProfileResponsePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterAuthProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterAuthProfileResponsePtrOutput)
}

// Defines all possible authentication profiles for the OpenShift cluster.
type OpenShiftManagedClusterAuthProfileResponseOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterAuthProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterAuthProfileResponse)(nil)).Elem()
}

func (o OpenShiftManagedClusterAuthProfileResponseOutput) ToOpenShiftManagedClusterAuthProfileResponseOutput() OpenShiftManagedClusterAuthProfileResponseOutput {
	return o
}

func (o OpenShiftManagedClusterAuthProfileResponseOutput) ToOpenShiftManagedClusterAuthProfileResponseOutputWithContext(ctx context.Context) OpenShiftManagedClusterAuthProfileResponseOutput {
	return o
}

func (o OpenShiftManagedClusterAuthProfileResponseOutput) ToOpenShiftManagedClusterAuthProfileResponsePtrOutput() OpenShiftManagedClusterAuthProfileResponsePtrOutput {
	return o.ToOpenShiftManagedClusterAuthProfileResponsePtrOutputWithContext(context.Background())
}

func (o OpenShiftManagedClusterAuthProfileResponseOutput) ToOpenShiftManagedClusterAuthProfileResponsePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterAuthProfileResponsePtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterAuthProfileResponse) *OpenShiftManagedClusterAuthProfileResponse {
		return &v
	}).(OpenShiftManagedClusterAuthProfileResponsePtrOutput)
}

// Type of authentication profile to use.
func (o OpenShiftManagedClusterAuthProfileResponseOutput) IdentityProviders() OpenShiftManagedClusterIdentityProviderResponseArrayOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterAuthProfileResponse) []OpenShiftManagedClusterIdentityProviderResponse {
		return v.IdentityProviders
	}).(OpenShiftManagedClusterIdentityProviderResponseArrayOutput)
}

type OpenShiftManagedClusterAuthProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterAuthProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenShiftManagedClusterAuthProfileResponse)(nil)).Elem()
}

func (o OpenShiftManagedClusterAuthProfileResponsePtrOutput) ToOpenShiftManagedClusterAuthProfileResponsePtrOutput() OpenShiftManagedClusterAuthProfileResponsePtrOutput {
	return o
}

func (o OpenShiftManagedClusterAuthProfileResponsePtrOutput) ToOpenShiftManagedClusterAuthProfileResponsePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterAuthProfileResponsePtrOutput {
	return o
}

func (o OpenShiftManagedClusterAuthProfileResponsePtrOutput) Elem() OpenShiftManagedClusterAuthProfileResponseOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterAuthProfileResponse) OpenShiftManagedClusterAuthProfileResponse {
		return *v
	}).(OpenShiftManagedClusterAuthProfileResponseOutput)
}

// Type of authentication profile to use.
func (o OpenShiftManagedClusterAuthProfileResponsePtrOutput) IdentityProviders() OpenShiftManagedClusterIdentityProviderResponseArrayOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterAuthProfileResponse) []OpenShiftManagedClusterIdentityProviderResponse {
		if v == nil {
			return nil
		}
		return v.IdentityProviders
	}).(OpenShiftManagedClusterIdentityProviderResponseArrayOutput)
}

// Defines the configuration of the identity providers to be used in the OpenShift cluster.
type OpenShiftManagedClusterIdentityProvider struct {
	// Name of the provider.
	Name *string `pulumi:"name"`
	// Configuration of the provider.
	Provider *OpenShiftManagedClusterAADIdentityProvider `pulumi:"provider"`
}

// OpenShiftManagedClusterIdentityProviderInput is an input type that accepts OpenShiftManagedClusterIdentityProviderArgs and OpenShiftManagedClusterIdentityProviderOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterIdentityProviderInput` via:
//
//          OpenShiftManagedClusterIdentityProviderArgs{...}
type OpenShiftManagedClusterIdentityProviderInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterIdentityProviderOutput() OpenShiftManagedClusterIdentityProviderOutput
	ToOpenShiftManagedClusterIdentityProviderOutputWithContext(context.Context) OpenShiftManagedClusterIdentityProviderOutput
}

// Defines the configuration of the identity providers to be used in the OpenShift cluster.
type OpenShiftManagedClusterIdentityProviderArgs struct {
	// Name of the provider.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Configuration of the provider.
	Provider OpenShiftManagedClusterAADIdentityProviderPtrInput `pulumi:"provider"`
}

func (OpenShiftManagedClusterIdentityProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterIdentityProvider)(nil)).Elem()
}

func (i OpenShiftManagedClusterIdentityProviderArgs) ToOpenShiftManagedClusterIdentityProviderOutput() OpenShiftManagedClusterIdentityProviderOutput {
	return i.ToOpenShiftManagedClusterIdentityProviderOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterIdentityProviderArgs) ToOpenShiftManagedClusterIdentityProviderOutputWithContext(ctx context.Context) OpenShiftManagedClusterIdentityProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterIdentityProviderOutput)
}

// OpenShiftManagedClusterIdentityProviderArrayInput is an input type that accepts OpenShiftManagedClusterIdentityProviderArray and OpenShiftManagedClusterIdentityProviderArrayOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterIdentityProviderArrayInput` via:
//
//          OpenShiftManagedClusterIdentityProviderArray{ OpenShiftManagedClusterIdentityProviderArgs{...} }
type OpenShiftManagedClusterIdentityProviderArrayInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterIdentityProviderArrayOutput() OpenShiftManagedClusterIdentityProviderArrayOutput
	ToOpenShiftManagedClusterIdentityProviderArrayOutputWithContext(context.Context) OpenShiftManagedClusterIdentityProviderArrayOutput
}

type OpenShiftManagedClusterIdentityProviderArray []OpenShiftManagedClusterIdentityProviderInput

func (OpenShiftManagedClusterIdentityProviderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OpenShiftManagedClusterIdentityProvider)(nil)).Elem()
}

func (i OpenShiftManagedClusterIdentityProviderArray) ToOpenShiftManagedClusterIdentityProviderArrayOutput() OpenShiftManagedClusterIdentityProviderArrayOutput {
	return i.ToOpenShiftManagedClusterIdentityProviderArrayOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterIdentityProviderArray) ToOpenShiftManagedClusterIdentityProviderArrayOutputWithContext(ctx context.Context) OpenShiftManagedClusterIdentityProviderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterIdentityProviderArrayOutput)
}

// Defines the configuration of the identity providers to be used in the OpenShift cluster.
type OpenShiftManagedClusterIdentityProviderOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterIdentityProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterIdentityProvider)(nil)).Elem()
}

func (o OpenShiftManagedClusterIdentityProviderOutput) ToOpenShiftManagedClusterIdentityProviderOutput() OpenShiftManagedClusterIdentityProviderOutput {
	return o
}

func (o OpenShiftManagedClusterIdentityProviderOutput) ToOpenShiftManagedClusterIdentityProviderOutputWithContext(ctx context.Context) OpenShiftManagedClusterIdentityProviderOutput {
	return o
}

// Name of the provider.
func (o OpenShiftManagedClusterIdentityProviderOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterIdentityProvider) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Configuration of the provider.
func (o OpenShiftManagedClusterIdentityProviderOutput) Provider() OpenShiftManagedClusterAADIdentityProviderPtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterIdentityProvider) *OpenShiftManagedClusterAADIdentityProvider {
		return v.Provider
	}).(OpenShiftManagedClusterAADIdentityProviderPtrOutput)
}

type OpenShiftManagedClusterIdentityProviderArrayOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterIdentityProviderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OpenShiftManagedClusterIdentityProvider)(nil)).Elem()
}

func (o OpenShiftManagedClusterIdentityProviderArrayOutput) ToOpenShiftManagedClusterIdentityProviderArrayOutput() OpenShiftManagedClusterIdentityProviderArrayOutput {
	return o
}

func (o OpenShiftManagedClusterIdentityProviderArrayOutput) ToOpenShiftManagedClusterIdentityProviderArrayOutputWithContext(ctx context.Context) OpenShiftManagedClusterIdentityProviderArrayOutput {
	return o
}

func (o OpenShiftManagedClusterIdentityProviderArrayOutput) Index(i pulumi.IntInput) OpenShiftManagedClusterIdentityProviderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OpenShiftManagedClusterIdentityProvider {
		return vs[0].([]OpenShiftManagedClusterIdentityProvider)[vs[1].(int)]
	}).(OpenShiftManagedClusterIdentityProviderOutput)
}

// Defines the configuration of the identity providers to be used in the OpenShift cluster.
type OpenShiftManagedClusterIdentityProviderResponse struct {
	// Name of the provider.
	Name *string `pulumi:"name"`
	// Configuration of the provider.
	Provider *OpenShiftManagedClusterAADIdentityProviderResponse `pulumi:"provider"`
}

// OpenShiftManagedClusterIdentityProviderResponseInput is an input type that accepts OpenShiftManagedClusterIdentityProviderResponseArgs and OpenShiftManagedClusterIdentityProviderResponseOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterIdentityProviderResponseInput` via:
//
//          OpenShiftManagedClusterIdentityProviderResponseArgs{...}
type OpenShiftManagedClusterIdentityProviderResponseInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterIdentityProviderResponseOutput() OpenShiftManagedClusterIdentityProviderResponseOutput
	ToOpenShiftManagedClusterIdentityProviderResponseOutputWithContext(context.Context) OpenShiftManagedClusterIdentityProviderResponseOutput
}

// Defines the configuration of the identity providers to be used in the OpenShift cluster.
type OpenShiftManagedClusterIdentityProviderResponseArgs struct {
	// Name of the provider.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Configuration of the provider.
	Provider OpenShiftManagedClusterAADIdentityProviderResponsePtrInput `pulumi:"provider"`
}

func (OpenShiftManagedClusterIdentityProviderResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterIdentityProviderResponse)(nil)).Elem()
}

func (i OpenShiftManagedClusterIdentityProviderResponseArgs) ToOpenShiftManagedClusterIdentityProviderResponseOutput() OpenShiftManagedClusterIdentityProviderResponseOutput {
	return i.ToOpenShiftManagedClusterIdentityProviderResponseOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterIdentityProviderResponseArgs) ToOpenShiftManagedClusterIdentityProviderResponseOutputWithContext(ctx context.Context) OpenShiftManagedClusterIdentityProviderResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterIdentityProviderResponseOutput)
}

// OpenShiftManagedClusterIdentityProviderResponseArrayInput is an input type that accepts OpenShiftManagedClusterIdentityProviderResponseArray and OpenShiftManagedClusterIdentityProviderResponseArrayOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterIdentityProviderResponseArrayInput` via:
//
//          OpenShiftManagedClusterIdentityProviderResponseArray{ OpenShiftManagedClusterIdentityProviderResponseArgs{...} }
type OpenShiftManagedClusterIdentityProviderResponseArrayInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterIdentityProviderResponseArrayOutput() OpenShiftManagedClusterIdentityProviderResponseArrayOutput
	ToOpenShiftManagedClusterIdentityProviderResponseArrayOutputWithContext(context.Context) OpenShiftManagedClusterIdentityProviderResponseArrayOutput
}

type OpenShiftManagedClusterIdentityProviderResponseArray []OpenShiftManagedClusterIdentityProviderResponseInput

func (OpenShiftManagedClusterIdentityProviderResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OpenShiftManagedClusterIdentityProviderResponse)(nil)).Elem()
}

func (i OpenShiftManagedClusterIdentityProviderResponseArray) ToOpenShiftManagedClusterIdentityProviderResponseArrayOutput() OpenShiftManagedClusterIdentityProviderResponseArrayOutput {
	return i.ToOpenShiftManagedClusterIdentityProviderResponseArrayOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterIdentityProviderResponseArray) ToOpenShiftManagedClusterIdentityProviderResponseArrayOutputWithContext(ctx context.Context) OpenShiftManagedClusterIdentityProviderResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterIdentityProviderResponseArrayOutput)
}

// Defines the configuration of the identity providers to be used in the OpenShift cluster.
type OpenShiftManagedClusterIdentityProviderResponseOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterIdentityProviderResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterIdentityProviderResponse)(nil)).Elem()
}

func (o OpenShiftManagedClusterIdentityProviderResponseOutput) ToOpenShiftManagedClusterIdentityProviderResponseOutput() OpenShiftManagedClusterIdentityProviderResponseOutput {
	return o
}

func (o OpenShiftManagedClusterIdentityProviderResponseOutput) ToOpenShiftManagedClusterIdentityProviderResponseOutputWithContext(ctx context.Context) OpenShiftManagedClusterIdentityProviderResponseOutput {
	return o
}

// Name of the provider.
func (o OpenShiftManagedClusterIdentityProviderResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterIdentityProviderResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Configuration of the provider.
func (o OpenShiftManagedClusterIdentityProviderResponseOutput) Provider() OpenShiftManagedClusterAADIdentityProviderResponsePtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterIdentityProviderResponse) *OpenShiftManagedClusterAADIdentityProviderResponse {
		return v.Provider
	}).(OpenShiftManagedClusterAADIdentityProviderResponsePtrOutput)
}

type OpenShiftManagedClusterIdentityProviderResponseArrayOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterIdentityProviderResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OpenShiftManagedClusterIdentityProviderResponse)(nil)).Elem()
}

func (o OpenShiftManagedClusterIdentityProviderResponseArrayOutput) ToOpenShiftManagedClusterIdentityProviderResponseArrayOutput() OpenShiftManagedClusterIdentityProviderResponseArrayOutput {
	return o
}

func (o OpenShiftManagedClusterIdentityProviderResponseArrayOutput) ToOpenShiftManagedClusterIdentityProviderResponseArrayOutputWithContext(ctx context.Context) OpenShiftManagedClusterIdentityProviderResponseArrayOutput {
	return o
}

func (o OpenShiftManagedClusterIdentityProviderResponseArrayOutput) Index(i pulumi.IntInput) OpenShiftManagedClusterIdentityProviderResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OpenShiftManagedClusterIdentityProviderResponse {
		return vs[0].([]OpenShiftManagedClusterIdentityProviderResponse)[vs[1].(int)]
	}).(OpenShiftManagedClusterIdentityProviderResponseOutput)
}

// OpenShiftManagedClusterMaterPoolProfile contains configuration for OpenShift master VMs.
type OpenShiftManagedClusterMasterPoolProfile struct {
	// Number of masters (VMs) to host docker containers. The default value is 3.
	Count int `pulumi:"count"`
	// Unique name of the master pool profile in the context of the subscription and resource group.
	Name *string `pulumi:"name"`
	// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
	OsType *string `pulumi:"osType"`
	// Subnet CIDR for the peering.
	SubnetCidr *string `pulumi:"subnetCidr"`
	// Size of agent VMs.
	VmSize string `pulumi:"vmSize"`
}

// OpenShiftManagedClusterMasterPoolProfileInput is an input type that accepts OpenShiftManagedClusterMasterPoolProfileArgs and OpenShiftManagedClusterMasterPoolProfileOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterMasterPoolProfileInput` via:
//
//          OpenShiftManagedClusterMasterPoolProfileArgs{...}
type OpenShiftManagedClusterMasterPoolProfileInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterMasterPoolProfileOutput() OpenShiftManagedClusterMasterPoolProfileOutput
	ToOpenShiftManagedClusterMasterPoolProfileOutputWithContext(context.Context) OpenShiftManagedClusterMasterPoolProfileOutput
}

// OpenShiftManagedClusterMaterPoolProfile contains configuration for OpenShift master VMs.
type OpenShiftManagedClusterMasterPoolProfileArgs struct {
	// Number of masters (VMs) to host docker containers. The default value is 3.
	Count pulumi.IntInput `pulumi:"count"`
	// Unique name of the master pool profile in the context of the subscription and resource group.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// Subnet CIDR for the peering.
	SubnetCidr pulumi.StringPtrInput `pulumi:"subnetCidr"`
	// Size of agent VMs.
	VmSize pulumi.StringInput `pulumi:"vmSize"`
}

func (OpenShiftManagedClusterMasterPoolProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterMasterPoolProfile)(nil)).Elem()
}

func (i OpenShiftManagedClusterMasterPoolProfileArgs) ToOpenShiftManagedClusterMasterPoolProfileOutput() OpenShiftManagedClusterMasterPoolProfileOutput {
	return i.ToOpenShiftManagedClusterMasterPoolProfileOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterMasterPoolProfileArgs) ToOpenShiftManagedClusterMasterPoolProfileOutputWithContext(ctx context.Context) OpenShiftManagedClusterMasterPoolProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterMasterPoolProfileOutput)
}

func (i OpenShiftManagedClusterMasterPoolProfileArgs) ToOpenShiftManagedClusterMasterPoolProfilePtrOutput() OpenShiftManagedClusterMasterPoolProfilePtrOutput {
	return i.ToOpenShiftManagedClusterMasterPoolProfilePtrOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterMasterPoolProfileArgs) ToOpenShiftManagedClusterMasterPoolProfilePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterMasterPoolProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterMasterPoolProfileOutput).ToOpenShiftManagedClusterMasterPoolProfilePtrOutputWithContext(ctx)
}

// OpenShiftManagedClusterMasterPoolProfilePtrInput is an input type that accepts OpenShiftManagedClusterMasterPoolProfileArgs, OpenShiftManagedClusterMasterPoolProfilePtr and OpenShiftManagedClusterMasterPoolProfilePtrOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterMasterPoolProfilePtrInput` via:
//
//          OpenShiftManagedClusterMasterPoolProfileArgs{...}
//
//  or:
//
//          nil
type OpenShiftManagedClusterMasterPoolProfilePtrInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterMasterPoolProfilePtrOutput() OpenShiftManagedClusterMasterPoolProfilePtrOutput
	ToOpenShiftManagedClusterMasterPoolProfilePtrOutputWithContext(context.Context) OpenShiftManagedClusterMasterPoolProfilePtrOutput
}

type openShiftManagedClusterMasterPoolProfilePtrType OpenShiftManagedClusterMasterPoolProfileArgs

func OpenShiftManagedClusterMasterPoolProfilePtr(v *OpenShiftManagedClusterMasterPoolProfileArgs) OpenShiftManagedClusterMasterPoolProfilePtrInput {
	return (*openShiftManagedClusterMasterPoolProfilePtrType)(v)
}

func (*openShiftManagedClusterMasterPoolProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenShiftManagedClusterMasterPoolProfile)(nil)).Elem()
}

func (i *openShiftManagedClusterMasterPoolProfilePtrType) ToOpenShiftManagedClusterMasterPoolProfilePtrOutput() OpenShiftManagedClusterMasterPoolProfilePtrOutput {
	return i.ToOpenShiftManagedClusterMasterPoolProfilePtrOutputWithContext(context.Background())
}

func (i *openShiftManagedClusterMasterPoolProfilePtrType) ToOpenShiftManagedClusterMasterPoolProfilePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterMasterPoolProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterMasterPoolProfilePtrOutput)
}

// OpenShiftManagedClusterMaterPoolProfile contains configuration for OpenShift master VMs.
type OpenShiftManagedClusterMasterPoolProfileOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterMasterPoolProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterMasterPoolProfile)(nil)).Elem()
}

func (o OpenShiftManagedClusterMasterPoolProfileOutput) ToOpenShiftManagedClusterMasterPoolProfileOutput() OpenShiftManagedClusterMasterPoolProfileOutput {
	return o
}

func (o OpenShiftManagedClusterMasterPoolProfileOutput) ToOpenShiftManagedClusterMasterPoolProfileOutputWithContext(ctx context.Context) OpenShiftManagedClusterMasterPoolProfileOutput {
	return o
}

func (o OpenShiftManagedClusterMasterPoolProfileOutput) ToOpenShiftManagedClusterMasterPoolProfilePtrOutput() OpenShiftManagedClusterMasterPoolProfilePtrOutput {
	return o.ToOpenShiftManagedClusterMasterPoolProfilePtrOutputWithContext(context.Background())
}

func (o OpenShiftManagedClusterMasterPoolProfileOutput) ToOpenShiftManagedClusterMasterPoolProfilePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterMasterPoolProfilePtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterMasterPoolProfile) *OpenShiftManagedClusterMasterPoolProfile {
		return &v
	}).(OpenShiftManagedClusterMasterPoolProfilePtrOutput)
}

// Number of masters (VMs) to host docker containers. The default value is 3.
func (o OpenShiftManagedClusterMasterPoolProfileOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterMasterPoolProfile) int { return v.Count }).(pulumi.IntOutput)
}

// Unique name of the master pool profile in the context of the subscription and resource group.
func (o OpenShiftManagedClusterMasterPoolProfileOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterMasterPoolProfile) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
func (o OpenShiftManagedClusterMasterPoolProfileOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterMasterPoolProfile) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// Subnet CIDR for the peering.
func (o OpenShiftManagedClusterMasterPoolProfileOutput) SubnetCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterMasterPoolProfile) *string { return v.SubnetCidr }).(pulumi.StringPtrOutput)
}

// Size of agent VMs.
func (o OpenShiftManagedClusterMasterPoolProfileOutput) VmSize() pulumi.StringOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterMasterPoolProfile) string { return v.VmSize }).(pulumi.StringOutput)
}

type OpenShiftManagedClusterMasterPoolProfilePtrOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterMasterPoolProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenShiftManagedClusterMasterPoolProfile)(nil)).Elem()
}

func (o OpenShiftManagedClusterMasterPoolProfilePtrOutput) ToOpenShiftManagedClusterMasterPoolProfilePtrOutput() OpenShiftManagedClusterMasterPoolProfilePtrOutput {
	return o
}

func (o OpenShiftManagedClusterMasterPoolProfilePtrOutput) ToOpenShiftManagedClusterMasterPoolProfilePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterMasterPoolProfilePtrOutput {
	return o
}

func (o OpenShiftManagedClusterMasterPoolProfilePtrOutput) Elem() OpenShiftManagedClusterMasterPoolProfileOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterMasterPoolProfile) OpenShiftManagedClusterMasterPoolProfile { return *v }).(OpenShiftManagedClusterMasterPoolProfileOutput)
}

// Number of masters (VMs) to host docker containers. The default value is 3.
func (o OpenShiftManagedClusterMasterPoolProfilePtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterMasterPoolProfile) *int {
		if v == nil {
			return nil
		}
		return &v.Count
	}).(pulumi.IntPtrOutput)
}

// Unique name of the master pool profile in the context of the subscription and resource group.
func (o OpenShiftManagedClusterMasterPoolProfilePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterMasterPoolProfile) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
func (o OpenShiftManagedClusterMasterPoolProfilePtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterMasterPoolProfile) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// Subnet CIDR for the peering.
func (o OpenShiftManagedClusterMasterPoolProfilePtrOutput) SubnetCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterMasterPoolProfile) *string {
		if v == nil {
			return nil
		}
		return v.SubnetCidr
	}).(pulumi.StringPtrOutput)
}

// Size of agent VMs.
func (o OpenShiftManagedClusterMasterPoolProfilePtrOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterMasterPoolProfile) *string {
		if v == nil {
			return nil
		}
		return &v.VmSize
	}).(pulumi.StringPtrOutput)
}

// OpenShiftManagedClusterMaterPoolProfile contains configuration for OpenShift master VMs.
type OpenShiftManagedClusterMasterPoolProfileResponse struct {
	// Number of masters (VMs) to host docker containers. The default value is 3.
	Count int `pulumi:"count"`
	// Unique name of the master pool profile in the context of the subscription and resource group.
	Name *string `pulumi:"name"`
	// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
	OsType *string `pulumi:"osType"`
	// Subnet CIDR for the peering.
	SubnetCidr *string `pulumi:"subnetCidr"`
	// Size of agent VMs.
	VmSize string `pulumi:"vmSize"`
}

// OpenShiftManagedClusterMasterPoolProfileResponseInput is an input type that accepts OpenShiftManagedClusterMasterPoolProfileResponseArgs and OpenShiftManagedClusterMasterPoolProfileResponseOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterMasterPoolProfileResponseInput` via:
//
//          OpenShiftManagedClusterMasterPoolProfileResponseArgs{...}
type OpenShiftManagedClusterMasterPoolProfileResponseInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterMasterPoolProfileResponseOutput() OpenShiftManagedClusterMasterPoolProfileResponseOutput
	ToOpenShiftManagedClusterMasterPoolProfileResponseOutputWithContext(context.Context) OpenShiftManagedClusterMasterPoolProfileResponseOutput
}

// OpenShiftManagedClusterMaterPoolProfile contains configuration for OpenShift master VMs.
type OpenShiftManagedClusterMasterPoolProfileResponseArgs struct {
	// Number of masters (VMs) to host docker containers. The default value is 3.
	Count pulumi.IntInput `pulumi:"count"`
	// Unique name of the master pool profile in the context of the subscription and resource group.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// Subnet CIDR for the peering.
	SubnetCidr pulumi.StringPtrInput `pulumi:"subnetCidr"`
	// Size of agent VMs.
	VmSize pulumi.StringInput `pulumi:"vmSize"`
}

func (OpenShiftManagedClusterMasterPoolProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterMasterPoolProfileResponse)(nil)).Elem()
}

func (i OpenShiftManagedClusterMasterPoolProfileResponseArgs) ToOpenShiftManagedClusterMasterPoolProfileResponseOutput() OpenShiftManagedClusterMasterPoolProfileResponseOutput {
	return i.ToOpenShiftManagedClusterMasterPoolProfileResponseOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterMasterPoolProfileResponseArgs) ToOpenShiftManagedClusterMasterPoolProfileResponseOutputWithContext(ctx context.Context) OpenShiftManagedClusterMasterPoolProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterMasterPoolProfileResponseOutput)
}

func (i OpenShiftManagedClusterMasterPoolProfileResponseArgs) ToOpenShiftManagedClusterMasterPoolProfileResponsePtrOutput() OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput {
	return i.ToOpenShiftManagedClusterMasterPoolProfileResponsePtrOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterMasterPoolProfileResponseArgs) ToOpenShiftManagedClusterMasterPoolProfileResponsePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterMasterPoolProfileResponseOutput).ToOpenShiftManagedClusterMasterPoolProfileResponsePtrOutputWithContext(ctx)
}

// OpenShiftManagedClusterMasterPoolProfileResponsePtrInput is an input type that accepts OpenShiftManagedClusterMasterPoolProfileResponseArgs, OpenShiftManagedClusterMasterPoolProfileResponsePtr and OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterMasterPoolProfileResponsePtrInput` via:
//
//          OpenShiftManagedClusterMasterPoolProfileResponseArgs{...}
//
//  or:
//
//          nil
type OpenShiftManagedClusterMasterPoolProfileResponsePtrInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterMasterPoolProfileResponsePtrOutput() OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput
	ToOpenShiftManagedClusterMasterPoolProfileResponsePtrOutputWithContext(context.Context) OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput
}

type openShiftManagedClusterMasterPoolProfileResponsePtrType OpenShiftManagedClusterMasterPoolProfileResponseArgs

func OpenShiftManagedClusterMasterPoolProfileResponsePtr(v *OpenShiftManagedClusterMasterPoolProfileResponseArgs) OpenShiftManagedClusterMasterPoolProfileResponsePtrInput {
	return (*openShiftManagedClusterMasterPoolProfileResponsePtrType)(v)
}

func (*openShiftManagedClusterMasterPoolProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenShiftManagedClusterMasterPoolProfileResponse)(nil)).Elem()
}

func (i *openShiftManagedClusterMasterPoolProfileResponsePtrType) ToOpenShiftManagedClusterMasterPoolProfileResponsePtrOutput() OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput {
	return i.ToOpenShiftManagedClusterMasterPoolProfileResponsePtrOutputWithContext(context.Background())
}

func (i *openShiftManagedClusterMasterPoolProfileResponsePtrType) ToOpenShiftManagedClusterMasterPoolProfileResponsePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput)
}

// OpenShiftManagedClusterMaterPoolProfile contains configuration for OpenShift master VMs.
type OpenShiftManagedClusterMasterPoolProfileResponseOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterMasterPoolProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterMasterPoolProfileResponse)(nil)).Elem()
}

func (o OpenShiftManagedClusterMasterPoolProfileResponseOutput) ToOpenShiftManagedClusterMasterPoolProfileResponseOutput() OpenShiftManagedClusterMasterPoolProfileResponseOutput {
	return o
}

func (o OpenShiftManagedClusterMasterPoolProfileResponseOutput) ToOpenShiftManagedClusterMasterPoolProfileResponseOutputWithContext(ctx context.Context) OpenShiftManagedClusterMasterPoolProfileResponseOutput {
	return o
}

func (o OpenShiftManagedClusterMasterPoolProfileResponseOutput) ToOpenShiftManagedClusterMasterPoolProfileResponsePtrOutput() OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput {
	return o.ToOpenShiftManagedClusterMasterPoolProfileResponsePtrOutputWithContext(context.Background())
}

func (o OpenShiftManagedClusterMasterPoolProfileResponseOutput) ToOpenShiftManagedClusterMasterPoolProfileResponsePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterMasterPoolProfileResponse) *OpenShiftManagedClusterMasterPoolProfileResponse {
		return &v
	}).(OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput)
}

// Number of masters (VMs) to host docker containers. The default value is 3.
func (o OpenShiftManagedClusterMasterPoolProfileResponseOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterMasterPoolProfileResponse) int { return v.Count }).(pulumi.IntOutput)
}

// Unique name of the master pool profile in the context of the subscription and resource group.
func (o OpenShiftManagedClusterMasterPoolProfileResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterMasterPoolProfileResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
func (o OpenShiftManagedClusterMasterPoolProfileResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterMasterPoolProfileResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// Subnet CIDR for the peering.
func (o OpenShiftManagedClusterMasterPoolProfileResponseOutput) SubnetCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterMasterPoolProfileResponse) *string { return v.SubnetCidr }).(pulumi.StringPtrOutput)
}

// Size of agent VMs.
func (o OpenShiftManagedClusterMasterPoolProfileResponseOutput) VmSize() pulumi.StringOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterMasterPoolProfileResponse) string { return v.VmSize }).(pulumi.StringOutput)
}

type OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenShiftManagedClusterMasterPoolProfileResponse)(nil)).Elem()
}

func (o OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput) ToOpenShiftManagedClusterMasterPoolProfileResponsePtrOutput() OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput {
	return o
}

func (o OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput) ToOpenShiftManagedClusterMasterPoolProfileResponsePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput {
	return o
}

func (o OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput) Elem() OpenShiftManagedClusterMasterPoolProfileResponseOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterMasterPoolProfileResponse) OpenShiftManagedClusterMasterPoolProfileResponse {
		return *v
	}).(OpenShiftManagedClusterMasterPoolProfileResponseOutput)
}

// Number of masters (VMs) to host docker containers. The default value is 3.
func (o OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterMasterPoolProfileResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Count
	}).(pulumi.IntPtrOutput)
}

// Unique name of the master pool profile in the context of the subscription and resource group.
func (o OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterMasterPoolProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
func (o OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterMasterPoolProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// Subnet CIDR for the peering.
func (o OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput) SubnetCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterMasterPoolProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.SubnetCidr
	}).(pulumi.StringPtrOutput)
}

// Size of agent VMs.
func (o OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterMasterPoolProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.VmSize
	}).(pulumi.StringPtrOutput)
}

// Defines the configuration for Log Analytics integration.
type OpenShiftManagedClusterMonitorProfile struct {
	// If the Log analytics integration should be turned on or off
	Enabled *bool `pulumi:"enabled"`
	// Azure Resource Manager Resource ID for the Log Analytics workspace to integrate with.
	WorkspaceResourceID *string `pulumi:"workspaceResourceID"`
}

// OpenShiftManagedClusterMonitorProfileInput is an input type that accepts OpenShiftManagedClusterMonitorProfileArgs and OpenShiftManagedClusterMonitorProfileOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterMonitorProfileInput` via:
//
//          OpenShiftManagedClusterMonitorProfileArgs{...}
type OpenShiftManagedClusterMonitorProfileInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterMonitorProfileOutput() OpenShiftManagedClusterMonitorProfileOutput
	ToOpenShiftManagedClusterMonitorProfileOutputWithContext(context.Context) OpenShiftManagedClusterMonitorProfileOutput
}

// Defines the configuration for Log Analytics integration.
type OpenShiftManagedClusterMonitorProfileArgs struct {
	// If the Log analytics integration should be turned on or off
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Azure Resource Manager Resource ID for the Log Analytics workspace to integrate with.
	WorkspaceResourceID pulumi.StringPtrInput `pulumi:"workspaceResourceID"`
}

func (OpenShiftManagedClusterMonitorProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterMonitorProfile)(nil)).Elem()
}

func (i OpenShiftManagedClusterMonitorProfileArgs) ToOpenShiftManagedClusterMonitorProfileOutput() OpenShiftManagedClusterMonitorProfileOutput {
	return i.ToOpenShiftManagedClusterMonitorProfileOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterMonitorProfileArgs) ToOpenShiftManagedClusterMonitorProfileOutputWithContext(ctx context.Context) OpenShiftManagedClusterMonitorProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterMonitorProfileOutput)
}

func (i OpenShiftManagedClusterMonitorProfileArgs) ToOpenShiftManagedClusterMonitorProfilePtrOutput() OpenShiftManagedClusterMonitorProfilePtrOutput {
	return i.ToOpenShiftManagedClusterMonitorProfilePtrOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterMonitorProfileArgs) ToOpenShiftManagedClusterMonitorProfilePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterMonitorProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterMonitorProfileOutput).ToOpenShiftManagedClusterMonitorProfilePtrOutputWithContext(ctx)
}

// OpenShiftManagedClusterMonitorProfilePtrInput is an input type that accepts OpenShiftManagedClusterMonitorProfileArgs, OpenShiftManagedClusterMonitorProfilePtr and OpenShiftManagedClusterMonitorProfilePtrOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterMonitorProfilePtrInput` via:
//
//          OpenShiftManagedClusterMonitorProfileArgs{...}
//
//  or:
//
//          nil
type OpenShiftManagedClusterMonitorProfilePtrInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterMonitorProfilePtrOutput() OpenShiftManagedClusterMonitorProfilePtrOutput
	ToOpenShiftManagedClusterMonitorProfilePtrOutputWithContext(context.Context) OpenShiftManagedClusterMonitorProfilePtrOutput
}

type openShiftManagedClusterMonitorProfilePtrType OpenShiftManagedClusterMonitorProfileArgs

func OpenShiftManagedClusterMonitorProfilePtr(v *OpenShiftManagedClusterMonitorProfileArgs) OpenShiftManagedClusterMonitorProfilePtrInput {
	return (*openShiftManagedClusterMonitorProfilePtrType)(v)
}

func (*openShiftManagedClusterMonitorProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenShiftManagedClusterMonitorProfile)(nil)).Elem()
}

func (i *openShiftManagedClusterMonitorProfilePtrType) ToOpenShiftManagedClusterMonitorProfilePtrOutput() OpenShiftManagedClusterMonitorProfilePtrOutput {
	return i.ToOpenShiftManagedClusterMonitorProfilePtrOutputWithContext(context.Background())
}

func (i *openShiftManagedClusterMonitorProfilePtrType) ToOpenShiftManagedClusterMonitorProfilePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterMonitorProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterMonitorProfilePtrOutput)
}

// Defines the configuration for Log Analytics integration.
type OpenShiftManagedClusterMonitorProfileOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterMonitorProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterMonitorProfile)(nil)).Elem()
}

func (o OpenShiftManagedClusterMonitorProfileOutput) ToOpenShiftManagedClusterMonitorProfileOutput() OpenShiftManagedClusterMonitorProfileOutput {
	return o
}

func (o OpenShiftManagedClusterMonitorProfileOutput) ToOpenShiftManagedClusterMonitorProfileOutputWithContext(ctx context.Context) OpenShiftManagedClusterMonitorProfileOutput {
	return o
}

func (o OpenShiftManagedClusterMonitorProfileOutput) ToOpenShiftManagedClusterMonitorProfilePtrOutput() OpenShiftManagedClusterMonitorProfilePtrOutput {
	return o.ToOpenShiftManagedClusterMonitorProfilePtrOutputWithContext(context.Background())
}

func (o OpenShiftManagedClusterMonitorProfileOutput) ToOpenShiftManagedClusterMonitorProfilePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterMonitorProfilePtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterMonitorProfile) *OpenShiftManagedClusterMonitorProfile {
		return &v
	}).(OpenShiftManagedClusterMonitorProfilePtrOutput)
}

// If the Log analytics integration should be turned on or off
func (o OpenShiftManagedClusterMonitorProfileOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterMonitorProfile) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Azure Resource Manager Resource ID for the Log Analytics workspace to integrate with.
func (o OpenShiftManagedClusterMonitorProfileOutput) WorkspaceResourceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterMonitorProfile) *string { return v.WorkspaceResourceID }).(pulumi.StringPtrOutput)
}

type OpenShiftManagedClusterMonitorProfilePtrOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterMonitorProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenShiftManagedClusterMonitorProfile)(nil)).Elem()
}

func (o OpenShiftManagedClusterMonitorProfilePtrOutput) ToOpenShiftManagedClusterMonitorProfilePtrOutput() OpenShiftManagedClusterMonitorProfilePtrOutput {
	return o
}

func (o OpenShiftManagedClusterMonitorProfilePtrOutput) ToOpenShiftManagedClusterMonitorProfilePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterMonitorProfilePtrOutput {
	return o
}

func (o OpenShiftManagedClusterMonitorProfilePtrOutput) Elem() OpenShiftManagedClusterMonitorProfileOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterMonitorProfile) OpenShiftManagedClusterMonitorProfile { return *v }).(OpenShiftManagedClusterMonitorProfileOutput)
}

// If the Log analytics integration should be turned on or off
func (o OpenShiftManagedClusterMonitorProfilePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterMonitorProfile) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Azure Resource Manager Resource ID for the Log Analytics workspace to integrate with.
func (o OpenShiftManagedClusterMonitorProfilePtrOutput) WorkspaceResourceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterMonitorProfile) *string {
		if v == nil {
			return nil
		}
		return v.WorkspaceResourceID
	}).(pulumi.StringPtrOutput)
}

// Defines the configuration for Log Analytics integration.
type OpenShiftManagedClusterMonitorProfileResponse struct {
	// If the Log analytics integration should be turned on or off
	Enabled *bool `pulumi:"enabled"`
	// Azure Resource Manager Resource ID for the Log Analytics workspace to integrate with.
	WorkspaceResourceID *string `pulumi:"workspaceResourceID"`
}

// OpenShiftManagedClusterMonitorProfileResponseInput is an input type that accepts OpenShiftManagedClusterMonitorProfileResponseArgs and OpenShiftManagedClusterMonitorProfileResponseOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterMonitorProfileResponseInput` via:
//
//          OpenShiftManagedClusterMonitorProfileResponseArgs{...}
type OpenShiftManagedClusterMonitorProfileResponseInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterMonitorProfileResponseOutput() OpenShiftManagedClusterMonitorProfileResponseOutput
	ToOpenShiftManagedClusterMonitorProfileResponseOutputWithContext(context.Context) OpenShiftManagedClusterMonitorProfileResponseOutput
}

// Defines the configuration for Log Analytics integration.
type OpenShiftManagedClusterMonitorProfileResponseArgs struct {
	// If the Log analytics integration should be turned on or off
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Azure Resource Manager Resource ID for the Log Analytics workspace to integrate with.
	WorkspaceResourceID pulumi.StringPtrInput `pulumi:"workspaceResourceID"`
}

func (OpenShiftManagedClusterMonitorProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterMonitorProfileResponse)(nil)).Elem()
}

func (i OpenShiftManagedClusterMonitorProfileResponseArgs) ToOpenShiftManagedClusterMonitorProfileResponseOutput() OpenShiftManagedClusterMonitorProfileResponseOutput {
	return i.ToOpenShiftManagedClusterMonitorProfileResponseOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterMonitorProfileResponseArgs) ToOpenShiftManagedClusterMonitorProfileResponseOutputWithContext(ctx context.Context) OpenShiftManagedClusterMonitorProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterMonitorProfileResponseOutput)
}

func (i OpenShiftManagedClusterMonitorProfileResponseArgs) ToOpenShiftManagedClusterMonitorProfileResponsePtrOutput() OpenShiftManagedClusterMonitorProfileResponsePtrOutput {
	return i.ToOpenShiftManagedClusterMonitorProfileResponsePtrOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterMonitorProfileResponseArgs) ToOpenShiftManagedClusterMonitorProfileResponsePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterMonitorProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterMonitorProfileResponseOutput).ToOpenShiftManagedClusterMonitorProfileResponsePtrOutputWithContext(ctx)
}

// OpenShiftManagedClusterMonitorProfileResponsePtrInput is an input type that accepts OpenShiftManagedClusterMonitorProfileResponseArgs, OpenShiftManagedClusterMonitorProfileResponsePtr and OpenShiftManagedClusterMonitorProfileResponsePtrOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterMonitorProfileResponsePtrInput` via:
//
//          OpenShiftManagedClusterMonitorProfileResponseArgs{...}
//
//  or:
//
//          nil
type OpenShiftManagedClusterMonitorProfileResponsePtrInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterMonitorProfileResponsePtrOutput() OpenShiftManagedClusterMonitorProfileResponsePtrOutput
	ToOpenShiftManagedClusterMonitorProfileResponsePtrOutputWithContext(context.Context) OpenShiftManagedClusterMonitorProfileResponsePtrOutput
}

type openShiftManagedClusterMonitorProfileResponsePtrType OpenShiftManagedClusterMonitorProfileResponseArgs

func OpenShiftManagedClusterMonitorProfileResponsePtr(v *OpenShiftManagedClusterMonitorProfileResponseArgs) OpenShiftManagedClusterMonitorProfileResponsePtrInput {
	return (*openShiftManagedClusterMonitorProfileResponsePtrType)(v)
}

func (*openShiftManagedClusterMonitorProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenShiftManagedClusterMonitorProfileResponse)(nil)).Elem()
}

func (i *openShiftManagedClusterMonitorProfileResponsePtrType) ToOpenShiftManagedClusterMonitorProfileResponsePtrOutput() OpenShiftManagedClusterMonitorProfileResponsePtrOutput {
	return i.ToOpenShiftManagedClusterMonitorProfileResponsePtrOutputWithContext(context.Background())
}

func (i *openShiftManagedClusterMonitorProfileResponsePtrType) ToOpenShiftManagedClusterMonitorProfileResponsePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterMonitorProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterMonitorProfileResponsePtrOutput)
}

// Defines the configuration for Log Analytics integration.
type OpenShiftManagedClusterMonitorProfileResponseOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterMonitorProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterMonitorProfileResponse)(nil)).Elem()
}

func (o OpenShiftManagedClusterMonitorProfileResponseOutput) ToOpenShiftManagedClusterMonitorProfileResponseOutput() OpenShiftManagedClusterMonitorProfileResponseOutput {
	return o
}

func (o OpenShiftManagedClusterMonitorProfileResponseOutput) ToOpenShiftManagedClusterMonitorProfileResponseOutputWithContext(ctx context.Context) OpenShiftManagedClusterMonitorProfileResponseOutput {
	return o
}

func (o OpenShiftManagedClusterMonitorProfileResponseOutput) ToOpenShiftManagedClusterMonitorProfileResponsePtrOutput() OpenShiftManagedClusterMonitorProfileResponsePtrOutput {
	return o.ToOpenShiftManagedClusterMonitorProfileResponsePtrOutputWithContext(context.Background())
}

func (o OpenShiftManagedClusterMonitorProfileResponseOutput) ToOpenShiftManagedClusterMonitorProfileResponsePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterMonitorProfileResponsePtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterMonitorProfileResponse) *OpenShiftManagedClusterMonitorProfileResponse {
		return &v
	}).(OpenShiftManagedClusterMonitorProfileResponsePtrOutput)
}

// If the Log analytics integration should be turned on or off
func (o OpenShiftManagedClusterMonitorProfileResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterMonitorProfileResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Azure Resource Manager Resource ID for the Log Analytics workspace to integrate with.
func (o OpenShiftManagedClusterMonitorProfileResponseOutput) WorkspaceResourceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterMonitorProfileResponse) *string { return v.WorkspaceResourceID }).(pulumi.StringPtrOutput)
}

type OpenShiftManagedClusterMonitorProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterMonitorProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenShiftManagedClusterMonitorProfileResponse)(nil)).Elem()
}

func (o OpenShiftManagedClusterMonitorProfileResponsePtrOutput) ToOpenShiftManagedClusterMonitorProfileResponsePtrOutput() OpenShiftManagedClusterMonitorProfileResponsePtrOutput {
	return o
}

func (o OpenShiftManagedClusterMonitorProfileResponsePtrOutput) ToOpenShiftManagedClusterMonitorProfileResponsePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterMonitorProfileResponsePtrOutput {
	return o
}

func (o OpenShiftManagedClusterMonitorProfileResponsePtrOutput) Elem() OpenShiftManagedClusterMonitorProfileResponseOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterMonitorProfileResponse) OpenShiftManagedClusterMonitorProfileResponse {
		return *v
	}).(OpenShiftManagedClusterMonitorProfileResponseOutput)
}

// If the Log analytics integration should be turned on or off
func (o OpenShiftManagedClusterMonitorProfileResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterMonitorProfileResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Azure Resource Manager Resource ID for the Log Analytics workspace to integrate with.
func (o OpenShiftManagedClusterMonitorProfileResponsePtrOutput) WorkspaceResourceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterMonitorProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.WorkspaceResourceID
	}).(pulumi.StringPtrOutput)
}

// Represents an OpenShift router
type OpenShiftRouterProfile struct {
	// Name of the router profile.
	Name *string `pulumi:"name"`
}

// OpenShiftRouterProfileInput is an input type that accepts OpenShiftRouterProfileArgs and OpenShiftRouterProfileOutput values.
// You can construct a concrete instance of `OpenShiftRouterProfileInput` via:
//
//          OpenShiftRouterProfileArgs{...}
type OpenShiftRouterProfileInput interface {
	pulumi.Input

	ToOpenShiftRouterProfileOutput() OpenShiftRouterProfileOutput
	ToOpenShiftRouterProfileOutputWithContext(context.Context) OpenShiftRouterProfileOutput
}

// Represents an OpenShift router
type OpenShiftRouterProfileArgs struct {
	// Name of the router profile.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (OpenShiftRouterProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftRouterProfile)(nil)).Elem()
}

func (i OpenShiftRouterProfileArgs) ToOpenShiftRouterProfileOutput() OpenShiftRouterProfileOutput {
	return i.ToOpenShiftRouterProfileOutputWithContext(context.Background())
}

func (i OpenShiftRouterProfileArgs) ToOpenShiftRouterProfileOutputWithContext(ctx context.Context) OpenShiftRouterProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftRouterProfileOutput)
}

// OpenShiftRouterProfileArrayInput is an input type that accepts OpenShiftRouterProfileArray and OpenShiftRouterProfileArrayOutput values.
// You can construct a concrete instance of `OpenShiftRouterProfileArrayInput` via:
//
//          OpenShiftRouterProfileArray{ OpenShiftRouterProfileArgs{...} }
type OpenShiftRouterProfileArrayInput interface {
	pulumi.Input

	ToOpenShiftRouterProfileArrayOutput() OpenShiftRouterProfileArrayOutput
	ToOpenShiftRouterProfileArrayOutputWithContext(context.Context) OpenShiftRouterProfileArrayOutput
}

type OpenShiftRouterProfileArray []OpenShiftRouterProfileInput

func (OpenShiftRouterProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OpenShiftRouterProfile)(nil)).Elem()
}

func (i OpenShiftRouterProfileArray) ToOpenShiftRouterProfileArrayOutput() OpenShiftRouterProfileArrayOutput {
	return i.ToOpenShiftRouterProfileArrayOutputWithContext(context.Background())
}

func (i OpenShiftRouterProfileArray) ToOpenShiftRouterProfileArrayOutputWithContext(ctx context.Context) OpenShiftRouterProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftRouterProfileArrayOutput)
}

// Represents an OpenShift router
type OpenShiftRouterProfileOutput struct{ *pulumi.OutputState }

func (OpenShiftRouterProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftRouterProfile)(nil)).Elem()
}

func (o OpenShiftRouterProfileOutput) ToOpenShiftRouterProfileOutput() OpenShiftRouterProfileOutput {
	return o
}

func (o OpenShiftRouterProfileOutput) ToOpenShiftRouterProfileOutputWithContext(ctx context.Context) OpenShiftRouterProfileOutput {
	return o
}

// Name of the router profile.
func (o OpenShiftRouterProfileOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenShiftRouterProfile) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type OpenShiftRouterProfileArrayOutput struct{ *pulumi.OutputState }

func (OpenShiftRouterProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OpenShiftRouterProfile)(nil)).Elem()
}

func (o OpenShiftRouterProfileArrayOutput) ToOpenShiftRouterProfileArrayOutput() OpenShiftRouterProfileArrayOutput {
	return o
}

func (o OpenShiftRouterProfileArrayOutput) ToOpenShiftRouterProfileArrayOutputWithContext(ctx context.Context) OpenShiftRouterProfileArrayOutput {
	return o
}

func (o OpenShiftRouterProfileArrayOutput) Index(i pulumi.IntInput) OpenShiftRouterProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OpenShiftRouterProfile {
		return vs[0].([]OpenShiftRouterProfile)[vs[1].(int)]
	}).(OpenShiftRouterProfileOutput)
}

// Represents an OpenShift router
type OpenShiftRouterProfileResponse struct {
	// Auto-allocated FQDN for the OpenShift router.
	Fqdn string `pulumi:"fqdn"`
	// Name of the router profile.
	Name *string `pulumi:"name"`
	// DNS subdomain for OpenShift router.
	PublicSubdomain string `pulumi:"publicSubdomain"`
}

// OpenShiftRouterProfileResponseInput is an input type that accepts OpenShiftRouterProfileResponseArgs and OpenShiftRouterProfileResponseOutput values.
// You can construct a concrete instance of `OpenShiftRouterProfileResponseInput` via:
//
//          OpenShiftRouterProfileResponseArgs{...}
type OpenShiftRouterProfileResponseInput interface {
	pulumi.Input

	ToOpenShiftRouterProfileResponseOutput() OpenShiftRouterProfileResponseOutput
	ToOpenShiftRouterProfileResponseOutputWithContext(context.Context) OpenShiftRouterProfileResponseOutput
}

// Represents an OpenShift router
type OpenShiftRouterProfileResponseArgs struct {
	// Auto-allocated FQDN for the OpenShift router.
	Fqdn pulumi.StringInput `pulumi:"fqdn"`
	// Name of the router profile.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// DNS subdomain for OpenShift router.
	PublicSubdomain pulumi.StringInput `pulumi:"publicSubdomain"`
}

func (OpenShiftRouterProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftRouterProfileResponse)(nil)).Elem()
}

func (i OpenShiftRouterProfileResponseArgs) ToOpenShiftRouterProfileResponseOutput() OpenShiftRouterProfileResponseOutput {
	return i.ToOpenShiftRouterProfileResponseOutputWithContext(context.Background())
}

func (i OpenShiftRouterProfileResponseArgs) ToOpenShiftRouterProfileResponseOutputWithContext(ctx context.Context) OpenShiftRouterProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftRouterProfileResponseOutput)
}

// OpenShiftRouterProfileResponseArrayInput is an input type that accepts OpenShiftRouterProfileResponseArray and OpenShiftRouterProfileResponseArrayOutput values.
// You can construct a concrete instance of `OpenShiftRouterProfileResponseArrayInput` via:
//
//          OpenShiftRouterProfileResponseArray{ OpenShiftRouterProfileResponseArgs{...} }
type OpenShiftRouterProfileResponseArrayInput interface {
	pulumi.Input

	ToOpenShiftRouterProfileResponseArrayOutput() OpenShiftRouterProfileResponseArrayOutput
	ToOpenShiftRouterProfileResponseArrayOutputWithContext(context.Context) OpenShiftRouterProfileResponseArrayOutput
}

type OpenShiftRouterProfileResponseArray []OpenShiftRouterProfileResponseInput

func (OpenShiftRouterProfileResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OpenShiftRouterProfileResponse)(nil)).Elem()
}

func (i OpenShiftRouterProfileResponseArray) ToOpenShiftRouterProfileResponseArrayOutput() OpenShiftRouterProfileResponseArrayOutput {
	return i.ToOpenShiftRouterProfileResponseArrayOutputWithContext(context.Background())
}

func (i OpenShiftRouterProfileResponseArray) ToOpenShiftRouterProfileResponseArrayOutputWithContext(ctx context.Context) OpenShiftRouterProfileResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftRouterProfileResponseArrayOutput)
}

// Represents an OpenShift router
type OpenShiftRouterProfileResponseOutput struct{ *pulumi.OutputState }

func (OpenShiftRouterProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftRouterProfileResponse)(nil)).Elem()
}

func (o OpenShiftRouterProfileResponseOutput) ToOpenShiftRouterProfileResponseOutput() OpenShiftRouterProfileResponseOutput {
	return o
}

func (o OpenShiftRouterProfileResponseOutput) ToOpenShiftRouterProfileResponseOutputWithContext(ctx context.Context) OpenShiftRouterProfileResponseOutput {
	return o
}

// Auto-allocated FQDN for the OpenShift router.
func (o OpenShiftRouterProfileResponseOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v OpenShiftRouterProfileResponse) string { return v.Fqdn }).(pulumi.StringOutput)
}

// Name of the router profile.
func (o OpenShiftRouterProfileResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenShiftRouterProfileResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// DNS subdomain for OpenShift router.
func (o OpenShiftRouterProfileResponseOutput) PublicSubdomain() pulumi.StringOutput {
	return o.ApplyT(func(v OpenShiftRouterProfileResponse) string { return v.PublicSubdomain }).(pulumi.StringOutput)
}

type OpenShiftRouterProfileResponseArrayOutput struct{ *pulumi.OutputState }

func (OpenShiftRouterProfileResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OpenShiftRouterProfileResponse)(nil)).Elem()
}

func (o OpenShiftRouterProfileResponseArrayOutput) ToOpenShiftRouterProfileResponseArrayOutput() OpenShiftRouterProfileResponseArrayOutput {
	return o
}

func (o OpenShiftRouterProfileResponseArrayOutput) ToOpenShiftRouterProfileResponseArrayOutputWithContext(ctx context.Context) OpenShiftRouterProfileResponseArrayOutput {
	return o
}

func (o OpenShiftRouterProfileResponseArrayOutput) Index(i pulumi.IntInput) OpenShiftRouterProfileResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OpenShiftRouterProfileResponse {
		return vs[0].([]OpenShiftRouterProfileResponse)[vs[1].(int)]
	}).(OpenShiftRouterProfileResponseOutput)
}

// Used for establishing the purchase context of any 3rd Party artifact through MarketPlace.
type PurchasePlan struct {
	// The plan ID.
	Name *string `pulumi:"name"`
	// Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
	Product *string `pulumi:"product"`
	// The promotion code.
	PromotionCode *string `pulumi:"promotionCode"`
	// The plan ID.
	Publisher *string `pulumi:"publisher"`
}

// PurchasePlanInput is an input type that accepts PurchasePlanArgs and PurchasePlanOutput values.
// You can construct a concrete instance of `PurchasePlanInput` via:
//
//          PurchasePlanArgs{...}
type PurchasePlanInput interface {
	pulumi.Input

	ToPurchasePlanOutput() PurchasePlanOutput
	ToPurchasePlanOutputWithContext(context.Context) PurchasePlanOutput
}

// Used for establishing the purchase context of any 3rd Party artifact through MarketPlace.
type PurchasePlanArgs struct {
	// The plan ID.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
	Product pulumi.StringPtrInput `pulumi:"product"`
	// The promotion code.
	PromotionCode pulumi.StringPtrInput `pulumi:"promotionCode"`
	// The plan ID.
	Publisher pulumi.StringPtrInput `pulumi:"publisher"`
}

func (PurchasePlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PurchasePlan)(nil)).Elem()
}

func (i PurchasePlanArgs) ToPurchasePlanOutput() PurchasePlanOutput {
	return i.ToPurchasePlanOutputWithContext(context.Background())
}

func (i PurchasePlanArgs) ToPurchasePlanOutputWithContext(ctx context.Context) PurchasePlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PurchasePlanOutput)
}

func (i PurchasePlanArgs) ToPurchasePlanPtrOutput() PurchasePlanPtrOutput {
	return i.ToPurchasePlanPtrOutputWithContext(context.Background())
}

func (i PurchasePlanArgs) ToPurchasePlanPtrOutputWithContext(ctx context.Context) PurchasePlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PurchasePlanOutput).ToPurchasePlanPtrOutputWithContext(ctx)
}

// PurchasePlanPtrInput is an input type that accepts PurchasePlanArgs, PurchasePlanPtr and PurchasePlanPtrOutput values.
// You can construct a concrete instance of `PurchasePlanPtrInput` via:
//
//          PurchasePlanArgs{...}
//
//  or:
//
//          nil
type PurchasePlanPtrInput interface {
	pulumi.Input

	ToPurchasePlanPtrOutput() PurchasePlanPtrOutput
	ToPurchasePlanPtrOutputWithContext(context.Context) PurchasePlanPtrOutput
}

type purchasePlanPtrType PurchasePlanArgs

func PurchasePlanPtr(v *PurchasePlanArgs) PurchasePlanPtrInput {
	return (*purchasePlanPtrType)(v)
}

func (*purchasePlanPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PurchasePlan)(nil)).Elem()
}

func (i *purchasePlanPtrType) ToPurchasePlanPtrOutput() PurchasePlanPtrOutput {
	return i.ToPurchasePlanPtrOutputWithContext(context.Background())
}

func (i *purchasePlanPtrType) ToPurchasePlanPtrOutputWithContext(ctx context.Context) PurchasePlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PurchasePlanPtrOutput)
}

// Used for establishing the purchase context of any 3rd Party artifact through MarketPlace.
type PurchasePlanOutput struct{ *pulumi.OutputState }

func (PurchasePlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PurchasePlan)(nil)).Elem()
}

func (o PurchasePlanOutput) ToPurchasePlanOutput() PurchasePlanOutput {
	return o
}

func (o PurchasePlanOutput) ToPurchasePlanOutputWithContext(ctx context.Context) PurchasePlanOutput {
	return o
}

func (o PurchasePlanOutput) ToPurchasePlanPtrOutput() PurchasePlanPtrOutput {
	return o.ToPurchasePlanPtrOutputWithContext(context.Background())
}

func (o PurchasePlanOutput) ToPurchasePlanPtrOutputWithContext(ctx context.Context) PurchasePlanPtrOutput {
	return o.ApplyT(func(v PurchasePlan) *PurchasePlan {
		return &v
	}).(PurchasePlanPtrOutput)
}

// The plan ID.
func (o PurchasePlanOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PurchasePlan) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
func (o PurchasePlanOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PurchasePlan) *string { return v.Product }).(pulumi.StringPtrOutput)
}

// The promotion code.
func (o PurchasePlanOutput) PromotionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PurchasePlan) *string { return v.PromotionCode }).(pulumi.StringPtrOutput)
}

// The plan ID.
func (o PurchasePlanOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PurchasePlan) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

type PurchasePlanPtrOutput struct{ *pulumi.OutputState }

func (PurchasePlanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PurchasePlan)(nil)).Elem()
}

func (o PurchasePlanPtrOutput) ToPurchasePlanPtrOutput() PurchasePlanPtrOutput {
	return o
}

func (o PurchasePlanPtrOutput) ToPurchasePlanPtrOutputWithContext(ctx context.Context) PurchasePlanPtrOutput {
	return o
}

func (o PurchasePlanPtrOutput) Elem() PurchasePlanOutput {
	return o.ApplyT(func(v *PurchasePlan) PurchasePlan { return *v }).(PurchasePlanOutput)
}

// The plan ID.
func (o PurchasePlanPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PurchasePlan) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
func (o PurchasePlanPtrOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PurchasePlan) *string {
		if v == nil {
			return nil
		}
		return v.Product
	}).(pulumi.StringPtrOutput)
}

// The promotion code.
func (o PurchasePlanPtrOutput) PromotionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PurchasePlan) *string {
		if v == nil {
			return nil
		}
		return v.PromotionCode
	}).(pulumi.StringPtrOutput)
}

// The plan ID.
func (o PurchasePlanPtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PurchasePlan) *string {
		if v == nil {
			return nil
		}
		return v.Publisher
	}).(pulumi.StringPtrOutput)
}

// Used for establishing the purchase context of any 3rd Party artifact through MarketPlace.
type PurchasePlanResponse struct {
	// The plan ID.
	Name *string `pulumi:"name"`
	// Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
	Product *string `pulumi:"product"`
	// The promotion code.
	PromotionCode *string `pulumi:"promotionCode"`
	// The plan ID.
	Publisher *string `pulumi:"publisher"`
}

// PurchasePlanResponseInput is an input type that accepts PurchasePlanResponseArgs and PurchasePlanResponseOutput values.
// You can construct a concrete instance of `PurchasePlanResponseInput` via:
//
//          PurchasePlanResponseArgs{...}
type PurchasePlanResponseInput interface {
	pulumi.Input

	ToPurchasePlanResponseOutput() PurchasePlanResponseOutput
	ToPurchasePlanResponseOutputWithContext(context.Context) PurchasePlanResponseOutput
}

// Used for establishing the purchase context of any 3rd Party artifact through MarketPlace.
type PurchasePlanResponseArgs struct {
	// The plan ID.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
	Product pulumi.StringPtrInput `pulumi:"product"`
	// The promotion code.
	PromotionCode pulumi.StringPtrInput `pulumi:"promotionCode"`
	// The plan ID.
	Publisher pulumi.StringPtrInput `pulumi:"publisher"`
}

func (PurchasePlanResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PurchasePlanResponse)(nil)).Elem()
}

func (i PurchasePlanResponseArgs) ToPurchasePlanResponseOutput() PurchasePlanResponseOutput {
	return i.ToPurchasePlanResponseOutputWithContext(context.Background())
}

func (i PurchasePlanResponseArgs) ToPurchasePlanResponseOutputWithContext(ctx context.Context) PurchasePlanResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PurchasePlanResponseOutput)
}

func (i PurchasePlanResponseArgs) ToPurchasePlanResponsePtrOutput() PurchasePlanResponsePtrOutput {
	return i.ToPurchasePlanResponsePtrOutputWithContext(context.Background())
}

func (i PurchasePlanResponseArgs) ToPurchasePlanResponsePtrOutputWithContext(ctx context.Context) PurchasePlanResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PurchasePlanResponseOutput).ToPurchasePlanResponsePtrOutputWithContext(ctx)
}

// PurchasePlanResponsePtrInput is an input type that accepts PurchasePlanResponseArgs, PurchasePlanResponsePtr and PurchasePlanResponsePtrOutput values.
// You can construct a concrete instance of `PurchasePlanResponsePtrInput` via:
//
//          PurchasePlanResponseArgs{...}
//
//  or:
//
//          nil
type PurchasePlanResponsePtrInput interface {
	pulumi.Input

	ToPurchasePlanResponsePtrOutput() PurchasePlanResponsePtrOutput
	ToPurchasePlanResponsePtrOutputWithContext(context.Context) PurchasePlanResponsePtrOutput
}

type purchasePlanResponsePtrType PurchasePlanResponseArgs

func PurchasePlanResponsePtr(v *PurchasePlanResponseArgs) PurchasePlanResponsePtrInput {
	return (*purchasePlanResponsePtrType)(v)
}

func (*purchasePlanResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PurchasePlanResponse)(nil)).Elem()
}

func (i *purchasePlanResponsePtrType) ToPurchasePlanResponsePtrOutput() PurchasePlanResponsePtrOutput {
	return i.ToPurchasePlanResponsePtrOutputWithContext(context.Background())
}

func (i *purchasePlanResponsePtrType) ToPurchasePlanResponsePtrOutputWithContext(ctx context.Context) PurchasePlanResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PurchasePlanResponsePtrOutput)
}

// Used for establishing the purchase context of any 3rd Party artifact through MarketPlace.
type PurchasePlanResponseOutput struct{ *pulumi.OutputState }

func (PurchasePlanResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PurchasePlanResponse)(nil)).Elem()
}

func (o PurchasePlanResponseOutput) ToPurchasePlanResponseOutput() PurchasePlanResponseOutput {
	return o
}

func (o PurchasePlanResponseOutput) ToPurchasePlanResponseOutputWithContext(ctx context.Context) PurchasePlanResponseOutput {
	return o
}

func (o PurchasePlanResponseOutput) ToPurchasePlanResponsePtrOutput() PurchasePlanResponsePtrOutput {
	return o.ToPurchasePlanResponsePtrOutputWithContext(context.Background())
}

func (o PurchasePlanResponseOutput) ToPurchasePlanResponsePtrOutputWithContext(ctx context.Context) PurchasePlanResponsePtrOutput {
	return o.ApplyT(func(v PurchasePlanResponse) *PurchasePlanResponse {
		return &v
	}).(PurchasePlanResponsePtrOutput)
}

// The plan ID.
func (o PurchasePlanResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PurchasePlanResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
func (o PurchasePlanResponseOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PurchasePlanResponse) *string { return v.Product }).(pulumi.StringPtrOutput)
}

// The promotion code.
func (o PurchasePlanResponseOutput) PromotionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PurchasePlanResponse) *string { return v.PromotionCode }).(pulumi.StringPtrOutput)
}

// The plan ID.
func (o PurchasePlanResponseOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PurchasePlanResponse) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

type PurchasePlanResponsePtrOutput struct{ *pulumi.OutputState }

func (PurchasePlanResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PurchasePlanResponse)(nil)).Elem()
}

func (o PurchasePlanResponsePtrOutput) ToPurchasePlanResponsePtrOutput() PurchasePlanResponsePtrOutput {
	return o
}

func (o PurchasePlanResponsePtrOutput) ToPurchasePlanResponsePtrOutputWithContext(ctx context.Context) PurchasePlanResponsePtrOutput {
	return o
}

func (o PurchasePlanResponsePtrOutput) Elem() PurchasePlanResponseOutput {
	return o.ApplyT(func(v *PurchasePlanResponse) PurchasePlanResponse { return *v }).(PurchasePlanResponseOutput)
}

// The plan ID.
func (o PurchasePlanResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PurchasePlanResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
func (o PurchasePlanResponsePtrOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PurchasePlanResponse) *string {
		if v == nil {
			return nil
		}
		return v.Product
	}).(pulumi.StringPtrOutput)
}

// The promotion code.
func (o PurchasePlanResponsePtrOutput) PromotionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PurchasePlanResponse) *string {
		if v == nil {
			return nil
		}
		return v.PromotionCode
	}).(pulumi.StringPtrOutput)
}

// The plan ID.
func (o PurchasePlanResponsePtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PurchasePlanResponse) *string {
		if v == nil {
			return nil
		}
		return v.Publisher
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(NetworkProfileOutput{})
	pulumi.RegisterOutputType(NetworkProfilePtrOutput{})
	pulumi.RegisterOutputType(NetworkProfileResponseOutput{})
	pulumi.RegisterOutputType(NetworkProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterAADIdentityProviderOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterAADIdentityProviderPtrOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterAADIdentityProviderResponseOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterAADIdentityProviderResponsePtrOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterAgentPoolProfileOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterAgentPoolProfileArrayOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterAgentPoolProfileResponseOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterAgentPoolProfileResponseArrayOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterAuthProfileOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterAuthProfilePtrOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterAuthProfileResponseOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterAuthProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterIdentityProviderOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterIdentityProviderArrayOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterIdentityProviderResponseOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterIdentityProviderResponseArrayOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterMasterPoolProfileOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterMasterPoolProfilePtrOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterMasterPoolProfileResponseOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterMonitorProfileOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterMonitorProfilePtrOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterMonitorProfileResponseOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterMonitorProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(OpenShiftRouterProfileOutput{})
	pulumi.RegisterOutputType(OpenShiftRouterProfileArrayOutput{})
	pulumi.RegisterOutputType(OpenShiftRouterProfileResponseOutput{})
	pulumi.RegisterOutputType(OpenShiftRouterProfileResponseArrayOutput{})
	pulumi.RegisterOutputType(PurchasePlanOutput{})
	pulumi.RegisterOutputType(PurchasePlanPtrOutput{})
	pulumi.RegisterOutputType(PurchasePlanResponseOutput{})
	pulumi.RegisterOutputType(PurchasePlanResponsePtrOutput{})
}
