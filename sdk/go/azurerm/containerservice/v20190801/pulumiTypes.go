// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20190801

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Profile for enabling a user to access a managed cluster.
type AccessProfileResponse struct {
	// Base64-encoded Kubernetes configuration file.
	KubeConfig *string `pulumi:"kubeConfig"`
}

// AccessProfileResponseInput is an input type that accepts AccessProfileResponseArgs and AccessProfileResponseOutput values.
// You can construct a concrete instance of `AccessProfileResponseInput` via:
//
//          AccessProfileResponseArgs{...}
type AccessProfileResponseInput interface {
	pulumi.Input

	ToAccessProfileResponseOutput() AccessProfileResponseOutput
	ToAccessProfileResponseOutputWithContext(context.Context) AccessProfileResponseOutput
}

// Profile for enabling a user to access a managed cluster.
type AccessProfileResponseArgs struct {
	// Base64-encoded Kubernetes configuration file.
	KubeConfig pulumi.StringPtrInput `pulumi:"kubeConfig"`
}

func (AccessProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessProfileResponse)(nil)).Elem()
}

func (i AccessProfileResponseArgs) ToAccessProfileResponseOutput() AccessProfileResponseOutput {
	return i.ToAccessProfileResponseOutputWithContext(context.Background())
}

func (i AccessProfileResponseArgs) ToAccessProfileResponseOutputWithContext(ctx context.Context) AccessProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessProfileResponseOutput)
}

// Profile for enabling a user to access a managed cluster.
type AccessProfileResponseOutput struct{ *pulumi.OutputState }

func (AccessProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessProfileResponse)(nil)).Elem()
}

func (o AccessProfileResponseOutput) ToAccessProfileResponseOutput() AccessProfileResponseOutput {
	return o
}

func (o AccessProfileResponseOutput) ToAccessProfileResponseOutputWithContext(ctx context.Context) AccessProfileResponseOutput {
	return o
}

// Base64-encoded Kubernetes configuration file.
func (o AccessProfileResponseOutput) KubeConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessProfileResponse) *string { return v.KubeConfig }).(pulumi.StringPtrOutput)
}

// Agent Pool.
type AgentPoolType struct {
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name string `pulumi:"name"`
	// Properties of an agent pool.
	Properties ManagedClusterAgentPoolProfilePropertiesResponse `pulumi:"properties"`
	// Resource type
	Type string `pulumi:"type"`
}

// AgentPoolTypeInput is an input type that accepts AgentPoolTypeArgs and AgentPoolTypeOutput values.
// You can construct a concrete instance of `AgentPoolTypeInput` via:
//
//          AgentPoolTypeArgs{...}
type AgentPoolTypeInput interface {
	pulumi.Input

	ToAgentPoolTypeOutput() AgentPoolTypeOutput
	ToAgentPoolTypeOutputWithContext(context.Context) AgentPoolTypeOutput
}

// Agent Pool.
type AgentPoolTypeArgs struct {
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of an agent pool.
	Properties ManagedClusterAgentPoolProfilePropertiesResponseInput `pulumi:"properties"`
	// Resource type
	Type pulumi.StringInput `pulumi:"type"`
}

func (AgentPoolTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPoolType)(nil)).Elem()
}

func (i AgentPoolTypeArgs) ToAgentPoolTypeOutput() AgentPoolTypeOutput {
	return i.ToAgentPoolTypeOutputWithContext(context.Background())
}

func (i AgentPoolTypeArgs) ToAgentPoolTypeOutputWithContext(ctx context.Context) AgentPoolTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPoolTypeOutput)
}

// Agent Pool.
type AgentPoolTypeOutput struct{ *pulumi.OutputState }

func (AgentPoolTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPoolType)(nil)).Elem()
}

func (o AgentPoolTypeOutput) ToAgentPoolTypeOutput() AgentPoolTypeOutput {
	return o
}

func (o AgentPoolTypeOutput) ToAgentPoolTypeOutputWithContext(ctx context.Context) AgentPoolTypeOutput {
	return o
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o AgentPoolTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AgentPoolType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of an agent pool.
func (o AgentPoolTypeOutput) Properties() ManagedClusterAgentPoolProfilePropertiesResponseOutput {
	return o.ApplyT(func(v AgentPoolType) ManagedClusterAgentPoolProfilePropertiesResponse { return v.Properties }).(ManagedClusterAgentPoolProfilePropertiesResponseOutput)
}

// Resource type
func (o AgentPoolTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AgentPoolType) string { return v.Type }).(pulumi.StringOutput)
}

// Profile for Linux VMs in the container service cluster.
type ContainerServiceLinuxProfile struct {
	// The administrator username to use for Linux VMs.
	AdminUsername string `pulumi:"adminUsername"`
	// SSH configuration for Linux-based VMs running on Azure.
	Ssh ContainerServiceSshConfiguration `pulumi:"ssh"`
}

// ContainerServiceLinuxProfileInput is an input type that accepts ContainerServiceLinuxProfileArgs and ContainerServiceLinuxProfileOutput values.
// You can construct a concrete instance of `ContainerServiceLinuxProfileInput` via:
//
//          ContainerServiceLinuxProfileArgs{...}
type ContainerServiceLinuxProfileInput interface {
	pulumi.Input

	ToContainerServiceLinuxProfileOutput() ContainerServiceLinuxProfileOutput
	ToContainerServiceLinuxProfileOutputWithContext(context.Context) ContainerServiceLinuxProfileOutput
}

// Profile for Linux VMs in the container service cluster.
type ContainerServiceLinuxProfileArgs struct {
	// The administrator username to use for Linux VMs.
	AdminUsername pulumi.StringInput `pulumi:"adminUsername"`
	// SSH configuration for Linux-based VMs running on Azure.
	Ssh ContainerServiceSshConfigurationInput `pulumi:"ssh"`
}

func (ContainerServiceLinuxProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceLinuxProfile)(nil)).Elem()
}

func (i ContainerServiceLinuxProfileArgs) ToContainerServiceLinuxProfileOutput() ContainerServiceLinuxProfileOutput {
	return i.ToContainerServiceLinuxProfileOutputWithContext(context.Background())
}

func (i ContainerServiceLinuxProfileArgs) ToContainerServiceLinuxProfileOutputWithContext(ctx context.Context) ContainerServiceLinuxProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceLinuxProfileOutput)
}

func (i ContainerServiceLinuxProfileArgs) ToContainerServiceLinuxProfilePtrOutput() ContainerServiceLinuxProfilePtrOutput {
	return i.ToContainerServiceLinuxProfilePtrOutputWithContext(context.Background())
}

func (i ContainerServiceLinuxProfileArgs) ToContainerServiceLinuxProfilePtrOutputWithContext(ctx context.Context) ContainerServiceLinuxProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceLinuxProfileOutput).ToContainerServiceLinuxProfilePtrOutputWithContext(ctx)
}

// ContainerServiceLinuxProfilePtrInput is an input type that accepts ContainerServiceLinuxProfileArgs, ContainerServiceLinuxProfilePtr and ContainerServiceLinuxProfilePtrOutput values.
// You can construct a concrete instance of `ContainerServiceLinuxProfilePtrInput` via:
//
//          ContainerServiceLinuxProfileArgs{...}
//
//  or:
//
//          nil
type ContainerServiceLinuxProfilePtrInput interface {
	pulumi.Input

	ToContainerServiceLinuxProfilePtrOutput() ContainerServiceLinuxProfilePtrOutput
	ToContainerServiceLinuxProfilePtrOutputWithContext(context.Context) ContainerServiceLinuxProfilePtrOutput
}

type containerServiceLinuxProfilePtrType ContainerServiceLinuxProfileArgs

func ContainerServiceLinuxProfilePtr(v *ContainerServiceLinuxProfileArgs) ContainerServiceLinuxProfilePtrInput {
	return (*containerServiceLinuxProfilePtrType)(v)
}

func (*containerServiceLinuxProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceLinuxProfile)(nil)).Elem()
}

func (i *containerServiceLinuxProfilePtrType) ToContainerServiceLinuxProfilePtrOutput() ContainerServiceLinuxProfilePtrOutput {
	return i.ToContainerServiceLinuxProfilePtrOutputWithContext(context.Background())
}

func (i *containerServiceLinuxProfilePtrType) ToContainerServiceLinuxProfilePtrOutputWithContext(ctx context.Context) ContainerServiceLinuxProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceLinuxProfilePtrOutput)
}

// Profile for Linux VMs in the container service cluster.
type ContainerServiceLinuxProfileOutput struct{ *pulumi.OutputState }

func (ContainerServiceLinuxProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceLinuxProfile)(nil)).Elem()
}

func (o ContainerServiceLinuxProfileOutput) ToContainerServiceLinuxProfileOutput() ContainerServiceLinuxProfileOutput {
	return o
}

func (o ContainerServiceLinuxProfileOutput) ToContainerServiceLinuxProfileOutputWithContext(ctx context.Context) ContainerServiceLinuxProfileOutput {
	return o
}

func (o ContainerServiceLinuxProfileOutput) ToContainerServiceLinuxProfilePtrOutput() ContainerServiceLinuxProfilePtrOutput {
	return o.ToContainerServiceLinuxProfilePtrOutputWithContext(context.Background())
}

func (o ContainerServiceLinuxProfileOutput) ToContainerServiceLinuxProfilePtrOutputWithContext(ctx context.Context) ContainerServiceLinuxProfilePtrOutput {
	return o.ApplyT(func(v ContainerServiceLinuxProfile) *ContainerServiceLinuxProfile {
		return &v
	}).(ContainerServiceLinuxProfilePtrOutput)
}

// The administrator username to use for Linux VMs.
func (o ContainerServiceLinuxProfileOutput) AdminUsername() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerServiceLinuxProfile) string { return v.AdminUsername }).(pulumi.StringOutput)
}

// SSH configuration for Linux-based VMs running on Azure.
func (o ContainerServiceLinuxProfileOutput) Ssh() ContainerServiceSshConfigurationOutput {
	return o.ApplyT(func(v ContainerServiceLinuxProfile) ContainerServiceSshConfiguration { return v.Ssh }).(ContainerServiceSshConfigurationOutput)
}

type ContainerServiceLinuxProfilePtrOutput struct{ *pulumi.OutputState }

func (ContainerServiceLinuxProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceLinuxProfile)(nil)).Elem()
}

func (o ContainerServiceLinuxProfilePtrOutput) ToContainerServiceLinuxProfilePtrOutput() ContainerServiceLinuxProfilePtrOutput {
	return o
}

func (o ContainerServiceLinuxProfilePtrOutput) ToContainerServiceLinuxProfilePtrOutputWithContext(ctx context.Context) ContainerServiceLinuxProfilePtrOutput {
	return o
}

func (o ContainerServiceLinuxProfilePtrOutput) Elem() ContainerServiceLinuxProfileOutput {
	return o.ApplyT(func(v *ContainerServiceLinuxProfile) ContainerServiceLinuxProfile { return *v }).(ContainerServiceLinuxProfileOutput)
}

// The administrator username to use for Linux VMs.
func (o ContainerServiceLinuxProfilePtrOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceLinuxProfile) *string {
		if v == nil {
			return nil
		}
		return &v.AdminUsername
	}).(pulumi.StringPtrOutput)
}

// SSH configuration for Linux-based VMs running on Azure.
func (o ContainerServiceLinuxProfilePtrOutput) Ssh() ContainerServiceSshConfigurationPtrOutput {
	return o.ApplyT(func(v *ContainerServiceLinuxProfile) *ContainerServiceSshConfiguration {
		if v == nil {
			return nil
		}
		return &v.Ssh
	}).(ContainerServiceSshConfigurationPtrOutput)
}

// Profile for Linux VMs in the container service cluster.
type ContainerServiceLinuxProfileResponse struct {
	// The administrator username to use for Linux VMs.
	AdminUsername string `pulumi:"adminUsername"`
	// SSH configuration for Linux-based VMs running on Azure.
	Ssh ContainerServiceSshConfigurationResponse `pulumi:"ssh"`
}

// ContainerServiceLinuxProfileResponseInput is an input type that accepts ContainerServiceLinuxProfileResponseArgs and ContainerServiceLinuxProfileResponseOutput values.
// You can construct a concrete instance of `ContainerServiceLinuxProfileResponseInput` via:
//
//          ContainerServiceLinuxProfileResponseArgs{...}
type ContainerServiceLinuxProfileResponseInput interface {
	pulumi.Input

	ToContainerServiceLinuxProfileResponseOutput() ContainerServiceLinuxProfileResponseOutput
	ToContainerServiceLinuxProfileResponseOutputWithContext(context.Context) ContainerServiceLinuxProfileResponseOutput
}

// Profile for Linux VMs in the container service cluster.
type ContainerServiceLinuxProfileResponseArgs struct {
	// The administrator username to use for Linux VMs.
	AdminUsername pulumi.StringInput `pulumi:"adminUsername"`
	// SSH configuration for Linux-based VMs running on Azure.
	Ssh ContainerServiceSshConfigurationResponseInput `pulumi:"ssh"`
}

func (ContainerServiceLinuxProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceLinuxProfileResponse)(nil)).Elem()
}

func (i ContainerServiceLinuxProfileResponseArgs) ToContainerServiceLinuxProfileResponseOutput() ContainerServiceLinuxProfileResponseOutput {
	return i.ToContainerServiceLinuxProfileResponseOutputWithContext(context.Background())
}

func (i ContainerServiceLinuxProfileResponseArgs) ToContainerServiceLinuxProfileResponseOutputWithContext(ctx context.Context) ContainerServiceLinuxProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceLinuxProfileResponseOutput)
}

func (i ContainerServiceLinuxProfileResponseArgs) ToContainerServiceLinuxProfileResponsePtrOutput() ContainerServiceLinuxProfileResponsePtrOutput {
	return i.ToContainerServiceLinuxProfileResponsePtrOutputWithContext(context.Background())
}

func (i ContainerServiceLinuxProfileResponseArgs) ToContainerServiceLinuxProfileResponsePtrOutputWithContext(ctx context.Context) ContainerServiceLinuxProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceLinuxProfileResponseOutput).ToContainerServiceLinuxProfileResponsePtrOutputWithContext(ctx)
}

// ContainerServiceLinuxProfileResponsePtrInput is an input type that accepts ContainerServiceLinuxProfileResponseArgs, ContainerServiceLinuxProfileResponsePtr and ContainerServiceLinuxProfileResponsePtrOutput values.
// You can construct a concrete instance of `ContainerServiceLinuxProfileResponsePtrInput` via:
//
//          ContainerServiceLinuxProfileResponseArgs{...}
//
//  or:
//
//          nil
type ContainerServiceLinuxProfileResponsePtrInput interface {
	pulumi.Input

	ToContainerServiceLinuxProfileResponsePtrOutput() ContainerServiceLinuxProfileResponsePtrOutput
	ToContainerServiceLinuxProfileResponsePtrOutputWithContext(context.Context) ContainerServiceLinuxProfileResponsePtrOutput
}

type containerServiceLinuxProfileResponsePtrType ContainerServiceLinuxProfileResponseArgs

func ContainerServiceLinuxProfileResponsePtr(v *ContainerServiceLinuxProfileResponseArgs) ContainerServiceLinuxProfileResponsePtrInput {
	return (*containerServiceLinuxProfileResponsePtrType)(v)
}

func (*containerServiceLinuxProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceLinuxProfileResponse)(nil)).Elem()
}

func (i *containerServiceLinuxProfileResponsePtrType) ToContainerServiceLinuxProfileResponsePtrOutput() ContainerServiceLinuxProfileResponsePtrOutput {
	return i.ToContainerServiceLinuxProfileResponsePtrOutputWithContext(context.Background())
}

func (i *containerServiceLinuxProfileResponsePtrType) ToContainerServiceLinuxProfileResponsePtrOutputWithContext(ctx context.Context) ContainerServiceLinuxProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceLinuxProfileResponsePtrOutput)
}

// Profile for Linux VMs in the container service cluster.
type ContainerServiceLinuxProfileResponseOutput struct{ *pulumi.OutputState }

func (ContainerServiceLinuxProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceLinuxProfileResponse)(nil)).Elem()
}

func (o ContainerServiceLinuxProfileResponseOutput) ToContainerServiceLinuxProfileResponseOutput() ContainerServiceLinuxProfileResponseOutput {
	return o
}

func (o ContainerServiceLinuxProfileResponseOutput) ToContainerServiceLinuxProfileResponseOutputWithContext(ctx context.Context) ContainerServiceLinuxProfileResponseOutput {
	return o
}

func (o ContainerServiceLinuxProfileResponseOutput) ToContainerServiceLinuxProfileResponsePtrOutput() ContainerServiceLinuxProfileResponsePtrOutput {
	return o.ToContainerServiceLinuxProfileResponsePtrOutputWithContext(context.Background())
}

func (o ContainerServiceLinuxProfileResponseOutput) ToContainerServiceLinuxProfileResponsePtrOutputWithContext(ctx context.Context) ContainerServiceLinuxProfileResponsePtrOutput {
	return o.ApplyT(func(v ContainerServiceLinuxProfileResponse) *ContainerServiceLinuxProfileResponse {
		return &v
	}).(ContainerServiceLinuxProfileResponsePtrOutput)
}

// The administrator username to use for Linux VMs.
func (o ContainerServiceLinuxProfileResponseOutput) AdminUsername() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerServiceLinuxProfileResponse) string { return v.AdminUsername }).(pulumi.StringOutput)
}

// SSH configuration for Linux-based VMs running on Azure.
func (o ContainerServiceLinuxProfileResponseOutput) Ssh() ContainerServiceSshConfigurationResponseOutput {
	return o.ApplyT(func(v ContainerServiceLinuxProfileResponse) ContainerServiceSshConfigurationResponse { return v.Ssh }).(ContainerServiceSshConfigurationResponseOutput)
}

type ContainerServiceLinuxProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ContainerServiceLinuxProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceLinuxProfileResponse)(nil)).Elem()
}

func (o ContainerServiceLinuxProfileResponsePtrOutput) ToContainerServiceLinuxProfileResponsePtrOutput() ContainerServiceLinuxProfileResponsePtrOutput {
	return o
}

func (o ContainerServiceLinuxProfileResponsePtrOutput) ToContainerServiceLinuxProfileResponsePtrOutputWithContext(ctx context.Context) ContainerServiceLinuxProfileResponsePtrOutput {
	return o
}

func (o ContainerServiceLinuxProfileResponsePtrOutput) Elem() ContainerServiceLinuxProfileResponseOutput {
	return o.ApplyT(func(v *ContainerServiceLinuxProfileResponse) ContainerServiceLinuxProfileResponse { return *v }).(ContainerServiceLinuxProfileResponseOutput)
}

// The administrator username to use for Linux VMs.
func (o ContainerServiceLinuxProfileResponsePtrOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceLinuxProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AdminUsername
	}).(pulumi.StringPtrOutput)
}

// SSH configuration for Linux-based VMs running on Azure.
func (o ContainerServiceLinuxProfileResponsePtrOutput) Ssh() ContainerServiceSshConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *ContainerServiceLinuxProfileResponse) *ContainerServiceSshConfigurationResponse {
		if v == nil {
			return nil
		}
		return &v.Ssh
	}).(ContainerServiceSshConfigurationResponsePtrOutput)
}

// Profile of network configuration.
type ContainerServiceNetworkProfile struct {
	// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
	DnsServiceIP *string `pulumi:"dnsServiceIP"`
	// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
	DockerBridgeCidr *string `pulumi:"dockerBridgeCidr"`
	// Profile of the cluster load balancer.
	LoadBalancerProfile *ManagedClusterLoadBalancerProfile `pulumi:"loadBalancerProfile"`
	// The load balancer sku for the managed cluster.
	LoadBalancerSku *string `pulumi:"loadBalancerSku"`
	// Network plugin used for building Kubernetes network.
	NetworkPlugin *string `pulumi:"networkPlugin"`
	// Network policy used for building Kubernetes network.
	NetworkPolicy *string `pulumi:"networkPolicy"`
	// A CIDR notation IP range from which to assign pod IPs when kubenet is used.
	PodCidr *string `pulumi:"podCidr"`
	// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
	ServiceCidr *string `pulumi:"serviceCidr"`
}

// ContainerServiceNetworkProfileInput is an input type that accepts ContainerServiceNetworkProfileArgs and ContainerServiceNetworkProfileOutput values.
// You can construct a concrete instance of `ContainerServiceNetworkProfileInput` via:
//
//          ContainerServiceNetworkProfileArgs{...}
type ContainerServiceNetworkProfileInput interface {
	pulumi.Input

	ToContainerServiceNetworkProfileOutput() ContainerServiceNetworkProfileOutput
	ToContainerServiceNetworkProfileOutputWithContext(context.Context) ContainerServiceNetworkProfileOutput
}

// Profile of network configuration.
type ContainerServiceNetworkProfileArgs struct {
	// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
	DnsServiceIP pulumi.StringPtrInput `pulumi:"dnsServiceIP"`
	// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
	DockerBridgeCidr pulumi.StringPtrInput `pulumi:"dockerBridgeCidr"`
	// Profile of the cluster load balancer.
	LoadBalancerProfile ManagedClusterLoadBalancerProfilePtrInput `pulumi:"loadBalancerProfile"`
	// The load balancer sku for the managed cluster.
	LoadBalancerSku pulumi.StringPtrInput `pulumi:"loadBalancerSku"`
	// Network plugin used for building Kubernetes network.
	NetworkPlugin pulumi.StringPtrInput `pulumi:"networkPlugin"`
	// Network policy used for building Kubernetes network.
	NetworkPolicy pulumi.StringPtrInput `pulumi:"networkPolicy"`
	// A CIDR notation IP range from which to assign pod IPs when kubenet is used.
	PodCidr pulumi.StringPtrInput `pulumi:"podCidr"`
	// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
	ServiceCidr pulumi.StringPtrInput `pulumi:"serviceCidr"`
}

func (ContainerServiceNetworkProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceNetworkProfile)(nil)).Elem()
}

func (i ContainerServiceNetworkProfileArgs) ToContainerServiceNetworkProfileOutput() ContainerServiceNetworkProfileOutput {
	return i.ToContainerServiceNetworkProfileOutputWithContext(context.Background())
}

func (i ContainerServiceNetworkProfileArgs) ToContainerServiceNetworkProfileOutputWithContext(ctx context.Context) ContainerServiceNetworkProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceNetworkProfileOutput)
}

func (i ContainerServiceNetworkProfileArgs) ToContainerServiceNetworkProfilePtrOutput() ContainerServiceNetworkProfilePtrOutput {
	return i.ToContainerServiceNetworkProfilePtrOutputWithContext(context.Background())
}

func (i ContainerServiceNetworkProfileArgs) ToContainerServiceNetworkProfilePtrOutputWithContext(ctx context.Context) ContainerServiceNetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceNetworkProfileOutput).ToContainerServiceNetworkProfilePtrOutputWithContext(ctx)
}

// ContainerServiceNetworkProfilePtrInput is an input type that accepts ContainerServiceNetworkProfileArgs, ContainerServiceNetworkProfilePtr and ContainerServiceNetworkProfilePtrOutput values.
// You can construct a concrete instance of `ContainerServiceNetworkProfilePtrInput` via:
//
//          ContainerServiceNetworkProfileArgs{...}
//
//  or:
//
//          nil
type ContainerServiceNetworkProfilePtrInput interface {
	pulumi.Input

	ToContainerServiceNetworkProfilePtrOutput() ContainerServiceNetworkProfilePtrOutput
	ToContainerServiceNetworkProfilePtrOutputWithContext(context.Context) ContainerServiceNetworkProfilePtrOutput
}

type containerServiceNetworkProfilePtrType ContainerServiceNetworkProfileArgs

func ContainerServiceNetworkProfilePtr(v *ContainerServiceNetworkProfileArgs) ContainerServiceNetworkProfilePtrInput {
	return (*containerServiceNetworkProfilePtrType)(v)
}

func (*containerServiceNetworkProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceNetworkProfile)(nil)).Elem()
}

func (i *containerServiceNetworkProfilePtrType) ToContainerServiceNetworkProfilePtrOutput() ContainerServiceNetworkProfilePtrOutput {
	return i.ToContainerServiceNetworkProfilePtrOutputWithContext(context.Background())
}

func (i *containerServiceNetworkProfilePtrType) ToContainerServiceNetworkProfilePtrOutputWithContext(ctx context.Context) ContainerServiceNetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceNetworkProfilePtrOutput)
}

// Profile of network configuration.
type ContainerServiceNetworkProfileOutput struct{ *pulumi.OutputState }

func (ContainerServiceNetworkProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceNetworkProfile)(nil)).Elem()
}

func (o ContainerServiceNetworkProfileOutput) ToContainerServiceNetworkProfileOutput() ContainerServiceNetworkProfileOutput {
	return o
}

func (o ContainerServiceNetworkProfileOutput) ToContainerServiceNetworkProfileOutputWithContext(ctx context.Context) ContainerServiceNetworkProfileOutput {
	return o
}

func (o ContainerServiceNetworkProfileOutput) ToContainerServiceNetworkProfilePtrOutput() ContainerServiceNetworkProfilePtrOutput {
	return o.ToContainerServiceNetworkProfilePtrOutputWithContext(context.Background())
}

func (o ContainerServiceNetworkProfileOutput) ToContainerServiceNetworkProfilePtrOutputWithContext(ctx context.Context) ContainerServiceNetworkProfilePtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfile) *ContainerServiceNetworkProfile {
		return &v
	}).(ContainerServiceNetworkProfilePtrOutput)
}

// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
func (o ContainerServiceNetworkProfileOutput) DnsServiceIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfile) *string { return v.DnsServiceIP }).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
func (o ContainerServiceNetworkProfileOutput) DockerBridgeCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfile) *string { return v.DockerBridgeCidr }).(pulumi.StringPtrOutput)
}

// Profile of the cluster load balancer.
func (o ContainerServiceNetworkProfileOutput) LoadBalancerProfile() ManagedClusterLoadBalancerProfilePtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfile) *ManagedClusterLoadBalancerProfile {
		return v.LoadBalancerProfile
	}).(ManagedClusterLoadBalancerProfilePtrOutput)
}

// The load balancer sku for the managed cluster.
func (o ContainerServiceNetworkProfileOutput) LoadBalancerSku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfile) *string { return v.LoadBalancerSku }).(pulumi.StringPtrOutput)
}

// Network plugin used for building Kubernetes network.
func (o ContainerServiceNetworkProfileOutput) NetworkPlugin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfile) *string { return v.NetworkPlugin }).(pulumi.StringPtrOutput)
}

// Network policy used for building Kubernetes network.
func (o ContainerServiceNetworkProfileOutput) NetworkPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfile) *string { return v.NetworkPolicy }).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range from which to assign pod IPs when kubenet is used.
func (o ContainerServiceNetworkProfileOutput) PodCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfile) *string { return v.PodCidr }).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
func (o ContainerServiceNetworkProfileOutput) ServiceCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfile) *string { return v.ServiceCidr }).(pulumi.StringPtrOutput)
}

type ContainerServiceNetworkProfilePtrOutput struct{ *pulumi.OutputState }

func (ContainerServiceNetworkProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceNetworkProfile)(nil)).Elem()
}

func (o ContainerServiceNetworkProfilePtrOutput) ToContainerServiceNetworkProfilePtrOutput() ContainerServiceNetworkProfilePtrOutput {
	return o
}

func (o ContainerServiceNetworkProfilePtrOutput) ToContainerServiceNetworkProfilePtrOutputWithContext(ctx context.Context) ContainerServiceNetworkProfilePtrOutput {
	return o
}

func (o ContainerServiceNetworkProfilePtrOutput) Elem() ContainerServiceNetworkProfileOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfile) ContainerServiceNetworkProfile { return *v }).(ContainerServiceNetworkProfileOutput)
}

// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
func (o ContainerServiceNetworkProfilePtrOutput) DnsServiceIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.DnsServiceIP
	}).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
func (o ContainerServiceNetworkProfilePtrOutput) DockerBridgeCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.DockerBridgeCidr
	}).(pulumi.StringPtrOutput)
}

// Profile of the cluster load balancer.
func (o ContainerServiceNetworkProfilePtrOutput) LoadBalancerProfile() ManagedClusterLoadBalancerProfilePtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfile) *ManagedClusterLoadBalancerProfile {
		if v == nil {
			return nil
		}
		return v.LoadBalancerProfile
	}).(ManagedClusterLoadBalancerProfilePtrOutput)
}

// The load balancer sku for the managed cluster.
func (o ContainerServiceNetworkProfilePtrOutput) LoadBalancerSku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.LoadBalancerSku
	}).(pulumi.StringPtrOutput)
}

// Network plugin used for building Kubernetes network.
func (o ContainerServiceNetworkProfilePtrOutput) NetworkPlugin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.NetworkPlugin
	}).(pulumi.StringPtrOutput)
}

// Network policy used for building Kubernetes network.
func (o ContainerServiceNetworkProfilePtrOutput) NetworkPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.NetworkPolicy
	}).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range from which to assign pod IPs when kubenet is used.
func (o ContainerServiceNetworkProfilePtrOutput) PodCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.PodCidr
	}).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
func (o ContainerServiceNetworkProfilePtrOutput) ServiceCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.ServiceCidr
	}).(pulumi.StringPtrOutput)
}

// Profile of network configuration.
type ContainerServiceNetworkProfileResponse struct {
	// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
	DnsServiceIP *string `pulumi:"dnsServiceIP"`
	// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
	DockerBridgeCidr *string `pulumi:"dockerBridgeCidr"`
	// Profile of the cluster load balancer.
	LoadBalancerProfile *ManagedClusterLoadBalancerProfileResponse `pulumi:"loadBalancerProfile"`
	// The load balancer sku for the managed cluster.
	LoadBalancerSku *string `pulumi:"loadBalancerSku"`
	// Network plugin used for building Kubernetes network.
	NetworkPlugin *string `pulumi:"networkPlugin"`
	// Network policy used for building Kubernetes network.
	NetworkPolicy *string `pulumi:"networkPolicy"`
	// A CIDR notation IP range from which to assign pod IPs when kubenet is used.
	PodCidr *string `pulumi:"podCidr"`
	// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
	ServiceCidr *string `pulumi:"serviceCidr"`
}

// ContainerServiceNetworkProfileResponseInput is an input type that accepts ContainerServiceNetworkProfileResponseArgs and ContainerServiceNetworkProfileResponseOutput values.
// You can construct a concrete instance of `ContainerServiceNetworkProfileResponseInput` via:
//
//          ContainerServiceNetworkProfileResponseArgs{...}
type ContainerServiceNetworkProfileResponseInput interface {
	pulumi.Input

	ToContainerServiceNetworkProfileResponseOutput() ContainerServiceNetworkProfileResponseOutput
	ToContainerServiceNetworkProfileResponseOutputWithContext(context.Context) ContainerServiceNetworkProfileResponseOutput
}

// Profile of network configuration.
type ContainerServiceNetworkProfileResponseArgs struct {
	// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
	DnsServiceIP pulumi.StringPtrInput `pulumi:"dnsServiceIP"`
	// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
	DockerBridgeCidr pulumi.StringPtrInput `pulumi:"dockerBridgeCidr"`
	// Profile of the cluster load balancer.
	LoadBalancerProfile ManagedClusterLoadBalancerProfileResponsePtrInput `pulumi:"loadBalancerProfile"`
	// The load balancer sku for the managed cluster.
	LoadBalancerSku pulumi.StringPtrInput `pulumi:"loadBalancerSku"`
	// Network plugin used for building Kubernetes network.
	NetworkPlugin pulumi.StringPtrInput `pulumi:"networkPlugin"`
	// Network policy used for building Kubernetes network.
	NetworkPolicy pulumi.StringPtrInput `pulumi:"networkPolicy"`
	// A CIDR notation IP range from which to assign pod IPs when kubenet is used.
	PodCidr pulumi.StringPtrInput `pulumi:"podCidr"`
	// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
	ServiceCidr pulumi.StringPtrInput `pulumi:"serviceCidr"`
}

func (ContainerServiceNetworkProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceNetworkProfileResponse)(nil)).Elem()
}

func (i ContainerServiceNetworkProfileResponseArgs) ToContainerServiceNetworkProfileResponseOutput() ContainerServiceNetworkProfileResponseOutput {
	return i.ToContainerServiceNetworkProfileResponseOutputWithContext(context.Background())
}

func (i ContainerServiceNetworkProfileResponseArgs) ToContainerServiceNetworkProfileResponseOutputWithContext(ctx context.Context) ContainerServiceNetworkProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceNetworkProfileResponseOutput)
}

func (i ContainerServiceNetworkProfileResponseArgs) ToContainerServiceNetworkProfileResponsePtrOutput() ContainerServiceNetworkProfileResponsePtrOutput {
	return i.ToContainerServiceNetworkProfileResponsePtrOutputWithContext(context.Background())
}

func (i ContainerServiceNetworkProfileResponseArgs) ToContainerServiceNetworkProfileResponsePtrOutputWithContext(ctx context.Context) ContainerServiceNetworkProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceNetworkProfileResponseOutput).ToContainerServiceNetworkProfileResponsePtrOutputWithContext(ctx)
}

// ContainerServiceNetworkProfileResponsePtrInput is an input type that accepts ContainerServiceNetworkProfileResponseArgs, ContainerServiceNetworkProfileResponsePtr and ContainerServiceNetworkProfileResponsePtrOutput values.
// You can construct a concrete instance of `ContainerServiceNetworkProfileResponsePtrInput` via:
//
//          ContainerServiceNetworkProfileResponseArgs{...}
//
//  or:
//
//          nil
type ContainerServiceNetworkProfileResponsePtrInput interface {
	pulumi.Input

	ToContainerServiceNetworkProfileResponsePtrOutput() ContainerServiceNetworkProfileResponsePtrOutput
	ToContainerServiceNetworkProfileResponsePtrOutputWithContext(context.Context) ContainerServiceNetworkProfileResponsePtrOutput
}

type containerServiceNetworkProfileResponsePtrType ContainerServiceNetworkProfileResponseArgs

func ContainerServiceNetworkProfileResponsePtr(v *ContainerServiceNetworkProfileResponseArgs) ContainerServiceNetworkProfileResponsePtrInput {
	return (*containerServiceNetworkProfileResponsePtrType)(v)
}

func (*containerServiceNetworkProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceNetworkProfileResponse)(nil)).Elem()
}

func (i *containerServiceNetworkProfileResponsePtrType) ToContainerServiceNetworkProfileResponsePtrOutput() ContainerServiceNetworkProfileResponsePtrOutput {
	return i.ToContainerServiceNetworkProfileResponsePtrOutputWithContext(context.Background())
}

func (i *containerServiceNetworkProfileResponsePtrType) ToContainerServiceNetworkProfileResponsePtrOutputWithContext(ctx context.Context) ContainerServiceNetworkProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceNetworkProfileResponsePtrOutput)
}

// Profile of network configuration.
type ContainerServiceNetworkProfileResponseOutput struct{ *pulumi.OutputState }

func (ContainerServiceNetworkProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceNetworkProfileResponse)(nil)).Elem()
}

func (o ContainerServiceNetworkProfileResponseOutput) ToContainerServiceNetworkProfileResponseOutput() ContainerServiceNetworkProfileResponseOutput {
	return o
}

func (o ContainerServiceNetworkProfileResponseOutput) ToContainerServiceNetworkProfileResponseOutputWithContext(ctx context.Context) ContainerServiceNetworkProfileResponseOutput {
	return o
}

func (o ContainerServiceNetworkProfileResponseOutput) ToContainerServiceNetworkProfileResponsePtrOutput() ContainerServiceNetworkProfileResponsePtrOutput {
	return o.ToContainerServiceNetworkProfileResponsePtrOutputWithContext(context.Background())
}

func (o ContainerServiceNetworkProfileResponseOutput) ToContainerServiceNetworkProfileResponsePtrOutputWithContext(ctx context.Context) ContainerServiceNetworkProfileResponsePtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfileResponse) *ContainerServiceNetworkProfileResponse {
		return &v
	}).(ContainerServiceNetworkProfileResponsePtrOutput)
}

// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
func (o ContainerServiceNetworkProfileResponseOutput) DnsServiceIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfileResponse) *string { return v.DnsServiceIP }).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
func (o ContainerServiceNetworkProfileResponseOutput) DockerBridgeCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfileResponse) *string { return v.DockerBridgeCidr }).(pulumi.StringPtrOutput)
}

// Profile of the cluster load balancer.
func (o ContainerServiceNetworkProfileResponseOutput) LoadBalancerProfile() ManagedClusterLoadBalancerProfileResponsePtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfileResponse) *ManagedClusterLoadBalancerProfileResponse {
		return v.LoadBalancerProfile
	}).(ManagedClusterLoadBalancerProfileResponsePtrOutput)
}

// The load balancer sku for the managed cluster.
func (o ContainerServiceNetworkProfileResponseOutput) LoadBalancerSku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfileResponse) *string { return v.LoadBalancerSku }).(pulumi.StringPtrOutput)
}

// Network plugin used for building Kubernetes network.
func (o ContainerServiceNetworkProfileResponseOutput) NetworkPlugin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfileResponse) *string { return v.NetworkPlugin }).(pulumi.StringPtrOutput)
}

// Network policy used for building Kubernetes network.
func (o ContainerServiceNetworkProfileResponseOutput) NetworkPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfileResponse) *string { return v.NetworkPolicy }).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range from which to assign pod IPs when kubenet is used.
func (o ContainerServiceNetworkProfileResponseOutput) PodCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfileResponse) *string { return v.PodCidr }).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
func (o ContainerServiceNetworkProfileResponseOutput) ServiceCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfileResponse) *string { return v.ServiceCidr }).(pulumi.StringPtrOutput)
}

type ContainerServiceNetworkProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ContainerServiceNetworkProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceNetworkProfileResponse)(nil)).Elem()
}

func (o ContainerServiceNetworkProfileResponsePtrOutput) ToContainerServiceNetworkProfileResponsePtrOutput() ContainerServiceNetworkProfileResponsePtrOutput {
	return o
}

func (o ContainerServiceNetworkProfileResponsePtrOutput) ToContainerServiceNetworkProfileResponsePtrOutputWithContext(ctx context.Context) ContainerServiceNetworkProfileResponsePtrOutput {
	return o
}

func (o ContainerServiceNetworkProfileResponsePtrOutput) Elem() ContainerServiceNetworkProfileResponseOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfileResponse) ContainerServiceNetworkProfileResponse { return *v }).(ContainerServiceNetworkProfileResponseOutput)
}

// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
func (o ContainerServiceNetworkProfileResponsePtrOutput) DnsServiceIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.DnsServiceIP
	}).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
func (o ContainerServiceNetworkProfileResponsePtrOutput) DockerBridgeCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.DockerBridgeCidr
	}).(pulumi.StringPtrOutput)
}

// Profile of the cluster load balancer.
func (o ContainerServiceNetworkProfileResponsePtrOutput) LoadBalancerProfile() ManagedClusterLoadBalancerProfileResponsePtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfileResponse) *ManagedClusterLoadBalancerProfileResponse {
		if v == nil {
			return nil
		}
		return v.LoadBalancerProfile
	}).(ManagedClusterLoadBalancerProfileResponsePtrOutput)
}

// The load balancer sku for the managed cluster.
func (o ContainerServiceNetworkProfileResponsePtrOutput) LoadBalancerSku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.LoadBalancerSku
	}).(pulumi.StringPtrOutput)
}

// Network plugin used for building Kubernetes network.
func (o ContainerServiceNetworkProfileResponsePtrOutput) NetworkPlugin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.NetworkPlugin
	}).(pulumi.StringPtrOutput)
}

// Network policy used for building Kubernetes network.
func (o ContainerServiceNetworkProfileResponsePtrOutput) NetworkPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.NetworkPolicy
	}).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range from which to assign pod IPs when kubenet is used.
func (o ContainerServiceNetworkProfileResponsePtrOutput) PodCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.PodCidr
	}).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
func (o ContainerServiceNetworkProfileResponsePtrOutput) ServiceCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServiceCidr
	}).(pulumi.StringPtrOutput)
}

// SSH configuration for Linux-based VMs running on Azure.
type ContainerServiceSshConfiguration struct {
	// The list of SSH public keys used to authenticate with Linux-based VMs. Only expect one key specified.
	PublicKeys []ContainerServiceSshPublicKey `pulumi:"publicKeys"`
}

// ContainerServiceSshConfigurationInput is an input type that accepts ContainerServiceSshConfigurationArgs and ContainerServiceSshConfigurationOutput values.
// You can construct a concrete instance of `ContainerServiceSshConfigurationInput` via:
//
//          ContainerServiceSshConfigurationArgs{...}
type ContainerServiceSshConfigurationInput interface {
	pulumi.Input

	ToContainerServiceSshConfigurationOutput() ContainerServiceSshConfigurationOutput
	ToContainerServiceSshConfigurationOutputWithContext(context.Context) ContainerServiceSshConfigurationOutput
}

// SSH configuration for Linux-based VMs running on Azure.
type ContainerServiceSshConfigurationArgs struct {
	// The list of SSH public keys used to authenticate with Linux-based VMs. Only expect one key specified.
	PublicKeys ContainerServiceSshPublicKeyArrayInput `pulumi:"publicKeys"`
}

func (ContainerServiceSshConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceSshConfiguration)(nil)).Elem()
}

func (i ContainerServiceSshConfigurationArgs) ToContainerServiceSshConfigurationOutput() ContainerServiceSshConfigurationOutput {
	return i.ToContainerServiceSshConfigurationOutputWithContext(context.Background())
}

func (i ContainerServiceSshConfigurationArgs) ToContainerServiceSshConfigurationOutputWithContext(ctx context.Context) ContainerServiceSshConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceSshConfigurationOutput)
}

func (i ContainerServiceSshConfigurationArgs) ToContainerServiceSshConfigurationPtrOutput() ContainerServiceSshConfigurationPtrOutput {
	return i.ToContainerServiceSshConfigurationPtrOutputWithContext(context.Background())
}

func (i ContainerServiceSshConfigurationArgs) ToContainerServiceSshConfigurationPtrOutputWithContext(ctx context.Context) ContainerServiceSshConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceSshConfigurationOutput).ToContainerServiceSshConfigurationPtrOutputWithContext(ctx)
}

// ContainerServiceSshConfigurationPtrInput is an input type that accepts ContainerServiceSshConfigurationArgs, ContainerServiceSshConfigurationPtr and ContainerServiceSshConfigurationPtrOutput values.
// You can construct a concrete instance of `ContainerServiceSshConfigurationPtrInput` via:
//
//          ContainerServiceSshConfigurationArgs{...}
//
//  or:
//
//          nil
type ContainerServiceSshConfigurationPtrInput interface {
	pulumi.Input

	ToContainerServiceSshConfigurationPtrOutput() ContainerServiceSshConfigurationPtrOutput
	ToContainerServiceSshConfigurationPtrOutputWithContext(context.Context) ContainerServiceSshConfigurationPtrOutput
}

type containerServiceSshConfigurationPtrType ContainerServiceSshConfigurationArgs

func ContainerServiceSshConfigurationPtr(v *ContainerServiceSshConfigurationArgs) ContainerServiceSshConfigurationPtrInput {
	return (*containerServiceSshConfigurationPtrType)(v)
}

func (*containerServiceSshConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceSshConfiguration)(nil)).Elem()
}

func (i *containerServiceSshConfigurationPtrType) ToContainerServiceSshConfigurationPtrOutput() ContainerServiceSshConfigurationPtrOutput {
	return i.ToContainerServiceSshConfigurationPtrOutputWithContext(context.Background())
}

func (i *containerServiceSshConfigurationPtrType) ToContainerServiceSshConfigurationPtrOutputWithContext(ctx context.Context) ContainerServiceSshConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceSshConfigurationPtrOutput)
}

// SSH configuration for Linux-based VMs running on Azure.
type ContainerServiceSshConfigurationOutput struct{ *pulumi.OutputState }

func (ContainerServiceSshConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceSshConfiguration)(nil)).Elem()
}

func (o ContainerServiceSshConfigurationOutput) ToContainerServiceSshConfigurationOutput() ContainerServiceSshConfigurationOutput {
	return o
}

func (o ContainerServiceSshConfigurationOutput) ToContainerServiceSshConfigurationOutputWithContext(ctx context.Context) ContainerServiceSshConfigurationOutput {
	return o
}

func (o ContainerServiceSshConfigurationOutput) ToContainerServiceSshConfigurationPtrOutput() ContainerServiceSshConfigurationPtrOutput {
	return o.ToContainerServiceSshConfigurationPtrOutputWithContext(context.Background())
}

func (o ContainerServiceSshConfigurationOutput) ToContainerServiceSshConfigurationPtrOutputWithContext(ctx context.Context) ContainerServiceSshConfigurationPtrOutput {
	return o.ApplyT(func(v ContainerServiceSshConfiguration) *ContainerServiceSshConfiguration {
		return &v
	}).(ContainerServiceSshConfigurationPtrOutput)
}

// The list of SSH public keys used to authenticate with Linux-based VMs. Only expect one key specified.
func (o ContainerServiceSshConfigurationOutput) PublicKeys() ContainerServiceSshPublicKeyArrayOutput {
	return o.ApplyT(func(v ContainerServiceSshConfiguration) []ContainerServiceSshPublicKey { return v.PublicKeys }).(ContainerServiceSshPublicKeyArrayOutput)
}

type ContainerServiceSshConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ContainerServiceSshConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceSshConfiguration)(nil)).Elem()
}

func (o ContainerServiceSshConfigurationPtrOutput) ToContainerServiceSshConfigurationPtrOutput() ContainerServiceSshConfigurationPtrOutput {
	return o
}

func (o ContainerServiceSshConfigurationPtrOutput) ToContainerServiceSshConfigurationPtrOutputWithContext(ctx context.Context) ContainerServiceSshConfigurationPtrOutput {
	return o
}

func (o ContainerServiceSshConfigurationPtrOutput) Elem() ContainerServiceSshConfigurationOutput {
	return o.ApplyT(func(v *ContainerServiceSshConfiguration) ContainerServiceSshConfiguration { return *v }).(ContainerServiceSshConfigurationOutput)
}

// The list of SSH public keys used to authenticate with Linux-based VMs. Only expect one key specified.
func (o ContainerServiceSshConfigurationPtrOutput) PublicKeys() ContainerServiceSshPublicKeyArrayOutput {
	return o.ApplyT(func(v *ContainerServiceSshConfiguration) []ContainerServiceSshPublicKey {
		if v == nil {
			return nil
		}
		return v.PublicKeys
	}).(ContainerServiceSshPublicKeyArrayOutput)
}

// SSH configuration for Linux-based VMs running on Azure.
type ContainerServiceSshConfigurationResponse struct {
	// The list of SSH public keys used to authenticate with Linux-based VMs. Only expect one key specified.
	PublicKeys []ContainerServiceSshPublicKeyResponse `pulumi:"publicKeys"`
}

// ContainerServiceSshConfigurationResponseInput is an input type that accepts ContainerServiceSshConfigurationResponseArgs and ContainerServiceSshConfigurationResponseOutput values.
// You can construct a concrete instance of `ContainerServiceSshConfigurationResponseInput` via:
//
//          ContainerServiceSshConfigurationResponseArgs{...}
type ContainerServiceSshConfigurationResponseInput interface {
	pulumi.Input

	ToContainerServiceSshConfigurationResponseOutput() ContainerServiceSshConfigurationResponseOutput
	ToContainerServiceSshConfigurationResponseOutputWithContext(context.Context) ContainerServiceSshConfigurationResponseOutput
}

// SSH configuration for Linux-based VMs running on Azure.
type ContainerServiceSshConfigurationResponseArgs struct {
	// The list of SSH public keys used to authenticate with Linux-based VMs. Only expect one key specified.
	PublicKeys ContainerServiceSshPublicKeyResponseArrayInput `pulumi:"publicKeys"`
}

func (ContainerServiceSshConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceSshConfigurationResponse)(nil)).Elem()
}

func (i ContainerServiceSshConfigurationResponseArgs) ToContainerServiceSshConfigurationResponseOutput() ContainerServiceSshConfigurationResponseOutput {
	return i.ToContainerServiceSshConfigurationResponseOutputWithContext(context.Background())
}

func (i ContainerServiceSshConfigurationResponseArgs) ToContainerServiceSshConfigurationResponseOutputWithContext(ctx context.Context) ContainerServiceSshConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceSshConfigurationResponseOutput)
}

func (i ContainerServiceSshConfigurationResponseArgs) ToContainerServiceSshConfigurationResponsePtrOutput() ContainerServiceSshConfigurationResponsePtrOutput {
	return i.ToContainerServiceSshConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i ContainerServiceSshConfigurationResponseArgs) ToContainerServiceSshConfigurationResponsePtrOutputWithContext(ctx context.Context) ContainerServiceSshConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceSshConfigurationResponseOutput).ToContainerServiceSshConfigurationResponsePtrOutputWithContext(ctx)
}

// ContainerServiceSshConfigurationResponsePtrInput is an input type that accepts ContainerServiceSshConfigurationResponseArgs, ContainerServiceSshConfigurationResponsePtr and ContainerServiceSshConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `ContainerServiceSshConfigurationResponsePtrInput` via:
//
//          ContainerServiceSshConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type ContainerServiceSshConfigurationResponsePtrInput interface {
	pulumi.Input

	ToContainerServiceSshConfigurationResponsePtrOutput() ContainerServiceSshConfigurationResponsePtrOutput
	ToContainerServiceSshConfigurationResponsePtrOutputWithContext(context.Context) ContainerServiceSshConfigurationResponsePtrOutput
}

type containerServiceSshConfigurationResponsePtrType ContainerServiceSshConfigurationResponseArgs

func ContainerServiceSshConfigurationResponsePtr(v *ContainerServiceSshConfigurationResponseArgs) ContainerServiceSshConfigurationResponsePtrInput {
	return (*containerServiceSshConfigurationResponsePtrType)(v)
}

func (*containerServiceSshConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceSshConfigurationResponse)(nil)).Elem()
}

func (i *containerServiceSshConfigurationResponsePtrType) ToContainerServiceSshConfigurationResponsePtrOutput() ContainerServiceSshConfigurationResponsePtrOutput {
	return i.ToContainerServiceSshConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *containerServiceSshConfigurationResponsePtrType) ToContainerServiceSshConfigurationResponsePtrOutputWithContext(ctx context.Context) ContainerServiceSshConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceSshConfigurationResponsePtrOutput)
}

// SSH configuration for Linux-based VMs running on Azure.
type ContainerServiceSshConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ContainerServiceSshConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceSshConfigurationResponse)(nil)).Elem()
}

func (o ContainerServiceSshConfigurationResponseOutput) ToContainerServiceSshConfigurationResponseOutput() ContainerServiceSshConfigurationResponseOutput {
	return o
}

func (o ContainerServiceSshConfigurationResponseOutput) ToContainerServiceSshConfigurationResponseOutputWithContext(ctx context.Context) ContainerServiceSshConfigurationResponseOutput {
	return o
}

func (o ContainerServiceSshConfigurationResponseOutput) ToContainerServiceSshConfigurationResponsePtrOutput() ContainerServiceSshConfigurationResponsePtrOutput {
	return o.ToContainerServiceSshConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o ContainerServiceSshConfigurationResponseOutput) ToContainerServiceSshConfigurationResponsePtrOutputWithContext(ctx context.Context) ContainerServiceSshConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ContainerServiceSshConfigurationResponse) *ContainerServiceSshConfigurationResponse {
		return &v
	}).(ContainerServiceSshConfigurationResponsePtrOutput)
}

// The list of SSH public keys used to authenticate with Linux-based VMs. Only expect one key specified.
func (o ContainerServiceSshConfigurationResponseOutput) PublicKeys() ContainerServiceSshPublicKeyResponseArrayOutput {
	return o.ApplyT(func(v ContainerServiceSshConfigurationResponse) []ContainerServiceSshPublicKeyResponse {
		return v.PublicKeys
	}).(ContainerServiceSshPublicKeyResponseArrayOutput)
}

type ContainerServiceSshConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (ContainerServiceSshConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceSshConfigurationResponse)(nil)).Elem()
}

func (o ContainerServiceSshConfigurationResponsePtrOutput) ToContainerServiceSshConfigurationResponsePtrOutput() ContainerServiceSshConfigurationResponsePtrOutput {
	return o
}

func (o ContainerServiceSshConfigurationResponsePtrOutput) ToContainerServiceSshConfigurationResponsePtrOutputWithContext(ctx context.Context) ContainerServiceSshConfigurationResponsePtrOutput {
	return o
}

func (o ContainerServiceSshConfigurationResponsePtrOutput) Elem() ContainerServiceSshConfigurationResponseOutput {
	return o.ApplyT(func(v *ContainerServiceSshConfigurationResponse) ContainerServiceSshConfigurationResponse { return *v }).(ContainerServiceSshConfigurationResponseOutput)
}

// The list of SSH public keys used to authenticate with Linux-based VMs. Only expect one key specified.
func (o ContainerServiceSshConfigurationResponsePtrOutput) PublicKeys() ContainerServiceSshPublicKeyResponseArrayOutput {
	return o.ApplyT(func(v *ContainerServiceSshConfigurationResponse) []ContainerServiceSshPublicKeyResponse {
		if v == nil {
			return nil
		}
		return v.PublicKeys
	}).(ContainerServiceSshPublicKeyResponseArrayOutput)
}

// Contains information about SSH certificate public key data.
type ContainerServiceSshPublicKey struct {
	// Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.
	KeyData string `pulumi:"keyData"`
}

// ContainerServiceSshPublicKeyInput is an input type that accepts ContainerServiceSshPublicKeyArgs and ContainerServiceSshPublicKeyOutput values.
// You can construct a concrete instance of `ContainerServiceSshPublicKeyInput` via:
//
//          ContainerServiceSshPublicKeyArgs{...}
type ContainerServiceSshPublicKeyInput interface {
	pulumi.Input

	ToContainerServiceSshPublicKeyOutput() ContainerServiceSshPublicKeyOutput
	ToContainerServiceSshPublicKeyOutputWithContext(context.Context) ContainerServiceSshPublicKeyOutput
}

// Contains information about SSH certificate public key data.
type ContainerServiceSshPublicKeyArgs struct {
	// Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.
	KeyData pulumi.StringInput `pulumi:"keyData"`
}

func (ContainerServiceSshPublicKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceSshPublicKey)(nil)).Elem()
}

func (i ContainerServiceSshPublicKeyArgs) ToContainerServiceSshPublicKeyOutput() ContainerServiceSshPublicKeyOutput {
	return i.ToContainerServiceSshPublicKeyOutputWithContext(context.Background())
}

func (i ContainerServiceSshPublicKeyArgs) ToContainerServiceSshPublicKeyOutputWithContext(ctx context.Context) ContainerServiceSshPublicKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceSshPublicKeyOutput)
}

// ContainerServiceSshPublicKeyArrayInput is an input type that accepts ContainerServiceSshPublicKeyArray and ContainerServiceSshPublicKeyArrayOutput values.
// You can construct a concrete instance of `ContainerServiceSshPublicKeyArrayInput` via:
//
//          ContainerServiceSshPublicKeyArray{ ContainerServiceSshPublicKeyArgs{...} }
type ContainerServiceSshPublicKeyArrayInput interface {
	pulumi.Input

	ToContainerServiceSshPublicKeyArrayOutput() ContainerServiceSshPublicKeyArrayOutput
	ToContainerServiceSshPublicKeyArrayOutputWithContext(context.Context) ContainerServiceSshPublicKeyArrayOutput
}

type ContainerServiceSshPublicKeyArray []ContainerServiceSshPublicKeyInput

func (ContainerServiceSshPublicKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerServiceSshPublicKey)(nil)).Elem()
}

func (i ContainerServiceSshPublicKeyArray) ToContainerServiceSshPublicKeyArrayOutput() ContainerServiceSshPublicKeyArrayOutput {
	return i.ToContainerServiceSshPublicKeyArrayOutputWithContext(context.Background())
}

func (i ContainerServiceSshPublicKeyArray) ToContainerServiceSshPublicKeyArrayOutputWithContext(ctx context.Context) ContainerServiceSshPublicKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceSshPublicKeyArrayOutput)
}

// Contains information about SSH certificate public key data.
type ContainerServiceSshPublicKeyOutput struct{ *pulumi.OutputState }

func (ContainerServiceSshPublicKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceSshPublicKey)(nil)).Elem()
}

func (o ContainerServiceSshPublicKeyOutput) ToContainerServiceSshPublicKeyOutput() ContainerServiceSshPublicKeyOutput {
	return o
}

func (o ContainerServiceSshPublicKeyOutput) ToContainerServiceSshPublicKeyOutputWithContext(ctx context.Context) ContainerServiceSshPublicKeyOutput {
	return o
}

// Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.
func (o ContainerServiceSshPublicKeyOutput) KeyData() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerServiceSshPublicKey) string { return v.KeyData }).(pulumi.StringOutput)
}

type ContainerServiceSshPublicKeyArrayOutput struct{ *pulumi.OutputState }

func (ContainerServiceSshPublicKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerServiceSshPublicKey)(nil)).Elem()
}

func (o ContainerServiceSshPublicKeyArrayOutput) ToContainerServiceSshPublicKeyArrayOutput() ContainerServiceSshPublicKeyArrayOutput {
	return o
}

func (o ContainerServiceSshPublicKeyArrayOutput) ToContainerServiceSshPublicKeyArrayOutputWithContext(ctx context.Context) ContainerServiceSshPublicKeyArrayOutput {
	return o
}

func (o ContainerServiceSshPublicKeyArrayOutput) Index(i pulumi.IntInput) ContainerServiceSshPublicKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerServiceSshPublicKey {
		return vs[0].([]ContainerServiceSshPublicKey)[vs[1].(int)]
	}).(ContainerServiceSshPublicKeyOutput)
}

// Contains information about SSH certificate public key data.
type ContainerServiceSshPublicKeyResponse struct {
	// Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.
	KeyData string `pulumi:"keyData"`
}

// ContainerServiceSshPublicKeyResponseInput is an input type that accepts ContainerServiceSshPublicKeyResponseArgs and ContainerServiceSshPublicKeyResponseOutput values.
// You can construct a concrete instance of `ContainerServiceSshPublicKeyResponseInput` via:
//
//          ContainerServiceSshPublicKeyResponseArgs{...}
type ContainerServiceSshPublicKeyResponseInput interface {
	pulumi.Input

	ToContainerServiceSshPublicKeyResponseOutput() ContainerServiceSshPublicKeyResponseOutput
	ToContainerServiceSshPublicKeyResponseOutputWithContext(context.Context) ContainerServiceSshPublicKeyResponseOutput
}

// Contains information about SSH certificate public key data.
type ContainerServiceSshPublicKeyResponseArgs struct {
	// Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.
	KeyData pulumi.StringInput `pulumi:"keyData"`
}

func (ContainerServiceSshPublicKeyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceSshPublicKeyResponse)(nil)).Elem()
}

func (i ContainerServiceSshPublicKeyResponseArgs) ToContainerServiceSshPublicKeyResponseOutput() ContainerServiceSshPublicKeyResponseOutput {
	return i.ToContainerServiceSshPublicKeyResponseOutputWithContext(context.Background())
}

func (i ContainerServiceSshPublicKeyResponseArgs) ToContainerServiceSshPublicKeyResponseOutputWithContext(ctx context.Context) ContainerServiceSshPublicKeyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceSshPublicKeyResponseOutput)
}

// ContainerServiceSshPublicKeyResponseArrayInput is an input type that accepts ContainerServiceSshPublicKeyResponseArray and ContainerServiceSshPublicKeyResponseArrayOutput values.
// You can construct a concrete instance of `ContainerServiceSshPublicKeyResponseArrayInput` via:
//
//          ContainerServiceSshPublicKeyResponseArray{ ContainerServiceSshPublicKeyResponseArgs{...} }
type ContainerServiceSshPublicKeyResponseArrayInput interface {
	pulumi.Input

	ToContainerServiceSshPublicKeyResponseArrayOutput() ContainerServiceSshPublicKeyResponseArrayOutput
	ToContainerServiceSshPublicKeyResponseArrayOutputWithContext(context.Context) ContainerServiceSshPublicKeyResponseArrayOutput
}

type ContainerServiceSshPublicKeyResponseArray []ContainerServiceSshPublicKeyResponseInput

func (ContainerServiceSshPublicKeyResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerServiceSshPublicKeyResponse)(nil)).Elem()
}

func (i ContainerServiceSshPublicKeyResponseArray) ToContainerServiceSshPublicKeyResponseArrayOutput() ContainerServiceSshPublicKeyResponseArrayOutput {
	return i.ToContainerServiceSshPublicKeyResponseArrayOutputWithContext(context.Background())
}

func (i ContainerServiceSshPublicKeyResponseArray) ToContainerServiceSshPublicKeyResponseArrayOutputWithContext(ctx context.Context) ContainerServiceSshPublicKeyResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceSshPublicKeyResponseArrayOutput)
}

// Contains information about SSH certificate public key data.
type ContainerServiceSshPublicKeyResponseOutput struct{ *pulumi.OutputState }

func (ContainerServiceSshPublicKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceSshPublicKeyResponse)(nil)).Elem()
}

func (o ContainerServiceSshPublicKeyResponseOutput) ToContainerServiceSshPublicKeyResponseOutput() ContainerServiceSshPublicKeyResponseOutput {
	return o
}

func (o ContainerServiceSshPublicKeyResponseOutput) ToContainerServiceSshPublicKeyResponseOutputWithContext(ctx context.Context) ContainerServiceSshPublicKeyResponseOutput {
	return o
}

// Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.
func (o ContainerServiceSshPublicKeyResponseOutput) KeyData() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerServiceSshPublicKeyResponse) string { return v.KeyData }).(pulumi.StringOutput)
}

type ContainerServiceSshPublicKeyResponseArrayOutput struct{ *pulumi.OutputState }

func (ContainerServiceSshPublicKeyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerServiceSshPublicKeyResponse)(nil)).Elem()
}

func (o ContainerServiceSshPublicKeyResponseArrayOutput) ToContainerServiceSshPublicKeyResponseArrayOutput() ContainerServiceSshPublicKeyResponseArrayOutput {
	return o
}

func (o ContainerServiceSshPublicKeyResponseArrayOutput) ToContainerServiceSshPublicKeyResponseArrayOutputWithContext(ctx context.Context) ContainerServiceSshPublicKeyResponseArrayOutput {
	return o
}

func (o ContainerServiceSshPublicKeyResponseArrayOutput) Index(i pulumi.IntInput) ContainerServiceSshPublicKeyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerServiceSshPublicKeyResponse {
		return vs[0].([]ContainerServiceSshPublicKeyResponse)[vs[1].(int)]
	}).(ContainerServiceSshPublicKeyResponseOutput)
}

// The credential result response.
type CredentialResultResponse struct {
	// The name of the credential.
	Name string `pulumi:"name"`
	// Base64-encoded Kubernetes configuration file.
	Value string `pulumi:"value"`
}

// CredentialResultResponseInput is an input type that accepts CredentialResultResponseArgs and CredentialResultResponseOutput values.
// You can construct a concrete instance of `CredentialResultResponseInput` via:
//
//          CredentialResultResponseArgs{...}
type CredentialResultResponseInput interface {
	pulumi.Input

	ToCredentialResultResponseOutput() CredentialResultResponseOutput
	ToCredentialResultResponseOutputWithContext(context.Context) CredentialResultResponseOutput
}

// The credential result response.
type CredentialResultResponseArgs struct {
	// The name of the credential.
	Name pulumi.StringInput `pulumi:"name"`
	// Base64-encoded Kubernetes configuration file.
	Value pulumi.StringInput `pulumi:"value"`
}

func (CredentialResultResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CredentialResultResponse)(nil)).Elem()
}

func (i CredentialResultResponseArgs) ToCredentialResultResponseOutput() CredentialResultResponseOutput {
	return i.ToCredentialResultResponseOutputWithContext(context.Background())
}

func (i CredentialResultResponseArgs) ToCredentialResultResponseOutputWithContext(ctx context.Context) CredentialResultResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CredentialResultResponseOutput)
}

// CredentialResultResponseArrayInput is an input type that accepts CredentialResultResponseArray and CredentialResultResponseArrayOutput values.
// You can construct a concrete instance of `CredentialResultResponseArrayInput` via:
//
//          CredentialResultResponseArray{ CredentialResultResponseArgs{...} }
type CredentialResultResponseArrayInput interface {
	pulumi.Input

	ToCredentialResultResponseArrayOutput() CredentialResultResponseArrayOutput
	ToCredentialResultResponseArrayOutputWithContext(context.Context) CredentialResultResponseArrayOutput
}

type CredentialResultResponseArray []CredentialResultResponseInput

func (CredentialResultResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CredentialResultResponse)(nil)).Elem()
}

func (i CredentialResultResponseArray) ToCredentialResultResponseArrayOutput() CredentialResultResponseArrayOutput {
	return i.ToCredentialResultResponseArrayOutputWithContext(context.Background())
}

func (i CredentialResultResponseArray) ToCredentialResultResponseArrayOutputWithContext(ctx context.Context) CredentialResultResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CredentialResultResponseArrayOutput)
}

// The credential result response.
type CredentialResultResponseOutput struct{ *pulumi.OutputState }

func (CredentialResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CredentialResultResponse)(nil)).Elem()
}

func (o CredentialResultResponseOutput) ToCredentialResultResponseOutput() CredentialResultResponseOutput {
	return o
}

func (o CredentialResultResponseOutput) ToCredentialResultResponseOutputWithContext(ctx context.Context) CredentialResultResponseOutput {
	return o
}

// The name of the credential.
func (o CredentialResultResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CredentialResultResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Base64-encoded Kubernetes configuration file.
func (o CredentialResultResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v CredentialResultResponse) string { return v.Value }).(pulumi.StringOutput)
}

type CredentialResultResponseArrayOutput struct{ *pulumi.OutputState }

func (CredentialResultResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CredentialResultResponse)(nil)).Elem()
}

func (o CredentialResultResponseArrayOutput) ToCredentialResultResponseArrayOutput() CredentialResultResponseArrayOutput {
	return o
}

func (o CredentialResultResponseArrayOutput) ToCredentialResultResponseArrayOutputWithContext(ctx context.Context) CredentialResultResponseArrayOutput {
	return o
}

func (o CredentialResultResponseArrayOutput) Index(i pulumi.IntInput) CredentialResultResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CredentialResultResponse {
		return vs[0].([]CredentialResultResponse)[vs[1].(int)]
	}).(CredentialResultResponseOutput)
}

// Managed cluster.
type ManagedClusterType struct {
	// The identity of the managed cluster, if configured.
	Identity *ManagedClusterIdentityResponse `pulumi:"identity"`
	// Resource location
	Location string `pulumi:"location"`
	// Resource name
	Name string `pulumi:"name"`
	// Properties of a managed cluster.
	Properties ManagedClusterPropertiesResponse `pulumi:"properties"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type string `pulumi:"type"`
}

// ManagedClusterTypeInput is an input type that accepts ManagedClusterTypeArgs and ManagedClusterTypeOutput values.
// You can construct a concrete instance of `ManagedClusterTypeInput` via:
//
//          ManagedClusterTypeArgs{...}
type ManagedClusterTypeInput interface {
	pulumi.Input

	ToManagedClusterTypeOutput() ManagedClusterTypeOutput
	ToManagedClusterTypeOutputWithContext(context.Context) ManagedClusterTypeOutput
}

// Managed cluster.
type ManagedClusterTypeArgs struct {
	// The identity of the managed cluster, if configured.
	Identity ManagedClusterIdentityResponsePtrInput `pulumi:"identity"`
	// Resource location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource name
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of a managed cluster.
	Properties ManagedClusterPropertiesResponseInput `pulumi:"properties"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringInput `pulumi:"type"`
}

func (ManagedClusterTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterType)(nil)).Elem()
}

func (i ManagedClusterTypeArgs) ToManagedClusterTypeOutput() ManagedClusterTypeOutput {
	return i.ToManagedClusterTypeOutputWithContext(context.Background())
}

func (i ManagedClusterTypeArgs) ToManagedClusterTypeOutputWithContext(ctx context.Context) ManagedClusterTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterTypeOutput)
}

// Managed cluster.
type ManagedClusterTypeOutput struct{ *pulumi.OutputState }

func (ManagedClusterTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterType)(nil)).Elem()
}

func (o ManagedClusterTypeOutput) ToManagedClusterTypeOutput() ManagedClusterTypeOutput {
	return o
}

func (o ManagedClusterTypeOutput) ToManagedClusterTypeOutputWithContext(ctx context.Context) ManagedClusterTypeOutput {
	return o
}

// The identity of the managed cluster, if configured.
func (o ManagedClusterTypeOutput) Identity() ManagedClusterIdentityResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterType) *ManagedClusterIdentityResponse { return v.Identity }).(ManagedClusterIdentityResponsePtrOutput)
}

// Resource location
func (o ManagedClusterTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource name
func (o ManagedClusterTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of a managed cluster.
func (o ManagedClusterTypeOutput) Properties() ManagedClusterPropertiesResponseOutput {
	return o.ApplyT(func(v ManagedClusterType) ManagedClusterPropertiesResponse { return v.Properties }).(ManagedClusterPropertiesResponseOutput)
}

// Resource tags
func (o ManagedClusterTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ManagedClusterType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o ManagedClusterTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterType) string { return v.Type }).(pulumi.StringOutput)
}

// AADProfile specifies attributes for Azure Active Directory integration.
type ManagedClusterAADProfile struct {
	// The client AAD application ID.
	ClientAppID string `pulumi:"clientAppID"`
	// The server AAD application ID.
	ServerAppID string `pulumi:"serverAppID"`
	// The server AAD application secret.
	ServerAppSecret *string `pulumi:"serverAppSecret"`
	// The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
	TenantID *string `pulumi:"tenantID"`
}

// ManagedClusterAADProfileInput is an input type that accepts ManagedClusterAADProfileArgs and ManagedClusterAADProfileOutput values.
// You can construct a concrete instance of `ManagedClusterAADProfileInput` via:
//
//          ManagedClusterAADProfileArgs{...}
type ManagedClusterAADProfileInput interface {
	pulumi.Input

	ToManagedClusterAADProfileOutput() ManagedClusterAADProfileOutput
	ToManagedClusterAADProfileOutputWithContext(context.Context) ManagedClusterAADProfileOutput
}

// AADProfile specifies attributes for Azure Active Directory integration.
type ManagedClusterAADProfileArgs struct {
	// The client AAD application ID.
	ClientAppID pulumi.StringInput `pulumi:"clientAppID"`
	// The server AAD application ID.
	ServerAppID pulumi.StringInput `pulumi:"serverAppID"`
	// The server AAD application secret.
	ServerAppSecret pulumi.StringPtrInput `pulumi:"serverAppSecret"`
	// The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
	TenantID pulumi.StringPtrInput `pulumi:"tenantID"`
}

func (ManagedClusterAADProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAADProfile)(nil)).Elem()
}

func (i ManagedClusterAADProfileArgs) ToManagedClusterAADProfileOutput() ManagedClusterAADProfileOutput {
	return i.ToManagedClusterAADProfileOutputWithContext(context.Background())
}

func (i ManagedClusterAADProfileArgs) ToManagedClusterAADProfileOutputWithContext(ctx context.Context) ManagedClusterAADProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAADProfileOutput)
}

func (i ManagedClusterAADProfileArgs) ToManagedClusterAADProfilePtrOutput() ManagedClusterAADProfilePtrOutput {
	return i.ToManagedClusterAADProfilePtrOutputWithContext(context.Background())
}

func (i ManagedClusterAADProfileArgs) ToManagedClusterAADProfilePtrOutputWithContext(ctx context.Context) ManagedClusterAADProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAADProfileOutput).ToManagedClusterAADProfilePtrOutputWithContext(ctx)
}

// ManagedClusterAADProfilePtrInput is an input type that accepts ManagedClusterAADProfileArgs, ManagedClusterAADProfilePtr and ManagedClusterAADProfilePtrOutput values.
// You can construct a concrete instance of `ManagedClusterAADProfilePtrInput` via:
//
//          ManagedClusterAADProfileArgs{...}
//
//  or:
//
//          nil
type ManagedClusterAADProfilePtrInput interface {
	pulumi.Input

	ToManagedClusterAADProfilePtrOutput() ManagedClusterAADProfilePtrOutput
	ToManagedClusterAADProfilePtrOutputWithContext(context.Context) ManagedClusterAADProfilePtrOutput
}

type managedClusterAADProfilePtrType ManagedClusterAADProfileArgs

func ManagedClusterAADProfilePtr(v *ManagedClusterAADProfileArgs) ManagedClusterAADProfilePtrInput {
	return (*managedClusterAADProfilePtrType)(v)
}

func (*managedClusterAADProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterAADProfile)(nil)).Elem()
}

func (i *managedClusterAADProfilePtrType) ToManagedClusterAADProfilePtrOutput() ManagedClusterAADProfilePtrOutput {
	return i.ToManagedClusterAADProfilePtrOutputWithContext(context.Background())
}

func (i *managedClusterAADProfilePtrType) ToManagedClusterAADProfilePtrOutputWithContext(ctx context.Context) ManagedClusterAADProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAADProfilePtrOutput)
}

// AADProfile specifies attributes for Azure Active Directory integration.
type ManagedClusterAADProfileOutput struct{ *pulumi.OutputState }

func (ManagedClusterAADProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAADProfile)(nil)).Elem()
}

func (o ManagedClusterAADProfileOutput) ToManagedClusterAADProfileOutput() ManagedClusterAADProfileOutput {
	return o
}

func (o ManagedClusterAADProfileOutput) ToManagedClusterAADProfileOutputWithContext(ctx context.Context) ManagedClusterAADProfileOutput {
	return o
}

func (o ManagedClusterAADProfileOutput) ToManagedClusterAADProfilePtrOutput() ManagedClusterAADProfilePtrOutput {
	return o.ToManagedClusterAADProfilePtrOutputWithContext(context.Background())
}

func (o ManagedClusterAADProfileOutput) ToManagedClusterAADProfilePtrOutputWithContext(ctx context.Context) ManagedClusterAADProfilePtrOutput {
	return o.ApplyT(func(v ManagedClusterAADProfile) *ManagedClusterAADProfile {
		return &v
	}).(ManagedClusterAADProfilePtrOutput)
}

// The client AAD application ID.
func (o ManagedClusterAADProfileOutput) ClientAppID() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterAADProfile) string { return v.ClientAppID }).(pulumi.StringOutput)
}

// The server AAD application ID.
func (o ManagedClusterAADProfileOutput) ServerAppID() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterAADProfile) string { return v.ServerAppID }).(pulumi.StringOutput)
}

// The server AAD application secret.
func (o ManagedClusterAADProfileOutput) ServerAppSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAADProfile) *string { return v.ServerAppSecret }).(pulumi.StringPtrOutput)
}

// The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
func (o ManagedClusterAADProfileOutput) TenantID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAADProfile) *string { return v.TenantID }).(pulumi.StringPtrOutput)
}

type ManagedClusterAADProfilePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterAADProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterAADProfile)(nil)).Elem()
}

func (o ManagedClusterAADProfilePtrOutput) ToManagedClusterAADProfilePtrOutput() ManagedClusterAADProfilePtrOutput {
	return o
}

func (o ManagedClusterAADProfilePtrOutput) ToManagedClusterAADProfilePtrOutputWithContext(ctx context.Context) ManagedClusterAADProfilePtrOutput {
	return o
}

func (o ManagedClusterAADProfilePtrOutput) Elem() ManagedClusterAADProfileOutput {
	return o.ApplyT(func(v *ManagedClusterAADProfile) ManagedClusterAADProfile { return *v }).(ManagedClusterAADProfileOutput)
}

// The client AAD application ID.
func (o ManagedClusterAADProfilePtrOutput) ClientAppID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAADProfile) *string {
		if v == nil {
			return nil
		}
		return &v.ClientAppID
	}).(pulumi.StringPtrOutput)
}

// The server AAD application ID.
func (o ManagedClusterAADProfilePtrOutput) ServerAppID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAADProfile) *string {
		if v == nil {
			return nil
		}
		return &v.ServerAppID
	}).(pulumi.StringPtrOutput)
}

// The server AAD application secret.
func (o ManagedClusterAADProfilePtrOutput) ServerAppSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAADProfile) *string {
		if v == nil {
			return nil
		}
		return v.ServerAppSecret
	}).(pulumi.StringPtrOutput)
}

// The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
func (o ManagedClusterAADProfilePtrOutput) TenantID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAADProfile) *string {
		if v == nil {
			return nil
		}
		return v.TenantID
	}).(pulumi.StringPtrOutput)
}

// AADProfile specifies attributes for Azure Active Directory integration.
type ManagedClusterAADProfileResponse struct {
	// The client AAD application ID.
	ClientAppID string `pulumi:"clientAppID"`
	// The server AAD application ID.
	ServerAppID string `pulumi:"serverAppID"`
	// The server AAD application secret.
	ServerAppSecret *string `pulumi:"serverAppSecret"`
	// The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
	TenantID *string `pulumi:"tenantID"`
}

// ManagedClusterAADProfileResponseInput is an input type that accepts ManagedClusterAADProfileResponseArgs and ManagedClusterAADProfileResponseOutput values.
// You can construct a concrete instance of `ManagedClusterAADProfileResponseInput` via:
//
//          ManagedClusterAADProfileResponseArgs{...}
type ManagedClusterAADProfileResponseInput interface {
	pulumi.Input

	ToManagedClusterAADProfileResponseOutput() ManagedClusterAADProfileResponseOutput
	ToManagedClusterAADProfileResponseOutputWithContext(context.Context) ManagedClusterAADProfileResponseOutput
}

// AADProfile specifies attributes for Azure Active Directory integration.
type ManagedClusterAADProfileResponseArgs struct {
	// The client AAD application ID.
	ClientAppID pulumi.StringInput `pulumi:"clientAppID"`
	// The server AAD application ID.
	ServerAppID pulumi.StringInput `pulumi:"serverAppID"`
	// The server AAD application secret.
	ServerAppSecret pulumi.StringPtrInput `pulumi:"serverAppSecret"`
	// The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
	TenantID pulumi.StringPtrInput `pulumi:"tenantID"`
}

func (ManagedClusterAADProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAADProfileResponse)(nil)).Elem()
}

func (i ManagedClusterAADProfileResponseArgs) ToManagedClusterAADProfileResponseOutput() ManagedClusterAADProfileResponseOutput {
	return i.ToManagedClusterAADProfileResponseOutputWithContext(context.Background())
}

func (i ManagedClusterAADProfileResponseArgs) ToManagedClusterAADProfileResponseOutputWithContext(ctx context.Context) ManagedClusterAADProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAADProfileResponseOutput)
}

func (i ManagedClusterAADProfileResponseArgs) ToManagedClusterAADProfileResponsePtrOutput() ManagedClusterAADProfileResponsePtrOutput {
	return i.ToManagedClusterAADProfileResponsePtrOutputWithContext(context.Background())
}

func (i ManagedClusterAADProfileResponseArgs) ToManagedClusterAADProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterAADProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAADProfileResponseOutput).ToManagedClusterAADProfileResponsePtrOutputWithContext(ctx)
}

// ManagedClusterAADProfileResponsePtrInput is an input type that accepts ManagedClusterAADProfileResponseArgs, ManagedClusterAADProfileResponsePtr and ManagedClusterAADProfileResponsePtrOutput values.
// You can construct a concrete instance of `ManagedClusterAADProfileResponsePtrInput` via:
//
//          ManagedClusterAADProfileResponseArgs{...}
//
//  or:
//
//          nil
type ManagedClusterAADProfileResponsePtrInput interface {
	pulumi.Input

	ToManagedClusterAADProfileResponsePtrOutput() ManagedClusterAADProfileResponsePtrOutput
	ToManagedClusterAADProfileResponsePtrOutputWithContext(context.Context) ManagedClusterAADProfileResponsePtrOutput
}

type managedClusterAADProfileResponsePtrType ManagedClusterAADProfileResponseArgs

func ManagedClusterAADProfileResponsePtr(v *ManagedClusterAADProfileResponseArgs) ManagedClusterAADProfileResponsePtrInput {
	return (*managedClusterAADProfileResponsePtrType)(v)
}

func (*managedClusterAADProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterAADProfileResponse)(nil)).Elem()
}

func (i *managedClusterAADProfileResponsePtrType) ToManagedClusterAADProfileResponsePtrOutput() ManagedClusterAADProfileResponsePtrOutput {
	return i.ToManagedClusterAADProfileResponsePtrOutputWithContext(context.Background())
}

func (i *managedClusterAADProfileResponsePtrType) ToManagedClusterAADProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterAADProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAADProfileResponsePtrOutput)
}

// AADProfile specifies attributes for Azure Active Directory integration.
type ManagedClusterAADProfileResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterAADProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAADProfileResponse)(nil)).Elem()
}

func (o ManagedClusterAADProfileResponseOutput) ToManagedClusterAADProfileResponseOutput() ManagedClusterAADProfileResponseOutput {
	return o
}

func (o ManagedClusterAADProfileResponseOutput) ToManagedClusterAADProfileResponseOutputWithContext(ctx context.Context) ManagedClusterAADProfileResponseOutput {
	return o
}

func (o ManagedClusterAADProfileResponseOutput) ToManagedClusterAADProfileResponsePtrOutput() ManagedClusterAADProfileResponsePtrOutput {
	return o.ToManagedClusterAADProfileResponsePtrOutputWithContext(context.Background())
}

func (o ManagedClusterAADProfileResponseOutput) ToManagedClusterAADProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterAADProfileResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterAADProfileResponse) *ManagedClusterAADProfileResponse {
		return &v
	}).(ManagedClusterAADProfileResponsePtrOutput)
}

// The client AAD application ID.
func (o ManagedClusterAADProfileResponseOutput) ClientAppID() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterAADProfileResponse) string { return v.ClientAppID }).(pulumi.StringOutput)
}

// The server AAD application ID.
func (o ManagedClusterAADProfileResponseOutput) ServerAppID() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterAADProfileResponse) string { return v.ServerAppID }).(pulumi.StringOutput)
}

// The server AAD application secret.
func (o ManagedClusterAADProfileResponseOutput) ServerAppSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAADProfileResponse) *string { return v.ServerAppSecret }).(pulumi.StringPtrOutput)
}

// The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
func (o ManagedClusterAADProfileResponseOutput) TenantID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAADProfileResponse) *string { return v.TenantID }).(pulumi.StringPtrOutput)
}

type ManagedClusterAADProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterAADProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterAADProfileResponse)(nil)).Elem()
}

func (o ManagedClusterAADProfileResponsePtrOutput) ToManagedClusterAADProfileResponsePtrOutput() ManagedClusterAADProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterAADProfileResponsePtrOutput) ToManagedClusterAADProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterAADProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterAADProfileResponsePtrOutput) Elem() ManagedClusterAADProfileResponseOutput {
	return o.ApplyT(func(v *ManagedClusterAADProfileResponse) ManagedClusterAADProfileResponse { return *v }).(ManagedClusterAADProfileResponseOutput)
}

// The client AAD application ID.
func (o ManagedClusterAADProfileResponsePtrOutput) ClientAppID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAADProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ClientAppID
	}).(pulumi.StringPtrOutput)
}

// The server AAD application ID.
func (o ManagedClusterAADProfileResponsePtrOutput) ServerAppID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAADProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ServerAppID
	}).(pulumi.StringPtrOutput)
}

// The server AAD application secret.
func (o ManagedClusterAADProfileResponsePtrOutput) ServerAppSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAADProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServerAppSecret
	}).(pulumi.StringPtrOutput)
}

// The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
func (o ManagedClusterAADProfileResponsePtrOutput) TenantID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAADProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.TenantID
	}).(pulumi.StringPtrOutput)
}

// Access profile for managed cluster API server.
type ManagedClusterAPIServerAccessProfile struct {
	// Authorized IP Ranges to kubernetes API server.
	AuthorizedIPRanges []string `pulumi:"authorizedIPRanges"`
	// Whether to create the cluster as a private cluster or not.
	EnablePrivateCluster *bool `pulumi:"enablePrivateCluster"`
}

// ManagedClusterAPIServerAccessProfileInput is an input type that accepts ManagedClusterAPIServerAccessProfileArgs and ManagedClusterAPIServerAccessProfileOutput values.
// You can construct a concrete instance of `ManagedClusterAPIServerAccessProfileInput` via:
//
//          ManagedClusterAPIServerAccessProfileArgs{...}
type ManagedClusterAPIServerAccessProfileInput interface {
	pulumi.Input

	ToManagedClusterAPIServerAccessProfileOutput() ManagedClusterAPIServerAccessProfileOutput
	ToManagedClusterAPIServerAccessProfileOutputWithContext(context.Context) ManagedClusterAPIServerAccessProfileOutput
}

// Access profile for managed cluster API server.
type ManagedClusterAPIServerAccessProfileArgs struct {
	// Authorized IP Ranges to kubernetes API server.
	AuthorizedIPRanges pulumi.StringArrayInput `pulumi:"authorizedIPRanges"`
	// Whether to create the cluster as a private cluster or not.
	EnablePrivateCluster pulumi.BoolPtrInput `pulumi:"enablePrivateCluster"`
}

func (ManagedClusterAPIServerAccessProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAPIServerAccessProfile)(nil)).Elem()
}

func (i ManagedClusterAPIServerAccessProfileArgs) ToManagedClusterAPIServerAccessProfileOutput() ManagedClusterAPIServerAccessProfileOutput {
	return i.ToManagedClusterAPIServerAccessProfileOutputWithContext(context.Background())
}

func (i ManagedClusterAPIServerAccessProfileArgs) ToManagedClusterAPIServerAccessProfileOutputWithContext(ctx context.Context) ManagedClusterAPIServerAccessProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAPIServerAccessProfileOutput)
}

func (i ManagedClusterAPIServerAccessProfileArgs) ToManagedClusterAPIServerAccessProfilePtrOutput() ManagedClusterAPIServerAccessProfilePtrOutput {
	return i.ToManagedClusterAPIServerAccessProfilePtrOutputWithContext(context.Background())
}

func (i ManagedClusterAPIServerAccessProfileArgs) ToManagedClusterAPIServerAccessProfilePtrOutputWithContext(ctx context.Context) ManagedClusterAPIServerAccessProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAPIServerAccessProfileOutput).ToManagedClusterAPIServerAccessProfilePtrOutputWithContext(ctx)
}

// ManagedClusterAPIServerAccessProfilePtrInput is an input type that accepts ManagedClusterAPIServerAccessProfileArgs, ManagedClusterAPIServerAccessProfilePtr and ManagedClusterAPIServerAccessProfilePtrOutput values.
// You can construct a concrete instance of `ManagedClusterAPIServerAccessProfilePtrInput` via:
//
//          ManagedClusterAPIServerAccessProfileArgs{...}
//
//  or:
//
//          nil
type ManagedClusterAPIServerAccessProfilePtrInput interface {
	pulumi.Input

	ToManagedClusterAPIServerAccessProfilePtrOutput() ManagedClusterAPIServerAccessProfilePtrOutput
	ToManagedClusterAPIServerAccessProfilePtrOutputWithContext(context.Context) ManagedClusterAPIServerAccessProfilePtrOutput
}

type managedClusterAPIServerAccessProfilePtrType ManagedClusterAPIServerAccessProfileArgs

func ManagedClusterAPIServerAccessProfilePtr(v *ManagedClusterAPIServerAccessProfileArgs) ManagedClusterAPIServerAccessProfilePtrInput {
	return (*managedClusterAPIServerAccessProfilePtrType)(v)
}

func (*managedClusterAPIServerAccessProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterAPIServerAccessProfile)(nil)).Elem()
}

func (i *managedClusterAPIServerAccessProfilePtrType) ToManagedClusterAPIServerAccessProfilePtrOutput() ManagedClusterAPIServerAccessProfilePtrOutput {
	return i.ToManagedClusterAPIServerAccessProfilePtrOutputWithContext(context.Background())
}

func (i *managedClusterAPIServerAccessProfilePtrType) ToManagedClusterAPIServerAccessProfilePtrOutputWithContext(ctx context.Context) ManagedClusterAPIServerAccessProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAPIServerAccessProfilePtrOutput)
}

// Access profile for managed cluster API server.
type ManagedClusterAPIServerAccessProfileOutput struct{ *pulumi.OutputState }

func (ManagedClusterAPIServerAccessProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAPIServerAccessProfile)(nil)).Elem()
}

func (o ManagedClusterAPIServerAccessProfileOutput) ToManagedClusterAPIServerAccessProfileOutput() ManagedClusterAPIServerAccessProfileOutput {
	return o
}

func (o ManagedClusterAPIServerAccessProfileOutput) ToManagedClusterAPIServerAccessProfileOutputWithContext(ctx context.Context) ManagedClusterAPIServerAccessProfileOutput {
	return o
}

func (o ManagedClusterAPIServerAccessProfileOutput) ToManagedClusterAPIServerAccessProfilePtrOutput() ManagedClusterAPIServerAccessProfilePtrOutput {
	return o.ToManagedClusterAPIServerAccessProfilePtrOutputWithContext(context.Background())
}

func (o ManagedClusterAPIServerAccessProfileOutput) ToManagedClusterAPIServerAccessProfilePtrOutputWithContext(ctx context.Context) ManagedClusterAPIServerAccessProfilePtrOutput {
	return o.ApplyT(func(v ManagedClusterAPIServerAccessProfile) *ManagedClusterAPIServerAccessProfile {
		return &v
	}).(ManagedClusterAPIServerAccessProfilePtrOutput)
}

// Authorized IP Ranges to kubernetes API server.
func (o ManagedClusterAPIServerAccessProfileOutput) AuthorizedIPRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedClusterAPIServerAccessProfile) []string { return v.AuthorizedIPRanges }).(pulumi.StringArrayOutput)
}

// Whether to create the cluster as a private cluster or not.
func (o ManagedClusterAPIServerAccessProfileOutput) EnablePrivateCluster() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAPIServerAccessProfile) *bool { return v.EnablePrivateCluster }).(pulumi.BoolPtrOutput)
}

type ManagedClusterAPIServerAccessProfilePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterAPIServerAccessProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterAPIServerAccessProfile)(nil)).Elem()
}

func (o ManagedClusterAPIServerAccessProfilePtrOutput) ToManagedClusterAPIServerAccessProfilePtrOutput() ManagedClusterAPIServerAccessProfilePtrOutput {
	return o
}

func (o ManagedClusterAPIServerAccessProfilePtrOutput) ToManagedClusterAPIServerAccessProfilePtrOutputWithContext(ctx context.Context) ManagedClusterAPIServerAccessProfilePtrOutput {
	return o
}

func (o ManagedClusterAPIServerAccessProfilePtrOutput) Elem() ManagedClusterAPIServerAccessProfileOutput {
	return o.ApplyT(func(v *ManagedClusterAPIServerAccessProfile) ManagedClusterAPIServerAccessProfile { return *v }).(ManagedClusterAPIServerAccessProfileOutput)
}

// Authorized IP Ranges to kubernetes API server.
func (o ManagedClusterAPIServerAccessProfilePtrOutput) AuthorizedIPRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedClusterAPIServerAccessProfile) []string {
		if v == nil {
			return nil
		}
		return v.AuthorizedIPRanges
	}).(pulumi.StringArrayOutput)
}

// Whether to create the cluster as a private cluster or not.
func (o ManagedClusterAPIServerAccessProfilePtrOutput) EnablePrivateCluster() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAPIServerAccessProfile) *bool {
		if v == nil {
			return nil
		}
		return v.EnablePrivateCluster
	}).(pulumi.BoolPtrOutput)
}

// Access profile for managed cluster API server.
type ManagedClusterAPIServerAccessProfileResponse struct {
	// Authorized IP Ranges to kubernetes API server.
	AuthorizedIPRanges []string `pulumi:"authorizedIPRanges"`
	// Whether to create the cluster as a private cluster or not.
	EnablePrivateCluster *bool `pulumi:"enablePrivateCluster"`
}

// ManagedClusterAPIServerAccessProfileResponseInput is an input type that accepts ManagedClusterAPIServerAccessProfileResponseArgs and ManagedClusterAPIServerAccessProfileResponseOutput values.
// You can construct a concrete instance of `ManagedClusterAPIServerAccessProfileResponseInput` via:
//
//          ManagedClusterAPIServerAccessProfileResponseArgs{...}
type ManagedClusterAPIServerAccessProfileResponseInput interface {
	pulumi.Input

	ToManagedClusterAPIServerAccessProfileResponseOutput() ManagedClusterAPIServerAccessProfileResponseOutput
	ToManagedClusterAPIServerAccessProfileResponseOutputWithContext(context.Context) ManagedClusterAPIServerAccessProfileResponseOutput
}

// Access profile for managed cluster API server.
type ManagedClusterAPIServerAccessProfileResponseArgs struct {
	// Authorized IP Ranges to kubernetes API server.
	AuthorizedIPRanges pulumi.StringArrayInput `pulumi:"authorizedIPRanges"`
	// Whether to create the cluster as a private cluster or not.
	EnablePrivateCluster pulumi.BoolPtrInput `pulumi:"enablePrivateCluster"`
}

func (ManagedClusterAPIServerAccessProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAPIServerAccessProfileResponse)(nil)).Elem()
}

func (i ManagedClusterAPIServerAccessProfileResponseArgs) ToManagedClusterAPIServerAccessProfileResponseOutput() ManagedClusterAPIServerAccessProfileResponseOutput {
	return i.ToManagedClusterAPIServerAccessProfileResponseOutputWithContext(context.Background())
}

func (i ManagedClusterAPIServerAccessProfileResponseArgs) ToManagedClusterAPIServerAccessProfileResponseOutputWithContext(ctx context.Context) ManagedClusterAPIServerAccessProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAPIServerAccessProfileResponseOutput)
}

func (i ManagedClusterAPIServerAccessProfileResponseArgs) ToManagedClusterAPIServerAccessProfileResponsePtrOutput() ManagedClusterAPIServerAccessProfileResponsePtrOutput {
	return i.ToManagedClusterAPIServerAccessProfileResponsePtrOutputWithContext(context.Background())
}

func (i ManagedClusterAPIServerAccessProfileResponseArgs) ToManagedClusterAPIServerAccessProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterAPIServerAccessProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAPIServerAccessProfileResponseOutput).ToManagedClusterAPIServerAccessProfileResponsePtrOutputWithContext(ctx)
}

// ManagedClusterAPIServerAccessProfileResponsePtrInput is an input type that accepts ManagedClusterAPIServerAccessProfileResponseArgs, ManagedClusterAPIServerAccessProfileResponsePtr and ManagedClusterAPIServerAccessProfileResponsePtrOutput values.
// You can construct a concrete instance of `ManagedClusterAPIServerAccessProfileResponsePtrInput` via:
//
//          ManagedClusterAPIServerAccessProfileResponseArgs{...}
//
//  or:
//
//          nil
type ManagedClusterAPIServerAccessProfileResponsePtrInput interface {
	pulumi.Input

	ToManagedClusterAPIServerAccessProfileResponsePtrOutput() ManagedClusterAPIServerAccessProfileResponsePtrOutput
	ToManagedClusterAPIServerAccessProfileResponsePtrOutputWithContext(context.Context) ManagedClusterAPIServerAccessProfileResponsePtrOutput
}

type managedClusterAPIServerAccessProfileResponsePtrType ManagedClusterAPIServerAccessProfileResponseArgs

func ManagedClusterAPIServerAccessProfileResponsePtr(v *ManagedClusterAPIServerAccessProfileResponseArgs) ManagedClusterAPIServerAccessProfileResponsePtrInput {
	return (*managedClusterAPIServerAccessProfileResponsePtrType)(v)
}

func (*managedClusterAPIServerAccessProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterAPIServerAccessProfileResponse)(nil)).Elem()
}

func (i *managedClusterAPIServerAccessProfileResponsePtrType) ToManagedClusterAPIServerAccessProfileResponsePtrOutput() ManagedClusterAPIServerAccessProfileResponsePtrOutput {
	return i.ToManagedClusterAPIServerAccessProfileResponsePtrOutputWithContext(context.Background())
}

func (i *managedClusterAPIServerAccessProfileResponsePtrType) ToManagedClusterAPIServerAccessProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterAPIServerAccessProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAPIServerAccessProfileResponsePtrOutput)
}

// Access profile for managed cluster API server.
type ManagedClusterAPIServerAccessProfileResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterAPIServerAccessProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAPIServerAccessProfileResponse)(nil)).Elem()
}

func (o ManagedClusterAPIServerAccessProfileResponseOutput) ToManagedClusterAPIServerAccessProfileResponseOutput() ManagedClusterAPIServerAccessProfileResponseOutput {
	return o
}

func (o ManagedClusterAPIServerAccessProfileResponseOutput) ToManagedClusterAPIServerAccessProfileResponseOutputWithContext(ctx context.Context) ManagedClusterAPIServerAccessProfileResponseOutput {
	return o
}

func (o ManagedClusterAPIServerAccessProfileResponseOutput) ToManagedClusterAPIServerAccessProfileResponsePtrOutput() ManagedClusterAPIServerAccessProfileResponsePtrOutput {
	return o.ToManagedClusterAPIServerAccessProfileResponsePtrOutputWithContext(context.Background())
}

func (o ManagedClusterAPIServerAccessProfileResponseOutput) ToManagedClusterAPIServerAccessProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterAPIServerAccessProfileResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterAPIServerAccessProfileResponse) *ManagedClusterAPIServerAccessProfileResponse {
		return &v
	}).(ManagedClusterAPIServerAccessProfileResponsePtrOutput)
}

// Authorized IP Ranges to kubernetes API server.
func (o ManagedClusterAPIServerAccessProfileResponseOutput) AuthorizedIPRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedClusterAPIServerAccessProfileResponse) []string { return v.AuthorizedIPRanges }).(pulumi.StringArrayOutput)
}

// Whether to create the cluster as a private cluster or not.
func (o ManagedClusterAPIServerAccessProfileResponseOutput) EnablePrivateCluster() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAPIServerAccessProfileResponse) *bool { return v.EnablePrivateCluster }).(pulumi.BoolPtrOutput)
}

type ManagedClusterAPIServerAccessProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterAPIServerAccessProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterAPIServerAccessProfileResponse)(nil)).Elem()
}

func (o ManagedClusterAPIServerAccessProfileResponsePtrOutput) ToManagedClusterAPIServerAccessProfileResponsePtrOutput() ManagedClusterAPIServerAccessProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterAPIServerAccessProfileResponsePtrOutput) ToManagedClusterAPIServerAccessProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterAPIServerAccessProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterAPIServerAccessProfileResponsePtrOutput) Elem() ManagedClusterAPIServerAccessProfileResponseOutput {
	return o.ApplyT(func(v *ManagedClusterAPIServerAccessProfileResponse) ManagedClusterAPIServerAccessProfileResponse {
		return *v
	}).(ManagedClusterAPIServerAccessProfileResponseOutput)
}

// Authorized IP Ranges to kubernetes API server.
func (o ManagedClusterAPIServerAccessProfileResponsePtrOutput) AuthorizedIPRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedClusterAPIServerAccessProfileResponse) []string {
		if v == nil {
			return nil
		}
		return v.AuthorizedIPRanges
	}).(pulumi.StringArrayOutput)
}

// Whether to create the cluster as a private cluster or not.
func (o ManagedClusterAPIServerAccessProfileResponsePtrOutput) EnablePrivateCluster() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAPIServerAccessProfileResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnablePrivateCluster
	}).(pulumi.BoolPtrOutput)
}

// A Kubernetes add-on profile for a managed cluster.
type ManagedClusterAddonProfile struct {
	// Key-value pairs for configuring an add-on.
	Config map[string]string `pulumi:"config"`
	// Whether the add-on is enabled or not.
	Enabled bool `pulumi:"enabled"`
}

// ManagedClusterAddonProfileInput is an input type that accepts ManagedClusterAddonProfileArgs and ManagedClusterAddonProfileOutput values.
// You can construct a concrete instance of `ManagedClusterAddonProfileInput` via:
//
//          ManagedClusterAddonProfileArgs{...}
type ManagedClusterAddonProfileInput interface {
	pulumi.Input

	ToManagedClusterAddonProfileOutput() ManagedClusterAddonProfileOutput
	ToManagedClusterAddonProfileOutputWithContext(context.Context) ManagedClusterAddonProfileOutput
}

// A Kubernetes add-on profile for a managed cluster.
type ManagedClusterAddonProfileArgs struct {
	// Key-value pairs for configuring an add-on.
	Config pulumi.StringMapInput `pulumi:"config"`
	// Whether the add-on is enabled or not.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ManagedClusterAddonProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAddonProfile)(nil)).Elem()
}

func (i ManagedClusterAddonProfileArgs) ToManagedClusterAddonProfileOutput() ManagedClusterAddonProfileOutput {
	return i.ToManagedClusterAddonProfileOutputWithContext(context.Background())
}

func (i ManagedClusterAddonProfileArgs) ToManagedClusterAddonProfileOutputWithContext(ctx context.Context) ManagedClusterAddonProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAddonProfileOutput)
}

// ManagedClusterAddonProfileMapInput is an input type that accepts ManagedClusterAddonProfileMap and ManagedClusterAddonProfileMapOutput values.
// You can construct a concrete instance of `ManagedClusterAddonProfileMapInput` via:
//
//          ManagedClusterAddonProfileMap{ "key": ManagedClusterAddonProfileArgs{...} }
type ManagedClusterAddonProfileMapInput interface {
	pulumi.Input

	ToManagedClusterAddonProfileMapOutput() ManagedClusterAddonProfileMapOutput
	ToManagedClusterAddonProfileMapOutputWithContext(context.Context) ManagedClusterAddonProfileMapOutput
}

type ManagedClusterAddonProfileMap map[string]ManagedClusterAddonProfileInput

func (ManagedClusterAddonProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ManagedClusterAddonProfile)(nil)).Elem()
}

func (i ManagedClusterAddonProfileMap) ToManagedClusterAddonProfileMapOutput() ManagedClusterAddonProfileMapOutput {
	return i.ToManagedClusterAddonProfileMapOutputWithContext(context.Background())
}

func (i ManagedClusterAddonProfileMap) ToManagedClusterAddonProfileMapOutputWithContext(ctx context.Context) ManagedClusterAddonProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAddonProfileMapOutput)
}

// A Kubernetes add-on profile for a managed cluster.
type ManagedClusterAddonProfileOutput struct{ *pulumi.OutputState }

func (ManagedClusterAddonProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAddonProfile)(nil)).Elem()
}

func (o ManagedClusterAddonProfileOutput) ToManagedClusterAddonProfileOutput() ManagedClusterAddonProfileOutput {
	return o
}

func (o ManagedClusterAddonProfileOutput) ToManagedClusterAddonProfileOutputWithContext(ctx context.Context) ManagedClusterAddonProfileOutput {
	return o
}

// Key-value pairs for configuring an add-on.
func (o ManagedClusterAddonProfileOutput) Config() pulumi.StringMapOutput {
	return o.ApplyT(func(v ManagedClusterAddonProfile) map[string]string { return v.Config }).(pulumi.StringMapOutput)
}

// Whether the add-on is enabled or not.
func (o ManagedClusterAddonProfileOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ManagedClusterAddonProfile) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ManagedClusterAddonProfileMapOutput struct{ *pulumi.OutputState }

func (ManagedClusterAddonProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ManagedClusterAddonProfile)(nil)).Elem()
}

func (o ManagedClusterAddonProfileMapOutput) ToManagedClusterAddonProfileMapOutput() ManagedClusterAddonProfileMapOutput {
	return o
}

func (o ManagedClusterAddonProfileMapOutput) ToManagedClusterAddonProfileMapOutputWithContext(ctx context.Context) ManagedClusterAddonProfileMapOutput {
	return o
}

func (o ManagedClusterAddonProfileMapOutput) MapIndex(k pulumi.StringInput) ManagedClusterAddonProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ManagedClusterAddonProfile {
		return vs[0].(map[string]ManagedClusterAddonProfile)[vs[1].(string)]
	}).(ManagedClusterAddonProfileOutput)
}

// A Kubernetes add-on profile for a managed cluster.
type ManagedClusterAddonProfileResponse struct {
	// Key-value pairs for configuring an add-on.
	Config map[string]string `pulumi:"config"`
	// Whether the add-on is enabled or not.
	Enabled bool `pulumi:"enabled"`
}

// ManagedClusterAddonProfileResponseInput is an input type that accepts ManagedClusterAddonProfileResponseArgs and ManagedClusterAddonProfileResponseOutput values.
// You can construct a concrete instance of `ManagedClusterAddonProfileResponseInput` via:
//
//          ManagedClusterAddonProfileResponseArgs{...}
type ManagedClusterAddonProfileResponseInput interface {
	pulumi.Input

	ToManagedClusterAddonProfileResponseOutput() ManagedClusterAddonProfileResponseOutput
	ToManagedClusterAddonProfileResponseOutputWithContext(context.Context) ManagedClusterAddonProfileResponseOutput
}

// A Kubernetes add-on profile for a managed cluster.
type ManagedClusterAddonProfileResponseArgs struct {
	// Key-value pairs for configuring an add-on.
	Config pulumi.StringMapInput `pulumi:"config"`
	// Whether the add-on is enabled or not.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ManagedClusterAddonProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAddonProfileResponse)(nil)).Elem()
}

func (i ManagedClusterAddonProfileResponseArgs) ToManagedClusterAddonProfileResponseOutput() ManagedClusterAddonProfileResponseOutput {
	return i.ToManagedClusterAddonProfileResponseOutputWithContext(context.Background())
}

func (i ManagedClusterAddonProfileResponseArgs) ToManagedClusterAddonProfileResponseOutputWithContext(ctx context.Context) ManagedClusterAddonProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAddonProfileResponseOutput)
}

// ManagedClusterAddonProfileResponseMapInput is an input type that accepts ManagedClusterAddonProfileResponseMap and ManagedClusterAddonProfileResponseMapOutput values.
// You can construct a concrete instance of `ManagedClusterAddonProfileResponseMapInput` via:
//
//          ManagedClusterAddonProfileResponseMap{ "key": ManagedClusterAddonProfileResponseArgs{...} }
type ManagedClusterAddonProfileResponseMapInput interface {
	pulumi.Input

	ToManagedClusterAddonProfileResponseMapOutput() ManagedClusterAddonProfileResponseMapOutput
	ToManagedClusterAddonProfileResponseMapOutputWithContext(context.Context) ManagedClusterAddonProfileResponseMapOutput
}

type ManagedClusterAddonProfileResponseMap map[string]ManagedClusterAddonProfileResponseInput

func (ManagedClusterAddonProfileResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ManagedClusterAddonProfileResponse)(nil)).Elem()
}

func (i ManagedClusterAddonProfileResponseMap) ToManagedClusterAddonProfileResponseMapOutput() ManagedClusterAddonProfileResponseMapOutput {
	return i.ToManagedClusterAddonProfileResponseMapOutputWithContext(context.Background())
}

func (i ManagedClusterAddonProfileResponseMap) ToManagedClusterAddonProfileResponseMapOutputWithContext(ctx context.Context) ManagedClusterAddonProfileResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAddonProfileResponseMapOutput)
}

// A Kubernetes add-on profile for a managed cluster.
type ManagedClusterAddonProfileResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterAddonProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAddonProfileResponse)(nil)).Elem()
}

func (o ManagedClusterAddonProfileResponseOutput) ToManagedClusterAddonProfileResponseOutput() ManagedClusterAddonProfileResponseOutput {
	return o
}

func (o ManagedClusterAddonProfileResponseOutput) ToManagedClusterAddonProfileResponseOutputWithContext(ctx context.Context) ManagedClusterAddonProfileResponseOutput {
	return o
}

// Key-value pairs for configuring an add-on.
func (o ManagedClusterAddonProfileResponseOutput) Config() pulumi.StringMapOutput {
	return o.ApplyT(func(v ManagedClusterAddonProfileResponse) map[string]string { return v.Config }).(pulumi.StringMapOutput)
}

// Whether the add-on is enabled or not.
func (o ManagedClusterAddonProfileResponseOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ManagedClusterAddonProfileResponse) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ManagedClusterAddonProfileResponseMapOutput struct{ *pulumi.OutputState }

func (ManagedClusterAddonProfileResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ManagedClusterAddonProfileResponse)(nil)).Elem()
}

func (o ManagedClusterAddonProfileResponseMapOutput) ToManagedClusterAddonProfileResponseMapOutput() ManagedClusterAddonProfileResponseMapOutput {
	return o
}

func (o ManagedClusterAddonProfileResponseMapOutput) ToManagedClusterAddonProfileResponseMapOutputWithContext(ctx context.Context) ManagedClusterAddonProfileResponseMapOutput {
	return o
}

func (o ManagedClusterAddonProfileResponseMapOutput) MapIndex(k pulumi.StringInput) ManagedClusterAddonProfileResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ManagedClusterAddonProfileResponse {
		return vs[0].(map[string]ManagedClusterAddonProfileResponse)[vs[1].(string)]
	}).(ManagedClusterAddonProfileResponseOutput)
}

// Profile for the container service agent pool.
type ManagedClusterAgentPoolProfile struct {
	// (PREVIEW) Availability zones for nodes. Must use VirtualMachineScaleSets AgentPoolType.
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// Number of agents (VMs) to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
	Count *int `pulumi:"count"`
	// Whether to enable auto-scaler
	EnableAutoScaling *bool `pulumi:"enableAutoScaling"`
	// Enable public IP for nodes
	EnableNodePublicIP *bool `pulumi:"enableNodePublicIP"`
	// Maximum number of nodes for auto-scaling
	MaxCount *int `pulumi:"maxCount"`
	// Maximum number of pods that can run on a node.
	MaxPods *int `pulumi:"maxPods"`
	// Minimum number of nodes for auto-scaling
	MinCount *int `pulumi:"minCount"`
	// Unique name of the agent pool profile in the context of the subscription and resource group.
	Name string `pulumi:"name"`
	// Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
	NodeTaints []string `pulumi:"nodeTaints"`
	// Version of orchestrator specified when creating the managed cluster.
	OrchestratorVersion *string `pulumi:"orchestratorVersion"`
	// OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
	OsDiskSizeGB *int `pulumi:"osDiskSizeGB"`
	// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
	OsType *string `pulumi:"osType"`
	// ScaleSetEvictionPolicy to be used to specify eviction policy for low priority virtual machine scale set. Default to Delete.
	ScaleSetEvictionPolicy *string `pulumi:"scaleSetEvictionPolicy"`
	// ScaleSetPriority to be used to specify virtual machine scale set priority. Default to regular.
	ScaleSetPriority *string `pulumi:"scaleSetPriority"`
	// AgentPoolType represents types of an agent pool
	Type *string `pulumi:"type"`
	// Size of agent VMs.
	VmSize *string `pulumi:"vmSize"`
	// VNet SubnetID specifies the VNet's subnet identifier.
	VnetSubnetID *string `pulumi:"vnetSubnetID"`
}

// ManagedClusterAgentPoolProfileInput is an input type that accepts ManagedClusterAgentPoolProfileArgs and ManagedClusterAgentPoolProfileOutput values.
// You can construct a concrete instance of `ManagedClusterAgentPoolProfileInput` via:
//
//          ManagedClusterAgentPoolProfileArgs{...}
type ManagedClusterAgentPoolProfileInput interface {
	pulumi.Input

	ToManagedClusterAgentPoolProfileOutput() ManagedClusterAgentPoolProfileOutput
	ToManagedClusterAgentPoolProfileOutputWithContext(context.Context) ManagedClusterAgentPoolProfileOutput
}

// Profile for the container service agent pool.
type ManagedClusterAgentPoolProfileArgs struct {
	// (PREVIEW) Availability zones for nodes. Must use VirtualMachineScaleSets AgentPoolType.
	AvailabilityZones pulumi.StringArrayInput `pulumi:"availabilityZones"`
	// Number of agents (VMs) to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// Whether to enable auto-scaler
	EnableAutoScaling pulumi.BoolPtrInput `pulumi:"enableAutoScaling"`
	// Enable public IP for nodes
	EnableNodePublicIP pulumi.BoolPtrInput `pulumi:"enableNodePublicIP"`
	// Maximum number of nodes for auto-scaling
	MaxCount pulumi.IntPtrInput `pulumi:"maxCount"`
	// Maximum number of pods that can run on a node.
	MaxPods pulumi.IntPtrInput `pulumi:"maxPods"`
	// Minimum number of nodes for auto-scaling
	MinCount pulumi.IntPtrInput `pulumi:"minCount"`
	// Unique name of the agent pool profile in the context of the subscription and resource group.
	Name pulumi.StringInput `pulumi:"name"`
	// Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
	NodeTaints pulumi.StringArrayInput `pulumi:"nodeTaints"`
	// Version of orchestrator specified when creating the managed cluster.
	OrchestratorVersion pulumi.StringPtrInput `pulumi:"orchestratorVersion"`
	// OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
	OsDiskSizeGB pulumi.IntPtrInput `pulumi:"osDiskSizeGB"`
	// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// ScaleSetEvictionPolicy to be used to specify eviction policy for low priority virtual machine scale set. Default to Delete.
	ScaleSetEvictionPolicy pulumi.StringPtrInput `pulumi:"scaleSetEvictionPolicy"`
	// ScaleSetPriority to be used to specify virtual machine scale set priority. Default to regular.
	ScaleSetPriority pulumi.StringPtrInput `pulumi:"scaleSetPriority"`
	// AgentPoolType represents types of an agent pool
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Size of agent VMs.
	VmSize pulumi.StringPtrInput `pulumi:"vmSize"`
	// VNet SubnetID specifies the VNet's subnet identifier.
	VnetSubnetID pulumi.StringPtrInput `pulumi:"vnetSubnetID"`
}

func (ManagedClusterAgentPoolProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAgentPoolProfile)(nil)).Elem()
}

func (i ManagedClusterAgentPoolProfileArgs) ToManagedClusterAgentPoolProfileOutput() ManagedClusterAgentPoolProfileOutput {
	return i.ToManagedClusterAgentPoolProfileOutputWithContext(context.Background())
}

func (i ManagedClusterAgentPoolProfileArgs) ToManagedClusterAgentPoolProfileOutputWithContext(ctx context.Context) ManagedClusterAgentPoolProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAgentPoolProfileOutput)
}

// ManagedClusterAgentPoolProfileArrayInput is an input type that accepts ManagedClusterAgentPoolProfileArray and ManagedClusterAgentPoolProfileArrayOutput values.
// You can construct a concrete instance of `ManagedClusterAgentPoolProfileArrayInput` via:
//
//          ManagedClusterAgentPoolProfileArray{ ManagedClusterAgentPoolProfileArgs{...} }
type ManagedClusterAgentPoolProfileArrayInput interface {
	pulumi.Input

	ToManagedClusterAgentPoolProfileArrayOutput() ManagedClusterAgentPoolProfileArrayOutput
	ToManagedClusterAgentPoolProfileArrayOutputWithContext(context.Context) ManagedClusterAgentPoolProfileArrayOutput
}

type ManagedClusterAgentPoolProfileArray []ManagedClusterAgentPoolProfileInput

func (ManagedClusterAgentPoolProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedClusterAgentPoolProfile)(nil)).Elem()
}

func (i ManagedClusterAgentPoolProfileArray) ToManagedClusterAgentPoolProfileArrayOutput() ManagedClusterAgentPoolProfileArrayOutput {
	return i.ToManagedClusterAgentPoolProfileArrayOutputWithContext(context.Background())
}

func (i ManagedClusterAgentPoolProfileArray) ToManagedClusterAgentPoolProfileArrayOutputWithContext(ctx context.Context) ManagedClusterAgentPoolProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAgentPoolProfileArrayOutput)
}

// Profile for the container service agent pool.
type ManagedClusterAgentPoolProfileOutput struct{ *pulumi.OutputState }

func (ManagedClusterAgentPoolProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAgentPoolProfile)(nil)).Elem()
}

func (o ManagedClusterAgentPoolProfileOutput) ToManagedClusterAgentPoolProfileOutput() ManagedClusterAgentPoolProfileOutput {
	return o
}

func (o ManagedClusterAgentPoolProfileOutput) ToManagedClusterAgentPoolProfileOutputWithContext(ctx context.Context) ManagedClusterAgentPoolProfileOutput {
	return o
}

// (PREVIEW) Availability zones for nodes. Must use VirtualMachineScaleSets AgentPoolType.
func (o ManagedClusterAgentPoolProfileOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// Number of agents (VMs) to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
func (o ManagedClusterAgentPoolProfileOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Whether to enable auto-scaler
func (o ManagedClusterAgentPoolProfileOutput) EnableAutoScaling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *bool { return v.EnableAutoScaling }).(pulumi.BoolPtrOutput)
}

// Enable public IP for nodes
func (o ManagedClusterAgentPoolProfileOutput) EnableNodePublicIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *bool { return v.EnableNodePublicIP }).(pulumi.BoolPtrOutput)
}

// Maximum number of nodes for auto-scaling
func (o ManagedClusterAgentPoolProfileOutput) MaxCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *int { return v.MaxCount }).(pulumi.IntPtrOutput)
}

// Maximum number of pods that can run on a node.
func (o ManagedClusterAgentPoolProfileOutput) MaxPods() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *int { return v.MaxPods }).(pulumi.IntPtrOutput)
}

// Minimum number of nodes for auto-scaling
func (o ManagedClusterAgentPoolProfileOutput) MinCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *int { return v.MinCount }).(pulumi.IntPtrOutput)
}

// Unique name of the agent pool profile in the context of the subscription and resource group.
func (o ManagedClusterAgentPoolProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) string { return v.Name }).(pulumi.StringOutput)
}

// Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
func (o ManagedClusterAgentPoolProfileOutput) NodeTaints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) []string { return v.NodeTaints }).(pulumi.StringArrayOutput)
}

// Version of orchestrator specified when creating the managed cluster.
func (o ManagedClusterAgentPoolProfileOutput) OrchestratorVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *string { return v.OrchestratorVersion }).(pulumi.StringPtrOutput)
}

// OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
func (o ManagedClusterAgentPoolProfileOutput) OsDiskSizeGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *int { return v.OsDiskSizeGB }).(pulumi.IntPtrOutput)
}

// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
func (o ManagedClusterAgentPoolProfileOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// ScaleSetEvictionPolicy to be used to specify eviction policy for low priority virtual machine scale set. Default to Delete.
func (o ManagedClusterAgentPoolProfileOutput) ScaleSetEvictionPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *string { return v.ScaleSetEvictionPolicy }).(pulumi.StringPtrOutput)
}

// ScaleSetPriority to be used to specify virtual machine scale set priority. Default to regular.
func (o ManagedClusterAgentPoolProfileOutput) ScaleSetPriority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *string { return v.ScaleSetPriority }).(pulumi.StringPtrOutput)
}

// AgentPoolType represents types of an agent pool
func (o ManagedClusterAgentPoolProfileOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Size of agent VMs.
func (o ManagedClusterAgentPoolProfileOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *string { return v.VmSize }).(pulumi.StringPtrOutput)
}

// VNet SubnetID specifies the VNet's subnet identifier.
func (o ManagedClusterAgentPoolProfileOutput) VnetSubnetID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *string { return v.VnetSubnetID }).(pulumi.StringPtrOutput)
}

type ManagedClusterAgentPoolProfileArrayOutput struct{ *pulumi.OutputState }

func (ManagedClusterAgentPoolProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedClusterAgentPoolProfile)(nil)).Elem()
}

func (o ManagedClusterAgentPoolProfileArrayOutput) ToManagedClusterAgentPoolProfileArrayOutput() ManagedClusterAgentPoolProfileArrayOutput {
	return o
}

func (o ManagedClusterAgentPoolProfileArrayOutput) ToManagedClusterAgentPoolProfileArrayOutputWithContext(ctx context.Context) ManagedClusterAgentPoolProfileArrayOutput {
	return o
}

func (o ManagedClusterAgentPoolProfileArrayOutput) Index(i pulumi.IntInput) ManagedClusterAgentPoolProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedClusterAgentPoolProfile {
		return vs[0].([]ManagedClusterAgentPoolProfile)[vs[1].(int)]
	}).(ManagedClusterAgentPoolProfileOutput)
}

// Properties for the container service agent pool profile.
type ManagedClusterAgentPoolProfilePropertiesResponse struct {
	// (PREVIEW) Availability zones for nodes. Must use VirtualMachineScaleSets AgentPoolType.
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// Number of agents (VMs) to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
	Count *int `pulumi:"count"`
	// Whether to enable auto-scaler
	EnableAutoScaling *bool `pulumi:"enableAutoScaling"`
	// Enable public IP for nodes
	EnableNodePublicIP *bool `pulumi:"enableNodePublicIP"`
	// Maximum number of nodes for auto-scaling
	MaxCount *int `pulumi:"maxCount"`
	// Maximum number of pods that can run on a node.
	MaxPods *int `pulumi:"maxPods"`
	// Minimum number of nodes for auto-scaling
	MinCount *int `pulumi:"minCount"`
	// Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
	NodeTaints []string `pulumi:"nodeTaints"`
	// Version of orchestrator specified when creating the managed cluster.
	OrchestratorVersion *string `pulumi:"orchestratorVersion"`
	// OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
	OsDiskSizeGB *int `pulumi:"osDiskSizeGB"`
	// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
	OsType *string `pulumi:"osType"`
	// The current deployment or provisioning state, which only appears in the response.
	ProvisioningState string `pulumi:"provisioningState"`
	// ScaleSetEvictionPolicy to be used to specify eviction policy for low priority virtual machine scale set. Default to Delete.
	ScaleSetEvictionPolicy *string `pulumi:"scaleSetEvictionPolicy"`
	// ScaleSetPriority to be used to specify virtual machine scale set priority. Default to regular.
	ScaleSetPriority *string `pulumi:"scaleSetPriority"`
	// AgentPoolType represents types of an agent pool
	Type *string `pulumi:"type"`
	// Size of agent VMs.
	VmSize *string `pulumi:"vmSize"`
	// VNet SubnetID specifies the VNet's subnet identifier.
	VnetSubnetID *string `pulumi:"vnetSubnetID"`
}

// ManagedClusterAgentPoolProfilePropertiesResponseInput is an input type that accepts ManagedClusterAgentPoolProfilePropertiesResponseArgs and ManagedClusterAgentPoolProfilePropertiesResponseOutput values.
// You can construct a concrete instance of `ManagedClusterAgentPoolProfilePropertiesResponseInput` via:
//
//          ManagedClusterAgentPoolProfilePropertiesResponseArgs{...}
type ManagedClusterAgentPoolProfilePropertiesResponseInput interface {
	pulumi.Input

	ToManagedClusterAgentPoolProfilePropertiesResponseOutput() ManagedClusterAgentPoolProfilePropertiesResponseOutput
	ToManagedClusterAgentPoolProfilePropertiesResponseOutputWithContext(context.Context) ManagedClusterAgentPoolProfilePropertiesResponseOutput
}

// Properties for the container service agent pool profile.
type ManagedClusterAgentPoolProfilePropertiesResponseArgs struct {
	// (PREVIEW) Availability zones for nodes. Must use VirtualMachineScaleSets AgentPoolType.
	AvailabilityZones pulumi.StringArrayInput `pulumi:"availabilityZones"`
	// Number of agents (VMs) to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// Whether to enable auto-scaler
	EnableAutoScaling pulumi.BoolPtrInput `pulumi:"enableAutoScaling"`
	// Enable public IP for nodes
	EnableNodePublicIP pulumi.BoolPtrInput `pulumi:"enableNodePublicIP"`
	// Maximum number of nodes for auto-scaling
	MaxCount pulumi.IntPtrInput `pulumi:"maxCount"`
	// Maximum number of pods that can run on a node.
	MaxPods pulumi.IntPtrInput `pulumi:"maxPods"`
	// Minimum number of nodes for auto-scaling
	MinCount pulumi.IntPtrInput `pulumi:"minCount"`
	// Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
	NodeTaints pulumi.StringArrayInput `pulumi:"nodeTaints"`
	// Version of orchestrator specified when creating the managed cluster.
	OrchestratorVersion pulumi.StringPtrInput `pulumi:"orchestratorVersion"`
	// OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
	OsDiskSizeGB pulumi.IntPtrInput `pulumi:"osDiskSizeGB"`
	// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// The current deployment or provisioning state, which only appears in the response.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// ScaleSetEvictionPolicy to be used to specify eviction policy for low priority virtual machine scale set. Default to Delete.
	ScaleSetEvictionPolicy pulumi.StringPtrInput `pulumi:"scaleSetEvictionPolicy"`
	// ScaleSetPriority to be used to specify virtual machine scale set priority. Default to regular.
	ScaleSetPriority pulumi.StringPtrInput `pulumi:"scaleSetPriority"`
	// AgentPoolType represents types of an agent pool
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Size of agent VMs.
	VmSize pulumi.StringPtrInput `pulumi:"vmSize"`
	// VNet SubnetID specifies the VNet's subnet identifier.
	VnetSubnetID pulumi.StringPtrInput `pulumi:"vnetSubnetID"`
}

func (ManagedClusterAgentPoolProfilePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAgentPoolProfilePropertiesResponse)(nil)).Elem()
}

func (i ManagedClusterAgentPoolProfilePropertiesResponseArgs) ToManagedClusterAgentPoolProfilePropertiesResponseOutput() ManagedClusterAgentPoolProfilePropertiesResponseOutput {
	return i.ToManagedClusterAgentPoolProfilePropertiesResponseOutputWithContext(context.Background())
}

func (i ManagedClusterAgentPoolProfilePropertiesResponseArgs) ToManagedClusterAgentPoolProfilePropertiesResponseOutputWithContext(ctx context.Context) ManagedClusterAgentPoolProfilePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAgentPoolProfilePropertiesResponseOutput)
}

func (i ManagedClusterAgentPoolProfilePropertiesResponseArgs) ToManagedClusterAgentPoolProfilePropertiesResponsePtrOutput() ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput {
	return i.ToManagedClusterAgentPoolProfilePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ManagedClusterAgentPoolProfilePropertiesResponseArgs) ToManagedClusterAgentPoolProfilePropertiesResponsePtrOutputWithContext(ctx context.Context) ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAgentPoolProfilePropertiesResponseOutput).ToManagedClusterAgentPoolProfilePropertiesResponsePtrOutputWithContext(ctx)
}

// ManagedClusterAgentPoolProfilePropertiesResponsePtrInput is an input type that accepts ManagedClusterAgentPoolProfilePropertiesResponseArgs, ManagedClusterAgentPoolProfilePropertiesResponsePtr and ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ManagedClusterAgentPoolProfilePropertiesResponsePtrInput` via:
//
//          ManagedClusterAgentPoolProfilePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ManagedClusterAgentPoolProfilePropertiesResponsePtrInput interface {
	pulumi.Input

	ToManagedClusterAgentPoolProfilePropertiesResponsePtrOutput() ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput
	ToManagedClusterAgentPoolProfilePropertiesResponsePtrOutputWithContext(context.Context) ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput
}

type managedClusterAgentPoolProfilePropertiesResponsePtrType ManagedClusterAgentPoolProfilePropertiesResponseArgs

func ManagedClusterAgentPoolProfilePropertiesResponsePtr(v *ManagedClusterAgentPoolProfilePropertiesResponseArgs) ManagedClusterAgentPoolProfilePropertiesResponsePtrInput {
	return (*managedClusterAgentPoolProfilePropertiesResponsePtrType)(v)
}

func (*managedClusterAgentPoolProfilePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterAgentPoolProfilePropertiesResponse)(nil)).Elem()
}

func (i *managedClusterAgentPoolProfilePropertiesResponsePtrType) ToManagedClusterAgentPoolProfilePropertiesResponsePtrOutput() ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput {
	return i.ToManagedClusterAgentPoolProfilePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *managedClusterAgentPoolProfilePropertiesResponsePtrType) ToManagedClusterAgentPoolProfilePropertiesResponsePtrOutputWithContext(ctx context.Context) ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput)
}

// Properties for the container service agent pool profile.
type ManagedClusterAgentPoolProfilePropertiesResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterAgentPoolProfilePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAgentPoolProfilePropertiesResponse)(nil)).Elem()
}

func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) ToManagedClusterAgentPoolProfilePropertiesResponseOutput() ManagedClusterAgentPoolProfilePropertiesResponseOutput {
	return o
}

func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) ToManagedClusterAgentPoolProfilePropertiesResponseOutputWithContext(ctx context.Context) ManagedClusterAgentPoolProfilePropertiesResponseOutput {
	return o
}

func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) ToManagedClusterAgentPoolProfilePropertiesResponsePtrOutput() ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput {
	return o.ToManagedClusterAgentPoolProfilePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) ToManagedClusterAgentPoolProfilePropertiesResponsePtrOutputWithContext(ctx context.Context) ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfilePropertiesResponse) *ManagedClusterAgentPoolProfilePropertiesResponse {
		return &v
	}).(ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput)
}

// (PREVIEW) Availability zones for nodes. Must use VirtualMachineScaleSets AgentPoolType.
func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfilePropertiesResponse) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// Number of agents (VMs) to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfilePropertiesResponse) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Whether to enable auto-scaler
func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) EnableAutoScaling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfilePropertiesResponse) *bool { return v.EnableAutoScaling }).(pulumi.BoolPtrOutput)
}

// Enable public IP for nodes
func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) EnableNodePublicIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfilePropertiesResponse) *bool { return v.EnableNodePublicIP }).(pulumi.BoolPtrOutput)
}

// Maximum number of nodes for auto-scaling
func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) MaxCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfilePropertiesResponse) *int { return v.MaxCount }).(pulumi.IntPtrOutput)
}

// Maximum number of pods that can run on a node.
func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) MaxPods() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfilePropertiesResponse) *int { return v.MaxPods }).(pulumi.IntPtrOutput)
}

// Minimum number of nodes for auto-scaling
func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) MinCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfilePropertiesResponse) *int { return v.MinCount }).(pulumi.IntPtrOutput)
}

// Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) NodeTaints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfilePropertiesResponse) []string { return v.NodeTaints }).(pulumi.StringArrayOutput)
}

// Version of orchestrator specified when creating the managed cluster.
func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) OrchestratorVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfilePropertiesResponse) *string { return v.OrchestratorVersion }).(pulumi.StringPtrOutput)
}

// OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) OsDiskSizeGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfilePropertiesResponse) *int { return v.OsDiskSizeGB }).(pulumi.IntPtrOutput)
}

// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfilePropertiesResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// The current deployment or provisioning state, which only appears in the response.
func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfilePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// ScaleSetEvictionPolicy to be used to specify eviction policy for low priority virtual machine scale set. Default to Delete.
func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) ScaleSetEvictionPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfilePropertiesResponse) *string { return v.ScaleSetEvictionPolicy }).(pulumi.StringPtrOutput)
}

// ScaleSetPriority to be used to specify virtual machine scale set priority. Default to regular.
func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) ScaleSetPriority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfilePropertiesResponse) *string { return v.ScaleSetPriority }).(pulumi.StringPtrOutput)
}

// AgentPoolType represents types of an agent pool
func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfilePropertiesResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Size of agent VMs.
func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfilePropertiesResponse) *string { return v.VmSize }).(pulumi.StringPtrOutput)
}

// VNet SubnetID specifies the VNet's subnet identifier.
func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) VnetSubnetID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfilePropertiesResponse) *string { return v.VnetSubnetID }).(pulumi.StringPtrOutput)
}

type ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterAgentPoolProfilePropertiesResponse)(nil)).Elem()
}

func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) ToManagedClusterAgentPoolProfilePropertiesResponsePtrOutput() ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput {
	return o
}

func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) ToManagedClusterAgentPoolProfilePropertiesResponsePtrOutputWithContext(ctx context.Context) ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput {
	return o
}

func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) Elem() ManagedClusterAgentPoolProfilePropertiesResponseOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfilePropertiesResponse) ManagedClusterAgentPoolProfilePropertiesResponse {
		return *v
	}).(ManagedClusterAgentPoolProfilePropertiesResponseOutput)
}

// (PREVIEW) Availability zones for nodes. Must use VirtualMachineScaleSets AgentPoolType.
func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfilePropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.AvailabilityZones
	}).(pulumi.StringArrayOutput)
}

// Number of agents (VMs) to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfilePropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Whether to enable auto-scaler
func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) EnableAutoScaling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfilePropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableAutoScaling
	}).(pulumi.BoolPtrOutput)
}

// Enable public IP for nodes
func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) EnableNodePublicIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfilePropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableNodePublicIP
	}).(pulumi.BoolPtrOutput)
}

// Maximum number of nodes for auto-scaling
func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) MaxCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfilePropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxCount
	}).(pulumi.IntPtrOutput)
}

// Maximum number of pods that can run on a node.
func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) MaxPods() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfilePropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxPods
	}).(pulumi.IntPtrOutput)
}

// Minimum number of nodes for auto-scaling
func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) MinCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfilePropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.MinCount
	}).(pulumi.IntPtrOutput)
}

// Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) NodeTaints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfilePropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.NodeTaints
	}).(pulumi.StringArrayOutput)
}

// Version of orchestrator specified when creating the managed cluster.
func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) OrchestratorVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfilePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.OrchestratorVersion
	}).(pulumi.StringPtrOutput)
}

// OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) OsDiskSizeGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfilePropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.OsDiskSizeGB
	}).(pulumi.IntPtrOutput)
}

// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfilePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// The current deployment or provisioning state, which only appears in the response.
func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfilePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// ScaleSetEvictionPolicy to be used to specify eviction policy for low priority virtual machine scale set. Default to Delete.
func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) ScaleSetEvictionPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfilePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ScaleSetEvictionPolicy
	}).(pulumi.StringPtrOutput)
}

// ScaleSetPriority to be used to specify virtual machine scale set priority. Default to regular.
func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) ScaleSetPriority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfilePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ScaleSetPriority
	}).(pulumi.StringPtrOutput)
}

// AgentPoolType represents types of an agent pool
func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfilePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Size of agent VMs.
func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfilePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.VmSize
	}).(pulumi.StringPtrOutput)
}

// VNet SubnetID specifies the VNet's subnet identifier.
func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) VnetSubnetID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfilePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.VnetSubnetID
	}).(pulumi.StringPtrOutput)
}

// Profile for the container service agent pool.
type ManagedClusterAgentPoolProfileResponse struct {
	// (PREVIEW) Availability zones for nodes. Must use VirtualMachineScaleSets AgentPoolType.
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// Number of agents (VMs) to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
	Count *int `pulumi:"count"`
	// Whether to enable auto-scaler
	EnableAutoScaling *bool `pulumi:"enableAutoScaling"`
	// Enable public IP for nodes
	EnableNodePublicIP *bool `pulumi:"enableNodePublicIP"`
	// Maximum number of nodes for auto-scaling
	MaxCount *int `pulumi:"maxCount"`
	// Maximum number of pods that can run on a node.
	MaxPods *int `pulumi:"maxPods"`
	// Minimum number of nodes for auto-scaling
	MinCount *int `pulumi:"minCount"`
	// Unique name of the agent pool profile in the context of the subscription and resource group.
	Name string `pulumi:"name"`
	// Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
	NodeTaints []string `pulumi:"nodeTaints"`
	// Version of orchestrator specified when creating the managed cluster.
	OrchestratorVersion *string `pulumi:"orchestratorVersion"`
	// OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
	OsDiskSizeGB *int `pulumi:"osDiskSizeGB"`
	// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
	OsType *string `pulumi:"osType"`
	// The current deployment or provisioning state, which only appears in the response.
	ProvisioningState string `pulumi:"provisioningState"`
	// ScaleSetEvictionPolicy to be used to specify eviction policy for low priority virtual machine scale set. Default to Delete.
	ScaleSetEvictionPolicy *string `pulumi:"scaleSetEvictionPolicy"`
	// ScaleSetPriority to be used to specify virtual machine scale set priority. Default to regular.
	ScaleSetPriority *string `pulumi:"scaleSetPriority"`
	// AgentPoolType represents types of an agent pool
	Type *string `pulumi:"type"`
	// Size of agent VMs.
	VmSize *string `pulumi:"vmSize"`
	// VNet SubnetID specifies the VNet's subnet identifier.
	VnetSubnetID *string `pulumi:"vnetSubnetID"`
}

// ManagedClusterAgentPoolProfileResponseInput is an input type that accepts ManagedClusterAgentPoolProfileResponseArgs and ManagedClusterAgentPoolProfileResponseOutput values.
// You can construct a concrete instance of `ManagedClusterAgentPoolProfileResponseInput` via:
//
//          ManagedClusterAgentPoolProfileResponseArgs{...}
type ManagedClusterAgentPoolProfileResponseInput interface {
	pulumi.Input

	ToManagedClusterAgentPoolProfileResponseOutput() ManagedClusterAgentPoolProfileResponseOutput
	ToManagedClusterAgentPoolProfileResponseOutputWithContext(context.Context) ManagedClusterAgentPoolProfileResponseOutput
}

// Profile for the container service agent pool.
type ManagedClusterAgentPoolProfileResponseArgs struct {
	// (PREVIEW) Availability zones for nodes. Must use VirtualMachineScaleSets AgentPoolType.
	AvailabilityZones pulumi.StringArrayInput `pulumi:"availabilityZones"`
	// Number of agents (VMs) to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// Whether to enable auto-scaler
	EnableAutoScaling pulumi.BoolPtrInput `pulumi:"enableAutoScaling"`
	// Enable public IP for nodes
	EnableNodePublicIP pulumi.BoolPtrInput `pulumi:"enableNodePublicIP"`
	// Maximum number of nodes for auto-scaling
	MaxCount pulumi.IntPtrInput `pulumi:"maxCount"`
	// Maximum number of pods that can run on a node.
	MaxPods pulumi.IntPtrInput `pulumi:"maxPods"`
	// Minimum number of nodes for auto-scaling
	MinCount pulumi.IntPtrInput `pulumi:"minCount"`
	// Unique name of the agent pool profile in the context of the subscription and resource group.
	Name pulumi.StringInput `pulumi:"name"`
	// Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
	NodeTaints pulumi.StringArrayInput `pulumi:"nodeTaints"`
	// Version of orchestrator specified when creating the managed cluster.
	OrchestratorVersion pulumi.StringPtrInput `pulumi:"orchestratorVersion"`
	// OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
	OsDiskSizeGB pulumi.IntPtrInput `pulumi:"osDiskSizeGB"`
	// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// The current deployment or provisioning state, which only appears in the response.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// ScaleSetEvictionPolicy to be used to specify eviction policy for low priority virtual machine scale set. Default to Delete.
	ScaleSetEvictionPolicy pulumi.StringPtrInput `pulumi:"scaleSetEvictionPolicy"`
	// ScaleSetPriority to be used to specify virtual machine scale set priority. Default to regular.
	ScaleSetPriority pulumi.StringPtrInput `pulumi:"scaleSetPriority"`
	// AgentPoolType represents types of an agent pool
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Size of agent VMs.
	VmSize pulumi.StringPtrInput `pulumi:"vmSize"`
	// VNet SubnetID specifies the VNet's subnet identifier.
	VnetSubnetID pulumi.StringPtrInput `pulumi:"vnetSubnetID"`
}

func (ManagedClusterAgentPoolProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAgentPoolProfileResponse)(nil)).Elem()
}

func (i ManagedClusterAgentPoolProfileResponseArgs) ToManagedClusterAgentPoolProfileResponseOutput() ManagedClusterAgentPoolProfileResponseOutput {
	return i.ToManagedClusterAgentPoolProfileResponseOutputWithContext(context.Background())
}

func (i ManagedClusterAgentPoolProfileResponseArgs) ToManagedClusterAgentPoolProfileResponseOutputWithContext(ctx context.Context) ManagedClusterAgentPoolProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAgentPoolProfileResponseOutput)
}

// ManagedClusterAgentPoolProfileResponseArrayInput is an input type that accepts ManagedClusterAgentPoolProfileResponseArray and ManagedClusterAgentPoolProfileResponseArrayOutput values.
// You can construct a concrete instance of `ManagedClusterAgentPoolProfileResponseArrayInput` via:
//
//          ManagedClusterAgentPoolProfileResponseArray{ ManagedClusterAgentPoolProfileResponseArgs{...} }
type ManagedClusterAgentPoolProfileResponseArrayInput interface {
	pulumi.Input

	ToManagedClusterAgentPoolProfileResponseArrayOutput() ManagedClusterAgentPoolProfileResponseArrayOutput
	ToManagedClusterAgentPoolProfileResponseArrayOutputWithContext(context.Context) ManagedClusterAgentPoolProfileResponseArrayOutput
}

type ManagedClusterAgentPoolProfileResponseArray []ManagedClusterAgentPoolProfileResponseInput

func (ManagedClusterAgentPoolProfileResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedClusterAgentPoolProfileResponse)(nil)).Elem()
}

func (i ManagedClusterAgentPoolProfileResponseArray) ToManagedClusterAgentPoolProfileResponseArrayOutput() ManagedClusterAgentPoolProfileResponseArrayOutput {
	return i.ToManagedClusterAgentPoolProfileResponseArrayOutputWithContext(context.Background())
}

func (i ManagedClusterAgentPoolProfileResponseArray) ToManagedClusterAgentPoolProfileResponseArrayOutputWithContext(ctx context.Context) ManagedClusterAgentPoolProfileResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAgentPoolProfileResponseArrayOutput)
}

// Profile for the container service agent pool.
type ManagedClusterAgentPoolProfileResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterAgentPoolProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAgentPoolProfileResponse)(nil)).Elem()
}

func (o ManagedClusterAgentPoolProfileResponseOutput) ToManagedClusterAgentPoolProfileResponseOutput() ManagedClusterAgentPoolProfileResponseOutput {
	return o
}

func (o ManagedClusterAgentPoolProfileResponseOutput) ToManagedClusterAgentPoolProfileResponseOutputWithContext(ctx context.Context) ManagedClusterAgentPoolProfileResponseOutput {
	return o
}

// (PREVIEW) Availability zones for nodes. Must use VirtualMachineScaleSets AgentPoolType.
func (o ManagedClusterAgentPoolProfileResponseOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// Number of agents (VMs) to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
func (o ManagedClusterAgentPoolProfileResponseOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Whether to enable auto-scaler
func (o ManagedClusterAgentPoolProfileResponseOutput) EnableAutoScaling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *bool { return v.EnableAutoScaling }).(pulumi.BoolPtrOutput)
}

// Enable public IP for nodes
func (o ManagedClusterAgentPoolProfileResponseOutput) EnableNodePublicIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *bool { return v.EnableNodePublicIP }).(pulumi.BoolPtrOutput)
}

// Maximum number of nodes for auto-scaling
func (o ManagedClusterAgentPoolProfileResponseOutput) MaxCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *int { return v.MaxCount }).(pulumi.IntPtrOutput)
}

// Maximum number of pods that can run on a node.
func (o ManagedClusterAgentPoolProfileResponseOutput) MaxPods() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *int { return v.MaxPods }).(pulumi.IntPtrOutput)
}

// Minimum number of nodes for auto-scaling
func (o ManagedClusterAgentPoolProfileResponseOutput) MinCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *int { return v.MinCount }).(pulumi.IntPtrOutput)
}

// Unique name of the agent pool profile in the context of the subscription and resource group.
func (o ManagedClusterAgentPoolProfileResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
func (o ManagedClusterAgentPoolProfileResponseOutput) NodeTaints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) []string { return v.NodeTaints }).(pulumi.StringArrayOutput)
}

// Version of orchestrator specified when creating the managed cluster.
func (o ManagedClusterAgentPoolProfileResponseOutput) OrchestratorVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *string { return v.OrchestratorVersion }).(pulumi.StringPtrOutput)
}

// OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
func (o ManagedClusterAgentPoolProfileResponseOutput) OsDiskSizeGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *int { return v.OsDiskSizeGB }).(pulumi.IntPtrOutput)
}

// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
func (o ManagedClusterAgentPoolProfileResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// The current deployment or provisioning state, which only appears in the response.
func (o ManagedClusterAgentPoolProfileResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// ScaleSetEvictionPolicy to be used to specify eviction policy for low priority virtual machine scale set. Default to Delete.
func (o ManagedClusterAgentPoolProfileResponseOutput) ScaleSetEvictionPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *string { return v.ScaleSetEvictionPolicy }).(pulumi.StringPtrOutput)
}

// ScaleSetPriority to be used to specify virtual machine scale set priority. Default to regular.
func (o ManagedClusterAgentPoolProfileResponseOutput) ScaleSetPriority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *string { return v.ScaleSetPriority }).(pulumi.StringPtrOutput)
}

// AgentPoolType represents types of an agent pool
func (o ManagedClusterAgentPoolProfileResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Size of agent VMs.
func (o ManagedClusterAgentPoolProfileResponseOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *string { return v.VmSize }).(pulumi.StringPtrOutput)
}

// VNet SubnetID specifies the VNet's subnet identifier.
func (o ManagedClusterAgentPoolProfileResponseOutput) VnetSubnetID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *string { return v.VnetSubnetID }).(pulumi.StringPtrOutput)
}

type ManagedClusterAgentPoolProfileResponseArrayOutput struct{ *pulumi.OutputState }

func (ManagedClusterAgentPoolProfileResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedClusterAgentPoolProfileResponse)(nil)).Elem()
}

func (o ManagedClusterAgentPoolProfileResponseArrayOutput) ToManagedClusterAgentPoolProfileResponseArrayOutput() ManagedClusterAgentPoolProfileResponseArrayOutput {
	return o
}

func (o ManagedClusterAgentPoolProfileResponseArrayOutput) ToManagedClusterAgentPoolProfileResponseArrayOutputWithContext(ctx context.Context) ManagedClusterAgentPoolProfileResponseArrayOutput {
	return o
}

func (o ManagedClusterAgentPoolProfileResponseArrayOutput) Index(i pulumi.IntInput) ManagedClusterAgentPoolProfileResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedClusterAgentPoolProfileResponse {
		return vs[0].([]ManagedClusterAgentPoolProfileResponse)[vs[1].(int)]
	}).(ManagedClusterAgentPoolProfileResponseOutput)
}

// Identity for the managed cluster.
type ManagedClusterIdentity struct {
	// The type of identity used for the managed cluster. Type 'SystemAssigned' will use an implicitly created identity in master components and an auto-created user assigned identity in MC_ resource group in agent nodes. Type 'None' will not use MSI for the managed cluster, service principal will be used instead.
	Type *string `pulumi:"type"`
}

// ManagedClusterIdentityInput is an input type that accepts ManagedClusterIdentityArgs and ManagedClusterIdentityOutput values.
// You can construct a concrete instance of `ManagedClusterIdentityInput` via:
//
//          ManagedClusterIdentityArgs{...}
type ManagedClusterIdentityInput interface {
	pulumi.Input

	ToManagedClusterIdentityOutput() ManagedClusterIdentityOutput
	ToManagedClusterIdentityOutputWithContext(context.Context) ManagedClusterIdentityOutput
}

// Identity for the managed cluster.
type ManagedClusterIdentityArgs struct {
	// The type of identity used for the managed cluster. Type 'SystemAssigned' will use an implicitly created identity in master components and an auto-created user assigned identity in MC_ resource group in agent nodes. Type 'None' will not use MSI for the managed cluster, service principal will be used instead.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ManagedClusterIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterIdentity)(nil)).Elem()
}

func (i ManagedClusterIdentityArgs) ToManagedClusterIdentityOutput() ManagedClusterIdentityOutput {
	return i.ToManagedClusterIdentityOutputWithContext(context.Background())
}

func (i ManagedClusterIdentityArgs) ToManagedClusterIdentityOutputWithContext(ctx context.Context) ManagedClusterIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterIdentityOutput)
}

func (i ManagedClusterIdentityArgs) ToManagedClusterIdentityPtrOutput() ManagedClusterIdentityPtrOutput {
	return i.ToManagedClusterIdentityPtrOutputWithContext(context.Background())
}

func (i ManagedClusterIdentityArgs) ToManagedClusterIdentityPtrOutputWithContext(ctx context.Context) ManagedClusterIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterIdentityOutput).ToManagedClusterIdentityPtrOutputWithContext(ctx)
}

// ManagedClusterIdentityPtrInput is an input type that accepts ManagedClusterIdentityArgs, ManagedClusterIdentityPtr and ManagedClusterIdentityPtrOutput values.
// You can construct a concrete instance of `ManagedClusterIdentityPtrInput` via:
//
//          ManagedClusterIdentityArgs{...}
//
//  or:
//
//          nil
type ManagedClusterIdentityPtrInput interface {
	pulumi.Input

	ToManagedClusterIdentityPtrOutput() ManagedClusterIdentityPtrOutput
	ToManagedClusterIdentityPtrOutputWithContext(context.Context) ManagedClusterIdentityPtrOutput
}

type managedClusterIdentityPtrType ManagedClusterIdentityArgs

func ManagedClusterIdentityPtr(v *ManagedClusterIdentityArgs) ManagedClusterIdentityPtrInput {
	return (*managedClusterIdentityPtrType)(v)
}

func (*managedClusterIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterIdentity)(nil)).Elem()
}

func (i *managedClusterIdentityPtrType) ToManagedClusterIdentityPtrOutput() ManagedClusterIdentityPtrOutput {
	return i.ToManagedClusterIdentityPtrOutputWithContext(context.Background())
}

func (i *managedClusterIdentityPtrType) ToManagedClusterIdentityPtrOutputWithContext(ctx context.Context) ManagedClusterIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterIdentityPtrOutput)
}

// Identity for the managed cluster.
type ManagedClusterIdentityOutput struct{ *pulumi.OutputState }

func (ManagedClusterIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterIdentity)(nil)).Elem()
}

func (o ManagedClusterIdentityOutput) ToManagedClusterIdentityOutput() ManagedClusterIdentityOutput {
	return o
}

func (o ManagedClusterIdentityOutput) ToManagedClusterIdentityOutputWithContext(ctx context.Context) ManagedClusterIdentityOutput {
	return o
}

func (o ManagedClusterIdentityOutput) ToManagedClusterIdentityPtrOutput() ManagedClusterIdentityPtrOutput {
	return o.ToManagedClusterIdentityPtrOutputWithContext(context.Background())
}

func (o ManagedClusterIdentityOutput) ToManagedClusterIdentityPtrOutputWithContext(ctx context.Context) ManagedClusterIdentityPtrOutput {
	return o.ApplyT(func(v ManagedClusterIdentity) *ManagedClusterIdentity {
		return &v
	}).(ManagedClusterIdentityPtrOutput)
}

// The type of identity used for the managed cluster. Type 'SystemAssigned' will use an implicitly created identity in master components and an auto-created user assigned identity in MC_ resource group in agent nodes. Type 'None' will not use MSI for the managed cluster, service principal will be used instead.
func (o ManagedClusterIdentityOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterIdentity) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ManagedClusterIdentityPtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterIdentity)(nil)).Elem()
}

func (o ManagedClusterIdentityPtrOutput) ToManagedClusterIdentityPtrOutput() ManagedClusterIdentityPtrOutput {
	return o
}

func (o ManagedClusterIdentityPtrOutput) ToManagedClusterIdentityPtrOutputWithContext(ctx context.Context) ManagedClusterIdentityPtrOutput {
	return o
}

func (o ManagedClusterIdentityPtrOutput) Elem() ManagedClusterIdentityOutput {
	return o.ApplyT(func(v *ManagedClusterIdentity) ManagedClusterIdentity { return *v }).(ManagedClusterIdentityOutput)
}

// The type of identity used for the managed cluster. Type 'SystemAssigned' will use an implicitly created identity in master components and an auto-created user assigned identity in MC_ resource group in agent nodes. Type 'None' will not use MSI for the managed cluster, service principal will be used instead.
func (o ManagedClusterIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterIdentity) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Identity for the managed cluster.
type ManagedClusterIdentityResponse struct {
	// The principal id of the system assigned identity which is used by master components.
	PrincipalId string `pulumi:"principalId"`
	// The tenant id of the system assigned identity which is used by master components.
	TenantId string `pulumi:"tenantId"`
	// The type of identity used for the managed cluster. Type 'SystemAssigned' will use an implicitly created identity in master components and an auto-created user assigned identity in MC_ resource group in agent nodes. Type 'None' will not use MSI for the managed cluster, service principal will be used instead.
	Type *string `pulumi:"type"`
}

// ManagedClusterIdentityResponseInput is an input type that accepts ManagedClusterIdentityResponseArgs and ManagedClusterIdentityResponseOutput values.
// You can construct a concrete instance of `ManagedClusterIdentityResponseInput` via:
//
//          ManagedClusterIdentityResponseArgs{...}
type ManagedClusterIdentityResponseInput interface {
	pulumi.Input

	ToManagedClusterIdentityResponseOutput() ManagedClusterIdentityResponseOutput
	ToManagedClusterIdentityResponseOutputWithContext(context.Context) ManagedClusterIdentityResponseOutput
}

// Identity for the managed cluster.
type ManagedClusterIdentityResponseArgs struct {
	// The principal id of the system assigned identity which is used by master components.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The tenant id of the system assigned identity which is used by master components.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// The type of identity used for the managed cluster. Type 'SystemAssigned' will use an implicitly created identity in master components and an auto-created user assigned identity in MC_ resource group in agent nodes. Type 'None' will not use MSI for the managed cluster, service principal will be used instead.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ManagedClusterIdentityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterIdentityResponse)(nil)).Elem()
}

func (i ManagedClusterIdentityResponseArgs) ToManagedClusterIdentityResponseOutput() ManagedClusterIdentityResponseOutput {
	return i.ToManagedClusterIdentityResponseOutputWithContext(context.Background())
}

func (i ManagedClusterIdentityResponseArgs) ToManagedClusterIdentityResponseOutputWithContext(ctx context.Context) ManagedClusterIdentityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterIdentityResponseOutput)
}

func (i ManagedClusterIdentityResponseArgs) ToManagedClusterIdentityResponsePtrOutput() ManagedClusterIdentityResponsePtrOutput {
	return i.ToManagedClusterIdentityResponsePtrOutputWithContext(context.Background())
}

func (i ManagedClusterIdentityResponseArgs) ToManagedClusterIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedClusterIdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterIdentityResponseOutput).ToManagedClusterIdentityResponsePtrOutputWithContext(ctx)
}

// ManagedClusterIdentityResponsePtrInput is an input type that accepts ManagedClusterIdentityResponseArgs, ManagedClusterIdentityResponsePtr and ManagedClusterIdentityResponsePtrOutput values.
// You can construct a concrete instance of `ManagedClusterIdentityResponsePtrInput` via:
//
//          ManagedClusterIdentityResponseArgs{...}
//
//  or:
//
//          nil
type ManagedClusterIdentityResponsePtrInput interface {
	pulumi.Input

	ToManagedClusterIdentityResponsePtrOutput() ManagedClusterIdentityResponsePtrOutput
	ToManagedClusterIdentityResponsePtrOutputWithContext(context.Context) ManagedClusterIdentityResponsePtrOutput
}

type managedClusterIdentityResponsePtrType ManagedClusterIdentityResponseArgs

func ManagedClusterIdentityResponsePtr(v *ManagedClusterIdentityResponseArgs) ManagedClusterIdentityResponsePtrInput {
	return (*managedClusterIdentityResponsePtrType)(v)
}

func (*managedClusterIdentityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterIdentityResponse)(nil)).Elem()
}

func (i *managedClusterIdentityResponsePtrType) ToManagedClusterIdentityResponsePtrOutput() ManagedClusterIdentityResponsePtrOutput {
	return i.ToManagedClusterIdentityResponsePtrOutputWithContext(context.Background())
}

func (i *managedClusterIdentityResponsePtrType) ToManagedClusterIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedClusterIdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterIdentityResponsePtrOutput)
}

// Identity for the managed cluster.
type ManagedClusterIdentityResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterIdentityResponse)(nil)).Elem()
}

func (o ManagedClusterIdentityResponseOutput) ToManagedClusterIdentityResponseOutput() ManagedClusterIdentityResponseOutput {
	return o
}

func (o ManagedClusterIdentityResponseOutput) ToManagedClusterIdentityResponseOutputWithContext(ctx context.Context) ManagedClusterIdentityResponseOutput {
	return o
}

func (o ManagedClusterIdentityResponseOutput) ToManagedClusterIdentityResponsePtrOutput() ManagedClusterIdentityResponsePtrOutput {
	return o.ToManagedClusterIdentityResponsePtrOutputWithContext(context.Background())
}

func (o ManagedClusterIdentityResponseOutput) ToManagedClusterIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedClusterIdentityResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterIdentityResponse) *ManagedClusterIdentityResponse {
		return &v
	}).(ManagedClusterIdentityResponsePtrOutput)
}

// The principal id of the system assigned identity which is used by master components.
func (o ManagedClusterIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant id of the system assigned identity which is used by master components.
func (o ManagedClusterIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The type of identity used for the managed cluster. Type 'SystemAssigned' will use an implicitly created identity in master components and an auto-created user assigned identity in MC_ resource group in agent nodes. Type 'None' will not use MSI for the managed cluster, service principal will be used instead.
func (o ManagedClusterIdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterIdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ManagedClusterIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterIdentityResponse)(nil)).Elem()
}

func (o ManagedClusterIdentityResponsePtrOutput) ToManagedClusterIdentityResponsePtrOutput() ManagedClusterIdentityResponsePtrOutput {
	return o
}

func (o ManagedClusterIdentityResponsePtrOutput) ToManagedClusterIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedClusterIdentityResponsePtrOutput {
	return o
}

func (o ManagedClusterIdentityResponsePtrOutput) Elem() ManagedClusterIdentityResponseOutput {
	return o.ApplyT(func(v *ManagedClusterIdentityResponse) ManagedClusterIdentityResponse { return *v }).(ManagedClusterIdentityResponseOutput)
}

// The principal id of the system assigned identity which is used by master components.
func (o ManagedClusterIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant id of the system assigned identity which is used by master components.
func (o ManagedClusterIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The type of identity used for the managed cluster. Type 'SystemAssigned' will use an implicitly created identity in master components and an auto-created user assigned identity in MC_ resource group in agent nodes. Type 'None' will not use MSI for the managed cluster, service principal will be used instead.
func (o ManagedClusterIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Profile of the managed cluster load balancer
type ManagedClusterLoadBalancerProfile struct {
	// The effective outbound IP resources of the cluster load balancer.
	EffectiveOutboundIPs []ResourceReference `pulumi:"effectiveOutboundIPs"`
	// Desired managed outbound IPs for the cluster load balancer.
	ManagedOutboundIPs *ManagedClusterLoadBalancerProfileProperties `pulumi:"managedOutboundIPs"`
	// Desired outbound IP Prefix resources for the cluster load balancer.
	OutboundIPPrefixes *ManagedClusterLoadBalancerProfileProperties `pulumi:"outboundIPPrefixes"`
	// Desired outbound IP resources for the cluster load balancer.
	OutboundIPs *ManagedClusterLoadBalancerProfileProperties `pulumi:"outboundIPs"`
}

// ManagedClusterLoadBalancerProfileInput is an input type that accepts ManagedClusterLoadBalancerProfileArgs and ManagedClusterLoadBalancerProfileOutput values.
// You can construct a concrete instance of `ManagedClusterLoadBalancerProfileInput` via:
//
//          ManagedClusterLoadBalancerProfileArgs{...}
type ManagedClusterLoadBalancerProfileInput interface {
	pulumi.Input

	ToManagedClusterLoadBalancerProfileOutput() ManagedClusterLoadBalancerProfileOutput
	ToManagedClusterLoadBalancerProfileOutputWithContext(context.Context) ManagedClusterLoadBalancerProfileOutput
}

// Profile of the managed cluster load balancer
type ManagedClusterLoadBalancerProfileArgs struct {
	// The effective outbound IP resources of the cluster load balancer.
	EffectiveOutboundIPs ResourceReferenceArrayInput `pulumi:"effectiveOutboundIPs"`
	// Desired managed outbound IPs for the cluster load balancer.
	ManagedOutboundIPs ManagedClusterLoadBalancerProfilePropertiesPtrInput `pulumi:"managedOutboundIPs"`
	// Desired outbound IP Prefix resources for the cluster load balancer.
	OutboundIPPrefixes ManagedClusterLoadBalancerProfilePropertiesPtrInput `pulumi:"outboundIPPrefixes"`
	// Desired outbound IP resources for the cluster load balancer.
	OutboundIPs ManagedClusterLoadBalancerProfilePropertiesPtrInput `pulumi:"outboundIPs"`
}

func (ManagedClusterLoadBalancerProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterLoadBalancerProfile)(nil)).Elem()
}

func (i ManagedClusterLoadBalancerProfileArgs) ToManagedClusterLoadBalancerProfileOutput() ManagedClusterLoadBalancerProfileOutput {
	return i.ToManagedClusterLoadBalancerProfileOutputWithContext(context.Background())
}

func (i ManagedClusterLoadBalancerProfileArgs) ToManagedClusterLoadBalancerProfileOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterLoadBalancerProfileOutput)
}

func (i ManagedClusterLoadBalancerProfileArgs) ToManagedClusterLoadBalancerProfilePtrOutput() ManagedClusterLoadBalancerProfilePtrOutput {
	return i.ToManagedClusterLoadBalancerProfilePtrOutputWithContext(context.Background())
}

func (i ManagedClusterLoadBalancerProfileArgs) ToManagedClusterLoadBalancerProfilePtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterLoadBalancerProfileOutput).ToManagedClusterLoadBalancerProfilePtrOutputWithContext(ctx)
}

// ManagedClusterLoadBalancerProfilePtrInput is an input type that accepts ManagedClusterLoadBalancerProfileArgs, ManagedClusterLoadBalancerProfilePtr and ManagedClusterLoadBalancerProfilePtrOutput values.
// You can construct a concrete instance of `ManagedClusterLoadBalancerProfilePtrInput` via:
//
//          ManagedClusterLoadBalancerProfileArgs{...}
//
//  or:
//
//          nil
type ManagedClusterLoadBalancerProfilePtrInput interface {
	pulumi.Input

	ToManagedClusterLoadBalancerProfilePtrOutput() ManagedClusterLoadBalancerProfilePtrOutput
	ToManagedClusterLoadBalancerProfilePtrOutputWithContext(context.Context) ManagedClusterLoadBalancerProfilePtrOutput
}

type managedClusterLoadBalancerProfilePtrType ManagedClusterLoadBalancerProfileArgs

func ManagedClusterLoadBalancerProfilePtr(v *ManagedClusterLoadBalancerProfileArgs) ManagedClusterLoadBalancerProfilePtrInput {
	return (*managedClusterLoadBalancerProfilePtrType)(v)
}

func (*managedClusterLoadBalancerProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterLoadBalancerProfile)(nil)).Elem()
}

func (i *managedClusterLoadBalancerProfilePtrType) ToManagedClusterLoadBalancerProfilePtrOutput() ManagedClusterLoadBalancerProfilePtrOutput {
	return i.ToManagedClusterLoadBalancerProfilePtrOutputWithContext(context.Background())
}

func (i *managedClusterLoadBalancerProfilePtrType) ToManagedClusterLoadBalancerProfilePtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterLoadBalancerProfilePtrOutput)
}

// Profile of the managed cluster load balancer
type ManagedClusterLoadBalancerProfileOutput struct{ *pulumi.OutputState }

func (ManagedClusterLoadBalancerProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterLoadBalancerProfile)(nil)).Elem()
}

func (o ManagedClusterLoadBalancerProfileOutput) ToManagedClusterLoadBalancerProfileOutput() ManagedClusterLoadBalancerProfileOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileOutput) ToManagedClusterLoadBalancerProfileOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileOutput) ToManagedClusterLoadBalancerProfilePtrOutput() ManagedClusterLoadBalancerProfilePtrOutput {
	return o.ToManagedClusterLoadBalancerProfilePtrOutputWithContext(context.Background())
}

func (o ManagedClusterLoadBalancerProfileOutput) ToManagedClusterLoadBalancerProfilePtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfilePtrOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfile) *ManagedClusterLoadBalancerProfile {
		return &v
	}).(ManagedClusterLoadBalancerProfilePtrOutput)
}

// The effective outbound IP resources of the cluster load balancer.
func (o ManagedClusterLoadBalancerProfileOutput) EffectiveOutboundIPs() ResourceReferenceArrayOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfile) []ResourceReference { return v.EffectiveOutboundIPs }).(ResourceReferenceArrayOutput)
}

// Desired managed outbound IPs for the cluster load balancer.
func (o ManagedClusterLoadBalancerProfileOutput) ManagedOutboundIPs() ManagedClusterLoadBalancerProfilePropertiesPtrOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfile) *ManagedClusterLoadBalancerProfileProperties {
		return v.ManagedOutboundIPs
	}).(ManagedClusterLoadBalancerProfilePropertiesPtrOutput)
}

// Desired outbound IP Prefix resources for the cluster load balancer.
func (o ManagedClusterLoadBalancerProfileOutput) OutboundIPPrefixes() ManagedClusterLoadBalancerProfilePropertiesPtrOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfile) *ManagedClusterLoadBalancerProfileProperties {
		return v.OutboundIPPrefixes
	}).(ManagedClusterLoadBalancerProfilePropertiesPtrOutput)
}

// Desired outbound IP resources for the cluster load balancer.
func (o ManagedClusterLoadBalancerProfileOutput) OutboundIPs() ManagedClusterLoadBalancerProfilePropertiesPtrOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfile) *ManagedClusterLoadBalancerProfileProperties {
		return v.OutboundIPs
	}).(ManagedClusterLoadBalancerProfilePropertiesPtrOutput)
}

type ManagedClusterLoadBalancerProfilePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterLoadBalancerProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterLoadBalancerProfile)(nil)).Elem()
}

func (o ManagedClusterLoadBalancerProfilePtrOutput) ToManagedClusterLoadBalancerProfilePtrOutput() ManagedClusterLoadBalancerProfilePtrOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfilePtrOutput) ToManagedClusterLoadBalancerProfilePtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfilePtrOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfilePtrOutput) Elem() ManagedClusterLoadBalancerProfileOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfile) ManagedClusterLoadBalancerProfile { return *v }).(ManagedClusterLoadBalancerProfileOutput)
}

// The effective outbound IP resources of the cluster load balancer.
func (o ManagedClusterLoadBalancerProfilePtrOutput) EffectiveOutboundIPs() ResourceReferenceArrayOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfile) []ResourceReference {
		if v == nil {
			return nil
		}
		return v.EffectiveOutboundIPs
	}).(ResourceReferenceArrayOutput)
}

// Desired managed outbound IPs for the cluster load balancer.
func (o ManagedClusterLoadBalancerProfilePtrOutput) ManagedOutboundIPs() ManagedClusterLoadBalancerProfilePropertiesPtrOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfile) *ManagedClusterLoadBalancerProfileProperties {
		if v == nil {
			return nil
		}
		return v.ManagedOutboundIPs
	}).(ManagedClusterLoadBalancerProfilePropertiesPtrOutput)
}

// Desired outbound IP Prefix resources for the cluster load balancer.
func (o ManagedClusterLoadBalancerProfilePtrOutput) OutboundIPPrefixes() ManagedClusterLoadBalancerProfilePropertiesPtrOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfile) *ManagedClusterLoadBalancerProfileProperties {
		if v == nil {
			return nil
		}
		return v.OutboundIPPrefixes
	}).(ManagedClusterLoadBalancerProfilePropertiesPtrOutput)
}

// Desired outbound IP resources for the cluster load balancer.
func (o ManagedClusterLoadBalancerProfilePtrOutput) OutboundIPs() ManagedClusterLoadBalancerProfilePropertiesPtrOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfile) *ManagedClusterLoadBalancerProfileProperties {
		if v == nil {
			return nil
		}
		return v.OutboundIPs
	}).(ManagedClusterLoadBalancerProfilePropertiesPtrOutput)
}

// Desired managed outbound IPs for the cluster load balancer.
type ManagedClusterLoadBalancerProfileProperties struct {
	// Desired number of outbound IP created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
	Count *int `pulumi:"count"`
}

// ManagedClusterLoadBalancerProfilePropertiesInput is an input type that accepts ManagedClusterLoadBalancerProfilePropertiesArgs and ManagedClusterLoadBalancerProfilePropertiesOutput values.
// You can construct a concrete instance of `ManagedClusterLoadBalancerProfilePropertiesInput` via:
//
//          ManagedClusterLoadBalancerProfilePropertiesArgs{...}
type ManagedClusterLoadBalancerProfilePropertiesInput interface {
	pulumi.Input

	ToManagedClusterLoadBalancerProfilePropertiesOutput() ManagedClusterLoadBalancerProfilePropertiesOutput
	ToManagedClusterLoadBalancerProfilePropertiesOutputWithContext(context.Context) ManagedClusterLoadBalancerProfilePropertiesOutput
}

// Desired managed outbound IPs for the cluster load balancer.
type ManagedClusterLoadBalancerProfilePropertiesArgs struct {
	// Desired number of outbound IP created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
	Count pulumi.IntPtrInput `pulumi:"count"`
}

func (ManagedClusterLoadBalancerProfilePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterLoadBalancerProfileProperties)(nil)).Elem()
}

func (i ManagedClusterLoadBalancerProfilePropertiesArgs) ToManagedClusterLoadBalancerProfilePropertiesOutput() ManagedClusterLoadBalancerProfilePropertiesOutput {
	return i.ToManagedClusterLoadBalancerProfilePropertiesOutputWithContext(context.Background())
}

func (i ManagedClusterLoadBalancerProfilePropertiesArgs) ToManagedClusterLoadBalancerProfilePropertiesOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfilePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterLoadBalancerProfilePropertiesOutput)
}

func (i ManagedClusterLoadBalancerProfilePropertiesArgs) ToManagedClusterLoadBalancerProfilePropertiesPtrOutput() ManagedClusterLoadBalancerProfilePropertiesPtrOutput {
	return i.ToManagedClusterLoadBalancerProfilePropertiesPtrOutputWithContext(context.Background())
}

func (i ManagedClusterLoadBalancerProfilePropertiesArgs) ToManagedClusterLoadBalancerProfilePropertiesPtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfilePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterLoadBalancerProfilePropertiesOutput).ToManagedClusterLoadBalancerProfilePropertiesPtrOutputWithContext(ctx)
}

// ManagedClusterLoadBalancerProfilePropertiesPtrInput is an input type that accepts ManagedClusterLoadBalancerProfilePropertiesArgs, ManagedClusterLoadBalancerProfilePropertiesPtr and ManagedClusterLoadBalancerProfilePropertiesPtrOutput values.
// You can construct a concrete instance of `ManagedClusterLoadBalancerProfilePropertiesPtrInput` via:
//
//          ManagedClusterLoadBalancerProfilePropertiesArgs{...}
//
//  or:
//
//          nil
type ManagedClusterLoadBalancerProfilePropertiesPtrInput interface {
	pulumi.Input

	ToManagedClusterLoadBalancerProfilePropertiesPtrOutput() ManagedClusterLoadBalancerProfilePropertiesPtrOutput
	ToManagedClusterLoadBalancerProfilePropertiesPtrOutputWithContext(context.Context) ManagedClusterLoadBalancerProfilePropertiesPtrOutput
}

type managedClusterLoadBalancerProfilePropertiesPtrType ManagedClusterLoadBalancerProfilePropertiesArgs

func ManagedClusterLoadBalancerProfilePropertiesPtr(v *ManagedClusterLoadBalancerProfilePropertiesArgs) ManagedClusterLoadBalancerProfilePropertiesPtrInput {
	return (*managedClusterLoadBalancerProfilePropertiesPtrType)(v)
}

func (*managedClusterLoadBalancerProfilePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterLoadBalancerProfileProperties)(nil)).Elem()
}

func (i *managedClusterLoadBalancerProfilePropertiesPtrType) ToManagedClusterLoadBalancerProfilePropertiesPtrOutput() ManagedClusterLoadBalancerProfilePropertiesPtrOutput {
	return i.ToManagedClusterLoadBalancerProfilePropertiesPtrOutputWithContext(context.Background())
}

func (i *managedClusterLoadBalancerProfilePropertiesPtrType) ToManagedClusterLoadBalancerProfilePropertiesPtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfilePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterLoadBalancerProfilePropertiesPtrOutput)
}

// Desired managed outbound IPs for the cluster load balancer.
type ManagedClusterLoadBalancerProfilePropertiesOutput struct{ *pulumi.OutputState }

func (ManagedClusterLoadBalancerProfilePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterLoadBalancerProfileProperties)(nil)).Elem()
}

func (o ManagedClusterLoadBalancerProfilePropertiesOutput) ToManagedClusterLoadBalancerProfilePropertiesOutput() ManagedClusterLoadBalancerProfilePropertiesOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfilePropertiesOutput) ToManagedClusterLoadBalancerProfilePropertiesOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfilePropertiesOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfilePropertiesOutput) ToManagedClusterLoadBalancerProfilePropertiesPtrOutput() ManagedClusterLoadBalancerProfilePropertiesPtrOutput {
	return o.ToManagedClusterLoadBalancerProfilePropertiesPtrOutputWithContext(context.Background())
}

func (o ManagedClusterLoadBalancerProfilePropertiesOutput) ToManagedClusterLoadBalancerProfilePropertiesPtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfilePropertiesPtrOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfileProperties) *ManagedClusterLoadBalancerProfileProperties {
		return &v
	}).(ManagedClusterLoadBalancerProfilePropertiesPtrOutput)
}

// Desired number of outbound IP created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
func (o ManagedClusterLoadBalancerProfilePropertiesOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfileProperties) *int { return v.Count }).(pulumi.IntPtrOutput)
}

type ManagedClusterLoadBalancerProfilePropertiesPtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterLoadBalancerProfilePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterLoadBalancerProfileProperties)(nil)).Elem()
}

func (o ManagedClusterLoadBalancerProfilePropertiesPtrOutput) ToManagedClusterLoadBalancerProfilePropertiesPtrOutput() ManagedClusterLoadBalancerProfilePropertiesPtrOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfilePropertiesPtrOutput) ToManagedClusterLoadBalancerProfilePropertiesPtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfilePropertiesPtrOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfilePropertiesPtrOutput) Elem() ManagedClusterLoadBalancerProfilePropertiesOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfileProperties) ManagedClusterLoadBalancerProfileProperties {
		return *v
	}).(ManagedClusterLoadBalancerProfilePropertiesOutput)
}

// Desired number of outbound IP created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
func (o ManagedClusterLoadBalancerProfilePropertiesPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfileProperties) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Profile of the managed cluster load balancer
type ManagedClusterLoadBalancerProfileResponse struct {
	// The effective outbound IP resources of the cluster load balancer.
	EffectiveOutboundIPs []ResourceReferenceResponse `pulumi:"effectiveOutboundIPs"`
	// Desired managed outbound IPs for the cluster load balancer.
	ManagedOutboundIPs *ManagedClusterLoadBalancerProfileResponseProperties `pulumi:"managedOutboundIPs"`
	// Desired outbound IP Prefix resources for the cluster load balancer.
	OutboundIPPrefixes *ManagedClusterLoadBalancerProfileResponseProperties `pulumi:"outboundIPPrefixes"`
	// Desired outbound IP resources for the cluster load balancer.
	OutboundIPs *ManagedClusterLoadBalancerProfileResponseProperties `pulumi:"outboundIPs"`
}

// ManagedClusterLoadBalancerProfileResponseInput is an input type that accepts ManagedClusterLoadBalancerProfileResponseArgs and ManagedClusterLoadBalancerProfileResponseOutput values.
// You can construct a concrete instance of `ManagedClusterLoadBalancerProfileResponseInput` via:
//
//          ManagedClusterLoadBalancerProfileResponseArgs{...}
type ManagedClusterLoadBalancerProfileResponseInput interface {
	pulumi.Input

	ToManagedClusterLoadBalancerProfileResponseOutput() ManagedClusterLoadBalancerProfileResponseOutput
	ToManagedClusterLoadBalancerProfileResponseOutputWithContext(context.Context) ManagedClusterLoadBalancerProfileResponseOutput
}

// Profile of the managed cluster load balancer
type ManagedClusterLoadBalancerProfileResponseArgs struct {
	// The effective outbound IP resources of the cluster load balancer.
	EffectiveOutboundIPs ResourceReferenceResponseArrayInput `pulumi:"effectiveOutboundIPs"`
	// Desired managed outbound IPs for the cluster load balancer.
	ManagedOutboundIPs ManagedClusterLoadBalancerProfileResponsePropertiesPtrInput `pulumi:"managedOutboundIPs"`
	// Desired outbound IP Prefix resources for the cluster load balancer.
	OutboundIPPrefixes ManagedClusterLoadBalancerProfileResponsePropertiesPtrInput `pulumi:"outboundIPPrefixes"`
	// Desired outbound IP resources for the cluster load balancer.
	OutboundIPs ManagedClusterLoadBalancerProfileResponsePropertiesPtrInput `pulumi:"outboundIPs"`
}

func (ManagedClusterLoadBalancerProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterLoadBalancerProfileResponse)(nil)).Elem()
}

func (i ManagedClusterLoadBalancerProfileResponseArgs) ToManagedClusterLoadBalancerProfileResponseOutput() ManagedClusterLoadBalancerProfileResponseOutput {
	return i.ToManagedClusterLoadBalancerProfileResponseOutputWithContext(context.Background())
}

func (i ManagedClusterLoadBalancerProfileResponseArgs) ToManagedClusterLoadBalancerProfileResponseOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterLoadBalancerProfileResponseOutput)
}

func (i ManagedClusterLoadBalancerProfileResponseArgs) ToManagedClusterLoadBalancerProfileResponsePtrOutput() ManagedClusterLoadBalancerProfileResponsePtrOutput {
	return i.ToManagedClusterLoadBalancerProfileResponsePtrOutputWithContext(context.Background())
}

func (i ManagedClusterLoadBalancerProfileResponseArgs) ToManagedClusterLoadBalancerProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterLoadBalancerProfileResponseOutput).ToManagedClusterLoadBalancerProfileResponsePtrOutputWithContext(ctx)
}

// ManagedClusterLoadBalancerProfileResponsePtrInput is an input type that accepts ManagedClusterLoadBalancerProfileResponseArgs, ManagedClusterLoadBalancerProfileResponsePtr and ManagedClusterLoadBalancerProfileResponsePtrOutput values.
// You can construct a concrete instance of `ManagedClusterLoadBalancerProfileResponsePtrInput` via:
//
//          ManagedClusterLoadBalancerProfileResponseArgs{...}
//
//  or:
//
//          nil
type ManagedClusterLoadBalancerProfileResponsePtrInput interface {
	pulumi.Input

	ToManagedClusterLoadBalancerProfileResponsePtrOutput() ManagedClusterLoadBalancerProfileResponsePtrOutput
	ToManagedClusterLoadBalancerProfileResponsePtrOutputWithContext(context.Context) ManagedClusterLoadBalancerProfileResponsePtrOutput
}

type managedClusterLoadBalancerProfileResponsePtrType ManagedClusterLoadBalancerProfileResponseArgs

func ManagedClusterLoadBalancerProfileResponsePtr(v *ManagedClusterLoadBalancerProfileResponseArgs) ManagedClusterLoadBalancerProfileResponsePtrInput {
	return (*managedClusterLoadBalancerProfileResponsePtrType)(v)
}

func (*managedClusterLoadBalancerProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterLoadBalancerProfileResponse)(nil)).Elem()
}

func (i *managedClusterLoadBalancerProfileResponsePtrType) ToManagedClusterLoadBalancerProfileResponsePtrOutput() ManagedClusterLoadBalancerProfileResponsePtrOutput {
	return i.ToManagedClusterLoadBalancerProfileResponsePtrOutputWithContext(context.Background())
}

func (i *managedClusterLoadBalancerProfileResponsePtrType) ToManagedClusterLoadBalancerProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterLoadBalancerProfileResponsePtrOutput)
}

// Profile of the managed cluster load balancer
type ManagedClusterLoadBalancerProfileResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterLoadBalancerProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterLoadBalancerProfileResponse)(nil)).Elem()
}

func (o ManagedClusterLoadBalancerProfileResponseOutput) ToManagedClusterLoadBalancerProfileResponseOutput() ManagedClusterLoadBalancerProfileResponseOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileResponseOutput) ToManagedClusterLoadBalancerProfileResponseOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileResponseOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileResponseOutput) ToManagedClusterLoadBalancerProfileResponsePtrOutput() ManagedClusterLoadBalancerProfileResponsePtrOutput {
	return o.ToManagedClusterLoadBalancerProfileResponsePtrOutputWithContext(context.Background())
}

func (o ManagedClusterLoadBalancerProfileResponseOutput) ToManagedClusterLoadBalancerProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfileResponse) *ManagedClusterLoadBalancerProfileResponse {
		return &v
	}).(ManagedClusterLoadBalancerProfileResponsePtrOutput)
}

// The effective outbound IP resources of the cluster load balancer.
func (o ManagedClusterLoadBalancerProfileResponseOutput) EffectiveOutboundIPs() ResourceReferenceResponseArrayOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfileResponse) []ResourceReferenceResponse {
		return v.EffectiveOutboundIPs
	}).(ResourceReferenceResponseArrayOutput)
}

// Desired managed outbound IPs for the cluster load balancer.
func (o ManagedClusterLoadBalancerProfileResponseOutput) ManagedOutboundIPs() ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfileResponse) *ManagedClusterLoadBalancerProfileResponseProperties {
		return v.ManagedOutboundIPs
	}).(ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput)
}

// Desired outbound IP Prefix resources for the cluster load balancer.
func (o ManagedClusterLoadBalancerProfileResponseOutput) OutboundIPPrefixes() ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfileResponse) *ManagedClusterLoadBalancerProfileResponseProperties {
		return v.OutboundIPPrefixes
	}).(ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput)
}

// Desired outbound IP resources for the cluster load balancer.
func (o ManagedClusterLoadBalancerProfileResponseOutput) OutboundIPs() ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfileResponse) *ManagedClusterLoadBalancerProfileResponseProperties {
		return v.OutboundIPs
	}).(ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput)
}

type ManagedClusterLoadBalancerProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterLoadBalancerProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterLoadBalancerProfileResponse)(nil)).Elem()
}

func (o ManagedClusterLoadBalancerProfileResponsePtrOutput) ToManagedClusterLoadBalancerProfileResponsePtrOutput() ManagedClusterLoadBalancerProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileResponsePtrOutput) ToManagedClusterLoadBalancerProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileResponsePtrOutput) Elem() ManagedClusterLoadBalancerProfileResponseOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfileResponse) ManagedClusterLoadBalancerProfileResponse {
		return *v
	}).(ManagedClusterLoadBalancerProfileResponseOutput)
}

// The effective outbound IP resources of the cluster load balancer.
func (o ManagedClusterLoadBalancerProfileResponsePtrOutput) EffectiveOutboundIPs() ResourceReferenceResponseArrayOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfileResponse) []ResourceReferenceResponse {
		if v == nil {
			return nil
		}
		return v.EffectiveOutboundIPs
	}).(ResourceReferenceResponseArrayOutput)
}

// Desired managed outbound IPs for the cluster load balancer.
func (o ManagedClusterLoadBalancerProfileResponsePtrOutput) ManagedOutboundIPs() ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfileResponse) *ManagedClusterLoadBalancerProfileResponseProperties {
		if v == nil {
			return nil
		}
		return v.ManagedOutboundIPs
	}).(ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput)
}

// Desired outbound IP Prefix resources for the cluster load balancer.
func (o ManagedClusterLoadBalancerProfileResponsePtrOutput) OutboundIPPrefixes() ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfileResponse) *ManagedClusterLoadBalancerProfileResponseProperties {
		if v == nil {
			return nil
		}
		return v.OutboundIPPrefixes
	}).(ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput)
}

// Desired outbound IP resources for the cluster load balancer.
func (o ManagedClusterLoadBalancerProfileResponsePtrOutput) OutboundIPs() ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfileResponse) *ManagedClusterLoadBalancerProfileResponseProperties {
		if v == nil {
			return nil
		}
		return v.OutboundIPs
	}).(ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput)
}

// Desired managed outbound IPs for the cluster load balancer.
type ManagedClusterLoadBalancerProfileResponseProperties struct {
	// Desired number of outbound IP created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
	Count *int `pulumi:"count"`
}

// ManagedClusterLoadBalancerProfileResponsePropertiesInput is an input type that accepts ManagedClusterLoadBalancerProfileResponsePropertiesArgs and ManagedClusterLoadBalancerProfileResponsePropertiesOutput values.
// You can construct a concrete instance of `ManagedClusterLoadBalancerProfileResponsePropertiesInput` via:
//
//          ManagedClusterLoadBalancerProfileResponsePropertiesArgs{...}
type ManagedClusterLoadBalancerProfileResponsePropertiesInput interface {
	pulumi.Input

	ToManagedClusterLoadBalancerProfileResponsePropertiesOutput() ManagedClusterLoadBalancerProfileResponsePropertiesOutput
	ToManagedClusterLoadBalancerProfileResponsePropertiesOutputWithContext(context.Context) ManagedClusterLoadBalancerProfileResponsePropertiesOutput
}

// Desired managed outbound IPs for the cluster load balancer.
type ManagedClusterLoadBalancerProfileResponsePropertiesArgs struct {
	// Desired number of outbound IP created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
	Count pulumi.IntPtrInput `pulumi:"count"`
}

func (ManagedClusterLoadBalancerProfileResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterLoadBalancerProfileResponseProperties)(nil)).Elem()
}

func (i ManagedClusterLoadBalancerProfileResponsePropertiesArgs) ToManagedClusterLoadBalancerProfileResponsePropertiesOutput() ManagedClusterLoadBalancerProfileResponsePropertiesOutput {
	return i.ToManagedClusterLoadBalancerProfileResponsePropertiesOutputWithContext(context.Background())
}

func (i ManagedClusterLoadBalancerProfileResponsePropertiesArgs) ToManagedClusterLoadBalancerProfileResponsePropertiesOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterLoadBalancerProfileResponsePropertiesOutput)
}

func (i ManagedClusterLoadBalancerProfileResponsePropertiesArgs) ToManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput() ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput {
	return i.ToManagedClusterLoadBalancerProfileResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i ManagedClusterLoadBalancerProfileResponsePropertiesArgs) ToManagedClusterLoadBalancerProfileResponsePropertiesPtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterLoadBalancerProfileResponsePropertiesOutput).ToManagedClusterLoadBalancerProfileResponsePropertiesPtrOutputWithContext(ctx)
}

// ManagedClusterLoadBalancerProfileResponsePropertiesPtrInput is an input type that accepts ManagedClusterLoadBalancerProfileResponsePropertiesArgs, ManagedClusterLoadBalancerProfileResponsePropertiesPtr and ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `ManagedClusterLoadBalancerProfileResponsePropertiesPtrInput` via:
//
//          ManagedClusterLoadBalancerProfileResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type ManagedClusterLoadBalancerProfileResponsePropertiesPtrInput interface {
	pulumi.Input

	ToManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput() ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput
	ToManagedClusterLoadBalancerProfileResponsePropertiesPtrOutputWithContext(context.Context) ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput
}

type managedClusterLoadBalancerProfileResponsePropertiesPtrType ManagedClusterLoadBalancerProfileResponsePropertiesArgs

func ManagedClusterLoadBalancerProfileResponsePropertiesPtr(v *ManagedClusterLoadBalancerProfileResponsePropertiesArgs) ManagedClusterLoadBalancerProfileResponsePropertiesPtrInput {
	return (*managedClusterLoadBalancerProfileResponsePropertiesPtrType)(v)
}

func (*managedClusterLoadBalancerProfileResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterLoadBalancerProfileResponseProperties)(nil)).Elem()
}

func (i *managedClusterLoadBalancerProfileResponsePropertiesPtrType) ToManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput() ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput {
	return i.ToManagedClusterLoadBalancerProfileResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *managedClusterLoadBalancerProfileResponsePropertiesPtrType) ToManagedClusterLoadBalancerProfileResponsePropertiesPtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput)
}

// Desired managed outbound IPs for the cluster load balancer.
type ManagedClusterLoadBalancerProfileResponsePropertiesOutput struct{ *pulumi.OutputState }

func (ManagedClusterLoadBalancerProfileResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterLoadBalancerProfileResponseProperties)(nil)).Elem()
}

func (o ManagedClusterLoadBalancerProfileResponsePropertiesOutput) ToManagedClusterLoadBalancerProfileResponsePropertiesOutput() ManagedClusterLoadBalancerProfileResponsePropertiesOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileResponsePropertiesOutput) ToManagedClusterLoadBalancerProfileResponsePropertiesOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileResponsePropertiesOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileResponsePropertiesOutput) ToManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput() ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput {
	return o.ToManagedClusterLoadBalancerProfileResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o ManagedClusterLoadBalancerProfileResponsePropertiesOutput) ToManagedClusterLoadBalancerProfileResponsePropertiesPtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfileResponseProperties) *ManagedClusterLoadBalancerProfileResponseProperties {
		return &v
	}).(ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput)
}

// Desired number of outbound IP created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
func (o ManagedClusterLoadBalancerProfileResponsePropertiesOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfileResponseProperties) *int { return v.Count }).(pulumi.IntPtrOutput)
}

type ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterLoadBalancerProfileResponseProperties)(nil)).Elem()
}

func (o ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput) ToManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput() ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput) ToManagedClusterLoadBalancerProfileResponsePropertiesPtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput) Elem() ManagedClusterLoadBalancerProfileResponsePropertiesOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfileResponseProperties) ManagedClusterLoadBalancerProfileResponseProperties {
		return *v
	}).(ManagedClusterLoadBalancerProfileResponsePropertiesOutput)
}

// Desired number of outbound IP created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
func (o ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfileResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Properties of the managed cluster.
type ManagedClusterPropertiesResponse struct {
	// Profile of Azure Active Directory configuration.
	AadProfile *ManagedClusterAADProfileResponse `pulumi:"aadProfile"`
	// Profile of managed cluster add-on.
	AddonProfiles map[string]ManagedClusterAddonProfileResponse `pulumi:"addonProfiles"`
	// Properties of the agent pool.
	AgentPoolProfiles []ManagedClusterAgentPoolProfileResponse `pulumi:"agentPoolProfiles"`
	// Access profile for managed cluster API server.
	ApiServerAccessProfile *ManagedClusterAPIServerAccessProfileResponse `pulumi:"apiServerAccessProfile"`
	// DNS prefix specified when creating the managed cluster.
	DnsPrefix *string `pulumi:"dnsPrefix"`
	// (PREVIEW) Whether to enable Kubernetes Pod security policy.
	EnablePodSecurityPolicy *bool `pulumi:"enablePodSecurityPolicy"`
	// Whether to enable Kubernetes Role-Based Access Control.
	EnableRBAC *bool `pulumi:"enableRBAC"`
	// FQDN for the master pool.
	Fqdn string `pulumi:"fqdn"`
	// Version of Kubernetes specified when creating the managed cluster.
	KubernetesVersion *string `pulumi:"kubernetesVersion"`
	// Profile for Linux VMs in the container service cluster.
	LinuxProfile *ContainerServiceLinuxProfileResponse `pulumi:"linuxProfile"`
	// The max number of agent pools for the managed cluster.
	MaxAgentPools int `pulumi:"maxAgentPools"`
	// Profile of network configuration.
	NetworkProfile *ContainerServiceNetworkProfileResponse `pulumi:"networkProfile"`
	// Name of the resource group containing agent pool nodes.
	NodeResourceGroup *string `pulumi:"nodeResourceGroup"`
	// The current deployment or provisioning state, which only appears in the response.
	ProvisioningState string `pulumi:"provisioningState"`
	// Information about a service principal identity for the cluster to use for manipulating Azure APIs.
	ServicePrincipalProfile *ManagedClusterServicePrincipalProfileResponse `pulumi:"servicePrincipalProfile"`
	// Profile for Windows VMs in the container service cluster.
	WindowsProfile *ManagedClusterWindowsProfileResponse `pulumi:"windowsProfile"`
}

// ManagedClusterPropertiesResponseInput is an input type that accepts ManagedClusterPropertiesResponseArgs and ManagedClusterPropertiesResponseOutput values.
// You can construct a concrete instance of `ManagedClusterPropertiesResponseInput` via:
//
//          ManagedClusterPropertiesResponseArgs{...}
type ManagedClusterPropertiesResponseInput interface {
	pulumi.Input

	ToManagedClusterPropertiesResponseOutput() ManagedClusterPropertiesResponseOutput
	ToManagedClusterPropertiesResponseOutputWithContext(context.Context) ManagedClusterPropertiesResponseOutput
}

// Properties of the managed cluster.
type ManagedClusterPropertiesResponseArgs struct {
	// Profile of Azure Active Directory configuration.
	AadProfile ManagedClusterAADProfileResponsePtrInput `pulumi:"aadProfile"`
	// Profile of managed cluster add-on.
	AddonProfiles ManagedClusterAddonProfileResponseMapInput `pulumi:"addonProfiles"`
	// Properties of the agent pool.
	AgentPoolProfiles ManagedClusterAgentPoolProfileResponseArrayInput `pulumi:"agentPoolProfiles"`
	// Access profile for managed cluster API server.
	ApiServerAccessProfile ManagedClusterAPIServerAccessProfileResponsePtrInput `pulumi:"apiServerAccessProfile"`
	// DNS prefix specified when creating the managed cluster.
	DnsPrefix pulumi.StringPtrInput `pulumi:"dnsPrefix"`
	// (PREVIEW) Whether to enable Kubernetes Pod security policy.
	EnablePodSecurityPolicy pulumi.BoolPtrInput `pulumi:"enablePodSecurityPolicy"`
	// Whether to enable Kubernetes Role-Based Access Control.
	EnableRBAC pulumi.BoolPtrInput `pulumi:"enableRBAC"`
	// FQDN for the master pool.
	Fqdn pulumi.StringInput `pulumi:"fqdn"`
	// Version of Kubernetes specified when creating the managed cluster.
	KubernetesVersion pulumi.StringPtrInput `pulumi:"kubernetesVersion"`
	// Profile for Linux VMs in the container service cluster.
	LinuxProfile ContainerServiceLinuxProfileResponsePtrInput `pulumi:"linuxProfile"`
	// The max number of agent pools for the managed cluster.
	MaxAgentPools pulumi.IntInput `pulumi:"maxAgentPools"`
	// Profile of network configuration.
	NetworkProfile ContainerServiceNetworkProfileResponsePtrInput `pulumi:"networkProfile"`
	// Name of the resource group containing agent pool nodes.
	NodeResourceGroup pulumi.StringPtrInput `pulumi:"nodeResourceGroup"`
	// The current deployment or provisioning state, which only appears in the response.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Information about a service principal identity for the cluster to use for manipulating Azure APIs.
	ServicePrincipalProfile ManagedClusterServicePrincipalProfileResponsePtrInput `pulumi:"servicePrincipalProfile"`
	// Profile for Windows VMs in the container service cluster.
	WindowsProfile ManagedClusterWindowsProfileResponsePtrInput `pulumi:"windowsProfile"`
}

func (ManagedClusterPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterPropertiesResponse)(nil)).Elem()
}

func (i ManagedClusterPropertiesResponseArgs) ToManagedClusterPropertiesResponseOutput() ManagedClusterPropertiesResponseOutput {
	return i.ToManagedClusterPropertiesResponseOutputWithContext(context.Background())
}

func (i ManagedClusterPropertiesResponseArgs) ToManagedClusterPropertiesResponseOutputWithContext(ctx context.Context) ManagedClusterPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterPropertiesResponseOutput)
}

func (i ManagedClusterPropertiesResponseArgs) ToManagedClusterPropertiesResponsePtrOutput() ManagedClusterPropertiesResponsePtrOutput {
	return i.ToManagedClusterPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ManagedClusterPropertiesResponseArgs) ToManagedClusterPropertiesResponsePtrOutputWithContext(ctx context.Context) ManagedClusterPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterPropertiesResponseOutput).ToManagedClusterPropertiesResponsePtrOutputWithContext(ctx)
}

// ManagedClusterPropertiesResponsePtrInput is an input type that accepts ManagedClusterPropertiesResponseArgs, ManagedClusterPropertiesResponsePtr and ManagedClusterPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ManagedClusterPropertiesResponsePtrInput` via:
//
//          ManagedClusterPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ManagedClusterPropertiesResponsePtrInput interface {
	pulumi.Input

	ToManagedClusterPropertiesResponsePtrOutput() ManagedClusterPropertiesResponsePtrOutput
	ToManagedClusterPropertiesResponsePtrOutputWithContext(context.Context) ManagedClusterPropertiesResponsePtrOutput
}

type managedClusterPropertiesResponsePtrType ManagedClusterPropertiesResponseArgs

func ManagedClusterPropertiesResponsePtr(v *ManagedClusterPropertiesResponseArgs) ManagedClusterPropertiesResponsePtrInput {
	return (*managedClusterPropertiesResponsePtrType)(v)
}

func (*managedClusterPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterPropertiesResponse)(nil)).Elem()
}

func (i *managedClusterPropertiesResponsePtrType) ToManagedClusterPropertiesResponsePtrOutput() ManagedClusterPropertiesResponsePtrOutput {
	return i.ToManagedClusterPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *managedClusterPropertiesResponsePtrType) ToManagedClusterPropertiesResponsePtrOutputWithContext(ctx context.Context) ManagedClusterPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterPropertiesResponsePtrOutput)
}

// Properties of the managed cluster.
type ManagedClusterPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterPropertiesResponse)(nil)).Elem()
}

func (o ManagedClusterPropertiesResponseOutput) ToManagedClusterPropertiesResponseOutput() ManagedClusterPropertiesResponseOutput {
	return o
}

func (o ManagedClusterPropertiesResponseOutput) ToManagedClusterPropertiesResponseOutputWithContext(ctx context.Context) ManagedClusterPropertiesResponseOutput {
	return o
}

func (o ManagedClusterPropertiesResponseOutput) ToManagedClusterPropertiesResponsePtrOutput() ManagedClusterPropertiesResponsePtrOutput {
	return o.ToManagedClusterPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ManagedClusterPropertiesResponseOutput) ToManagedClusterPropertiesResponsePtrOutputWithContext(ctx context.Context) ManagedClusterPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponse) *ManagedClusterPropertiesResponse {
		return &v
	}).(ManagedClusterPropertiesResponsePtrOutput)
}

// Profile of Azure Active Directory configuration.
func (o ManagedClusterPropertiesResponseOutput) AadProfile() ManagedClusterAADProfileResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponse) *ManagedClusterAADProfileResponse { return v.AadProfile }).(ManagedClusterAADProfileResponsePtrOutput)
}

// Profile of managed cluster add-on.
func (o ManagedClusterPropertiesResponseOutput) AddonProfiles() ManagedClusterAddonProfileResponseMapOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponse) map[string]ManagedClusterAddonProfileResponse {
		return v.AddonProfiles
	}).(ManagedClusterAddonProfileResponseMapOutput)
}

// Properties of the agent pool.
func (o ManagedClusterPropertiesResponseOutput) AgentPoolProfiles() ManagedClusterAgentPoolProfileResponseArrayOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponse) []ManagedClusterAgentPoolProfileResponse {
		return v.AgentPoolProfiles
	}).(ManagedClusterAgentPoolProfileResponseArrayOutput)
}

// Access profile for managed cluster API server.
func (o ManagedClusterPropertiesResponseOutput) ApiServerAccessProfile() ManagedClusterAPIServerAccessProfileResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponse) *ManagedClusterAPIServerAccessProfileResponse {
		return v.ApiServerAccessProfile
	}).(ManagedClusterAPIServerAccessProfileResponsePtrOutput)
}

// DNS prefix specified when creating the managed cluster.
func (o ManagedClusterPropertiesResponseOutput) DnsPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponse) *string { return v.DnsPrefix }).(pulumi.StringPtrOutput)
}

// (PREVIEW) Whether to enable Kubernetes Pod security policy.
func (o ManagedClusterPropertiesResponseOutput) EnablePodSecurityPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponse) *bool { return v.EnablePodSecurityPolicy }).(pulumi.BoolPtrOutput)
}

// Whether to enable Kubernetes Role-Based Access Control.
func (o ManagedClusterPropertiesResponseOutput) EnableRBAC() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponse) *bool { return v.EnableRBAC }).(pulumi.BoolPtrOutput)
}

// FQDN for the master pool.
func (o ManagedClusterPropertiesResponseOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponse) string { return v.Fqdn }).(pulumi.StringOutput)
}

// Version of Kubernetes specified when creating the managed cluster.
func (o ManagedClusterPropertiesResponseOutput) KubernetesVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponse) *string { return v.KubernetesVersion }).(pulumi.StringPtrOutput)
}

// Profile for Linux VMs in the container service cluster.
func (o ManagedClusterPropertiesResponseOutput) LinuxProfile() ContainerServiceLinuxProfileResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponse) *ContainerServiceLinuxProfileResponse { return v.LinuxProfile }).(ContainerServiceLinuxProfileResponsePtrOutput)
}

// The max number of agent pools for the managed cluster.
func (o ManagedClusterPropertiesResponseOutput) MaxAgentPools() pulumi.IntOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponse) int { return v.MaxAgentPools }).(pulumi.IntOutput)
}

// Profile of network configuration.
func (o ManagedClusterPropertiesResponseOutput) NetworkProfile() ContainerServiceNetworkProfileResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponse) *ContainerServiceNetworkProfileResponse {
		return v.NetworkProfile
	}).(ContainerServiceNetworkProfileResponsePtrOutput)
}

// Name of the resource group containing agent pool nodes.
func (o ManagedClusterPropertiesResponseOutput) NodeResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponse) *string { return v.NodeResourceGroup }).(pulumi.StringPtrOutput)
}

// The current deployment or provisioning state, which only appears in the response.
func (o ManagedClusterPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Information about a service principal identity for the cluster to use for manipulating Azure APIs.
func (o ManagedClusterPropertiesResponseOutput) ServicePrincipalProfile() ManagedClusterServicePrincipalProfileResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponse) *ManagedClusterServicePrincipalProfileResponse {
		return v.ServicePrincipalProfile
	}).(ManagedClusterServicePrincipalProfileResponsePtrOutput)
}

// Profile for Windows VMs in the container service cluster.
func (o ManagedClusterPropertiesResponseOutput) WindowsProfile() ManagedClusterWindowsProfileResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponse) *ManagedClusterWindowsProfileResponse {
		return v.WindowsProfile
	}).(ManagedClusterWindowsProfileResponsePtrOutput)
}

type ManagedClusterPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterPropertiesResponse)(nil)).Elem()
}

func (o ManagedClusterPropertiesResponsePtrOutput) ToManagedClusterPropertiesResponsePtrOutput() ManagedClusterPropertiesResponsePtrOutput {
	return o
}

func (o ManagedClusterPropertiesResponsePtrOutput) ToManagedClusterPropertiesResponsePtrOutputWithContext(ctx context.Context) ManagedClusterPropertiesResponsePtrOutput {
	return o
}

func (o ManagedClusterPropertiesResponsePtrOutput) Elem() ManagedClusterPropertiesResponseOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponse) ManagedClusterPropertiesResponse { return *v }).(ManagedClusterPropertiesResponseOutput)
}

// Profile of Azure Active Directory configuration.
func (o ManagedClusterPropertiesResponsePtrOutput) AadProfile() ManagedClusterAADProfileResponsePtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponse) *ManagedClusterAADProfileResponse {
		if v == nil {
			return nil
		}
		return v.AadProfile
	}).(ManagedClusterAADProfileResponsePtrOutput)
}

// Profile of managed cluster add-on.
func (o ManagedClusterPropertiesResponsePtrOutput) AddonProfiles() ManagedClusterAddonProfileResponseMapOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponse) map[string]ManagedClusterAddonProfileResponse {
		if v == nil {
			return nil
		}
		return v.AddonProfiles
	}).(ManagedClusterAddonProfileResponseMapOutput)
}

// Properties of the agent pool.
func (o ManagedClusterPropertiesResponsePtrOutput) AgentPoolProfiles() ManagedClusterAgentPoolProfileResponseArrayOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponse) []ManagedClusterAgentPoolProfileResponse {
		if v == nil {
			return nil
		}
		return v.AgentPoolProfiles
	}).(ManagedClusterAgentPoolProfileResponseArrayOutput)
}

// Access profile for managed cluster API server.
func (o ManagedClusterPropertiesResponsePtrOutput) ApiServerAccessProfile() ManagedClusterAPIServerAccessProfileResponsePtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponse) *ManagedClusterAPIServerAccessProfileResponse {
		if v == nil {
			return nil
		}
		return v.ApiServerAccessProfile
	}).(ManagedClusterAPIServerAccessProfileResponsePtrOutput)
}

// DNS prefix specified when creating the managed cluster.
func (o ManagedClusterPropertiesResponsePtrOutput) DnsPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DnsPrefix
	}).(pulumi.StringPtrOutput)
}

// (PREVIEW) Whether to enable Kubernetes Pod security policy.
func (o ManagedClusterPropertiesResponsePtrOutput) EnablePodSecurityPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnablePodSecurityPolicy
	}).(pulumi.BoolPtrOutput)
}

// Whether to enable Kubernetes Role-Based Access Control.
func (o ManagedClusterPropertiesResponsePtrOutput) EnableRBAC() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableRBAC
	}).(pulumi.BoolPtrOutput)
}

// FQDN for the master pool.
func (o ManagedClusterPropertiesResponsePtrOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Fqdn
	}).(pulumi.StringPtrOutput)
}

// Version of Kubernetes specified when creating the managed cluster.
func (o ManagedClusterPropertiesResponsePtrOutput) KubernetesVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.KubernetesVersion
	}).(pulumi.StringPtrOutput)
}

// Profile for Linux VMs in the container service cluster.
func (o ManagedClusterPropertiesResponsePtrOutput) LinuxProfile() ContainerServiceLinuxProfileResponsePtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponse) *ContainerServiceLinuxProfileResponse {
		if v == nil {
			return nil
		}
		return v.LinuxProfile
	}).(ContainerServiceLinuxProfileResponsePtrOutput)
}

// The max number of agent pools for the managed cluster.
func (o ManagedClusterPropertiesResponsePtrOutput) MaxAgentPools() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.MaxAgentPools
	}).(pulumi.IntPtrOutput)
}

// Profile of network configuration.
func (o ManagedClusterPropertiesResponsePtrOutput) NetworkProfile() ContainerServiceNetworkProfileResponsePtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponse) *ContainerServiceNetworkProfileResponse {
		if v == nil {
			return nil
		}
		return v.NetworkProfile
	}).(ContainerServiceNetworkProfileResponsePtrOutput)
}

// Name of the resource group containing agent pool nodes.
func (o ManagedClusterPropertiesResponsePtrOutput) NodeResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.NodeResourceGroup
	}).(pulumi.StringPtrOutput)
}

// The current deployment or provisioning state, which only appears in the response.
func (o ManagedClusterPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Information about a service principal identity for the cluster to use for manipulating Azure APIs.
func (o ManagedClusterPropertiesResponsePtrOutput) ServicePrincipalProfile() ManagedClusterServicePrincipalProfileResponsePtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponse) *ManagedClusterServicePrincipalProfileResponse {
		if v == nil {
			return nil
		}
		return v.ServicePrincipalProfile
	}).(ManagedClusterServicePrincipalProfileResponsePtrOutput)
}

// Profile for Windows VMs in the container service cluster.
func (o ManagedClusterPropertiesResponsePtrOutput) WindowsProfile() ManagedClusterWindowsProfileResponsePtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponse) *ManagedClusterWindowsProfileResponse {
		if v == nil {
			return nil
		}
		return v.WindowsProfile
	}).(ManagedClusterWindowsProfileResponsePtrOutput)
}

// Information about a service principal identity for the cluster to use for manipulating Azure APIs.
type ManagedClusterServicePrincipalProfile struct {
	// The ID for the service principal.
	ClientId string `pulumi:"clientId"`
	// The secret password associated with the service principal in plain text.
	Secret *string `pulumi:"secret"`
}

// ManagedClusterServicePrincipalProfileInput is an input type that accepts ManagedClusterServicePrincipalProfileArgs and ManagedClusterServicePrincipalProfileOutput values.
// You can construct a concrete instance of `ManagedClusterServicePrincipalProfileInput` via:
//
//          ManagedClusterServicePrincipalProfileArgs{...}
type ManagedClusterServicePrincipalProfileInput interface {
	pulumi.Input

	ToManagedClusterServicePrincipalProfileOutput() ManagedClusterServicePrincipalProfileOutput
	ToManagedClusterServicePrincipalProfileOutputWithContext(context.Context) ManagedClusterServicePrincipalProfileOutput
}

// Information about a service principal identity for the cluster to use for manipulating Azure APIs.
type ManagedClusterServicePrincipalProfileArgs struct {
	// The ID for the service principal.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The secret password associated with the service principal in plain text.
	Secret pulumi.StringPtrInput `pulumi:"secret"`
}

func (ManagedClusterServicePrincipalProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterServicePrincipalProfile)(nil)).Elem()
}

func (i ManagedClusterServicePrincipalProfileArgs) ToManagedClusterServicePrincipalProfileOutput() ManagedClusterServicePrincipalProfileOutput {
	return i.ToManagedClusterServicePrincipalProfileOutputWithContext(context.Background())
}

func (i ManagedClusterServicePrincipalProfileArgs) ToManagedClusterServicePrincipalProfileOutputWithContext(ctx context.Context) ManagedClusterServicePrincipalProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterServicePrincipalProfileOutput)
}

func (i ManagedClusterServicePrincipalProfileArgs) ToManagedClusterServicePrincipalProfilePtrOutput() ManagedClusterServicePrincipalProfilePtrOutput {
	return i.ToManagedClusterServicePrincipalProfilePtrOutputWithContext(context.Background())
}

func (i ManagedClusterServicePrincipalProfileArgs) ToManagedClusterServicePrincipalProfilePtrOutputWithContext(ctx context.Context) ManagedClusterServicePrincipalProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterServicePrincipalProfileOutput).ToManagedClusterServicePrincipalProfilePtrOutputWithContext(ctx)
}

// ManagedClusterServicePrincipalProfilePtrInput is an input type that accepts ManagedClusterServicePrincipalProfileArgs, ManagedClusterServicePrincipalProfilePtr and ManagedClusterServicePrincipalProfilePtrOutput values.
// You can construct a concrete instance of `ManagedClusterServicePrincipalProfilePtrInput` via:
//
//          ManagedClusterServicePrincipalProfileArgs{...}
//
//  or:
//
//          nil
type ManagedClusterServicePrincipalProfilePtrInput interface {
	pulumi.Input

	ToManagedClusterServicePrincipalProfilePtrOutput() ManagedClusterServicePrincipalProfilePtrOutput
	ToManagedClusterServicePrincipalProfilePtrOutputWithContext(context.Context) ManagedClusterServicePrincipalProfilePtrOutput
}

type managedClusterServicePrincipalProfilePtrType ManagedClusterServicePrincipalProfileArgs

func ManagedClusterServicePrincipalProfilePtr(v *ManagedClusterServicePrincipalProfileArgs) ManagedClusterServicePrincipalProfilePtrInput {
	return (*managedClusterServicePrincipalProfilePtrType)(v)
}

func (*managedClusterServicePrincipalProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterServicePrincipalProfile)(nil)).Elem()
}

func (i *managedClusterServicePrincipalProfilePtrType) ToManagedClusterServicePrincipalProfilePtrOutput() ManagedClusterServicePrincipalProfilePtrOutput {
	return i.ToManagedClusterServicePrincipalProfilePtrOutputWithContext(context.Background())
}

func (i *managedClusterServicePrincipalProfilePtrType) ToManagedClusterServicePrincipalProfilePtrOutputWithContext(ctx context.Context) ManagedClusterServicePrincipalProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterServicePrincipalProfilePtrOutput)
}

// Information about a service principal identity for the cluster to use for manipulating Azure APIs.
type ManagedClusterServicePrincipalProfileOutput struct{ *pulumi.OutputState }

func (ManagedClusterServicePrincipalProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterServicePrincipalProfile)(nil)).Elem()
}

func (o ManagedClusterServicePrincipalProfileOutput) ToManagedClusterServicePrincipalProfileOutput() ManagedClusterServicePrincipalProfileOutput {
	return o
}

func (o ManagedClusterServicePrincipalProfileOutput) ToManagedClusterServicePrincipalProfileOutputWithContext(ctx context.Context) ManagedClusterServicePrincipalProfileOutput {
	return o
}

func (o ManagedClusterServicePrincipalProfileOutput) ToManagedClusterServicePrincipalProfilePtrOutput() ManagedClusterServicePrincipalProfilePtrOutput {
	return o.ToManagedClusterServicePrincipalProfilePtrOutputWithContext(context.Background())
}

func (o ManagedClusterServicePrincipalProfileOutput) ToManagedClusterServicePrincipalProfilePtrOutputWithContext(ctx context.Context) ManagedClusterServicePrincipalProfilePtrOutput {
	return o.ApplyT(func(v ManagedClusterServicePrincipalProfile) *ManagedClusterServicePrincipalProfile {
		return &v
	}).(ManagedClusterServicePrincipalProfilePtrOutput)
}

// The ID for the service principal.
func (o ManagedClusterServicePrincipalProfileOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterServicePrincipalProfile) string { return v.ClientId }).(pulumi.StringOutput)
}

// The secret password associated with the service principal in plain text.
func (o ManagedClusterServicePrincipalProfileOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterServicePrincipalProfile) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

type ManagedClusterServicePrincipalProfilePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterServicePrincipalProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterServicePrincipalProfile)(nil)).Elem()
}

func (o ManagedClusterServicePrincipalProfilePtrOutput) ToManagedClusterServicePrincipalProfilePtrOutput() ManagedClusterServicePrincipalProfilePtrOutput {
	return o
}

func (o ManagedClusterServicePrincipalProfilePtrOutput) ToManagedClusterServicePrincipalProfilePtrOutputWithContext(ctx context.Context) ManagedClusterServicePrincipalProfilePtrOutput {
	return o
}

func (o ManagedClusterServicePrincipalProfilePtrOutput) Elem() ManagedClusterServicePrincipalProfileOutput {
	return o.ApplyT(func(v *ManagedClusterServicePrincipalProfile) ManagedClusterServicePrincipalProfile { return *v }).(ManagedClusterServicePrincipalProfileOutput)
}

// The ID for the service principal.
func (o ManagedClusterServicePrincipalProfilePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterServicePrincipalProfile) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The secret password associated with the service principal in plain text.
func (o ManagedClusterServicePrincipalProfilePtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterServicePrincipalProfile) *string {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(pulumi.StringPtrOutput)
}

// Information about a service principal identity for the cluster to use for manipulating Azure APIs.
type ManagedClusterServicePrincipalProfileResponse struct {
	// The ID for the service principal.
	ClientId string `pulumi:"clientId"`
	// The secret password associated with the service principal in plain text.
	Secret *string `pulumi:"secret"`
}

// ManagedClusterServicePrincipalProfileResponseInput is an input type that accepts ManagedClusterServicePrincipalProfileResponseArgs and ManagedClusterServicePrincipalProfileResponseOutput values.
// You can construct a concrete instance of `ManagedClusterServicePrincipalProfileResponseInput` via:
//
//          ManagedClusterServicePrincipalProfileResponseArgs{...}
type ManagedClusterServicePrincipalProfileResponseInput interface {
	pulumi.Input

	ToManagedClusterServicePrincipalProfileResponseOutput() ManagedClusterServicePrincipalProfileResponseOutput
	ToManagedClusterServicePrincipalProfileResponseOutputWithContext(context.Context) ManagedClusterServicePrincipalProfileResponseOutput
}

// Information about a service principal identity for the cluster to use for manipulating Azure APIs.
type ManagedClusterServicePrincipalProfileResponseArgs struct {
	// The ID for the service principal.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The secret password associated with the service principal in plain text.
	Secret pulumi.StringPtrInput `pulumi:"secret"`
}

func (ManagedClusterServicePrincipalProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterServicePrincipalProfileResponse)(nil)).Elem()
}

func (i ManagedClusterServicePrincipalProfileResponseArgs) ToManagedClusterServicePrincipalProfileResponseOutput() ManagedClusterServicePrincipalProfileResponseOutput {
	return i.ToManagedClusterServicePrincipalProfileResponseOutputWithContext(context.Background())
}

func (i ManagedClusterServicePrincipalProfileResponseArgs) ToManagedClusterServicePrincipalProfileResponseOutputWithContext(ctx context.Context) ManagedClusterServicePrincipalProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterServicePrincipalProfileResponseOutput)
}

func (i ManagedClusterServicePrincipalProfileResponseArgs) ToManagedClusterServicePrincipalProfileResponsePtrOutput() ManagedClusterServicePrincipalProfileResponsePtrOutput {
	return i.ToManagedClusterServicePrincipalProfileResponsePtrOutputWithContext(context.Background())
}

func (i ManagedClusterServicePrincipalProfileResponseArgs) ToManagedClusterServicePrincipalProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterServicePrincipalProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterServicePrincipalProfileResponseOutput).ToManagedClusterServicePrincipalProfileResponsePtrOutputWithContext(ctx)
}

// ManagedClusterServicePrincipalProfileResponsePtrInput is an input type that accepts ManagedClusterServicePrincipalProfileResponseArgs, ManagedClusterServicePrincipalProfileResponsePtr and ManagedClusterServicePrincipalProfileResponsePtrOutput values.
// You can construct a concrete instance of `ManagedClusterServicePrincipalProfileResponsePtrInput` via:
//
//          ManagedClusterServicePrincipalProfileResponseArgs{...}
//
//  or:
//
//          nil
type ManagedClusterServicePrincipalProfileResponsePtrInput interface {
	pulumi.Input

	ToManagedClusterServicePrincipalProfileResponsePtrOutput() ManagedClusterServicePrincipalProfileResponsePtrOutput
	ToManagedClusterServicePrincipalProfileResponsePtrOutputWithContext(context.Context) ManagedClusterServicePrincipalProfileResponsePtrOutput
}

type managedClusterServicePrincipalProfileResponsePtrType ManagedClusterServicePrincipalProfileResponseArgs

func ManagedClusterServicePrincipalProfileResponsePtr(v *ManagedClusterServicePrincipalProfileResponseArgs) ManagedClusterServicePrincipalProfileResponsePtrInput {
	return (*managedClusterServicePrincipalProfileResponsePtrType)(v)
}

func (*managedClusterServicePrincipalProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterServicePrincipalProfileResponse)(nil)).Elem()
}

func (i *managedClusterServicePrincipalProfileResponsePtrType) ToManagedClusterServicePrincipalProfileResponsePtrOutput() ManagedClusterServicePrincipalProfileResponsePtrOutput {
	return i.ToManagedClusterServicePrincipalProfileResponsePtrOutputWithContext(context.Background())
}

func (i *managedClusterServicePrincipalProfileResponsePtrType) ToManagedClusterServicePrincipalProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterServicePrincipalProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterServicePrincipalProfileResponsePtrOutput)
}

// Information about a service principal identity for the cluster to use for manipulating Azure APIs.
type ManagedClusterServicePrincipalProfileResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterServicePrincipalProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterServicePrincipalProfileResponse)(nil)).Elem()
}

func (o ManagedClusterServicePrincipalProfileResponseOutput) ToManagedClusterServicePrincipalProfileResponseOutput() ManagedClusterServicePrincipalProfileResponseOutput {
	return o
}

func (o ManagedClusterServicePrincipalProfileResponseOutput) ToManagedClusterServicePrincipalProfileResponseOutputWithContext(ctx context.Context) ManagedClusterServicePrincipalProfileResponseOutput {
	return o
}

func (o ManagedClusterServicePrincipalProfileResponseOutput) ToManagedClusterServicePrincipalProfileResponsePtrOutput() ManagedClusterServicePrincipalProfileResponsePtrOutput {
	return o.ToManagedClusterServicePrincipalProfileResponsePtrOutputWithContext(context.Background())
}

func (o ManagedClusterServicePrincipalProfileResponseOutput) ToManagedClusterServicePrincipalProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterServicePrincipalProfileResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterServicePrincipalProfileResponse) *ManagedClusterServicePrincipalProfileResponse {
		return &v
	}).(ManagedClusterServicePrincipalProfileResponsePtrOutput)
}

// The ID for the service principal.
func (o ManagedClusterServicePrincipalProfileResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterServicePrincipalProfileResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// The secret password associated with the service principal in plain text.
func (o ManagedClusterServicePrincipalProfileResponseOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterServicePrincipalProfileResponse) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

type ManagedClusterServicePrincipalProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterServicePrincipalProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterServicePrincipalProfileResponse)(nil)).Elem()
}

func (o ManagedClusterServicePrincipalProfileResponsePtrOutput) ToManagedClusterServicePrincipalProfileResponsePtrOutput() ManagedClusterServicePrincipalProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterServicePrincipalProfileResponsePtrOutput) ToManagedClusterServicePrincipalProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterServicePrincipalProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterServicePrincipalProfileResponsePtrOutput) Elem() ManagedClusterServicePrincipalProfileResponseOutput {
	return o.ApplyT(func(v *ManagedClusterServicePrincipalProfileResponse) ManagedClusterServicePrincipalProfileResponse {
		return *v
	}).(ManagedClusterServicePrincipalProfileResponseOutput)
}

// The ID for the service principal.
func (o ManagedClusterServicePrincipalProfileResponsePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterServicePrincipalProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The secret password associated with the service principal in plain text.
func (o ManagedClusterServicePrincipalProfileResponsePtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterServicePrincipalProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(pulumi.StringPtrOutput)
}

// Profile for Windows VMs in the container service cluster.
type ManagedClusterWindowsProfile struct {
	// The administrator password to use for Windows VMs.
	AdminPassword *string `pulumi:"adminPassword"`
	// The administrator username to use for Windows VMs.
	AdminUsername string `pulumi:"adminUsername"`
}

// ManagedClusterWindowsProfileInput is an input type that accepts ManagedClusterWindowsProfileArgs and ManagedClusterWindowsProfileOutput values.
// You can construct a concrete instance of `ManagedClusterWindowsProfileInput` via:
//
//          ManagedClusterWindowsProfileArgs{...}
type ManagedClusterWindowsProfileInput interface {
	pulumi.Input

	ToManagedClusterWindowsProfileOutput() ManagedClusterWindowsProfileOutput
	ToManagedClusterWindowsProfileOutputWithContext(context.Context) ManagedClusterWindowsProfileOutput
}

// Profile for Windows VMs in the container service cluster.
type ManagedClusterWindowsProfileArgs struct {
	// The administrator password to use for Windows VMs.
	AdminPassword pulumi.StringPtrInput `pulumi:"adminPassword"`
	// The administrator username to use for Windows VMs.
	AdminUsername pulumi.StringInput `pulumi:"adminUsername"`
}

func (ManagedClusterWindowsProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterWindowsProfile)(nil)).Elem()
}

func (i ManagedClusterWindowsProfileArgs) ToManagedClusterWindowsProfileOutput() ManagedClusterWindowsProfileOutput {
	return i.ToManagedClusterWindowsProfileOutputWithContext(context.Background())
}

func (i ManagedClusterWindowsProfileArgs) ToManagedClusterWindowsProfileOutputWithContext(ctx context.Context) ManagedClusterWindowsProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterWindowsProfileOutput)
}

func (i ManagedClusterWindowsProfileArgs) ToManagedClusterWindowsProfilePtrOutput() ManagedClusterWindowsProfilePtrOutput {
	return i.ToManagedClusterWindowsProfilePtrOutputWithContext(context.Background())
}

func (i ManagedClusterWindowsProfileArgs) ToManagedClusterWindowsProfilePtrOutputWithContext(ctx context.Context) ManagedClusterWindowsProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterWindowsProfileOutput).ToManagedClusterWindowsProfilePtrOutputWithContext(ctx)
}

// ManagedClusterWindowsProfilePtrInput is an input type that accepts ManagedClusterWindowsProfileArgs, ManagedClusterWindowsProfilePtr and ManagedClusterWindowsProfilePtrOutput values.
// You can construct a concrete instance of `ManagedClusterWindowsProfilePtrInput` via:
//
//          ManagedClusterWindowsProfileArgs{...}
//
//  or:
//
//          nil
type ManagedClusterWindowsProfilePtrInput interface {
	pulumi.Input

	ToManagedClusterWindowsProfilePtrOutput() ManagedClusterWindowsProfilePtrOutput
	ToManagedClusterWindowsProfilePtrOutputWithContext(context.Context) ManagedClusterWindowsProfilePtrOutput
}

type managedClusterWindowsProfilePtrType ManagedClusterWindowsProfileArgs

func ManagedClusterWindowsProfilePtr(v *ManagedClusterWindowsProfileArgs) ManagedClusterWindowsProfilePtrInput {
	return (*managedClusterWindowsProfilePtrType)(v)
}

func (*managedClusterWindowsProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterWindowsProfile)(nil)).Elem()
}

func (i *managedClusterWindowsProfilePtrType) ToManagedClusterWindowsProfilePtrOutput() ManagedClusterWindowsProfilePtrOutput {
	return i.ToManagedClusterWindowsProfilePtrOutputWithContext(context.Background())
}

func (i *managedClusterWindowsProfilePtrType) ToManagedClusterWindowsProfilePtrOutputWithContext(ctx context.Context) ManagedClusterWindowsProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterWindowsProfilePtrOutput)
}

// Profile for Windows VMs in the container service cluster.
type ManagedClusterWindowsProfileOutput struct{ *pulumi.OutputState }

func (ManagedClusterWindowsProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterWindowsProfile)(nil)).Elem()
}

func (o ManagedClusterWindowsProfileOutput) ToManagedClusterWindowsProfileOutput() ManagedClusterWindowsProfileOutput {
	return o
}

func (o ManagedClusterWindowsProfileOutput) ToManagedClusterWindowsProfileOutputWithContext(ctx context.Context) ManagedClusterWindowsProfileOutput {
	return o
}

func (o ManagedClusterWindowsProfileOutput) ToManagedClusterWindowsProfilePtrOutput() ManagedClusterWindowsProfilePtrOutput {
	return o.ToManagedClusterWindowsProfilePtrOutputWithContext(context.Background())
}

func (o ManagedClusterWindowsProfileOutput) ToManagedClusterWindowsProfilePtrOutputWithContext(ctx context.Context) ManagedClusterWindowsProfilePtrOutput {
	return o.ApplyT(func(v ManagedClusterWindowsProfile) *ManagedClusterWindowsProfile {
		return &v
	}).(ManagedClusterWindowsProfilePtrOutput)
}

// The administrator password to use for Windows VMs.
func (o ManagedClusterWindowsProfileOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterWindowsProfile) *string { return v.AdminPassword }).(pulumi.StringPtrOutput)
}

// The administrator username to use for Windows VMs.
func (o ManagedClusterWindowsProfileOutput) AdminUsername() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterWindowsProfile) string { return v.AdminUsername }).(pulumi.StringOutput)
}

type ManagedClusterWindowsProfilePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterWindowsProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterWindowsProfile)(nil)).Elem()
}

func (o ManagedClusterWindowsProfilePtrOutput) ToManagedClusterWindowsProfilePtrOutput() ManagedClusterWindowsProfilePtrOutput {
	return o
}

func (o ManagedClusterWindowsProfilePtrOutput) ToManagedClusterWindowsProfilePtrOutputWithContext(ctx context.Context) ManagedClusterWindowsProfilePtrOutput {
	return o
}

func (o ManagedClusterWindowsProfilePtrOutput) Elem() ManagedClusterWindowsProfileOutput {
	return o.ApplyT(func(v *ManagedClusterWindowsProfile) ManagedClusterWindowsProfile { return *v }).(ManagedClusterWindowsProfileOutput)
}

// The administrator password to use for Windows VMs.
func (o ManagedClusterWindowsProfilePtrOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterWindowsProfile) *string {
		if v == nil {
			return nil
		}
		return v.AdminPassword
	}).(pulumi.StringPtrOutput)
}

// The administrator username to use for Windows VMs.
func (o ManagedClusterWindowsProfilePtrOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterWindowsProfile) *string {
		if v == nil {
			return nil
		}
		return &v.AdminUsername
	}).(pulumi.StringPtrOutput)
}

// Profile for Windows VMs in the container service cluster.
type ManagedClusterWindowsProfileResponse struct {
	// The administrator password to use for Windows VMs.
	AdminPassword *string `pulumi:"adminPassword"`
	// The administrator username to use for Windows VMs.
	AdminUsername string `pulumi:"adminUsername"`
}

// ManagedClusterWindowsProfileResponseInput is an input type that accepts ManagedClusterWindowsProfileResponseArgs and ManagedClusterWindowsProfileResponseOutput values.
// You can construct a concrete instance of `ManagedClusterWindowsProfileResponseInput` via:
//
//          ManagedClusterWindowsProfileResponseArgs{...}
type ManagedClusterWindowsProfileResponseInput interface {
	pulumi.Input

	ToManagedClusterWindowsProfileResponseOutput() ManagedClusterWindowsProfileResponseOutput
	ToManagedClusterWindowsProfileResponseOutputWithContext(context.Context) ManagedClusterWindowsProfileResponseOutput
}

// Profile for Windows VMs in the container service cluster.
type ManagedClusterWindowsProfileResponseArgs struct {
	// The administrator password to use for Windows VMs.
	AdminPassword pulumi.StringPtrInput `pulumi:"adminPassword"`
	// The administrator username to use for Windows VMs.
	AdminUsername pulumi.StringInput `pulumi:"adminUsername"`
}

func (ManagedClusterWindowsProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterWindowsProfileResponse)(nil)).Elem()
}

func (i ManagedClusterWindowsProfileResponseArgs) ToManagedClusterWindowsProfileResponseOutput() ManagedClusterWindowsProfileResponseOutput {
	return i.ToManagedClusterWindowsProfileResponseOutputWithContext(context.Background())
}

func (i ManagedClusterWindowsProfileResponseArgs) ToManagedClusterWindowsProfileResponseOutputWithContext(ctx context.Context) ManagedClusterWindowsProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterWindowsProfileResponseOutput)
}

func (i ManagedClusterWindowsProfileResponseArgs) ToManagedClusterWindowsProfileResponsePtrOutput() ManagedClusterWindowsProfileResponsePtrOutput {
	return i.ToManagedClusterWindowsProfileResponsePtrOutputWithContext(context.Background())
}

func (i ManagedClusterWindowsProfileResponseArgs) ToManagedClusterWindowsProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterWindowsProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterWindowsProfileResponseOutput).ToManagedClusterWindowsProfileResponsePtrOutputWithContext(ctx)
}

// ManagedClusterWindowsProfileResponsePtrInput is an input type that accepts ManagedClusterWindowsProfileResponseArgs, ManagedClusterWindowsProfileResponsePtr and ManagedClusterWindowsProfileResponsePtrOutput values.
// You can construct a concrete instance of `ManagedClusterWindowsProfileResponsePtrInput` via:
//
//          ManagedClusterWindowsProfileResponseArgs{...}
//
//  or:
//
//          nil
type ManagedClusterWindowsProfileResponsePtrInput interface {
	pulumi.Input

	ToManagedClusterWindowsProfileResponsePtrOutput() ManagedClusterWindowsProfileResponsePtrOutput
	ToManagedClusterWindowsProfileResponsePtrOutputWithContext(context.Context) ManagedClusterWindowsProfileResponsePtrOutput
}

type managedClusterWindowsProfileResponsePtrType ManagedClusterWindowsProfileResponseArgs

func ManagedClusterWindowsProfileResponsePtr(v *ManagedClusterWindowsProfileResponseArgs) ManagedClusterWindowsProfileResponsePtrInput {
	return (*managedClusterWindowsProfileResponsePtrType)(v)
}

func (*managedClusterWindowsProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterWindowsProfileResponse)(nil)).Elem()
}

func (i *managedClusterWindowsProfileResponsePtrType) ToManagedClusterWindowsProfileResponsePtrOutput() ManagedClusterWindowsProfileResponsePtrOutput {
	return i.ToManagedClusterWindowsProfileResponsePtrOutputWithContext(context.Background())
}

func (i *managedClusterWindowsProfileResponsePtrType) ToManagedClusterWindowsProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterWindowsProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterWindowsProfileResponsePtrOutput)
}

// Profile for Windows VMs in the container service cluster.
type ManagedClusterWindowsProfileResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterWindowsProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterWindowsProfileResponse)(nil)).Elem()
}

func (o ManagedClusterWindowsProfileResponseOutput) ToManagedClusterWindowsProfileResponseOutput() ManagedClusterWindowsProfileResponseOutput {
	return o
}

func (o ManagedClusterWindowsProfileResponseOutput) ToManagedClusterWindowsProfileResponseOutputWithContext(ctx context.Context) ManagedClusterWindowsProfileResponseOutput {
	return o
}

func (o ManagedClusterWindowsProfileResponseOutput) ToManagedClusterWindowsProfileResponsePtrOutput() ManagedClusterWindowsProfileResponsePtrOutput {
	return o.ToManagedClusterWindowsProfileResponsePtrOutputWithContext(context.Background())
}

func (o ManagedClusterWindowsProfileResponseOutput) ToManagedClusterWindowsProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterWindowsProfileResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterWindowsProfileResponse) *ManagedClusterWindowsProfileResponse {
		return &v
	}).(ManagedClusterWindowsProfileResponsePtrOutput)
}

// The administrator password to use for Windows VMs.
func (o ManagedClusterWindowsProfileResponseOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterWindowsProfileResponse) *string { return v.AdminPassword }).(pulumi.StringPtrOutput)
}

// The administrator username to use for Windows VMs.
func (o ManagedClusterWindowsProfileResponseOutput) AdminUsername() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterWindowsProfileResponse) string { return v.AdminUsername }).(pulumi.StringOutput)
}

type ManagedClusterWindowsProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterWindowsProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterWindowsProfileResponse)(nil)).Elem()
}

func (o ManagedClusterWindowsProfileResponsePtrOutput) ToManagedClusterWindowsProfileResponsePtrOutput() ManagedClusterWindowsProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterWindowsProfileResponsePtrOutput) ToManagedClusterWindowsProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterWindowsProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterWindowsProfileResponsePtrOutput) Elem() ManagedClusterWindowsProfileResponseOutput {
	return o.ApplyT(func(v *ManagedClusterWindowsProfileResponse) ManagedClusterWindowsProfileResponse { return *v }).(ManagedClusterWindowsProfileResponseOutput)
}

// The administrator password to use for Windows VMs.
func (o ManagedClusterWindowsProfileResponsePtrOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterWindowsProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.AdminPassword
	}).(pulumi.StringPtrOutput)
}

// The administrator username to use for Windows VMs.
func (o ManagedClusterWindowsProfileResponsePtrOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterWindowsProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AdminUsername
	}).(pulumi.StringPtrOutput)
}

// A reference to an Azure resource.
type ResourceReference struct {
	// The fully qualified Azure resource id.
	Id *string `pulumi:"id"`
}

// ResourceReferenceInput is an input type that accepts ResourceReferenceArgs and ResourceReferenceOutput values.
// You can construct a concrete instance of `ResourceReferenceInput` via:
//
//          ResourceReferenceArgs{...}
type ResourceReferenceInput interface {
	pulumi.Input

	ToResourceReferenceOutput() ResourceReferenceOutput
	ToResourceReferenceOutputWithContext(context.Context) ResourceReferenceOutput
}

// A reference to an Azure resource.
type ResourceReferenceArgs struct {
	// The fully qualified Azure resource id.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ResourceReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceReference)(nil)).Elem()
}

func (i ResourceReferenceArgs) ToResourceReferenceOutput() ResourceReferenceOutput {
	return i.ToResourceReferenceOutputWithContext(context.Background())
}

func (i ResourceReferenceArgs) ToResourceReferenceOutputWithContext(ctx context.Context) ResourceReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceReferenceOutput)
}

// ResourceReferenceArrayInput is an input type that accepts ResourceReferenceArray and ResourceReferenceArrayOutput values.
// You can construct a concrete instance of `ResourceReferenceArrayInput` via:
//
//          ResourceReferenceArray{ ResourceReferenceArgs{...} }
type ResourceReferenceArrayInput interface {
	pulumi.Input

	ToResourceReferenceArrayOutput() ResourceReferenceArrayOutput
	ToResourceReferenceArrayOutputWithContext(context.Context) ResourceReferenceArrayOutput
}

type ResourceReferenceArray []ResourceReferenceInput

func (ResourceReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceReference)(nil)).Elem()
}

func (i ResourceReferenceArray) ToResourceReferenceArrayOutput() ResourceReferenceArrayOutput {
	return i.ToResourceReferenceArrayOutputWithContext(context.Background())
}

func (i ResourceReferenceArray) ToResourceReferenceArrayOutputWithContext(ctx context.Context) ResourceReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceReferenceArrayOutput)
}

// A reference to an Azure resource.
type ResourceReferenceOutput struct{ *pulumi.OutputState }

func (ResourceReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceReference)(nil)).Elem()
}

func (o ResourceReferenceOutput) ToResourceReferenceOutput() ResourceReferenceOutput {
	return o
}

func (o ResourceReferenceOutput) ToResourceReferenceOutputWithContext(ctx context.Context) ResourceReferenceOutput {
	return o
}

// The fully qualified Azure resource id.
func (o ResourceReferenceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceReference) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ResourceReferenceArrayOutput struct{ *pulumi.OutputState }

func (ResourceReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceReference)(nil)).Elem()
}

func (o ResourceReferenceArrayOutput) ToResourceReferenceArrayOutput() ResourceReferenceArrayOutput {
	return o
}

func (o ResourceReferenceArrayOutput) ToResourceReferenceArrayOutputWithContext(ctx context.Context) ResourceReferenceArrayOutput {
	return o
}

func (o ResourceReferenceArrayOutput) Index(i pulumi.IntInput) ResourceReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceReference {
		return vs[0].([]ResourceReference)[vs[1].(int)]
	}).(ResourceReferenceOutput)
}

// A reference to an Azure resource.
type ResourceReferenceResponse struct {
	// The fully qualified Azure resource id.
	Id *string `pulumi:"id"`
}

// ResourceReferenceResponseInput is an input type that accepts ResourceReferenceResponseArgs and ResourceReferenceResponseOutput values.
// You can construct a concrete instance of `ResourceReferenceResponseInput` via:
//
//          ResourceReferenceResponseArgs{...}
type ResourceReferenceResponseInput interface {
	pulumi.Input

	ToResourceReferenceResponseOutput() ResourceReferenceResponseOutput
	ToResourceReferenceResponseOutputWithContext(context.Context) ResourceReferenceResponseOutput
}

// A reference to an Azure resource.
type ResourceReferenceResponseArgs struct {
	// The fully qualified Azure resource id.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ResourceReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceReferenceResponse)(nil)).Elem()
}

func (i ResourceReferenceResponseArgs) ToResourceReferenceResponseOutput() ResourceReferenceResponseOutput {
	return i.ToResourceReferenceResponseOutputWithContext(context.Background())
}

func (i ResourceReferenceResponseArgs) ToResourceReferenceResponseOutputWithContext(ctx context.Context) ResourceReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceReferenceResponseOutput)
}

// ResourceReferenceResponseArrayInput is an input type that accepts ResourceReferenceResponseArray and ResourceReferenceResponseArrayOutput values.
// You can construct a concrete instance of `ResourceReferenceResponseArrayInput` via:
//
//          ResourceReferenceResponseArray{ ResourceReferenceResponseArgs{...} }
type ResourceReferenceResponseArrayInput interface {
	pulumi.Input

	ToResourceReferenceResponseArrayOutput() ResourceReferenceResponseArrayOutput
	ToResourceReferenceResponseArrayOutputWithContext(context.Context) ResourceReferenceResponseArrayOutput
}

type ResourceReferenceResponseArray []ResourceReferenceResponseInput

func (ResourceReferenceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceReferenceResponse)(nil)).Elem()
}

func (i ResourceReferenceResponseArray) ToResourceReferenceResponseArrayOutput() ResourceReferenceResponseArrayOutput {
	return i.ToResourceReferenceResponseArrayOutputWithContext(context.Background())
}

func (i ResourceReferenceResponseArray) ToResourceReferenceResponseArrayOutputWithContext(ctx context.Context) ResourceReferenceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceReferenceResponseArrayOutput)
}

// A reference to an Azure resource.
type ResourceReferenceResponseOutput struct{ *pulumi.OutputState }

func (ResourceReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceReferenceResponse)(nil)).Elem()
}

func (o ResourceReferenceResponseOutput) ToResourceReferenceResponseOutput() ResourceReferenceResponseOutput {
	return o
}

func (o ResourceReferenceResponseOutput) ToResourceReferenceResponseOutputWithContext(ctx context.Context) ResourceReferenceResponseOutput {
	return o
}

// The fully qualified Azure resource id.
func (o ResourceReferenceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceReferenceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ResourceReferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (ResourceReferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceReferenceResponse)(nil)).Elem()
}

func (o ResourceReferenceResponseArrayOutput) ToResourceReferenceResponseArrayOutput() ResourceReferenceResponseArrayOutput {
	return o
}

func (o ResourceReferenceResponseArrayOutput) ToResourceReferenceResponseArrayOutputWithContext(ctx context.Context) ResourceReferenceResponseArrayOutput {
	return o
}

func (o ResourceReferenceResponseArrayOutput) Index(i pulumi.IntInput) ResourceReferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceReferenceResponse {
		return vs[0].([]ResourceReferenceResponse)[vs[1].(int)]
	}).(ResourceReferenceResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(AccessProfileResponseOutput{})
	pulumi.RegisterOutputType(AgentPoolTypeOutput{})
	pulumi.RegisterOutputType(ContainerServiceLinuxProfileOutput{})
	pulumi.RegisterOutputType(ContainerServiceLinuxProfilePtrOutput{})
	pulumi.RegisterOutputType(ContainerServiceLinuxProfileResponseOutput{})
	pulumi.RegisterOutputType(ContainerServiceLinuxProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(ContainerServiceNetworkProfileOutput{})
	pulumi.RegisterOutputType(ContainerServiceNetworkProfilePtrOutput{})
	pulumi.RegisterOutputType(ContainerServiceNetworkProfileResponseOutput{})
	pulumi.RegisterOutputType(ContainerServiceNetworkProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(ContainerServiceSshConfigurationOutput{})
	pulumi.RegisterOutputType(ContainerServiceSshConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ContainerServiceSshConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ContainerServiceSshConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ContainerServiceSshPublicKeyOutput{})
	pulumi.RegisterOutputType(ContainerServiceSshPublicKeyArrayOutput{})
	pulumi.RegisterOutputType(ContainerServiceSshPublicKeyResponseOutput{})
	pulumi.RegisterOutputType(ContainerServiceSshPublicKeyResponseArrayOutput{})
	pulumi.RegisterOutputType(CredentialResultResponseOutput{})
	pulumi.RegisterOutputType(CredentialResultResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagedClusterTypeOutput{})
	pulumi.RegisterOutputType(ManagedClusterAADProfileOutput{})
	pulumi.RegisterOutputType(ManagedClusterAADProfilePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterAADProfileResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterAADProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterAPIServerAccessProfileOutput{})
	pulumi.RegisterOutputType(ManagedClusterAPIServerAccessProfilePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterAPIServerAccessProfileResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterAPIServerAccessProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterAddonProfileOutput{})
	pulumi.RegisterOutputType(ManagedClusterAddonProfileMapOutput{})
	pulumi.RegisterOutputType(ManagedClusterAddonProfileResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterAddonProfileResponseMapOutput{})
	pulumi.RegisterOutputType(ManagedClusterAgentPoolProfileOutput{})
	pulumi.RegisterOutputType(ManagedClusterAgentPoolProfileArrayOutput{})
	pulumi.RegisterOutputType(ManagedClusterAgentPoolProfilePropertiesResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterAgentPoolProfileResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterAgentPoolProfileResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagedClusterIdentityOutput{})
	pulumi.RegisterOutputType(ManagedClusterIdentityPtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterIdentityResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterLoadBalancerProfileOutput{})
	pulumi.RegisterOutputType(ManagedClusterLoadBalancerProfilePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterLoadBalancerProfilePropertiesOutput{})
	pulumi.RegisterOutputType(ManagedClusterLoadBalancerProfilePropertiesPtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterLoadBalancerProfileResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterLoadBalancerProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterLoadBalancerProfileResponsePropertiesOutput{})
	pulumi.RegisterOutputType(ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterServicePrincipalProfileOutput{})
	pulumi.RegisterOutputType(ManagedClusterServicePrincipalProfilePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterServicePrincipalProfileResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterServicePrincipalProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterWindowsProfileOutput{})
	pulumi.RegisterOutputType(ManagedClusterWindowsProfilePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterWindowsProfileResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterWindowsProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceReferenceOutput{})
	pulumi.RegisterOutputType(ResourceReferenceArrayOutput{})
	pulumi.RegisterOutputType(ResourceReferenceResponseOutput{})
	pulumi.RegisterOutputType(ResourceReferenceResponseArrayOutput{})
}
