// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package containerservice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Profile for enabling a user to access a managed cluster.
type AccessProfileResponse struct {
	// Base64-encoded Kubernetes configuration file.
	KubeConfig *string `pulumi:"kubeConfig"`
}

// AccessProfileResponseInput is an input type that accepts AccessProfileResponseArgs and AccessProfileResponseOutput values.
// You can construct a concrete instance of `AccessProfileResponseInput` via:
//
//          AccessProfileResponseArgs{...}
type AccessProfileResponseInput interface {
	pulumi.Input

	ToAccessProfileResponseOutput() AccessProfileResponseOutput
	ToAccessProfileResponseOutputWithContext(context.Context) AccessProfileResponseOutput
}

// Profile for enabling a user to access a managed cluster.
type AccessProfileResponseArgs struct {
	// Base64-encoded Kubernetes configuration file.
	KubeConfig pulumi.StringPtrInput `pulumi:"kubeConfig"`
}

func (AccessProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessProfileResponse)(nil)).Elem()
}

func (i AccessProfileResponseArgs) ToAccessProfileResponseOutput() AccessProfileResponseOutput {
	return i.ToAccessProfileResponseOutputWithContext(context.Background())
}

func (i AccessProfileResponseArgs) ToAccessProfileResponseOutputWithContext(ctx context.Context) AccessProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessProfileResponseOutput)
}

// Profile for enabling a user to access a managed cluster.
type AccessProfileResponseOutput struct{ *pulumi.OutputState }

func (AccessProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessProfileResponse)(nil)).Elem()
}

func (o AccessProfileResponseOutput) ToAccessProfileResponseOutput() AccessProfileResponseOutput {
	return o
}

func (o AccessProfileResponseOutput) ToAccessProfileResponseOutputWithContext(ctx context.Context) AccessProfileResponseOutput {
	return o
}

// Base64-encoded Kubernetes configuration file.
func (o AccessProfileResponseOutput) KubeConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessProfileResponse) *string { return v.KubeConfig }).(pulumi.StringPtrOutput)
}

// Settings for upgrading an agentpool
type AgentPoolUpgradeSettings struct {
	// Count or percentage of additional nodes to be added during upgrade. If empty uses AKS default
	MaxSurge *string `pulumi:"maxSurge"`
}

// AgentPoolUpgradeSettingsInput is an input type that accepts AgentPoolUpgradeSettingsArgs and AgentPoolUpgradeSettingsOutput values.
// You can construct a concrete instance of `AgentPoolUpgradeSettingsInput` via:
//
//          AgentPoolUpgradeSettingsArgs{...}
type AgentPoolUpgradeSettingsInput interface {
	pulumi.Input

	ToAgentPoolUpgradeSettingsOutput() AgentPoolUpgradeSettingsOutput
	ToAgentPoolUpgradeSettingsOutputWithContext(context.Context) AgentPoolUpgradeSettingsOutput
}

// Settings for upgrading an agentpool
type AgentPoolUpgradeSettingsArgs struct {
	// Count or percentage of additional nodes to be added during upgrade. If empty uses AKS default
	MaxSurge pulumi.StringPtrInput `pulumi:"maxSurge"`
}

func (AgentPoolUpgradeSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPoolUpgradeSettings)(nil)).Elem()
}

func (i AgentPoolUpgradeSettingsArgs) ToAgentPoolUpgradeSettingsOutput() AgentPoolUpgradeSettingsOutput {
	return i.ToAgentPoolUpgradeSettingsOutputWithContext(context.Background())
}

func (i AgentPoolUpgradeSettingsArgs) ToAgentPoolUpgradeSettingsOutputWithContext(ctx context.Context) AgentPoolUpgradeSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPoolUpgradeSettingsOutput)
}

func (i AgentPoolUpgradeSettingsArgs) ToAgentPoolUpgradeSettingsPtrOutput() AgentPoolUpgradeSettingsPtrOutput {
	return i.ToAgentPoolUpgradeSettingsPtrOutputWithContext(context.Background())
}

func (i AgentPoolUpgradeSettingsArgs) ToAgentPoolUpgradeSettingsPtrOutputWithContext(ctx context.Context) AgentPoolUpgradeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPoolUpgradeSettingsOutput).ToAgentPoolUpgradeSettingsPtrOutputWithContext(ctx)
}

// AgentPoolUpgradeSettingsPtrInput is an input type that accepts AgentPoolUpgradeSettingsArgs, AgentPoolUpgradeSettingsPtr and AgentPoolUpgradeSettingsPtrOutput values.
// You can construct a concrete instance of `AgentPoolUpgradeSettingsPtrInput` via:
//
//          AgentPoolUpgradeSettingsArgs{...}
//
//  or:
//
//          nil
type AgentPoolUpgradeSettingsPtrInput interface {
	pulumi.Input

	ToAgentPoolUpgradeSettingsPtrOutput() AgentPoolUpgradeSettingsPtrOutput
	ToAgentPoolUpgradeSettingsPtrOutputWithContext(context.Context) AgentPoolUpgradeSettingsPtrOutput
}

type agentPoolUpgradeSettingsPtrType AgentPoolUpgradeSettingsArgs

func AgentPoolUpgradeSettingsPtr(v *AgentPoolUpgradeSettingsArgs) AgentPoolUpgradeSettingsPtrInput {
	return (*agentPoolUpgradeSettingsPtrType)(v)
}

func (*agentPoolUpgradeSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentPoolUpgradeSettings)(nil)).Elem()
}

func (i *agentPoolUpgradeSettingsPtrType) ToAgentPoolUpgradeSettingsPtrOutput() AgentPoolUpgradeSettingsPtrOutput {
	return i.ToAgentPoolUpgradeSettingsPtrOutputWithContext(context.Background())
}

func (i *agentPoolUpgradeSettingsPtrType) ToAgentPoolUpgradeSettingsPtrOutputWithContext(ctx context.Context) AgentPoolUpgradeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPoolUpgradeSettingsPtrOutput)
}

// Settings for upgrading an agentpool
type AgentPoolUpgradeSettingsOutput struct{ *pulumi.OutputState }

func (AgentPoolUpgradeSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPoolUpgradeSettings)(nil)).Elem()
}

func (o AgentPoolUpgradeSettingsOutput) ToAgentPoolUpgradeSettingsOutput() AgentPoolUpgradeSettingsOutput {
	return o
}

func (o AgentPoolUpgradeSettingsOutput) ToAgentPoolUpgradeSettingsOutputWithContext(ctx context.Context) AgentPoolUpgradeSettingsOutput {
	return o
}

func (o AgentPoolUpgradeSettingsOutput) ToAgentPoolUpgradeSettingsPtrOutput() AgentPoolUpgradeSettingsPtrOutput {
	return o.ToAgentPoolUpgradeSettingsPtrOutputWithContext(context.Background())
}

func (o AgentPoolUpgradeSettingsOutput) ToAgentPoolUpgradeSettingsPtrOutputWithContext(ctx context.Context) AgentPoolUpgradeSettingsPtrOutput {
	return o.ApplyT(func(v AgentPoolUpgradeSettings) *AgentPoolUpgradeSettings {
		return &v
	}).(AgentPoolUpgradeSettingsPtrOutput)
}

// Count or percentage of additional nodes to be added during upgrade. If empty uses AKS default
func (o AgentPoolUpgradeSettingsOutput) MaxSurge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentPoolUpgradeSettings) *string { return v.MaxSurge }).(pulumi.StringPtrOutput)
}

type AgentPoolUpgradeSettingsPtrOutput struct{ *pulumi.OutputState }

func (AgentPoolUpgradeSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentPoolUpgradeSettings)(nil)).Elem()
}

func (o AgentPoolUpgradeSettingsPtrOutput) ToAgentPoolUpgradeSettingsPtrOutput() AgentPoolUpgradeSettingsPtrOutput {
	return o
}

func (o AgentPoolUpgradeSettingsPtrOutput) ToAgentPoolUpgradeSettingsPtrOutputWithContext(ctx context.Context) AgentPoolUpgradeSettingsPtrOutput {
	return o
}

func (o AgentPoolUpgradeSettingsPtrOutput) Elem() AgentPoolUpgradeSettingsOutput {
	return o.ApplyT(func(v *AgentPoolUpgradeSettings) AgentPoolUpgradeSettings { return *v }).(AgentPoolUpgradeSettingsOutput)
}

// Count or percentage of additional nodes to be added during upgrade. If empty uses AKS default
func (o AgentPoolUpgradeSettingsPtrOutput) MaxSurge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentPoolUpgradeSettings) *string {
		if v == nil {
			return nil
		}
		return v.MaxSurge
	}).(pulumi.StringPtrOutput)
}

// Settings for upgrading an agentpool
type AgentPoolUpgradeSettingsResponse struct {
	// Count or percentage of additional nodes to be added during upgrade. If empty uses AKS default
	MaxSurge *string `pulumi:"maxSurge"`
}

// AgentPoolUpgradeSettingsResponseInput is an input type that accepts AgentPoolUpgradeSettingsResponseArgs and AgentPoolUpgradeSettingsResponseOutput values.
// You can construct a concrete instance of `AgentPoolUpgradeSettingsResponseInput` via:
//
//          AgentPoolUpgradeSettingsResponseArgs{...}
type AgentPoolUpgradeSettingsResponseInput interface {
	pulumi.Input

	ToAgentPoolUpgradeSettingsResponseOutput() AgentPoolUpgradeSettingsResponseOutput
	ToAgentPoolUpgradeSettingsResponseOutputWithContext(context.Context) AgentPoolUpgradeSettingsResponseOutput
}

// Settings for upgrading an agentpool
type AgentPoolUpgradeSettingsResponseArgs struct {
	// Count or percentage of additional nodes to be added during upgrade. If empty uses AKS default
	MaxSurge pulumi.StringPtrInput `pulumi:"maxSurge"`
}

func (AgentPoolUpgradeSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPoolUpgradeSettingsResponse)(nil)).Elem()
}

func (i AgentPoolUpgradeSettingsResponseArgs) ToAgentPoolUpgradeSettingsResponseOutput() AgentPoolUpgradeSettingsResponseOutput {
	return i.ToAgentPoolUpgradeSettingsResponseOutputWithContext(context.Background())
}

func (i AgentPoolUpgradeSettingsResponseArgs) ToAgentPoolUpgradeSettingsResponseOutputWithContext(ctx context.Context) AgentPoolUpgradeSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPoolUpgradeSettingsResponseOutput)
}

func (i AgentPoolUpgradeSettingsResponseArgs) ToAgentPoolUpgradeSettingsResponsePtrOutput() AgentPoolUpgradeSettingsResponsePtrOutput {
	return i.ToAgentPoolUpgradeSettingsResponsePtrOutputWithContext(context.Background())
}

func (i AgentPoolUpgradeSettingsResponseArgs) ToAgentPoolUpgradeSettingsResponsePtrOutputWithContext(ctx context.Context) AgentPoolUpgradeSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPoolUpgradeSettingsResponseOutput).ToAgentPoolUpgradeSettingsResponsePtrOutputWithContext(ctx)
}

// AgentPoolUpgradeSettingsResponsePtrInput is an input type that accepts AgentPoolUpgradeSettingsResponseArgs, AgentPoolUpgradeSettingsResponsePtr and AgentPoolUpgradeSettingsResponsePtrOutput values.
// You can construct a concrete instance of `AgentPoolUpgradeSettingsResponsePtrInput` via:
//
//          AgentPoolUpgradeSettingsResponseArgs{...}
//
//  or:
//
//          nil
type AgentPoolUpgradeSettingsResponsePtrInput interface {
	pulumi.Input

	ToAgentPoolUpgradeSettingsResponsePtrOutput() AgentPoolUpgradeSettingsResponsePtrOutput
	ToAgentPoolUpgradeSettingsResponsePtrOutputWithContext(context.Context) AgentPoolUpgradeSettingsResponsePtrOutput
}

type agentPoolUpgradeSettingsResponsePtrType AgentPoolUpgradeSettingsResponseArgs

func AgentPoolUpgradeSettingsResponsePtr(v *AgentPoolUpgradeSettingsResponseArgs) AgentPoolUpgradeSettingsResponsePtrInput {
	return (*agentPoolUpgradeSettingsResponsePtrType)(v)
}

func (*agentPoolUpgradeSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentPoolUpgradeSettingsResponse)(nil)).Elem()
}

func (i *agentPoolUpgradeSettingsResponsePtrType) ToAgentPoolUpgradeSettingsResponsePtrOutput() AgentPoolUpgradeSettingsResponsePtrOutput {
	return i.ToAgentPoolUpgradeSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *agentPoolUpgradeSettingsResponsePtrType) ToAgentPoolUpgradeSettingsResponsePtrOutputWithContext(ctx context.Context) AgentPoolUpgradeSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPoolUpgradeSettingsResponsePtrOutput)
}

// Settings for upgrading an agentpool
type AgentPoolUpgradeSettingsResponseOutput struct{ *pulumi.OutputState }

func (AgentPoolUpgradeSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPoolUpgradeSettingsResponse)(nil)).Elem()
}

func (o AgentPoolUpgradeSettingsResponseOutput) ToAgentPoolUpgradeSettingsResponseOutput() AgentPoolUpgradeSettingsResponseOutput {
	return o
}

func (o AgentPoolUpgradeSettingsResponseOutput) ToAgentPoolUpgradeSettingsResponseOutputWithContext(ctx context.Context) AgentPoolUpgradeSettingsResponseOutput {
	return o
}

func (o AgentPoolUpgradeSettingsResponseOutput) ToAgentPoolUpgradeSettingsResponsePtrOutput() AgentPoolUpgradeSettingsResponsePtrOutput {
	return o.ToAgentPoolUpgradeSettingsResponsePtrOutputWithContext(context.Background())
}

func (o AgentPoolUpgradeSettingsResponseOutput) ToAgentPoolUpgradeSettingsResponsePtrOutputWithContext(ctx context.Context) AgentPoolUpgradeSettingsResponsePtrOutput {
	return o.ApplyT(func(v AgentPoolUpgradeSettingsResponse) *AgentPoolUpgradeSettingsResponse {
		return &v
	}).(AgentPoolUpgradeSettingsResponsePtrOutput)
}

// Count or percentage of additional nodes to be added during upgrade. If empty uses AKS default
func (o AgentPoolUpgradeSettingsResponseOutput) MaxSurge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentPoolUpgradeSettingsResponse) *string { return v.MaxSurge }).(pulumi.StringPtrOutput)
}

type AgentPoolUpgradeSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (AgentPoolUpgradeSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentPoolUpgradeSettingsResponse)(nil)).Elem()
}

func (o AgentPoolUpgradeSettingsResponsePtrOutput) ToAgentPoolUpgradeSettingsResponsePtrOutput() AgentPoolUpgradeSettingsResponsePtrOutput {
	return o
}

func (o AgentPoolUpgradeSettingsResponsePtrOutput) ToAgentPoolUpgradeSettingsResponsePtrOutputWithContext(ctx context.Context) AgentPoolUpgradeSettingsResponsePtrOutput {
	return o
}

func (o AgentPoolUpgradeSettingsResponsePtrOutput) Elem() AgentPoolUpgradeSettingsResponseOutput {
	return o.ApplyT(func(v *AgentPoolUpgradeSettingsResponse) AgentPoolUpgradeSettingsResponse { return *v }).(AgentPoolUpgradeSettingsResponseOutput)
}

// Count or percentage of additional nodes to be added during upgrade. If empty uses AKS default
func (o AgentPoolUpgradeSettingsResponsePtrOutput) MaxSurge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentPoolUpgradeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.MaxSurge
	}).(pulumi.StringPtrOutput)
}

// Container service.
type ContainerServiceType struct {
	// Resource location
	Location string `pulumi:"location"`
	// Resource name
	Name string `pulumi:"name"`
	// Properties of the container service.
	Properties ContainerServicePropertiesResponse `pulumi:"properties"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type string `pulumi:"type"`
}

// ContainerServiceTypeInput is an input type that accepts ContainerServiceTypeArgs and ContainerServiceTypeOutput values.
// You can construct a concrete instance of `ContainerServiceTypeInput` via:
//
//          ContainerServiceTypeArgs{...}
type ContainerServiceTypeInput interface {
	pulumi.Input

	ToContainerServiceTypeOutput() ContainerServiceTypeOutput
	ToContainerServiceTypeOutputWithContext(context.Context) ContainerServiceTypeOutput
}

// Container service.
type ContainerServiceTypeArgs struct {
	// Resource location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource name
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of the container service.
	Properties ContainerServicePropertiesResponseInput `pulumi:"properties"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringInput `pulumi:"type"`
}

func (ContainerServiceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceType)(nil)).Elem()
}

func (i ContainerServiceTypeArgs) ToContainerServiceTypeOutput() ContainerServiceTypeOutput {
	return i.ToContainerServiceTypeOutputWithContext(context.Background())
}

func (i ContainerServiceTypeArgs) ToContainerServiceTypeOutputWithContext(ctx context.Context) ContainerServiceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceTypeOutput)
}

// Container service.
type ContainerServiceTypeOutput struct{ *pulumi.OutputState }

func (ContainerServiceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceType)(nil)).Elem()
}

func (o ContainerServiceTypeOutput) ToContainerServiceTypeOutput() ContainerServiceTypeOutput {
	return o
}

func (o ContainerServiceTypeOutput) ToContainerServiceTypeOutputWithContext(ctx context.Context) ContainerServiceTypeOutput {
	return o
}

// Resource location
func (o ContainerServiceTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerServiceType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource name
func (o ContainerServiceTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerServiceType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the container service.
func (o ContainerServiceTypeOutput) Properties() ContainerServicePropertiesResponseOutput {
	return o.ApplyT(func(v ContainerServiceType) ContainerServicePropertiesResponse { return v.Properties }).(ContainerServicePropertiesResponseOutput)
}

// Resource tags
func (o ContainerServiceTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ContainerServiceType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o ContainerServiceTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerServiceType) string { return v.Type }).(pulumi.StringOutput)
}

// Profile for the container service agent pool.
type ContainerServiceAgentPoolProfile struct {
	// Number of agents (VMs) to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
	Count *int `pulumi:"count"`
	// DNS prefix to be used to create the FQDN for the agent pool.
	DnsPrefix *string `pulumi:"dnsPrefix"`
	// Unique name of the agent pool profile in the context of the subscription and resource group.
	Name string `pulumi:"name"`
	// OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
	OsDiskSizeGB *ContainerServiceOSDisk `pulumi:"osDiskSizeGB"`
	// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
	OsType *string `pulumi:"osType"`
	// Ports number array used to expose on this agent pool. The default opened ports are different based on your choice of orchestrator.
	Ports []int `pulumi:"ports"`
	// Storage profile specifies what kind of storage used. Choose from StorageAccount and ManagedDisks. Leave it empty, we will choose for you based on the orchestrator choice.
	StorageProfile *string `pulumi:"storageProfile"`
	// Size of agent VMs.
	VmSize string `pulumi:"vmSize"`
	// VNet SubnetID specifies the VNet's subnet identifier.
	VnetSubnetID *string `pulumi:"vnetSubnetID"`
}

// ContainerServiceAgentPoolProfileInput is an input type that accepts ContainerServiceAgentPoolProfileArgs and ContainerServiceAgentPoolProfileOutput values.
// You can construct a concrete instance of `ContainerServiceAgentPoolProfileInput` via:
//
//          ContainerServiceAgentPoolProfileArgs{...}
type ContainerServiceAgentPoolProfileInput interface {
	pulumi.Input

	ToContainerServiceAgentPoolProfileOutput() ContainerServiceAgentPoolProfileOutput
	ToContainerServiceAgentPoolProfileOutputWithContext(context.Context) ContainerServiceAgentPoolProfileOutput
}

// Profile for the container service agent pool.
type ContainerServiceAgentPoolProfileArgs struct {
	// Number of agents (VMs) to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// DNS prefix to be used to create the FQDN for the agent pool.
	DnsPrefix pulumi.StringPtrInput `pulumi:"dnsPrefix"`
	// Unique name of the agent pool profile in the context of the subscription and resource group.
	Name pulumi.StringInput `pulumi:"name"`
	// OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
	OsDiskSizeGB ContainerServiceOSDiskPtrInput `pulumi:"osDiskSizeGB"`
	// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// Ports number array used to expose on this agent pool. The default opened ports are different based on your choice of orchestrator.
	Ports pulumi.IntArrayInput `pulumi:"ports"`
	// Storage profile specifies what kind of storage used. Choose from StorageAccount and ManagedDisks. Leave it empty, we will choose for you based on the orchestrator choice.
	StorageProfile pulumi.StringPtrInput `pulumi:"storageProfile"`
	// Size of agent VMs.
	VmSize pulumi.StringInput `pulumi:"vmSize"`
	// VNet SubnetID specifies the VNet's subnet identifier.
	VnetSubnetID pulumi.StringPtrInput `pulumi:"vnetSubnetID"`
}

func (ContainerServiceAgentPoolProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceAgentPoolProfile)(nil)).Elem()
}

func (i ContainerServiceAgentPoolProfileArgs) ToContainerServiceAgentPoolProfileOutput() ContainerServiceAgentPoolProfileOutput {
	return i.ToContainerServiceAgentPoolProfileOutputWithContext(context.Background())
}

func (i ContainerServiceAgentPoolProfileArgs) ToContainerServiceAgentPoolProfileOutputWithContext(ctx context.Context) ContainerServiceAgentPoolProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceAgentPoolProfileOutput)
}

// ContainerServiceAgentPoolProfileArrayInput is an input type that accepts ContainerServiceAgentPoolProfileArray and ContainerServiceAgentPoolProfileArrayOutput values.
// You can construct a concrete instance of `ContainerServiceAgentPoolProfileArrayInput` via:
//
//          ContainerServiceAgentPoolProfileArray{ ContainerServiceAgentPoolProfileArgs{...} }
type ContainerServiceAgentPoolProfileArrayInput interface {
	pulumi.Input

	ToContainerServiceAgentPoolProfileArrayOutput() ContainerServiceAgentPoolProfileArrayOutput
	ToContainerServiceAgentPoolProfileArrayOutputWithContext(context.Context) ContainerServiceAgentPoolProfileArrayOutput
}

type ContainerServiceAgentPoolProfileArray []ContainerServiceAgentPoolProfileInput

func (ContainerServiceAgentPoolProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerServiceAgentPoolProfile)(nil)).Elem()
}

func (i ContainerServiceAgentPoolProfileArray) ToContainerServiceAgentPoolProfileArrayOutput() ContainerServiceAgentPoolProfileArrayOutput {
	return i.ToContainerServiceAgentPoolProfileArrayOutputWithContext(context.Background())
}

func (i ContainerServiceAgentPoolProfileArray) ToContainerServiceAgentPoolProfileArrayOutputWithContext(ctx context.Context) ContainerServiceAgentPoolProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceAgentPoolProfileArrayOutput)
}

// Profile for the container service agent pool.
type ContainerServiceAgentPoolProfileOutput struct{ *pulumi.OutputState }

func (ContainerServiceAgentPoolProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceAgentPoolProfile)(nil)).Elem()
}

func (o ContainerServiceAgentPoolProfileOutput) ToContainerServiceAgentPoolProfileOutput() ContainerServiceAgentPoolProfileOutput {
	return o
}

func (o ContainerServiceAgentPoolProfileOutput) ToContainerServiceAgentPoolProfileOutputWithContext(ctx context.Context) ContainerServiceAgentPoolProfileOutput {
	return o
}

// Number of agents (VMs) to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
func (o ContainerServiceAgentPoolProfileOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerServiceAgentPoolProfile) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// DNS prefix to be used to create the FQDN for the agent pool.
func (o ContainerServiceAgentPoolProfileOutput) DnsPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceAgentPoolProfile) *string { return v.DnsPrefix }).(pulumi.StringPtrOutput)
}

// Unique name of the agent pool profile in the context of the subscription and resource group.
func (o ContainerServiceAgentPoolProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerServiceAgentPoolProfile) string { return v.Name }).(pulumi.StringOutput)
}

// OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
func (o ContainerServiceAgentPoolProfileOutput) OsDiskSizeGB() ContainerServiceOSDiskPtrOutput {
	return o.ApplyT(func(v ContainerServiceAgentPoolProfile) *ContainerServiceOSDisk { return v.OsDiskSizeGB }).(ContainerServiceOSDiskPtrOutput)
}

// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
func (o ContainerServiceAgentPoolProfileOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceAgentPoolProfile) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// Ports number array used to expose on this agent pool. The default opened ports are different based on your choice of orchestrator.
func (o ContainerServiceAgentPoolProfileOutput) Ports() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ContainerServiceAgentPoolProfile) []int { return v.Ports }).(pulumi.IntArrayOutput)
}

// Storage profile specifies what kind of storage used. Choose from StorageAccount and ManagedDisks. Leave it empty, we will choose for you based on the orchestrator choice.
func (o ContainerServiceAgentPoolProfileOutput) StorageProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceAgentPoolProfile) *string { return v.StorageProfile }).(pulumi.StringPtrOutput)
}

// Size of agent VMs.
func (o ContainerServiceAgentPoolProfileOutput) VmSize() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerServiceAgentPoolProfile) string { return v.VmSize }).(pulumi.StringOutput)
}

// VNet SubnetID specifies the VNet's subnet identifier.
func (o ContainerServiceAgentPoolProfileOutput) VnetSubnetID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceAgentPoolProfile) *string { return v.VnetSubnetID }).(pulumi.StringPtrOutput)
}

type ContainerServiceAgentPoolProfileArrayOutput struct{ *pulumi.OutputState }

func (ContainerServiceAgentPoolProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerServiceAgentPoolProfile)(nil)).Elem()
}

func (o ContainerServiceAgentPoolProfileArrayOutput) ToContainerServiceAgentPoolProfileArrayOutput() ContainerServiceAgentPoolProfileArrayOutput {
	return o
}

func (o ContainerServiceAgentPoolProfileArrayOutput) ToContainerServiceAgentPoolProfileArrayOutputWithContext(ctx context.Context) ContainerServiceAgentPoolProfileArrayOutput {
	return o
}

func (o ContainerServiceAgentPoolProfileArrayOutput) Index(i pulumi.IntInput) ContainerServiceAgentPoolProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerServiceAgentPoolProfile {
		return vs[0].([]ContainerServiceAgentPoolProfile)[vs[1].(int)]
	}).(ContainerServiceAgentPoolProfileOutput)
}

// Profile for the container service agent pool.
type ContainerServiceAgentPoolProfileResponse struct {
	// Number of agents (VMs) to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
	Count *int `pulumi:"count"`
	// DNS prefix to be used to create the FQDN for the agent pool.
	DnsPrefix *string `pulumi:"dnsPrefix"`
	// FQDN for the agent pool.
	Fqdn string `pulumi:"fqdn"`
	// Unique name of the agent pool profile in the context of the subscription and resource group.
	Name string `pulumi:"name"`
	// OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
	OsDiskSizeGB *ContainerServiceOSDiskResponse `pulumi:"osDiskSizeGB"`
	// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
	OsType *string `pulumi:"osType"`
	// Ports number array used to expose on this agent pool. The default opened ports are different based on your choice of orchestrator.
	Ports []int `pulumi:"ports"`
	// Storage profile specifies what kind of storage used. Choose from StorageAccount and ManagedDisks. Leave it empty, we will choose for you based on the orchestrator choice.
	StorageProfile *string `pulumi:"storageProfile"`
	// Size of agent VMs.
	VmSize string `pulumi:"vmSize"`
	// VNet SubnetID specifies the VNet's subnet identifier.
	VnetSubnetID *string `pulumi:"vnetSubnetID"`
}

// ContainerServiceAgentPoolProfileResponseInput is an input type that accepts ContainerServiceAgentPoolProfileResponseArgs and ContainerServiceAgentPoolProfileResponseOutput values.
// You can construct a concrete instance of `ContainerServiceAgentPoolProfileResponseInput` via:
//
//          ContainerServiceAgentPoolProfileResponseArgs{...}
type ContainerServiceAgentPoolProfileResponseInput interface {
	pulumi.Input

	ToContainerServiceAgentPoolProfileResponseOutput() ContainerServiceAgentPoolProfileResponseOutput
	ToContainerServiceAgentPoolProfileResponseOutputWithContext(context.Context) ContainerServiceAgentPoolProfileResponseOutput
}

// Profile for the container service agent pool.
type ContainerServiceAgentPoolProfileResponseArgs struct {
	// Number of agents (VMs) to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// DNS prefix to be used to create the FQDN for the agent pool.
	DnsPrefix pulumi.StringPtrInput `pulumi:"dnsPrefix"`
	// FQDN for the agent pool.
	Fqdn pulumi.StringInput `pulumi:"fqdn"`
	// Unique name of the agent pool profile in the context of the subscription and resource group.
	Name pulumi.StringInput `pulumi:"name"`
	// OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
	OsDiskSizeGB ContainerServiceOSDiskResponsePtrInput `pulumi:"osDiskSizeGB"`
	// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// Ports number array used to expose on this agent pool. The default opened ports are different based on your choice of orchestrator.
	Ports pulumi.IntArrayInput `pulumi:"ports"`
	// Storage profile specifies what kind of storage used. Choose from StorageAccount and ManagedDisks. Leave it empty, we will choose for you based on the orchestrator choice.
	StorageProfile pulumi.StringPtrInput `pulumi:"storageProfile"`
	// Size of agent VMs.
	VmSize pulumi.StringInput `pulumi:"vmSize"`
	// VNet SubnetID specifies the VNet's subnet identifier.
	VnetSubnetID pulumi.StringPtrInput `pulumi:"vnetSubnetID"`
}

func (ContainerServiceAgentPoolProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceAgentPoolProfileResponse)(nil)).Elem()
}

func (i ContainerServiceAgentPoolProfileResponseArgs) ToContainerServiceAgentPoolProfileResponseOutput() ContainerServiceAgentPoolProfileResponseOutput {
	return i.ToContainerServiceAgentPoolProfileResponseOutputWithContext(context.Background())
}

func (i ContainerServiceAgentPoolProfileResponseArgs) ToContainerServiceAgentPoolProfileResponseOutputWithContext(ctx context.Context) ContainerServiceAgentPoolProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceAgentPoolProfileResponseOutput)
}

// ContainerServiceAgentPoolProfileResponseArrayInput is an input type that accepts ContainerServiceAgentPoolProfileResponseArray and ContainerServiceAgentPoolProfileResponseArrayOutput values.
// You can construct a concrete instance of `ContainerServiceAgentPoolProfileResponseArrayInput` via:
//
//          ContainerServiceAgentPoolProfileResponseArray{ ContainerServiceAgentPoolProfileResponseArgs{...} }
type ContainerServiceAgentPoolProfileResponseArrayInput interface {
	pulumi.Input

	ToContainerServiceAgentPoolProfileResponseArrayOutput() ContainerServiceAgentPoolProfileResponseArrayOutput
	ToContainerServiceAgentPoolProfileResponseArrayOutputWithContext(context.Context) ContainerServiceAgentPoolProfileResponseArrayOutput
}

type ContainerServiceAgentPoolProfileResponseArray []ContainerServiceAgentPoolProfileResponseInput

func (ContainerServiceAgentPoolProfileResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerServiceAgentPoolProfileResponse)(nil)).Elem()
}

func (i ContainerServiceAgentPoolProfileResponseArray) ToContainerServiceAgentPoolProfileResponseArrayOutput() ContainerServiceAgentPoolProfileResponseArrayOutput {
	return i.ToContainerServiceAgentPoolProfileResponseArrayOutputWithContext(context.Background())
}

func (i ContainerServiceAgentPoolProfileResponseArray) ToContainerServiceAgentPoolProfileResponseArrayOutputWithContext(ctx context.Context) ContainerServiceAgentPoolProfileResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceAgentPoolProfileResponseArrayOutput)
}

// Profile for the container service agent pool.
type ContainerServiceAgentPoolProfileResponseOutput struct{ *pulumi.OutputState }

func (ContainerServiceAgentPoolProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceAgentPoolProfileResponse)(nil)).Elem()
}

func (o ContainerServiceAgentPoolProfileResponseOutput) ToContainerServiceAgentPoolProfileResponseOutput() ContainerServiceAgentPoolProfileResponseOutput {
	return o
}

func (o ContainerServiceAgentPoolProfileResponseOutput) ToContainerServiceAgentPoolProfileResponseOutputWithContext(ctx context.Context) ContainerServiceAgentPoolProfileResponseOutput {
	return o
}

// Number of agents (VMs) to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
func (o ContainerServiceAgentPoolProfileResponseOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerServiceAgentPoolProfileResponse) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// DNS prefix to be used to create the FQDN for the agent pool.
func (o ContainerServiceAgentPoolProfileResponseOutput) DnsPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceAgentPoolProfileResponse) *string { return v.DnsPrefix }).(pulumi.StringPtrOutput)
}

// FQDN for the agent pool.
func (o ContainerServiceAgentPoolProfileResponseOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerServiceAgentPoolProfileResponse) string { return v.Fqdn }).(pulumi.StringOutput)
}

// Unique name of the agent pool profile in the context of the subscription and resource group.
func (o ContainerServiceAgentPoolProfileResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerServiceAgentPoolProfileResponse) string { return v.Name }).(pulumi.StringOutput)
}

// OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
func (o ContainerServiceAgentPoolProfileResponseOutput) OsDiskSizeGB() ContainerServiceOSDiskResponsePtrOutput {
	return o.ApplyT(func(v ContainerServiceAgentPoolProfileResponse) *ContainerServiceOSDiskResponse {
		return v.OsDiskSizeGB
	}).(ContainerServiceOSDiskResponsePtrOutput)
}

// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
func (o ContainerServiceAgentPoolProfileResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceAgentPoolProfileResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// Ports number array used to expose on this agent pool. The default opened ports are different based on your choice of orchestrator.
func (o ContainerServiceAgentPoolProfileResponseOutput) Ports() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ContainerServiceAgentPoolProfileResponse) []int { return v.Ports }).(pulumi.IntArrayOutput)
}

// Storage profile specifies what kind of storage used. Choose from StorageAccount and ManagedDisks. Leave it empty, we will choose for you based on the orchestrator choice.
func (o ContainerServiceAgentPoolProfileResponseOutput) StorageProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceAgentPoolProfileResponse) *string { return v.StorageProfile }).(pulumi.StringPtrOutput)
}

// Size of agent VMs.
func (o ContainerServiceAgentPoolProfileResponseOutput) VmSize() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerServiceAgentPoolProfileResponse) string { return v.VmSize }).(pulumi.StringOutput)
}

// VNet SubnetID specifies the VNet's subnet identifier.
func (o ContainerServiceAgentPoolProfileResponseOutput) VnetSubnetID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceAgentPoolProfileResponse) *string { return v.VnetSubnetID }).(pulumi.StringPtrOutput)
}

type ContainerServiceAgentPoolProfileResponseArrayOutput struct{ *pulumi.OutputState }

func (ContainerServiceAgentPoolProfileResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerServiceAgentPoolProfileResponse)(nil)).Elem()
}

func (o ContainerServiceAgentPoolProfileResponseArrayOutput) ToContainerServiceAgentPoolProfileResponseArrayOutput() ContainerServiceAgentPoolProfileResponseArrayOutput {
	return o
}

func (o ContainerServiceAgentPoolProfileResponseArrayOutput) ToContainerServiceAgentPoolProfileResponseArrayOutputWithContext(ctx context.Context) ContainerServiceAgentPoolProfileResponseArrayOutput {
	return o
}

func (o ContainerServiceAgentPoolProfileResponseArrayOutput) Index(i pulumi.IntInput) ContainerServiceAgentPoolProfileResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerServiceAgentPoolProfileResponse {
		return vs[0].([]ContainerServiceAgentPoolProfileResponse)[vs[1].(int)]
	}).(ContainerServiceAgentPoolProfileResponseOutput)
}

// Properties to configure a custom container service cluster.
type ContainerServiceCustomProfile struct {
	// The name of the custom orchestrator to use.
	Orchestrator string `pulumi:"orchestrator"`
}

// ContainerServiceCustomProfileInput is an input type that accepts ContainerServiceCustomProfileArgs and ContainerServiceCustomProfileOutput values.
// You can construct a concrete instance of `ContainerServiceCustomProfileInput` via:
//
//          ContainerServiceCustomProfileArgs{...}
type ContainerServiceCustomProfileInput interface {
	pulumi.Input

	ToContainerServiceCustomProfileOutput() ContainerServiceCustomProfileOutput
	ToContainerServiceCustomProfileOutputWithContext(context.Context) ContainerServiceCustomProfileOutput
}

// Properties to configure a custom container service cluster.
type ContainerServiceCustomProfileArgs struct {
	// The name of the custom orchestrator to use.
	Orchestrator pulumi.StringInput `pulumi:"orchestrator"`
}

func (ContainerServiceCustomProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceCustomProfile)(nil)).Elem()
}

func (i ContainerServiceCustomProfileArgs) ToContainerServiceCustomProfileOutput() ContainerServiceCustomProfileOutput {
	return i.ToContainerServiceCustomProfileOutputWithContext(context.Background())
}

func (i ContainerServiceCustomProfileArgs) ToContainerServiceCustomProfileOutputWithContext(ctx context.Context) ContainerServiceCustomProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceCustomProfileOutput)
}

func (i ContainerServiceCustomProfileArgs) ToContainerServiceCustomProfilePtrOutput() ContainerServiceCustomProfilePtrOutput {
	return i.ToContainerServiceCustomProfilePtrOutputWithContext(context.Background())
}

func (i ContainerServiceCustomProfileArgs) ToContainerServiceCustomProfilePtrOutputWithContext(ctx context.Context) ContainerServiceCustomProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceCustomProfileOutput).ToContainerServiceCustomProfilePtrOutputWithContext(ctx)
}

// ContainerServiceCustomProfilePtrInput is an input type that accepts ContainerServiceCustomProfileArgs, ContainerServiceCustomProfilePtr and ContainerServiceCustomProfilePtrOutput values.
// You can construct a concrete instance of `ContainerServiceCustomProfilePtrInput` via:
//
//          ContainerServiceCustomProfileArgs{...}
//
//  or:
//
//          nil
type ContainerServiceCustomProfilePtrInput interface {
	pulumi.Input

	ToContainerServiceCustomProfilePtrOutput() ContainerServiceCustomProfilePtrOutput
	ToContainerServiceCustomProfilePtrOutputWithContext(context.Context) ContainerServiceCustomProfilePtrOutput
}

type containerServiceCustomProfilePtrType ContainerServiceCustomProfileArgs

func ContainerServiceCustomProfilePtr(v *ContainerServiceCustomProfileArgs) ContainerServiceCustomProfilePtrInput {
	return (*containerServiceCustomProfilePtrType)(v)
}

func (*containerServiceCustomProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceCustomProfile)(nil)).Elem()
}

func (i *containerServiceCustomProfilePtrType) ToContainerServiceCustomProfilePtrOutput() ContainerServiceCustomProfilePtrOutput {
	return i.ToContainerServiceCustomProfilePtrOutputWithContext(context.Background())
}

func (i *containerServiceCustomProfilePtrType) ToContainerServiceCustomProfilePtrOutputWithContext(ctx context.Context) ContainerServiceCustomProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceCustomProfilePtrOutput)
}

// Properties to configure a custom container service cluster.
type ContainerServiceCustomProfileOutput struct{ *pulumi.OutputState }

func (ContainerServiceCustomProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceCustomProfile)(nil)).Elem()
}

func (o ContainerServiceCustomProfileOutput) ToContainerServiceCustomProfileOutput() ContainerServiceCustomProfileOutput {
	return o
}

func (o ContainerServiceCustomProfileOutput) ToContainerServiceCustomProfileOutputWithContext(ctx context.Context) ContainerServiceCustomProfileOutput {
	return o
}

func (o ContainerServiceCustomProfileOutput) ToContainerServiceCustomProfilePtrOutput() ContainerServiceCustomProfilePtrOutput {
	return o.ToContainerServiceCustomProfilePtrOutputWithContext(context.Background())
}

func (o ContainerServiceCustomProfileOutput) ToContainerServiceCustomProfilePtrOutputWithContext(ctx context.Context) ContainerServiceCustomProfilePtrOutput {
	return o.ApplyT(func(v ContainerServiceCustomProfile) *ContainerServiceCustomProfile {
		return &v
	}).(ContainerServiceCustomProfilePtrOutput)
}

// The name of the custom orchestrator to use.
func (o ContainerServiceCustomProfileOutput) Orchestrator() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerServiceCustomProfile) string { return v.Orchestrator }).(pulumi.StringOutput)
}

type ContainerServiceCustomProfilePtrOutput struct{ *pulumi.OutputState }

func (ContainerServiceCustomProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceCustomProfile)(nil)).Elem()
}

func (o ContainerServiceCustomProfilePtrOutput) ToContainerServiceCustomProfilePtrOutput() ContainerServiceCustomProfilePtrOutput {
	return o
}

func (o ContainerServiceCustomProfilePtrOutput) ToContainerServiceCustomProfilePtrOutputWithContext(ctx context.Context) ContainerServiceCustomProfilePtrOutput {
	return o
}

func (o ContainerServiceCustomProfilePtrOutput) Elem() ContainerServiceCustomProfileOutput {
	return o.ApplyT(func(v *ContainerServiceCustomProfile) ContainerServiceCustomProfile { return *v }).(ContainerServiceCustomProfileOutput)
}

// The name of the custom orchestrator to use.
func (o ContainerServiceCustomProfilePtrOutput) Orchestrator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceCustomProfile) *string {
		if v == nil {
			return nil
		}
		return &v.Orchestrator
	}).(pulumi.StringPtrOutput)
}

// Properties to configure a custom container service cluster.
type ContainerServiceCustomProfileResponse struct {
	// The name of the custom orchestrator to use.
	Orchestrator string `pulumi:"orchestrator"`
}

// ContainerServiceCustomProfileResponseInput is an input type that accepts ContainerServiceCustomProfileResponseArgs and ContainerServiceCustomProfileResponseOutput values.
// You can construct a concrete instance of `ContainerServiceCustomProfileResponseInput` via:
//
//          ContainerServiceCustomProfileResponseArgs{...}
type ContainerServiceCustomProfileResponseInput interface {
	pulumi.Input

	ToContainerServiceCustomProfileResponseOutput() ContainerServiceCustomProfileResponseOutput
	ToContainerServiceCustomProfileResponseOutputWithContext(context.Context) ContainerServiceCustomProfileResponseOutput
}

// Properties to configure a custom container service cluster.
type ContainerServiceCustomProfileResponseArgs struct {
	// The name of the custom orchestrator to use.
	Orchestrator pulumi.StringInput `pulumi:"orchestrator"`
}

func (ContainerServiceCustomProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceCustomProfileResponse)(nil)).Elem()
}

func (i ContainerServiceCustomProfileResponseArgs) ToContainerServiceCustomProfileResponseOutput() ContainerServiceCustomProfileResponseOutput {
	return i.ToContainerServiceCustomProfileResponseOutputWithContext(context.Background())
}

func (i ContainerServiceCustomProfileResponseArgs) ToContainerServiceCustomProfileResponseOutputWithContext(ctx context.Context) ContainerServiceCustomProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceCustomProfileResponseOutput)
}

func (i ContainerServiceCustomProfileResponseArgs) ToContainerServiceCustomProfileResponsePtrOutput() ContainerServiceCustomProfileResponsePtrOutput {
	return i.ToContainerServiceCustomProfileResponsePtrOutputWithContext(context.Background())
}

func (i ContainerServiceCustomProfileResponseArgs) ToContainerServiceCustomProfileResponsePtrOutputWithContext(ctx context.Context) ContainerServiceCustomProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceCustomProfileResponseOutput).ToContainerServiceCustomProfileResponsePtrOutputWithContext(ctx)
}

// ContainerServiceCustomProfileResponsePtrInput is an input type that accepts ContainerServiceCustomProfileResponseArgs, ContainerServiceCustomProfileResponsePtr and ContainerServiceCustomProfileResponsePtrOutput values.
// You can construct a concrete instance of `ContainerServiceCustomProfileResponsePtrInput` via:
//
//          ContainerServiceCustomProfileResponseArgs{...}
//
//  or:
//
//          nil
type ContainerServiceCustomProfileResponsePtrInput interface {
	pulumi.Input

	ToContainerServiceCustomProfileResponsePtrOutput() ContainerServiceCustomProfileResponsePtrOutput
	ToContainerServiceCustomProfileResponsePtrOutputWithContext(context.Context) ContainerServiceCustomProfileResponsePtrOutput
}

type containerServiceCustomProfileResponsePtrType ContainerServiceCustomProfileResponseArgs

func ContainerServiceCustomProfileResponsePtr(v *ContainerServiceCustomProfileResponseArgs) ContainerServiceCustomProfileResponsePtrInput {
	return (*containerServiceCustomProfileResponsePtrType)(v)
}

func (*containerServiceCustomProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceCustomProfileResponse)(nil)).Elem()
}

func (i *containerServiceCustomProfileResponsePtrType) ToContainerServiceCustomProfileResponsePtrOutput() ContainerServiceCustomProfileResponsePtrOutput {
	return i.ToContainerServiceCustomProfileResponsePtrOutputWithContext(context.Background())
}

func (i *containerServiceCustomProfileResponsePtrType) ToContainerServiceCustomProfileResponsePtrOutputWithContext(ctx context.Context) ContainerServiceCustomProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceCustomProfileResponsePtrOutput)
}

// Properties to configure a custom container service cluster.
type ContainerServiceCustomProfileResponseOutput struct{ *pulumi.OutputState }

func (ContainerServiceCustomProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceCustomProfileResponse)(nil)).Elem()
}

func (o ContainerServiceCustomProfileResponseOutput) ToContainerServiceCustomProfileResponseOutput() ContainerServiceCustomProfileResponseOutput {
	return o
}

func (o ContainerServiceCustomProfileResponseOutput) ToContainerServiceCustomProfileResponseOutputWithContext(ctx context.Context) ContainerServiceCustomProfileResponseOutput {
	return o
}

func (o ContainerServiceCustomProfileResponseOutput) ToContainerServiceCustomProfileResponsePtrOutput() ContainerServiceCustomProfileResponsePtrOutput {
	return o.ToContainerServiceCustomProfileResponsePtrOutputWithContext(context.Background())
}

func (o ContainerServiceCustomProfileResponseOutput) ToContainerServiceCustomProfileResponsePtrOutputWithContext(ctx context.Context) ContainerServiceCustomProfileResponsePtrOutput {
	return o.ApplyT(func(v ContainerServiceCustomProfileResponse) *ContainerServiceCustomProfileResponse {
		return &v
	}).(ContainerServiceCustomProfileResponsePtrOutput)
}

// The name of the custom orchestrator to use.
func (o ContainerServiceCustomProfileResponseOutput) Orchestrator() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerServiceCustomProfileResponse) string { return v.Orchestrator }).(pulumi.StringOutput)
}

type ContainerServiceCustomProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ContainerServiceCustomProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceCustomProfileResponse)(nil)).Elem()
}

func (o ContainerServiceCustomProfileResponsePtrOutput) ToContainerServiceCustomProfileResponsePtrOutput() ContainerServiceCustomProfileResponsePtrOutput {
	return o
}

func (o ContainerServiceCustomProfileResponsePtrOutput) ToContainerServiceCustomProfileResponsePtrOutputWithContext(ctx context.Context) ContainerServiceCustomProfileResponsePtrOutput {
	return o
}

func (o ContainerServiceCustomProfileResponsePtrOutput) Elem() ContainerServiceCustomProfileResponseOutput {
	return o.ApplyT(func(v *ContainerServiceCustomProfileResponse) ContainerServiceCustomProfileResponse { return *v }).(ContainerServiceCustomProfileResponseOutput)
}

// The name of the custom orchestrator to use.
func (o ContainerServiceCustomProfileResponsePtrOutput) Orchestrator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceCustomProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Orchestrator
	}).(pulumi.StringPtrOutput)
}

// Profile for diagnostics on the container service cluster.
type ContainerServiceDiagnosticsProfile struct {
	// Profile for diagnostics on the container service VMs.
	VmDiagnostics ContainerServiceVMDiagnostics `pulumi:"vmDiagnostics"`
}

// ContainerServiceDiagnosticsProfileInput is an input type that accepts ContainerServiceDiagnosticsProfileArgs and ContainerServiceDiagnosticsProfileOutput values.
// You can construct a concrete instance of `ContainerServiceDiagnosticsProfileInput` via:
//
//          ContainerServiceDiagnosticsProfileArgs{...}
type ContainerServiceDiagnosticsProfileInput interface {
	pulumi.Input

	ToContainerServiceDiagnosticsProfileOutput() ContainerServiceDiagnosticsProfileOutput
	ToContainerServiceDiagnosticsProfileOutputWithContext(context.Context) ContainerServiceDiagnosticsProfileOutput
}

// Profile for diagnostics on the container service cluster.
type ContainerServiceDiagnosticsProfileArgs struct {
	// Profile for diagnostics on the container service VMs.
	VmDiagnostics ContainerServiceVMDiagnosticsInput `pulumi:"vmDiagnostics"`
}

func (ContainerServiceDiagnosticsProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceDiagnosticsProfile)(nil)).Elem()
}

func (i ContainerServiceDiagnosticsProfileArgs) ToContainerServiceDiagnosticsProfileOutput() ContainerServiceDiagnosticsProfileOutput {
	return i.ToContainerServiceDiagnosticsProfileOutputWithContext(context.Background())
}

func (i ContainerServiceDiagnosticsProfileArgs) ToContainerServiceDiagnosticsProfileOutputWithContext(ctx context.Context) ContainerServiceDiagnosticsProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceDiagnosticsProfileOutput)
}

func (i ContainerServiceDiagnosticsProfileArgs) ToContainerServiceDiagnosticsProfilePtrOutput() ContainerServiceDiagnosticsProfilePtrOutput {
	return i.ToContainerServiceDiagnosticsProfilePtrOutputWithContext(context.Background())
}

func (i ContainerServiceDiagnosticsProfileArgs) ToContainerServiceDiagnosticsProfilePtrOutputWithContext(ctx context.Context) ContainerServiceDiagnosticsProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceDiagnosticsProfileOutput).ToContainerServiceDiagnosticsProfilePtrOutputWithContext(ctx)
}

// ContainerServiceDiagnosticsProfilePtrInput is an input type that accepts ContainerServiceDiagnosticsProfileArgs, ContainerServiceDiagnosticsProfilePtr and ContainerServiceDiagnosticsProfilePtrOutput values.
// You can construct a concrete instance of `ContainerServiceDiagnosticsProfilePtrInput` via:
//
//          ContainerServiceDiagnosticsProfileArgs{...}
//
//  or:
//
//          nil
type ContainerServiceDiagnosticsProfilePtrInput interface {
	pulumi.Input

	ToContainerServiceDiagnosticsProfilePtrOutput() ContainerServiceDiagnosticsProfilePtrOutput
	ToContainerServiceDiagnosticsProfilePtrOutputWithContext(context.Context) ContainerServiceDiagnosticsProfilePtrOutput
}

type containerServiceDiagnosticsProfilePtrType ContainerServiceDiagnosticsProfileArgs

func ContainerServiceDiagnosticsProfilePtr(v *ContainerServiceDiagnosticsProfileArgs) ContainerServiceDiagnosticsProfilePtrInput {
	return (*containerServiceDiagnosticsProfilePtrType)(v)
}

func (*containerServiceDiagnosticsProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceDiagnosticsProfile)(nil)).Elem()
}

func (i *containerServiceDiagnosticsProfilePtrType) ToContainerServiceDiagnosticsProfilePtrOutput() ContainerServiceDiagnosticsProfilePtrOutput {
	return i.ToContainerServiceDiagnosticsProfilePtrOutputWithContext(context.Background())
}

func (i *containerServiceDiagnosticsProfilePtrType) ToContainerServiceDiagnosticsProfilePtrOutputWithContext(ctx context.Context) ContainerServiceDiagnosticsProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceDiagnosticsProfilePtrOutput)
}

// Profile for diagnostics on the container service cluster.
type ContainerServiceDiagnosticsProfileOutput struct{ *pulumi.OutputState }

func (ContainerServiceDiagnosticsProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceDiagnosticsProfile)(nil)).Elem()
}

func (o ContainerServiceDiagnosticsProfileOutput) ToContainerServiceDiagnosticsProfileOutput() ContainerServiceDiagnosticsProfileOutput {
	return o
}

func (o ContainerServiceDiagnosticsProfileOutput) ToContainerServiceDiagnosticsProfileOutputWithContext(ctx context.Context) ContainerServiceDiagnosticsProfileOutput {
	return o
}

func (o ContainerServiceDiagnosticsProfileOutput) ToContainerServiceDiagnosticsProfilePtrOutput() ContainerServiceDiagnosticsProfilePtrOutput {
	return o.ToContainerServiceDiagnosticsProfilePtrOutputWithContext(context.Background())
}

func (o ContainerServiceDiagnosticsProfileOutput) ToContainerServiceDiagnosticsProfilePtrOutputWithContext(ctx context.Context) ContainerServiceDiagnosticsProfilePtrOutput {
	return o.ApplyT(func(v ContainerServiceDiagnosticsProfile) *ContainerServiceDiagnosticsProfile {
		return &v
	}).(ContainerServiceDiagnosticsProfilePtrOutput)
}

// Profile for diagnostics on the container service VMs.
func (o ContainerServiceDiagnosticsProfileOutput) VmDiagnostics() ContainerServiceVMDiagnosticsOutput {
	return o.ApplyT(func(v ContainerServiceDiagnosticsProfile) ContainerServiceVMDiagnostics { return v.VmDiagnostics }).(ContainerServiceVMDiagnosticsOutput)
}

type ContainerServiceDiagnosticsProfilePtrOutput struct{ *pulumi.OutputState }

func (ContainerServiceDiagnosticsProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceDiagnosticsProfile)(nil)).Elem()
}

func (o ContainerServiceDiagnosticsProfilePtrOutput) ToContainerServiceDiagnosticsProfilePtrOutput() ContainerServiceDiagnosticsProfilePtrOutput {
	return o
}

func (o ContainerServiceDiagnosticsProfilePtrOutput) ToContainerServiceDiagnosticsProfilePtrOutputWithContext(ctx context.Context) ContainerServiceDiagnosticsProfilePtrOutput {
	return o
}

func (o ContainerServiceDiagnosticsProfilePtrOutput) Elem() ContainerServiceDiagnosticsProfileOutput {
	return o.ApplyT(func(v *ContainerServiceDiagnosticsProfile) ContainerServiceDiagnosticsProfile { return *v }).(ContainerServiceDiagnosticsProfileOutput)
}

// Profile for diagnostics on the container service VMs.
func (o ContainerServiceDiagnosticsProfilePtrOutput) VmDiagnostics() ContainerServiceVMDiagnosticsPtrOutput {
	return o.ApplyT(func(v *ContainerServiceDiagnosticsProfile) *ContainerServiceVMDiagnostics {
		if v == nil {
			return nil
		}
		return &v.VmDiagnostics
	}).(ContainerServiceVMDiagnosticsPtrOutput)
}

// Profile for diagnostics on the container service cluster.
type ContainerServiceDiagnosticsProfileResponse struct {
	// Profile for diagnostics on the container service VMs.
	VmDiagnostics ContainerServiceVMDiagnosticsResponse `pulumi:"vmDiagnostics"`
}

// ContainerServiceDiagnosticsProfileResponseInput is an input type that accepts ContainerServiceDiagnosticsProfileResponseArgs and ContainerServiceDiagnosticsProfileResponseOutput values.
// You can construct a concrete instance of `ContainerServiceDiagnosticsProfileResponseInput` via:
//
//          ContainerServiceDiagnosticsProfileResponseArgs{...}
type ContainerServiceDiagnosticsProfileResponseInput interface {
	pulumi.Input

	ToContainerServiceDiagnosticsProfileResponseOutput() ContainerServiceDiagnosticsProfileResponseOutput
	ToContainerServiceDiagnosticsProfileResponseOutputWithContext(context.Context) ContainerServiceDiagnosticsProfileResponseOutput
}

// Profile for diagnostics on the container service cluster.
type ContainerServiceDiagnosticsProfileResponseArgs struct {
	// Profile for diagnostics on the container service VMs.
	VmDiagnostics ContainerServiceVMDiagnosticsResponseInput `pulumi:"vmDiagnostics"`
}

func (ContainerServiceDiagnosticsProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceDiagnosticsProfileResponse)(nil)).Elem()
}

func (i ContainerServiceDiagnosticsProfileResponseArgs) ToContainerServiceDiagnosticsProfileResponseOutput() ContainerServiceDiagnosticsProfileResponseOutput {
	return i.ToContainerServiceDiagnosticsProfileResponseOutputWithContext(context.Background())
}

func (i ContainerServiceDiagnosticsProfileResponseArgs) ToContainerServiceDiagnosticsProfileResponseOutputWithContext(ctx context.Context) ContainerServiceDiagnosticsProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceDiagnosticsProfileResponseOutput)
}

func (i ContainerServiceDiagnosticsProfileResponseArgs) ToContainerServiceDiagnosticsProfileResponsePtrOutput() ContainerServiceDiagnosticsProfileResponsePtrOutput {
	return i.ToContainerServiceDiagnosticsProfileResponsePtrOutputWithContext(context.Background())
}

func (i ContainerServiceDiagnosticsProfileResponseArgs) ToContainerServiceDiagnosticsProfileResponsePtrOutputWithContext(ctx context.Context) ContainerServiceDiagnosticsProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceDiagnosticsProfileResponseOutput).ToContainerServiceDiagnosticsProfileResponsePtrOutputWithContext(ctx)
}

// ContainerServiceDiagnosticsProfileResponsePtrInput is an input type that accepts ContainerServiceDiagnosticsProfileResponseArgs, ContainerServiceDiagnosticsProfileResponsePtr and ContainerServiceDiagnosticsProfileResponsePtrOutput values.
// You can construct a concrete instance of `ContainerServiceDiagnosticsProfileResponsePtrInput` via:
//
//          ContainerServiceDiagnosticsProfileResponseArgs{...}
//
//  or:
//
//          nil
type ContainerServiceDiagnosticsProfileResponsePtrInput interface {
	pulumi.Input

	ToContainerServiceDiagnosticsProfileResponsePtrOutput() ContainerServiceDiagnosticsProfileResponsePtrOutput
	ToContainerServiceDiagnosticsProfileResponsePtrOutputWithContext(context.Context) ContainerServiceDiagnosticsProfileResponsePtrOutput
}

type containerServiceDiagnosticsProfileResponsePtrType ContainerServiceDiagnosticsProfileResponseArgs

func ContainerServiceDiagnosticsProfileResponsePtr(v *ContainerServiceDiagnosticsProfileResponseArgs) ContainerServiceDiagnosticsProfileResponsePtrInput {
	return (*containerServiceDiagnosticsProfileResponsePtrType)(v)
}

func (*containerServiceDiagnosticsProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceDiagnosticsProfileResponse)(nil)).Elem()
}

func (i *containerServiceDiagnosticsProfileResponsePtrType) ToContainerServiceDiagnosticsProfileResponsePtrOutput() ContainerServiceDiagnosticsProfileResponsePtrOutput {
	return i.ToContainerServiceDiagnosticsProfileResponsePtrOutputWithContext(context.Background())
}

func (i *containerServiceDiagnosticsProfileResponsePtrType) ToContainerServiceDiagnosticsProfileResponsePtrOutputWithContext(ctx context.Context) ContainerServiceDiagnosticsProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceDiagnosticsProfileResponsePtrOutput)
}

// Profile for diagnostics on the container service cluster.
type ContainerServiceDiagnosticsProfileResponseOutput struct{ *pulumi.OutputState }

func (ContainerServiceDiagnosticsProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceDiagnosticsProfileResponse)(nil)).Elem()
}

func (o ContainerServiceDiagnosticsProfileResponseOutput) ToContainerServiceDiagnosticsProfileResponseOutput() ContainerServiceDiagnosticsProfileResponseOutput {
	return o
}

func (o ContainerServiceDiagnosticsProfileResponseOutput) ToContainerServiceDiagnosticsProfileResponseOutputWithContext(ctx context.Context) ContainerServiceDiagnosticsProfileResponseOutput {
	return o
}

func (o ContainerServiceDiagnosticsProfileResponseOutput) ToContainerServiceDiagnosticsProfileResponsePtrOutput() ContainerServiceDiagnosticsProfileResponsePtrOutput {
	return o.ToContainerServiceDiagnosticsProfileResponsePtrOutputWithContext(context.Background())
}

func (o ContainerServiceDiagnosticsProfileResponseOutput) ToContainerServiceDiagnosticsProfileResponsePtrOutputWithContext(ctx context.Context) ContainerServiceDiagnosticsProfileResponsePtrOutput {
	return o.ApplyT(func(v ContainerServiceDiagnosticsProfileResponse) *ContainerServiceDiagnosticsProfileResponse {
		return &v
	}).(ContainerServiceDiagnosticsProfileResponsePtrOutput)
}

// Profile for diagnostics on the container service VMs.
func (o ContainerServiceDiagnosticsProfileResponseOutput) VmDiagnostics() ContainerServiceVMDiagnosticsResponseOutput {
	return o.ApplyT(func(v ContainerServiceDiagnosticsProfileResponse) ContainerServiceVMDiagnosticsResponse {
		return v.VmDiagnostics
	}).(ContainerServiceVMDiagnosticsResponseOutput)
}

type ContainerServiceDiagnosticsProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ContainerServiceDiagnosticsProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceDiagnosticsProfileResponse)(nil)).Elem()
}

func (o ContainerServiceDiagnosticsProfileResponsePtrOutput) ToContainerServiceDiagnosticsProfileResponsePtrOutput() ContainerServiceDiagnosticsProfileResponsePtrOutput {
	return o
}

func (o ContainerServiceDiagnosticsProfileResponsePtrOutput) ToContainerServiceDiagnosticsProfileResponsePtrOutputWithContext(ctx context.Context) ContainerServiceDiagnosticsProfileResponsePtrOutput {
	return o
}

func (o ContainerServiceDiagnosticsProfileResponsePtrOutput) Elem() ContainerServiceDiagnosticsProfileResponseOutput {
	return o.ApplyT(func(v *ContainerServiceDiagnosticsProfileResponse) ContainerServiceDiagnosticsProfileResponse {
		return *v
	}).(ContainerServiceDiagnosticsProfileResponseOutput)
}

// Profile for diagnostics on the container service VMs.
func (o ContainerServiceDiagnosticsProfileResponsePtrOutput) VmDiagnostics() ContainerServiceVMDiagnosticsResponsePtrOutput {
	return o.ApplyT(func(v *ContainerServiceDiagnosticsProfileResponse) *ContainerServiceVMDiagnosticsResponse {
		if v == nil {
			return nil
		}
		return &v.VmDiagnostics
	}).(ContainerServiceVMDiagnosticsResponsePtrOutput)
}

// Profile for Linux VMs in the container service cluster.
type ContainerServiceLinuxProfile struct {
	// The administrator username to use for Linux VMs.
	AdminUsername string `pulumi:"adminUsername"`
	// SSH configuration for Linux-based VMs running on Azure.
	Ssh ContainerServiceSshConfiguration `pulumi:"ssh"`
}

// ContainerServiceLinuxProfileInput is an input type that accepts ContainerServiceLinuxProfileArgs and ContainerServiceLinuxProfileOutput values.
// You can construct a concrete instance of `ContainerServiceLinuxProfileInput` via:
//
//          ContainerServiceLinuxProfileArgs{...}
type ContainerServiceLinuxProfileInput interface {
	pulumi.Input

	ToContainerServiceLinuxProfileOutput() ContainerServiceLinuxProfileOutput
	ToContainerServiceLinuxProfileOutputWithContext(context.Context) ContainerServiceLinuxProfileOutput
}

// Profile for Linux VMs in the container service cluster.
type ContainerServiceLinuxProfileArgs struct {
	// The administrator username to use for Linux VMs.
	AdminUsername pulumi.StringInput `pulumi:"adminUsername"`
	// SSH configuration for Linux-based VMs running on Azure.
	Ssh ContainerServiceSshConfigurationInput `pulumi:"ssh"`
}

func (ContainerServiceLinuxProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceLinuxProfile)(nil)).Elem()
}

func (i ContainerServiceLinuxProfileArgs) ToContainerServiceLinuxProfileOutput() ContainerServiceLinuxProfileOutput {
	return i.ToContainerServiceLinuxProfileOutputWithContext(context.Background())
}

func (i ContainerServiceLinuxProfileArgs) ToContainerServiceLinuxProfileOutputWithContext(ctx context.Context) ContainerServiceLinuxProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceLinuxProfileOutput)
}

func (i ContainerServiceLinuxProfileArgs) ToContainerServiceLinuxProfilePtrOutput() ContainerServiceLinuxProfilePtrOutput {
	return i.ToContainerServiceLinuxProfilePtrOutputWithContext(context.Background())
}

func (i ContainerServiceLinuxProfileArgs) ToContainerServiceLinuxProfilePtrOutputWithContext(ctx context.Context) ContainerServiceLinuxProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceLinuxProfileOutput).ToContainerServiceLinuxProfilePtrOutputWithContext(ctx)
}

// ContainerServiceLinuxProfilePtrInput is an input type that accepts ContainerServiceLinuxProfileArgs, ContainerServiceLinuxProfilePtr and ContainerServiceLinuxProfilePtrOutput values.
// You can construct a concrete instance of `ContainerServiceLinuxProfilePtrInput` via:
//
//          ContainerServiceLinuxProfileArgs{...}
//
//  or:
//
//          nil
type ContainerServiceLinuxProfilePtrInput interface {
	pulumi.Input

	ToContainerServiceLinuxProfilePtrOutput() ContainerServiceLinuxProfilePtrOutput
	ToContainerServiceLinuxProfilePtrOutputWithContext(context.Context) ContainerServiceLinuxProfilePtrOutput
}

type containerServiceLinuxProfilePtrType ContainerServiceLinuxProfileArgs

func ContainerServiceLinuxProfilePtr(v *ContainerServiceLinuxProfileArgs) ContainerServiceLinuxProfilePtrInput {
	return (*containerServiceLinuxProfilePtrType)(v)
}

func (*containerServiceLinuxProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceLinuxProfile)(nil)).Elem()
}

func (i *containerServiceLinuxProfilePtrType) ToContainerServiceLinuxProfilePtrOutput() ContainerServiceLinuxProfilePtrOutput {
	return i.ToContainerServiceLinuxProfilePtrOutputWithContext(context.Background())
}

func (i *containerServiceLinuxProfilePtrType) ToContainerServiceLinuxProfilePtrOutputWithContext(ctx context.Context) ContainerServiceLinuxProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceLinuxProfilePtrOutput)
}

// Profile for Linux VMs in the container service cluster.
type ContainerServiceLinuxProfileOutput struct{ *pulumi.OutputState }

func (ContainerServiceLinuxProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceLinuxProfile)(nil)).Elem()
}

func (o ContainerServiceLinuxProfileOutput) ToContainerServiceLinuxProfileOutput() ContainerServiceLinuxProfileOutput {
	return o
}

func (o ContainerServiceLinuxProfileOutput) ToContainerServiceLinuxProfileOutputWithContext(ctx context.Context) ContainerServiceLinuxProfileOutput {
	return o
}

func (o ContainerServiceLinuxProfileOutput) ToContainerServiceLinuxProfilePtrOutput() ContainerServiceLinuxProfilePtrOutput {
	return o.ToContainerServiceLinuxProfilePtrOutputWithContext(context.Background())
}

func (o ContainerServiceLinuxProfileOutput) ToContainerServiceLinuxProfilePtrOutputWithContext(ctx context.Context) ContainerServiceLinuxProfilePtrOutput {
	return o.ApplyT(func(v ContainerServiceLinuxProfile) *ContainerServiceLinuxProfile {
		return &v
	}).(ContainerServiceLinuxProfilePtrOutput)
}

// The administrator username to use for Linux VMs.
func (o ContainerServiceLinuxProfileOutput) AdminUsername() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerServiceLinuxProfile) string { return v.AdminUsername }).(pulumi.StringOutput)
}

// SSH configuration for Linux-based VMs running on Azure.
func (o ContainerServiceLinuxProfileOutput) Ssh() ContainerServiceSshConfigurationOutput {
	return o.ApplyT(func(v ContainerServiceLinuxProfile) ContainerServiceSshConfiguration { return v.Ssh }).(ContainerServiceSshConfigurationOutput)
}

type ContainerServiceLinuxProfilePtrOutput struct{ *pulumi.OutputState }

func (ContainerServiceLinuxProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceLinuxProfile)(nil)).Elem()
}

func (o ContainerServiceLinuxProfilePtrOutput) ToContainerServiceLinuxProfilePtrOutput() ContainerServiceLinuxProfilePtrOutput {
	return o
}

func (o ContainerServiceLinuxProfilePtrOutput) ToContainerServiceLinuxProfilePtrOutputWithContext(ctx context.Context) ContainerServiceLinuxProfilePtrOutput {
	return o
}

func (o ContainerServiceLinuxProfilePtrOutput) Elem() ContainerServiceLinuxProfileOutput {
	return o.ApplyT(func(v *ContainerServiceLinuxProfile) ContainerServiceLinuxProfile { return *v }).(ContainerServiceLinuxProfileOutput)
}

// The administrator username to use for Linux VMs.
func (o ContainerServiceLinuxProfilePtrOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceLinuxProfile) *string {
		if v == nil {
			return nil
		}
		return &v.AdminUsername
	}).(pulumi.StringPtrOutput)
}

// SSH configuration for Linux-based VMs running on Azure.
func (o ContainerServiceLinuxProfilePtrOutput) Ssh() ContainerServiceSshConfigurationPtrOutput {
	return o.ApplyT(func(v *ContainerServiceLinuxProfile) *ContainerServiceSshConfiguration {
		if v == nil {
			return nil
		}
		return &v.Ssh
	}).(ContainerServiceSshConfigurationPtrOutput)
}

// Profile for Linux VMs in the container service cluster.
type ContainerServiceLinuxProfileResponse struct {
	// The administrator username to use for Linux VMs.
	AdminUsername string `pulumi:"adminUsername"`
	// SSH configuration for Linux-based VMs running on Azure.
	Ssh ContainerServiceSshConfigurationResponse `pulumi:"ssh"`
}

// ContainerServiceLinuxProfileResponseInput is an input type that accepts ContainerServiceLinuxProfileResponseArgs and ContainerServiceLinuxProfileResponseOutput values.
// You can construct a concrete instance of `ContainerServiceLinuxProfileResponseInput` via:
//
//          ContainerServiceLinuxProfileResponseArgs{...}
type ContainerServiceLinuxProfileResponseInput interface {
	pulumi.Input

	ToContainerServiceLinuxProfileResponseOutput() ContainerServiceLinuxProfileResponseOutput
	ToContainerServiceLinuxProfileResponseOutputWithContext(context.Context) ContainerServiceLinuxProfileResponseOutput
}

// Profile for Linux VMs in the container service cluster.
type ContainerServiceLinuxProfileResponseArgs struct {
	// The administrator username to use for Linux VMs.
	AdminUsername pulumi.StringInput `pulumi:"adminUsername"`
	// SSH configuration for Linux-based VMs running on Azure.
	Ssh ContainerServiceSshConfigurationResponseInput `pulumi:"ssh"`
}

func (ContainerServiceLinuxProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceLinuxProfileResponse)(nil)).Elem()
}

func (i ContainerServiceLinuxProfileResponseArgs) ToContainerServiceLinuxProfileResponseOutput() ContainerServiceLinuxProfileResponseOutput {
	return i.ToContainerServiceLinuxProfileResponseOutputWithContext(context.Background())
}

func (i ContainerServiceLinuxProfileResponseArgs) ToContainerServiceLinuxProfileResponseOutputWithContext(ctx context.Context) ContainerServiceLinuxProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceLinuxProfileResponseOutput)
}

func (i ContainerServiceLinuxProfileResponseArgs) ToContainerServiceLinuxProfileResponsePtrOutput() ContainerServiceLinuxProfileResponsePtrOutput {
	return i.ToContainerServiceLinuxProfileResponsePtrOutputWithContext(context.Background())
}

func (i ContainerServiceLinuxProfileResponseArgs) ToContainerServiceLinuxProfileResponsePtrOutputWithContext(ctx context.Context) ContainerServiceLinuxProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceLinuxProfileResponseOutput).ToContainerServiceLinuxProfileResponsePtrOutputWithContext(ctx)
}

// ContainerServiceLinuxProfileResponsePtrInput is an input type that accepts ContainerServiceLinuxProfileResponseArgs, ContainerServiceLinuxProfileResponsePtr and ContainerServiceLinuxProfileResponsePtrOutput values.
// You can construct a concrete instance of `ContainerServiceLinuxProfileResponsePtrInput` via:
//
//          ContainerServiceLinuxProfileResponseArgs{...}
//
//  or:
//
//          nil
type ContainerServiceLinuxProfileResponsePtrInput interface {
	pulumi.Input

	ToContainerServiceLinuxProfileResponsePtrOutput() ContainerServiceLinuxProfileResponsePtrOutput
	ToContainerServiceLinuxProfileResponsePtrOutputWithContext(context.Context) ContainerServiceLinuxProfileResponsePtrOutput
}

type containerServiceLinuxProfileResponsePtrType ContainerServiceLinuxProfileResponseArgs

func ContainerServiceLinuxProfileResponsePtr(v *ContainerServiceLinuxProfileResponseArgs) ContainerServiceLinuxProfileResponsePtrInput {
	return (*containerServiceLinuxProfileResponsePtrType)(v)
}

func (*containerServiceLinuxProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceLinuxProfileResponse)(nil)).Elem()
}

func (i *containerServiceLinuxProfileResponsePtrType) ToContainerServiceLinuxProfileResponsePtrOutput() ContainerServiceLinuxProfileResponsePtrOutput {
	return i.ToContainerServiceLinuxProfileResponsePtrOutputWithContext(context.Background())
}

func (i *containerServiceLinuxProfileResponsePtrType) ToContainerServiceLinuxProfileResponsePtrOutputWithContext(ctx context.Context) ContainerServiceLinuxProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceLinuxProfileResponsePtrOutput)
}

// Profile for Linux VMs in the container service cluster.
type ContainerServiceLinuxProfileResponseOutput struct{ *pulumi.OutputState }

func (ContainerServiceLinuxProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceLinuxProfileResponse)(nil)).Elem()
}

func (o ContainerServiceLinuxProfileResponseOutput) ToContainerServiceLinuxProfileResponseOutput() ContainerServiceLinuxProfileResponseOutput {
	return o
}

func (o ContainerServiceLinuxProfileResponseOutput) ToContainerServiceLinuxProfileResponseOutputWithContext(ctx context.Context) ContainerServiceLinuxProfileResponseOutput {
	return o
}

func (o ContainerServiceLinuxProfileResponseOutput) ToContainerServiceLinuxProfileResponsePtrOutput() ContainerServiceLinuxProfileResponsePtrOutput {
	return o.ToContainerServiceLinuxProfileResponsePtrOutputWithContext(context.Background())
}

func (o ContainerServiceLinuxProfileResponseOutput) ToContainerServiceLinuxProfileResponsePtrOutputWithContext(ctx context.Context) ContainerServiceLinuxProfileResponsePtrOutput {
	return o.ApplyT(func(v ContainerServiceLinuxProfileResponse) *ContainerServiceLinuxProfileResponse {
		return &v
	}).(ContainerServiceLinuxProfileResponsePtrOutput)
}

// The administrator username to use for Linux VMs.
func (o ContainerServiceLinuxProfileResponseOutput) AdminUsername() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerServiceLinuxProfileResponse) string { return v.AdminUsername }).(pulumi.StringOutput)
}

// SSH configuration for Linux-based VMs running on Azure.
func (o ContainerServiceLinuxProfileResponseOutput) Ssh() ContainerServiceSshConfigurationResponseOutput {
	return o.ApplyT(func(v ContainerServiceLinuxProfileResponse) ContainerServiceSshConfigurationResponse { return v.Ssh }).(ContainerServiceSshConfigurationResponseOutput)
}

type ContainerServiceLinuxProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ContainerServiceLinuxProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceLinuxProfileResponse)(nil)).Elem()
}

func (o ContainerServiceLinuxProfileResponsePtrOutput) ToContainerServiceLinuxProfileResponsePtrOutput() ContainerServiceLinuxProfileResponsePtrOutput {
	return o
}

func (o ContainerServiceLinuxProfileResponsePtrOutput) ToContainerServiceLinuxProfileResponsePtrOutputWithContext(ctx context.Context) ContainerServiceLinuxProfileResponsePtrOutput {
	return o
}

func (o ContainerServiceLinuxProfileResponsePtrOutput) Elem() ContainerServiceLinuxProfileResponseOutput {
	return o.ApplyT(func(v *ContainerServiceLinuxProfileResponse) ContainerServiceLinuxProfileResponse { return *v }).(ContainerServiceLinuxProfileResponseOutput)
}

// The administrator username to use for Linux VMs.
func (o ContainerServiceLinuxProfileResponsePtrOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceLinuxProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AdminUsername
	}).(pulumi.StringPtrOutput)
}

// SSH configuration for Linux-based VMs running on Azure.
func (o ContainerServiceLinuxProfileResponsePtrOutput) Ssh() ContainerServiceSshConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *ContainerServiceLinuxProfileResponse) *ContainerServiceSshConfigurationResponse {
		if v == nil {
			return nil
		}
		return &v.Ssh
	}).(ContainerServiceSshConfigurationResponsePtrOutput)
}

// Profile for the container service master.
type ContainerServiceMasterProfile struct {
	// Number of masters (VMs) in the container service cluster. Allowed values are 1, 3, and 5. The default value is 1.
	Count *int `pulumi:"count"`
	// DNS prefix to be used to create the FQDN for the master pool.
	DnsPrefix string `pulumi:"dnsPrefix"`
	// FirstConsecutiveStaticIP used to specify the first static ip of masters.
	FirstConsecutiveStaticIP *string `pulumi:"firstConsecutiveStaticIP"`
	// OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
	OsDiskSizeGB *ContainerServiceOSDisk `pulumi:"osDiskSizeGB"`
	// Storage profile specifies what kind of storage used. Choose from StorageAccount and ManagedDisks. Leave it empty, we will choose for you based on the orchestrator choice.
	StorageProfile *string `pulumi:"storageProfile"`
	// Size of agent VMs.
	VmSize string `pulumi:"vmSize"`
	// VNet SubnetID specifies the VNet's subnet identifier.
	VnetSubnetID *string `pulumi:"vnetSubnetID"`
}

// ContainerServiceMasterProfileInput is an input type that accepts ContainerServiceMasterProfileArgs and ContainerServiceMasterProfileOutput values.
// You can construct a concrete instance of `ContainerServiceMasterProfileInput` via:
//
//          ContainerServiceMasterProfileArgs{...}
type ContainerServiceMasterProfileInput interface {
	pulumi.Input

	ToContainerServiceMasterProfileOutput() ContainerServiceMasterProfileOutput
	ToContainerServiceMasterProfileOutputWithContext(context.Context) ContainerServiceMasterProfileOutput
}

// Profile for the container service master.
type ContainerServiceMasterProfileArgs struct {
	// Number of masters (VMs) in the container service cluster. Allowed values are 1, 3, and 5. The default value is 1.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// DNS prefix to be used to create the FQDN for the master pool.
	DnsPrefix pulumi.StringInput `pulumi:"dnsPrefix"`
	// FirstConsecutiveStaticIP used to specify the first static ip of masters.
	FirstConsecutiveStaticIP pulumi.StringPtrInput `pulumi:"firstConsecutiveStaticIP"`
	// OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
	OsDiskSizeGB ContainerServiceOSDiskPtrInput `pulumi:"osDiskSizeGB"`
	// Storage profile specifies what kind of storage used. Choose from StorageAccount and ManagedDisks. Leave it empty, we will choose for you based on the orchestrator choice.
	StorageProfile pulumi.StringPtrInput `pulumi:"storageProfile"`
	// Size of agent VMs.
	VmSize pulumi.StringInput `pulumi:"vmSize"`
	// VNet SubnetID specifies the VNet's subnet identifier.
	VnetSubnetID pulumi.StringPtrInput `pulumi:"vnetSubnetID"`
}

func (ContainerServiceMasterProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceMasterProfile)(nil)).Elem()
}

func (i ContainerServiceMasterProfileArgs) ToContainerServiceMasterProfileOutput() ContainerServiceMasterProfileOutput {
	return i.ToContainerServiceMasterProfileOutputWithContext(context.Background())
}

func (i ContainerServiceMasterProfileArgs) ToContainerServiceMasterProfileOutputWithContext(ctx context.Context) ContainerServiceMasterProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceMasterProfileOutput)
}

func (i ContainerServiceMasterProfileArgs) ToContainerServiceMasterProfilePtrOutput() ContainerServiceMasterProfilePtrOutput {
	return i.ToContainerServiceMasterProfilePtrOutputWithContext(context.Background())
}

func (i ContainerServiceMasterProfileArgs) ToContainerServiceMasterProfilePtrOutputWithContext(ctx context.Context) ContainerServiceMasterProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceMasterProfileOutput).ToContainerServiceMasterProfilePtrOutputWithContext(ctx)
}

// ContainerServiceMasterProfilePtrInput is an input type that accepts ContainerServiceMasterProfileArgs, ContainerServiceMasterProfilePtr and ContainerServiceMasterProfilePtrOutput values.
// You can construct a concrete instance of `ContainerServiceMasterProfilePtrInput` via:
//
//          ContainerServiceMasterProfileArgs{...}
//
//  or:
//
//          nil
type ContainerServiceMasterProfilePtrInput interface {
	pulumi.Input

	ToContainerServiceMasterProfilePtrOutput() ContainerServiceMasterProfilePtrOutput
	ToContainerServiceMasterProfilePtrOutputWithContext(context.Context) ContainerServiceMasterProfilePtrOutput
}

type containerServiceMasterProfilePtrType ContainerServiceMasterProfileArgs

func ContainerServiceMasterProfilePtr(v *ContainerServiceMasterProfileArgs) ContainerServiceMasterProfilePtrInput {
	return (*containerServiceMasterProfilePtrType)(v)
}

func (*containerServiceMasterProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceMasterProfile)(nil)).Elem()
}

func (i *containerServiceMasterProfilePtrType) ToContainerServiceMasterProfilePtrOutput() ContainerServiceMasterProfilePtrOutput {
	return i.ToContainerServiceMasterProfilePtrOutputWithContext(context.Background())
}

func (i *containerServiceMasterProfilePtrType) ToContainerServiceMasterProfilePtrOutputWithContext(ctx context.Context) ContainerServiceMasterProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceMasterProfilePtrOutput)
}

// Profile for the container service master.
type ContainerServiceMasterProfileOutput struct{ *pulumi.OutputState }

func (ContainerServiceMasterProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceMasterProfile)(nil)).Elem()
}

func (o ContainerServiceMasterProfileOutput) ToContainerServiceMasterProfileOutput() ContainerServiceMasterProfileOutput {
	return o
}

func (o ContainerServiceMasterProfileOutput) ToContainerServiceMasterProfileOutputWithContext(ctx context.Context) ContainerServiceMasterProfileOutput {
	return o
}

func (o ContainerServiceMasterProfileOutput) ToContainerServiceMasterProfilePtrOutput() ContainerServiceMasterProfilePtrOutput {
	return o.ToContainerServiceMasterProfilePtrOutputWithContext(context.Background())
}

func (o ContainerServiceMasterProfileOutput) ToContainerServiceMasterProfilePtrOutputWithContext(ctx context.Context) ContainerServiceMasterProfilePtrOutput {
	return o.ApplyT(func(v ContainerServiceMasterProfile) *ContainerServiceMasterProfile {
		return &v
	}).(ContainerServiceMasterProfilePtrOutput)
}

// Number of masters (VMs) in the container service cluster. Allowed values are 1, 3, and 5. The default value is 1.
func (o ContainerServiceMasterProfileOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerServiceMasterProfile) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// DNS prefix to be used to create the FQDN for the master pool.
func (o ContainerServiceMasterProfileOutput) DnsPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerServiceMasterProfile) string { return v.DnsPrefix }).(pulumi.StringOutput)
}

// FirstConsecutiveStaticIP used to specify the first static ip of masters.
func (o ContainerServiceMasterProfileOutput) FirstConsecutiveStaticIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceMasterProfile) *string { return v.FirstConsecutiveStaticIP }).(pulumi.StringPtrOutput)
}

// OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
func (o ContainerServiceMasterProfileOutput) OsDiskSizeGB() ContainerServiceOSDiskPtrOutput {
	return o.ApplyT(func(v ContainerServiceMasterProfile) *ContainerServiceOSDisk { return v.OsDiskSizeGB }).(ContainerServiceOSDiskPtrOutput)
}

// Storage profile specifies what kind of storage used. Choose from StorageAccount and ManagedDisks. Leave it empty, we will choose for you based on the orchestrator choice.
func (o ContainerServiceMasterProfileOutput) StorageProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceMasterProfile) *string { return v.StorageProfile }).(pulumi.StringPtrOutput)
}

// Size of agent VMs.
func (o ContainerServiceMasterProfileOutput) VmSize() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerServiceMasterProfile) string { return v.VmSize }).(pulumi.StringOutput)
}

// VNet SubnetID specifies the VNet's subnet identifier.
func (o ContainerServiceMasterProfileOutput) VnetSubnetID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceMasterProfile) *string { return v.VnetSubnetID }).(pulumi.StringPtrOutput)
}

type ContainerServiceMasterProfilePtrOutput struct{ *pulumi.OutputState }

func (ContainerServiceMasterProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceMasterProfile)(nil)).Elem()
}

func (o ContainerServiceMasterProfilePtrOutput) ToContainerServiceMasterProfilePtrOutput() ContainerServiceMasterProfilePtrOutput {
	return o
}

func (o ContainerServiceMasterProfilePtrOutput) ToContainerServiceMasterProfilePtrOutputWithContext(ctx context.Context) ContainerServiceMasterProfilePtrOutput {
	return o
}

func (o ContainerServiceMasterProfilePtrOutput) Elem() ContainerServiceMasterProfileOutput {
	return o.ApplyT(func(v *ContainerServiceMasterProfile) ContainerServiceMasterProfile { return *v }).(ContainerServiceMasterProfileOutput)
}

// Number of masters (VMs) in the container service cluster. Allowed values are 1, 3, and 5. The default value is 1.
func (o ContainerServiceMasterProfilePtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerServiceMasterProfile) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// DNS prefix to be used to create the FQDN for the master pool.
func (o ContainerServiceMasterProfilePtrOutput) DnsPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceMasterProfile) *string {
		if v == nil {
			return nil
		}
		return &v.DnsPrefix
	}).(pulumi.StringPtrOutput)
}

// FirstConsecutiveStaticIP used to specify the first static ip of masters.
func (o ContainerServiceMasterProfilePtrOutput) FirstConsecutiveStaticIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceMasterProfile) *string {
		if v == nil {
			return nil
		}
		return v.FirstConsecutiveStaticIP
	}).(pulumi.StringPtrOutput)
}

// OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
func (o ContainerServiceMasterProfilePtrOutput) OsDiskSizeGB() ContainerServiceOSDiskPtrOutput {
	return o.ApplyT(func(v *ContainerServiceMasterProfile) *ContainerServiceOSDisk {
		if v == nil {
			return nil
		}
		return v.OsDiskSizeGB
	}).(ContainerServiceOSDiskPtrOutput)
}

// Storage profile specifies what kind of storage used. Choose from StorageAccount and ManagedDisks. Leave it empty, we will choose for you based on the orchestrator choice.
func (o ContainerServiceMasterProfilePtrOutput) StorageProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceMasterProfile) *string {
		if v == nil {
			return nil
		}
		return v.StorageProfile
	}).(pulumi.StringPtrOutput)
}

// Size of agent VMs.
func (o ContainerServiceMasterProfilePtrOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceMasterProfile) *string {
		if v == nil {
			return nil
		}
		return &v.VmSize
	}).(pulumi.StringPtrOutput)
}

// VNet SubnetID specifies the VNet's subnet identifier.
func (o ContainerServiceMasterProfilePtrOutput) VnetSubnetID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceMasterProfile) *string {
		if v == nil {
			return nil
		}
		return v.VnetSubnetID
	}).(pulumi.StringPtrOutput)
}

// Profile for the container service master.
type ContainerServiceMasterProfileResponse struct {
	// Number of masters (VMs) in the container service cluster. Allowed values are 1, 3, and 5. The default value is 1.
	Count *int `pulumi:"count"`
	// DNS prefix to be used to create the FQDN for the master pool.
	DnsPrefix string `pulumi:"dnsPrefix"`
	// FirstConsecutiveStaticIP used to specify the first static ip of masters.
	FirstConsecutiveStaticIP *string `pulumi:"firstConsecutiveStaticIP"`
	// FQDN for the master pool.
	Fqdn string `pulumi:"fqdn"`
	// OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
	OsDiskSizeGB *ContainerServiceOSDiskResponse `pulumi:"osDiskSizeGB"`
	// Storage profile specifies what kind of storage used. Choose from StorageAccount and ManagedDisks. Leave it empty, we will choose for you based on the orchestrator choice.
	StorageProfile *string `pulumi:"storageProfile"`
	// Size of agent VMs.
	VmSize string `pulumi:"vmSize"`
	// VNet SubnetID specifies the VNet's subnet identifier.
	VnetSubnetID *string `pulumi:"vnetSubnetID"`
}

// ContainerServiceMasterProfileResponseInput is an input type that accepts ContainerServiceMasterProfileResponseArgs and ContainerServiceMasterProfileResponseOutput values.
// You can construct a concrete instance of `ContainerServiceMasterProfileResponseInput` via:
//
//          ContainerServiceMasterProfileResponseArgs{...}
type ContainerServiceMasterProfileResponseInput interface {
	pulumi.Input

	ToContainerServiceMasterProfileResponseOutput() ContainerServiceMasterProfileResponseOutput
	ToContainerServiceMasterProfileResponseOutputWithContext(context.Context) ContainerServiceMasterProfileResponseOutput
}

// Profile for the container service master.
type ContainerServiceMasterProfileResponseArgs struct {
	// Number of masters (VMs) in the container service cluster. Allowed values are 1, 3, and 5. The default value is 1.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// DNS prefix to be used to create the FQDN for the master pool.
	DnsPrefix pulumi.StringInput `pulumi:"dnsPrefix"`
	// FirstConsecutiveStaticIP used to specify the first static ip of masters.
	FirstConsecutiveStaticIP pulumi.StringPtrInput `pulumi:"firstConsecutiveStaticIP"`
	// FQDN for the master pool.
	Fqdn pulumi.StringInput `pulumi:"fqdn"`
	// OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
	OsDiskSizeGB ContainerServiceOSDiskResponsePtrInput `pulumi:"osDiskSizeGB"`
	// Storage profile specifies what kind of storage used. Choose from StorageAccount and ManagedDisks. Leave it empty, we will choose for you based on the orchestrator choice.
	StorageProfile pulumi.StringPtrInput `pulumi:"storageProfile"`
	// Size of agent VMs.
	VmSize pulumi.StringInput `pulumi:"vmSize"`
	// VNet SubnetID specifies the VNet's subnet identifier.
	VnetSubnetID pulumi.StringPtrInput `pulumi:"vnetSubnetID"`
}

func (ContainerServiceMasterProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceMasterProfileResponse)(nil)).Elem()
}

func (i ContainerServiceMasterProfileResponseArgs) ToContainerServiceMasterProfileResponseOutput() ContainerServiceMasterProfileResponseOutput {
	return i.ToContainerServiceMasterProfileResponseOutputWithContext(context.Background())
}

func (i ContainerServiceMasterProfileResponseArgs) ToContainerServiceMasterProfileResponseOutputWithContext(ctx context.Context) ContainerServiceMasterProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceMasterProfileResponseOutput)
}

func (i ContainerServiceMasterProfileResponseArgs) ToContainerServiceMasterProfileResponsePtrOutput() ContainerServiceMasterProfileResponsePtrOutput {
	return i.ToContainerServiceMasterProfileResponsePtrOutputWithContext(context.Background())
}

func (i ContainerServiceMasterProfileResponseArgs) ToContainerServiceMasterProfileResponsePtrOutputWithContext(ctx context.Context) ContainerServiceMasterProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceMasterProfileResponseOutput).ToContainerServiceMasterProfileResponsePtrOutputWithContext(ctx)
}

// ContainerServiceMasterProfileResponsePtrInput is an input type that accepts ContainerServiceMasterProfileResponseArgs, ContainerServiceMasterProfileResponsePtr and ContainerServiceMasterProfileResponsePtrOutput values.
// You can construct a concrete instance of `ContainerServiceMasterProfileResponsePtrInput` via:
//
//          ContainerServiceMasterProfileResponseArgs{...}
//
//  or:
//
//          nil
type ContainerServiceMasterProfileResponsePtrInput interface {
	pulumi.Input

	ToContainerServiceMasterProfileResponsePtrOutput() ContainerServiceMasterProfileResponsePtrOutput
	ToContainerServiceMasterProfileResponsePtrOutputWithContext(context.Context) ContainerServiceMasterProfileResponsePtrOutput
}

type containerServiceMasterProfileResponsePtrType ContainerServiceMasterProfileResponseArgs

func ContainerServiceMasterProfileResponsePtr(v *ContainerServiceMasterProfileResponseArgs) ContainerServiceMasterProfileResponsePtrInput {
	return (*containerServiceMasterProfileResponsePtrType)(v)
}

func (*containerServiceMasterProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceMasterProfileResponse)(nil)).Elem()
}

func (i *containerServiceMasterProfileResponsePtrType) ToContainerServiceMasterProfileResponsePtrOutput() ContainerServiceMasterProfileResponsePtrOutput {
	return i.ToContainerServiceMasterProfileResponsePtrOutputWithContext(context.Background())
}

func (i *containerServiceMasterProfileResponsePtrType) ToContainerServiceMasterProfileResponsePtrOutputWithContext(ctx context.Context) ContainerServiceMasterProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceMasterProfileResponsePtrOutput)
}

// Profile for the container service master.
type ContainerServiceMasterProfileResponseOutput struct{ *pulumi.OutputState }

func (ContainerServiceMasterProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceMasterProfileResponse)(nil)).Elem()
}

func (o ContainerServiceMasterProfileResponseOutput) ToContainerServiceMasterProfileResponseOutput() ContainerServiceMasterProfileResponseOutput {
	return o
}

func (o ContainerServiceMasterProfileResponseOutput) ToContainerServiceMasterProfileResponseOutputWithContext(ctx context.Context) ContainerServiceMasterProfileResponseOutput {
	return o
}

func (o ContainerServiceMasterProfileResponseOutput) ToContainerServiceMasterProfileResponsePtrOutput() ContainerServiceMasterProfileResponsePtrOutput {
	return o.ToContainerServiceMasterProfileResponsePtrOutputWithContext(context.Background())
}

func (o ContainerServiceMasterProfileResponseOutput) ToContainerServiceMasterProfileResponsePtrOutputWithContext(ctx context.Context) ContainerServiceMasterProfileResponsePtrOutput {
	return o.ApplyT(func(v ContainerServiceMasterProfileResponse) *ContainerServiceMasterProfileResponse {
		return &v
	}).(ContainerServiceMasterProfileResponsePtrOutput)
}

// Number of masters (VMs) in the container service cluster. Allowed values are 1, 3, and 5. The default value is 1.
func (o ContainerServiceMasterProfileResponseOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerServiceMasterProfileResponse) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// DNS prefix to be used to create the FQDN for the master pool.
func (o ContainerServiceMasterProfileResponseOutput) DnsPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerServiceMasterProfileResponse) string { return v.DnsPrefix }).(pulumi.StringOutput)
}

// FirstConsecutiveStaticIP used to specify the first static ip of masters.
func (o ContainerServiceMasterProfileResponseOutput) FirstConsecutiveStaticIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceMasterProfileResponse) *string { return v.FirstConsecutiveStaticIP }).(pulumi.StringPtrOutput)
}

// FQDN for the master pool.
func (o ContainerServiceMasterProfileResponseOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerServiceMasterProfileResponse) string { return v.Fqdn }).(pulumi.StringOutput)
}

// OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
func (o ContainerServiceMasterProfileResponseOutput) OsDiskSizeGB() ContainerServiceOSDiskResponsePtrOutput {
	return o.ApplyT(func(v ContainerServiceMasterProfileResponse) *ContainerServiceOSDiskResponse { return v.OsDiskSizeGB }).(ContainerServiceOSDiskResponsePtrOutput)
}

// Storage profile specifies what kind of storage used. Choose from StorageAccount and ManagedDisks. Leave it empty, we will choose for you based on the orchestrator choice.
func (o ContainerServiceMasterProfileResponseOutput) StorageProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceMasterProfileResponse) *string { return v.StorageProfile }).(pulumi.StringPtrOutput)
}

// Size of agent VMs.
func (o ContainerServiceMasterProfileResponseOutput) VmSize() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerServiceMasterProfileResponse) string { return v.VmSize }).(pulumi.StringOutput)
}

// VNet SubnetID specifies the VNet's subnet identifier.
func (o ContainerServiceMasterProfileResponseOutput) VnetSubnetID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceMasterProfileResponse) *string { return v.VnetSubnetID }).(pulumi.StringPtrOutput)
}

type ContainerServiceMasterProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ContainerServiceMasterProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceMasterProfileResponse)(nil)).Elem()
}

func (o ContainerServiceMasterProfileResponsePtrOutput) ToContainerServiceMasterProfileResponsePtrOutput() ContainerServiceMasterProfileResponsePtrOutput {
	return o
}

func (o ContainerServiceMasterProfileResponsePtrOutput) ToContainerServiceMasterProfileResponsePtrOutputWithContext(ctx context.Context) ContainerServiceMasterProfileResponsePtrOutput {
	return o
}

func (o ContainerServiceMasterProfileResponsePtrOutput) Elem() ContainerServiceMasterProfileResponseOutput {
	return o.ApplyT(func(v *ContainerServiceMasterProfileResponse) ContainerServiceMasterProfileResponse { return *v }).(ContainerServiceMasterProfileResponseOutput)
}

// Number of masters (VMs) in the container service cluster. Allowed values are 1, 3, and 5. The default value is 1.
func (o ContainerServiceMasterProfileResponsePtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerServiceMasterProfileResponse) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// DNS prefix to be used to create the FQDN for the master pool.
func (o ContainerServiceMasterProfileResponsePtrOutput) DnsPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceMasterProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DnsPrefix
	}).(pulumi.StringPtrOutput)
}

// FirstConsecutiveStaticIP used to specify the first static ip of masters.
func (o ContainerServiceMasterProfileResponsePtrOutput) FirstConsecutiveStaticIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceMasterProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.FirstConsecutiveStaticIP
	}).(pulumi.StringPtrOutput)
}

// FQDN for the master pool.
func (o ContainerServiceMasterProfileResponsePtrOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceMasterProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Fqdn
	}).(pulumi.StringPtrOutput)
}

// OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
func (o ContainerServiceMasterProfileResponsePtrOutput) OsDiskSizeGB() ContainerServiceOSDiskResponsePtrOutput {
	return o.ApplyT(func(v *ContainerServiceMasterProfileResponse) *ContainerServiceOSDiskResponse {
		if v == nil {
			return nil
		}
		return v.OsDiskSizeGB
	}).(ContainerServiceOSDiskResponsePtrOutput)
}

// Storage profile specifies what kind of storage used. Choose from StorageAccount and ManagedDisks. Leave it empty, we will choose for you based on the orchestrator choice.
func (o ContainerServiceMasterProfileResponsePtrOutput) StorageProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceMasterProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.StorageProfile
	}).(pulumi.StringPtrOutput)
}

// Size of agent VMs.
func (o ContainerServiceMasterProfileResponsePtrOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceMasterProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.VmSize
	}).(pulumi.StringPtrOutput)
}

// VNet SubnetID specifies the VNet's subnet identifier.
func (o ContainerServiceMasterProfileResponsePtrOutput) VnetSubnetID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceMasterProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.VnetSubnetID
	}).(pulumi.StringPtrOutput)
}

// Profile of network configuration.
type ContainerServiceNetworkProfile struct {
	// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
	DnsServiceIP *string `pulumi:"dnsServiceIP"`
	// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
	DockerBridgeCidr *string `pulumi:"dockerBridgeCidr"`
	// Profile of the cluster load balancer.
	LoadBalancerProfile *ManagedClusterLoadBalancerProfile `pulumi:"loadBalancerProfile"`
	// The load balancer sku for the managed cluster.
	LoadBalancerSku *string `pulumi:"loadBalancerSku"`
	// Network mode used for building Kubernetes network.
	NetworkMode *string `pulumi:"networkMode"`
	// Network plugin used for building Kubernetes network.
	NetworkPlugin *string `pulumi:"networkPlugin"`
	// Network policy used for building Kubernetes network.
	NetworkPolicy *string `pulumi:"networkPolicy"`
	// The outbound (egress) routing method.
	OutboundType *string `pulumi:"outboundType"`
	// A CIDR notation IP range from which to assign pod IPs when kubenet is used.
	PodCidr *string `pulumi:"podCidr"`
	// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
	ServiceCidr *string `pulumi:"serviceCidr"`
}

// ContainerServiceNetworkProfileInput is an input type that accepts ContainerServiceNetworkProfileArgs and ContainerServiceNetworkProfileOutput values.
// You can construct a concrete instance of `ContainerServiceNetworkProfileInput` via:
//
//          ContainerServiceNetworkProfileArgs{...}
type ContainerServiceNetworkProfileInput interface {
	pulumi.Input

	ToContainerServiceNetworkProfileOutput() ContainerServiceNetworkProfileOutput
	ToContainerServiceNetworkProfileOutputWithContext(context.Context) ContainerServiceNetworkProfileOutput
}

// Profile of network configuration.
type ContainerServiceNetworkProfileArgs struct {
	// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
	DnsServiceIP pulumi.StringPtrInput `pulumi:"dnsServiceIP"`
	// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
	DockerBridgeCidr pulumi.StringPtrInput `pulumi:"dockerBridgeCidr"`
	// Profile of the cluster load balancer.
	LoadBalancerProfile ManagedClusterLoadBalancerProfilePtrInput `pulumi:"loadBalancerProfile"`
	// The load balancer sku for the managed cluster.
	LoadBalancerSku pulumi.StringPtrInput `pulumi:"loadBalancerSku"`
	// Network mode used for building Kubernetes network.
	NetworkMode pulumi.StringPtrInput `pulumi:"networkMode"`
	// Network plugin used for building Kubernetes network.
	NetworkPlugin pulumi.StringPtrInput `pulumi:"networkPlugin"`
	// Network policy used for building Kubernetes network.
	NetworkPolicy pulumi.StringPtrInput `pulumi:"networkPolicy"`
	// The outbound (egress) routing method.
	OutboundType pulumi.StringPtrInput `pulumi:"outboundType"`
	// A CIDR notation IP range from which to assign pod IPs when kubenet is used.
	PodCidr pulumi.StringPtrInput `pulumi:"podCidr"`
	// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
	ServiceCidr pulumi.StringPtrInput `pulumi:"serviceCidr"`
}

func (ContainerServiceNetworkProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceNetworkProfile)(nil)).Elem()
}

func (i ContainerServiceNetworkProfileArgs) ToContainerServiceNetworkProfileOutput() ContainerServiceNetworkProfileOutput {
	return i.ToContainerServiceNetworkProfileOutputWithContext(context.Background())
}

func (i ContainerServiceNetworkProfileArgs) ToContainerServiceNetworkProfileOutputWithContext(ctx context.Context) ContainerServiceNetworkProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceNetworkProfileOutput)
}

func (i ContainerServiceNetworkProfileArgs) ToContainerServiceNetworkProfilePtrOutput() ContainerServiceNetworkProfilePtrOutput {
	return i.ToContainerServiceNetworkProfilePtrOutputWithContext(context.Background())
}

func (i ContainerServiceNetworkProfileArgs) ToContainerServiceNetworkProfilePtrOutputWithContext(ctx context.Context) ContainerServiceNetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceNetworkProfileOutput).ToContainerServiceNetworkProfilePtrOutputWithContext(ctx)
}

// ContainerServiceNetworkProfilePtrInput is an input type that accepts ContainerServiceNetworkProfileArgs, ContainerServiceNetworkProfilePtr and ContainerServiceNetworkProfilePtrOutput values.
// You can construct a concrete instance of `ContainerServiceNetworkProfilePtrInput` via:
//
//          ContainerServiceNetworkProfileArgs{...}
//
//  or:
//
//          nil
type ContainerServiceNetworkProfilePtrInput interface {
	pulumi.Input

	ToContainerServiceNetworkProfilePtrOutput() ContainerServiceNetworkProfilePtrOutput
	ToContainerServiceNetworkProfilePtrOutputWithContext(context.Context) ContainerServiceNetworkProfilePtrOutput
}

type containerServiceNetworkProfilePtrType ContainerServiceNetworkProfileArgs

func ContainerServiceNetworkProfilePtr(v *ContainerServiceNetworkProfileArgs) ContainerServiceNetworkProfilePtrInput {
	return (*containerServiceNetworkProfilePtrType)(v)
}

func (*containerServiceNetworkProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceNetworkProfile)(nil)).Elem()
}

func (i *containerServiceNetworkProfilePtrType) ToContainerServiceNetworkProfilePtrOutput() ContainerServiceNetworkProfilePtrOutput {
	return i.ToContainerServiceNetworkProfilePtrOutputWithContext(context.Background())
}

func (i *containerServiceNetworkProfilePtrType) ToContainerServiceNetworkProfilePtrOutputWithContext(ctx context.Context) ContainerServiceNetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceNetworkProfilePtrOutput)
}

// Profile of network configuration.
type ContainerServiceNetworkProfileOutput struct{ *pulumi.OutputState }

func (ContainerServiceNetworkProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceNetworkProfile)(nil)).Elem()
}

func (o ContainerServiceNetworkProfileOutput) ToContainerServiceNetworkProfileOutput() ContainerServiceNetworkProfileOutput {
	return o
}

func (o ContainerServiceNetworkProfileOutput) ToContainerServiceNetworkProfileOutputWithContext(ctx context.Context) ContainerServiceNetworkProfileOutput {
	return o
}

func (o ContainerServiceNetworkProfileOutput) ToContainerServiceNetworkProfilePtrOutput() ContainerServiceNetworkProfilePtrOutput {
	return o.ToContainerServiceNetworkProfilePtrOutputWithContext(context.Background())
}

func (o ContainerServiceNetworkProfileOutput) ToContainerServiceNetworkProfilePtrOutputWithContext(ctx context.Context) ContainerServiceNetworkProfilePtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfile) *ContainerServiceNetworkProfile {
		return &v
	}).(ContainerServiceNetworkProfilePtrOutput)
}

// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
func (o ContainerServiceNetworkProfileOutput) DnsServiceIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfile) *string { return v.DnsServiceIP }).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
func (o ContainerServiceNetworkProfileOutput) DockerBridgeCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfile) *string { return v.DockerBridgeCidr }).(pulumi.StringPtrOutput)
}

// Profile of the cluster load balancer.
func (o ContainerServiceNetworkProfileOutput) LoadBalancerProfile() ManagedClusterLoadBalancerProfilePtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfile) *ManagedClusterLoadBalancerProfile {
		return v.LoadBalancerProfile
	}).(ManagedClusterLoadBalancerProfilePtrOutput)
}

// The load balancer sku for the managed cluster.
func (o ContainerServiceNetworkProfileOutput) LoadBalancerSku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfile) *string { return v.LoadBalancerSku }).(pulumi.StringPtrOutput)
}

// Network mode used for building Kubernetes network.
func (o ContainerServiceNetworkProfileOutput) NetworkMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfile) *string { return v.NetworkMode }).(pulumi.StringPtrOutput)
}

// Network plugin used for building Kubernetes network.
func (o ContainerServiceNetworkProfileOutput) NetworkPlugin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfile) *string { return v.NetworkPlugin }).(pulumi.StringPtrOutput)
}

// Network policy used for building Kubernetes network.
func (o ContainerServiceNetworkProfileOutput) NetworkPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfile) *string { return v.NetworkPolicy }).(pulumi.StringPtrOutput)
}

// The outbound (egress) routing method.
func (o ContainerServiceNetworkProfileOutput) OutboundType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfile) *string { return v.OutboundType }).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range from which to assign pod IPs when kubenet is used.
func (o ContainerServiceNetworkProfileOutput) PodCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfile) *string { return v.PodCidr }).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
func (o ContainerServiceNetworkProfileOutput) ServiceCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfile) *string { return v.ServiceCidr }).(pulumi.StringPtrOutput)
}

type ContainerServiceNetworkProfilePtrOutput struct{ *pulumi.OutputState }

func (ContainerServiceNetworkProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceNetworkProfile)(nil)).Elem()
}

func (o ContainerServiceNetworkProfilePtrOutput) ToContainerServiceNetworkProfilePtrOutput() ContainerServiceNetworkProfilePtrOutput {
	return o
}

func (o ContainerServiceNetworkProfilePtrOutput) ToContainerServiceNetworkProfilePtrOutputWithContext(ctx context.Context) ContainerServiceNetworkProfilePtrOutput {
	return o
}

func (o ContainerServiceNetworkProfilePtrOutput) Elem() ContainerServiceNetworkProfileOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfile) ContainerServiceNetworkProfile { return *v }).(ContainerServiceNetworkProfileOutput)
}

// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
func (o ContainerServiceNetworkProfilePtrOutput) DnsServiceIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.DnsServiceIP
	}).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
func (o ContainerServiceNetworkProfilePtrOutput) DockerBridgeCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.DockerBridgeCidr
	}).(pulumi.StringPtrOutput)
}

// Profile of the cluster load balancer.
func (o ContainerServiceNetworkProfilePtrOutput) LoadBalancerProfile() ManagedClusterLoadBalancerProfilePtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfile) *ManagedClusterLoadBalancerProfile {
		if v == nil {
			return nil
		}
		return v.LoadBalancerProfile
	}).(ManagedClusterLoadBalancerProfilePtrOutput)
}

// The load balancer sku for the managed cluster.
func (o ContainerServiceNetworkProfilePtrOutput) LoadBalancerSku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.LoadBalancerSku
	}).(pulumi.StringPtrOutput)
}

// Network mode used for building Kubernetes network.
func (o ContainerServiceNetworkProfilePtrOutput) NetworkMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.NetworkMode
	}).(pulumi.StringPtrOutput)
}

// Network plugin used for building Kubernetes network.
func (o ContainerServiceNetworkProfilePtrOutput) NetworkPlugin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.NetworkPlugin
	}).(pulumi.StringPtrOutput)
}

// Network policy used for building Kubernetes network.
func (o ContainerServiceNetworkProfilePtrOutput) NetworkPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.NetworkPolicy
	}).(pulumi.StringPtrOutput)
}

// The outbound (egress) routing method.
func (o ContainerServiceNetworkProfilePtrOutput) OutboundType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.OutboundType
	}).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range from which to assign pod IPs when kubenet is used.
func (o ContainerServiceNetworkProfilePtrOutput) PodCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.PodCidr
	}).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
func (o ContainerServiceNetworkProfilePtrOutput) ServiceCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.ServiceCidr
	}).(pulumi.StringPtrOutput)
}

// Profile of network configuration.
type ContainerServiceNetworkProfileResponse struct {
	// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
	DnsServiceIP *string `pulumi:"dnsServiceIP"`
	// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
	DockerBridgeCidr *string `pulumi:"dockerBridgeCidr"`
	// Profile of the cluster load balancer.
	LoadBalancerProfile *ManagedClusterLoadBalancerProfileResponse `pulumi:"loadBalancerProfile"`
	// The load balancer sku for the managed cluster.
	LoadBalancerSku *string `pulumi:"loadBalancerSku"`
	// Network mode used for building Kubernetes network.
	NetworkMode *string `pulumi:"networkMode"`
	// Network plugin used for building Kubernetes network.
	NetworkPlugin *string `pulumi:"networkPlugin"`
	// Network policy used for building Kubernetes network.
	NetworkPolicy *string `pulumi:"networkPolicy"`
	// The outbound (egress) routing method.
	OutboundType *string `pulumi:"outboundType"`
	// A CIDR notation IP range from which to assign pod IPs when kubenet is used.
	PodCidr *string `pulumi:"podCidr"`
	// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
	ServiceCidr *string `pulumi:"serviceCidr"`
}

// ContainerServiceNetworkProfileResponseInput is an input type that accepts ContainerServiceNetworkProfileResponseArgs and ContainerServiceNetworkProfileResponseOutput values.
// You can construct a concrete instance of `ContainerServiceNetworkProfileResponseInput` via:
//
//          ContainerServiceNetworkProfileResponseArgs{...}
type ContainerServiceNetworkProfileResponseInput interface {
	pulumi.Input

	ToContainerServiceNetworkProfileResponseOutput() ContainerServiceNetworkProfileResponseOutput
	ToContainerServiceNetworkProfileResponseOutputWithContext(context.Context) ContainerServiceNetworkProfileResponseOutput
}

// Profile of network configuration.
type ContainerServiceNetworkProfileResponseArgs struct {
	// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
	DnsServiceIP pulumi.StringPtrInput `pulumi:"dnsServiceIP"`
	// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
	DockerBridgeCidr pulumi.StringPtrInput `pulumi:"dockerBridgeCidr"`
	// Profile of the cluster load balancer.
	LoadBalancerProfile ManagedClusterLoadBalancerProfileResponsePtrInput `pulumi:"loadBalancerProfile"`
	// The load balancer sku for the managed cluster.
	LoadBalancerSku pulumi.StringPtrInput `pulumi:"loadBalancerSku"`
	// Network mode used for building Kubernetes network.
	NetworkMode pulumi.StringPtrInput `pulumi:"networkMode"`
	// Network plugin used for building Kubernetes network.
	NetworkPlugin pulumi.StringPtrInput `pulumi:"networkPlugin"`
	// Network policy used for building Kubernetes network.
	NetworkPolicy pulumi.StringPtrInput `pulumi:"networkPolicy"`
	// The outbound (egress) routing method.
	OutboundType pulumi.StringPtrInput `pulumi:"outboundType"`
	// A CIDR notation IP range from which to assign pod IPs when kubenet is used.
	PodCidr pulumi.StringPtrInput `pulumi:"podCidr"`
	// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
	ServiceCidr pulumi.StringPtrInput `pulumi:"serviceCidr"`
}

func (ContainerServiceNetworkProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceNetworkProfileResponse)(nil)).Elem()
}

func (i ContainerServiceNetworkProfileResponseArgs) ToContainerServiceNetworkProfileResponseOutput() ContainerServiceNetworkProfileResponseOutput {
	return i.ToContainerServiceNetworkProfileResponseOutputWithContext(context.Background())
}

func (i ContainerServiceNetworkProfileResponseArgs) ToContainerServiceNetworkProfileResponseOutputWithContext(ctx context.Context) ContainerServiceNetworkProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceNetworkProfileResponseOutput)
}

func (i ContainerServiceNetworkProfileResponseArgs) ToContainerServiceNetworkProfileResponsePtrOutput() ContainerServiceNetworkProfileResponsePtrOutput {
	return i.ToContainerServiceNetworkProfileResponsePtrOutputWithContext(context.Background())
}

func (i ContainerServiceNetworkProfileResponseArgs) ToContainerServiceNetworkProfileResponsePtrOutputWithContext(ctx context.Context) ContainerServiceNetworkProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceNetworkProfileResponseOutput).ToContainerServiceNetworkProfileResponsePtrOutputWithContext(ctx)
}

// ContainerServiceNetworkProfileResponsePtrInput is an input type that accepts ContainerServiceNetworkProfileResponseArgs, ContainerServiceNetworkProfileResponsePtr and ContainerServiceNetworkProfileResponsePtrOutput values.
// You can construct a concrete instance of `ContainerServiceNetworkProfileResponsePtrInput` via:
//
//          ContainerServiceNetworkProfileResponseArgs{...}
//
//  or:
//
//          nil
type ContainerServiceNetworkProfileResponsePtrInput interface {
	pulumi.Input

	ToContainerServiceNetworkProfileResponsePtrOutput() ContainerServiceNetworkProfileResponsePtrOutput
	ToContainerServiceNetworkProfileResponsePtrOutputWithContext(context.Context) ContainerServiceNetworkProfileResponsePtrOutput
}

type containerServiceNetworkProfileResponsePtrType ContainerServiceNetworkProfileResponseArgs

func ContainerServiceNetworkProfileResponsePtr(v *ContainerServiceNetworkProfileResponseArgs) ContainerServiceNetworkProfileResponsePtrInput {
	return (*containerServiceNetworkProfileResponsePtrType)(v)
}

func (*containerServiceNetworkProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceNetworkProfileResponse)(nil)).Elem()
}

func (i *containerServiceNetworkProfileResponsePtrType) ToContainerServiceNetworkProfileResponsePtrOutput() ContainerServiceNetworkProfileResponsePtrOutput {
	return i.ToContainerServiceNetworkProfileResponsePtrOutputWithContext(context.Background())
}

func (i *containerServiceNetworkProfileResponsePtrType) ToContainerServiceNetworkProfileResponsePtrOutputWithContext(ctx context.Context) ContainerServiceNetworkProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceNetworkProfileResponsePtrOutput)
}

// Profile of network configuration.
type ContainerServiceNetworkProfileResponseOutput struct{ *pulumi.OutputState }

func (ContainerServiceNetworkProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceNetworkProfileResponse)(nil)).Elem()
}

func (o ContainerServiceNetworkProfileResponseOutput) ToContainerServiceNetworkProfileResponseOutput() ContainerServiceNetworkProfileResponseOutput {
	return o
}

func (o ContainerServiceNetworkProfileResponseOutput) ToContainerServiceNetworkProfileResponseOutputWithContext(ctx context.Context) ContainerServiceNetworkProfileResponseOutput {
	return o
}

func (o ContainerServiceNetworkProfileResponseOutput) ToContainerServiceNetworkProfileResponsePtrOutput() ContainerServiceNetworkProfileResponsePtrOutput {
	return o.ToContainerServiceNetworkProfileResponsePtrOutputWithContext(context.Background())
}

func (o ContainerServiceNetworkProfileResponseOutput) ToContainerServiceNetworkProfileResponsePtrOutputWithContext(ctx context.Context) ContainerServiceNetworkProfileResponsePtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfileResponse) *ContainerServiceNetworkProfileResponse {
		return &v
	}).(ContainerServiceNetworkProfileResponsePtrOutput)
}

// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
func (o ContainerServiceNetworkProfileResponseOutput) DnsServiceIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfileResponse) *string { return v.DnsServiceIP }).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
func (o ContainerServiceNetworkProfileResponseOutput) DockerBridgeCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfileResponse) *string { return v.DockerBridgeCidr }).(pulumi.StringPtrOutput)
}

// Profile of the cluster load balancer.
func (o ContainerServiceNetworkProfileResponseOutput) LoadBalancerProfile() ManagedClusterLoadBalancerProfileResponsePtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfileResponse) *ManagedClusterLoadBalancerProfileResponse {
		return v.LoadBalancerProfile
	}).(ManagedClusterLoadBalancerProfileResponsePtrOutput)
}

// The load balancer sku for the managed cluster.
func (o ContainerServiceNetworkProfileResponseOutput) LoadBalancerSku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfileResponse) *string { return v.LoadBalancerSku }).(pulumi.StringPtrOutput)
}

// Network mode used for building Kubernetes network.
func (o ContainerServiceNetworkProfileResponseOutput) NetworkMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfileResponse) *string { return v.NetworkMode }).(pulumi.StringPtrOutput)
}

// Network plugin used for building Kubernetes network.
func (o ContainerServiceNetworkProfileResponseOutput) NetworkPlugin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfileResponse) *string { return v.NetworkPlugin }).(pulumi.StringPtrOutput)
}

// Network policy used for building Kubernetes network.
func (o ContainerServiceNetworkProfileResponseOutput) NetworkPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfileResponse) *string { return v.NetworkPolicy }).(pulumi.StringPtrOutput)
}

// The outbound (egress) routing method.
func (o ContainerServiceNetworkProfileResponseOutput) OutboundType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfileResponse) *string { return v.OutboundType }).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range from which to assign pod IPs when kubenet is used.
func (o ContainerServiceNetworkProfileResponseOutput) PodCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfileResponse) *string { return v.PodCidr }).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
func (o ContainerServiceNetworkProfileResponseOutput) ServiceCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfileResponse) *string { return v.ServiceCidr }).(pulumi.StringPtrOutput)
}

type ContainerServiceNetworkProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ContainerServiceNetworkProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceNetworkProfileResponse)(nil)).Elem()
}

func (o ContainerServiceNetworkProfileResponsePtrOutput) ToContainerServiceNetworkProfileResponsePtrOutput() ContainerServiceNetworkProfileResponsePtrOutput {
	return o
}

func (o ContainerServiceNetworkProfileResponsePtrOutput) ToContainerServiceNetworkProfileResponsePtrOutputWithContext(ctx context.Context) ContainerServiceNetworkProfileResponsePtrOutput {
	return o
}

func (o ContainerServiceNetworkProfileResponsePtrOutput) Elem() ContainerServiceNetworkProfileResponseOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfileResponse) ContainerServiceNetworkProfileResponse { return *v }).(ContainerServiceNetworkProfileResponseOutput)
}

// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
func (o ContainerServiceNetworkProfileResponsePtrOutput) DnsServiceIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.DnsServiceIP
	}).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
func (o ContainerServiceNetworkProfileResponsePtrOutput) DockerBridgeCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.DockerBridgeCidr
	}).(pulumi.StringPtrOutput)
}

// Profile of the cluster load balancer.
func (o ContainerServiceNetworkProfileResponsePtrOutput) LoadBalancerProfile() ManagedClusterLoadBalancerProfileResponsePtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfileResponse) *ManagedClusterLoadBalancerProfileResponse {
		if v == nil {
			return nil
		}
		return v.LoadBalancerProfile
	}).(ManagedClusterLoadBalancerProfileResponsePtrOutput)
}

// The load balancer sku for the managed cluster.
func (o ContainerServiceNetworkProfileResponsePtrOutput) LoadBalancerSku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.LoadBalancerSku
	}).(pulumi.StringPtrOutput)
}

// Network mode used for building Kubernetes network.
func (o ContainerServiceNetworkProfileResponsePtrOutput) NetworkMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.NetworkMode
	}).(pulumi.StringPtrOutput)
}

// Network plugin used for building Kubernetes network.
func (o ContainerServiceNetworkProfileResponsePtrOutput) NetworkPlugin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.NetworkPlugin
	}).(pulumi.StringPtrOutput)
}

// Network policy used for building Kubernetes network.
func (o ContainerServiceNetworkProfileResponsePtrOutput) NetworkPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.NetworkPolicy
	}).(pulumi.StringPtrOutput)
}

// The outbound (egress) routing method.
func (o ContainerServiceNetworkProfileResponsePtrOutput) OutboundType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.OutboundType
	}).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range from which to assign pod IPs when kubenet is used.
func (o ContainerServiceNetworkProfileResponsePtrOutput) PodCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.PodCidr
	}).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
func (o ContainerServiceNetworkProfileResponsePtrOutput) ServiceCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServiceCidr
	}).(pulumi.StringPtrOutput)
}

// OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
type ContainerServiceOSDisk struct {
}

// ContainerServiceOSDiskInput is an input type that accepts ContainerServiceOSDiskArgs and ContainerServiceOSDiskOutput values.
// You can construct a concrete instance of `ContainerServiceOSDiskInput` via:
//
//          ContainerServiceOSDiskArgs{...}
type ContainerServiceOSDiskInput interface {
	pulumi.Input

	ToContainerServiceOSDiskOutput() ContainerServiceOSDiskOutput
	ToContainerServiceOSDiskOutputWithContext(context.Context) ContainerServiceOSDiskOutput
}

// OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
type ContainerServiceOSDiskArgs struct {
}

func (ContainerServiceOSDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceOSDisk)(nil)).Elem()
}

func (i ContainerServiceOSDiskArgs) ToContainerServiceOSDiskOutput() ContainerServiceOSDiskOutput {
	return i.ToContainerServiceOSDiskOutputWithContext(context.Background())
}

func (i ContainerServiceOSDiskArgs) ToContainerServiceOSDiskOutputWithContext(ctx context.Context) ContainerServiceOSDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceOSDiskOutput)
}

func (i ContainerServiceOSDiskArgs) ToContainerServiceOSDiskPtrOutput() ContainerServiceOSDiskPtrOutput {
	return i.ToContainerServiceOSDiskPtrOutputWithContext(context.Background())
}

func (i ContainerServiceOSDiskArgs) ToContainerServiceOSDiskPtrOutputWithContext(ctx context.Context) ContainerServiceOSDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceOSDiskOutput).ToContainerServiceOSDiskPtrOutputWithContext(ctx)
}

// ContainerServiceOSDiskPtrInput is an input type that accepts ContainerServiceOSDiskArgs, ContainerServiceOSDiskPtr and ContainerServiceOSDiskPtrOutput values.
// You can construct a concrete instance of `ContainerServiceOSDiskPtrInput` via:
//
//          ContainerServiceOSDiskArgs{...}
//
//  or:
//
//          nil
type ContainerServiceOSDiskPtrInput interface {
	pulumi.Input

	ToContainerServiceOSDiskPtrOutput() ContainerServiceOSDiskPtrOutput
	ToContainerServiceOSDiskPtrOutputWithContext(context.Context) ContainerServiceOSDiskPtrOutput
}

type containerServiceOSDiskPtrType ContainerServiceOSDiskArgs

func ContainerServiceOSDiskPtr(v *ContainerServiceOSDiskArgs) ContainerServiceOSDiskPtrInput {
	return (*containerServiceOSDiskPtrType)(v)
}

func (*containerServiceOSDiskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceOSDisk)(nil)).Elem()
}

func (i *containerServiceOSDiskPtrType) ToContainerServiceOSDiskPtrOutput() ContainerServiceOSDiskPtrOutput {
	return i.ToContainerServiceOSDiskPtrOutputWithContext(context.Background())
}

func (i *containerServiceOSDiskPtrType) ToContainerServiceOSDiskPtrOutputWithContext(ctx context.Context) ContainerServiceOSDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceOSDiskPtrOutput)
}

// OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
type ContainerServiceOSDiskOutput struct{ *pulumi.OutputState }

func (ContainerServiceOSDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceOSDisk)(nil)).Elem()
}

func (o ContainerServiceOSDiskOutput) ToContainerServiceOSDiskOutput() ContainerServiceOSDiskOutput {
	return o
}

func (o ContainerServiceOSDiskOutput) ToContainerServiceOSDiskOutputWithContext(ctx context.Context) ContainerServiceOSDiskOutput {
	return o
}

func (o ContainerServiceOSDiskOutput) ToContainerServiceOSDiskPtrOutput() ContainerServiceOSDiskPtrOutput {
	return o.ToContainerServiceOSDiskPtrOutputWithContext(context.Background())
}

func (o ContainerServiceOSDiskOutput) ToContainerServiceOSDiskPtrOutputWithContext(ctx context.Context) ContainerServiceOSDiskPtrOutput {
	return o.ApplyT(func(v ContainerServiceOSDisk) *ContainerServiceOSDisk {
		return &v
	}).(ContainerServiceOSDiskPtrOutput)
}

type ContainerServiceOSDiskPtrOutput struct{ *pulumi.OutputState }

func (ContainerServiceOSDiskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceOSDisk)(nil)).Elem()
}

func (o ContainerServiceOSDiskPtrOutput) ToContainerServiceOSDiskPtrOutput() ContainerServiceOSDiskPtrOutput {
	return o
}

func (o ContainerServiceOSDiskPtrOutput) ToContainerServiceOSDiskPtrOutputWithContext(ctx context.Context) ContainerServiceOSDiskPtrOutput {
	return o
}

func (o ContainerServiceOSDiskPtrOutput) Elem() ContainerServiceOSDiskOutput {
	return o.ApplyT(func(v *ContainerServiceOSDisk) ContainerServiceOSDisk { return *v }).(ContainerServiceOSDiskOutput)
}

// OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
type ContainerServiceOSDiskResponse struct {
}

// ContainerServiceOSDiskResponseInput is an input type that accepts ContainerServiceOSDiskResponseArgs and ContainerServiceOSDiskResponseOutput values.
// You can construct a concrete instance of `ContainerServiceOSDiskResponseInput` via:
//
//          ContainerServiceOSDiskResponseArgs{...}
type ContainerServiceOSDiskResponseInput interface {
	pulumi.Input

	ToContainerServiceOSDiskResponseOutput() ContainerServiceOSDiskResponseOutput
	ToContainerServiceOSDiskResponseOutputWithContext(context.Context) ContainerServiceOSDiskResponseOutput
}

// OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
type ContainerServiceOSDiskResponseArgs struct {
}

func (ContainerServiceOSDiskResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceOSDiskResponse)(nil)).Elem()
}

func (i ContainerServiceOSDiskResponseArgs) ToContainerServiceOSDiskResponseOutput() ContainerServiceOSDiskResponseOutput {
	return i.ToContainerServiceOSDiskResponseOutputWithContext(context.Background())
}

func (i ContainerServiceOSDiskResponseArgs) ToContainerServiceOSDiskResponseOutputWithContext(ctx context.Context) ContainerServiceOSDiskResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceOSDiskResponseOutput)
}

func (i ContainerServiceOSDiskResponseArgs) ToContainerServiceOSDiskResponsePtrOutput() ContainerServiceOSDiskResponsePtrOutput {
	return i.ToContainerServiceOSDiskResponsePtrOutputWithContext(context.Background())
}

func (i ContainerServiceOSDiskResponseArgs) ToContainerServiceOSDiskResponsePtrOutputWithContext(ctx context.Context) ContainerServiceOSDiskResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceOSDiskResponseOutput).ToContainerServiceOSDiskResponsePtrOutputWithContext(ctx)
}

// ContainerServiceOSDiskResponsePtrInput is an input type that accepts ContainerServiceOSDiskResponseArgs, ContainerServiceOSDiskResponsePtr and ContainerServiceOSDiskResponsePtrOutput values.
// You can construct a concrete instance of `ContainerServiceOSDiskResponsePtrInput` via:
//
//          ContainerServiceOSDiskResponseArgs{...}
//
//  or:
//
//          nil
type ContainerServiceOSDiskResponsePtrInput interface {
	pulumi.Input

	ToContainerServiceOSDiskResponsePtrOutput() ContainerServiceOSDiskResponsePtrOutput
	ToContainerServiceOSDiskResponsePtrOutputWithContext(context.Context) ContainerServiceOSDiskResponsePtrOutput
}

type containerServiceOSDiskResponsePtrType ContainerServiceOSDiskResponseArgs

func ContainerServiceOSDiskResponsePtr(v *ContainerServiceOSDiskResponseArgs) ContainerServiceOSDiskResponsePtrInput {
	return (*containerServiceOSDiskResponsePtrType)(v)
}

func (*containerServiceOSDiskResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceOSDiskResponse)(nil)).Elem()
}

func (i *containerServiceOSDiskResponsePtrType) ToContainerServiceOSDiskResponsePtrOutput() ContainerServiceOSDiskResponsePtrOutput {
	return i.ToContainerServiceOSDiskResponsePtrOutputWithContext(context.Background())
}

func (i *containerServiceOSDiskResponsePtrType) ToContainerServiceOSDiskResponsePtrOutputWithContext(ctx context.Context) ContainerServiceOSDiskResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceOSDiskResponsePtrOutput)
}

// OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
type ContainerServiceOSDiskResponseOutput struct{ *pulumi.OutputState }

func (ContainerServiceOSDiskResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceOSDiskResponse)(nil)).Elem()
}

func (o ContainerServiceOSDiskResponseOutput) ToContainerServiceOSDiskResponseOutput() ContainerServiceOSDiskResponseOutput {
	return o
}

func (o ContainerServiceOSDiskResponseOutput) ToContainerServiceOSDiskResponseOutputWithContext(ctx context.Context) ContainerServiceOSDiskResponseOutput {
	return o
}

func (o ContainerServiceOSDiskResponseOutput) ToContainerServiceOSDiskResponsePtrOutput() ContainerServiceOSDiskResponsePtrOutput {
	return o.ToContainerServiceOSDiskResponsePtrOutputWithContext(context.Background())
}

func (o ContainerServiceOSDiskResponseOutput) ToContainerServiceOSDiskResponsePtrOutputWithContext(ctx context.Context) ContainerServiceOSDiskResponsePtrOutput {
	return o.ApplyT(func(v ContainerServiceOSDiskResponse) *ContainerServiceOSDiskResponse {
		return &v
	}).(ContainerServiceOSDiskResponsePtrOutput)
}

type ContainerServiceOSDiskResponsePtrOutput struct{ *pulumi.OutputState }

func (ContainerServiceOSDiskResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceOSDiskResponse)(nil)).Elem()
}

func (o ContainerServiceOSDiskResponsePtrOutput) ToContainerServiceOSDiskResponsePtrOutput() ContainerServiceOSDiskResponsePtrOutput {
	return o
}

func (o ContainerServiceOSDiskResponsePtrOutput) ToContainerServiceOSDiskResponsePtrOutputWithContext(ctx context.Context) ContainerServiceOSDiskResponsePtrOutput {
	return o
}

func (o ContainerServiceOSDiskResponsePtrOutput) Elem() ContainerServiceOSDiskResponseOutput {
	return o.ApplyT(func(v *ContainerServiceOSDiskResponse) ContainerServiceOSDiskResponse { return *v }).(ContainerServiceOSDiskResponseOutput)
}

// Profile for the container service orchestrator.
type ContainerServiceOrchestratorProfile struct {
	// The orchestrator to use to manage container service cluster resources. Valid values are Kubernetes, Swarm, DCOS, DockerCE and Custom.
	OrchestratorType string `pulumi:"orchestratorType"`
	// The version of the orchestrator to use. You can specify the major.minor.patch part of the actual version.For example, you can specify version as "1.6.11".
	OrchestratorVersion *string `pulumi:"orchestratorVersion"`
}

// ContainerServiceOrchestratorProfileInput is an input type that accepts ContainerServiceOrchestratorProfileArgs and ContainerServiceOrchestratorProfileOutput values.
// You can construct a concrete instance of `ContainerServiceOrchestratorProfileInput` via:
//
//          ContainerServiceOrchestratorProfileArgs{...}
type ContainerServiceOrchestratorProfileInput interface {
	pulumi.Input

	ToContainerServiceOrchestratorProfileOutput() ContainerServiceOrchestratorProfileOutput
	ToContainerServiceOrchestratorProfileOutputWithContext(context.Context) ContainerServiceOrchestratorProfileOutput
}

// Profile for the container service orchestrator.
type ContainerServiceOrchestratorProfileArgs struct {
	// The orchestrator to use to manage container service cluster resources. Valid values are Kubernetes, Swarm, DCOS, DockerCE and Custom.
	OrchestratorType pulumi.StringInput `pulumi:"orchestratorType"`
	// The version of the orchestrator to use. You can specify the major.minor.patch part of the actual version.For example, you can specify version as "1.6.11".
	OrchestratorVersion pulumi.StringPtrInput `pulumi:"orchestratorVersion"`
}

func (ContainerServiceOrchestratorProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceOrchestratorProfile)(nil)).Elem()
}

func (i ContainerServiceOrchestratorProfileArgs) ToContainerServiceOrchestratorProfileOutput() ContainerServiceOrchestratorProfileOutput {
	return i.ToContainerServiceOrchestratorProfileOutputWithContext(context.Background())
}

func (i ContainerServiceOrchestratorProfileArgs) ToContainerServiceOrchestratorProfileOutputWithContext(ctx context.Context) ContainerServiceOrchestratorProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceOrchestratorProfileOutput)
}

func (i ContainerServiceOrchestratorProfileArgs) ToContainerServiceOrchestratorProfilePtrOutput() ContainerServiceOrchestratorProfilePtrOutput {
	return i.ToContainerServiceOrchestratorProfilePtrOutputWithContext(context.Background())
}

func (i ContainerServiceOrchestratorProfileArgs) ToContainerServiceOrchestratorProfilePtrOutputWithContext(ctx context.Context) ContainerServiceOrchestratorProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceOrchestratorProfileOutput).ToContainerServiceOrchestratorProfilePtrOutputWithContext(ctx)
}

// ContainerServiceOrchestratorProfilePtrInput is an input type that accepts ContainerServiceOrchestratorProfileArgs, ContainerServiceOrchestratorProfilePtr and ContainerServiceOrchestratorProfilePtrOutput values.
// You can construct a concrete instance of `ContainerServiceOrchestratorProfilePtrInput` via:
//
//          ContainerServiceOrchestratorProfileArgs{...}
//
//  or:
//
//          nil
type ContainerServiceOrchestratorProfilePtrInput interface {
	pulumi.Input

	ToContainerServiceOrchestratorProfilePtrOutput() ContainerServiceOrchestratorProfilePtrOutput
	ToContainerServiceOrchestratorProfilePtrOutputWithContext(context.Context) ContainerServiceOrchestratorProfilePtrOutput
}

type containerServiceOrchestratorProfilePtrType ContainerServiceOrchestratorProfileArgs

func ContainerServiceOrchestratorProfilePtr(v *ContainerServiceOrchestratorProfileArgs) ContainerServiceOrchestratorProfilePtrInput {
	return (*containerServiceOrchestratorProfilePtrType)(v)
}

func (*containerServiceOrchestratorProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceOrchestratorProfile)(nil)).Elem()
}

func (i *containerServiceOrchestratorProfilePtrType) ToContainerServiceOrchestratorProfilePtrOutput() ContainerServiceOrchestratorProfilePtrOutput {
	return i.ToContainerServiceOrchestratorProfilePtrOutputWithContext(context.Background())
}

func (i *containerServiceOrchestratorProfilePtrType) ToContainerServiceOrchestratorProfilePtrOutputWithContext(ctx context.Context) ContainerServiceOrchestratorProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceOrchestratorProfilePtrOutput)
}

// Profile for the container service orchestrator.
type ContainerServiceOrchestratorProfileOutput struct{ *pulumi.OutputState }

func (ContainerServiceOrchestratorProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceOrchestratorProfile)(nil)).Elem()
}

func (o ContainerServiceOrchestratorProfileOutput) ToContainerServiceOrchestratorProfileOutput() ContainerServiceOrchestratorProfileOutput {
	return o
}

func (o ContainerServiceOrchestratorProfileOutput) ToContainerServiceOrchestratorProfileOutputWithContext(ctx context.Context) ContainerServiceOrchestratorProfileOutput {
	return o
}

func (o ContainerServiceOrchestratorProfileOutput) ToContainerServiceOrchestratorProfilePtrOutput() ContainerServiceOrchestratorProfilePtrOutput {
	return o.ToContainerServiceOrchestratorProfilePtrOutputWithContext(context.Background())
}

func (o ContainerServiceOrchestratorProfileOutput) ToContainerServiceOrchestratorProfilePtrOutputWithContext(ctx context.Context) ContainerServiceOrchestratorProfilePtrOutput {
	return o.ApplyT(func(v ContainerServiceOrchestratorProfile) *ContainerServiceOrchestratorProfile {
		return &v
	}).(ContainerServiceOrchestratorProfilePtrOutput)
}

// The orchestrator to use to manage container service cluster resources. Valid values are Kubernetes, Swarm, DCOS, DockerCE and Custom.
func (o ContainerServiceOrchestratorProfileOutput) OrchestratorType() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerServiceOrchestratorProfile) string { return v.OrchestratorType }).(pulumi.StringOutput)
}

// The version of the orchestrator to use. You can specify the major.minor.patch part of the actual version.For example, you can specify version as "1.6.11".
func (o ContainerServiceOrchestratorProfileOutput) OrchestratorVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceOrchestratorProfile) *string { return v.OrchestratorVersion }).(pulumi.StringPtrOutput)
}

type ContainerServiceOrchestratorProfilePtrOutput struct{ *pulumi.OutputState }

func (ContainerServiceOrchestratorProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceOrchestratorProfile)(nil)).Elem()
}

func (o ContainerServiceOrchestratorProfilePtrOutput) ToContainerServiceOrchestratorProfilePtrOutput() ContainerServiceOrchestratorProfilePtrOutput {
	return o
}

func (o ContainerServiceOrchestratorProfilePtrOutput) ToContainerServiceOrchestratorProfilePtrOutputWithContext(ctx context.Context) ContainerServiceOrchestratorProfilePtrOutput {
	return o
}

func (o ContainerServiceOrchestratorProfilePtrOutput) Elem() ContainerServiceOrchestratorProfileOutput {
	return o.ApplyT(func(v *ContainerServiceOrchestratorProfile) ContainerServiceOrchestratorProfile { return *v }).(ContainerServiceOrchestratorProfileOutput)
}

// The orchestrator to use to manage container service cluster resources. Valid values are Kubernetes, Swarm, DCOS, DockerCE and Custom.
func (o ContainerServiceOrchestratorProfilePtrOutput) OrchestratorType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceOrchestratorProfile) *string {
		if v == nil {
			return nil
		}
		return &v.OrchestratorType
	}).(pulumi.StringPtrOutput)
}

// The version of the orchestrator to use. You can specify the major.minor.patch part of the actual version.For example, you can specify version as "1.6.11".
func (o ContainerServiceOrchestratorProfilePtrOutput) OrchestratorVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceOrchestratorProfile) *string {
		if v == nil {
			return nil
		}
		return v.OrchestratorVersion
	}).(pulumi.StringPtrOutput)
}

// Profile for the container service orchestrator.
type ContainerServiceOrchestratorProfileResponse struct {
	// The orchestrator to use to manage container service cluster resources. Valid values are Kubernetes, Swarm, DCOS, DockerCE and Custom.
	OrchestratorType string `pulumi:"orchestratorType"`
	// The version of the orchestrator to use. You can specify the major.minor.patch part of the actual version.For example, you can specify version as "1.6.11".
	OrchestratorVersion *string `pulumi:"orchestratorVersion"`
}

// ContainerServiceOrchestratorProfileResponseInput is an input type that accepts ContainerServiceOrchestratorProfileResponseArgs and ContainerServiceOrchestratorProfileResponseOutput values.
// You can construct a concrete instance of `ContainerServiceOrchestratorProfileResponseInput` via:
//
//          ContainerServiceOrchestratorProfileResponseArgs{...}
type ContainerServiceOrchestratorProfileResponseInput interface {
	pulumi.Input

	ToContainerServiceOrchestratorProfileResponseOutput() ContainerServiceOrchestratorProfileResponseOutput
	ToContainerServiceOrchestratorProfileResponseOutputWithContext(context.Context) ContainerServiceOrchestratorProfileResponseOutput
}

// Profile for the container service orchestrator.
type ContainerServiceOrchestratorProfileResponseArgs struct {
	// The orchestrator to use to manage container service cluster resources. Valid values are Kubernetes, Swarm, DCOS, DockerCE and Custom.
	OrchestratorType pulumi.StringInput `pulumi:"orchestratorType"`
	// The version of the orchestrator to use. You can specify the major.minor.patch part of the actual version.For example, you can specify version as "1.6.11".
	OrchestratorVersion pulumi.StringPtrInput `pulumi:"orchestratorVersion"`
}

func (ContainerServiceOrchestratorProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceOrchestratorProfileResponse)(nil)).Elem()
}

func (i ContainerServiceOrchestratorProfileResponseArgs) ToContainerServiceOrchestratorProfileResponseOutput() ContainerServiceOrchestratorProfileResponseOutput {
	return i.ToContainerServiceOrchestratorProfileResponseOutputWithContext(context.Background())
}

func (i ContainerServiceOrchestratorProfileResponseArgs) ToContainerServiceOrchestratorProfileResponseOutputWithContext(ctx context.Context) ContainerServiceOrchestratorProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceOrchestratorProfileResponseOutput)
}

func (i ContainerServiceOrchestratorProfileResponseArgs) ToContainerServiceOrchestratorProfileResponsePtrOutput() ContainerServiceOrchestratorProfileResponsePtrOutput {
	return i.ToContainerServiceOrchestratorProfileResponsePtrOutputWithContext(context.Background())
}

func (i ContainerServiceOrchestratorProfileResponseArgs) ToContainerServiceOrchestratorProfileResponsePtrOutputWithContext(ctx context.Context) ContainerServiceOrchestratorProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceOrchestratorProfileResponseOutput).ToContainerServiceOrchestratorProfileResponsePtrOutputWithContext(ctx)
}

// ContainerServiceOrchestratorProfileResponsePtrInput is an input type that accepts ContainerServiceOrchestratorProfileResponseArgs, ContainerServiceOrchestratorProfileResponsePtr and ContainerServiceOrchestratorProfileResponsePtrOutput values.
// You can construct a concrete instance of `ContainerServiceOrchestratorProfileResponsePtrInput` via:
//
//          ContainerServiceOrchestratorProfileResponseArgs{...}
//
//  or:
//
//          nil
type ContainerServiceOrchestratorProfileResponsePtrInput interface {
	pulumi.Input

	ToContainerServiceOrchestratorProfileResponsePtrOutput() ContainerServiceOrchestratorProfileResponsePtrOutput
	ToContainerServiceOrchestratorProfileResponsePtrOutputWithContext(context.Context) ContainerServiceOrchestratorProfileResponsePtrOutput
}

type containerServiceOrchestratorProfileResponsePtrType ContainerServiceOrchestratorProfileResponseArgs

func ContainerServiceOrchestratorProfileResponsePtr(v *ContainerServiceOrchestratorProfileResponseArgs) ContainerServiceOrchestratorProfileResponsePtrInput {
	return (*containerServiceOrchestratorProfileResponsePtrType)(v)
}

func (*containerServiceOrchestratorProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceOrchestratorProfileResponse)(nil)).Elem()
}

func (i *containerServiceOrchestratorProfileResponsePtrType) ToContainerServiceOrchestratorProfileResponsePtrOutput() ContainerServiceOrchestratorProfileResponsePtrOutput {
	return i.ToContainerServiceOrchestratorProfileResponsePtrOutputWithContext(context.Background())
}

func (i *containerServiceOrchestratorProfileResponsePtrType) ToContainerServiceOrchestratorProfileResponsePtrOutputWithContext(ctx context.Context) ContainerServiceOrchestratorProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceOrchestratorProfileResponsePtrOutput)
}

// Profile for the container service orchestrator.
type ContainerServiceOrchestratorProfileResponseOutput struct{ *pulumi.OutputState }

func (ContainerServiceOrchestratorProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceOrchestratorProfileResponse)(nil)).Elem()
}

func (o ContainerServiceOrchestratorProfileResponseOutput) ToContainerServiceOrchestratorProfileResponseOutput() ContainerServiceOrchestratorProfileResponseOutput {
	return o
}

func (o ContainerServiceOrchestratorProfileResponseOutput) ToContainerServiceOrchestratorProfileResponseOutputWithContext(ctx context.Context) ContainerServiceOrchestratorProfileResponseOutput {
	return o
}

func (o ContainerServiceOrchestratorProfileResponseOutput) ToContainerServiceOrchestratorProfileResponsePtrOutput() ContainerServiceOrchestratorProfileResponsePtrOutput {
	return o.ToContainerServiceOrchestratorProfileResponsePtrOutputWithContext(context.Background())
}

func (o ContainerServiceOrchestratorProfileResponseOutput) ToContainerServiceOrchestratorProfileResponsePtrOutputWithContext(ctx context.Context) ContainerServiceOrchestratorProfileResponsePtrOutput {
	return o.ApplyT(func(v ContainerServiceOrchestratorProfileResponse) *ContainerServiceOrchestratorProfileResponse {
		return &v
	}).(ContainerServiceOrchestratorProfileResponsePtrOutput)
}

// The orchestrator to use to manage container service cluster resources. Valid values are Kubernetes, Swarm, DCOS, DockerCE and Custom.
func (o ContainerServiceOrchestratorProfileResponseOutput) OrchestratorType() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerServiceOrchestratorProfileResponse) string { return v.OrchestratorType }).(pulumi.StringOutput)
}

// The version of the orchestrator to use. You can specify the major.minor.patch part of the actual version.For example, you can specify version as "1.6.11".
func (o ContainerServiceOrchestratorProfileResponseOutput) OrchestratorVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceOrchestratorProfileResponse) *string { return v.OrchestratorVersion }).(pulumi.StringPtrOutput)
}

type ContainerServiceOrchestratorProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ContainerServiceOrchestratorProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceOrchestratorProfileResponse)(nil)).Elem()
}

func (o ContainerServiceOrchestratorProfileResponsePtrOutput) ToContainerServiceOrchestratorProfileResponsePtrOutput() ContainerServiceOrchestratorProfileResponsePtrOutput {
	return o
}

func (o ContainerServiceOrchestratorProfileResponsePtrOutput) ToContainerServiceOrchestratorProfileResponsePtrOutputWithContext(ctx context.Context) ContainerServiceOrchestratorProfileResponsePtrOutput {
	return o
}

func (o ContainerServiceOrchestratorProfileResponsePtrOutput) Elem() ContainerServiceOrchestratorProfileResponseOutput {
	return o.ApplyT(func(v *ContainerServiceOrchestratorProfileResponse) ContainerServiceOrchestratorProfileResponse {
		return *v
	}).(ContainerServiceOrchestratorProfileResponseOutput)
}

// The orchestrator to use to manage container service cluster resources. Valid values are Kubernetes, Swarm, DCOS, DockerCE and Custom.
func (o ContainerServiceOrchestratorProfileResponsePtrOutput) OrchestratorType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceOrchestratorProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.OrchestratorType
	}).(pulumi.StringPtrOutput)
}

// The version of the orchestrator to use. You can specify the major.minor.patch part of the actual version.For example, you can specify version as "1.6.11".
func (o ContainerServiceOrchestratorProfileResponsePtrOutput) OrchestratorVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceOrchestratorProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.OrchestratorVersion
	}).(pulumi.StringPtrOutput)
}

// Properties of the container service.
type ContainerServiceProperties struct {
	// Properties of the agent pool.
	AgentPoolProfiles []ContainerServiceAgentPoolProfile `pulumi:"agentPoolProfiles"`
	// Properties to configure a custom container service cluster.
	CustomProfile *ContainerServiceCustomProfile `pulumi:"customProfile"`
	// Profile for diagnostics in the container service cluster.
	DiagnosticsProfile *ContainerServiceDiagnosticsProfile `pulumi:"diagnosticsProfile"`
	// Profile for Linux VMs in the container service cluster.
	LinuxProfile ContainerServiceLinuxProfile `pulumi:"linuxProfile"`
	// Profile for the container service master.
	MasterProfile ContainerServiceMasterProfile `pulumi:"masterProfile"`
	// Profile for the container service orchestrator.
	OrchestratorProfile ContainerServiceOrchestratorProfile `pulumi:"orchestratorProfile"`
	// Information about a service principal identity for the cluster to use for manipulating Azure APIs. Exact one of secret or keyVaultSecretRef need to be specified.
	ServicePrincipalProfile *ContainerServiceServicePrincipalProfile `pulumi:"servicePrincipalProfile"`
	// Profile for Windows VMs in the container service cluster.
	WindowsProfile *ContainerServiceWindowsProfile `pulumi:"windowsProfile"`
}

// ContainerServicePropertiesInput is an input type that accepts ContainerServicePropertiesArgs and ContainerServicePropertiesOutput values.
// You can construct a concrete instance of `ContainerServicePropertiesInput` via:
//
//          ContainerServicePropertiesArgs{...}
type ContainerServicePropertiesInput interface {
	pulumi.Input

	ToContainerServicePropertiesOutput() ContainerServicePropertiesOutput
	ToContainerServicePropertiesOutputWithContext(context.Context) ContainerServicePropertiesOutput
}

// Properties of the container service.
type ContainerServicePropertiesArgs struct {
	// Properties of the agent pool.
	AgentPoolProfiles ContainerServiceAgentPoolProfileArrayInput `pulumi:"agentPoolProfiles"`
	// Properties to configure a custom container service cluster.
	CustomProfile ContainerServiceCustomProfilePtrInput `pulumi:"customProfile"`
	// Profile for diagnostics in the container service cluster.
	DiagnosticsProfile ContainerServiceDiagnosticsProfilePtrInput `pulumi:"diagnosticsProfile"`
	// Profile for Linux VMs in the container service cluster.
	LinuxProfile ContainerServiceLinuxProfileInput `pulumi:"linuxProfile"`
	// Profile for the container service master.
	MasterProfile ContainerServiceMasterProfileInput `pulumi:"masterProfile"`
	// Profile for the container service orchestrator.
	OrchestratorProfile ContainerServiceOrchestratorProfileInput `pulumi:"orchestratorProfile"`
	// Information about a service principal identity for the cluster to use for manipulating Azure APIs. Exact one of secret or keyVaultSecretRef need to be specified.
	ServicePrincipalProfile ContainerServiceServicePrincipalProfilePtrInput `pulumi:"servicePrincipalProfile"`
	// Profile for Windows VMs in the container service cluster.
	WindowsProfile ContainerServiceWindowsProfilePtrInput `pulumi:"windowsProfile"`
}

func (ContainerServicePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceProperties)(nil)).Elem()
}

func (i ContainerServicePropertiesArgs) ToContainerServicePropertiesOutput() ContainerServicePropertiesOutput {
	return i.ToContainerServicePropertiesOutputWithContext(context.Background())
}

func (i ContainerServicePropertiesArgs) ToContainerServicePropertiesOutputWithContext(ctx context.Context) ContainerServicePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServicePropertiesOutput)
}

func (i ContainerServicePropertiesArgs) ToContainerServicePropertiesPtrOutput() ContainerServicePropertiesPtrOutput {
	return i.ToContainerServicePropertiesPtrOutputWithContext(context.Background())
}

func (i ContainerServicePropertiesArgs) ToContainerServicePropertiesPtrOutputWithContext(ctx context.Context) ContainerServicePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServicePropertiesOutput).ToContainerServicePropertiesPtrOutputWithContext(ctx)
}

// ContainerServicePropertiesPtrInput is an input type that accepts ContainerServicePropertiesArgs, ContainerServicePropertiesPtr and ContainerServicePropertiesPtrOutput values.
// You can construct a concrete instance of `ContainerServicePropertiesPtrInput` via:
//
//          ContainerServicePropertiesArgs{...}
//
//  or:
//
//          nil
type ContainerServicePropertiesPtrInput interface {
	pulumi.Input

	ToContainerServicePropertiesPtrOutput() ContainerServicePropertiesPtrOutput
	ToContainerServicePropertiesPtrOutputWithContext(context.Context) ContainerServicePropertiesPtrOutput
}

type containerServicePropertiesPtrType ContainerServicePropertiesArgs

func ContainerServicePropertiesPtr(v *ContainerServicePropertiesArgs) ContainerServicePropertiesPtrInput {
	return (*containerServicePropertiesPtrType)(v)
}

func (*containerServicePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceProperties)(nil)).Elem()
}

func (i *containerServicePropertiesPtrType) ToContainerServicePropertiesPtrOutput() ContainerServicePropertiesPtrOutput {
	return i.ToContainerServicePropertiesPtrOutputWithContext(context.Background())
}

func (i *containerServicePropertiesPtrType) ToContainerServicePropertiesPtrOutputWithContext(ctx context.Context) ContainerServicePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServicePropertiesPtrOutput)
}

// Properties of the container service.
type ContainerServicePropertiesOutput struct{ *pulumi.OutputState }

func (ContainerServicePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceProperties)(nil)).Elem()
}

func (o ContainerServicePropertiesOutput) ToContainerServicePropertiesOutput() ContainerServicePropertiesOutput {
	return o
}

func (o ContainerServicePropertiesOutput) ToContainerServicePropertiesOutputWithContext(ctx context.Context) ContainerServicePropertiesOutput {
	return o
}

func (o ContainerServicePropertiesOutput) ToContainerServicePropertiesPtrOutput() ContainerServicePropertiesPtrOutput {
	return o.ToContainerServicePropertiesPtrOutputWithContext(context.Background())
}

func (o ContainerServicePropertiesOutput) ToContainerServicePropertiesPtrOutputWithContext(ctx context.Context) ContainerServicePropertiesPtrOutput {
	return o.ApplyT(func(v ContainerServiceProperties) *ContainerServiceProperties {
		return &v
	}).(ContainerServicePropertiesPtrOutput)
}

// Properties of the agent pool.
func (o ContainerServicePropertiesOutput) AgentPoolProfiles() ContainerServiceAgentPoolProfileArrayOutput {
	return o.ApplyT(func(v ContainerServiceProperties) []ContainerServiceAgentPoolProfile { return v.AgentPoolProfiles }).(ContainerServiceAgentPoolProfileArrayOutput)
}

// Properties to configure a custom container service cluster.
func (o ContainerServicePropertiesOutput) CustomProfile() ContainerServiceCustomProfilePtrOutput {
	return o.ApplyT(func(v ContainerServiceProperties) *ContainerServiceCustomProfile { return v.CustomProfile }).(ContainerServiceCustomProfilePtrOutput)
}

// Profile for diagnostics in the container service cluster.
func (o ContainerServicePropertiesOutput) DiagnosticsProfile() ContainerServiceDiagnosticsProfilePtrOutput {
	return o.ApplyT(func(v ContainerServiceProperties) *ContainerServiceDiagnosticsProfile { return v.DiagnosticsProfile }).(ContainerServiceDiagnosticsProfilePtrOutput)
}

// Profile for Linux VMs in the container service cluster.
func (o ContainerServicePropertiesOutput) LinuxProfile() ContainerServiceLinuxProfileOutput {
	return o.ApplyT(func(v ContainerServiceProperties) ContainerServiceLinuxProfile { return v.LinuxProfile }).(ContainerServiceLinuxProfileOutput)
}

// Profile for the container service master.
func (o ContainerServicePropertiesOutput) MasterProfile() ContainerServiceMasterProfileOutput {
	return o.ApplyT(func(v ContainerServiceProperties) ContainerServiceMasterProfile { return v.MasterProfile }).(ContainerServiceMasterProfileOutput)
}

// Profile for the container service orchestrator.
func (o ContainerServicePropertiesOutput) OrchestratorProfile() ContainerServiceOrchestratorProfileOutput {
	return o.ApplyT(func(v ContainerServiceProperties) ContainerServiceOrchestratorProfile { return v.OrchestratorProfile }).(ContainerServiceOrchestratorProfileOutput)
}

// Information about a service principal identity for the cluster to use for manipulating Azure APIs. Exact one of secret or keyVaultSecretRef need to be specified.
func (o ContainerServicePropertiesOutput) ServicePrincipalProfile() ContainerServiceServicePrincipalProfilePtrOutput {
	return o.ApplyT(func(v ContainerServiceProperties) *ContainerServiceServicePrincipalProfile {
		return v.ServicePrincipalProfile
	}).(ContainerServiceServicePrincipalProfilePtrOutput)
}

// Profile for Windows VMs in the container service cluster.
func (o ContainerServicePropertiesOutput) WindowsProfile() ContainerServiceWindowsProfilePtrOutput {
	return o.ApplyT(func(v ContainerServiceProperties) *ContainerServiceWindowsProfile { return v.WindowsProfile }).(ContainerServiceWindowsProfilePtrOutput)
}

type ContainerServicePropertiesPtrOutput struct{ *pulumi.OutputState }

func (ContainerServicePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceProperties)(nil)).Elem()
}

func (o ContainerServicePropertiesPtrOutput) ToContainerServicePropertiesPtrOutput() ContainerServicePropertiesPtrOutput {
	return o
}

func (o ContainerServicePropertiesPtrOutput) ToContainerServicePropertiesPtrOutputWithContext(ctx context.Context) ContainerServicePropertiesPtrOutput {
	return o
}

func (o ContainerServicePropertiesPtrOutput) Elem() ContainerServicePropertiesOutput {
	return o.ApplyT(func(v *ContainerServiceProperties) ContainerServiceProperties { return *v }).(ContainerServicePropertiesOutput)
}

// Properties of the agent pool.
func (o ContainerServicePropertiesPtrOutput) AgentPoolProfiles() ContainerServiceAgentPoolProfileArrayOutput {
	return o.ApplyT(func(v *ContainerServiceProperties) []ContainerServiceAgentPoolProfile {
		if v == nil {
			return nil
		}
		return v.AgentPoolProfiles
	}).(ContainerServiceAgentPoolProfileArrayOutput)
}

// Properties to configure a custom container service cluster.
func (o ContainerServicePropertiesPtrOutput) CustomProfile() ContainerServiceCustomProfilePtrOutput {
	return o.ApplyT(func(v *ContainerServiceProperties) *ContainerServiceCustomProfile {
		if v == nil {
			return nil
		}
		return v.CustomProfile
	}).(ContainerServiceCustomProfilePtrOutput)
}

// Profile for diagnostics in the container service cluster.
func (o ContainerServicePropertiesPtrOutput) DiagnosticsProfile() ContainerServiceDiagnosticsProfilePtrOutput {
	return o.ApplyT(func(v *ContainerServiceProperties) *ContainerServiceDiagnosticsProfile {
		if v == nil {
			return nil
		}
		return v.DiagnosticsProfile
	}).(ContainerServiceDiagnosticsProfilePtrOutput)
}

// Profile for Linux VMs in the container service cluster.
func (o ContainerServicePropertiesPtrOutput) LinuxProfile() ContainerServiceLinuxProfilePtrOutput {
	return o.ApplyT(func(v *ContainerServiceProperties) *ContainerServiceLinuxProfile {
		if v == nil {
			return nil
		}
		return &v.LinuxProfile
	}).(ContainerServiceLinuxProfilePtrOutput)
}

// Profile for the container service master.
func (o ContainerServicePropertiesPtrOutput) MasterProfile() ContainerServiceMasterProfilePtrOutput {
	return o.ApplyT(func(v *ContainerServiceProperties) *ContainerServiceMasterProfile {
		if v == nil {
			return nil
		}
		return &v.MasterProfile
	}).(ContainerServiceMasterProfilePtrOutput)
}

// Profile for the container service orchestrator.
func (o ContainerServicePropertiesPtrOutput) OrchestratorProfile() ContainerServiceOrchestratorProfilePtrOutput {
	return o.ApplyT(func(v *ContainerServiceProperties) *ContainerServiceOrchestratorProfile {
		if v == nil {
			return nil
		}
		return &v.OrchestratorProfile
	}).(ContainerServiceOrchestratorProfilePtrOutput)
}

// Information about a service principal identity for the cluster to use for manipulating Azure APIs. Exact one of secret or keyVaultSecretRef need to be specified.
func (o ContainerServicePropertiesPtrOutput) ServicePrincipalProfile() ContainerServiceServicePrincipalProfilePtrOutput {
	return o.ApplyT(func(v *ContainerServiceProperties) *ContainerServiceServicePrincipalProfile {
		if v == nil {
			return nil
		}
		return v.ServicePrincipalProfile
	}).(ContainerServiceServicePrincipalProfilePtrOutput)
}

// Profile for Windows VMs in the container service cluster.
func (o ContainerServicePropertiesPtrOutput) WindowsProfile() ContainerServiceWindowsProfilePtrOutput {
	return o.ApplyT(func(v *ContainerServiceProperties) *ContainerServiceWindowsProfile {
		if v == nil {
			return nil
		}
		return v.WindowsProfile
	}).(ContainerServiceWindowsProfilePtrOutput)
}

// Properties of the container service.
type ContainerServicePropertiesResponse struct {
	// Properties of the agent pool.
	AgentPoolProfiles []ContainerServiceAgentPoolProfileResponse `pulumi:"agentPoolProfiles"`
	// Properties to configure a custom container service cluster.
	CustomProfile *ContainerServiceCustomProfileResponse `pulumi:"customProfile"`
	// Profile for diagnostics in the container service cluster.
	DiagnosticsProfile *ContainerServiceDiagnosticsProfileResponse `pulumi:"diagnosticsProfile"`
	// Profile for Linux VMs in the container service cluster.
	LinuxProfile ContainerServiceLinuxProfileResponse `pulumi:"linuxProfile"`
	// Profile for the container service master.
	MasterProfile ContainerServiceMasterProfileResponse `pulumi:"masterProfile"`
	// Profile for the container service orchestrator.
	OrchestratorProfile ContainerServiceOrchestratorProfileResponse `pulumi:"orchestratorProfile"`
	// The current deployment or provisioning state, which only appears in the response.
	ProvisioningState string `pulumi:"provisioningState"`
	// Information about a service principal identity for the cluster to use for manipulating Azure APIs. Exact one of secret or keyVaultSecretRef need to be specified.
	ServicePrincipalProfile *ContainerServiceServicePrincipalProfileResponse `pulumi:"servicePrincipalProfile"`
	// Profile for Windows VMs in the container service cluster.
	WindowsProfile *ContainerServiceWindowsProfileResponse `pulumi:"windowsProfile"`
}

// ContainerServicePropertiesResponseInput is an input type that accepts ContainerServicePropertiesResponseArgs and ContainerServicePropertiesResponseOutput values.
// You can construct a concrete instance of `ContainerServicePropertiesResponseInput` via:
//
//          ContainerServicePropertiesResponseArgs{...}
type ContainerServicePropertiesResponseInput interface {
	pulumi.Input

	ToContainerServicePropertiesResponseOutput() ContainerServicePropertiesResponseOutput
	ToContainerServicePropertiesResponseOutputWithContext(context.Context) ContainerServicePropertiesResponseOutput
}

// Properties of the container service.
type ContainerServicePropertiesResponseArgs struct {
	// Properties of the agent pool.
	AgentPoolProfiles ContainerServiceAgentPoolProfileResponseArrayInput `pulumi:"agentPoolProfiles"`
	// Properties to configure a custom container service cluster.
	CustomProfile ContainerServiceCustomProfileResponsePtrInput `pulumi:"customProfile"`
	// Profile for diagnostics in the container service cluster.
	DiagnosticsProfile ContainerServiceDiagnosticsProfileResponsePtrInput `pulumi:"diagnosticsProfile"`
	// Profile for Linux VMs in the container service cluster.
	LinuxProfile ContainerServiceLinuxProfileResponseInput `pulumi:"linuxProfile"`
	// Profile for the container service master.
	MasterProfile ContainerServiceMasterProfileResponseInput `pulumi:"masterProfile"`
	// Profile for the container service orchestrator.
	OrchestratorProfile ContainerServiceOrchestratorProfileResponseInput `pulumi:"orchestratorProfile"`
	// The current deployment or provisioning state, which only appears in the response.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Information about a service principal identity for the cluster to use for manipulating Azure APIs. Exact one of secret or keyVaultSecretRef need to be specified.
	ServicePrincipalProfile ContainerServiceServicePrincipalProfileResponsePtrInput `pulumi:"servicePrincipalProfile"`
	// Profile for Windows VMs in the container service cluster.
	WindowsProfile ContainerServiceWindowsProfileResponsePtrInput `pulumi:"windowsProfile"`
}

func (ContainerServicePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServicePropertiesResponse)(nil)).Elem()
}

func (i ContainerServicePropertiesResponseArgs) ToContainerServicePropertiesResponseOutput() ContainerServicePropertiesResponseOutput {
	return i.ToContainerServicePropertiesResponseOutputWithContext(context.Background())
}

func (i ContainerServicePropertiesResponseArgs) ToContainerServicePropertiesResponseOutputWithContext(ctx context.Context) ContainerServicePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServicePropertiesResponseOutput)
}

func (i ContainerServicePropertiesResponseArgs) ToContainerServicePropertiesResponsePtrOutput() ContainerServicePropertiesResponsePtrOutput {
	return i.ToContainerServicePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ContainerServicePropertiesResponseArgs) ToContainerServicePropertiesResponsePtrOutputWithContext(ctx context.Context) ContainerServicePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServicePropertiesResponseOutput).ToContainerServicePropertiesResponsePtrOutputWithContext(ctx)
}

// ContainerServicePropertiesResponsePtrInput is an input type that accepts ContainerServicePropertiesResponseArgs, ContainerServicePropertiesResponsePtr and ContainerServicePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ContainerServicePropertiesResponsePtrInput` via:
//
//          ContainerServicePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ContainerServicePropertiesResponsePtrInput interface {
	pulumi.Input

	ToContainerServicePropertiesResponsePtrOutput() ContainerServicePropertiesResponsePtrOutput
	ToContainerServicePropertiesResponsePtrOutputWithContext(context.Context) ContainerServicePropertiesResponsePtrOutput
}

type containerServicePropertiesResponsePtrType ContainerServicePropertiesResponseArgs

func ContainerServicePropertiesResponsePtr(v *ContainerServicePropertiesResponseArgs) ContainerServicePropertiesResponsePtrInput {
	return (*containerServicePropertiesResponsePtrType)(v)
}

func (*containerServicePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServicePropertiesResponse)(nil)).Elem()
}

func (i *containerServicePropertiesResponsePtrType) ToContainerServicePropertiesResponsePtrOutput() ContainerServicePropertiesResponsePtrOutput {
	return i.ToContainerServicePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *containerServicePropertiesResponsePtrType) ToContainerServicePropertiesResponsePtrOutputWithContext(ctx context.Context) ContainerServicePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServicePropertiesResponsePtrOutput)
}

// Properties of the container service.
type ContainerServicePropertiesResponseOutput struct{ *pulumi.OutputState }

func (ContainerServicePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServicePropertiesResponse)(nil)).Elem()
}

func (o ContainerServicePropertiesResponseOutput) ToContainerServicePropertiesResponseOutput() ContainerServicePropertiesResponseOutput {
	return o
}

func (o ContainerServicePropertiesResponseOutput) ToContainerServicePropertiesResponseOutputWithContext(ctx context.Context) ContainerServicePropertiesResponseOutput {
	return o
}

func (o ContainerServicePropertiesResponseOutput) ToContainerServicePropertiesResponsePtrOutput() ContainerServicePropertiesResponsePtrOutput {
	return o.ToContainerServicePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ContainerServicePropertiesResponseOutput) ToContainerServicePropertiesResponsePtrOutputWithContext(ctx context.Context) ContainerServicePropertiesResponsePtrOutput {
	return o.ApplyT(func(v ContainerServicePropertiesResponse) *ContainerServicePropertiesResponse {
		return &v
	}).(ContainerServicePropertiesResponsePtrOutput)
}

// Properties of the agent pool.
func (o ContainerServicePropertiesResponseOutput) AgentPoolProfiles() ContainerServiceAgentPoolProfileResponseArrayOutput {
	return o.ApplyT(func(v ContainerServicePropertiesResponse) []ContainerServiceAgentPoolProfileResponse {
		return v.AgentPoolProfiles
	}).(ContainerServiceAgentPoolProfileResponseArrayOutput)
}

// Properties to configure a custom container service cluster.
func (o ContainerServicePropertiesResponseOutput) CustomProfile() ContainerServiceCustomProfileResponsePtrOutput {
	return o.ApplyT(func(v ContainerServicePropertiesResponse) *ContainerServiceCustomProfileResponse {
		return v.CustomProfile
	}).(ContainerServiceCustomProfileResponsePtrOutput)
}

// Profile for diagnostics in the container service cluster.
func (o ContainerServicePropertiesResponseOutput) DiagnosticsProfile() ContainerServiceDiagnosticsProfileResponsePtrOutput {
	return o.ApplyT(func(v ContainerServicePropertiesResponse) *ContainerServiceDiagnosticsProfileResponse {
		return v.DiagnosticsProfile
	}).(ContainerServiceDiagnosticsProfileResponsePtrOutput)
}

// Profile for Linux VMs in the container service cluster.
func (o ContainerServicePropertiesResponseOutput) LinuxProfile() ContainerServiceLinuxProfileResponseOutput {
	return o.ApplyT(func(v ContainerServicePropertiesResponse) ContainerServiceLinuxProfileResponse { return v.LinuxProfile }).(ContainerServiceLinuxProfileResponseOutput)
}

// Profile for the container service master.
func (o ContainerServicePropertiesResponseOutput) MasterProfile() ContainerServiceMasterProfileResponseOutput {
	return o.ApplyT(func(v ContainerServicePropertiesResponse) ContainerServiceMasterProfileResponse {
		return v.MasterProfile
	}).(ContainerServiceMasterProfileResponseOutput)
}

// Profile for the container service orchestrator.
func (o ContainerServicePropertiesResponseOutput) OrchestratorProfile() ContainerServiceOrchestratorProfileResponseOutput {
	return o.ApplyT(func(v ContainerServicePropertiesResponse) ContainerServiceOrchestratorProfileResponse {
		return v.OrchestratorProfile
	}).(ContainerServiceOrchestratorProfileResponseOutput)
}

// The current deployment or provisioning state, which only appears in the response.
func (o ContainerServicePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerServicePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Information about a service principal identity for the cluster to use for manipulating Azure APIs. Exact one of secret or keyVaultSecretRef need to be specified.
func (o ContainerServicePropertiesResponseOutput) ServicePrincipalProfile() ContainerServiceServicePrincipalProfileResponsePtrOutput {
	return o.ApplyT(func(v ContainerServicePropertiesResponse) *ContainerServiceServicePrincipalProfileResponse {
		return v.ServicePrincipalProfile
	}).(ContainerServiceServicePrincipalProfileResponsePtrOutput)
}

// Profile for Windows VMs in the container service cluster.
func (o ContainerServicePropertiesResponseOutput) WindowsProfile() ContainerServiceWindowsProfileResponsePtrOutput {
	return o.ApplyT(func(v ContainerServicePropertiesResponse) *ContainerServiceWindowsProfileResponse {
		return v.WindowsProfile
	}).(ContainerServiceWindowsProfileResponsePtrOutput)
}

type ContainerServicePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ContainerServicePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServicePropertiesResponse)(nil)).Elem()
}

func (o ContainerServicePropertiesResponsePtrOutput) ToContainerServicePropertiesResponsePtrOutput() ContainerServicePropertiesResponsePtrOutput {
	return o
}

func (o ContainerServicePropertiesResponsePtrOutput) ToContainerServicePropertiesResponsePtrOutputWithContext(ctx context.Context) ContainerServicePropertiesResponsePtrOutput {
	return o
}

func (o ContainerServicePropertiesResponsePtrOutput) Elem() ContainerServicePropertiesResponseOutput {
	return o.ApplyT(func(v *ContainerServicePropertiesResponse) ContainerServicePropertiesResponse { return *v }).(ContainerServicePropertiesResponseOutput)
}

// Properties of the agent pool.
func (o ContainerServicePropertiesResponsePtrOutput) AgentPoolProfiles() ContainerServiceAgentPoolProfileResponseArrayOutput {
	return o.ApplyT(func(v *ContainerServicePropertiesResponse) []ContainerServiceAgentPoolProfileResponse {
		if v == nil {
			return nil
		}
		return v.AgentPoolProfiles
	}).(ContainerServiceAgentPoolProfileResponseArrayOutput)
}

// Properties to configure a custom container service cluster.
func (o ContainerServicePropertiesResponsePtrOutput) CustomProfile() ContainerServiceCustomProfileResponsePtrOutput {
	return o.ApplyT(func(v *ContainerServicePropertiesResponse) *ContainerServiceCustomProfileResponse {
		if v == nil {
			return nil
		}
		return v.CustomProfile
	}).(ContainerServiceCustomProfileResponsePtrOutput)
}

// Profile for diagnostics in the container service cluster.
func (o ContainerServicePropertiesResponsePtrOutput) DiagnosticsProfile() ContainerServiceDiagnosticsProfileResponsePtrOutput {
	return o.ApplyT(func(v *ContainerServicePropertiesResponse) *ContainerServiceDiagnosticsProfileResponse {
		if v == nil {
			return nil
		}
		return v.DiagnosticsProfile
	}).(ContainerServiceDiagnosticsProfileResponsePtrOutput)
}

// Profile for Linux VMs in the container service cluster.
func (o ContainerServicePropertiesResponsePtrOutput) LinuxProfile() ContainerServiceLinuxProfileResponsePtrOutput {
	return o.ApplyT(func(v *ContainerServicePropertiesResponse) *ContainerServiceLinuxProfileResponse {
		if v == nil {
			return nil
		}
		return &v.LinuxProfile
	}).(ContainerServiceLinuxProfileResponsePtrOutput)
}

// Profile for the container service master.
func (o ContainerServicePropertiesResponsePtrOutput) MasterProfile() ContainerServiceMasterProfileResponsePtrOutput {
	return o.ApplyT(func(v *ContainerServicePropertiesResponse) *ContainerServiceMasterProfileResponse {
		if v == nil {
			return nil
		}
		return &v.MasterProfile
	}).(ContainerServiceMasterProfileResponsePtrOutput)
}

// Profile for the container service orchestrator.
func (o ContainerServicePropertiesResponsePtrOutput) OrchestratorProfile() ContainerServiceOrchestratorProfileResponsePtrOutput {
	return o.ApplyT(func(v *ContainerServicePropertiesResponse) *ContainerServiceOrchestratorProfileResponse {
		if v == nil {
			return nil
		}
		return &v.OrchestratorProfile
	}).(ContainerServiceOrchestratorProfileResponsePtrOutput)
}

// The current deployment or provisioning state, which only appears in the response.
func (o ContainerServicePropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServicePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Information about a service principal identity for the cluster to use for manipulating Azure APIs. Exact one of secret or keyVaultSecretRef need to be specified.
func (o ContainerServicePropertiesResponsePtrOutput) ServicePrincipalProfile() ContainerServiceServicePrincipalProfileResponsePtrOutput {
	return o.ApplyT(func(v *ContainerServicePropertiesResponse) *ContainerServiceServicePrincipalProfileResponse {
		if v == nil {
			return nil
		}
		return v.ServicePrincipalProfile
	}).(ContainerServiceServicePrincipalProfileResponsePtrOutput)
}

// Profile for Windows VMs in the container service cluster.
func (o ContainerServicePropertiesResponsePtrOutput) WindowsProfile() ContainerServiceWindowsProfileResponsePtrOutput {
	return o.ApplyT(func(v *ContainerServicePropertiesResponse) *ContainerServiceWindowsProfileResponse {
		if v == nil {
			return nil
		}
		return v.WindowsProfile
	}).(ContainerServiceWindowsProfileResponsePtrOutput)
}

// Information about a service principal identity for the cluster to use for manipulating Azure APIs. Either secret or keyVaultSecretRef must be specified.
type ContainerServiceServicePrincipalProfile struct {
	// The ID for the service principal.
	ClientId string `pulumi:"clientId"`
	// Reference to a secret stored in Azure Key Vault.
	KeyVaultSecretRef *KeyVaultSecretRef `pulumi:"keyVaultSecretRef"`
	// The secret password associated with the service principal in plain text.
	Secret *string `pulumi:"secret"`
}

// ContainerServiceServicePrincipalProfileInput is an input type that accepts ContainerServiceServicePrincipalProfileArgs and ContainerServiceServicePrincipalProfileOutput values.
// You can construct a concrete instance of `ContainerServiceServicePrincipalProfileInput` via:
//
//          ContainerServiceServicePrincipalProfileArgs{...}
type ContainerServiceServicePrincipalProfileInput interface {
	pulumi.Input

	ToContainerServiceServicePrincipalProfileOutput() ContainerServiceServicePrincipalProfileOutput
	ToContainerServiceServicePrincipalProfileOutputWithContext(context.Context) ContainerServiceServicePrincipalProfileOutput
}

// Information about a service principal identity for the cluster to use for manipulating Azure APIs. Either secret or keyVaultSecretRef must be specified.
type ContainerServiceServicePrincipalProfileArgs struct {
	// The ID for the service principal.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// Reference to a secret stored in Azure Key Vault.
	KeyVaultSecretRef KeyVaultSecretRefPtrInput `pulumi:"keyVaultSecretRef"`
	// The secret password associated with the service principal in plain text.
	Secret pulumi.StringPtrInput `pulumi:"secret"`
}

func (ContainerServiceServicePrincipalProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceServicePrincipalProfile)(nil)).Elem()
}

func (i ContainerServiceServicePrincipalProfileArgs) ToContainerServiceServicePrincipalProfileOutput() ContainerServiceServicePrincipalProfileOutput {
	return i.ToContainerServiceServicePrincipalProfileOutputWithContext(context.Background())
}

func (i ContainerServiceServicePrincipalProfileArgs) ToContainerServiceServicePrincipalProfileOutputWithContext(ctx context.Context) ContainerServiceServicePrincipalProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceServicePrincipalProfileOutput)
}

func (i ContainerServiceServicePrincipalProfileArgs) ToContainerServiceServicePrincipalProfilePtrOutput() ContainerServiceServicePrincipalProfilePtrOutput {
	return i.ToContainerServiceServicePrincipalProfilePtrOutputWithContext(context.Background())
}

func (i ContainerServiceServicePrincipalProfileArgs) ToContainerServiceServicePrincipalProfilePtrOutputWithContext(ctx context.Context) ContainerServiceServicePrincipalProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceServicePrincipalProfileOutput).ToContainerServiceServicePrincipalProfilePtrOutputWithContext(ctx)
}

// ContainerServiceServicePrincipalProfilePtrInput is an input type that accepts ContainerServiceServicePrincipalProfileArgs, ContainerServiceServicePrincipalProfilePtr and ContainerServiceServicePrincipalProfilePtrOutput values.
// You can construct a concrete instance of `ContainerServiceServicePrincipalProfilePtrInput` via:
//
//          ContainerServiceServicePrincipalProfileArgs{...}
//
//  or:
//
//          nil
type ContainerServiceServicePrincipalProfilePtrInput interface {
	pulumi.Input

	ToContainerServiceServicePrincipalProfilePtrOutput() ContainerServiceServicePrincipalProfilePtrOutput
	ToContainerServiceServicePrincipalProfilePtrOutputWithContext(context.Context) ContainerServiceServicePrincipalProfilePtrOutput
}

type containerServiceServicePrincipalProfilePtrType ContainerServiceServicePrincipalProfileArgs

func ContainerServiceServicePrincipalProfilePtr(v *ContainerServiceServicePrincipalProfileArgs) ContainerServiceServicePrincipalProfilePtrInput {
	return (*containerServiceServicePrincipalProfilePtrType)(v)
}

func (*containerServiceServicePrincipalProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceServicePrincipalProfile)(nil)).Elem()
}

func (i *containerServiceServicePrincipalProfilePtrType) ToContainerServiceServicePrincipalProfilePtrOutput() ContainerServiceServicePrincipalProfilePtrOutput {
	return i.ToContainerServiceServicePrincipalProfilePtrOutputWithContext(context.Background())
}

func (i *containerServiceServicePrincipalProfilePtrType) ToContainerServiceServicePrincipalProfilePtrOutputWithContext(ctx context.Context) ContainerServiceServicePrincipalProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceServicePrincipalProfilePtrOutput)
}

// Information about a service principal identity for the cluster to use for manipulating Azure APIs. Either secret or keyVaultSecretRef must be specified.
type ContainerServiceServicePrincipalProfileOutput struct{ *pulumi.OutputState }

func (ContainerServiceServicePrincipalProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceServicePrincipalProfile)(nil)).Elem()
}

func (o ContainerServiceServicePrincipalProfileOutput) ToContainerServiceServicePrincipalProfileOutput() ContainerServiceServicePrincipalProfileOutput {
	return o
}

func (o ContainerServiceServicePrincipalProfileOutput) ToContainerServiceServicePrincipalProfileOutputWithContext(ctx context.Context) ContainerServiceServicePrincipalProfileOutput {
	return o
}

func (o ContainerServiceServicePrincipalProfileOutput) ToContainerServiceServicePrincipalProfilePtrOutput() ContainerServiceServicePrincipalProfilePtrOutput {
	return o.ToContainerServiceServicePrincipalProfilePtrOutputWithContext(context.Background())
}

func (o ContainerServiceServicePrincipalProfileOutput) ToContainerServiceServicePrincipalProfilePtrOutputWithContext(ctx context.Context) ContainerServiceServicePrincipalProfilePtrOutput {
	return o.ApplyT(func(v ContainerServiceServicePrincipalProfile) *ContainerServiceServicePrincipalProfile {
		return &v
	}).(ContainerServiceServicePrincipalProfilePtrOutput)
}

// The ID for the service principal.
func (o ContainerServiceServicePrincipalProfileOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerServiceServicePrincipalProfile) string { return v.ClientId }).(pulumi.StringOutput)
}

// Reference to a secret stored in Azure Key Vault.
func (o ContainerServiceServicePrincipalProfileOutput) KeyVaultSecretRef() KeyVaultSecretRefPtrOutput {
	return o.ApplyT(func(v ContainerServiceServicePrincipalProfile) *KeyVaultSecretRef { return v.KeyVaultSecretRef }).(KeyVaultSecretRefPtrOutput)
}

// The secret password associated with the service principal in plain text.
func (o ContainerServiceServicePrincipalProfileOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceServicePrincipalProfile) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

type ContainerServiceServicePrincipalProfilePtrOutput struct{ *pulumi.OutputState }

func (ContainerServiceServicePrincipalProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceServicePrincipalProfile)(nil)).Elem()
}

func (o ContainerServiceServicePrincipalProfilePtrOutput) ToContainerServiceServicePrincipalProfilePtrOutput() ContainerServiceServicePrincipalProfilePtrOutput {
	return o
}

func (o ContainerServiceServicePrincipalProfilePtrOutput) ToContainerServiceServicePrincipalProfilePtrOutputWithContext(ctx context.Context) ContainerServiceServicePrincipalProfilePtrOutput {
	return o
}

func (o ContainerServiceServicePrincipalProfilePtrOutput) Elem() ContainerServiceServicePrincipalProfileOutput {
	return o.ApplyT(func(v *ContainerServiceServicePrincipalProfile) ContainerServiceServicePrincipalProfile { return *v }).(ContainerServiceServicePrincipalProfileOutput)
}

// The ID for the service principal.
func (o ContainerServiceServicePrincipalProfilePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceServicePrincipalProfile) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Reference to a secret stored in Azure Key Vault.
func (o ContainerServiceServicePrincipalProfilePtrOutput) KeyVaultSecretRef() KeyVaultSecretRefPtrOutput {
	return o.ApplyT(func(v *ContainerServiceServicePrincipalProfile) *KeyVaultSecretRef {
		if v == nil {
			return nil
		}
		return v.KeyVaultSecretRef
	}).(KeyVaultSecretRefPtrOutput)
}

// The secret password associated with the service principal in plain text.
func (o ContainerServiceServicePrincipalProfilePtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceServicePrincipalProfile) *string {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(pulumi.StringPtrOutput)
}

// Information about a service principal identity for the cluster to use for manipulating Azure APIs. Either secret or keyVaultSecretRef must be specified.
type ContainerServiceServicePrincipalProfileResponse struct {
	// The ID for the service principal.
	ClientId string `pulumi:"clientId"`
	// Reference to a secret stored in Azure Key Vault.
	KeyVaultSecretRef *KeyVaultSecretRefResponse `pulumi:"keyVaultSecretRef"`
	// The secret password associated with the service principal in plain text.
	Secret *string `pulumi:"secret"`
}

// ContainerServiceServicePrincipalProfileResponseInput is an input type that accepts ContainerServiceServicePrincipalProfileResponseArgs and ContainerServiceServicePrincipalProfileResponseOutput values.
// You can construct a concrete instance of `ContainerServiceServicePrincipalProfileResponseInput` via:
//
//          ContainerServiceServicePrincipalProfileResponseArgs{...}
type ContainerServiceServicePrincipalProfileResponseInput interface {
	pulumi.Input

	ToContainerServiceServicePrincipalProfileResponseOutput() ContainerServiceServicePrincipalProfileResponseOutput
	ToContainerServiceServicePrincipalProfileResponseOutputWithContext(context.Context) ContainerServiceServicePrincipalProfileResponseOutput
}

// Information about a service principal identity for the cluster to use for manipulating Azure APIs. Either secret or keyVaultSecretRef must be specified.
type ContainerServiceServicePrincipalProfileResponseArgs struct {
	// The ID for the service principal.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// Reference to a secret stored in Azure Key Vault.
	KeyVaultSecretRef KeyVaultSecretRefResponsePtrInput `pulumi:"keyVaultSecretRef"`
	// The secret password associated with the service principal in plain text.
	Secret pulumi.StringPtrInput `pulumi:"secret"`
}

func (ContainerServiceServicePrincipalProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceServicePrincipalProfileResponse)(nil)).Elem()
}

func (i ContainerServiceServicePrincipalProfileResponseArgs) ToContainerServiceServicePrincipalProfileResponseOutput() ContainerServiceServicePrincipalProfileResponseOutput {
	return i.ToContainerServiceServicePrincipalProfileResponseOutputWithContext(context.Background())
}

func (i ContainerServiceServicePrincipalProfileResponseArgs) ToContainerServiceServicePrincipalProfileResponseOutputWithContext(ctx context.Context) ContainerServiceServicePrincipalProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceServicePrincipalProfileResponseOutput)
}

func (i ContainerServiceServicePrincipalProfileResponseArgs) ToContainerServiceServicePrincipalProfileResponsePtrOutput() ContainerServiceServicePrincipalProfileResponsePtrOutput {
	return i.ToContainerServiceServicePrincipalProfileResponsePtrOutputWithContext(context.Background())
}

func (i ContainerServiceServicePrincipalProfileResponseArgs) ToContainerServiceServicePrincipalProfileResponsePtrOutputWithContext(ctx context.Context) ContainerServiceServicePrincipalProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceServicePrincipalProfileResponseOutput).ToContainerServiceServicePrincipalProfileResponsePtrOutputWithContext(ctx)
}

// ContainerServiceServicePrincipalProfileResponsePtrInput is an input type that accepts ContainerServiceServicePrincipalProfileResponseArgs, ContainerServiceServicePrincipalProfileResponsePtr and ContainerServiceServicePrincipalProfileResponsePtrOutput values.
// You can construct a concrete instance of `ContainerServiceServicePrincipalProfileResponsePtrInput` via:
//
//          ContainerServiceServicePrincipalProfileResponseArgs{...}
//
//  or:
//
//          nil
type ContainerServiceServicePrincipalProfileResponsePtrInput interface {
	pulumi.Input

	ToContainerServiceServicePrincipalProfileResponsePtrOutput() ContainerServiceServicePrincipalProfileResponsePtrOutput
	ToContainerServiceServicePrincipalProfileResponsePtrOutputWithContext(context.Context) ContainerServiceServicePrincipalProfileResponsePtrOutput
}

type containerServiceServicePrincipalProfileResponsePtrType ContainerServiceServicePrincipalProfileResponseArgs

func ContainerServiceServicePrincipalProfileResponsePtr(v *ContainerServiceServicePrincipalProfileResponseArgs) ContainerServiceServicePrincipalProfileResponsePtrInput {
	return (*containerServiceServicePrincipalProfileResponsePtrType)(v)
}

func (*containerServiceServicePrincipalProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceServicePrincipalProfileResponse)(nil)).Elem()
}

func (i *containerServiceServicePrincipalProfileResponsePtrType) ToContainerServiceServicePrincipalProfileResponsePtrOutput() ContainerServiceServicePrincipalProfileResponsePtrOutput {
	return i.ToContainerServiceServicePrincipalProfileResponsePtrOutputWithContext(context.Background())
}

func (i *containerServiceServicePrincipalProfileResponsePtrType) ToContainerServiceServicePrincipalProfileResponsePtrOutputWithContext(ctx context.Context) ContainerServiceServicePrincipalProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceServicePrincipalProfileResponsePtrOutput)
}

// Information about a service principal identity for the cluster to use for manipulating Azure APIs. Either secret or keyVaultSecretRef must be specified.
type ContainerServiceServicePrincipalProfileResponseOutput struct{ *pulumi.OutputState }

func (ContainerServiceServicePrincipalProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceServicePrincipalProfileResponse)(nil)).Elem()
}

func (o ContainerServiceServicePrincipalProfileResponseOutput) ToContainerServiceServicePrincipalProfileResponseOutput() ContainerServiceServicePrincipalProfileResponseOutput {
	return o
}

func (o ContainerServiceServicePrincipalProfileResponseOutput) ToContainerServiceServicePrincipalProfileResponseOutputWithContext(ctx context.Context) ContainerServiceServicePrincipalProfileResponseOutput {
	return o
}

func (o ContainerServiceServicePrincipalProfileResponseOutput) ToContainerServiceServicePrincipalProfileResponsePtrOutput() ContainerServiceServicePrincipalProfileResponsePtrOutput {
	return o.ToContainerServiceServicePrincipalProfileResponsePtrOutputWithContext(context.Background())
}

func (o ContainerServiceServicePrincipalProfileResponseOutput) ToContainerServiceServicePrincipalProfileResponsePtrOutputWithContext(ctx context.Context) ContainerServiceServicePrincipalProfileResponsePtrOutput {
	return o.ApplyT(func(v ContainerServiceServicePrincipalProfileResponse) *ContainerServiceServicePrincipalProfileResponse {
		return &v
	}).(ContainerServiceServicePrincipalProfileResponsePtrOutput)
}

// The ID for the service principal.
func (o ContainerServiceServicePrincipalProfileResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerServiceServicePrincipalProfileResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// Reference to a secret stored in Azure Key Vault.
func (o ContainerServiceServicePrincipalProfileResponseOutput) KeyVaultSecretRef() KeyVaultSecretRefResponsePtrOutput {
	return o.ApplyT(func(v ContainerServiceServicePrincipalProfileResponse) *KeyVaultSecretRefResponse {
		return v.KeyVaultSecretRef
	}).(KeyVaultSecretRefResponsePtrOutput)
}

// The secret password associated with the service principal in plain text.
func (o ContainerServiceServicePrincipalProfileResponseOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceServicePrincipalProfileResponse) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

type ContainerServiceServicePrincipalProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ContainerServiceServicePrincipalProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceServicePrincipalProfileResponse)(nil)).Elem()
}

func (o ContainerServiceServicePrincipalProfileResponsePtrOutput) ToContainerServiceServicePrincipalProfileResponsePtrOutput() ContainerServiceServicePrincipalProfileResponsePtrOutput {
	return o
}

func (o ContainerServiceServicePrincipalProfileResponsePtrOutput) ToContainerServiceServicePrincipalProfileResponsePtrOutputWithContext(ctx context.Context) ContainerServiceServicePrincipalProfileResponsePtrOutput {
	return o
}

func (o ContainerServiceServicePrincipalProfileResponsePtrOutput) Elem() ContainerServiceServicePrincipalProfileResponseOutput {
	return o.ApplyT(func(v *ContainerServiceServicePrincipalProfileResponse) ContainerServiceServicePrincipalProfileResponse {
		return *v
	}).(ContainerServiceServicePrincipalProfileResponseOutput)
}

// The ID for the service principal.
func (o ContainerServiceServicePrincipalProfileResponsePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceServicePrincipalProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Reference to a secret stored in Azure Key Vault.
func (o ContainerServiceServicePrincipalProfileResponsePtrOutput) KeyVaultSecretRef() KeyVaultSecretRefResponsePtrOutput {
	return o.ApplyT(func(v *ContainerServiceServicePrincipalProfileResponse) *KeyVaultSecretRefResponse {
		if v == nil {
			return nil
		}
		return v.KeyVaultSecretRef
	}).(KeyVaultSecretRefResponsePtrOutput)
}

// The secret password associated with the service principal in plain text.
func (o ContainerServiceServicePrincipalProfileResponsePtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceServicePrincipalProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(pulumi.StringPtrOutput)
}

// SSH configuration for Linux-based VMs running on Azure.
type ContainerServiceSshConfiguration struct {
	// The list of SSH public keys used to authenticate with Linux-based VMs. Only expect one key specified.
	PublicKeys []ContainerServiceSshPublicKey `pulumi:"publicKeys"`
}

// ContainerServiceSshConfigurationInput is an input type that accepts ContainerServiceSshConfigurationArgs and ContainerServiceSshConfigurationOutput values.
// You can construct a concrete instance of `ContainerServiceSshConfigurationInput` via:
//
//          ContainerServiceSshConfigurationArgs{...}
type ContainerServiceSshConfigurationInput interface {
	pulumi.Input

	ToContainerServiceSshConfigurationOutput() ContainerServiceSshConfigurationOutput
	ToContainerServiceSshConfigurationOutputWithContext(context.Context) ContainerServiceSshConfigurationOutput
}

// SSH configuration for Linux-based VMs running on Azure.
type ContainerServiceSshConfigurationArgs struct {
	// The list of SSH public keys used to authenticate with Linux-based VMs. Only expect one key specified.
	PublicKeys ContainerServiceSshPublicKeyArrayInput `pulumi:"publicKeys"`
}

func (ContainerServiceSshConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceSshConfiguration)(nil)).Elem()
}

func (i ContainerServiceSshConfigurationArgs) ToContainerServiceSshConfigurationOutput() ContainerServiceSshConfigurationOutput {
	return i.ToContainerServiceSshConfigurationOutputWithContext(context.Background())
}

func (i ContainerServiceSshConfigurationArgs) ToContainerServiceSshConfigurationOutputWithContext(ctx context.Context) ContainerServiceSshConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceSshConfigurationOutput)
}

func (i ContainerServiceSshConfigurationArgs) ToContainerServiceSshConfigurationPtrOutput() ContainerServiceSshConfigurationPtrOutput {
	return i.ToContainerServiceSshConfigurationPtrOutputWithContext(context.Background())
}

func (i ContainerServiceSshConfigurationArgs) ToContainerServiceSshConfigurationPtrOutputWithContext(ctx context.Context) ContainerServiceSshConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceSshConfigurationOutput).ToContainerServiceSshConfigurationPtrOutputWithContext(ctx)
}

// ContainerServiceSshConfigurationPtrInput is an input type that accepts ContainerServiceSshConfigurationArgs, ContainerServiceSshConfigurationPtr and ContainerServiceSshConfigurationPtrOutput values.
// You can construct a concrete instance of `ContainerServiceSshConfigurationPtrInput` via:
//
//          ContainerServiceSshConfigurationArgs{...}
//
//  or:
//
//          nil
type ContainerServiceSshConfigurationPtrInput interface {
	pulumi.Input

	ToContainerServiceSshConfigurationPtrOutput() ContainerServiceSshConfigurationPtrOutput
	ToContainerServiceSshConfigurationPtrOutputWithContext(context.Context) ContainerServiceSshConfigurationPtrOutput
}

type containerServiceSshConfigurationPtrType ContainerServiceSshConfigurationArgs

func ContainerServiceSshConfigurationPtr(v *ContainerServiceSshConfigurationArgs) ContainerServiceSshConfigurationPtrInput {
	return (*containerServiceSshConfigurationPtrType)(v)
}

func (*containerServiceSshConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceSshConfiguration)(nil)).Elem()
}

func (i *containerServiceSshConfigurationPtrType) ToContainerServiceSshConfigurationPtrOutput() ContainerServiceSshConfigurationPtrOutput {
	return i.ToContainerServiceSshConfigurationPtrOutputWithContext(context.Background())
}

func (i *containerServiceSshConfigurationPtrType) ToContainerServiceSshConfigurationPtrOutputWithContext(ctx context.Context) ContainerServiceSshConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceSshConfigurationPtrOutput)
}

// SSH configuration for Linux-based VMs running on Azure.
type ContainerServiceSshConfigurationOutput struct{ *pulumi.OutputState }

func (ContainerServiceSshConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceSshConfiguration)(nil)).Elem()
}

func (o ContainerServiceSshConfigurationOutput) ToContainerServiceSshConfigurationOutput() ContainerServiceSshConfigurationOutput {
	return o
}

func (o ContainerServiceSshConfigurationOutput) ToContainerServiceSshConfigurationOutputWithContext(ctx context.Context) ContainerServiceSshConfigurationOutput {
	return o
}

func (o ContainerServiceSshConfigurationOutput) ToContainerServiceSshConfigurationPtrOutput() ContainerServiceSshConfigurationPtrOutput {
	return o.ToContainerServiceSshConfigurationPtrOutputWithContext(context.Background())
}

func (o ContainerServiceSshConfigurationOutput) ToContainerServiceSshConfigurationPtrOutputWithContext(ctx context.Context) ContainerServiceSshConfigurationPtrOutput {
	return o.ApplyT(func(v ContainerServiceSshConfiguration) *ContainerServiceSshConfiguration {
		return &v
	}).(ContainerServiceSshConfigurationPtrOutput)
}

// The list of SSH public keys used to authenticate with Linux-based VMs. Only expect one key specified.
func (o ContainerServiceSshConfigurationOutput) PublicKeys() ContainerServiceSshPublicKeyArrayOutput {
	return o.ApplyT(func(v ContainerServiceSshConfiguration) []ContainerServiceSshPublicKey { return v.PublicKeys }).(ContainerServiceSshPublicKeyArrayOutput)
}

type ContainerServiceSshConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ContainerServiceSshConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceSshConfiguration)(nil)).Elem()
}

func (o ContainerServiceSshConfigurationPtrOutput) ToContainerServiceSshConfigurationPtrOutput() ContainerServiceSshConfigurationPtrOutput {
	return o
}

func (o ContainerServiceSshConfigurationPtrOutput) ToContainerServiceSshConfigurationPtrOutputWithContext(ctx context.Context) ContainerServiceSshConfigurationPtrOutput {
	return o
}

func (o ContainerServiceSshConfigurationPtrOutput) Elem() ContainerServiceSshConfigurationOutput {
	return o.ApplyT(func(v *ContainerServiceSshConfiguration) ContainerServiceSshConfiguration { return *v }).(ContainerServiceSshConfigurationOutput)
}

// The list of SSH public keys used to authenticate with Linux-based VMs. Only expect one key specified.
func (o ContainerServiceSshConfigurationPtrOutput) PublicKeys() ContainerServiceSshPublicKeyArrayOutput {
	return o.ApplyT(func(v *ContainerServiceSshConfiguration) []ContainerServiceSshPublicKey {
		if v == nil {
			return nil
		}
		return v.PublicKeys
	}).(ContainerServiceSshPublicKeyArrayOutput)
}

// SSH configuration for Linux-based VMs running on Azure.
type ContainerServiceSshConfigurationResponse struct {
	// The list of SSH public keys used to authenticate with Linux-based VMs. Only expect one key specified.
	PublicKeys []ContainerServiceSshPublicKeyResponse `pulumi:"publicKeys"`
}

// ContainerServiceSshConfigurationResponseInput is an input type that accepts ContainerServiceSshConfigurationResponseArgs and ContainerServiceSshConfigurationResponseOutput values.
// You can construct a concrete instance of `ContainerServiceSshConfigurationResponseInput` via:
//
//          ContainerServiceSshConfigurationResponseArgs{...}
type ContainerServiceSshConfigurationResponseInput interface {
	pulumi.Input

	ToContainerServiceSshConfigurationResponseOutput() ContainerServiceSshConfigurationResponseOutput
	ToContainerServiceSshConfigurationResponseOutputWithContext(context.Context) ContainerServiceSshConfigurationResponseOutput
}

// SSH configuration for Linux-based VMs running on Azure.
type ContainerServiceSshConfigurationResponseArgs struct {
	// The list of SSH public keys used to authenticate with Linux-based VMs. Only expect one key specified.
	PublicKeys ContainerServiceSshPublicKeyResponseArrayInput `pulumi:"publicKeys"`
}

func (ContainerServiceSshConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceSshConfigurationResponse)(nil)).Elem()
}

func (i ContainerServiceSshConfigurationResponseArgs) ToContainerServiceSshConfigurationResponseOutput() ContainerServiceSshConfigurationResponseOutput {
	return i.ToContainerServiceSshConfigurationResponseOutputWithContext(context.Background())
}

func (i ContainerServiceSshConfigurationResponseArgs) ToContainerServiceSshConfigurationResponseOutputWithContext(ctx context.Context) ContainerServiceSshConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceSshConfigurationResponseOutput)
}

func (i ContainerServiceSshConfigurationResponseArgs) ToContainerServiceSshConfigurationResponsePtrOutput() ContainerServiceSshConfigurationResponsePtrOutput {
	return i.ToContainerServiceSshConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i ContainerServiceSshConfigurationResponseArgs) ToContainerServiceSshConfigurationResponsePtrOutputWithContext(ctx context.Context) ContainerServiceSshConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceSshConfigurationResponseOutput).ToContainerServiceSshConfigurationResponsePtrOutputWithContext(ctx)
}

// ContainerServiceSshConfigurationResponsePtrInput is an input type that accepts ContainerServiceSshConfigurationResponseArgs, ContainerServiceSshConfigurationResponsePtr and ContainerServiceSshConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `ContainerServiceSshConfigurationResponsePtrInput` via:
//
//          ContainerServiceSshConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type ContainerServiceSshConfigurationResponsePtrInput interface {
	pulumi.Input

	ToContainerServiceSshConfigurationResponsePtrOutput() ContainerServiceSshConfigurationResponsePtrOutput
	ToContainerServiceSshConfigurationResponsePtrOutputWithContext(context.Context) ContainerServiceSshConfigurationResponsePtrOutput
}

type containerServiceSshConfigurationResponsePtrType ContainerServiceSshConfigurationResponseArgs

func ContainerServiceSshConfigurationResponsePtr(v *ContainerServiceSshConfigurationResponseArgs) ContainerServiceSshConfigurationResponsePtrInput {
	return (*containerServiceSshConfigurationResponsePtrType)(v)
}

func (*containerServiceSshConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceSshConfigurationResponse)(nil)).Elem()
}

func (i *containerServiceSshConfigurationResponsePtrType) ToContainerServiceSshConfigurationResponsePtrOutput() ContainerServiceSshConfigurationResponsePtrOutput {
	return i.ToContainerServiceSshConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *containerServiceSshConfigurationResponsePtrType) ToContainerServiceSshConfigurationResponsePtrOutputWithContext(ctx context.Context) ContainerServiceSshConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceSshConfigurationResponsePtrOutput)
}

// SSH configuration for Linux-based VMs running on Azure.
type ContainerServiceSshConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ContainerServiceSshConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceSshConfigurationResponse)(nil)).Elem()
}

func (o ContainerServiceSshConfigurationResponseOutput) ToContainerServiceSshConfigurationResponseOutput() ContainerServiceSshConfigurationResponseOutput {
	return o
}

func (o ContainerServiceSshConfigurationResponseOutput) ToContainerServiceSshConfigurationResponseOutputWithContext(ctx context.Context) ContainerServiceSshConfigurationResponseOutput {
	return o
}

func (o ContainerServiceSshConfigurationResponseOutput) ToContainerServiceSshConfigurationResponsePtrOutput() ContainerServiceSshConfigurationResponsePtrOutput {
	return o.ToContainerServiceSshConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o ContainerServiceSshConfigurationResponseOutput) ToContainerServiceSshConfigurationResponsePtrOutputWithContext(ctx context.Context) ContainerServiceSshConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ContainerServiceSshConfigurationResponse) *ContainerServiceSshConfigurationResponse {
		return &v
	}).(ContainerServiceSshConfigurationResponsePtrOutput)
}

// The list of SSH public keys used to authenticate with Linux-based VMs. Only expect one key specified.
func (o ContainerServiceSshConfigurationResponseOutput) PublicKeys() ContainerServiceSshPublicKeyResponseArrayOutput {
	return o.ApplyT(func(v ContainerServiceSshConfigurationResponse) []ContainerServiceSshPublicKeyResponse {
		return v.PublicKeys
	}).(ContainerServiceSshPublicKeyResponseArrayOutput)
}

type ContainerServiceSshConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (ContainerServiceSshConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceSshConfigurationResponse)(nil)).Elem()
}

func (o ContainerServiceSshConfigurationResponsePtrOutput) ToContainerServiceSshConfigurationResponsePtrOutput() ContainerServiceSshConfigurationResponsePtrOutput {
	return o
}

func (o ContainerServiceSshConfigurationResponsePtrOutput) ToContainerServiceSshConfigurationResponsePtrOutputWithContext(ctx context.Context) ContainerServiceSshConfigurationResponsePtrOutput {
	return o
}

func (o ContainerServiceSshConfigurationResponsePtrOutput) Elem() ContainerServiceSshConfigurationResponseOutput {
	return o.ApplyT(func(v *ContainerServiceSshConfigurationResponse) ContainerServiceSshConfigurationResponse { return *v }).(ContainerServiceSshConfigurationResponseOutput)
}

// The list of SSH public keys used to authenticate with Linux-based VMs. Only expect one key specified.
func (o ContainerServiceSshConfigurationResponsePtrOutput) PublicKeys() ContainerServiceSshPublicKeyResponseArrayOutput {
	return o.ApplyT(func(v *ContainerServiceSshConfigurationResponse) []ContainerServiceSshPublicKeyResponse {
		if v == nil {
			return nil
		}
		return v.PublicKeys
	}).(ContainerServiceSshPublicKeyResponseArrayOutput)
}

// Contains information about SSH certificate public key data.
type ContainerServiceSshPublicKey struct {
	// Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.
	KeyData string `pulumi:"keyData"`
}

// ContainerServiceSshPublicKeyInput is an input type that accepts ContainerServiceSshPublicKeyArgs and ContainerServiceSshPublicKeyOutput values.
// You can construct a concrete instance of `ContainerServiceSshPublicKeyInput` via:
//
//          ContainerServiceSshPublicKeyArgs{...}
type ContainerServiceSshPublicKeyInput interface {
	pulumi.Input

	ToContainerServiceSshPublicKeyOutput() ContainerServiceSshPublicKeyOutput
	ToContainerServiceSshPublicKeyOutputWithContext(context.Context) ContainerServiceSshPublicKeyOutput
}

// Contains information about SSH certificate public key data.
type ContainerServiceSshPublicKeyArgs struct {
	// Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.
	KeyData pulumi.StringInput `pulumi:"keyData"`
}

func (ContainerServiceSshPublicKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceSshPublicKey)(nil)).Elem()
}

func (i ContainerServiceSshPublicKeyArgs) ToContainerServiceSshPublicKeyOutput() ContainerServiceSshPublicKeyOutput {
	return i.ToContainerServiceSshPublicKeyOutputWithContext(context.Background())
}

func (i ContainerServiceSshPublicKeyArgs) ToContainerServiceSshPublicKeyOutputWithContext(ctx context.Context) ContainerServiceSshPublicKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceSshPublicKeyOutput)
}

// ContainerServiceSshPublicKeyArrayInput is an input type that accepts ContainerServiceSshPublicKeyArray and ContainerServiceSshPublicKeyArrayOutput values.
// You can construct a concrete instance of `ContainerServiceSshPublicKeyArrayInput` via:
//
//          ContainerServiceSshPublicKeyArray{ ContainerServiceSshPublicKeyArgs{...} }
type ContainerServiceSshPublicKeyArrayInput interface {
	pulumi.Input

	ToContainerServiceSshPublicKeyArrayOutput() ContainerServiceSshPublicKeyArrayOutput
	ToContainerServiceSshPublicKeyArrayOutputWithContext(context.Context) ContainerServiceSshPublicKeyArrayOutput
}

type ContainerServiceSshPublicKeyArray []ContainerServiceSshPublicKeyInput

func (ContainerServiceSshPublicKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerServiceSshPublicKey)(nil)).Elem()
}

func (i ContainerServiceSshPublicKeyArray) ToContainerServiceSshPublicKeyArrayOutput() ContainerServiceSshPublicKeyArrayOutput {
	return i.ToContainerServiceSshPublicKeyArrayOutputWithContext(context.Background())
}

func (i ContainerServiceSshPublicKeyArray) ToContainerServiceSshPublicKeyArrayOutputWithContext(ctx context.Context) ContainerServiceSshPublicKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceSshPublicKeyArrayOutput)
}

// Contains information about SSH certificate public key data.
type ContainerServiceSshPublicKeyOutput struct{ *pulumi.OutputState }

func (ContainerServiceSshPublicKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceSshPublicKey)(nil)).Elem()
}

func (o ContainerServiceSshPublicKeyOutput) ToContainerServiceSshPublicKeyOutput() ContainerServiceSshPublicKeyOutput {
	return o
}

func (o ContainerServiceSshPublicKeyOutput) ToContainerServiceSshPublicKeyOutputWithContext(ctx context.Context) ContainerServiceSshPublicKeyOutput {
	return o
}

// Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.
func (o ContainerServiceSshPublicKeyOutput) KeyData() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerServiceSshPublicKey) string { return v.KeyData }).(pulumi.StringOutput)
}

type ContainerServiceSshPublicKeyArrayOutput struct{ *pulumi.OutputState }

func (ContainerServiceSshPublicKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerServiceSshPublicKey)(nil)).Elem()
}

func (o ContainerServiceSshPublicKeyArrayOutput) ToContainerServiceSshPublicKeyArrayOutput() ContainerServiceSshPublicKeyArrayOutput {
	return o
}

func (o ContainerServiceSshPublicKeyArrayOutput) ToContainerServiceSshPublicKeyArrayOutputWithContext(ctx context.Context) ContainerServiceSshPublicKeyArrayOutput {
	return o
}

func (o ContainerServiceSshPublicKeyArrayOutput) Index(i pulumi.IntInput) ContainerServiceSshPublicKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerServiceSshPublicKey {
		return vs[0].([]ContainerServiceSshPublicKey)[vs[1].(int)]
	}).(ContainerServiceSshPublicKeyOutput)
}

// Contains information about SSH certificate public key data.
type ContainerServiceSshPublicKeyResponse struct {
	// Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.
	KeyData string `pulumi:"keyData"`
}

// ContainerServiceSshPublicKeyResponseInput is an input type that accepts ContainerServiceSshPublicKeyResponseArgs and ContainerServiceSshPublicKeyResponseOutput values.
// You can construct a concrete instance of `ContainerServiceSshPublicKeyResponseInput` via:
//
//          ContainerServiceSshPublicKeyResponseArgs{...}
type ContainerServiceSshPublicKeyResponseInput interface {
	pulumi.Input

	ToContainerServiceSshPublicKeyResponseOutput() ContainerServiceSshPublicKeyResponseOutput
	ToContainerServiceSshPublicKeyResponseOutputWithContext(context.Context) ContainerServiceSshPublicKeyResponseOutput
}

// Contains information about SSH certificate public key data.
type ContainerServiceSshPublicKeyResponseArgs struct {
	// Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.
	KeyData pulumi.StringInput `pulumi:"keyData"`
}

func (ContainerServiceSshPublicKeyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceSshPublicKeyResponse)(nil)).Elem()
}

func (i ContainerServiceSshPublicKeyResponseArgs) ToContainerServiceSshPublicKeyResponseOutput() ContainerServiceSshPublicKeyResponseOutput {
	return i.ToContainerServiceSshPublicKeyResponseOutputWithContext(context.Background())
}

func (i ContainerServiceSshPublicKeyResponseArgs) ToContainerServiceSshPublicKeyResponseOutputWithContext(ctx context.Context) ContainerServiceSshPublicKeyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceSshPublicKeyResponseOutput)
}

// ContainerServiceSshPublicKeyResponseArrayInput is an input type that accepts ContainerServiceSshPublicKeyResponseArray and ContainerServiceSshPublicKeyResponseArrayOutput values.
// You can construct a concrete instance of `ContainerServiceSshPublicKeyResponseArrayInput` via:
//
//          ContainerServiceSshPublicKeyResponseArray{ ContainerServiceSshPublicKeyResponseArgs{...} }
type ContainerServiceSshPublicKeyResponseArrayInput interface {
	pulumi.Input

	ToContainerServiceSshPublicKeyResponseArrayOutput() ContainerServiceSshPublicKeyResponseArrayOutput
	ToContainerServiceSshPublicKeyResponseArrayOutputWithContext(context.Context) ContainerServiceSshPublicKeyResponseArrayOutput
}

type ContainerServiceSshPublicKeyResponseArray []ContainerServiceSshPublicKeyResponseInput

func (ContainerServiceSshPublicKeyResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerServiceSshPublicKeyResponse)(nil)).Elem()
}

func (i ContainerServiceSshPublicKeyResponseArray) ToContainerServiceSshPublicKeyResponseArrayOutput() ContainerServiceSshPublicKeyResponseArrayOutput {
	return i.ToContainerServiceSshPublicKeyResponseArrayOutputWithContext(context.Background())
}

func (i ContainerServiceSshPublicKeyResponseArray) ToContainerServiceSshPublicKeyResponseArrayOutputWithContext(ctx context.Context) ContainerServiceSshPublicKeyResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceSshPublicKeyResponseArrayOutput)
}

// Contains information about SSH certificate public key data.
type ContainerServiceSshPublicKeyResponseOutput struct{ *pulumi.OutputState }

func (ContainerServiceSshPublicKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceSshPublicKeyResponse)(nil)).Elem()
}

func (o ContainerServiceSshPublicKeyResponseOutput) ToContainerServiceSshPublicKeyResponseOutput() ContainerServiceSshPublicKeyResponseOutput {
	return o
}

func (o ContainerServiceSshPublicKeyResponseOutput) ToContainerServiceSshPublicKeyResponseOutputWithContext(ctx context.Context) ContainerServiceSshPublicKeyResponseOutput {
	return o
}

// Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.
func (o ContainerServiceSshPublicKeyResponseOutput) KeyData() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerServiceSshPublicKeyResponse) string { return v.KeyData }).(pulumi.StringOutput)
}

type ContainerServiceSshPublicKeyResponseArrayOutput struct{ *pulumi.OutputState }

func (ContainerServiceSshPublicKeyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerServiceSshPublicKeyResponse)(nil)).Elem()
}

func (o ContainerServiceSshPublicKeyResponseArrayOutput) ToContainerServiceSshPublicKeyResponseArrayOutput() ContainerServiceSshPublicKeyResponseArrayOutput {
	return o
}

func (o ContainerServiceSshPublicKeyResponseArrayOutput) ToContainerServiceSshPublicKeyResponseArrayOutputWithContext(ctx context.Context) ContainerServiceSshPublicKeyResponseArrayOutput {
	return o
}

func (o ContainerServiceSshPublicKeyResponseArrayOutput) Index(i pulumi.IntInput) ContainerServiceSshPublicKeyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerServiceSshPublicKeyResponse {
		return vs[0].([]ContainerServiceSshPublicKeyResponse)[vs[1].(int)]
	}).(ContainerServiceSshPublicKeyResponseOutput)
}

// Profile for diagnostics on the container service VMs.
type ContainerServiceVMDiagnostics struct {
	// Whether the VM diagnostic agent is provisioned on the VM.
	Enabled bool `pulumi:"enabled"`
}

// ContainerServiceVMDiagnosticsInput is an input type that accepts ContainerServiceVMDiagnosticsArgs and ContainerServiceVMDiagnosticsOutput values.
// You can construct a concrete instance of `ContainerServiceVMDiagnosticsInput` via:
//
//          ContainerServiceVMDiagnosticsArgs{...}
type ContainerServiceVMDiagnosticsInput interface {
	pulumi.Input

	ToContainerServiceVMDiagnosticsOutput() ContainerServiceVMDiagnosticsOutput
	ToContainerServiceVMDiagnosticsOutputWithContext(context.Context) ContainerServiceVMDiagnosticsOutput
}

// Profile for diagnostics on the container service VMs.
type ContainerServiceVMDiagnosticsArgs struct {
	// Whether the VM diagnostic agent is provisioned on the VM.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ContainerServiceVMDiagnosticsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceVMDiagnostics)(nil)).Elem()
}

func (i ContainerServiceVMDiagnosticsArgs) ToContainerServiceVMDiagnosticsOutput() ContainerServiceVMDiagnosticsOutput {
	return i.ToContainerServiceVMDiagnosticsOutputWithContext(context.Background())
}

func (i ContainerServiceVMDiagnosticsArgs) ToContainerServiceVMDiagnosticsOutputWithContext(ctx context.Context) ContainerServiceVMDiagnosticsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceVMDiagnosticsOutput)
}

func (i ContainerServiceVMDiagnosticsArgs) ToContainerServiceVMDiagnosticsPtrOutput() ContainerServiceVMDiagnosticsPtrOutput {
	return i.ToContainerServiceVMDiagnosticsPtrOutputWithContext(context.Background())
}

func (i ContainerServiceVMDiagnosticsArgs) ToContainerServiceVMDiagnosticsPtrOutputWithContext(ctx context.Context) ContainerServiceVMDiagnosticsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceVMDiagnosticsOutput).ToContainerServiceVMDiagnosticsPtrOutputWithContext(ctx)
}

// ContainerServiceVMDiagnosticsPtrInput is an input type that accepts ContainerServiceVMDiagnosticsArgs, ContainerServiceVMDiagnosticsPtr and ContainerServiceVMDiagnosticsPtrOutput values.
// You can construct a concrete instance of `ContainerServiceVMDiagnosticsPtrInput` via:
//
//          ContainerServiceVMDiagnosticsArgs{...}
//
//  or:
//
//          nil
type ContainerServiceVMDiagnosticsPtrInput interface {
	pulumi.Input

	ToContainerServiceVMDiagnosticsPtrOutput() ContainerServiceVMDiagnosticsPtrOutput
	ToContainerServiceVMDiagnosticsPtrOutputWithContext(context.Context) ContainerServiceVMDiagnosticsPtrOutput
}

type containerServiceVMDiagnosticsPtrType ContainerServiceVMDiagnosticsArgs

func ContainerServiceVMDiagnosticsPtr(v *ContainerServiceVMDiagnosticsArgs) ContainerServiceVMDiagnosticsPtrInput {
	return (*containerServiceVMDiagnosticsPtrType)(v)
}

func (*containerServiceVMDiagnosticsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceVMDiagnostics)(nil)).Elem()
}

func (i *containerServiceVMDiagnosticsPtrType) ToContainerServiceVMDiagnosticsPtrOutput() ContainerServiceVMDiagnosticsPtrOutput {
	return i.ToContainerServiceVMDiagnosticsPtrOutputWithContext(context.Background())
}

func (i *containerServiceVMDiagnosticsPtrType) ToContainerServiceVMDiagnosticsPtrOutputWithContext(ctx context.Context) ContainerServiceVMDiagnosticsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceVMDiagnosticsPtrOutput)
}

// Profile for diagnostics on the container service VMs.
type ContainerServiceVMDiagnosticsOutput struct{ *pulumi.OutputState }

func (ContainerServiceVMDiagnosticsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceVMDiagnostics)(nil)).Elem()
}

func (o ContainerServiceVMDiagnosticsOutput) ToContainerServiceVMDiagnosticsOutput() ContainerServiceVMDiagnosticsOutput {
	return o
}

func (o ContainerServiceVMDiagnosticsOutput) ToContainerServiceVMDiagnosticsOutputWithContext(ctx context.Context) ContainerServiceVMDiagnosticsOutput {
	return o
}

func (o ContainerServiceVMDiagnosticsOutput) ToContainerServiceVMDiagnosticsPtrOutput() ContainerServiceVMDiagnosticsPtrOutput {
	return o.ToContainerServiceVMDiagnosticsPtrOutputWithContext(context.Background())
}

func (o ContainerServiceVMDiagnosticsOutput) ToContainerServiceVMDiagnosticsPtrOutputWithContext(ctx context.Context) ContainerServiceVMDiagnosticsPtrOutput {
	return o.ApplyT(func(v ContainerServiceVMDiagnostics) *ContainerServiceVMDiagnostics {
		return &v
	}).(ContainerServiceVMDiagnosticsPtrOutput)
}

// Whether the VM diagnostic agent is provisioned on the VM.
func (o ContainerServiceVMDiagnosticsOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ContainerServiceVMDiagnostics) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ContainerServiceVMDiagnosticsPtrOutput struct{ *pulumi.OutputState }

func (ContainerServiceVMDiagnosticsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceVMDiagnostics)(nil)).Elem()
}

func (o ContainerServiceVMDiagnosticsPtrOutput) ToContainerServiceVMDiagnosticsPtrOutput() ContainerServiceVMDiagnosticsPtrOutput {
	return o
}

func (o ContainerServiceVMDiagnosticsPtrOutput) ToContainerServiceVMDiagnosticsPtrOutputWithContext(ctx context.Context) ContainerServiceVMDiagnosticsPtrOutput {
	return o
}

func (o ContainerServiceVMDiagnosticsPtrOutput) Elem() ContainerServiceVMDiagnosticsOutput {
	return o.ApplyT(func(v *ContainerServiceVMDiagnostics) ContainerServiceVMDiagnostics { return *v }).(ContainerServiceVMDiagnosticsOutput)
}

// Whether the VM diagnostic agent is provisioned on the VM.
func (o ContainerServiceVMDiagnosticsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ContainerServiceVMDiagnostics) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Profile for diagnostics on the container service VMs.
type ContainerServiceVMDiagnosticsResponse struct {
	// Whether the VM diagnostic agent is provisioned on the VM.
	Enabled bool `pulumi:"enabled"`
	// The URI of the storage account where diagnostics are stored.
	StorageUri string `pulumi:"storageUri"`
}

// ContainerServiceVMDiagnosticsResponseInput is an input type that accepts ContainerServiceVMDiagnosticsResponseArgs and ContainerServiceVMDiagnosticsResponseOutput values.
// You can construct a concrete instance of `ContainerServiceVMDiagnosticsResponseInput` via:
//
//          ContainerServiceVMDiagnosticsResponseArgs{...}
type ContainerServiceVMDiagnosticsResponseInput interface {
	pulumi.Input

	ToContainerServiceVMDiagnosticsResponseOutput() ContainerServiceVMDiagnosticsResponseOutput
	ToContainerServiceVMDiagnosticsResponseOutputWithContext(context.Context) ContainerServiceVMDiagnosticsResponseOutput
}

// Profile for diagnostics on the container service VMs.
type ContainerServiceVMDiagnosticsResponseArgs struct {
	// Whether the VM diagnostic agent is provisioned on the VM.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The URI of the storage account where diagnostics are stored.
	StorageUri pulumi.StringInput `pulumi:"storageUri"`
}

func (ContainerServiceVMDiagnosticsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceVMDiagnosticsResponse)(nil)).Elem()
}

func (i ContainerServiceVMDiagnosticsResponseArgs) ToContainerServiceVMDiagnosticsResponseOutput() ContainerServiceVMDiagnosticsResponseOutput {
	return i.ToContainerServiceVMDiagnosticsResponseOutputWithContext(context.Background())
}

func (i ContainerServiceVMDiagnosticsResponseArgs) ToContainerServiceVMDiagnosticsResponseOutputWithContext(ctx context.Context) ContainerServiceVMDiagnosticsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceVMDiagnosticsResponseOutput)
}

func (i ContainerServiceVMDiagnosticsResponseArgs) ToContainerServiceVMDiagnosticsResponsePtrOutput() ContainerServiceVMDiagnosticsResponsePtrOutput {
	return i.ToContainerServiceVMDiagnosticsResponsePtrOutputWithContext(context.Background())
}

func (i ContainerServiceVMDiagnosticsResponseArgs) ToContainerServiceVMDiagnosticsResponsePtrOutputWithContext(ctx context.Context) ContainerServiceVMDiagnosticsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceVMDiagnosticsResponseOutput).ToContainerServiceVMDiagnosticsResponsePtrOutputWithContext(ctx)
}

// ContainerServiceVMDiagnosticsResponsePtrInput is an input type that accepts ContainerServiceVMDiagnosticsResponseArgs, ContainerServiceVMDiagnosticsResponsePtr and ContainerServiceVMDiagnosticsResponsePtrOutput values.
// You can construct a concrete instance of `ContainerServiceVMDiagnosticsResponsePtrInput` via:
//
//          ContainerServiceVMDiagnosticsResponseArgs{...}
//
//  or:
//
//          nil
type ContainerServiceVMDiagnosticsResponsePtrInput interface {
	pulumi.Input

	ToContainerServiceVMDiagnosticsResponsePtrOutput() ContainerServiceVMDiagnosticsResponsePtrOutput
	ToContainerServiceVMDiagnosticsResponsePtrOutputWithContext(context.Context) ContainerServiceVMDiagnosticsResponsePtrOutput
}

type containerServiceVMDiagnosticsResponsePtrType ContainerServiceVMDiagnosticsResponseArgs

func ContainerServiceVMDiagnosticsResponsePtr(v *ContainerServiceVMDiagnosticsResponseArgs) ContainerServiceVMDiagnosticsResponsePtrInput {
	return (*containerServiceVMDiagnosticsResponsePtrType)(v)
}

func (*containerServiceVMDiagnosticsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceVMDiagnosticsResponse)(nil)).Elem()
}

func (i *containerServiceVMDiagnosticsResponsePtrType) ToContainerServiceVMDiagnosticsResponsePtrOutput() ContainerServiceVMDiagnosticsResponsePtrOutput {
	return i.ToContainerServiceVMDiagnosticsResponsePtrOutputWithContext(context.Background())
}

func (i *containerServiceVMDiagnosticsResponsePtrType) ToContainerServiceVMDiagnosticsResponsePtrOutputWithContext(ctx context.Context) ContainerServiceVMDiagnosticsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceVMDiagnosticsResponsePtrOutput)
}

// Profile for diagnostics on the container service VMs.
type ContainerServiceVMDiagnosticsResponseOutput struct{ *pulumi.OutputState }

func (ContainerServiceVMDiagnosticsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceVMDiagnosticsResponse)(nil)).Elem()
}

func (o ContainerServiceVMDiagnosticsResponseOutput) ToContainerServiceVMDiagnosticsResponseOutput() ContainerServiceVMDiagnosticsResponseOutput {
	return o
}

func (o ContainerServiceVMDiagnosticsResponseOutput) ToContainerServiceVMDiagnosticsResponseOutputWithContext(ctx context.Context) ContainerServiceVMDiagnosticsResponseOutput {
	return o
}

func (o ContainerServiceVMDiagnosticsResponseOutput) ToContainerServiceVMDiagnosticsResponsePtrOutput() ContainerServiceVMDiagnosticsResponsePtrOutput {
	return o.ToContainerServiceVMDiagnosticsResponsePtrOutputWithContext(context.Background())
}

func (o ContainerServiceVMDiagnosticsResponseOutput) ToContainerServiceVMDiagnosticsResponsePtrOutputWithContext(ctx context.Context) ContainerServiceVMDiagnosticsResponsePtrOutput {
	return o.ApplyT(func(v ContainerServiceVMDiagnosticsResponse) *ContainerServiceVMDiagnosticsResponse {
		return &v
	}).(ContainerServiceVMDiagnosticsResponsePtrOutput)
}

// Whether the VM diagnostic agent is provisioned on the VM.
func (o ContainerServiceVMDiagnosticsResponseOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ContainerServiceVMDiagnosticsResponse) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The URI of the storage account where diagnostics are stored.
func (o ContainerServiceVMDiagnosticsResponseOutput) StorageUri() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerServiceVMDiagnosticsResponse) string { return v.StorageUri }).(pulumi.StringOutput)
}

type ContainerServiceVMDiagnosticsResponsePtrOutput struct{ *pulumi.OutputState }

func (ContainerServiceVMDiagnosticsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceVMDiagnosticsResponse)(nil)).Elem()
}

func (o ContainerServiceVMDiagnosticsResponsePtrOutput) ToContainerServiceVMDiagnosticsResponsePtrOutput() ContainerServiceVMDiagnosticsResponsePtrOutput {
	return o
}

func (o ContainerServiceVMDiagnosticsResponsePtrOutput) ToContainerServiceVMDiagnosticsResponsePtrOutputWithContext(ctx context.Context) ContainerServiceVMDiagnosticsResponsePtrOutput {
	return o
}

func (o ContainerServiceVMDiagnosticsResponsePtrOutput) Elem() ContainerServiceVMDiagnosticsResponseOutput {
	return o.ApplyT(func(v *ContainerServiceVMDiagnosticsResponse) ContainerServiceVMDiagnosticsResponse { return *v }).(ContainerServiceVMDiagnosticsResponseOutput)
}

// Whether the VM diagnostic agent is provisioned on the VM.
func (o ContainerServiceVMDiagnosticsResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ContainerServiceVMDiagnosticsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The URI of the storage account where diagnostics are stored.
func (o ContainerServiceVMDiagnosticsResponsePtrOutput) StorageUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceVMDiagnosticsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StorageUri
	}).(pulumi.StringPtrOutput)
}

// Profile for Windows VMs in the container service cluster.
type ContainerServiceWindowsProfile struct {
	// The administrator password to use for Windows VMs.
	AdminPassword string `pulumi:"adminPassword"`
	// The administrator username to use for Windows VMs.
	AdminUsername string `pulumi:"adminUsername"`
}

// ContainerServiceWindowsProfileInput is an input type that accepts ContainerServiceWindowsProfileArgs and ContainerServiceWindowsProfileOutput values.
// You can construct a concrete instance of `ContainerServiceWindowsProfileInput` via:
//
//          ContainerServiceWindowsProfileArgs{...}
type ContainerServiceWindowsProfileInput interface {
	pulumi.Input

	ToContainerServiceWindowsProfileOutput() ContainerServiceWindowsProfileOutput
	ToContainerServiceWindowsProfileOutputWithContext(context.Context) ContainerServiceWindowsProfileOutput
}

// Profile for Windows VMs in the container service cluster.
type ContainerServiceWindowsProfileArgs struct {
	// The administrator password to use for Windows VMs.
	AdminPassword pulumi.StringInput `pulumi:"adminPassword"`
	// The administrator username to use for Windows VMs.
	AdminUsername pulumi.StringInput `pulumi:"adminUsername"`
}

func (ContainerServiceWindowsProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceWindowsProfile)(nil)).Elem()
}

func (i ContainerServiceWindowsProfileArgs) ToContainerServiceWindowsProfileOutput() ContainerServiceWindowsProfileOutput {
	return i.ToContainerServiceWindowsProfileOutputWithContext(context.Background())
}

func (i ContainerServiceWindowsProfileArgs) ToContainerServiceWindowsProfileOutputWithContext(ctx context.Context) ContainerServiceWindowsProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceWindowsProfileOutput)
}

func (i ContainerServiceWindowsProfileArgs) ToContainerServiceWindowsProfilePtrOutput() ContainerServiceWindowsProfilePtrOutput {
	return i.ToContainerServiceWindowsProfilePtrOutputWithContext(context.Background())
}

func (i ContainerServiceWindowsProfileArgs) ToContainerServiceWindowsProfilePtrOutputWithContext(ctx context.Context) ContainerServiceWindowsProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceWindowsProfileOutput).ToContainerServiceWindowsProfilePtrOutputWithContext(ctx)
}

// ContainerServiceWindowsProfilePtrInput is an input type that accepts ContainerServiceWindowsProfileArgs, ContainerServiceWindowsProfilePtr and ContainerServiceWindowsProfilePtrOutput values.
// You can construct a concrete instance of `ContainerServiceWindowsProfilePtrInput` via:
//
//          ContainerServiceWindowsProfileArgs{...}
//
//  or:
//
//          nil
type ContainerServiceWindowsProfilePtrInput interface {
	pulumi.Input

	ToContainerServiceWindowsProfilePtrOutput() ContainerServiceWindowsProfilePtrOutput
	ToContainerServiceWindowsProfilePtrOutputWithContext(context.Context) ContainerServiceWindowsProfilePtrOutput
}

type containerServiceWindowsProfilePtrType ContainerServiceWindowsProfileArgs

func ContainerServiceWindowsProfilePtr(v *ContainerServiceWindowsProfileArgs) ContainerServiceWindowsProfilePtrInput {
	return (*containerServiceWindowsProfilePtrType)(v)
}

func (*containerServiceWindowsProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceWindowsProfile)(nil)).Elem()
}

func (i *containerServiceWindowsProfilePtrType) ToContainerServiceWindowsProfilePtrOutput() ContainerServiceWindowsProfilePtrOutput {
	return i.ToContainerServiceWindowsProfilePtrOutputWithContext(context.Background())
}

func (i *containerServiceWindowsProfilePtrType) ToContainerServiceWindowsProfilePtrOutputWithContext(ctx context.Context) ContainerServiceWindowsProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceWindowsProfilePtrOutput)
}

// Profile for Windows VMs in the container service cluster.
type ContainerServiceWindowsProfileOutput struct{ *pulumi.OutputState }

func (ContainerServiceWindowsProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceWindowsProfile)(nil)).Elem()
}

func (o ContainerServiceWindowsProfileOutput) ToContainerServiceWindowsProfileOutput() ContainerServiceWindowsProfileOutput {
	return o
}

func (o ContainerServiceWindowsProfileOutput) ToContainerServiceWindowsProfileOutputWithContext(ctx context.Context) ContainerServiceWindowsProfileOutput {
	return o
}

func (o ContainerServiceWindowsProfileOutput) ToContainerServiceWindowsProfilePtrOutput() ContainerServiceWindowsProfilePtrOutput {
	return o.ToContainerServiceWindowsProfilePtrOutputWithContext(context.Background())
}

func (o ContainerServiceWindowsProfileOutput) ToContainerServiceWindowsProfilePtrOutputWithContext(ctx context.Context) ContainerServiceWindowsProfilePtrOutput {
	return o.ApplyT(func(v ContainerServiceWindowsProfile) *ContainerServiceWindowsProfile {
		return &v
	}).(ContainerServiceWindowsProfilePtrOutput)
}

// The administrator password to use for Windows VMs.
func (o ContainerServiceWindowsProfileOutput) AdminPassword() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerServiceWindowsProfile) string { return v.AdminPassword }).(pulumi.StringOutput)
}

// The administrator username to use for Windows VMs.
func (o ContainerServiceWindowsProfileOutput) AdminUsername() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerServiceWindowsProfile) string { return v.AdminUsername }).(pulumi.StringOutput)
}

type ContainerServiceWindowsProfilePtrOutput struct{ *pulumi.OutputState }

func (ContainerServiceWindowsProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceWindowsProfile)(nil)).Elem()
}

func (o ContainerServiceWindowsProfilePtrOutput) ToContainerServiceWindowsProfilePtrOutput() ContainerServiceWindowsProfilePtrOutput {
	return o
}

func (o ContainerServiceWindowsProfilePtrOutput) ToContainerServiceWindowsProfilePtrOutputWithContext(ctx context.Context) ContainerServiceWindowsProfilePtrOutput {
	return o
}

func (o ContainerServiceWindowsProfilePtrOutput) Elem() ContainerServiceWindowsProfileOutput {
	return o.ApplyT(func(v *ContainerServiceWindowsProfile) ContainerServiceWindowsProfile { return *v }).(ContainerServiceWindowsProfileOutput)
}

// The administrator password to use for Windows VMs.
func (o ContainerServiceWindowsProfilePtrOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceWindowsProfile) *string {
		if v == nil {
			return nil
		}
		return &v.AdminPassword
	}).(pulumi.StringPtrOutput)
}

// The administrator username to use for Windows VMs.
func (o ContainerServiceWindowsProfilePtrOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceWindowsProfile) *string {
		if v == nil {
			return nil
		}
		return &v.AdminUsername
	}).(pulumi.StringPtrOutput)
}

// Profile for Windows VMs in the container service cluster.
type ContainerServiceWindowsProfileResponse struct {
	// The administrator password to use for Windows VMs.
	AdminPassword string `pulumi:"adminPassword"`
	// The administrator username to use for Windows VMs.
	AdminUsername string `pulumi:"adminUsername"`
}

// ContainerServiceWindowsProfileResponseInput is an input type that accepts ContainerServiceWindowsProfileResponseArgs and ContainerServiceWindowsProfileResponseOutput values.
// You can construct a concrete instance of `ContainerServiceWindowsProfileResponseInput` via:
//
//          ContainerServiceWindowsProfileResponseArgs{...}
type ContainerServiceWindowsProfileResponseInput interface {
	pulumi.Input

	ToContainerServiceWindowsProfileResponseOutput() ContainerServiceWindowsProfileResponseOutput
	ToContainerServiceWindowsProfileResponseOutputWithContext(context.Context) ContainerServiceWindowsProfileResponseOutput
}

// Profile for Windows VMs in the container service cluster.
type ContainerServiceWindowsProfileResponseArgs struct {
	// The administrator password to use for Windows VMs.
	AdminPassword pulumi.StringInput `pulumi:"adminPassword"`
	// The administrator username to use for Windows VMs.
	AdminUsername pulumi.StringInput `pulumi:"adminUsername"`
}

func (ContainerServiceWindowsProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceWindowsProfileResponse)(nil)).Elem()
}

func (i ContainerServiceWindowsProfileResponseArgs) ToContainerServiceWindowsProfileResponseOutput() ContainerServiceWindowsProfileResponseOutput {
	return i.ToContainerServiceWindowsProfileResponseOutputWithContext(context.Background())
}

func (i ContainerServiceWindowsProfileResponseArgs) ToContainerServiceWindowsProfileResponseOutputWithContext(ctx context.Context) ContainerServiceWindowsProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceWindowsProfileResponseOutput)
}

func (i ContainerServiceWindowsProfileResponseArgs) ToContainerServiceWindowsProfileResponsePtrOutput() ContainerServiceWindowsProfileResponsePtrOutput {
	return i.ToContainerServiceWindowsProfileResponsePtrOutputWithContext(context.Background())
}

func (i ContainerServiceWindowsProfileResponseArgs) ToContainerServiceWindowsProfileResponsePtrOutputWithContext(ctx context.Context) ContainerServiceWindowsProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceWindowsProfileResponseOutput).ToContainerServiceWindowsProfileResponsePtrOutputWithContext(ctx)
}

// ContainerServiceWindowsProfileResponsePtrInput is an input type that accepts ContainerServiceWindowsProfileResponseArgs, ContainerServiceWindowsProfileResponsePtr and ContainerServiceWindowsProfileResponsePtrOutput values.
// You can construct a concrete instance of `ContainerServiceWindowsProfileResponsePtrInput` via:
//
//          ContainerServiceWindowsProfileResponseArgs{...}
//
//  or:
//
//          nil
type ContainerServiceWindowsProfileResponsePtrInput interface {
	pulumi.Input

	ToContainerServiceWindowsProfileResponsePtrOutput() ContainerServiceWindowsProfileResponsePtrOutput
	ToContainerServiceWindowsProfileResponsePtrOutputWithContext(context.Context) ContainerServiceWindowsProfileResponsePtrOutput
}

type containerServiceWindowsProfileResponsePtrType ContainerServiceWindowsProfileResponseArgs

func ContainerServiceWindowsProfileResponsePtr(v *ContainerServiceWindowsProfileResponseArgs) ContainerServiceWindowsProfileResponsePtrInput {
	return (*containerServiceWindowsProfileResponsePtrType)(v)
}

func (*containerServiceWindowsProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceWindowsProfileResponse)(nil)).Elem()
}

func (i *containerServiceWindowsProfileResponsePtrType) ToContainerServiceWindowsProfileResponsePtrOutput() ContainerServiceWindowsProfileResponsePtrOutput {
	return i.ToContainerServiceWindowsProfileResponsePtrOutputWithContext(context.Background())
}

func (i *containerServiceWindowsProfileResponsePtrType) ToContainerServiceWindowsProfileResponsePtrOutputWithContext(ctx context.Context) ContainerServiceWindowsProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceWindowsProfileResponsePtrOutput)
}

// Profile for Windows VMs in the container service cluster.
type ContainerServiceWindowsProfileResponseOutput struct{ *pulumi.OutputState }

func (ContainerServiceWindowsProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceWindowsProfileResponse)(nil)).Elem()
}

func (o ContainerServiceWindowsProfileResponseOutput) ToContainerServiceWindowsProfileResponseOutput() ContainerServiceWindowsProfileResponseOutput {
	return o
}

func (o ContainerServiceWindowsProfileResponseOutput) ToContainerServiceWindowsProfileResponseOutputWithContext(ctx context.Context) ContainerServiceWindowsProfileResponseOutput {
	return o
}

func (o ContainerServiceWindowsProfileResponseOutput) ToContainerServiceWindowsProfileResponsePtrOutput() ContainerServiceWindowsProfileResponsePtrOutput {
	return o.ToContainerServiceWindowsProfileResponsePtrOutputWithContext(context.Background())
}

func (o ContainerServiceWindowsProfileResponseOutput) ToContainerServiceWindowsProfileResponsePtrOutputWithContext(ctx context.Context) ContainerServiceWindowsProfileResponsePtrOutput {
	return o.ApplyT(func(v ContainerServiceWindowsProfileResponse) *ContainerServiceWindowsProfileResponse {
		return &v
	}).(ContainerServiceWindowsProfileResponsePtrOutput)
}

// The administrator password to use for Windows VMs.
func (o ContainerServiceWindowsProfileResponseOutput) AdminPassword() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerServiceWindowsProfileResponse) string { return v.AdminPassword }).(pulumi.StringOutput)
}

// The administrator username to use for Windows VMs.
func (o ContainerServiceWindowsProfileResponseOutput) AdminUsername() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerServiceWindowsProfileResponse) string { return v.AdminUsername }).(pulumi.StringOutput)
}

type ContainerServiceWindowsProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ContainerServiceWindowsProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceWindowsProfileResponse)(nil)).Elem()
}

func (o ContainerServiceWindowsProfileResponsePtrOutput) ToContainerServiceWindowsProfileResponsePtrOutput() ContainerServiceWindowsProfileResponsePtrOutput {
	return o
}

func (o ContainerServiceWindowsProfileResponsePtrOutput) ToContainerServiceWindowsProfileResponsePtrOutputWithContext(ctx context.Context) ContainerServiceWindowsProfileResponsePtrOutput {
	return o
}

func (o ContainerServiceWindowsProfileResponsePtrOutput) Elem() ContainerServiceWindowsProfileResponseOutput {
	return o.ApplyT(func(v *ContainerServiceWindowsProfileResponse) ContainerServiceWindowsProfileResponse { return *v }).(ContainerServiceWindowsProfileResponseOutput)
}

// The administrator password to use for Windows VMs.
func (o ContainerServiceWindowsProfileResponsePtrOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceWindowsProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AdminPassword
	}).(pulumi.StringPtrOutput)
}

// The administrator username to use for Windows VMs.
func (o ContainerServiceWindowsProfileResponsePtrOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceWindowsProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AdminUsername
	}).(pulumi.StringPtrOutput)
}

// The credential result response.
type CredentialResultResponse struct {
	// The name of the credential.
	Name string `pulumi:"name"`
	// Base64-encoded Kubernetes configuration file.
	Value string `pulumi:"value"`
}

// CredentialResultResponseInput is an input type that accepts CredentialResultResponseArgs and CredentialResultResponseOutput values.
// You can construct a concrete instance of `CredentialResultResponseInput` via:
//
//          CredentialResultResponseArgs{...}
type CredentialResultResponseInput interface {
	pulumi.Input

	ToCredentialResultResponseOutput() CredentialResultResponseOutput
	ToCredentialResultResponseOutputWithContext(context.Context) CredentialResultResponseOutput
}

// The credential result response.
type CredentialResultResponseArgs struct {
	// The name of the credential.
	Name pulumi.StringInput `pulumi:"name"`
	// Base64-encoded Kubernetes configuration file.
	Value pulumi.StringInput `pulumi:"value"`
}

func (CredentialResultResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CredentialResultResponse)(nil)).Elem()
}

func (i CredentialResultResponseArgs) ToCredentialResultResponseOutput() CredentialResultResponseOutput {
	return i.ToCredentialResultResponseOutputWithContext(context.Background())
}

func (i CredentialResultResponseArgs) ToCredentialResultResponseOutputWithContext(ctx context.Context) CredentialResultResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CredentialResultResponseOutput)
}

// CredentialResultResponseArrayInput is an input type that accepts CredentialResultResponseArray and CredentialResultResponseArrayOutput values.
// You can construct a concrete instance of `CredentialResultResponseArrayInput` via:
//
//          CredentialResultResponseArray{ CredentialResultResponseArgs{...} }
type CredentialResultResponseArrayInput interface {
	pulumi.Input

	ToCredentialResultResponseArrayOutput() CredentialResultResponseArrayOutput
	ToCredentialResultResponseArrayOutputWithContext(context.Context) CredentialResultResponseArrayOutput
}

type CredentialResultResponseArray []CredentialResultResponseInput

func (CredentialResultResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CredentialResultResponse)(nil)).Elem()
}

func (i CredentialResultResponseArray) ToCredentialResultResponseArrayOutput() CredentialResultResponseArrayOutput {
	return i.ToCredentialResultResponseArrayOutputWithContext(context.Background())
}

func (i CredentialResultResponseArray) ToCredentialResultResponseArrayOutputWithContext(ctx context.Context) CredentialResultResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CredentialResultResponseArrayOutput)
}

// The credential result response.
type CredentialResultResponseOutput struct{ *pulumi.OutputState }

func (CredentialResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CredentialResultResponse)(nil)).Elem()
}

func (o CredentialResultResponseOutput) ToCredentialResultResponseOutput() CredentialResultResponseOutput {
	return o
}

func (o CredentialResultResponseOutput) ToCredentialResultResponseOutputWithContext(ctx context.Context) CredentialResultResponseOutput {
	return o
}

// The name of the credential.
func (o CredentialResultResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CredentialResultResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Base64-encoded Kubernetes configuration file.
func (o CredentialResultResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v CredentialResultResponse) string { return v.Value }).(pulumi.StringOutput)
}

type CredentialResultResponseArrayOutput struct{ *pulumi.OutputState }

func (CredentialResultResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CredentialResultResponse)(nil)).Elem()
}

func (o CredentialResultResponseArrayOutput) ToCredentialResultResponseArrayOutput() CredentialResultResponseArrayOutput {
	return o
}

func (o CredentialResultResponseArrayOutput) ToCredentialResultResponseArrayOutputWithContext(ctx context.Context) CredentialResultResponseArrayOutput {
	return o
}

func (o CredentialResultResponseArrayOutput) Index(i pulumi.IntInput) CredentialResultResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CredentialResultResponse {
		return vs[0].([]CredentialResultResponse)[vs[1].(int)]
	}).(CredentialResultResponseOutput)
}

// Reference to a secret stored in Azure Key Vault.
type KeyVaultSecretRef struct {
	// The secret name.
	SecretName string `pulumi:"secretName"`
	// Key vault identifier.
	VaultID string `pulumi:"vaultID"`
	// The secret version.
	Version *string `pulumi:"version"`
}

// KeyVaultSecretRefInput is an input type that accepts KeyVaultSecretRefArgs and KeyVaultSecretRefOutput values.
// You can construct a concrete instance of `KeyVaultSecretRefInput` via:
//
//          KeyVaultSecretRefArgs{...}
type KeyVaultSecretRefInput interface {
	pulumi.Input

	ToKeyVaultSecretRefOutput() KeyVaultSecretRefOutput
	ToKeyVaultSecretRefOutputWithContext(context.Context) KeyVaultSecretRefOutput
}

// Reference to a secret stored in Azure Key Vault.
type KeyVaultSecretRefArgs struct {
	// The secret name.
	SecretName pulumi.StringInput `pulumi:"secretName"`
	// Key vault identifier.
	VaultID pulumi.StringInput `pulumi:"vaultID"`
	// The secret version.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (KeyVaultSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultSecretRef)(nil)).Elem()
}

func (i KeyVaultSecretRefArgs) ToKeyVaultSecretRefOutput() KeyVaultSecretRefOutput {
	return i.ToKeyVaultSecretRefOutputWithContext(context.Background())
}

func (i KeyVaultSecretRefArgs) ToKeyVaultSecretRefOutputWithContext(ctx context.Context) KeyVaultSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultSecretRefOutput)
}

func (i KeyVaultSecretRefArgs) ToKeyVaultSecretRefPtrOutput() KeyVaultSecretRefPtrOutput {
	return i.ToKeyVaultSecretRefPtrOutputWithContext(context.Background())
}

func (i KeyVaultSecretRefArgs) ToKeyVaultSecretRefPtrOutputWithContext(ctx context.Context) KeyVaultSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultSecretRefOutput).ToKeyVaultSecretRefPtrOutputWithContext(ctx)
}

// KeyVaultSecretRefPtrInput is an input type that accepts KeyVaultSecretRefArgs, KeyVaultSecretRefPtr and KeyVaultSecretRefPtrOutput values.
// You can construct a concrete instance of `KeyVaultSecretRefPtrInput` via:
//
//          KeyVaultSecretRefArgs{...}
//
//  or:
//
//          nil
type KeyVaultSecretRefPtrInput interface {
	pulumi.Input

	ToKeyVaultSecretRefPtrOutput() KeyVaultSecretRefPtrOutput
	ToKeyVaultSecretRefPtrOutputWithContext(context.Context) KeyVaultSecretRefPtrOutput
}

type keyVaultSecretRefPtrType KeyVaultSecretRefArgs

func KeyVaultSecretRefPtr(v *KeyVaultSecretRefArgs) KeyVaultSecretRefPtrInput {
	return (*keyVaultSecretRefPtrType)(v)
}

func (*keyVaultSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultSecretRef)(nil)).Elem()
}

func (i *keyVaultSecretRefPtrType) ToKeyVaultSecretRefPtrOutput() KeyVaultSecretRefPtrOutput {
	return i.ToKeyVaultSecretRefPtrOutputWithContext(context.Background())
}

func (i *keyVaultSecretRefPtrType) ToKeyVaultSecretRefPtrOutputWithContext(ctx context.Context) KeyVaultSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultSecretRefPtrOutput)
}

// Reference to a secret stored in Azure Key Vault.
type KeyVaultSecretRefOutput struct{ *pulumi.OutputState }

func (KeyVaultSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultSecretRef)(nil)).Elem()
}

func (o KeyVaultSecretRefOutput) ToKeyVaultSecretRefOutput() KeyVaultSecretRefOutput {
	return o
}

func (o KeyVaultSecretRefOutput) ToKeyVaultSecretRefOutputWithContext(ctx context.Context) KeyVaultSecretRefOutput {
	return o
}

func (o KeyVaultSecretRefOutput) ToKeyVaultSecretRefPtrOutput() KeyVaultSecretRefPtrOutput {
	return o.ToKeyVaultSecretRefPtrOutputWithContext(context.Background())
}

func (o KeyVaultSecretRefOutput) ToKeyVaultSecretRefPtrOutputWithContext(ctx context.Context) KeyVaultSecretRefPtrOutput {
	return o.ApplyT(func(v KeyVaultSecretRef) *KeyVaultSecretRef {
		return &v
	}).(KeyVaultSecretRefPtrOutput)
}

// The secret name.
func (o KeyVaultSecretRefOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSecretRef) string { return v.SecretName }).(pulumi.StringOutput)
}

// Key vault identifier.
func (o KeyVaultSecretRefOutput) VaultID() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSecretRef) string { return v.VaultID }).(pulumi.StringOutput)
}

// The secret version.
func (o KeyVaultSecretRefOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultSecretRef) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type KeyVaultSecretRefPtrOutput struct{ *pulumi.OutputState }

func (KeyVaultSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultSecretRef)(nil)).Elem()
}

func (o KeyVaultSecretRefPtrOutput) ToKeyVaultSecretRefPtrOutput() KeyVaultSecretRefPtrOutput {
	return o
}

func (o KeyVaultSecretRefPtrOutput) ToKeyVaultSecretRefPtrOutputWithContext(ctx context.Context) KeyVaultSecretRefPtrOutput {
	return o
}

func (o KeyVaultSecretRefPtrOutput) Elem() KeyVaultSecretRefOutput {
	return o.ApplyT(func(v *KeyVaultSecretRef) KeyVaultSecretRef { return *v }).(KeyVaultSecretRefOutput)
}

// The secret name.
func (o KeyVaultSecretRefPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

// Key vault identifier.
func (o KeyVaultSecretRefPtrOutput) VaultID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.VaultID
	}).(pulumi.StringPtrOutput)
}

// The secret version.
func (o KeyVaultSecretRefPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Reference to a secret stored in Azure Key Vault.
type KeyVaultSecretRefResponse struct {
	// The secret name.
	SecretName string `pulumi:"secretName"`
	// Key vault identifier.
	VaultID string `pulumi:"vaultID"`
	// The secret version.
	Version *string `pulumi:"version"`
}

// KeyVaultSecretRefResponseInput is an input type that accepts KeyVaultSecretRefResponseArgs and KeyVaultSecretRefResponseOutput values.
// You can construct a concrete instance of `KeyVaultSecretRefResponseInput` via:
//
//          KeyVaultSecretRefResponseArgs{...}
type KeyVaultSecretRefResponseInput interface {
	pulumi.Input

	ToKeyVaultSecretRefResponseOutput() KeyVaultSecretRefResponseOutput
	ToKeyVaultSecretRefResponseOutputWithContext(context.Context) KeyVaultSecretRefResponseOutput
}

// Reference to a secret stored in Azure Key Vault.
type KeyVaultSecretRefResponseArgs struct {
	// The secret name.
	SecretName pulumi.StringInput `pulumi:"secretName"`
	// Key vault identifier.
	VaultID pulumi.StringInput `pulumi:"vaultID"`
	// The secret version.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (KeyVaultSecretRefResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultSecretRefResponse)(nil)).Elem()
}

func (i KeyVaultSecretRefResponseArgs) ToKeyVaultSecretRefResponseOutput() KeyVaultSecretRefResponseOutput {
	return i.ToKeyVaultSecretRefResponseOutputWithContext(context.Background())
}

func (i KeyVaultSecretRefResponseArgs) ToKeyVaultSecretRefResponseOutputWithContext(ctx context.Context) KeyVaultSecretRefResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultSecretRefResponseOutput)
}

func (i KeyVaultSecretRefResponseArgs) ToKeyVaultSecretRefResponsePtrOutput() KeyVaultSecretRefResponsePtrOutput {
	return i.ToKeyVaultSecretRefResponsePtrOutputWithContext(context.Background())
}

func (i KeyVaultSecretRefResponseArgs) ToKeyVaultSecretRefResponsePtrOutputWithContext(ctx context.Context) KeyVaultSecretRefResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultSecretRefResponseOutput).ToKeyVaultSecretRefResponsePtrOutputWithContext(ctx)
}

// KeyVaultSecretRefResponsePtrInput is an input type that accepts KeyVaultSecretRefResponseArgs, KeyVaultSecretRefResponsePtr and KeyVaultSecretRefResponsePtrOutput values.
// You can construct a concrete instance of `KeyVaultSecretRefResponsePtrInput` via:
//
//          KeyVaultSecretRefResponseArgs{...}
//
//  or:
//
//          nil
type KeyVaultSecretRefResponsePtrInput interface {
	pulumi.Input

	ToKeyVaultSecretRefResponsePtrOutput() KeyVaultSecretRefResponsePtrOutput
	ToKeyVaultSecretRefResponsePtrOutputWithContext(context.Context) KeyVaultSecretRefResponsePtrOutput
}

type keyVaultSecretRefResponsePtrType KeyVaultSecretRefResponseArgs

func KeyVaultSecretRefResponsePtr(v *KeyVaultSecretRefResponseArgs) KeyVaultSecretRefResponsePtrInput {
	return (*keyVaultSecretRefResponsePtrType)(v)
}

func (*keyVaultSecretRefResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultSecretRefResponse)(nil)).Elem()
}

func (i *keyVaultSecretRefResponsePtrType) ToKeyVaultSecretRefResponsePtrOutput() KeyVaultSecretRefResponsePtrOutput {
	return i.ToKeyVaultSecretRefResponsePtrOutputWithContext(context.Background())
}

func (i *keyVaultSecretRefResponsePtrType) ToKeyVaultSecretRefResponsePtrOutputWithContext(ctx context.Context) KeyVaultSecretRefResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultSecretRefResponsePtrOutput)
}

// Reference to a secret stored in Azure Key Vault.
type KeyVaultSecretRefResponseOutput struct{ *pulumi.OutputState }

func (KeyVaultSecretRefResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultSecretRefResponse)(nil)).Elem()
}

func (o KeyVaultSecretRefResponseOutput) ToKeyVaultSecretRefResponseOutput() KeyVaultSecretRefResponseOutput {
	return o
}

func (o KeyVaultSecretRefResponseOutput) ToKeyVaultSecretRefResponseOutputWithContext(ctx context.Context) KeyVaultSecretRefResponseOutput {
	return o
}

func (o KeyVaultSecretRefResponseOutput) ToKeyVaultSecretRefResponsePtrOutput() KeyVaultSecretRefResponsePtrOutput {
	return o.ToKeyVaultSecretRefResponsePtrOutputWithContext(context.Background())
}

func (o KeyVaultSecretRefResponseOutput) ToKeyVaultSecretRefResponsePtrOutputWithContext(ctx context.Context) KeyVaultSecretRefResponsePtrOutput {
	return o.ApplyT(func(v KeyVaultSecretRefResponse) *KeyVaultSecretRefResponse {
		return &v
	}).(KeyVaultSecretRefResponsePtrOutput)
}

// The secret name.
func (o KeyVaultSecretRefResponseOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSecretRefResponse) string { return v.SecretName }).(pulumi.StringOutput)
}

// Key vault identifier.
func (o KeyVaultSecretRefResponseOutput) VaultID() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSecretRefResponse) string { return v.VaultID }).(pulumi.StringOutput)
}

// The secret version.
func (o KeyVaultSecretRefResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultSecretRefResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type KeyVaultSecretRefResponsePtrOutput struct{ *pulumi.OutputState }

func (KeyVaultSecretRefResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultSecretRefResponse)(nil)).Elem()
}

func (o KeyVaultSecretRefResponsePtrOutput) ToKeyVaultSecretRefResponsePtrOutput() KeyVaultSecretRefResponsePtrOutput {
	return o
}

func (o KeyVaultSecretRefResponsePtrOutput) ToKeyVaultSecretRefResponsePtrOutputWithContext(ctx context.Context) KeyVaultSecretRefResponsePtrOutput {
	return o
}

func (o KeyVaultSecretRefResponsePtrOutput) Elem() KeyVaultSecretRefResponseOutput {
	return o.ApplyT(func(v *KeyVaultSecretRefResponse) KeyVaultSecretRefResponse { return *v }).(KeyVaultSecretRefResponseOutput)
}

// The secret name.
func (o KeyVaultSecretRefResponsePtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultSecretRefResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

// Key vault identifier.
func (o KeyVaultSecretRefResponsePtrOutput) VaultID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultSecretRefResponse) *string {
		if v == nil {
			return nil
		}
		return &v.VaultID
	}).(pulumi.StringPtrOutput)
}

// The secret version.
func (o KeyVaultSecretRefResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultSecretRefResponse) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Managed cluster.
type ManagedClusterType struct {
	// The identity of the managed cluster, if configured.
	Identity *ManagedClusterIdentityResponse `pulumi:"identity"`
	// Resource location
	Location string `pulumi:"location"`
	// Resource name
	Name string `pulumi:"name"`
	// Properties of a managed cluster.
	Properties ManagedClusterPropertiesResponse `pulumi:"properties"`
	// The managed cluster SKU.
	Sku *ManagedClusterSKUResponse `pulumi:"sku"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type string `pulumi:"type"`
}

// ManagedClusterTypeInput is an input type that accepts ManagedClusterTypeArgs and ManagedClusterTypeOutput values.
// You can construct a concrete instance of `ManagedClusterTypeInput` via:
//
//          ManagedClusterTypeArgs{...}
type ManagedClusterTypeInput interface {
	pulumi.Input

	ToManagedClusterTypeOutput() ManagedClusterTypeOutput
	ToManagedClusterTypeOutputWithContext(context.Context) ManagedClusterTypeOutput
}

// Managed cluster.
type ManagedClusterTypeArgs struct {
	// The identity of the managed cluster, if configured.
	Identity ManagedClusterIdentityResponsePtrInput `pulumi:"identity"`
	// Resource location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource name
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of a managed cluster.
	Properties ManagedClusterPropertiesResponseInput `pulumi:"properties"`
	// The managed cluster SKU.
	Sku ManagedClusterSKUResponsePtrInput `pulumi:"sku"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringInput `pulumi:"type"`
}

func (ManagedClusterTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterType)(nil)).Elem()
}

func (i ManagedClusterTypeArgs) ToManagedClusterTypeOutput() ManagedClusterTypeOutput {
	return i.ToManagedClusterTypeOutputWithContext(context.Background())
}

func (i ManagedClusterTypeArgs) ToManagedClusterTypeOutputWithContext(ctx context.Context) ManagedClusterTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterTypeOutput)
}

// Managed cluster.
type ManagedClusterTypeOutput struct{ *pulumi.OutputState }

func (ManagedClusterTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterType)(nil)).Elem()
}

func (o ManagedClusterTypeOutput) ToManagedClusterTypeOutput() ManagedClusterTypeOutput {
	return o
}

func (o ManagedClusterTypeOutput) ToManagedClusterTypeOutputWithContext(ctx context.Context) ManagedClusterTypeOutput {
	return o
}

// The identity of the managed cluster, if configured.
func (o ManagedClusterTypeOutput) Identity() ManagedClusterIdentityResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterType) *ManagedClusterIdentityResponse { return v.Identity }).(ManagedClusterIdentityResponsePtrOutput)
}

// Resource location
func (o ManagedClusterTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource name
func (o ManagedClusterTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of a managed cluster.
func (o ManagedClusterTypeOutput) Properties() ManagedClusterPropertiesResponseOutput {
	return o.ApplyT(func(v ManagedClusterType) ManagedClusterPropertiesResponse { return v.Properties }).(ManagedClusterPropertiesResponseOutput)
}

// The managed cluster SKU.
func (o ManagedClusterTypeOutput) Sku() ManagedClusterSKUResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterType) *ManagedClusterSKUResponse { return v.Sku }).(ManagedClusterSKUResponsePtrOutput)
}

// Resource tags
func (o ManagedClusterTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ManagedClusterType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o ManagedClusterTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterType) string { return v.Type }).(pulumi.StringOutput)
}

// AADProfile specifies attributes for Azure Active Directory integration.
type ManagedClusterAADProfile struct {
	// AAD group object IDs that will have admin role of the cluster.
	AdminGroupObjectIDs []string `pulumi:"adminGroupObjectIDs"`
	// The client AAD application ID.
	ClientAppID *string `pulumi:"clientAppID"`
	// Whether to enable Azure RBAC for Kubernetes authorization.
	EnableAzureRBAC *bool `pulumi:"enableAzureRBAC"`
	// Whether to enable managed AAD.
	Managed *bool `pulumi:"managed"`
	// The server AAD application ID.
	ServerAppID *string `pulumi:"serverAppID"`
	// The server AAD application secret.
	ServerAppSecret *string `pulumi:"serverAppSecret"`
	// The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
	TenantID *string `pulumi:"tenantID"`
}

// ManagedClusterAADProfileInput is an input type that accepts ManagedClusterAADProfileArgs and ManagedClusterAADProfileOutput values.
// You can construct a concrete instance of `ManagedClusterAADProfileInput` via:
//
//          ManagedClusterAADProfileArgs{...}
type ManagedClusterAADProfileInput interface {
	pulumi.Input

	ToManagedClusterAADProfileOutput() ManagedClusterAADProfileOutput
	ToManagedClusterAADProfileOutputWithContext(context.Context) ManagedClusterAADProfileOutput
}

// AADProfile specifies attributes for Azure Active Directory integration.
type ManagedClusterAADProfileArgs struct {
	// AAD group object IDs that will have admin role of the cluster.
	AdminGroupObjectIDs pulumi.StringArrayInput `pulumi:"adminGroupObjectIDs"`
	// The client AAD application ID.
	ClientAppID pulumi.StringPtrInput `pulumi:"clientAppID"`
	// Whether to enable Azure RBAC for Kubernetes authorization.
	EnableAzureRBAC pulumi.BoolPtrInput `pulumi:"enableAzureRBAC"`
	// Whether to enable managed AAD.
	Managed pulumi.BoolPtrInput `pulumi:"managed"`
	// The server AAD application ID.
	ServerAppID pulumi.StringPtrInput `pulumi:"serverAppID"`
	// The server AAD application secret.
	ServerAppSecret pulumi.StringPtrInput `pulumi:"serverAppSecret"`
	// The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
	TenantID pulumi.StringPtrInput `pulumi:"tenantID"`
}

func (ManagedClusterAADProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAADProfile)(nil)).Elem()
}

func (i ManagedClusterAADProfileArgs) ToManagedClusterAADProfileOutput() ManagedClusterAADProfileOutput {
	return i.ToManagedClusterAADProfileOutputWithContext(context.Background())
}

func (i ManagedClusterAADProfileArgs) ToManagedClusterAADProfileOutputWithContext(ctx context.Context) ManagedClusterAADProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAADProfileOutput)
}

func (i ManagedClusterAADProfileArgs) ToManagedClusterAADProfilePtrOutput() ManagedClusterAADProfilePtrOutput {
	return i.ToManagedClusterAADProfilePtrOutputWithContext(context.Background())
}

func (i ManagedClusterAADProfileArgs) ToManagedClusterAADProfilePtrOutputWithContext(ctx context.Context) ManagedClusterAADProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAADProfileOutput).ToManagedClusterAADProfilePtrOutputWithContext(ctx)
}

// ManagedClusterAADProfilePtrInput is an input type that accepts ManagedClusterAADProfileArgs, ManagedClusterAADProfilePtr and ManagedClusterAADProfilePtrOutput values.
// You can construct a concrete instance of `ManagedClusterAADProfilePtrInput` via:
//
//          ManagedClusterAADProfileArgs{...}
//
//  or:
//
//          nil
type ManagedClusterAADProfilePtrInput interface {
	pulumi.Input

	ToManagedClusterAADProfilePtrOutput() ManagedClusterAADProfilePtrOutput
	ToManagedClusterAADProfilePtrOutputWithContext(context.Context) ManagedClusterAADProfilePtrOutput
}

type managedClusterAADProfilePtrType ManagedClusterAADProfileArgs

func ManagedClusterAADProfilePtr(v *ManagedClusterAADProfileArgs) ManagedClusterAADProfilePtrInput {
	return (*managedClusterAADProfilePtrType)(v)
}

func (*managedClusterAADProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterAADProfile)(nil)).Elem()
}

func (i *managedClusterAADProfilePtrType) ToManagedClusterAADProfilePtrOutput() ManagedClusterAADProfilePtrOutput {
	return i.ToManagedClusterAADProfilePtrOutputWithContext(context.Background())
}

func (i *managedClusterAADProfilePtrType) ToManagedClusterAADProfilePtrOutputWithContext(ctx context.Context) ManagedClusterAADProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAADProfilePtrOutput)
}

// AADProfile specifies attributes for Azure Active Directory integration.
type ManagedClusterAADProfileOutput struct{ *pulumi.OutputState }

func (ManagedClusterAADProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAADProfile)(nil)).Elem()
}

func (o ManagedClusterAADProfileOutput) ToManagedClusterAADProfileOutput() ManagedClusterAADProfileOutput {
	return o
}

func (o ManagedClusterAADProfileOutput) ToManagedClusterAADProfileOutputWithContext(ctx context.Context) ManagedClusterAADProfileOutput {
	return o
}

func (o ManagedClusterAADProfileOutput) ToManagedClusterAADProfilePtrOutput() ManagedClusterAADProfilePtrOutput {
	return o.ToManagedClusterAADProfilePtrOutputWithContext(context.Background())
}

func (o ManagedClusterAADProfileOutput) ToManagedClusterAADProfilePtrOutputWithContext(ctx context.Context) ManagedClusterAADProfilePtrOutput {
	return o.ApplyT(func(v ManagedClusterAADProfile) *ManagedClusterAADProfile {
		return &v
	}).(ManagedClusterAADProfilePtrOutput)
}

// AAD group object IDs that will have admin role of the cluster.
func (o ManagedClusterAADProfileOutput) AdminGroupObjectIDs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedClusterAADProfile) []string { return v.AdminGroupObjectIDs }).(pulumi.StringArrayOutput)
}

// The client AAD application ID.
func (o ManagedClusterAADProfileOutput) ClientAppID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAADProfile) *string { return v.ClientAppID }).(pulumi.StringPtrOutput)
}

// Whether to enable Azure RBAC for Kubernetes authorization.
func (o ManagedClusterAADProfileOutput) EnableAzureRBAC() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAADProfile) *bool { return v.EnableAzureRBAC }).(pulumi.BoolPtrOutput)
}

// Whether to enable managed AAD.
func (o ManagedClusterAADProfileOutput) Managed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAADProfile) *bool { return v.Managed }).(pulumi.BoolPtrOutput)
}

// The server AAD application ID.
func (o ManagedClusterAADProfileOutput) ServerAppID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAADProfile) *string { return v.ServerAppID }).(pulumi.StringPtrOutput)
}

// The server AAD application secret.
func (o ManagedClusterAADProfileOutput) ServerAppSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAADProfile) *string { return v.ServerAppSecret }).(pulumi.StringPtrOutput)
}

// The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
func (o ManagedClusterAADProfileOutput) TenantID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAADProfile) *string { return v.TenantID }).(pulumi.StringPtrOutput)
}

type ManagedClusterAADProfilePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterAADProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterAADProfile)(nil)).Elem()
}

func (o ManagedClusterAADProfilePtrOutput) ToManagedClusterAADProfilePtrOutput() ManagedClusterAADProfilePtrOutput {
	return o
}

func (o ManagedClusterAADProfilePtrOutput) ToManagedClusterAADProfilePtrOutputWithContext(ctx context.Context) ManagedClusterAADProfilePtrOutput {
	return o
}

func (o ManagedClusterAADProfilePtrOutput) Elem() ManagedClusterAADProfileOutput {
	return o.ApplyT(func(v *ManagedClusterAADProfile) ManagedClusterAADProfile { return *v }).(ManagedClusterAADProfileOutput)
}

// AAD group object IDs that will have admin role of the cluster.
func (o ManagedClusterAADProfilePtrOutput) AdminGroupObjectIDs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedClusterAADProfile) []string {
		if v == nil {
			return nil
		}
		return v.AdminGroupObjectIDs
	}).(pulumi.StringArrayOutput)
}

// The client AAD application ID.
func (o ManagedClusterAADProfilePtrOutput) ClientAppID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAADProfile) *string {
		if v == nil {
			return nil
		}
		return v.ClientAppID
	}).(pulumi.StringPtrOutput)
}

// Whether to enable Azure RBAC for Kubernetes authorization.
func (o ManagedClusterAADProfilePtrOutput) EnableAzureRBAC() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAADProfile) *bool {
		if v == nil {
			return nil
		}
		return v.EnableAzureRBAC
	}).(pulumi.BoolPtrOutput)
}

// Whether to enable managed AAD.
func (o ManagedClusterAADProfilePtrOutput) Managed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAADProfile) *bool {
		if v == nil {
			return nil
		}
		return v.Managed
	}).(pulumi.BoolPtrOutput)
}

// The server AAD application ID.
func (o ManagedClusterAADProfilePtrOutput) ServerAppID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAADProfile) *string {
		if v == nil {
			return nil
		}
		return v.ServerAppID
	}).(pulumi.StringPtrOutput)
}

// The server AAD application secret.
func (o ManagedClusterAADProfilePtrOutput) ServerAppSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAADProfile) *string {
		if v == nil {
			return nil
		}
		return v.ServerAppSecret
	}).(pulumi.StringPtrOutput)
}

// The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
func (o ManagedClusterAADProfilePtrOutput) TenantID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAADProfile) *string {
		if v == nil {
			return nil
		}
		return v.TenantID
	}).(pulumi.StringPtrOutput)
}

// AADProfile specifies attributes for Azure Active Directory integration.
type ManagedClusterAADProfileResponse struct {
	// AAD group object IDs that will have admin role of the cluster.
	AdminGroupObjectIDs []string `pulumi:"adminGroupObjectIDs"`
	// The client AAD application ID.
	ClientAppID *string `pulumi:"clientAppID"`
	// Whether to enable Azure RBAC for Kubernetes authorization.
	EnableAzureRBAC *bool `pulumi:"enableAzureRBAC"`
	// Whether to enable managed AAD.
	Managed *bool `pulumi:"managed"`
	// The server AAD application ID.
	ServerAppID *string `pulumi:"serverAppID"`
	// The server AAD application secret.
	ServerAppSecret *string `pulumi:"serverAppSecret"`
	// The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
	TenantID *string `pulumi:"tenantID"`
}

// ManagedClusterAADProfileResponseInput is an input type that accepts ManagedClusterAADProfileResponseArgs and ManagedClusterAADProfileResponseOutput values.
// You can construct a concrete instance of `ManagedClusterAADProfileResponseInput` via:
//
//          ManagedClusterAADProfileResponseArgs{...}
type ManagedClusterAADProfileResponseInput interface {
	pulumi.Input

	ToManagedClusterAADProfileResponseOutput() ManagedClusterAADProfileResponseOutput
	ToManagedClusterAADProfileResponseOutputWithContext(context.Context) ManagedClusterAADProfileResponseOutput
}

// AADProfile specifies attributes for Azure Active Directory integration.
type ManagedClusterAADProfileResponseArgs struct {
	// AAD group object IDs that will have admin role of the cluster.
	AdminGroupObjectIDs pulumi.StringArrayInput `pulumi:"adminGroupObjectIDs"`
	// The client AAD application ID.
	ClientAppID pulumi.StringPtrInput `pulumi:"clientAppID"`
	// Whether to enable Azure RBAC for Kubernetes authorization.
	EnableAzureRBAC pulumi.BoolPtrInput `pulumi:"enableAzureRBAC"`
	// Whether to enable managed AAD.
	Managed pulumi.BoolPtrInput `pulumi:"managed"`
	// The server AAD application ID.
	ServerAppID pulumi.StringPtrInput `pulumi:"serverAppID"`
	// The server AAD application secret.
	ServerAppSecret pulumi.StringPtrInput `pulumi:"serverAppSecret"`
	// The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
	TenantID pulumi.StringPtrInput `pulumi:"tenantID"`
}

func (ManagedClusterAADProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAADProfileResponse)(nil)).Elem()
}

func (i ManagedClusterAADProfileResponseArgs) ToManagedClusterAADProfileResponseOutput() ManagedClusterAADProfileResponseOutput {
	return i.ToManagedClusterAADProfileResponseOutputWithContext(context.Background())
}

func (i ManagedClusterAADProfileResponseArgs) ToManagedClusterAADProfileResponseOutputWithContext(ctx context.Context) ManagedClusterAADProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAADProfileResponseOutput)
}

func (i ManagedClusterAADProfileResponseArgs) ToManagedClusterAADProfileResponsePtrOutput() ManagedClusterAADProfileResponsePtrOutput {
	return i.ToManagedClusterAADProfileResponsePtrOutputWithContext(context.Background())
}

func (i ManagedClusterAADProfileResponseArgs) ToManagedClusterAADProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterAADProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAADProfileResponseOutput).ToManagedClusterAADProfileResponsePtrOutputWithContext(ctx)
}

// ManagedClusterAADProfileResponsePtrInput is an input type that accepts ManagedClusterAADProfileResponseArgs, ManagedClusterAADProfileResponsePtr and ManagedClusterAADProfileResponsePtrOutput values.
// You can construct a concrete instance of `ManagedClusterAADProfileResponsePtrInput` via:
//
//          ManagedClusterAADProfileResponseArgs{...}
//
//  or:
//
//          nil
type ManagedClusterAADProfileResponsePtrInput interface {
	pulumi.Input

	ToManagedClusterAADProfileResponsePtrOutput() ManagedClusterAADProfileResponsePtrOutput
	ToManagedClusterAADProfileResponsePtrOutputWithContext(context.Context) ManagedClusterAADProfileResponsePtrOutput
}

type managedClusterAADProfileResponsePtrType ManagedClusterAADProfileResponseArgs

func ManagedClusterAADProfileResponsePtr(v *ManagedClusterAADProfileResponseArgs) ManagedClusterAADProfileResponsePtrInput {
	return (*managedClusterAADProfileResponsePtrType)(v)
}

func (*managedClusterAADProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterAADProfileResponse)(nil)).Elem()
}

func (i *managedClusterAADProfileResponsePtrType) ToManagedClusterAADProfileResponsePtrOutput() ManagedClusterAADProfileResponsePtrOutput {
	return i.ToManagedClusterAADProfileResponsePtrOutputWithContext(context.Background())
}

func (i *managedClusterAADProfileResponsePtrType) ToManagedClusterAADProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterAADProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAADProfileResponsePtrOutput)
}

// AADProfile specifies attributes for Azure Active Directory integration.
type ManagedClusterAADProfileResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterAADProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAADProfileResponse)(nil)).Elem()
}

func (o ManagedClusterAADProfileResponseOutput) ToManagedClusterAADProfileResponseOutput() ManagedClusterAADProfileResponseOutput {
	return o
}

func (o ManagedClusterAADProfileResponseOutput) ToManagedClusterAADProfileResponseOutputWithContext(ctx context.Context) ManagedClusterAADProfileResponseOutput {
	return o
}

func (o ManagedClusterAADProfileResponseOutput) ToManagedClusterAADProfileResponsePtrOutput() ManagedClusterAADProfileResponsePtrOutput {
	return o.ToManagedClusterAADProfileResponsePtrOutputWithContext(context.Background())
}

func (o ManagedClusterAADProfileResponseOutput) ToManagedClusterAADProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterAADProfileResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterAADProfileResponse) *ManagedClusterAADProfileResponse {
		return &v
	}).(ManagedClusterAADProfileResponsePtrOutput)
}

// AAD group object IDs that will have admin role of the cluster.
func (o ManagedClusterAADProfileResponseOutput) AdminGroupObjectIDs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedClusterAADProfileResponse) []string { return v.AdminGroupObjectIDs }).(pulumi.StringArrayOutput)
}

// The client AAD application ID.
func (o ManagedClusterAADProfileResponseOutput) ClientAppID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAADProfileResponse) *string { return v.ClientAppID }).(pulumi.StringPtrOutput)
}

// Whether to enable Azure RBAC for Kubernetes authorization.
func (o ManagedClusterAADProfileResponseOutput) EnableAzureRBAC() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAADProfileResponse) *bool { return v.EnableAzureRBAC }).(pulumi.BoolPtrOutput)
}

// Whether to enable managed AAD.
func (o ManagedClusterAADProfileResponseOutput) Managed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAADProfileResponse) *bool { return v.Managed }).(pulumi.BoolPtrOutput)
}

// The server AAD application ID.
func (o ManagedClusterAADProfileResponseOutput) ServerAppID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAADProfileResponse) *string { return v.ServerAppID }).(pulumi.StringPtrOutput)
}

// The server AAD application secret.
func (o ManagedClusterAADProfileResponseOutput) ServerAppSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAADProfileResponse) *string { return v.ServerAppSecret }).(pulumi.StringPtrOutput)
}

// The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
func (o ManagedClusterAADProfileResponseOutput) TenantID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAADProfileResponse) *string { return v.TenantID }).(pulumi.StringPtrOutput)
}

type ManagedClusterAADProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterAADProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterAADProfileResponse)(nil)).Elem()
}

func (o ManagedClusterAADProfileResponsePtrOutput) ToManagedClusterAADProfileResponsePtrOutput() ManagedClusterAADProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterAADProfileResponsePtrOutput) ToManagedClusterAADProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterAADProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterAADProfileResponsePtrOutput) Elem() ManagedClusterAADProfileResponseOutput {
	return o.ApplyT(func(v *ManagedClusterAADProfileResponse) ManagedClusterAADProfileResponse { return *v }).(ManagedClusterAADProfileResponseOutput)
}

// AAD group object IDs that will have admin role of the cluster.
func (o ManagedClusterAADProfileResponsePtrOutput) AdminGroupObjectIDs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedClusterAADProfileResponse) []string {
		if v == nil {
			return nil
		}
		return v.AdminGroupObjectIDs
	}).(pulumi.StringArrayOutput)
}

// The client AAD application ID.
func (o ManagedClusterAADProfileResponsePtrOutput) ClientAppID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAADProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientAppID
	}).(pulumi.StringPtrOutput)
}

// Whether to enable Azure RBAC for Kubernetes authorization.
func (o ManagedClusterAADProfileResponsePtrOutput) EnableAzureRBAC() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAADProfileResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableAzureRBAC
	}).(pulumi.BoolPtrOutput)
}

// Whether to enable managed AAD.
func (o ManagedClusterAADProfileResponsePtrOutput) Managed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAADProfileResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Managed
	}).(pulumi.BoolPtrOutput)
}

// The server AAD application ID.
func (o ManagedClusterAADProfileResponsePtrOutput) ServerAppID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAADProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServerAppID
	}).(pulumi.StringPtrOutput)
}

// The server AAD application secret.
func (o ManagedClusterAADProfileResponsePtrOutput) ServerAppSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAADProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServerAppSecret
	}).(pulumi.StringPtrOutput)
}

// The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
func (o ManagedClusterAADProfileResponsePtrOutput) TenantID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAADProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.TenantID
	}).(pulumi.StringPtrOutput)
}

// Access profile for managed cluster API server.
type ManagedClusterAPIServerAccessProfile struct {
	// Authorized IP Ranges to kubernetes API server.
	AuthorizedIPRanges []string `pulumi:"authorizedIPRanges"`
	// Whether to create the cluster as a private cluster or not.
	EnablePrivateCluster *bool `pulumi:"enablePrivateCluster"`
}

// ManagedClusterAPIServerAccessProfileInput is an input type that accepts ManagedClusterAPIServerAccessProfileArgs and ManagedClusterAPIServerAccessProfileOutput values.
// You can construct a concrete instance of `ManagedClusterAPIServerAccessProfileInput` via:
//
//          ManagedClusterAPIServerAccessProfileArgs{...}
type ManagedClusterAPIServerAccessProfileInput interface {
	pulumi.Input

	ToManagedClusterAPIServerAccessProfileOutput() ManagedClusterAPIServerAccessProfileOutput
	ToManagedClusterAPIServerAccessProfileOutputWithContext(context.Context) ManagedClusterAPIServerAccessProfileOutput
}

// Access profile for managed cluster API server.
type ManagedClusterAPIServerAccessProfileArgs struct {
	// Authorized IP Ranges to kubernetes API server.
	AuthorizedIPRanges pulumi.StringArrayInput `pulumi:"authorizedIPRanges"`
	// Whether to create the cluster as a private cluster or not.
	EnablePrivateCluster pulumi.BoolPtrInput `pulumi:"enablePrivateCluster"`
}

func (ManagedClusterAPIServerAccessProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAPIServerAccessProfile)(nil)).Elem()
}

func (i ManagedClusterAPIServerAccessProfileArgs) ToManagedClusterAPIServerAccessProfileOutput() ManagedClusterAPIServerAccessProfileOutput {
	return i.ToManagedClusterAPIServerAccessProfileOutputWithContext(context.Background())
}

func (i ManagedClusterAPIServerAccessProfileArgs) ToManagedClusterAPIServerAccessProfileOutputWithContext(ctx context.Context) ManagedClusterAPIServerAccessProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAPIServerAccessProfileOutput)
}

func (i ManagedClusterAPIServerAccessProfileArgs) ToManagedClusterAPIServerAccessProfilePtrOutput() ManagedClusterAPIServerAccessProfilePtrOutput {
	return i.ToManagedClusterAPIServerAccessProfilePtrOutputWithContext(context.Background())
}

func (i ManagedClusterAPIServerAccessProfileArgs) ToManagedClusterAPIServerAccessProfilePtrOutputWithContext(ctx context.Context) ManagedClusterAPIServerAccessProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAPIServerAccessProfileOutput).ToManagedClusterAPIServerAccessProfilePtrOutputWithContext(ctx)
}

// ManagedClusterAPIServerAccessProfilePtrInput is an input type that accepts ManagedClusterAPIServerAccessProfileArgs, ManagedClusterAPIServerAccessProfilePtr and ManagedClusterAPIServerAccessProfilePtrOutput values.
// You can construct a concrete instance of `ManagedClusterAPIServerAccessProfilePtrInput` via:
//
//          ManagedClusterAPIServerAccessProfileArgs{...}
//
//  or:
//
//          nil
type ManagedClusterAPIServerAccessProfilePtrInput interface {
	pulumi.Input

	ToManagedClusterAPIServerAccessProfilePtrOutput() ManagedClusterAPIServerAccessProfilePtrOutput
	ToManagedClusterAPIServerAccessProfilePtrOutputWithContext(context.Context) ManagedClusterAPIServerAccessProfilePtrOutput
}

type managedClusterAPIServerAccessProfilePtrType ManagedClusterAPIServerAccessProfileArgs

func ManagedClusterAPIServerAccessProfilePtr(v *ManagedClusterAPIServerAccessProfileArgs) ManagedClusterAPIServerAccessProfilePtrInput {
	return (*managedClusterAPIServerAccessProfilePtrType)(v)
}

func (*managedClusterAPIServerAccessProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterAPIServerAccessProfile)(nil)).Elem()
}

func (i *managedClusterAPIServerAccessProfilePtrType) ToManagedClusterAPIServerAccessProfilePtrOutput() ManagedClusterAPIServerAccessProfilePtrOutput {
	return i.ToManagedClusterAPIServerAccessProfilePtrOutputWithContext(context.Background())
}

func (i *managedClusterAPIServerAccessProfilePtrType) ToManagedClusterAPIServerAccessProfilePtrOutputWithContext(ctx context.Context) ManagedClusterAPIServerAccessProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAPIServerAccessProfilePtrOutput)
}

// Access profile for managed cluster API server.
type ManagedClusterAPIServerAccessProfileOutput struct{ *pulumi.OutputState }

func (ManagedClusterAPIServerAccessProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAPIServerAccessProfile)(nil)).Elem()
}

func (o ManagedClusterAPIServerAccessProfileOutput) ToManagedClusterAPIServerAccessProfileOutput() ManagedClusterAPIServerAccessProfileOutput {
	return o
}

func (o ManagedClusterAPIServerAccessProfileOutput) ToManagedClusterAPIServerAccessProfileOutputWithContext(ctx context.Context) ManagedClusterAPIServerAccessProfileOutput {
	return o
}

func (o ManagedClusterAPIServerAccessProfileOutput) ToManagedClusterAPIServerAccessProfilePtrOutput() ManagedClusterAPIServerAccessProfilePtrOutput {
	return o.ToManagedClusterAPIServerAccessProfilePtrOutputWithContext(context.Background())
}

func (o ManagedClusterAPIServerAccessProfileOutput) ToManagedClusterAPIServerAccessProfilePtrOutputWithContext(ctx context.Context) ManagedClusterAPIServerAccessProfilePtrOutput {
	return o.ApplyT(func(v ManagedClusterAPIServerAccessProfile) *ManagedClusterAPIServerAccessProfile {
		return &v
	}).(ManagedClusterAPIServerAccessProfilePtrOutput)
}

// Authorized IP Ranges to kubernetes API server.
func (o ManagedClusterAPIServerAccessProfileOutput) AuthorizedIPRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedClusterAPIServerAccessProfile) []string { return v.AuthorizedIPRanges }).(pulumi.StringArrayOutput)
}

// Whether to create the cluster as a private cluster or not.
func (o ManagedClusterAPIServerAccessProfileOutput) EnablePrivateCluster() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAPIServerAccessProfile) *bool { return v.EnablePrivateCluster }).(pulumi.BoolPtrOutput)
}

type ManagedClusterAPIServerAccessProfilePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterAPIServerAccessProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterAPIServerAccessProfile)(nil)).Elem()
}

func (o ManagedClusterAPIServerAccessProfilePtrOutput) ToManagedClusterAPIServerAccessProfilePtrOutput() ManagedClusterAPIServerAccessProfilePtrOutput {
	return o
}

func (o ManagedClusterAPIServerAccessProfilePtrOutput) ToManagedClusterAPIServerAccessProfilePtrOutputWithContext(ctx context.Context) ManagedClusterAPIServerAccessProfilePtrOutput {
	return o
}

func (o ManagedClusterAPIServerAccessProfilePtrOutput) Elem() ManagedClusterAPIServerAccessProfileOutput {
	return o.ApplyT(func(v *ManagedClusterAPIServerAccessProfile) ManagedClusterAPIServerAccessProfile { return *v }).(ManagedClusterAPIServerAccessProfileOutput)
}

// Authorized IP Ranges to kubernetes API server.
func (o ManagedClusterAPIServerAccessProfilePtrOutput) AuthorizedIPRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedClusterAPIServerAccessProfile) []string {
		if v == nil {
			return nil
		}
		return v.AuthorizedIPRanges
	}).(pulumi.StringArrayOutput)
}

// Whether to create the cluster as a private cluster or not.
func (o ManagedClusterAPIServerAccessProfilePtrOutput) EnablePrivateCluster() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAPIServerAccessProfile) *bool {
		if v == nil {
			return nil
		}
		return v.EnablePrivateCluster
	}).(pulumi.BoolPtrOutput)
}

// Access profile for managed cluster API server.
type ManagedClusterAPIServerAccessProfileResponse struct {
	// Authorized IP Ranges to kubernetes API server.
	AuthorizedIPRanges []string `pulumi:"authorizedIPRanges"`
	// Whether to create the cluster as a private cluster or not.
	EnablePrivateCluster *bool `pulumi:"enablePrivateCluster"`
}

// ManagedClusterAPIServerAccessProfileResponseInput is an input type that accepts ManagedClusterAPIServerAccessProfileResponseArgs and ManagedClusterAPIServerAccessProfileResponseOutput values.
// You can construct a concrete instance of `ManagedClusterAPIServerAccessProfileResponseInput` via:
//
//          ManagedClusterAPIServerAccessProfileResponseArgs{...}
type ManagedClusterAPIServerAccessProfileResponseInput interface {
	pulumi.Input

	ToManagedClusterAPIServerAccessProfileResponseOutput() ManagedClusterAPIServerAccessProfileResponseOutput
	ToManagedClusterAPIServerAccessProfileResponseOutputWithContext(context.Context) ManagedClusterAPIServerAccessProfileResponseOutput
}

// Access profile for managed cluster API server.
type ManagedClusterAPIServerAccessProfileResponseArgs struct {
	// Authorized IP Ranges to kubernetes API server.
	AuthorizedIPRanges pulumi.StringArrayInput `pulumi:"authorizedIPRanges"`
	// Whether to create the cluster as a private cluster or not.
	EnablePrivateCluster pulumi.BoolPtrInput `pulumi:"enablePrivateCluster"`
}

func (ManagedClusterAPIServerAccessProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAPIServerAccessProfileResponse)(nil)).Elem()
}

func (i ManagedClusterAPIServerAccessProfileResponseArgs) ToManagedClusterAPIServerAccessProfileResponseOutput() ManagedClusterAPIServerAccessProfileResponseOutput {
	return i.ToManagedClusterAPIServerAccessProfileResponseOutputWithContext(context.Background())
}

func (i ManagedClusterAPIServerAccessProfileResponseArgs) ToManagedClusterAPIServerAccessProfileResponseOutputWithContext(ctx context.Context) ManagedClusterAPIServerAccessProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAPIServerAccessProfileResponseOutput)
}

func (i ManagedClusterAPIServerAccessProfileResponseArgs) ToManagedClusterAPIServerAccessProfileResponsePtrOutput() ManagedClusterAPIServerAccessProfileResponsePtrOutput {
	return i.ToManagedClusterAPIServerAccessProfileResponsePtrOutputWithContext(context.Background())
}

func (i ManagedClusterAPIServerAccessProfileResponseArgs) ToManagedClusterAPIServerAccessProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterAPIServerAccessProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAPIServerAccessProfileResponseOutput).ToManagedClusterAPIServerAccessProfileResponsePtrOutputWithContext(ctx)
}

// ManagedClusterAPIServerAccessProfileResponsePtrInput is an input type that accepts ManagedClusterAPIServerAccessProfileResponseArgs, ManagedClusterAPIServerAccessProfileResponsePtr and ManagedClusterAPIServerAccessProfileResponsePtrOutput values.
// You can construct a concrete instance of `ManagedClusterAPIServerAccessProfileResponsePtrInput` via:
//
//          ManagedClusterAPIServerAccessProfileResponseArgs{...}
//
//  or:
//
//          nil
type ManagedClusterAPIServerAccessProfileResponsePtrInput interface {
	pulumi.Input

	ToManagedClusterAPIServerAccessProfileResponsePtrOutput() ManagedClusterAPIServerAccessProfileResponsePtrOutput
	ToManagedClusterAPIServerAccessProfileResponsePtrOutputWithContext(context.Context) ManagedClusterAPIServerAccessProfileResponsePtrOutput
}

type managedClusterAPIServerAccessProfileResponsePtrType ManagedClusterAPIServerAccessProfileResponseArgs

func ManagedClusterAPIServerAccessProfileResponsePtr(v *ManagedClusterAPIServerAccessProfileResponseArgs) ManagedClusterAPIServerAccessProfileResponsePtrInput {
	return (*managedClusterAPIServerAccessProfileResponsePtrType)(v)
}

func (*managedClusterAPIServerAccessProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterAPIServerAccessProfileResponse)(nil)).Elem()
}

func (i *managedClusterAPIServerAccessProfileResponsePtrType) ToManagedClusterAPIServerAccessProfileResponsePtrOutput() ManagedClusterAPIServerAccessProfileResponsePtrOutput {
	return i.ToManagedClusterAPIServerAccessProfileResponsePtrOutputWithContext(context.Background())
}

func (i *managedClusterAPIServerAccessProfileResponsePtrType) ToManagedClusterAPIServerAccessProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterAPIServerAccessProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAPIServerAccessProfileResponsePtrOutput)
}

// Access profile for managed cluster API server.
type ManagedClusterAPIServerAccessProfileResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterAPIServerAccessProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAPIServerAccessProfileResponse)(nil)).Elem()
}

func (o ManagedClusterAPIServerAccessProfileResponseOutput) ToManagedClusterAPIServerAccessProfileResponseOutput() ManagedClusterAPIServerAccessProfileResponseOutput {
	return o
}

func (o ManagedClusterAPIServerAccessProfileResponseOutput) ToManagedClusterAPIServerAccessProfileResponseOutputWithContext(ctx context.Context) ManagedClusterAPIServerAccessProfileResponseOutput {
	return o
}

func (o ManagedClusterAPIServerAccessProfileResponseOutput) ToManagedClusterAPIServerAccessProfileResponsePtrOutput() ManagedClusterAPIServerAccessProfileResponsePtrOutput {
	return o.ToManagedClusterAPIServerAccessProfileResponsePtrOutputWithContext(context.Background())
}

func (o ManagedClusterAPIServerAccessProfileResponseOutput) ToManagedClusterAPIServerAccessProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterAPIServerAccessProfileResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterAPIServerAccessProfileResponse) *ManagedClusterAPIServerAccessProfileResponse {
		return &v
	}).(ManagedClusterAPIServerAccessProfileResponsePtrOutput)
}

// Authorized IP Ranges to kubernetes API server.
func (o ManagedClusterAPIServerAccessProfileResponseOutput) AuthorizedIPRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedClusterAPIServerAccessProfileResponse) []string { return v.AuthorizedIPRanges }).(pulumi.StringArrayOutput)
}

// Whether to create the cluster as a private cluster or not.
func (o ManagedClusterAPIServerAccessProfileResponseOutput) EnablePrivateCluster() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAPIServerAccessProfileResponse) *bool { return v.EnablePrivateCluster }).(pulumi.BoolPtrOutput)
}

type ManagedClusterAPIServerAccessProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterAPIServerAccessProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterAPIServerAccessProfileResponse)(nil)).Elem()
}

func (o ManagedClusterAPIServerAccessProfileResponsePtrOutput) ToManagedClusterAPIServerAccessProfileResponsePtrOutput() ManagedClusterAPIServerAccessProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterAPIServerAccessProfileResponsePtrOutput) ToManagedClusterAPIServerAccessProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterAPIServerAccessProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterAPIServerAccessProfileResponsePtrOutput) Elem() ManagedClusterAPIServerAccessProfileResponseOutput {
	return o.ApplyT(func(v *ManagedClusterAPIServerAccessProfileResponse) ManagedClusterAPIServerAccessProfileResponse {
		return *v
	}).(ManagedClusterAPIServerAccessProfileResponseOutput)
}

// Authorized IP Ranges to kubernetes API server.
func (o ManagedClusterAPIServerAccessProfileResponsePtrOutput) AuthorizedIPRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedClusterAPIServerAccessProfileResponse) []string {
		if v == nil {
			return nil
		}
		return v.AuthorizedIPRanges
	}).(pulumi.StringArrayOutput)
}

// Whether to create the cluster as a private cluster or not.
func (o ManagedClusterAPIServerAccessProfileResponsePtrOutput) EnablePrivateCluster() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAPIServerAccessProfileResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnablePrivateCluster
	}).(pulumi.BoolPtrOutput)
}

// Agent Pool.
type ManagedClusterAgentPoolType struct {
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name string `pulumi:"name"`
	// Properties of an agent pool.
	Properties ManagedClusterAgentPoolProfilePropertiesResponse `pulumi:"properties"`
	// Resource type
	Type string `pulumi:"type"`
}

// ManagedClusterAgentPoolTypeInput is an input type that accepts ManagedClusterAgentPoolTypeArgs and ManagedClusterAgentPoolTypeOutput values.
// You can construct a concrete instance of `ManagedClusterAgentPoolTypeInput` via:
//
//          ManagedClusterAgentPoolTypeArgs{...}
type ManagedClusterAgentPoolTypeInput interface {
	pulumi.Input

	ToManagedClusterAgentPoolTypeOutput() ManagedClusterAgentPoolTypeOutput
	ToManagedClusterAgentPoolTypeOutputWithContext(context.Context) ManagedClusterAgentPoolTypeOutput
}

// Agent Pool.
type ManagedClusterAgentPoolTypeArgs struct {
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of an agent pool.
	Properties ManagedClusterAgentPoolProfilePropertiesResponseInput `pulumi:"properties"`
	// Resource type
	Type pulumi.StringInput `pulumi:"type"`
}

func (ManagedClusterAgentPoolTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAgentPoolType)(nil)).Elem()
}

func (i ManagedClusterAgentPoolTypeArgs) ToManagedClusterAgentPoolTypeOutput() ManagedClusterAgentPoolTypeOutput {
	return i.ToManagedClusterAgentPoolTypeOutputWithContext(context.Background())
}

func (i ManagedClusterAgentPoolTypeArgs) ToManagedClusterAgentPoolTypeOutputWithContext(ctx context.Context) ManagedClusterAgentPoolTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAgentPoolTypeOutput)
}

// Agent Pool.
type ManagedClusterAgentPoolTypeOutput struct{ *pulumi.OutputState }

func (ManagedClusterAgentPoolTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAgentPoolType)(nil)).Elem()
}

func (o ManagedClusterAgentPoolTypeOutput) ToManagedClusterAgentPoolTypeOutput() ManagedClusterAgentPoolTypeOutput {
	return o
}

func (o ManagedClusterAgentPoolTypeOutput) ToManagedClusterAgentPoolTypeOutputWithContext(ctx context.Context) ManagedClusterAgentPoolTypeOutput {
	return o
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ManagedClusterAgentPoolTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of an agent pool.
func (o ManagedClusterAgentPoolTypeOutput) Properties() ManagedClusterAgentPoolProfilePropertiesResponseOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolType) ManagedClusterAgentPoolProfilePropertiesResponse {
		return v.Properties
	}).(ManagedClusterAgentPoolProfilePropertiesResponseOutput)
}

// Resource type
func (o ManagedClusterAgentPoolTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolType) string { return v.Type }).(pulumi.StringOutput)
}

// Profile for the container service agent pool.
type ManagedClusterAgentPoolProfile struct {
	// Availability zones for nodes. Must use VirtualMachineScaleSets AgentPoolType.
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 100 (inclusive) for user pools and in the range of 1 to 100 (inclusive) for system pools. The default value is 1.
	Count *int `pulumi:"count"`
	// Whether to enable auto-scaler
	EnableAutoScaling *bool `pulumi:"enableAutoScaling"`
	// Enable public IP for nodes
	EnableNodePublicIP *bool `pulumi:"enableNodePublicIP"`
	// Maximum number of nodes for auto-scaling
	MaxCount *int `pulumi:"maxCount"`
	// Maximum number of pods that can run on a node.
	MaxPods *int `pulumi:"maxPods"`
	// Minimum number of nodes for auto-scaling
	MinCount *int `pulumi:"minCount"`
	// AgentPoolMode represents mode of an agent pool
	Mode *string `pulumi:"mode"`
	// Unique name of the agent pool profile in the context of the subscription and resource group.
	Name string `pulumi:"name"`
	// Version of node image
	NodeImageVersion *string `pulumi:"nodeImageVersion"`
	// Agent pool node labels to be persisted across all nodes in agent pool.
	NodeLabels map[string]string `pulumi:"nodeLabels"`
	// Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
	NodeTaints []string `pulumi:"nodeTaints"`
	// Version of orchestrator specified when creating the managed cluster.
	OrchestratorVersion *string `pulumi:"orchestratorVersion"`
	// OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
	OsDiskSizeGB *ContainerServiceOSDisk `pulumi:"osDiskSizeGB"`
	// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
	OsType *string `pulumi:"osType"`
	// The ID for Proximity Placement Group.
	ProximityPlacementGroupID *string `pulumi:"proximityPlacementGroupID"`
	// ScaleSetEvictionPolicy to be used to specify eviction policy for Spot virtual machine scale set. Default to Delete.
	ScaleSetEvictionPolicy *string `pulumi:"scaleSetEvictionPolicy"`
	// ScaleSetPriority to be used to specify virtual machine scale set priority. Default to regular.
	ScaleSetPriority *string `pulumi:"scaleSetPriority"`
	// SpotMaxPrice to be used to specify the maximum price you are willing to pay in US Dollars. Possible values are any decimal value greater than zero or -1 which indicates default price to be up-to on-demand.
	SpotMaxPrice *SpotMaxPrice `pulumi:"spotMaxPrice"`
	// Agent pool tags to be persisted on the agent pool virtual machine scale set.
	Tags map[string]string `pulumi:"tags"`
	// AgentPoolType represents types of an agent pool
	Type *string `pulumi:"type"`
	// Settings for upgrading the agentpool
	UpgradeSettings *AgentPoolUpgradeSettings `pulumi:"upgradeSettings"`
	// Size of agent VMs.
	VmSize *string `pulumi:"vmSize"`
	// VNet SubnetID specifies the VNet's subnet identifier.
	VnetSubnetID *string `pulumi:"vnetSubnetID"`
}

// ManagedClusterAgentPoolProfileInput is an input type that accepts ManagedClusterAgentPoolProfileArgs and ManagedClusterAgentPoolProfileOutput values.
// You can construct a concrete instance of `ManagedClusterAgentPoolProfileInput` via:
//
//          ManagedClusterAgentPoolProfileArgs{...}
type ManagedClusterAgentPoolProfileInput interface {
	pulumi.Input

	ToManagedClusterAgentPoolProfileOutput() ManagedClusterAgentPoolProfileOutput
	ToManagedClusterAgentPoolProfileOutputWithContext(context.Context) ManagedClusterAgentPoolProfileOutput
}

// Profile for the container service agent pool.
type ManagedClusterAgentPoolProfileArgs struct {
	// Availability zones for nodes. Must use VirtualMachineScaleSets AgentPoolType.
	AvailabilityZones pulumi.StringArrayInput `pulumi:"availabilityZones"`
	// Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 100 (inclusive) for user pools and in the range of 1 to 100 (inclusive) for system pools. The default value is 1.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// Whether to enable auto-scaler
	EnableAutoScaling pulumi.BoolPtrInput `pulumi:"enableAutoScaling"`
	// Enable public IP for nodes
	EnableNodePublicIP pulumi.BoolPtrInput `pulumi:"enableNodePublicIP"`
	// Maximum number of nodes for auto-scaling
	MaxCount pulumi.IntPtrInput `pulumi:"maxCount"`
	// Maximum number of pods that can run on a node.
	MaxPods pulumi.IntPtrInput `pulumi:"maxPods"`
	// Minimum number of nodes for auto-scaling
	MinCount pulumi.IntPtrInput `pulumi:"minCount"`
	// AgentPoolMode represents mode of an agent pool
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Unique name of the agent pool profile in the context of the subscription and resource group.
	Name pulumi.StringInput `pulumi:"name"`
	// Version of node image
	NodeImageVersion pulumi.StringPtrInput `pulumi:"nodeImageVersion"`
	// Agent pool node labels to be persisted across all nodes in agent pool.
	NodeLabels pulumi.StringMapInput `pulumi:"nodeLabels"`
	// Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
	NodeTaints pulumi.StringArrayInput `pulumi:"nodeTaints"`
	// Version of orchestrator specified when creating the managed cluster.
	OrchestratorVersion pulumi.StringPtrInput `pulumi:"orchestratorVersion"`
	// OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
	OsDiskSizeGB ContainerServiceOSDiskPtrInput `pulumi:"osDiskSizeGB"`
	// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// The ID for Proximity Placement Group.
	ProximityPlacementGroupID pulumi.StringPtrInput `pulumi:"proximityPlacementGroupID"`
	// ScaleSetEvictionPolicy to be used to specify eviction policy for Spot virtual machine scale set. Default to Delete.
	ScaleSetEvictionPolicy pulumi.StringPtrInput `pulumi:"scaleSetEvictionPolicy"`
	// ScaleSetPriority to be used to specify virtual machine scale set priority. Default to regular.
	ScaleSetPriority pulumi.StringPtrInput `pulumi:"scaleSetPriority"`
	// SpotMaxPrice to be used to specify the maximum price you are willing to pay in US Dollars. Possible values are any decimal value greater than zero or -1 which indicates default price to be up-to on-demand.
	SpotMaxPrice SpotMaxPricePtrInput `pulumi:"spotMaxPrice"`
	// Agent pool tags to be persisted on the agent pool virtual machine scale set.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// AgentPoolType represents types of an agent pool
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Settings for upgrading the agentpool
	UpgradeSettings AgentPoolUpgradeSettingsPtrInput `pulumi:"upgradeSettings"`
	// Size of agent VMs.
	VmSize pulumi.StringPtrInput `pulumi:"vmSize"`
	// VNet SubnetID specifies the VNet's subnet identifier.
	VnetSubnetID pulumi.StringPtrInput `pulumi:"vnetSubnetID"`
}

func (ManagedClusterAgentPoolProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAgentPoolProfile)(nil)).Elem()
}

func (i ManagedClusterAgentPoolProfileArgs) ToManagedClusterAgentPoolProfileOutput() ManagedClusterAgentPoolProfileOutput {
	return i.ToManagedClusterAgentPoolProfileOutputWithContext(context.Background())
}

func (i ManagedClusterAgentPoolProfileArgs) ToManagedClusterAgentPoolProfileOutputWithContext(ctx context.Context) ManagedClusterAgentPoolProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAgentPoolProfileOutput)
}

// ManagedClusterAgentPoolProfileArrayInput is an input type that accepts ManagedClusterAgentPoolProfileArray and ManagedClusterAgentPoolProfileArrayOutput values.
// You can construct a concrete instance of `ManagedClusterAgentPoolProfileArrayInput` via:
//
//          ManagedClusterAgentPoolProfileArray{ ManagedClusterAgentPoolProfileArgs{...} }
type ManagedClusterAgentPoolProfileArrayInput interface {
	pulumi.Input

	ToManagedClusterAgentPoolProfileArrayOutput() ManagedClusterAgentPoolProfileArrayOutput
	ToManagedClusterAgentPoolProfileArrayOutputWithContext(context.Context) ManagedClusterAgentPoolProfileArrayOutput
}

type ManagedClusterAgentPoolProfileArray []ManagedClusterAgentPoolProfileInput

func (ManagedClusterAgentPoolProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedClusterAgentPoolProfile)(nil)).Elem()
}

func (i ManagedClusterAgentPoolProfileArray) ToManagedClusterAgentPoolProfileArrayOutput() ManagedClusterAgentPoolProfileArrayOutput {
	return i.ToManagedClusterAgentPoolProfileArrayOutputWithContext(context.Background())
}

func (i ManagedClusterAgentPoolProfileArray) ToManagedClusterAgentPoolProfileArrayOutputWithContext(ctx context.Context) ManagedClusterAgentPoolProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAgentPoolProfileArrayOutput)
}

// Profile for the container service agent pool.
type ManagedClusterAgentPoolProfileOutput struct{ *pulumi.OutputState }

func (ManagedClusterAgentPoolProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAgentPoolProfile)(nil)).Elem()
}

func (o ManagedClusterAgentPoolProfileOutput) ToManagedClusterAgentPoolProfileOutput() ManagedClusterAgentPoolProfileOutput {
	return o
}

func (o ManagedClusterAgentPoolProfileOutput) ToManagedClusterAgentPoolProfileOutputWithContext(ctx context.Context) ManagedClusterAgentPoolProfileOutput {
	return o
}

// Availability zones for nodes. Must use VirtualMachineScaleSets AgentPoolType.
func (o ManagedClusterAgentPoolProfileOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 100 (inclusive) for user pools and in the range of 1 to 100 (inclusive) for system pools. The default value is 1.
func (o ManagedClusterAgentPoolProfileOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Whether to enable auto-scaler
func (o ManagedClusterAgentPoolProfileOutput) EnableAutoScaling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *bool { return v.EnableAutoScaling }).(pulumi.BoolPtrOutput)
}

// Enable public IP for nodes
func (o ManagedClusterAgentPoolProfileOutput) EnableNodePublicIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *bool { return v.EnableNodePublicIP }).(pulumi.BoolPtrOutput)
}

// Maximum number of nodes for auto-scaling
func (o ManagedClusterAgentPoolProfileOutput) MaxCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *int { return v.MaxCount }).(pulumi.IntPtrOutput)
}

// Maximum number of pods that can run on a node.
func (o ManagedClusterAgentPoolProfileOutput) MaxPods() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *int { return v.MaxPods }).(pulumi.IntPtrOutput)
}

// Minimum number of nodes for auto-scaling
func (o ManagedClusterAgentPoolProfileOutput) MinCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *int { return v.MinCount }).(pulumi.IntPtrOutput)
}

// AgentPoolMode represents mode of an agent pool
func (o ManagedClusterAgentPoolProfileOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Unique name of the agent pool profile in the context of the subscription and resource group.
func (o ManagedClusterAgentPoolProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) string { return v.Name }).(pulumi.StringOutput)
}

// Version of node image
func (o ManagedClusterAgentPoolProfileOutput) NodeImageVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *string { return v.NodeImageVersion }).(pulumi.StringPtrOutput)
}

// Agent pool node labels to be persisted across all nodes in agent pool.
func (o ManagedClusterAgentPoolProfileOutput) NodeLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) map[string]string { return v.NodeLabels }).(pulumi.StringMapOutput)
}

// Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
func (o ManagedClusterAgentPoolProfileOutput) NodeTaints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) []string { return v.NodeTaints }).(pulumi.StringArrayOutput)
}

// Version of orchestrator specified when creating the managed cluster.
func (o ManagedClusterAgentPoolProfileOutput) OrchestratorVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *string { return v.OrchestratorVersion }).(pulumi.StringPtrOutput)
}

// OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
func (o ManagedClusterAgentPoolProfileOutput) OsDiskSizeGB() ContainerServiceOSDiskPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *ContainerServiceOSDisk { return v.OsDiskSizeGB }).(ContainerServiceOSDiskPtrOutput)
}

// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
func (o ManagedClusterAgentPoolProfileOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// The ID for Proximity Placement Group.
func (o ManagedClusterAgentPoolProfileOutput) ProximityPlacementGroupID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *string { return v.ProximityPlacementGroupID }).(pulumi.StringPtrOutput)
}

// ScaleSetEvictionPolicy to be used to specify eviction policy for Spot virtual machine scale set. Default to Delete.
func (o ManagedClusterAgentPoolProfileOutput) ScaleSetEvictionPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *string { return v.ScaleSetEvictionPolicy }).(pulumi.StringPtrOutput)
}

// ScaleSetPriority to be used to specify virtual machine scale set priority. Default to regular.
func (o ManagedClusterAgentPoolProfileOutput) ScaleSetPriority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *string { return v.ScaleSetPriority }).(pulumi.StringPtrOutput)
}

// SpotMaxPrice to be used to specify the maximum price you are willing to pay in US Dollars. Possible values are any decimal value greater than zero or -1 which indicates default price to be up-to on-demand.
func (o ManagedClusterAgentPoolProfileOutput) SpotMaxPrice() SpotMaxPricePtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *SpotMaxPrice { return v.SpotMaxPrice }).(SpotMaxPricePtrOutput)
}

// Agent pool tags to be persisted on the agent pool virtual machine scale set.
func (o ManagedClusterAgentPoolProfileOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// AgentPoolType represents types of an agent pool
func (o ManagedClusterAgentPoolProfileOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Settings for upgrading the agentpool
func (o ManagedClusterAgentPoolProfileOutput) UpgradeSettings() AgentPoolUpgradeSettingsPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *AgentPoolUpgradeSettings { return v.UpgradeSettings }).(AgentPoolUpgradeSettingsPtrOutput)
}

// Size of agent VMs.
func (o ManagedClusterAgentPoolProfileOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *string { return v.VmSize }).(pulumi.StringPtrOutput)
}

// VNet SubnetID specifies the VNet's subnet identifier.
func (o ManagedClusterAgentPoolProfileOutput) VnetSubnetID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *string { return v.VnetSubnetID }).(pulumi.StringPtrOutput)
}

type ManagedClusterAgentPoolProfileArrayOutput struct{ *pulumi.OutputState }

func (ManagedClusterAgentPoolProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedClusterAgentPoolProfile)(nil)).Elem()
}

func (o ManagedClusterAgentPoolProfileArrayOutput) ToManagedClusterAgentPoolProfileArrayOutput() ManagedClusterAgentPoolProfileArrayOutput {
	return o
}

func (o ManagedClusterAgentPoolProfileArrayOutput) ToManagedClusterAgentPoolProfileArrayOutputWithContext(ctx context.Context) ManagedClusterAgentPoolProfileArrayOutput {
	return o
}

func (o ManagedClusterAgentPoolProfileArrayOutput) Index(i pulumi.IntInput) ManagedClusterAgentPoolProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedClusterAgentPoolProfile {
		return vs[0].([]ManagedClusterAgentPoolProfile)[vs[1].(int)]
	}).(ManagedClusterAgentPoolProfileOutput)
}

// Properties for the container service agent pool profile.
type ManagedClusterAgentPoolProfileProperties struct {
	// Availability zones for nodes. Must use VirtualMachineScaleSets AgentPoolType.
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 100 (inclusive) for user pools and in the range of 1 to 100 (inclusive) for system pools. The default value is 1.
	Count *int `pulumi:"count"`
	// Whether to enable auto-scaler
	EnableAutoScaling *bool `pulumi:"enableAutoScaling"`
	// Enable public IP for nodes
	EnableNodePublicIP *bool `pulumi:"enableNodePublicIP"`
	// Maximum number of nodes for auto-scaling
	MaxCount *int `pulumi:"maxCount"`
	// Maximum number of pods that can run on a node.
	MaxPods *int `pulumi:"maxPods"`
	// Minimum number of nodes for auto-scaling
	MinCount *int `pulumi:"minCount"`
	// AgentPoolMode represents mode of an agent pool
	Mode *string `pulumi:"mode"`
	// Version of node image
	NodeImageVersion *string `pulumi:"nodeImageVersion"`
	// Agent pool node labels to be persisted across all nodes in agent pool.
	NodeLabels map[string]string `pulumi:"nodeLabels"`
	// Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
	NodeTaints []string `pulumi:"nodeTaints"`
	// Version of orchestrator specified when creating the managed cluster.
	OrchestratorVersion *string `pulumi:"orchestratorVersion"`
	// OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
	OsDiskSizeGB *ContainerServiceOSDisk `pulumi:"osDiskSizeGB"`
	// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
	OsType *string `pulumi:"osType"`
	// The ID for Proximity Placement Group.
	ProximityPlacementGroupID *string `pulumi:"proximityPlacementGroupID"`
	// ScaleSetEvictionPolicy to be used to specify eviction policy for Spot virtual machine scale set. Default to Delete.
	ScaleSetEvictionPolicy *string `pulumi:"scaleSetEvictionPolicy"`
	// ScaleSetPriority to be used to specify virtual machine scale set priority. Default to regular.
	ScaleSetPriority *string `pulumi:"scaleSetPriority"`
	// SpotMaxPrice to be used to specify the maximum price you are willing to pay in US Dollars. Possible values are any decimal value greater than zero or -1 which indicates default price to be up-to on-demand.
	SpotMaxPrice *SpotMaxPrice `pulumi:"spotMaxPrice"`
	// Agent pool tags to be persisted on the agent pool virtual machine scale set.
	Tags map[string]string `pulumi:"tags"`
	// AgentPoolType represents types of an agent pool
	Type *string `pulumi:"type"`
	// Settings for upgrading the agentpool
	UpgradeSettings *AgentPoolUpgradeSettings `pulumi:"upgradeSettings"`
	// Size of agent VMs.
	VmSize *string `pulumi:"vmSize"`
	// VNet SubnetID specifies the VNet's subnet identifier.
	VnetSubnetID *string `pulumi:"vnetSubnetID"`
}

// ManagedClusterAgentPoolProfilePropertiesInput is an input type that accepts ManagedClusterAgentPoolProfilePropertiesArgs and ManagedClusterAgentPoolProfilePropertiesOutput values.
// You can construct a concrete instance of `ManagedClusterAgentPoolProfilePropertiesInput` via:
//
//          ManagedClusterAgentPoolProfilePropertiesArgs{...}
type ManagedClusterAgentPoolProfilePropertiesInput interface {
	pulumi.Input

	ToManagedClusterAgentPoolProfilePropertiesOutput() ManagedClusterAgentPoolProfilePropertiesOutput
	ToManagedClusterAgentPoolProfilePropertiesOutputWithContext(context.Context) ManagedClusterAgentPoolProfilePropertiesOutput
}

// Properties for the container service agent pool profile.
type ManagedClusterAgentPoolProfilePropertiesArgs struct {
	// Availability zones for nodes. Must use VirtualMachineScaleSets AgentPoolType.
	AvailabilityZones pulumi.StringArrayInput `pulumi:"availabilityZones"`
	// Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 100 (inclusive) for user pools and in the range of 1 to 100 (inclusive) for system pools. The default value is 1.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// Whether to enable auto-scaler
	EnableAutoScaling pulumi.BoolPtrInput `pulumi:"enableAutoScaling"`
	// Enable public IP for nodes
	EnableNodePublicIP pulumi.BoolPtrInput `pulumi:"enableNodePublicIP"`
	// Maximum number of nodes for auto-scaling
	MaxCount pulumi.IntPtrInput `pulumi:"maxCount"`
	// Maximum number of pods that can run on a node.
	MaxPods pulumi.IntPtrInput `pulumi:"maxPods"`
	// Minimum number of nodes for auto-scaling
	MinCount pulumi.IntPtrInput `pulumi:"minCount"`
	// AgentPoolMode represents mode of an agent pool
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Version of node image
	NodeImageVersion pulumi.StringPtrInput `pulumi:"nodeImageVersion"`
	// Agent pool node labels to be persisted across all nodes in agent pool.
	NodeLabels pulumi.StringMapInput `pulumi:"nodeLabels"`
	// Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
	NodeTaints pulumi.StringArrayInput `pulumi:"nodeTaints"`
	// Version of orchestrator specified when creating the managed cluster.
	OrchestratorVersion pulumi.StringPtrInput `pulumi:"orchestratorVersion"`
	// OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
	OsDiskSizeGB ContainerServiceOSDiskPtrInput `pulumi:"osDiskSizeGB"`
	// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// The ID for Proximity Placement Group.
	ProximityPlacementGroupID pulumi.StringPtrInput `pulumi:"proximityPlacementGroupID"`
	// ScaleSetEvictionPolicy to be used to specify eviction policy for Spot virtual machine scale set. Default to Delete.
	ScaleSetEvictionPolicy pulumi.StringPtrInput `pulumi:"scaleSetEvictionPolicy"`
	// ScaleSetPriority to be used to specify virtual machine scale set priority. Default to regular.
	ScaleSetPriority pulumi.StringPtrInput `pulumi:"scaleSetPriority"`
	// SpotMaxPrice to be used to specify the maximum price you are willing to pay in US Dollars. Possible values are any decimal value greater than zero or -1 which indicates default price to be up-to on-demand.
	SpotMaxPrice SpotMaxPricePtrInput `pulumi:"spotMaxPrice"`
	// Agent pool tags to be persisted on the agent pool virtual machine scale set.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// AgentPoolType represents types of an agent pool
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Settings for upgrading the agentpool
	UpgradeSettings AgentPoolUpgradeSettingsPtrInput `pulumi:"upgradeSettings"`
	// Size of agent VMs.
	VmSize pulumi.StringPtrInput `pulumi:"vmSize"`
	// VNet SubnetID specifies the VNet's subnet identifier.
	VnetSubnetID pulumi.StringPtrInput `pulumi:"vnetSubnetID"`
}

func (ManagedClusterAgentPoolProfilePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAgentPoolProfileProperties)(nil)).Elem()
}

func (i ManagedClusterAgentPoolProfilePropertiesArgs) ToManagedClusterAgentPoolProfilePropertiesOutput() ManagedClusterAgentPoolProfilePropertiesOutput {
	return i.ToManagedClusterAgentPoolProfilePropertiesOutputWithContext(context.Background())
}

func (i ManagedClusterAgentPoolProfilePropertiesArgs) ToManagedClusterAgentPoolProfilePropertiesOutputWithContext(ctx context.Context) ManagedClusterAgentPoolProfilePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAgentPoolProfilePropertiesOutput)
}

func (i ManagedClusterAgentPoolProfilePropertiesArgs) ToManagedClusterAgentPoolProfilePropertiesPtrOutput() ManagedClusterAgentPoolProfilePropertiesPtrOutput {
	return i.ToManagedClusterAgentPoolProfilePropertiesPtrOutputWithContext(context.Background())
}

func (i ManagedClusterAgentPoolProfilePropertiesArgs) ToManagedClusterAgentPoolProfilePropertiesPtrOutputWithContext(ctx context.Context) ManagedClusterAgentPoolProfilePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAgentPoolProfilePropertiesOutput).ToManagedClusterAgentPoolProfilePropertiesPtrOutputWithContext(ctx)
}

// ManagedClusterAgentPoolProfilePropertiesPtrInput is an input type that accepts ManagedClusterAgentPoolProfilePropertiesArgs, ManagedClusterAgentPoolProfilePropertiesPtr and ManagedClusterAgentPoolProfilePropertiesPtrOutput values.
// You can construct a concrete instance of `ManagedClusterAgentPoolProfilePropertiesPtrInput` via:
//
//          ManagedClusterAgentPoolProfilePropertiesArgs{...}
//
//  or:
//
//          nil
type ManagedClusterAgentPoolProfilePropertiesPtrInput interface {
	pulumi.Input

	ToManagedClusterAgentPoolProfilePropertiesPtrOutput() ManagedClusterAgentPoolProfilePropertiesPtrOutput
	ToManagedClusterAgentPoolProfilePropertiesPtrOutputWithContext(context.Context) ManagedClusterAgentPoolProfilePropertiesPtrOutput
}

type managedClusterAgentPoolProfilePropertiesPtrType ManagedClusterAgentPoolProfilePropertiesArgs

func ManagedClusterAgentPoolProfilePropertiesPtr(v *ManagedClusterAgentPoolProfilePropertiesArgs) ManagedClusterAgentPoolProfilePropertiesPtrInput {
	return (*managedClusterAgentPoolProfilePropertiesPtrType)(v)
}

func (*managedClusterAgentPoolProfilePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterAgentPoolProfileProperties)(nil)).Elem()
}

func (i *managedClusterAgentPoolProfilePropertiesPtrType) ToManagedClusterAgentPoolProfilePropertiesPtrOutput() ManagedClusterAgentPoolProfilePropertiesPtrOutput {
	return i.ToManagedClusterAgentPoolProfilePropertiesPtrOutputWithContext(context.Background())
}

func (i *managedClusterAgentPoolProfilePropertiesPtrType) ToManagedClusterAgentPoolProfilePropertiesPtrOutputWithContext(ctx context.Context) ManagedClusterAgentPoolProfilePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAgentPoolProfilePropertiesPtrOutput)
}

// Properties for the container service agent pool profile.
type ManagedClusterAgentPoolProfilePropertiesOutput struct{ *pulumi.OutputState }

func (ManagedClusterAgentPoolProfilePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAgentPoolProfileProperties)(nil)).Elem()
}

func (o ManagedClusterAgentPoolProfilePropertiesOutput) ToManagedClusterAgentPoolProfilePropertiesOutput() ManagedClusterAgentPoolProfilePropertiesOutput {
	return o
}

func (o ManagedClusterAgentPoolProfilePropertiesOutput) ToManagedClusterAgentPoolProfilePropertiesOutputWithContext(ctx context.Context) ManagedClusterAgentPoolProfilePropertiesOutput {
	return o
}

func (o ManagedClusterAgentPoolProfilePropertiesOutput) ToManagedClusterAgentPoolProfilePropertiesPtrOutput() ManagedClusterAgentPoolProfilePropertiesPtrOutput {
	return o.ToManagedClusterAgentPoolProfilePropertiesPtrOutputWithContext(context.Background())
}

func (o ManagedClusterAgentPoolProfilePropertiesOutput) ToManagedClusterAgentPoolProfilePropertiesPtrOutputWithContext(ctx context.Context) ManagedClusterAgentPoolProfilePropertiesPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileProperties) *ManagedClusterAgentPoolProfileProperties {
		return &v
	}).(ManagedClusterAgentPoolProfilePropertiesPtrOutput)
}

// Availability zones for nodes. Must use VirtualMachineScaleSets AgentPoolType.
func (o ManagedClusterAgentPoolProfilePropertiesOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileProperties) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 100 (inclusive) for user pools and in the range of 1 to 100 (inclusive) for system pools. The default value is 1.
func (o ManagedClusterAgentPoolProfilePropertiesOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileProperties) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Whether to enable auto-scaler
func (o ManagedClusterAgentPoolProfilePropertiesOutput) EnableAutoScaling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileProperties) *bool { return v.EnableAutoScaling }).(pulumi.BoolPtrOutput)
}

// Enable public IP for nodes
func (o ManagedClusterAgentPoolProfilePropertiesOutput) EnableNodePublicIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileProperties) *bool { return v.EnableNodePublicIP }).(pulumi.BoolPtrOutput)
}

// Maximum number of nodes for auto-scaling
func (o ManagedClusterAgentPoolProfilePropertiesOutput) MaxCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileProperties) *int { return v.MaxCount }).(pulumi.IntPtrOutput)
}

// Maximum number of pods that can run on a node.
func (o ManagedClusterAgentPoolProfilePropertiesOutput) MaxPods() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileProperties) *int { return v.MaxPods }).(pulumi.IntPtrOutput)
}

// Minimum number of nodes for auto-scaling
func (o ManagedClusterAgentPoolProfilePropertiesOutput) MinCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileProperties) *int { return v.MinCount }).(pulumi.IntPtrOutput)
}

// AgentPoolMode represents mode of an agent pool
func (o ManagedClusterAgentPoolProfilePropertiesOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileProperties) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Version of node image
func (o ManagedClusterAgentPoolProfilePropertiesOutput) NodeImageVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileProperties) *string { return v.NodeImageVersion }).(pulumi.StringPtrOutput)
}

// Agent pool node labels to be persisted across all nodes in agent pool.
func (o ManagedClusterAgentPoolProfilePropertiesOutput) NodeLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileProperties) map[string]string { return v.NodeLabels }).(pulumi.StringMapOutput)
}

// Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
func (o ManagedClusterAgentPoolProfilePropertiesOutput) NodeTaints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileProperties) []string { return v.NodeTaints }).(pulumi.StringArrayOutput)
}

// Version of orchestrator specified when creating the managed cluster.
func (o ManagedClusterAgentPoolProfilePropertiesOutput) OrchestratorVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileProperties) *string { return v.OrchestratorVersion }).(pulumi.StringPtrOutput)
}

// OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
func (o ManagedClusterAgentPoolProfilePropertiesOutput) OsDiskSizeGB() ContainerServiceOSDiskPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileProperties) *ContainerServiceOSDisk { return v.OsDiskSizeGB }).(ContainerServiceOSDiskPtrOutput)
}

// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
func (o ManagedClusterAgentPoolProfilePropertiesOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileProperties) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// The ID for Proximity Placement Group.
func (o ManagedClusterAgentPoolProfilePropertiesOutput) ProximityPlacementGroupID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileProperties) *string { return v.ProximityPlacementGroupID }).(pulumi.StringPtrOutput)
}

// ScaleSetEvictionPolicy to be used to specify eviction policy for Spot virtual machine scale set. Default to Delete.
func (o ManagedClusterAgentPoolProfilePropertiesOutput) ScaleSetEvictionPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileProperties) *string { return v.ScaleSetEvictionPolicy }).(pulumi.StringPtrOutput)
}

// ScaleSetPriority to be used to specify virtual machine scale set priority. Default to regular.
func (o ManagedClusterAgentPoolProfilePropertiesOutput) ScaleSetPriority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileProperties) *string { return v.ScaleSetPriority }).(pulumi.StringPtrOutput)
}

// SpotMaxPrice to be used to specify the maximum price you are willing to pay in US Dollars. Possible values are any decimal value greater than zero or -1 which indicates default price to be up-to on-demand.
func (o ManagedClusterAgentPoolProfilePropertiesOutput) SpotMaxPrice() SpotMaxPricePtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileProperties) *SpotMaxPrice { return v.SpotMaxPrice }).(SpotMaxPricePtrOutput)
}

// Agent pool tags to be persisted on the agent pool virtual machine scale set.
func (o ManagedClusterAgentPoolProfilePropertiesOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileProperties) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// AgentPoolType represents types of an agent pool
func (o ManagedClusterAgentPoolProfilePropertiesOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileProperties) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Settings for upgrading the agentpool
func (o ManagedClusterAgentPoolProfilePropertiesOutput) UpgradeSettings() AgentPoolUpgradeSettingsPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileProperties) *AgentPoolUpgradeSettings { return v.UpgradeSettings }).(AgentPoolUpgradeSettingsPtrOutput)
}

// Size of agent VMs.
func (o ManagedClusterAgentPoolProfilePropertiesOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileProperties) *string { return v.VmSize }).(pulumi.StringPtrOutput)
}

// VNet SubnetID specifies the VNet's subnet identifier.
func (o ManagedClusterAgentPoolProfilePropertiesOutput) VnetSubnetID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileProperties) *string { return v.VnetSubnetID }).(pulumi.StringPtrOutput)
}

type ManagedClusterAgentPoolProfilePropertiesPtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterAgentPoolProfilePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterAgentPoolProfileProperties)(nil)).Elem()
}

func (o ManagedClusterAgentPoolProfilePropertiesPtrOutput) ToManagedClusterAgentPoolProfilePropertiesPtrOutput() ManagedClusterAgentPoolProfilePropertiesPtrOutput {
	return o
}

func (o ManagedClusterAgentPoolProfilePropertiesPtrOutput) ToManagedClusterAgentPoolProfilePropertiesPtrOutputWithContext(ctx context.Context) ManagedClusterAgentPoolProfilePropertiesPtrOutput {
	return o
}

func (o ManagedClusterAgentPoolProfilePropertiesPtrOutput) Elem() ManagedClusterAgentPoolProfilePropertiesOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfileProperties) ManagedClusterAgentPoolProfileProperties { return *v }).(ManagedClusterAgentPoolProfilePropertiesOutput)
}

// Availability zones for nodes. Must use VirtualMachineScaleSets AgentPoolType.
func (o ManagedClusterAgentPoolProfilePropertiesPtrOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfileProperties) []string {
		if v == nil {
			return nil
		}
		return v.AvailabilityZones
	}).(pulumi.StringArrayOutput)
}

// Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 100 (inclusive) for user pools and in the range of 1 to 100 (inclusive) for system pools. The default value is 1.
func (o ManagedClusterAgentPoolProfilePropertiesPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfileProperties) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Whether to enable auto-scaler
func (o ManagedClusterAgentPoolProfilePropertiesPtrOutput) EnableAutoScaling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfileProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnableAutoScaling
	}).(pulumi.BoolPtrOutput)
}

// Enable public IP for nodes
func (o ManagedClusterAgentPoolProfilePropertiesPtrOutput) EnableNodePublicIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfileProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnableNodePublicIP
	}).(pulumi.BoolPtrOutput)
}

// Maximum number of nodes for auto-scaling
func (o ManagedClusterAgentPoolProfilePropertiesPtrOutput) MaxCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfileProperties) *int {
		if v == nil {
			return nil
		}
		return v.MaxCount
	}).(pulumi.IntPtrOutput)
}

// Maximum number of pods that can run on a node.
func (o ManagedClusterAgentPoolProfilePropertiesPtrOutput) MaxPods() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfileProperties) *int {
		if v == nil {
			return nil
		}
		return v.MaxPods
	}).(pulumi.IntPtrOutput)
}

// Minimum number of nodes for auto-scaling
func (o ManagedClusterAgentPoolProfilePropertiesPtrOutput) MinCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfileProperties) *int {
		if v == nil {
			return nil
		}
		return v.MinCount
	}).(pulumi.IntPtrOutput)
}

// AgentPoolMode represents mode of an agent pool
func (o ManagedClusterAgentPoolProfilePropertiesPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfileProperties) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Version of node image
func (o ManagedClusterAgentPoolProfilePropertiesPtrOutput) NodeImageVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfileProperties) *string {
		if v == nil {
			return nil
		}
		return v.NodeImageVersion
	}).(pulumi.StringPtrOutput)
}

// Agent pool node labels to be persisted across all nodes in agent pool.
func (o ManagedClusterAgentPoolProfilePropertiesPtrOutput) NodeLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfileProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.NodeLabels
	}).(pulumi.StringMapOutput)
}

// Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
func (o ManagedClusterAgentPoolProfilePropertiesPtrOutput) NodeTaints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfileProperties) []string {
		if v == nil {
			return nil
		}
		return v.NodeTaints
	}).(pulumi.StringArrayOutput)
}

// Version of orchestrator specified when creating the managed cluster.
func (o ManagedClusterAgentPoolProfilePropertiesPtrOutput) OrchestratorVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfileProperties) *string {
		if v == nil {
			return nil
		}
		return v.OrchestratorVersion
	}).(pulumi.StringPtrOutput)
}

// OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
func (o ManagedClusterAgentPoolProfilePropertiesPtrOutput) OsDiskSizeGB() ContainerServiceOSDiskPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfileProperties) *ContainerServiceOSDisk {
		if v == nil {
			return nil
		}
		return v.OsDiskSizeGB
	}).(ContainerServiceOSDiskPtrOutput)
}

// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
func (o ManagedClusterAgentPoolProfilePropertiesPtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfileProperties) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// The ID for Proximity Placement Group.
func (o ManagedClusterAgentPoolProfilePropertiesPtrOutput) ProximityPlacementGroupID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfileProperties) *string {
		if v == nil {
			return nil
		}
		return v.ProximityPlacementGroupID
	}).(pulumi.StringPtrOutput)
}

// ScaleSetEvictionPolicy to be used to specify eviction policy for Spot virtual machine scale set. Default to Delete.
func (o ManagedClusterAgentPoolProfilePropertiesPtrOutput) ScaleSetEvictionPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfileProperties) *string {
		if v == nil {
			return nil
		}
		return v.ScaleSetEvictionPolicy
	}).(pulumi.StringPtrOutput)
}

// ScaleSetPriority to be used to specify virtual machine scale set priority. Default to regular.
func (o ManagedClusterAgentPoolProfilePropertiesPtrOutput) ScaleSetPriority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfileProperties) *string {
		if v == nil {
			return nil
		}
		return v.ScaleSetPriority
	}).(pulumi.StringPtrOutput)
}

// SpotMaxPrice to be used to specify the maximum price you are willing to pay in US Dollars. Possible values are any decimal value greater than zero or -1 which indicates default price to be up-to on-demand.
func (o ManagedClusterAgentPoolProfilePropertiesPtrOutput) SpotMaxPrice() SpotMaxPricePtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfileProperties) *SpotMaxPrice {
		if v == nil {
			return nil
		}
		return v.SpotMaxPrice
	}).(SpotMaxPricePtrOutput)
}

// Agent pool tags to be persisted on the agent pool virtual machine scale set.
func (o ManagedClusterAgentPoolProfilePropertiesPtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfileProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// AgentPoolType represents types of an agent pool
func (o ManagedClusterAgentPoolProfilePropertiesPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfileProperties) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Settings for upgrading the agentpool
func (o ManagedClusterAgentPoolProfilePropertiesPtrOutput) UpgradeSettings() AgentPoolUpgradeSettingsPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfileProperties) *AgentPoolUpgradeSettings {
		if v == nil {
			return nil
		}
		return v.UpgradeSettings
	}).(AgentPoolUpgradeSettingsPtrOutput)
}

// Size of agent VMs.
func (o ManagedClusterAgentPoolProfilePropertiesPtrOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfileProperties) *string {
		if v == nil {
			return nil
		}
		return v.VmSize
	}).(pulumi.StringPtrOutput)
}

// VNet SubnetID specifies the VNet's subnet identifier.
func (o ManagedClusterAgentPoolProfilePropertiesPtrOutput) VnetSubnetID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfileProperties) *string {
		if v == nil {
			return nil
		}
		return v.VnetSubnetID
	}).(pulumi.StringPtrOutput)
}

// Properties for the container service agent pool profile.
type ManagedClusterAgentPoolProfilePropertiesResponse struct {
	// Availability zones for nodes. Must use VirtualMachineScaleSets AgentPoolType.
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 100 (inclusive) for user pools and in the range of 1 to 100 (inclusive) for system pools. The default value is 1.
	Count *int `pulumi:"count"`
	// Whether to enable auto-scaler
	EnableAutoScaling *bool `pulumi:"enableAutoScaling"`
	// Enable public IP for nodes
	EnableNodePublicIP *bool `pulumi:"enableNodePublicIP"`
	// Maximum number of nodes for auto-scaling
	MaxCount *int `pulumi:"maxCount"`
	// Maximum number of pods that can run on a node.
	MaxPods *int `pulumi:"maxPods"`
	// Minimum number of nodes for auto-scaling
	MinCount *int `pulumi:"minCount"`
	// AgentPoolMode represents mode of an agent pool
	Mode *string `pulumi:"mode"`
	// Version of node image
	NodeImageVersion *string `pulumi:"nodeImageVersion"`
	// Agent pool node labels to be persisted across all nodes in agent pool.
	NodeLabels map[string]string `pulumi:"nodeLabels"`
	// Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
	NodeTaints []string `pulumi:"nodeTaints"`
	// Version of orchestrator specified when creating the managed cluster.
	OrchestratorVersion *string `pulumi:"orchestratorVersion"`
	// OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
	OsDiskSizeGB *ContainerServiceOSDiskResponse `pulumi:"osDiskSizeGB"`
	// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
	OsType *string `pulumi:"osType"`
	// The current deployment or provisioning state, which only appears in the response.
	ProvisioningState string `pulumi:"provisioningState"`
	// The ID for Proximity Placement Group.
	ProximityPlacementGroupID *string `pulumi:"proximityPlacementGroupID"`
	// ScaleSetEvictionPolicy to be used to specify eviction policy for Spot virtual machine scale set. Default to Delete.
	ScaleSetEvictionPolicy *string `pulumi:"scaleSetEvictionPolicy"`
	// ScaleSetPriority to be used to specify virtual machine scale set priority. Default to regular.
	ScaleSetPriority *string `pulumi:"scaleSetPriority"`
	// SpotMaxPrice to be used to specify the maximum price you are willing to pay in US Dollars. Possible values are any decimal value greater than zero or -1 which indicates default price to be up-to on-demand.
	SpotMaxPrice *SpotMaxPriceResponse `pulumi:"spotMaxPrice"`
	// Agent pool tags to be persisted on the agent pool virtual machine scale set.
	Tags map[string]string `pulumi:"tags"`
	// AgentPoolType represents types of an agent pool
	Type *string `pulumi:"type"`
	// Settings for upgrading the agentpool
	UpgradeSettings *AgentPoolUpgradeSettingsResponse `pulumi:"upgradeSettings"`
	// Size of agent VMs.
	VmSize *string `pulumi:"vmSize"`
	// VNet SubnetID specifies the VNet's subnet identifier.
	VnetSubnetID *string `pulumi:"vnetSubnetID"`
}

// ManagedClusterAgentPoolProfilePropertiesResponseInput is an input type that accepts ManagedClusterAgentPoolProfilePropertiesResponseArgs and ManagedClusterAgentPoolProfilePropertiesResponseOutput values.
// You can construct a concrete instance of `ManagedClusterAgentPoolProfilePropertiesResponseInput` via:
//
//          ManagedClusterAgentPoolProfilePropertiesResponseArgs{...}
type ManagedClusterAgentPoolProfilePropertiesResponseInput interface {
	pulumi.Input

	ToManagedClusterAgentPoolProfilePropertiesResponseOutput() ManagedClusterAgentPoolProfilePropertiesResponseOutput
	ToManagedClusterAgentPoolProfilePropertiesResponseOutputWithContext(context.Context) ManagedClusterAgentPoolProfilePropertiesResponseOutput
}

// Properties for the container service agent pool profile.
type ManagedClusterAgentPoolProfilePropertiesResponseArgs struct {
	// Availability zones for nodes. Must use VirtualMachineScaleSets AgentPoolType.
	AvailabilityZones pulumi.StringArrayInput `pulumi:"availabilityZones"`
	// Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 100 (inclusive) for user pools and in the range of 1 to 100 (inclusive) for system pools. The default value is 1.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// Whether to enable auto-scaler
	EnableAutoScaling pulumi.BoolPtrInput `pulumi:"enableAutoScaling"`
	// Enable public IP for nodes
	EnableNodePublicIP pulumi.BoolPtrInput `pulumi:"enableNodePublicIP"`
	// Maximum number of nodes for auto-scaling
	MaxCount pulumi.IntPtrInput `pulumi:"maxCount"`
	// Maximum number of pods that can run on a node.
	MaxPods pulumi.IntPtrInput `pulumi:"maxPods"`
	// Minimum number of nodes for auto-scaling
	MinCount pulumi.IntPtrInput `pulumi:"minCount"`
	// AgentPoolMode represents mode of an agent pool
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Version of node image
	NodeImageVersion pulumi.StringPtrInput `pulumi:"nodeImageVersion"`
	// Agent pool node labels to be persisted across all nodes in agent pool.
	NodeLabels pulumi.StringMapInput `pulumi:"nodeLabels"`
	// Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
	NodeTaints pulumi.StringArrayInput `pulumi:"nodeTaints"`
	// Version of orchestrator specified when creating the managed cluster.
	OrchestratorVersion pulumi.StringPtrInput `pulumi:"orchestratorVersion"`
	// OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
	OsDiskSizeGB ContainerServiceOSDiskResponsePtrInput `pulumi:"osDiskSizeGB"`
	// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// The current deployment or provisioning state, which only appears in the response.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The ID for Proximity Placement Group.
	ProximityPlacementGroupID pulumi.StringPtrInput `pulumi:"proximityPlacementGroupID"`
	// ScaleSetEvictionPolicy to be used to specify eviction policy for Spot virtual machine scale set. Default to Delete.
	ScaleSetEvictionPolicy pulumi.StringPtrInput `pulumi:"scaleSetEvictionPolicy"`
	// ScaleSetPriority to be used to specify virtual machine scale set priority. Default to regular.
	ScaleSetPriority pulumi.StringPtrInput `pulumi:"scaleSetPriority"`
	// SpotMaxPrice to be used to specify the maximum price you are willing to pay in US Dollars. Possible values are any decimal value greater than zero or -1 which indicates default price to be up-to on-demand.
	SpotMaxPrice SpotMaxPriceResponsePtrInput `pulumi:"spotMaxPrice"`
	// Agent pool tags to be persisted on the agent pool virtual machine scale set.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// AgentPoolType represents types of an agent pool
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Settings for upgrading the agentpool
	UpgradeSettings AgentPoolUpgradeSettingsResponsePtrInput `pulumi:"upgradeSettings"`
	// Size of agent VMs.
	VmSize pulumi.StringPtrInput `pulumi:"vmSize"`
	// VNet SubnetID specifies the VNet's subnet identifier.
	VnetSubnetID pulumi.StringPtrInput `pulumi:"vnetSubnetID"`
}

func (ManagedClusterAgentPoolProfilePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAgentPoolProfilePropertiesResponse)(nil)).Elem()
}

func (i ManagedClusterAgentPoolProfilePropertiesResponseArgs) ToManagedClusterAgentPoolProfilePropertiesResponseOutput() ManagedClusterAgentPoolProfilePropertiesResponseOutput {
	return i.ToManagedClusterAgentPoolProfilePropertiesResponseOutputWithContext(context.Background())
}

func (i ManagedClusterAgentPoolProfilePropertiesResponseArgs) ToManagedClusterAgentPoolProfilePropertiesResponseOutputWithContext(ctx context.Context) ManagedClusterAgentPoolProfilePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAgentPoolProfilePropertiesResponseOutput)
}

func (i ManagedClusterAgentPoolProfilePropertiesResponseArgs) ToManagedClusterAgentPoolProfilePropertiesResponsePtrOutput() ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput {
	return i.ToManagedClusterAgentPoolProfilePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ManagedClusterAgentPoolProfilePropertiesResponseArgs) ToManagedClusterAgentPoolProfilePropertiesResponsePtrOutputWithContext(ctx context.Context) ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAgentPoolProfilePropertiesResponseOutput).ToManagedClusterAgentPoolProfilePropertiesResponsePtrOutputWithContext(ctx)
}

// ManagedClusterAgentPoolProfilePropertiesResponsePtrInput is an input type that accepts ManagedClusterAgentPoolProfilePropertiesResponseArgs, ManagedClusterAgentPoolProfilePropertiesResponsePtr and ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ManagedClusterAgentPoolProfilePropertiesResponsePtrInput` via:
//
//          ManagedClusterAgentPoolProfilePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ManagedClusterAgentPoolProfilePropertiesResponsePtrInput interface {
	pulumi.Input

	ToManagedClusterAgentPoolProfilePropertiesResponsePtrOutput() ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput
	ToManagedClusterAgentPoolProfilePropertiesResponsePtrOutputWithContext(context.Context) ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput
}

type managedClusterAgentPoolProfilePropertiesResponsePtrType ManagedClusterAgentPoolProfilePropertiesResponseArgs

func ManagedClusterAgentPoolProfilePropertiesResponsePtr(v *ManagedClusterAgentPoolProfilePropertiesResponseArgs) ManagedClusterAgentPoolProfilePropertiesResponsePtrInput {
	return (*managedClusterAgentPoolProfilePropertiesResponsePtrType)(v)
}

func (*managedClusterAgentPoolProfilePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterAgentPoolProfilePropertiesResponse)(nil)).Elem()
}

func (i *managedClusterAgentPoolProfilePropertiesResponsePtrType) ToManagedClusterAgentPoolProfilePropertiesResponsePtrOutput() ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput {
	return i.ToManagedClusterAgentPoolProfilePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *managedClusterAgentPoolProfilePropertiesResponsePtrType) ToManagedClusterAgentPoolProfilePropertiesResponsePtrOutputWithContext(ctx context.Context) ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput)
}

// Properties for the container service agent pool profile.
type ManagedClusterAgentPoolProfilePropertiesResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterAgentPoolProfilePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAgentPoolProfilePropertiesResponse)(nil)).Elem()
}

func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) ToManagedClusterAgentPoolProfilePropertiesResponseOutput() ManagedClusterAgentPoolProfilePropertiesResponseOutput {
	return o
}

func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) ToManagedClusterAgentPoolProfilePropertiesResponseOutputWithContext(ctx context.Context) ManagedClusterAgentPoolProfilePropertiesResponseOutput {
	return o
}

func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) ToManagedClusterAgentPoolProfilePropertiesResponsePtrOutput() ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput {
	return o.ToManagedClusterAgentPoolProfilePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) ToManagedClusterAgentPoolProfilePropertiesResponsePtrOutputWithContext(ctx context.Context) ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfilePropertiesResponse) *ManagedClusterAgentPoolProfilePropertiesResponse {
		return &v
	}).(ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput)
}

// Availability zones for nodes. Must use VirtualMachineScaleSets AgentPoolType.
func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfilePropertiesResponse) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 100 (inclusive) for user pools and in the range of 1 to 100 (inclusive) for system pools. The default value is 1.
func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfilePropertiesResponse) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Whether to enable auto-scaler
func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) EnableAutoScaling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfilePropertiesResponse) *bool { return v.EnableAutoScaling }).(pulumi.BoolPtrOutput)
}

// Enable public IP for nodes
func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) EnableNodePublicIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfilePropertiesResponse) *bool { return v.EnableNodePublicIP }).(pulumi.BoolPtrOutput)
}

// Maximum number of nodes for auto-scaling
func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) MaxCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfilePropertiesResponse) *int { return v.MaxCount }).(pulumi.IntPtrOutput)
}

// Maximum number of pods that can run on a node.
func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) MaxPods() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfilePropertiesResponse) *int { return v.MaxPods }).(pulumi.IntPtrOutput)
}

// Minimum number of nodes for auto-scaling
func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) MinCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfilePropertiesResponse) *int { return v.MinCount }).(pulumi.IntPtrOutput)
}

// AgentPoolMode represents mode of an agent pool
func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfilePropertiesResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Version of node image
func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) NodeImageVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfilePropertiesResponse) *string { return v.NodeImageVersion }).(pulumi.StringPtrOutput)
}

// Agent pool node labels to be persisted across all nodes in agent pool.
func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) NodeLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfilePropertiesResponse) map[string]string { return v.NodeLabels }).(pulumi.StringMapOutput)
}

// Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) NodeTaints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfilePropertiesResponse) []string { return v.NodeTaints }).(pulumi.StringArrayOutput)
}

// Version of orchestrator specified when creating the managed cluster.
func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) OrchestratorVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfilePropertiesResponse) *string { return v.OrchestratorVersion }).(pulumi.StringPtrOutput)
}

// OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) OsDiskSizeGB() ContainerServiceOSDiskResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfilePropertiesResponse) *ContainerServiceOSDiskResponse {
		return v.OsDiskSizeGB
	}).(ContainerServiceOSDiskResponsePtrOutput)
}

// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfilePropertiesResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// The current deployment or provisioning state, which only appears in the response.
func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfilePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The ID for Proximity Placement Group.
func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) ProximityPlacementGroupID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfilePropertiesResponse) *string { return v.ProximityPlacementGroupID }).(pulumi.StringPtrOutput)
}

// ScaleSetEvictionPolicy to be used to specify eviction policy for Spot virtual machine scale set. Default to Delete.
func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) ScaleSetEvictionPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfilePropertiesResponse) *string { return v.ScaleSetEvictionPolicy }).(pulumi.StringPtrOutput)
}

// ScaleSetPriority to be used to specify virtual machine scale set priority. Default to regular.
func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) ScaleSetPriority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfilePropertiesResponse) *string { return v.ScaleSetPriority }).(pulumi.StringPtrOutput)
}

// SpotMaxPrice to be used to specify the maximum price you are willing to pay in US Dollars. Possible values are any decimal value greater than zero or -1 which indicates default price to be up-to on-demand.
func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) SpotMaxPrice() SpotMaxPriceResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfilePropertiesResponse) *SpotMaxPriceResponse { return v.SpotMaxPrice }).(SpotMaxPriceResponsePtrOutput)
}

// Agent pool tags to be persisted on the agent pool virtual machine scale set.
func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfilePropertiesResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// AgentPoolType represents types of an agent pool
func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfilePropertiesResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Settings for upgrading the agentpool
func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) UpgradeSettings() AgentPoolUpgradeSettingsResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfilePropertiesResponse) *AgentPoolUpgradeSettingsResponse {
		return v.UpgradeSettings
	}).(AgentPoolUpgradeSettingsResponsePtrOutput)
}

// Size of agent VMs.
func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfilePropertiesResponse) *string { return v.VmSize }).(pulumi.StringPtrOutput)
}

// VNet SubnetID specifies the VNet's subnet identifier.
func (o ManagedClusterAgentPoolProfilePropertiesResponseOutput) VnetSubnetID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfilePropertiesResponse) *string { return v.VnetSubnetID }).(pulumi.StringPtrOutput)
}

type ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterAgentPoolProfilePropertiesResponse)(nil)).Elem()
}

func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) ToManagedClusterAgentPoolProfilePropertiesResponsePtrOutput() ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput {
	return o
}

func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) ToManagedClusterAgentPoolProfilePropertiesResponsePtrOutputWithContext(ctx context.Context) ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput {
	return o
}

func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) Elem() ManagedClusterAgentPoolProfilePropertiesResponseOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfilePropertiesResponse) ManagedClusterAgentPoolProfilePropertiesResponse {
		return *v
	}).(ManagedClusterAgentPoolProfilePropertiesResponseOutput)
}

// Availability zones for nodes. Must use VirtualMachineScaleSets AgentPoolType.
func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfilePropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.AvailabilityZones
	}).(pulumi.StringArrayOutput)
}

// Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 100 (inclusive) for user pools and in the range of 1 to 100 (inclusive) for system pools. The default value is 1.
func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfilePropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Whether to enable auto-scaler
func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) EnableAutoScaling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfilePropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableAutoScaling
	}).(pulumi.BoolPtrOutput)
}

// Enable public IP for nodes
func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) EnableNodePublicIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfilePropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableNodePublicIP
	}).(pulumi.BoolPtrOutput)
}

// Maximum number of nodes for auto-scaling
func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) MaxCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfilePropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxCount
	}).(pulumi.IntPtrOutput)
}

// Maximum number of pods that can run on a node.
func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) MaxPods() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfilePropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxPods
	}).(pulumi.IntPtrOutput)
}

// Minimum number of nodes for auto-scaling
func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) MinCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfilePropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.MinCount
	}).(pulumi.IntPtrOutput)
}

// AgentPoolMode represents mode of an agent pool
func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfilePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Version of node image
func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) NodeImageVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfilePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.NodeImageVersion
	}).(pulumi.StringPtrOutput)
}

// Agent pool node labels to be persisted across all nodes in agent pool.
func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) NodeLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfilePropertiesResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.NodeLabels
	}).(pulumi.StringMapOutput)
}

// Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) NodeTaints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfilePropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.NodeTaints
	}).(pulumi.StringArrayOutput)
}

// Version of orchestrator specified when creating the managed cluster.
func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) OrchestratorVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfilePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.OrchestratorVersion
	}).(pulumi.StringPtrOutput)
}

// OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) OsDiskSizeGB() ContainerServiceOSDiskResponsePtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfilePropertiesResponse) *ContainerServiceOSDiskResponse {
		if v == nil {
			return nil
		}
		return v.OsDiskSizeGB
	}).(ContainerServiceOSDiskResponsePtrOutput)
}

// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfilePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// The current deployment or provisioning state, which only appears in the response.
func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfilePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The ID for Proximity Placement Group.
func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) ProximityPlacementGroupID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfilePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProximityPlacementGroupID
	}).(pulumi.StringPtrOutput)
}

// ScaleSetEvictionPolicy to be used to specify eviction policy for Spot virtual machine scale set. Default to Delete.
func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) ScaleSetEvictionPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfilePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ScaleSetEvictionPolicy
	}).(pulumi.StringPtrOutput)
}

// ScaleSetPriority to be used to specify virtual machine scale set priority. Default to regular.
func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) ScaleSetPriority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfilePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ScaleSetPriority
	}).(pulumi.StringPtrOutput)
}

// SpotMaxPrice to be used to specify the maximum price you are willing to pay in US Dollars. Possible values are any decimal value greater than zero or -1 which indicates default price to be up-to on-demand.
func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) SpotMaxPrice() SpotMaxPriceResponsePtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfilePropertiesResponse) *SpotMaxPriceResponse {
		if v == nil {
			return nil
		}
		return v.SpotMaxPrice
	}).(SpotMaxPriceResponsePtrOutput)
}

// Agent pool tags to be persisted on the agent pool virtual machine scale set.
func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfilePropertiesResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// AgentPoolType represents types of an agent pool
func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfilePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Settings for upgrading the agentpool
func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) UpgradeSettings() AgentPoolUpgradeSettingsResponsePtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfilePropertiesResponse) *AgentPoolUpgradeSettingsResponse {
		if v == nil {
			return nil
		}
		return v.UpgradeSettings
	}).(AgentPoolUpgradeSettingsResponsePtrOutput)
}

// Size of agent VMs.
func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfilePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.VmSize
	}).(pulumi.StringPtrOutput)
}

// VNet SubnetID specifies the VNet's subnet identifier.
func (o ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput) VnetSubnetID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAgentPoolProfilePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.VnetSubnetID
	}).(pulumi.StringPtrOutput)
}

// Profile for the container service agent pool.
type ManagedClusterAgentPoolProfileResponse struct {
	// Availability zones for nodes. Must use VirtualMachineScaleSets AgentPoolType.
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 100 (inclusive) for user pools and in the range of 1 to 100 (inclusive) for system pools. The default value is 1.
	Count *int `pulumi:"count"`
	// Whether to enable auto-scaler
	EnableAutoScaling *bool `pulumi:"enableAutoScaling"`
	// Enable public IP for nodes
	EnableNodePublicIP *bool `pulumi:"enableNodePublicIP"`
	// Maximum number of nodes for auto-scaling
	MaxCount *int `pulumi:"maxCount"`
	// Maximum number of pods that can run on a node.
	MaxPods *int `pulumi:"maxPods"`
	// Minimum number of nodes for auto-scaling
	MinCount *int `pulumi:"minCount"`
	// AgentPoolMode represents mode of an agent pool
	Mode *string `pulumi:"mode"`
	// Unique name of the agent pool profile in the context of the subscription and resource group.
	Name string `pulumi:"name"`
	// Version of node image
	NodeImageVersion *string `pulumi:"nodeImageVersion"`
	// Agent pool node labels to be persisted across all nodes in agent pool.
	NodeLabels map[string]string `pulumi:"nodeLabels"`
	// Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
	NodeTaints []string `pulumi:"nodeTaints"`
	// Version of orchestrator specified when creating the managed cluster.
	OrchestratorVersion *string `pulumi:"orchestratorVersion"`
	// OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
	OsDiskSizeGB *ContainerServiceOSDiskResponse `pulumi:"osDiskSizeGB"`
	// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
	OsType *string `pulumi:"osType"`
	// The current deployment or provisioning state, which only appears in the response.
	ProvisioningState string `pulumi:"provisioningState"`
	// The ID for Proximity Placement Group.
	ProximityPlacementGroupID *string `pulumi:"proximityPlacementGroupID"`
	// ScaleSetEvictionPolicy to be used to specify eviction policy for Spot virtual machine scale set. Default to Delete.
	ScaleSetEvictionPolicy *string `pulumi:"scaleSetEvictionPolicy"`
	// ScaleSetPriority to be used to specify virtual machine scale set priority. Default to regular.
	ScaleSetPriority *string `pulumi:"scaleSetPriority"`
	// SpotMaxPrice to be used to specify the maximum price you are willing to pay in US Dollars. Possible values are any decimal value greater than zero or -1 which indicates default price to be up-to on-demand.
	SpotMaxPrice *SpotMaxPriceResponse `pulumi:"spotMaxPrice"`
	// Agent pool tags to be persisted on the agent pool virtual machine scale set.
	Tags map[string]string `pulumi:"tags"`
	// AgentPoolType represents types of an agent pool
	Type *string `pulumi:"type"`
	// Settings for upgrading the agentpool
	UpgradeSettings *AgentPoolUpgradeSettingsResponse `pulumi:"upgradeSettings"`
	// Size of agent VMs.
	VmSize *string `pulumi:"vmSize"`
	// VNet SubnetID specifies the VNet's subnet identifier.
	VnetSubnetID *string `pulumi:"vnetSubnetID"`
}

// ManagedClusterAgentPoolProfileResponseInput is an input type that accepts ManagedClusterAgentPoolProfileResponseArgs and ManagedClusterAgentPoolProfileResponseOutput values.
// You can construct a concrete instance of `ManagedClusterAgentPoolProfileResponseInput` via:
//
//          ManagedClusterAgentPoolProfileResponseArgs{...}
type ManagedClusterAgentPoolProfileResponseInput interface {
	pulumi.Input

	ToManagedClusterAgentPoolProfileResponseOutput() ManagedClusterAgentPoolProfileResponseOutput
	ToManagedClusterAgentPoolProfileResponseOutputWithContext(context.Context) ManagedClusterAgentPoolProfileResponseOutput
}

// Profile for the container service agent pool.
type ManagedClusterAgentPoolProfileResponseArgs struct {
	// Availability zones for nodes. Must use VirtualMachineScaleSets AgentPoolType.
	AvailabilityZones pulumi.StringArrayInput `pulumi:"availabilityZones"`
	// Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 100 (inclusive) for user pools and in the range of 1 to 100 (inclusive) for system pools. The default value is 1.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// Whether to enable auto-scaler
	EnableAutoScaling pulumi.BoolPtrInput `pulumi:"enableAutoScaling"`
	// Enable public IP for nodes
	EnableNodePublicIP pulumi.BoolPtrInput `pulumi:"enableNodePublicIP"`
	// Maximum number of nodes for auto-scaling
	MaxCount pulumi.IntPtrInput `pulumi:"maxCount"`
	// Maximum number of pods that can run on a node.
	MaxPods pulumi.IntPtrInput `pulumi:"maxPods"`
	// Minimum number of nodes for auto-scaling
	MinCount pulumi.IntPtrInput `pulumi:"minCount"`
	// AgentPoolMode represents mode of an agent pool
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Unique name of the agent pool profile in the context of the subscription and resource group.
	Name pulumi.StringInput `pulumi:"name"`
	// Version of node image
	NodeImageVersion pulumi.StringPtrInput `pulumi:"nodeImageVersion"`
	// Agent pool node labels to be persisted across all nodes in agent pool.
	NodeLabels pulumi.StringMapInput `pulumi:"nodeLabels"`
	// Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
	NodeTaints pulumi.StringArrayInput `pulumi:"nodeTaints"`
	// Version of orchestrator specified when creating the managed cluster.
	OrchestratorVersion pulumi.StringPtrInput `pulumi:"orchestratorVersion"`
	// OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
	OsDiskSizeGB ContainerServiceOSDiskResponsePtrInput `pulumi:"osDiskSizeGB"`
	// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// The current deployment or provisioning state, which only appears in the response.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The ID for Proximity Placement Group.
	ProximityPlacementGroupID pulumi.StringPtrInput `pulumi:"proximityPlacementGroupID"`
	// ScaleSetEvictionPolicy to be used to specify eviction policy for Spot virtual machine scale set. Default to Delete.
	ScaleSetEvictionPolicy pulumi.StringPtrInput `pulumi:"scaleSetEvictionPolicy"`
	// ScaleSetPriority to be used to specify virtual machine scale set priority. Default to regular.
	ScaleSetPriority pulumi.StringPtrInput `pulumi:"scaleSetPriority"`
	// SpotMaxPrice to be used to specify the maximum price you are willing to pay in US Dollars. Possible values are any decimal value greater than zero or -1 which indicates default price to be up-to on-demand.
	SpotMaxPrice SpotMaxPriceResponsePtrInput `pulumi:"spotMaxPrice"`
	// Agent pool tags to be persisted on the agent pool virtual machine scale set.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// AgentPoolType represents types of an agent pool
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Settings for upgrading the agentpool
	UpgradeSettings AgentPoolUpgradeSettingsResponsePtrInput `pulumi:"upgradeSettings"`
	// Size of agent VMs.
	VmSize pulumi.StringPtrInput `pulumi:"vmSize"`
	// VNet SubnetID specifies the VNet's subnet identifier.
	VnetSubnetID pulumi.StringPtrInput `pulumi:"vnetSubnetID"`
}

func (ManagedClusterAgentPoolProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAgentPoolProfileResponse)(nil)).Elem()
}

func (i ManagedClusterAgentPoolProfileResponseArgs) ToManagedClusterAgentPoolProfileResponseOutput() ManagedClusterAgentPoolProfileResponseOutput {
	return i.ToManagedClusterAgentPoolProfileResponseOutputWithContext(context.Background())
}

func (i ManagedClusterAgentPoolProfileResponseArgs) ToManagedClusterAgentPoolProfileResponseOutputWithContext(ctx context.Context) ManagedClusterAgentPoolProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAgentPoolProfileResponseOutput)
}

// ManagedClusterAgentPoolProfileResponseArrayInput is an input type that accepts ManagedClusterAgentPoolProfileResponseArray and ManagedClusterAgentPoolProfileResponseArrayOutput values.
// You can construct a concrete instance of `ManagedClusterAgentPoolProfileResponseArrayInput` via:
//
//          ManagedClusterAgentPoolProfileResponseArray{ ManagedClusterAgentPoolProfileResponseArgs{...} }
type ManagedClusterAgentPoolProfileResponseArrayInput interface {
	pulumi.Input

	ToManagedClusterAgentPoolProfileResponseArrayOutput() ManagedClusterAgentPoolProfileResponseArrayOutput
	ToManagedClusterAgentPoolProfileResponseArrayOutputWithContext(context.Context) ManagedClusterAgentPoolProfileResponseArrayOutput
}

type ManagedClusterAgentPoolProfileResponseArray []ManagedClusterAgentPoolProfileResponseInput

func (ManagedClusterAgentPoolProfileResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedClusterAgentPoolProfileResponse)(nil)).Elem()
}

func (i ManagedClusterAgentPoolProfileResponseArray) ToManagedClusterAgentPoolProfileResponseArrayOutput() ManagedClusterAgentPoolProfileResponseArrayOutput {
	return i.ToManagedClusterAgentPoolProfileResponseArrayOutputWithContext(context.Background())
}

func (i ManagedClusterAgentPoolProfileResponseArray) ToManagedClusterAgentPoolProfileResponseArrayOutputWithContext(ctx context.Context) ManagedClusterAgentPoolProfileResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAgentPoolProfileResponseArrayOutput)
}

// Profile for the container service agent pool.
type ManagedClusterAgentPoolProfileResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterAgentPoolProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAgentPoolProfileResponse)(nil)).Elem()
}

func (o ManagedClusterAgentPoolProfileResponseOutput) ToManagedClusterAgentPoolProfileResponseOutput() ManagedClusterAgentPoolProfileResponseOutput {
	return o
}

func (o ManagedClusterAgentPoolProfileResponseOutput) ToManagedClusterAgentPoolProfileResponseOutputWithContext(ctx context.Context) ManagedClusterAgentPoolProfileResponseOutput {
	return o
}

// Availability zones for nodes. Must use VirtualMachineScaleSets AgentPoolType.
func (o ManagedClusterAgentPoolProfileResponseOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 100 (inclusive) for user pools and in the range of 1 to 100 (inclusive) for system pools. The default value is 1.
func (o ManagedClusterAgentPoolProfileResponseOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Whether to enable auto-scaler
func (o ManagedClusterAgentPoolProfileResponseOutput) EnableAutoScaling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *bool { return v.EnableAutoScaling }).(pulumi.BoolPtrOutput)
}

// Enable public IP for nodes
func (o ManagedClusterAgentPoolProfileResponseOutput) EnableNodePublicIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *bool { return v.EnableNodePublicIP }).(pulumi.BoolPtrOutput)
}

// Maximum number of nodes for auto-scaling
func (o ManagedClusterAgentPoolProfileResponseOutput) MaxCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *int { return v.MaxCount }).(pulumi.IntPtrOutput)
}

// Maximum number of pods that can run on a node.
func (o ManagedClusterAgentPoolProfileResponseOutput) MaxPods() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *int { return v.MaxPods }).(pulumi.IntPtrOutput)
}

// Minimum number of nodes for auto-scaling
func (o ManagedClusterAgentPoolProfileResponseOutput) MinCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *int { return v.MinCount }).(pulumi.IntPtrOutput)
}

// AgentPoolMode represents mode of an agent pool
func (o ManagedClusterAgentPoolProfileResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Unique name of the agent pool profile in the context of the subscription and resource group.
func (o ManagedClusterAgentPoolProfileResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Version of node image
func (o ManagedClusterAgentPoolProfileResponseOutput) NodeImageVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *string { return v.NodeImageVersion }).(pulumi.StringPtrOutput)
}

// Agent pool node labels to be persisted across all nodes in agent pool.
func (o ManagedClusterAgentPoolProfileResponseOutput) NodeLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) map[string]string { return v.NodeLabels }).(pulumi.StringMapOutput)
}

// Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
func (o ManagedClusterAgentPoolProfileResponseOutput) NodeTaints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) []string { return v.NodeTaints }).(pulumi.StringArrayOutput)
}

// Version of orchestrator specified when creating the managed cluster.
func (o ManagedClusterAgentPoolProfileResponseOutput) OrchestratorVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *string { return v.OrchestratorVersion }).(pulumi.StringPtrOutput)
}

// OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
func (o ManagedClusterAgentPoolProfileResponseOutput) OsDiskSizeGB() ContainerServiceOSDiskResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *ContainerServiceOSDiskResponse { return v.OsDiskSizeGB }).(ContainerServiceOSDiskResponsePtrOutput)
}

// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
func (o ManagedClusterAgentPoolProfileResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// The current deployment or provisioning state, which only appears in the response.
func (o ManagedClusterAgentPoolProfileResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The ID for Proximity Placement Group.
func (o ManagedClusterAgentPoolProfileResponseOutput) ProximityPlacementGroupID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *string { return v.ProximityPlacementGroupID }).(pulumi.StringPtrOutput)
}

// ScaleSetEvictionPolicy to be used to specify eviction policy for Spot virtual machine scale set. Default to Delete.
func (o ManagedClusterAgentPoolProfileResponseOutput) ScaleSetEvictionPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *string { return v.ScaleSetEvictionPolicy }).(pulumi.StringPtrOutput)
}

// ScaleSetPriority to be used to specify virtual machine scale set priority. Default to regular.
func (o ManagedClusterAgentPoolProfileResponseOutput) ScaleSetPriority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *string { return v.ScaleSetPriority }).(pulumi.StringPtrOutput)
}

// SpotMaxPrice to be used to specify the maximum price you are willing to pay in US Dollars. Possible values are any decimal value greater than zero or -1 which indicates default price to be up-to on-demand.
func (o ManagedClusterAgentPoolProfileResponseOutput) SpotMaxPrice() SpotMaxPriceResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *SpotMaxPriceResponse { return v.SpotMaxPrice }).(SpotMaxPriceResponsePtrOutput)
}

// Agent pool tags to be persisted on the agent pool virtual machine scale set.
func (o ManagedClusterAgentPoolProfileResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// AgentPoolType represents types of an agent pool
func (o ManagedClusterAgentPoolProfileResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Settings for upgrading the agentpool
func (o ManagedClusterAgentPoolProfileResponseOutput) UpgradeSettings() AgentPoolUpgradeSettingsResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *AgentPoolUpgradeSettingsResponse {
		return v.UpgradeSettings
	}).(AgentPoolUpgradeSettingsResponsePtrOutput)
}

// Size of agent VMs.
func (o ManagedClusterAgentPoolProfileResponseOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *string { return v.VmSize }).(pulumi.StringPtrOutput)
}

// VNet SubnetID specifies the VNet's subnet identifier.
func (o ManagedClusterAgentPoolProfileResponseOutput) VnetSubnetID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *string { return v.VnetSubnetID }).(pulumi.StringPtrOutput)
}

type ManagedClusterAgentPoolProfileResponseArrayOutput struct{ *pulumi.OutputState }

func (ManagedClusterAgentPoolProfileResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedClusterAgentPoolProfileResponse)(nil)).Elem()
}

func (o ManagedClusterAgentPoolProfileResponseArrayOutput) ToManagedClusterAgentPoolProfileResponseArrayOutput() ManagedClusterAgentPoolProfileResponseArrayOutput {
	return o
}

func (o ManagedClusterAgentPoolProfileResponseArrayOutput) ToManagedClusterAgentPoolProfileResponseArrayOutputWithContext(ctx context.Context) ManagedClusterAgentPoolProfileResponseArrayOutput {
	return o
}

func (o ManagedClusterAgentPoolProfileResponseArrayOutput) Index(i pulumi.IntInput) ManagedClusterAgentPoolProfileResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedClusterAgentPoolProfileResponse {
		return vs[0].([]ManagedClusterAgentPoolProfileResponse)[vs[1].(int)]
	}).(ManagedClusterAgentPoolProfileResponseOutput)
}

// Identity for the managed cluster.
type ManagedClusterIdentity struct {
	// The type of identity used for the managed cluster. Type 'SystemAssigned' will use an implicitly created identity in master components and an auto-created user assigned identity in MC_ resource group in agent nodes. Type 'None' will not use MSI for the managed cluster, service principal will be used instead.
	Type *string `pulumi:"type"`
	// The user identity associated with the managed cluster. This identity will be used in control plane and only one user assigned identity is allowed. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities map[string]string `pulumi:"userAssignedIdentities"`
}

// ManagedClusterIdentityInput is an input type that accepts ManagedClusterIdentityArgs and ManagedClusterIdentityOutput values.
// You can construct a concrete instance of `ManagedClusterIdentityInput` via:
//
//          ManagedClusterIdentityArgs{...}
type ManagedClusterIdentityInput interface {
	pulumi.Input

	ToManagedClusterIdentityOutput() ManagedClusterIdentityOutput
	ToManagedClusterIdentityOutputWithContext(context.Context) ManagedClusterIdentityOutput
}

// Identity for the managed cluster.
type ManagedClusterIdentityArgs struct {
	// The type of identity used for the managed cluster. Type 'SystemAssigned' will use an implicitly created identity in master components and an auto-created user assigned identity in MC_ resource group in agent nodes. Type 'None' will not use MSI for the managed cluster, service principal will be used instead.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The user identity associated with the managed cluster. This identity will be used in control plane and only one user assigned identity is allowed. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities pulumi.StringMapInput `pulumi:"userAssignedIdentities"`
}

func (ManagedClusterIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterIdentity)(nil)).Elem()
}

func (i ManagedClusterIdentityArgs) ToManagedClusterIdentityOutput() ManagedClusterIdentityOutput {
	return i.ToManagedClusterIdentityOutputWithContext(context.Background())
}

func (i ManagedClusterIdentityArgs) ToManagedClusterIdentityOutputWithContext(ctx context.Context) ManagedClusterIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterIdentityOutput)
}

func (i ManagedClusterIdentityArgs) ToManagedClusterIdentityPtrOutput() ManagedClusterIdentityPtrOutput {
	return i.ToManagedClusterIdentityPtrOutputWithContext(context.Background())
}

func (i ManagedClusterIdentityArgs) ToManagedClusterIdentityPtrOutputWithContext(ctx context.Context) ManagedClusterIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterIdentityOutput).ToManagedClusterIdentityPtrOutputWithContext(ctx)
}

// ManagedClusterIdentityPtrInput is an input type that accepts ManagedClusterIdentityArgs, ManagedClusterIdentityPtr and ManagedClusterIdentityPtrOutput values.
// You can construct a concrete instance of `ManagedClusterIdentityPtrInput` via:
//
//          ManagedClusterIdentityArgs{...}
//
//  or:
//
//          nil
type ManagedClusterIdentityPtrInput interface {
	pulumi.Input

	ToManagedClusterIdentityPtrOutput() ManagedClusterIdentityPtrOutput
	ToManagedClusterIdentityPtrOutputWithContext(context.Context) ManagedClusterIdentityPtrOutput
}

type managedClusterIdentityPtrType ManagedClusterIdentityArgs

func ManagedClusterIdentityPtr(v *ManagedClusterIdentityArgs) ManagedClusterIdentityPtrInput {
	return (*managedClusterIdentityPtrType)(v)
}

func (*managedClusterIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterIdentity)(nil)).Elem()
}

func (i *managedClusterIdentityPtrType) ToManagedClusterIdentityPtrOutput() ManagedClusterIdentityPtrOutput {
	return i.ToManagedClusterIdentityPtrOutputWithContext(context.Background())
}

func (i *managedClusterIdentityPtrType) ToManagedClusterIdentityPtrOutputWithContext(ctx context.Context) ManagedClusterIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterIdentityPtrOutput)
}

// Identity for the managed cluster.
type ManagedClusterIdentityOutput struct{ *pulumi.OutputState }

func (ManagedClusterIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterIdentity)(nil)).Elem()
}

func (o ManagedClusterIdentityOutput) ToManagedClusterIdentityOutput() ManagedClusterIdentityOutput {
	return o
}

func (o ManagedClusterIdentityOutput) ToManagedClusterIdentityOutputWithContext(ctx context.Context) ManagedClusterIdentityOutput {
	return o
}

func (o ManagedClusterIdentityOutput) ToManagedClusterIdentityPtrOutput() ManagedClusterIdentityPtrOutput {
	return o.ToManagedClusterIdentityPtrOutputWithContext(context.Background())
}

func (o ManagedClusterIdentityOutput) ToManagedClusterIdentityPtrOutputWithContext(ctx context.Context) ManagedClusterIdentityPtrOutput {
	return o.ApplyT(func(v ManagedClusterIdentity) *ManagedClusterIdentity {
		return &v
	}).(ManagedClusterIdentityPtrOutput)
}

// The type of identity used for the managed cluster. Type 'SystemAssigned' will use an implicitly created identity in master components and an auto-created user assigned identity in MC_ resource group in agent nodes. Type 'None' will not use MSI for the managed cluster, service principal will be used instead.
func (o ManagedClusterIdentityOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterIdentity) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The user identity associated with the managed cluster. This identity will be used in control plane and only one user assigned identity is allowed. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o ManagedClusterIdentityOutput) UserAssignedIdentities() pulumi.StringMapOutput {
	return o.ApplyT(func(v ManagedClusterIdentity) map[string]string { return v.UserAssignedIdentities }).(pulumi.StringMapOutput)
}

type ManagedClusterIdentityPtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterIdentity)(nil)).Elem()
}

func (o ManagedClusterIdentityPtrOutput) ToManagedClusterIdentityPtrOutput() ManagedClusterIdentityPtrOutput {
	return o
}

func (o ManagedClusterIdentityPtrOutput) ToManagedClusterIdentityPtrOutputWithContext(ctx context.Context) ManagedClusterIdentityPtrOutput {
	return o
}

func (o ManagedClusterIdentityPtrOutput) Elem() ManagedClusterIdentityOutput {
	return o.ApplyT(func(v *ManagedClusterIdentity) ManagedClusterIdentity { return *v }).(ManagedClusterIdentityOutput)
}

// The type of identity used for the managed cluster. Type 'SystemAssigned' will use an implicitly created identity in master components and an auto-created user assigned identity in MC_ resource group in agent nodes. Type 'None' will not use MSI for the managed cluster, service principal will be used instead.
func (o ManagedClusterIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterIdentity) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The user identity associated with the managed cluster. This identity will be used in control plane and only one user assigned identity is allowed. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o ManagedClusterIdentityPtrOutput) UserAssignedIdentities() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ManagedClusterIdentity) map[string]string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.StringMapOutput)
}

// Identity for the managed cluster.
type ManagedClusterIdentityResponse struct {
	// The principal id of the system assigned identity which is used by master components.
	PrincipalId string `pulumi:"principalId"`
	// The tenant id of the system assigned identity which is used by master components.
	TenantId string `pulumi:"tenantId"`
	// The type of identity used for the managed cluster. Type 'SystemAssigned' will use an implicitly created identity in master components and an auto-created user assigned identity in MC_ resource group in agent nodes. Type 'None' will not use MSI for the managed cluster, service principal will be used instead.
	Type *string `pulumi:"type"`
	// The user identity associated with the managed cluster. This identity will be used in control plane and only one user assigned identity is allowed. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities map[string]string `pulumi:"userAssignedIdentities"`
}

// ManagedClusterIdentityResponseInput is an input type that accepts ManagedClusterIdentityResponseArgs and ManagedClusterIdentityResponseOutput values.
// You can construct a concrete instance of `ManagedClusterIdentityResponseInput` via:
//
//          ManagedClusterIdentityResponseArgs{...}
type ManagedClusterIdentityResponseInput interface {
	pulumi.Input

	ToManagedClusterIdentityResponseOutput() ManagedClusterIdentityResponseOutput
	ToManagedClusterIdentityResponseOutputWithContext(context.Context) ManagedClusterIdentityResponseOutput
}

// Identity for the managed cluster.
type ManagedClusterIdentityResponseArgs struct {
	// The principal id of the system assigned identity which is used by master components.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The tenant id of the system assigned identity which is used by master components.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// The type of identity used for the managed cluster. Type 'SystemAssigned' will use an implicitly created identity in master components and an auto-created user assigned identity in MC_ resource group in agent nodes. Type 'None' will not use MSI for the managed cluster, service principal will be used instead.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The user identity associated with the managed cluster. This identity will be used in control plane and only one user assigned identity is allowed. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities pulumi.StringMapInput `pulumi:"userAssignedIdentities"`
}

func (ManagedClusterIdentityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterIdentityResponse)(nil)).Elem()
}

func (i ManagedClusterIdentityResponseArgs) ToManagedClusterIdentityResponseOutput() ManagedClusterIdentityResponseOutput {
	return i.ToManagedClusterIdentityResponseOutputWithContext(context.Background())
}

func (i ManagedClusterIdentityResponseArgs) ToManagedClusterIdentityResponseOutputWithContext(ctx context.Context) ManagedClusterIdentityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterIdentityResponseOutput)
}

func (i ManagedClusterIdentityResponseArgs) ToManagedClusterIdentityResponsePtrOutput() ManagedClusterIdentityResponsePtrOutput {
	return i.ToManagedClusterIdentityResponsePtrOutputWithContext(context.Background())
}

func (i ManagedClusterIdentityResponseArgs) ToManagedClusterIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedClusterIdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterIdentityResponseOutput).ToManagedClusterIdentityResponsePtrOutputWithContext(ctx)
}

// ManagedClusterIdentityResponsePtrInput is an input type that accepts ManagedClusterIdentityResponseArgs, ManagedClusterIdentityResponsePtr and ManagedClusterIdentityResponsePtrOutput values.
// You can construct a concrete instance of `ManagedClusterIdentityResponsePtrInput` via:
//
//          ManagedClusterIdentityResponseArgs{...}
//
//  or:
//
//          nil
type ManagedClusterIdentityResponsePtrInput interface {
	pulumi.Input

	ToManagedClusterIdentityResponsePtrOutput() ManagedClusterIdentityResponsePtrOutput
	ToManagedClusterIdentityResponsePtrOutputWithContext(context.Context) ManagedClusterIdentityResponsePtrOutput
}

type managedClusterIdentityResponsePtrType ManagedClusterIdentityResponseArgs

func ManagedClusterIdentityResponsePtr(v *ManagedClusterIdentityResponseArgs) ManagedClusterIdentityResponsePtrInput {
	return (*managedClusterIdentityResponsePtrType)(v)
}

func (*managedClusterIdentityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterIdentityResponse)(nil)).Elem()
}

func (i *managedClusterIdentityResponsePtrType) ToManagedClusterIdentityResponsePtrOutput() ManagedClusterIdentityResponsePtrOutput {
	return i.ToManagedClusterIdentityResponsePtrOutputWithContext(context.Background())
}

func (i *managedClusterIdentityResponsePtrType) ToManagedClusterIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedClusterIdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterIdentityResponsePtrOutput)
}

// Identity for the managed cluster.
type ManagedClusterIdentityResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterIdentityResponse)(nil)).Elem()
}

func (o ManagedClusterIdentityResponseOutput) ToManagedClusterIdentityResponseOutput() ManagedClusterIdentityResponseOutput {
	return o
}

func (o ManagedClusterIdentityResponseOutput) ToManagedClusterIdentityResponseOutputWithContext(ctx context.Context) ManagedClusterIdentityResponseOutput {
	return o
}

func (o ManagedClusterIdentityResponseOutput) ToManagedClusterIdentityResponsePtrOutput() ManagedClusterIdentityResponsePtrOutput {
	return o.ToManagedClusterIdentityResponsePtrOutputWithContext(context.Background())
}

func (o ManagedClusterIdentityResponseOutput) ToManagedClusterIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedClusterIdentityResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterIdentityResponse) *ManagedClusterIdentityResponse {
		return &v
	}).(ManagedClusterIdentityResponsePtrOutput)
}

// The principal id of the system assigned identity which is used by master components.
func (o ManagedClusterIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant id of the system assigned identity which is used by master components.
func (o ManagedClusterIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The type of identity used for the managed cluster. Type 'SystemAssigned' will use an implicitly created identity in master components and an auto-created user assigned identity in MC_ resource group in agent nodes. Type 'None' will not use MSI for the managed cluster, service principal will be used instead.
func (o ManagedClusterIdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterIdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The user identity associated with the managed cluster. This identity will be used in control plane and only one user assigned identity is allowed. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o ManagedClusterIdentityResponseOutput) UserAssignedIdentities() pulumi.StringMapOutput {
	return o.ApplyT(func(v ManagedClusterIdentityResponse) map[string]string { return v.UserAssignedIdentities }).(pulumi.StringMapOutput)
}

type ManagedClusterIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterIdentityResponse)(nil)).Elem()
}

func (o ManagedClusterIdentityResponsePtrOutput) ToManagedClusterIdentityResponsePtrOutput() ManagedClusterIdentityResponsePtrOutput {
	return o
}

func (o ManagedClusterIdentityResponsePtrOutput) ToManagedClusterIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedClusterIdentityResponsePtrOutput {
	return o
}

func (o ManagedClusterIdentityResponsePtrOutput) Elem() ManagedClusterIdentityResponseOutput {
	return o.ApplyT(func(v *ManagedClusterIdentityResponse) ManagedClusterIdentityResponse { return *v }).(ManagedClusterIdentityResponseOutput)
}

// The principal id of the system assigned identity which is used by master components.
func (o ManagedClusterIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant id of the system assigned identity which is used by master components.
func (o ManagedClusterIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The type of identity used for the managed cluster. Type 'SystemAssigned' will use an implicitly created identity in master components and an auto-created user assigned identity in MC_ resource group in agent nodes. Type 'None' will not use MSI for the managed cluster, service principal will be used instead.
func (o ManagedClusterIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The user identity associated with the managed cluster. This identity will be used in control plane and only one user assigned identity is allowed. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o ManagedClusterIdentityResponsePtrOutput) UserAssignedIdentities() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ManagedClusterIdentityResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.StringMapOutput)
}

// Profile of the managed cluster load balancer.
type ManagedClusterLoadBalancerProfile struct {
	// Desired number of allocated SNAT ports per VM. Allowed values must be in the range of 0 to 64000 (inclusive). The default value is 0 which results in Azure dynamically allocating ports.
	AllocatedOutboundPorts *int `pulumi:"allocatedOutboundPorts"`
	// The effective outbound IP resources of the cluster load balancer.
	EffectiveOutboundIPs []ResourceReference `pulumi:"effectiveOutboundIPs"`
	// Desired outbound flow idle timeout in minutes. Allowed values must be in the range of 4 to 120 (inclusive). The default value is 30 minutes.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// Desired managed outbound IPs for the cluster load balancer.
	ManagedOutboundIPs *ManagedClusterLoadBalancerProfileProperties `pulumi:"managedOutboundIPs"`
	// Desired outbound IP Prefix resources for the cluster load balancer.
	OutboundIPPrefixes *ManagedClusterLoadBalancerProfileProperties `pulumi:"outboundIPPrefixes"`
	// Desired outbound IP resources for the cluster load balancer.
	OutboundIPs *ManagedClusterLoadBalancerProfileProperties `pulumi:"outboundIPs"`
}

// ManagedClusterLoadBalancerProfileInput is an input type that accepts ManagedClusterLoadBalancerProfileArgs and ManagedClusterLoadBalancerProfileOutput values.
// You can construct a concrete instance of `ManagedClusterLoadBalancerProfileInput` via:
//
//          ManagedClusterLoadBalancerProfileArgs{...}
type ManagedClusterLoadBalancerProfileInput interface {
	pulumi.Input

	ToManagedClusterLoadBalancerProfileOutput() ManagedClusterLoadBalancerProfileOutput
	ToManagedClusterLoadBalancerProfileOutputWithContext(context.Context) ManagedClusterLoadBalancerProfileOutput
}

// Profile of the managed cluster load balancer.
type ManagedClusterLoadBalancerProfileArgs struct {
	// Desired number of allocated SNAT ports per VM. Allowed values must be in the range of 0 to 64000 (inclusive). The default value is 0 which results in Azure dynamically allocating ports.
	AllocatedOutboundPorts pulumi.IntPtrInput `pulumi:"allocatedOutboundPorts"`
	// The effective outbound IP resources of the cluster load balancer.
	EffectiveOutboundIPs ResourceReferenceArrayInput `pulumi:"effectiveOutboundIPs"`
	// Desired outbound flow idle timeout in minutes. Allowed values must be in the range of 4 to 120 (inclusive). The default value is 30 minutes.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// Desired managed outbound IPs for the cluster load balancer.
	ManagedOutboundIPs ManagedClusterLoadBalancerProfilePropertiesPtrInput `pulumi:"managedOutboundIPs"`
	// Desired outbound IP Prefix resources for the cluster load balancer.
	OutboundIPPrefixes ManagedClusterLoadBalancerProfilePropertiesPtrInput `pulumi:"outboundIPPrefixes"`
	// Desired outbound IP resources for the cluster load balancer.
	OutboundIPs ManagedClusterLoadBalancerProfilePropertiesPtrInput `pulumi:"outboundIPs"`
}

func (ManagedClusterLoadBalancerProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterLoadBalancerProfile)(nil)).Elem()
}

func (i ManagedClusterLoadBalancerProfileArgs) ToManagedClusterLoadBalancerProfileOutput() ManagedClusterLoadBalancerProfileOutput {
	return i.ToManagedClusterLoadBalancerProfileOutputWithContext(context.Background())
}

func (i ManagedClusterLoadBalancerProfileArgs) ToManagedClusterLoadBalancerProfileOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterLoadBalancerProfileOutput)
}

func (i ManagedClusterLoadBalancerProfileArgs) ToManagedClusterLoadBalancerProfilePtrOutput() ManagedClusterLoadBalancerProfilePtrOutput {
	return i.ToManagedClusterLoadBalancerProfilePtrOutputWithContext(context.Background())
}

func (i ManagedClusterLoadBalancerProfileArgs) ToManagedClusterLoadBalancerProfilePtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterLoadBalancerProfileOutput).ToManagedClusterLoadBalancerProfilePtrOutputWithContext(ctx)
}

// ManagedClusterLoadBalancerProfilePtrInput is an input type that accepts ManagedClusterLoadBalancerProfileArgs, ManagedClusterLoadBalancerProfilePtr and ManagedClusterLoadBalancerProfilePtrOutput values.
// You can construct a concrete instance of `ManagedClusterLoadBalancerProfilePtrInput` via:
//
//          ManagedClusterLoadBalancerProfileArgs{...}
//
//  or:
//
//          nil
type ManagedClusterLoadBalancerProfilePtrInput interface {
	pulumi.Input

	ToManagedClusterLoadBalancerProfilePtrOutput() ManagedClusterLoadBalancerProfilePtrOutput
	ToManagedClusterLoadBalancerProfilePtrOutputWithContext(context.Context) ManagedClusterLoadBalancerProfilePtrOutput
}

type managedClusterLoadBalancerProfilePtrType ManagedClusterLoadBalancerProfileArgs

func ManagedClusterLoadBalancerProfilePtr(v *ManagedClusterLoadBalancerProfileArgs) ManagedClusterLoadBalancerProfilePtrInput {
	return (*managedClusterLoadBalancerProfilePtrType)(v)
}

func (*managedClusterLoadBalancerProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterLoadBalancerProfile)(nil)).Elem()
}

func (i *managedClusterLoadBalancerProfilePtrType) ToManagedClusterLoadBalancerProfilePtrOutput() ManagedClusterLoadBalancerProfilePtrOutput {
	return i.ToManagedClusterLoadBalancerProfilePtrOutputWithContext(context.Background())
}

func (i *managedClusterLoadBalancerProfilePtrType) ToManagedClusterLoadBalancerProfilePtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterLoadBalancerProfilePtrOutput)
}

// Profile of the managed cluster load balancer.
type ManagedClusterLoadBalancerProfileOutput struct{ *pulumi.OutputState }

func (ManagedClusterLoadBalancerProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterLoadBalancerProfile)(nil)).Elem()
}

func (o ManagedClusterLoadBalancerProfileOutput) ToManagedClusterLoadBalancerProfileOutput() ManagedClusterLoadBalancerProfileOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileOutput) ToManagedClusterLoadBalancerProfileOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileOutput) ToManagedClusterLoadBalancerProfilePtrOutput() ManagedClusterLoadBalancerProfilePtrOutput {
	return o.ToManagedClusterLoadBalancerProfilePtrOutputWithContext(context.Background())
}

func (o ManagedClusterLoadBalancerProfileOutput) ToManagedClusterLoadBalancerProfilePtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfilePtrOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfile) *ManagedClusterLoadBalancerProfile {
		return &v
	}).(ManagedClusterLoadBalancerProfilePtrOutput)
}

// Desired number of allocated SNAT ports per VM. Allowed values must be in the range of 0 to 64000 (inclusive). The default value is 0 which results in Azure dynamically allocating ports.
func (o ManagedClusterLoadBalancerProfileOutput) AllocatedOutboundPorts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfile) *int { return v.AllocatedOutboundPorts }).(pulumi.IntPtrOutput)
}

// The effective outbound IP resources of the cluster load balancer.
func (o ManagedClusterLoadBalancerProfileOutput) EffectiveOutboundIPs() ResourceReferenceArrayOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfile) []ResourceReference { return v.EffectiveOutboundIPs }).(ResourceReferenceArrayOutput)
}

// Desired outbound flow idle timeout in minutes. Allowed values must be in the range of 4 to 120 (inclusive). The default value is 30 minutes.
func (o ManagedClusterLoadBalancerProfileOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfile) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// Desired managed outbound IPs for the cluster load balancer.
func (o ManagedClusterLoadBalancerProfileOutput) ManagedOutboundIPs() ManagedClusterLoadBalancerProfilePropertiesPtrOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfile) *ManagedClusterLoadBalancerProfileProperties {
		return v.ManagedOutboundIPs
	}).(ManagedClusterLoadBalancerProfilePropertiesPtrOutput)
}

// Desired outbound IP Prefix resources for the cluster load balancer.
func (o ManagedClusterLoadBalancerProfileOutput) OutboundIPPrefixes() ManagedClusterLoadBalancerProfilePropertiesPtrOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfile) *ManagedClusterLoadBalancerProfileProperties {
		return v.OutboundIPPrefixes
	}).(ManagedClusterLoadBalancerProfilePropertiesPtrOutput)
}

// Desired outbound IP resources for the cluster load balancer.
func (o ManagedClusterLoadBalancerProfileOutput) OutboundIPs() ManagedClusterLoadBalancerProfilePropertiesPtrOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfile) *ManagedClusterLoadBalancerProfileProperties {
		return v.OutboundIPs
	}).(ManagedClusterLoadBalancerProfilePropertiesPtrOutput)
}

type ManagedClusterLoadBalancerProfilePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterLoadBalancerProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterLoadBalancerProfile)(nil)).Elem()
}

func (o ManagedClusterLoadBalancerProfilePtrOutput) ToManagedClusterLoadBalancerProfilePtrOutput() ManagedClusterLoadBalancerProfilePtrOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfilePtrOutput) ToManagedClusterLoadBalancerProfilePtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfilePtrOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfilePtrOutput) Elem() ManagedClusterLoadBalancerProfileOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfile) ManagedClusterLoadBalancerProfile { return *v }).(ManagedClusterLoadBalancerProfileOutput)
}

// Desired number of allocated SNAT ports per VM. Allowed values must be in the range of 0 to 64000 (inclusive). The default value is 0 which results in Azure dynamically allocating ports.
func (o ManagedClusterLoadBalancerProfilePtrOutput) AllocatedOutboundPorts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfile) *int {
		if v == nil {
			return nil
		}
		return v.AllocatedOutboundPorts
	}).(pulumi.IntPtrOutput)
}

// The effective outbound IP resources of the cluster load balancer.
func (o ManagedClusterLoadBalancerProfilePtrOutput) EffectiveOutboundIPs() ResourceReferenceArrayOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfile) []ResourceReference {
		if v == nil {
			return nil
		}
		return v.EffectiveOutboundIPs
	}).(ResourceReferenceArrayOutput)
}

// Desired outbound flow idle timeout in minutes. Allowed values must be in the range of 4 to 120 (inclusive). The default value is 30 minutes.
func (o ManagedClusterLoadBalancerProfilePtrOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfile) *int {
		if v == nil {
			return nil
		}
		return v.IdleTimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

// Desired managed outbound IPs for the cluster load balancer.
func (o ManagedClusterLoadBalancerProfilePtrOutput) ManagedOutboundIPs() ManagedClusterLoadBalancerProfilePropertiesPtrOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfile) *ManagedClusterLoadBalancerProfileProperties {
		if v == nil {
			return nil
		}
		return v.ManagedOutboundIPs
	}).(ManagedClusterLoadBalancerProfilePropertiesPtrOutput)
}

// Desired outbound IP Prefix resources for the cluster load balancer.
func (o ManagedClusterLoadBalancerProfilePtrOutput) OutboundIPPrefixes() ManagedClusterLoadBalancerProfilePropertiesPtrOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfile) *ManagedClusterLoadBalancerProfileProperties {
		if v == nil {
			return nil
		}
		return v.OutboundIPPrefixes
	}).(ManagedClusterLoadBalancerProfilePropertiesPtrOutput)
}

// Desired outbound IP resources for the cluster load balancer.
func (o ManagedClusterLoadBalancerProfilePtrOutput) OutboundIPs() ManagedClusterLoadBalancerProfilePropertiesPtrOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfile) *ManagedClusterLoadBalancerProfileProperties {
		if v == nil {
			return nil
		}
		return v.OutboundIPs
	}).(ManagedClusterLoadBalancerProfilePropertiesPtrOutput)
}

// Desired managed outbound IPs for the cluster load balancer.
type ManagedClusterLoadBalancerProfileProperties struct {
	// Desired number of outbound IP created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
	Count *int `pulumi:"count"`
}

// ManagedClusterLoadBalancerProfilePropertiesInput is an input type that accepts ManagedClusterLoadBalancerProfilePropertiesArgs and ManagedClusterLoadBalancerProfilePropertiesOutput values.
// You can construct a concrete instance of `ManagedClusterLoadBalancerProfilePropertiesInput` via:
//
//          ManagedClusterLoadBalancerProfilePropertiesArgs{...}
type ManagedClusterLoadBalancerProfilePropertiesInput interface {
	pulumi.Input

	ToManagedClusterLoadBalancerProfilePropertiesOutput() ManagedClusterLoadBalancerProfilePropertiesOutput
	ToManagedClusterLoadBalancerProfilePropertiesOutputWithContext(context.Context) ManagedClusterLoadBalancerProfilePropertiesOutput
}

// Desired managed outbound IPs for the cluster load balancer.
type ManagedClusterLoadBalancerProfilePropertiesArgs struct {
	// Desired number of outbound IP created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
	Count pulumi.IntPtrInput `pulumi:"count"`
}

func (ManagedClusterLoadBalancerProfilePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterLoadBalancerProfileProperties)(nil)).Elem()
}

func (i ManagedClusterLoadBalancerProfilePropertiesArgs) ToManagedClusterLoadBalancerProfilePropertiesOutput() ManagedClusterLoadBalancerProfilePropertiesOutput {
	return i.ToManagedClusterLoadBalancerProfilePropertiesOutputWithContext(context.Background())
}

func (i ManagedClusterLoadBalancerProfilePropertiesArgs) ToManagedClusterLoadBalancerProfilePropertiesOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfilePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterLoadBalancerProfilePropertiesOutput)
}

func (i ManagedClusterLoadBalancerProfilePropertiesArgs) ToManagedClusterLoadBalancerProfilePropertiesPtrOutput() ManagedClusterLoadBalancerProfilePropertiesPtrOutput {
	return i.ToManagedClusterLoadBalancerProfilePropertiesPtrOutputWithContext(context.Background())
}

func (i ManagedClusterLoadBalancerProfilePropertiesArgs) ToManagedClusterLoadBalancerProfilePropertiesPtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfilePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterLoadBalancerProfilePropertiesOutput).ToManagedClusterLoadBalancerProfilePropertiesPtrOutputWithContext(ctx)
}

// ManagedClusterLoadBalancerProfilePropertiesPtrInput is an input type that accepts ManagedClusterLoadBalancerProfilePropertiesArgs, ManagedClusterLoadBalancerProfilePropertiesPtr and ManagedClusterLoadBalancerProfilePropertiesPtrOutput values.
// You can construct a concrete instance of `ManagedClusterLoadBalancerProfilePropertiesPtrInput` via:
//
//          ManagedClusterLoadBalancerProfilePropertiesArgs{...}
//
//  or:
//
//          nil
type ManagedClusterLoadBalancerProfilePropertiesPtrInput interface {
	pulumi.Input

	ToManagedClusterLoadBalancerProfilePropertiesPtrOutput() ManagedClusterLoadBalancerProfilePropertiesPtrOutput
	ToManagedClusterLoadBalancerProfilePropertiesPtrOutputWithContext(context.Context) ManagedClusterLoadBalancerProfilePropertiesPtrOutput
}

type managedClusterLoadBalancerProfilePropertiesPtrType ManagedClusterLoadBalancerProfilePropertiesArgs

func ManagedClusterLoadBalancerProfilePropertiesPtr(v *ManagedClusterLoadBalancerProfilePropertiesArgs) ManagedClusterLoadBalancerProfilePropertiesPtrInput {
	return (*managedClusterLoadBalancerProfilePropertiesPtrType)(v)
}

func (*managedClusterLoadBalancerProfilePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterLoadBalancerProfileProperties)(nil)).Elem()
}

func (i *managedClusterLoadBalancerProfilePropertiesPtrType) ToManagedClusterLoadBalancerProfilePropertiesPtrOutput() ManagedClusterLoadBalancerProfilePropertiesPtrOutput {
	return i.ToManagedClusterLoadBalancerProfilePropertiesPtrOutputWithContext(context.Background())
}

func (i *managedClusterLoadBalancerProfilePropertiesPtrType) ToManagedClusterLoadBalancerProfilePropertiesPtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfilePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterLoadBalancerProfilePropertiesPtrOutput)
}

// Desired managed outbound IPs for the cluster load balancer.
type ManagedClusterLoadBalancerProfilePropertiesOutput struct{ *pulumi.OutputState }

func (ManagedClusterLoadBalancerProfilePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterLoadBalancerProfileProperties)(nil)).Elem()
}

func (o ManagedClusterLoadBalancerProfilePropertiesOutput) ToManagedClusterLoadBalancerProfilePropertiesOutput() ManagedClusterLoadBalancerProfilePropertiesOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfilePropertiesOutput) ToManagedClusterLoadBalancerProfilePropertiesOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfilePropertiesOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfilePropertiesOutput) ToManagedClusterLoadBalancerProfilePropertiesPtrOutput() ManagedClusterLoadBalancerProfilePropertiesPtrOutput {
	return o.ToManagedClusterLoadBalancerProfilePropertiesPtrOutputWithContext(context.Background())
}

func (o ManagedClusterLoadBalancerProfilePropertiesOutput) ToManagedClusterLoadBalancerProfilePropertiesPtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfilePropertiesPtrOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfileProperties) *ManagedClusterLoadBalancerProfileProperties {
		return &v
	}).(ManagedClusterLoadBalancerProfilePropertiesPtrOutput)
}

// Desired number of outbound IP created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
func (o ManagedClusterLoadBalancerProfilePropertiesOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfileProperties) *int { return v.Count }).(pulumi.IntPtrOutput)
}

type ManagedClusterLoadBalancerProfilePropertiesPtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterLoadBalancerProfilePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterLoadBalancerProfileProperties)(nil)).Elem()
}

func (o ManagedClusterLoadBalancerProfilePropertiesPtrOutput) ToManagedClusterLoadBalancerProfilePropertiesPtrOutput() ManagedClusterLoadBalancerProfilePropertiesPtrOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfilePropertiesPtrOutput) ToManagedClusterLoadBalancerProfilePropertiesPtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfilePropertiesPtrOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfilePropertiesPtrOutput) Elem() ManagedClusterLoadBalancerProfilePropertiesOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfileProperties) ManagedClusterLoadBalancerProfileProperties {
		return *v
	}).(ManagedClusterLoadBalancerProfilePropertiesOutput)
}

// Desired number of outbound IP created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
func (o ManagedClusterLoadBalancerProfilePropertiesPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfileProperties) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Profile of the managed cluster load balancer.
type ManagedClusterLoadBalancerProfileResponse struct {
	// Desired number of allocated SNAT ports per VM. Allowed values must be in the range of 0 to 64000 (inclusive). The default value is 0 which results in Azure dynamically allocating ports.
	AllocatedOutboundPorts *int `pulumi:"allocatedOutboundPorts"`
	// The effective outbound IP resources of the cluster load balancer.
	EffectiveOutboundIPs []ResourceReferenceResponse `pulumi:"effectiveOutboundIPs"`
	// Desired outbound flow idle timeout in minutes. Allowed values must be in the range of 4 to 120 (inclusive). The default value is 30 minutes.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// Desired managed outbound IPs for the cluster load balancer.
	ManagedOutboundIPs *ManagedClusterLoadBalancerProfileResponseProperties `pulumi:"managedOutboundIPs"`
	// Desired outbound IP Prefix resources for the cluster load balancer.
	OutboundIPPrefixes *ManagedClusterLoadBalancerProfileResponseProperties `pulumi:"outboundIPPrefixes"`
	// Desired outbound IP resources for the cluster load balancer.
	OutboundIPs *ManagedClusterLoadBalancerProfileResponseProperties `pulumi:"outboundIPs"`
}

// ManagedClusterLoadBalancerProfileResponseInput is an input type that accepts ManagedClusterLoadBalancerProfileResponseArgs and ManagedClusterLoadBalancerProfileResponseOutput values.
// You can construct a concrete instance of `ManagedClusterLoadBalancerProfileResponseInput` via:
//
//          ManagedClusterLoadBalancerProfileResponseArgs{...}
type ManagedClusterLoadBalancerProfileResponseInput interface {
	pulumi.Input

	ToManagedClusterLoadBalancerProfileResponseOutput() ManagedClusterLoadBalancerProfileResponseOutput
	ToManagedClusterLoadBalancerProfileResponseOutputWithContext(context.Context) ManagedClusterLoadBalancerProfileResponseOutput
}

// Profile of the managed cluster load balancer.
type ManagedClusterLoadBalancerProfileResponseArgs struct {
	// Desired number of allocated SNAT ports per VM. Allowed values must be in the range of 0 to 64000 (inclusive). The default value is 0 which results in Azure dynamically allocating ports.
	AllocatedOutboundPorts pulumi.IntPtrInput `pulumi:"allocatedOutboundPorts"`
	// The effective outbound IP resources of the cluster load balancer.
	EffectiveOutboundIPs ResourceReferenceResponseArrayInput `pulumi:"effectiveOutboundIPs"`
	// Desired outbound flow idle timeout in minutes. Allowed values must be in the range of 4 to 120 (inclusive). The default value is 30 minutes.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// Desired managed outbound IPs for the cluster load balancer.
	ManagedOutboundIPs ManagedClusterLoadBalancerProfileResponsePropertiesPtrInput `pulumi:"managedOutboundIPs"`
	// Desired outbound IP Prefix resources for the cluster load balancer.
	OutboundIPPrefixes ManagedClusterLoadBalancerProfileResponsePropertiesPtrInput `pulumi:"outboundIPPrefixes"`
	// Desired outbound IP resources for the cluster load balancer.
	OutboundIPs ManagedClusterLoadBalancerProfileResponsePropertiesPtrInput `pulumi:"outboundIPs"`
}

func (ManagedClusterLoadBalancerProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterLoadBalancerProfileResponse)(nil)).Elem()
}

func (i ManagedClusterLoadBalancerProfileResponseArgs) ToManagedClusterLoadBalancerProfileResponseOutput() ManagedClusterLoadBalancerProfileResponseOutput {
	return i.ToManagedClusterLoadBalancerProfileResponseOutputWithContext(context.Background())
}

func (i ManagedClusterLoadBalancerProfileResponseArgs) ToManagedClusterLoadBalancerProfileResponseOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterLoadBalancerProfileResponseOutput)
}

func (i ManagedClusterLoadBalancerProfileResponseArgs) ToManagedClusterLoadBalancerProfileResponsePtrOutput() ManagedClusterLoadBalancerProfileResponsePtrOutput {
	return i.ToManagedClusterLoadBalancerProfileResponsePtrOutputWithContext(context.Background())
}

func (i ManagedClusterLoadBalancerProfileResponseArgs) ToManagedClusterLoadBalancerProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterLoadBalancerProfileResponseOutput).ToManagedClusterLoadBalancerProfileResponsePtrOutputWithContext(ctx)
}

// ManagedClusterLoadBalancerProfileResponsePtrInput is an input type that accepts ManagedClusterLoadBalancerProfileResponseArgs, ManagedClusterLoadBalancerProfileResponsePtr and ManagedClusterLoadBalancerProfileResponsePtrOutput values.
// You can construct a concrete instance of `ManagedClusterLoadBalancerProfileResponsePtrInput` via:
//
//          ManagedClusterLoadBalancerProfileResponseArgs{...}
//
//  or:
//
//          nil
type ManagedClusterLoadBalancerProfileResponsePtrInput interface {
	pulumi.Input

	ToManagedClusterLoadBalancerProfileResponsePtrOutput() ManagedClusterLoadBalancerProfileResponsePtrOutput
	ToManagedClusterLoadBalancerProfileResponsePtrOutputWithContext(context.Context) ManagedClusterLoadBalancerProfileResponsePtrOutput
}

type managedClusterLoadBalancerProfileResponsePtrType ManagedClusterLoadBalancerProfileResponseArgs

func ManagedClusterLoadBalancerProfileResponsePtr(v *ManagedClusterLoadBalancerProfileResponseArgs) ManagedClusterLoadBalancerProfileResponsePtrInput {
	return (*managedClusterLoadBalancerProfileResponsePtrType)(v)
}

func (*managedClusterLoadBalancerProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterLoadBalancerProfileResponse)(nil)).Elem()
}

func (i *managedClusterLoadBalancerProfileResponsePtrType) ToManagedClusterLoadBalancerProfileResponsePtrOutput() ManagedClusterLoadBalancerProfileResponsePtrOutput {
	return i.ToManagedClusterLoadBalancerProfileResponsePtrOutputWithContext(context.Background())
}

func (i *managedClusterLoadBalancerProfileResponsePtrType) ToManagedClusterLoadBalancerProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterLoadBalancerProfileResponsePtrOutput)
}

// Profile of the managed cluster load balancer.
type ManagedClusterLoadBalancerProfileResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterLoadBalancerProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterLoadBalancerProfileResponse)(nil)).Elem()
}

func (o ManagedClusterLoadBalancerProfileResponseOutput) ToManagedClusterLoadBalancerProfileResponseOutput() ManagedClusterLoadBalancerProfileResponseOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileResponseOutput) ToManagedClusterLoadBalancerProfileResponseOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileResponseOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileResponseOutput) ToManagedClusterLoadBalancerProfileResponsePtrOutput() ManagedClusterLoadBalancerProfileResponsePtrOutput {
	return o.ToManagedClusterLoadBalancerProfileResponsePtrOutputWithContext(context.Background())
}

func (o ManagedClusterLoadBalancerProfileResponseOutput) ToManagedClusterLoadBalancerProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfileResponse) *ManagedClusterLoadBalancerProfileResponse {
		return &v
	}).(ManagedClusterLoadBalancerProfileResponsePtrOutput)
}

// Desired number of allocated SNAT ports per VM. Allowed values must be in the range of 0 to 64000 (inclusive). The default value is 0 which results in Azure dynamically allocating ports.
func (o ManagedClusterLoadBalancerProfileResponseOutput) AllocatedOutboundPorts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfileResponse) *int { return v.AllocatedOutboundPorts }).(pulumi.IntPtrOutput)
}

// The effective outbound IP resources of the cluster load balancer.
func (o ManagedClusterLoadBalancerProfileResponseOutput) EffectiveOutboundIPs() ResourceReferenceResponseArrayOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfileResponse) []ResourceReferenceResponse {
		return v.EffectiveOutboundIPs
	}).(ResourceReferenceResponseArrayOutput)
}

// Desired outbound flow idle timeout in minutes. Allowed values must be in the range of 4 to 120 (inclusive). The default value is 30 minutes.
func (o ManagedClusterLoadBalancerProfileResponseOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfileResponse) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// Desired managed outbound IPs for the cluster load balancer.
func (o ManagedClusterLoadBalancerProfileResponseOutput) ManagedOutboundIPs() ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfileResponse) *ManagedClusterLoadBalancerProfileResponseProperties {
		return v.ManagedOutboundIPs
	}).(ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput)
}

// Desired outbound IP Prefix resources for the cluster load balancer.
func (o ManagedClusterLoadBalancerProfileResponseOutput) OutboundIPPrefixes() ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfileResponse) *ManagedClusterLoadBalancerProfileResponseProperties {
		return v.OutboundIPPrefixes
	}).(ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput)
}

// Desired outbound IP resources for the cluster load balancer.
func (o ManagedClusterLoadBalancerProfileResponseOutput) OutboundIPs() ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfileResponse) *ManagedClusterLoadBalancerProfileResponseProperties {
		return v.OutboundIPs
	}).(ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput)
}

type ManagedClusterLoadBalancerProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterLoadBalancerProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterLoadBalancerProfileResponse)(nil)).Elem()
}

func (o ManagedClusterLoadBalancerProfileResponsePtrOutput) ToManagedClusterLoadBalancerProfileResponsePtrOutput() ManagedClusterLoadBalancerProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileResponsePtrOutput) ToManagedClusterLoadBalancerProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileResponsePtrOutput) Elem() ManagedClusterLoadBalancerProfileResponseOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfileResponse) ManagedClusterLoadBalancerProfileResponse {
		return *v
	}).(ManagedClusterLoadBalancerProfileResponseOutput)
}

// Desired number of allocated SNAT ports per VM. Allowed values must be in the range of 0 to 64000 (inclusive). The default value is 0 which results in Azure dynamically allocating ports.
func (o ManagedClusterLoadBalancerProfileResponsePtrOutput) AllocatedOutboundPorts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfileResponse) *int {
		if v == nil {
			return nil
		}
		return v.AllocatedOutboundPorts
	}).(pulumi.IntPtrOutput)
}

// The effective outbound IP resources of the cluster load balancer.
func (o ManagedClusterLoadBalancerProfileResponsePtrOutput) EffectiveOutboundIPs() ResourceReferenceResponseArrayOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfileResponse) []ResourceReferenceResponse {
		if v == nil {
			return nil
		}
		return v.EffectiveOutboundIPs
	}).(ResourceReferenceResponseArrayOutput)
}

// Desired outbound flow idle timeout in minutes. Allowed values must be in the range of 4 to 120 (inclusive). The default value is 30 minutes.
func (o ManagedClusterLoadBalancerProfileResponsePtrOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfileResponse) *int {
		if v == nil {
			return nil
		}
		return v.IdleTimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

// Desired managed outbound IPs for the cluster load balancer.
func (o ManagedClusterLoadBalancerProfileResponsePtrOutput) ManagedOutboundIPs() ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfileResponse) *ManagedClusterLoadBalancerProfileResponseProperties {
		if v == nil {
			return nil
		}
		return v.ManagedOutboundIPs
	}).(ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput)
}

// Desired outbound IP Prefix resources for the cluster load balancer.
func (o ManagedClusterLoadBalancerProfileResponsePtrOutput) OutboundIPPrefixes() ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfileResponse) *ManagedClusterLoadBalancerProfileResponseProperties {
		if v == nil {
			return nil
		}
		return v.OutboundIPPrefixes
	}).(ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput)
}

// Desired outbound IP resources for the cluster load balancer.
func (o ManagedClusterLoadBalancerProfileResponsePtrOutput) OutboundIPs() ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfileResponse) *ManagedClusterLoadBalancerProfileResponseProperties {
		if v == nil {
			return nil
		}
		return v.OutboundIPs
	}).(ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput)
}

// Desired managed outbound IPs for the cluster load balancer.
type ManagedClusterLoadBalancerProfileResponseProperties struct {
	// Desired number of outbound IP created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
	Count *int `pulumi:"count"`
}

// ManagedClusterLoadBalancerProfileResponsePropertiesInput is an input type that accepts ManagedClusterLoadBalancerProfileResponsePropertiesArgs and ManagedClusterLoadBalancerProfileResponsePropertiesOutput values.
// You can construct a concrete instance of `ManagedClusterLoadBalancerProfileResponsePropertiesInput` via:
//
//          ManagedClusterLoadBalancerProfileResponsePropertiesArgs{...}
type ManagedClusterLoadBalancerProfileResponsePropertiesInput interface {
	pulumi.Input

	ToManagedClusterLoadBalancerProfileResponsePropertiesOutput() ManagedClusterLoadBalancerProfileResponsePropertiesOutput
	ToManagedClusterLoadBalancerProfileResponsePropertiesOutputWithContext(context.Context) ManagedClusterLoadBalancerProfileResponsePropertiesOutput
}

// Desired managed outbound IPs for the cluster load balancer.
type ManagedClusterLoadBalancerProfileResponsePropertiesArgs struct {
	// Desired number of outbound IP created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
	Count pulumi.IntPtrInput `pulumi:"count"`
}

func (ManagedClusterLoadBalancerProfileResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterLoadBalancerProfileResponseProperties)(nil)).Elem()
}

func (i ManagedClusterLoadBalancerProfileResponsePropertiesArgs) ToManagedClusterLoadBalancerProfileResponsePropertiesOutput() ManagedClusterLoadBalancerProfileResponsePropertiesOutput {
	return i.ToManagedClusterLoadBalancerProfileResponsePropertiesOutputWithContext(context.Background())
}

func (i ManagedClusterLoadBalancerProfileResponsePropertiesArgs) ToManagedClusterLoadBalancerProfileResponsePropertiesOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterLoadBalancerProfileResponsePropertiesOutput)
}

func (i ManagedClusterLoadBalancerProfileResponsePropertiesArgs) ToManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput() ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput {
	return i.ToManagedClusterLoadBalancerProfileResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i ManagedClusterLoadBalancerProfileResponsePropertiesArgs) ToManagedClusterLoadBalancerProfileResponsePropertiesPtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterLoadBalancerProfileResponsePropertiesOutput).ToManagedClusterLoadBalancerProfileResponsePropertiesPtrOutputWithContext(ctx)
}

// ManagedClusterLoadBalancerProfileResponsePropertiesPtrInput is an input type that accepts ManagedClusterLoadBalancerProfileResponsePropertiesArgs, ManagedClusterLoadBalancerProfileResponsePropertiesPtr and ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `ManagedClusterLoadBalancerProfileResponsePropertiesPtrInput` via:
//
//          ManagedClusterLoadBalancerProfileResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type ManagedClusterLoadBalancerProfileResponsePropertiesPtrInput interface {
	pulumi.Input

	ToManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput() ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput
	ToManagedClusterLoadBalancerProfileResponsePropertiesPtrOutputWithContext(context.Context) ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput
}

type managedClusterLoadBalancerProfileResponsePropertiesPtrType ManagedClusterLoadBalancerProfileResponsePropertiesArgs

func ManagedClusterLoadBalancerProfileResponsePropertiesPtr(v *ManagedClusterLoadBalancerProfileResponsePropertiesArgs) ManagedClusterLoadBalancerProfileResponsePropertiesPtrInput {
	return (*managedClusterLoadBalancerProfileResponsePropertiesPtrType)(v)
}

func (*managedClusterLoadBalancerProfileResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterLoadBalancerProfileResponseProperties)(nil)).Elem()
}

func (i *managedClusterLoadBalancerProfileResponsePropertiesPtrType) ToManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput() ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput {
	return i.ToManagedClusterLoadBalancerProfileResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *managedClusterLoadBalancerProfileResponsePropertiesPtrType) ToManagedClusterLoadBalancerProfileResponsePropertiesPtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput)
}

// Desired managed outbound IPs for the cluster load balancer.
type ManagedClusterLoadBalancerProfileResponsePropertiesOutput struct{ *pulumi.OutputState }

func (ManagedClusterLoadBalancerProfileResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterLoadBalancerProfileResponseProperties)(nil)).Elem()
}

func (o ManagedClusterLoadBalancerProfileResponsePropertiesOutput) ToManagedClusterLoadBalancerProfileResponsePropertiesOutput() ManagedClusterLoadBalancerProfileResponsePropertiesOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileResponsePropertiesOutput) ToManagedClusterLoadBalancerProfileResponsePropertiesOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileResponsePropertiesOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileResponsePropertiesOutput) ToManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput() ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput {
	return o.ToManagedClusterLoadBalancerProfileResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o ManagedClusterLoadBalancerProfileResponsePropertiesOutput) ToManagedClusterLoadBalancerProfileResponsePropertiesPtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfileResponseProperties) *ManagedClusterLoadBalancerProfileResponseProperties {
		return &v
	}).(ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput)
}

// Desired number of outbound IP created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
func (o ManagedClusterLoadBalancerProfileResponsePropertiesOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfileResponseProperties) *int { return v.Count }).(pulumi.IntPtrOutput)
}

type ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterLoadBalancerProfileResponseProperties)(nil)).Elem()
}

func (o ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput) ToManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput() ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput) ToManagedClusterLoadBalancerProfileResponsePropertiesPtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput) Elem() ManagedClusterLoadBalancerProfileResponsePropertiesOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfileResponseProperties) ManagedClusterLoadBalancerProfileResponseProperties {
		return *v
	}).(ManagedClusterLoadBalancerProfileResponsePropertiesOutput)
}

// Desired number of outbound IP created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
func (o ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfileResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// A private endpoint connection
type ManagedClusterPrivateEndpointConnectionType struct {
	// The name of the private endpoint connection.
	Name string `pulumi:"name"`
	// The properties of a private endpoint connection.
	Properties PrivateEndpointConnectionPropertiesResponse `pulumi:"properties"`
	// The resource type.
	Type string `pulumi:"type"`
}

// ManagedClusterPrivateEndpointConnectionTypeInput is an input type that accepts ManagedClusterPrivateEndpointConnectionTypeArgs and ManagedClusterPrivateEndpointConnectionTypeOutput values.
// You can construct a concrete instance of `ManagedClusterPrivateEndpointConnectionTypeInput` via:
//
//          ManagedClusterPrivateEndpointConnectionTypeArgs{...}
type ManagedClusterPrivateEndpointConnectionTypeInput interface {
	pulumi.Input

	ToManagedClusterPrivateEndpointConnectionTypeOutput() ManagedClusterPrivateEndpointConnectionTypeOutput
	ToManagedClusterPrivateEndpointConnectionTypeOutputWithContext(context.Context) ManagedClusterPrivateEndpointConnectionTypeOutput
}

// A private endpoint connection
type ManagedClusterPrivateEndpointConnectionTypeArgs struct {
	// The name of the private endpoint connection.
	Name pulumi.StringInput `pulumi:"name"`
	// The properties of a private endpoint connection.
	Properties PrivateEndpointConnectionPropertiesResponseInput `pulumi:"properties"`
	// The resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ManagedClusterPrivateEndpointConnectionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterPrivateEndpointConnectionType)(nil)).Elem()
}

func (i ManagedClusterPrivateEndpointConnectionTypeArgs) ToManagedClusterPrivateEndpointConnectionTypeOutput() ManagedClusterPrivateEndpointConnectionTypeOutput {
	return i.ToManagedClusterPrivateEndpointConnectionTypeOutputWithContext(context.Background())
}

func (i ManagedClusterPrivateEndpointConnectionTypeArgs) ToManagedClusterPrivateEndpointConnectionTypeOutputWithContext(ctx context.Context) ManagedClusterPrivateEndpointConnectionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterPrivateEndpointConnectionTypeOutput)
}

// A private endpoint connection
type ManagedClusterPrivateEndpointConnectionTypeOutput struct{ *pulumi.OutputState }

func (ManagedClusterPrivateEndpointConnectionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterPrivateEndpointConnectionType)(nil)).Elem()
}

func (o ManagedClusterPrivateEndpointConnectionTypeOutput) ToManagedClusterPrivateEndpointConnectionTypeOutput() ManagedClusterPrivateEndpointConnectionTypeOutput {
	return o
}

func (o ManagedClusterPrivateEndpointConnectionTypeOutput) ToManagedClusterPrivateEndpointConnectionTypeOutputWithContext(ctx context.Context) ManagedClusterPrivateEndpointConnectionTypeOutput {
	return o
}

// The name of the private endpoint connection.
func (o ManagedClusterPrivateEndpointConnectionTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterPrivateEndpointConnectionType) string { return v.Name }).(pulumi.StringOutput)
}

// The properties of a private endpoint connection.
func (o ManagedClusterPrivateEndpointConnectionTypeOutput) Properties() PrivateEndpointConnectionPropertiesResponseOutput {
	return o.ApplyT(func(v ManagedClusterPrivateEndpointConnectionType) PrivateEndpointConnectionPropertiesResponse {
		return v.Properties
	}).(PrivateEndpointConnectionPropertiesResponseOutput)
}

// The resource type.
func (o ManagedClusterPrivateEndpointConnectionTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterPrivateEndpointConnectionType) string { return v.Type }).(pulumi.StringOutput)
}

// Properties of the managed cluster.
type ManagedClusterProperties struct {
	// Profile of Azure Active Directory configuration.
	AadProfile *ManagedClusterAADProfile `pulumi:"aadProfile"`
	// Profile of managed cluster add-on.
	AddonProfiles map[string]string `pulumi:"addonProfiles"`
	// Properties of the agent pool.
	AgentPoolProfiles []ManagedClusterAgentPoolProfile `pulumi:"agentPoolProfiles"`
	// Access profile for managed cluster API server.
	ApiServerAccessProfile *ManagedClusterAPIServerAccessProfile `pulumi:"apiServerAccessProfile"`
	// Parameters to be applied to the cluster-autoscaler when enabled
	AutoScalerProfile *ManagedClusterPropertiesProperties `pulumi:"autoScalerProfile"`
	// ResourceId of the disk encryption set to use for enabling encryption at rest.
	DiskEncryptionSetID *string `pulumi:"diskEncryptionSetID"`
	// DNS prefix specified when creating the managed cluster.
	DnsPrefix *string `pulumi:"dnsPrefix"`
	// (PREVIEW) Whether to enable Kubernetes Pod security policy.
	EnablePodSecurityPolicy *bool `pulumi:"enablePodSecurityPolicy"`
	// Whether to enable Kubernetes Role-Based Access Control.
	EnableRBAC *bool `pulumi:"enableRBAC"`
	// Identities associated with the cluster.
	IdentityProfile map[string]string `pulumi:"identityProfile"`
	// Version of Kubernetes specified when creating the managed cluster.
	KubernetesVersion *string `pulumi:"kubernetesVersion"`
	// Profile for Linux VMs in the container service cluster.
	LinuxProfile *ContainerServiceLinuxProfile `pulumi:"linuxProfile"`
	// Profile of network configuration.
	NetworkProfile *ContainerServiceNetworkProfile `pulumi:"networkProfile"`
	// Name of the resource group containing agent pool nodes.
	NodeResourceGroup *string `pulumi:"nodeResourceGroup"`
	// Information about a service principal identity for the cluster to use for manipulating Azure APIs.
	ServicePrincipalProfile *ManagedClusterServicePrincipalProfile `pulumi:"servicePrincipalProfile"`
	// Profile for Windows VMs in the container service cluster.
	WindowsProfile *ManagedClusterWindowsProfile `pulumi:"windowsProfile"`
}

// ManagedClusterPropertiesInput is an input type that accepts ManagedClusterPropertiesArgs and ManagedClusterPropertiesOutput values.
// You can construct a concrete instance of `ManagedClusterPropertiesInput` via:
//
//          ManagedClusterPropertiesArgs{...}
type ManagedClusterPropertiesInput interface {
	pulumi.Input

	ToManagedClusterPropertiesOutput() ManagedClusterPropertiesOutput
	ToManagedClusterPropertiesOutputWithContext(context.Context) ManagedClusterPropertiesOutput
}

// Properties of the managed cluster.
type ManagedClusterPropertiesArgs struct {
	// Profile of Azure Active Directory configuration.
	AadProfile ManagedClusterAADProfilePtrInput `pulumi:"aadProfile"`
	// Profile of managed cluster add-on.
	AddonProfiles pulumi.StringMapInput `pulumi:"addonProfiles"`
	// Properties of the agent pool.
	AgentPoolProfiles ManagedClusterAgentPoolProfileArrayInput `pulumi:"agentPoolProfiles"`
	// Access profile for managed cluster API server.
	ApiServerAccessProfile ManagedClusterAPIServerAccessProfilePtrInput `pulumi:"apiServerAccessProfile"`
	// Parameters to be applied to the cluster-autoscaler when enabled
	AutoScalerProfile ManagedClusterPropertiesPropertiesPtrInput `pulumi:"autoScalerProfile"`
	// ResourceId of the disk encryption set to use for enabling encryption at rest.
	DiskEncryptionSetID pulumi.StringPtrInput `pulumi:"diskEncryptionSetID"`
	// DNS prefix specified when creating the managed cluster.
	DnsPrefix pulumi.StringPtrInput `pulumi:"dnsPrefix"`
	// (PREVIEW) Whether to enable Kubernetes Pod security policy.
	EnablePodSecurityPolicy pulumi.BoolPtrInput `pulumi:"enablePodSecurityPolicy"`
	// Whether to enable Kubernetes Role-Based Access Control.
	EnableRBAC pulumi.BoolPtrInput `pulumi:"enableRBAC"`
	// Identities associated with the cluster.
	IdentityProfile pulumi.StringMapInput `pulumi:"identityProfile"`
	// Version of Kubernetes specified when creating the managed cluster.
	KubernetesVersion pulumi.StringPtrInput `pulumi:"kubernetesVersion"`
	// Profile for Linux VMs in the container service cluster.
	LinuxProfile ContainerServiceLinuxProfilePtrInput `pulumi:"linuxProfile"`
	// Profile of network configuration.
	NetworkProfile ContainerServiceNetworkProfilePtrInput `pulumi:"networkProfile"`
	// Name of the resource group containing agent pool nodes.
	NodeResourceGroup pulumi.StringPtrInput `pulumi:"nodeResourceGroup"`
	// Information about a service principal identity for the cluster to use for manipulating Azure APIs.
	ServicePrincipalProfile ManagedClusterServicePrincipalProfilePtrInput `pulumi:"servicePrincipalProfile"`
	// Profile for Windows VMs in the container service cluster.
	WindowsProfile ManagedClusterWindowsProfilePtrInput `pulumi:"windowsProfile"`
}

func (ManagedClusterPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterProperties)(nil)).Elem()
}

func (i ManagedClusterPropertiesArgs) ToManagedClusterPropertiesOutput() ManagedClusterPropertiesOutput {
	return i.ToManagedClusterPropertiesOutputWithContext(context.Background())
}

func (i ManagedClusterPropertiesArgs) ToManagedClusterPropertiesOutputWithContext(ctx context.Context) ManagedClusterPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterPropertiesOutput)
}

func (i ManagedClusterPropertiesArgs) ToManagedClusterPropertiesPtrOutput() ManagedClusterPropertiesPtrOutput {
	return i.ToManagedClusterPropertiesPtrOutputWithContext(context.Background())
}

func (i ManagedClusterPropertiesArgs) ToManagedClusterPropertiesPtrOutputWithContext(ctx context.Context) ManagedClusterPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterPropertiesOutput).ToManagedClusterPropertiesPtrOutputWithContext(ctx)
}

// ManagedClusterPropertiesPtrInput is an input type that accepts ManagedClusterPropertiesArgs, ManagedClusterPropertiesPtr and ManagedClusterPropertiesPtrOutput values.
// You can construct a concrete instance of `ManagedClusterPropertiesPtrInput` via:
//
//          ManagedClusterPropertiesArgs{...}
//
//  or:
//
//          nil
type ManagedClusterPropertiesPtrInput interface {
	pulumi.Input

	ToManagedClusterPropertiesPtrOutput() ManagedClusterPropertiesPtrOutput
	ToManagedClusterPropertiesPtrOutputWithContext(context.Context) ManagedClusterPropertiesPtrOutput
}

type managedClusterPropertiesPtrType ManagedClusterPropertiesArgs

func ManagedClusterPropertiesPtr(v *ManagedClusterPropertiesArgs) ManagedClusterPropertiesPtrInput {
	return (*managedClusterPropertiesPtrType)(v)
}

func (*managedClusterPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterProperties)(nil)).Elem()
}

func (i *managedClusterPropertiesPtrType) ToManagedClusterPropertiesPtrOutput() ManagedClusterPropertiesPtrOutput {
	return i.ToManagedClusterPropertiesPtrOutputWithContext(context.Background())
}

func (i *managedClusterPropertiesPtrType) ToManagedClusterPropertiesPtrOutputWithContext(ctx context.Context) ManagedClusterPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterPropertiesPtrOutput)
}

// Properties of the managed cluster.
type ManagedClusterPropertiesOutput struct{ *pulumi.OutputState }

func (ManagedClusterPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterProperties)(nil)).Elem()
}

func (o ManagedClusterPropertiesOutput) ToManagedClusterPropertiesOutput() ManagedClusterPropertiesOutput {
	return o
}

func (o ManagedClusterPropertiesOutput) ToManagedClusterPropertiesOutputWithContext(ctx context.Context) ManagedClusterPropertiesOutput {
	return o
}

func (o ManagedClusterPropertiesOutput) ToManagedClusterPropertiesPtrOutput() ManagedClusterPropertiesPtrOutput {
	return o.ToManagedClusterPropertiesPtrOutputWithContext(context.Background())
}

func (o ManagedClusterPropertiesOutput) ToManagedClusterPropertiesPtrOutputWithContext(ctx context.Context) ManagedClusterPropertiesPtrOutput {
	return o.ApplyT(func(v ManagedClusterProperties) *ManagedClusterProperties {
		return &v
	}).(ManagedClusterPropertiesPtrOutput)
}

// Profile of Azure Active Directory configuration.
func (o ManagedClusterPropertiesOutput) AadProfile() ManagedClusterAADProfilePtrOutput {
	return o.ApplyT(func(v ManagedClusterProperties) *ManagedClusterAADProfile { return v.AadProfile }).(ManagedClusterAADProfilePtrOutput)
}

// Profile of managed cluster add-on.
func (o ManagedClusterPropertiesOutput) AddonProfiles() pulumi.StringMapOutput {
	return o.ApplyT(func(v ManagedClusterProperties) map[string]string { return v.AddonProfiles }).(pulumi.StringMapOutput)
}

// Properties of the agent pool.
func (o ManagedClusterPropertiesOutput) AgentPoolProfiles() ManagedClusterAgentPoolProfileArrayOutput {
	return o.ApplyT(func(v ManagedClusterProperties) []ManagedClusterAgentPoolProfile { return v.AgentPoolProfiles }).(ManagedClusterAgentPoolProfileArrayOutput)
}

// Access profile for managed cluster API server.
func (o ManagedClusterPropertiesOutput) ApiServerAccessProfile() ManagedClusterAPIServerAccessProfilePtrOutput {
	return o.ApplyT(func(v ManagedClusterProperties) *ManagedClusterAPIServerAccessProfile {
		return v.ApiServerAccessProfile
	}).(ManagedClusterAPIServerAccessProfilePtrOutput)
}

// Parameters to be applied to the cluster-autoscaler when enabled
func (o ManagedClusterPropertiesOutput) AutoScalerProfile() ManagedClusterPropertiesPropertiesPtrOutput {
	return o.ApplyT(func(v ManagedClusterProperties) *ManagedClusterPropertiesProperties { return v.AutoScalerProfile }).(ManagedClusterPropertiesPropertiesPtrOutput)
}

// ResourceId of the disk encryption set to use for enabling encryption at rest.
func (o ManagedClusterPropertiesOutput) DiskEncryptionSetID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterProperties) *string { return v.DiskEncryptionSetID }).(pulumi.StringPtrOutput)
}

// DNS prefix specified when creating the managed cluster.
func (o ManagedClusterPropertiesOutput) DnsPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterProperties) *string { return v.DnsPrefix }).(pulumi.StringPtrOutput)
}

// (PREVIEW) Whether to enable Kubernetes Pod security policy.
func (o ManagedClusterPropertiesOutput) EnablePodSecurityPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterProperties) *bool { return v.EnablePodSecurityPolicy }).(pulumi.BoolPtrOutput)
}

// Whether to enable Kubernetes Role-Based Access Control.
func (o ManagedClusterPropertiesOutput) EnableRBAC() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterProperties) *bool { return v.EnableRBAC }).(pulumi.BoolPtrOutput)
}

// Identities associated with the cluster.
func (o ManagedClusterPropertiesOutput) IdentityProfile() pulumi.StringMapOutput {
	return o.ApplyT(func(v ManagedClusterProperties) map[string]string { return v.IdentityProfile }).(pulumi.StringMapOutput)
}

// Version of Kubernetes specified when creating the managed cluster.
func (o ManagedClusterPropertiesOutput) KubernetesVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterProperties) *string { return v.KubernetesVersion }).(pulumi.StringPtrOutput)
}

// Profile for Linux VMs in the container service cluster.
func (o ManagedClusterPropertiesOutput) LinuxProfile() ContainerServiceLinuxProfilePtrOutput {
	return o.ApplyT(func(v ManagedClusterProperties) *ContainerServiceLinuxProfile { return v.LinuxProfile }).(ContainerServiceLinuxProfilePtrOutput)
}

// Profile of network configuration.
func (o ManagedClusterPropertiesOutput) NetworkProfile() ContainerServiceNetworkProfilePtrOutput {
	return o.ApplyT(func(v ManagedClusterProperties) *ContainerServiceNetworkProfile { return v.NetworkProfile }).(ContainerServiceNetworkProfilePtrOutput)
}

// Name of the resource group containing agent pool nodes.
func (o ManagedClusterPropertiesOutput) NodeResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterProperties) *string { return v.NodeResourceGroup }).(pulumi.StringPtrOutput)
}

// Information about a service principal identity for the cluster to use for manipulating Azure APIs.
func (o ManagedClusterPropertiesOutput) ServicePrincipalProfile() ManagedClusterServicePrincipalProfilePtrOutput {
	return o.ApplyT(func(v ManagedClusterProperties) *ManagedClusterServicePrincipalProfile {
		return v.ServicePrincipalProfile
	}).(ManagedClusterServicePrincipalProfilePtrOutput)
}

// Profile for Windows VMs in the container service cluster.
func (o ManagedClusterPropertiesOutput) WindowsProfile() ManagedClusterWindowsProfilePtrOutput {
	return o.ApplyT(func(v ManagedClusterProperties) *ManagedClusterWindowsProfile { return v.WindowsProfile }).(ManagedClusterWindowsProfilePtrOutput)
}

type ManagedClusterPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterProperties)(nil)).Elem()
}

func (o ManagedClusterPropertiesPtrOutput) ToManagedClusterPropertiesPtrOutput() ManagedClusterPropertiesPtrOutput {
	return o
}

func (o ManagedClusterPropertiesPtrOutput) ToManagedClusterPropertiesPtrOutputWithContext(ctx context.Context) ManagedClusterPropertiesPtrOutput {
	return o
}

func (o ManagedClusterPropertiesPtrOutput) Elem() ManagedClusterPropertiesOutput {
	return o.ApplyT(func(v *ManagedClusterProperties) ManagedClusterProperties { return *v }).(ManagedClusterPropertiesOutput)
}

// Profile of Azure Active Directory configuration.
func (o ManagedClusterPropertiesPtrOutput) AadProfile() ManagedClusterAADProfilePtrOutput {
	return o.ApplyT(func(v *ManagedClusterProperties) *ManagedClusterAADProfile {
		if v == nil {
			return nil
		}
		return v.AadProfile
	}).(ManagedClusterAADProfilePtrOutput)
}

// Profile of managed cluster add-on.
func (o ManagedClusterPropertiesPtrOutput) AddonProfiles() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ManagedClusterProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.AddonProfiles
	}).(pulumi.StringMapOutput)
}

// Properties of the agent pool.
func (o ManagedClusterPropertiesPtrOutput) AgentPoolProfiles() ManagedClusterAgentPoolProfileArrayOutput {
	return o.ApplyT(func(v *ManagedClusterProperties) []ManagedClusterAgentPoolProfile {
		if v == nil {
			return nil
		}
		return v.AgentPoolProfiles
	}).(ManagedClusterAgentPoolProfileArrayOutput)
}

// Access profile for managed cluster API server.
func (o ManagedClusterPropertiesPtrOutput) ApiServerAccessProfile() ManagedClusterAPIServerAccessProfilePtrOutput {
	return o.ApplyT(func(v *ManagedClusterProperties) *ManagedClusterAPIServerAccessProfile {
		if v == nil {
			return nil
		}
		return v.ApiServerAccessProfile
	}).(ManagedClusterAPIServerAccessProfilePtrOutput)
}

// Parameters to be applied to the cluster-autoscaler when enabled
func (o ManagedClusterPropertiesPtrOutput) AutoScalerProfile() ManagedClusterPropertiesPropertiesPtrOutput {
	return o.ApplyT(func(v *ManagedClusterProperties) *ManagedClusterPropertiesProperties {
		if v == nil {
			return nil
		}
		return v.AutoScalerProfile
	}).(ManagedClusterPropertiesPropertiesPtrOutput)
}

// ResourceId of the disk encryption set to use for enabling encryption at rest.
func (o ManagedClusterPropertiesPtrOutput) DiskEncryptionSetID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterProperties) *string {
		if v == nil {
			return nil
		}
		return v.DiskEncryptionSetID
	}).(pulumi.StringPtrOutput)
}

// DNS prefix specified when creating the managed cluster.
func (o ManagedClusterPropertiesPtrOutput) DnsPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterProperties) *string {
		if v == nil {
			return nil
		}
		return v.DnsPrefix
	}).(pulumi.StringPtrOutput)
}

// (PREVIEW) Whether to enable Kubernetes Pod security policy.
func (o ManagedClusterPropertiesPtrOutput) EnablePodSecurityPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnablePodSecurityPolicy
	}).(pulumi.BoolPtrOutput)
}

// Whether to enable Kubernetes Role-Based Access Control.
func (o ManagedClusterPropertiesPtrOutput) EnableRBAC() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnableRBAC
	}).(pulumi.BoolPtrOutput)
}

// Identities associated with the cluster.
func (o ManagedClusterPropertiesPtrOutput) IdentityProfile() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ManagedClusterProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.IdentityProfile
	}).(pulumi.StringMapOutput)
}

// Version of Kubernetes specified when creating the managed cluster.
func (o ManagedClusterPropertiesPtrOutput) KubernetesVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterProperties) *string {
		if v == nil {
			return nil
		}
		return v.KubernetesVersion
	}).(pulumi.StringPtrOutput)
}

// Profile for Linux VMs in the container service cluster.
func (o ManagedClusterPropertiesPtrOutput) LinuxProfile() ContainerServiceLinuxProfilePtrOutput {
	return o.ApplyT(func(v *ManagedClusterProperties) *ContainerServiceLinuxProfile {
		if v == nil {
			return nil
		}
		return v.LinuxProfile
	}).(ContainerServiceLinuxProfilePtrOutput)
}

// Profile of network configuration.
func (o ManagedClusterPropertiesPtrOutput) NetworkProfile() ContainerServiceNetworkProfilePtrOutput {
	return o.ApplyT(func(v *ManagedClusterProperties) *ContainerServiceNetworkProfile {
		if v == nil {
			return nil
		}
		return v.NetworkProfile
	}).(ContainerServiceNetworkProfilePtrOutput)
}

// Name of the resource group containing agent pool nodes.
func (o ManagedClusterPropertiesPtrOutput) NodeResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterProperties) *string {
		if v == nil {
			return nil
		}
		return v.NodeResourceGroup
	}).(pulumi.StringPtrOutput)
}

// Information about a service principal identity for the cluster to use for manipulating Azure APIs.
func (o ManagedClusterPropertiesPtrOutput) ServicePrincipalProfile() ManagedClusterServicePrincipalProfilePtrOutput {
	return o.ApplyT(func(v *ManagedClusterProperties) *ManagedClusterServicePrincipalProfile {
		if v == nil {
			return nil
		}
		return v.ServicePrincipalProfile
	}).(ManagedClusterServicePrincipalProfilePtrOutput)
}

// Profile for Windows VMs in the container service cluster.
func (o ManagedClusterPropertiesPtrOutput) WindowsProfile() ManagedClusterWindowsProfilePtrOutput {
	return o.ApplyT(func(v *ManagedClusterProperties) *ManagedClusterWindowsProfile {
		if v == nil {
			return nil
		}
		return v.WindowsProfile
	}).(ManagedClusterWindowsProfilePtrOutput)
}

// Parameters to be applied to the cluster-autoscaler when enabled
type ManagedClusterPropertiesProperties struct {
}

// ManagedClusterPropertiesPropertiesInput is an input type that accepts ManagedClusterPropertiesPropertiesArgs and ManagedClusterPropertiesPropertiesOutput values.
// You can construct a concrete instance of `ManagedClusterPropertiesPropertiesInput` via:
//
//          ManagedClusterPropertiesPropertiesArgs{...}
type ManagedClusterPropertiesPropertiesInput interface {
	pulumi.Input

	ToManagedClusterPropertiesPropertiesOutput() ManagedClusterPropertiesPropertiesOutput
	ToManagedClusterPropertiesPropertiesOutputWithContext(context.Context) ManagedClusterPropertiesPropertiesOutput
}

// Parameters to be applied to the cluster-autoscaler when enabled
type ManagedClusterPropertiesPropertiesArgs struct {
}

func (ManagedClusterPropertiesPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterPropertiesProperties)(nil)).Elem()
}

func (i ManagedClusterPropertiesPropertiesArgs) ToManagedClusterPropertiesPropertiesOutput() ManagedClusterPropertiesPropertiesOutput {
	return i.ToManagedClusterPropertiesPropertiesOutputWithContext(context.Background())
}

func (i ManagedClusterPropertiesPropertiesArgs) ToManagedClusterPropertiesPropertiesOutputWithContext(ctx context.Context) ManagedClusterPropertiesPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterPropertiesPropertiesOutput)
}

func (i ManagedClusterPropertiesPropertiesArgs) ToManagedClusterPropertiesPropertiesPtrOutput() ManagedClusterPropertiesPropertiesPtrOutput {
	return i.ToManagedClusterPropertiesPropertiesPtrOutputWithContext(context.Background())
}

func (i ManagedClusterPropertiesPropertiesArgs) ToManagedClusterPropertiesPropertiesPtrOutputWithContext(ctx context.Context) ManagedClusterPropertiesPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterPropertiesPropertiesOutput).ToManagedClusterPropertiesPropertiesPtrOutputWithContext(ctx)
}

// ManagedClusterPropertiesPropertiesPtrInput is an input type that accepts ManagedClusterPropertiesPropertiesArgs, ManagedClusterPropertiesPropertiesPtr and ManagedClusterPropertiesPropertiesPtrOutput values.
// You can construct a concrete instance of `ManagedClusterPropertiesPropertiesPtrInput` via:
//
//          ManagedClusterPropertiesPropertiesArgs{...}
//
//  or:
//
//          nil
type ManagedClusterPropertiesPropertiesPtrInput interface {
	pulumi.Input

	ToManagedClusterPropertiesPropertiesPtrOutput() ManagedClusterPropertiesPropertiesPtrOutput
	ToManagedClusterPropertiesPropertiesPtrOutputWithContext(context.Context) ManagedClusterPropertiesPropertiesPtrOutput
}

type managedClusterPropertiesPropertiesPtrType ManagedClusterPropertiesPropertiesArgs

func ManagedClusterPropertiesPropertiesPtr(v *ManagedClusterPropertiesPropertiesArgs) ManagedClusterPropertiesPropertiesPtrInput {
	return (*managedClusterPropertiesPropertiesPtrType)(v)
}

func (*managedClusterPropertiesPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterPropertiesProperties)(nil)).Elem()
}

func (i *managedClusterPropertiesPropertiesPtrType) ToManagedClusterPropertiesPropertiesPtrOutput() ManagedClusterPropertiesPropertiesPtrOutput {
	return i.ToManagedClusterPropertiesPropertiesPtrOutputWithContext(context.Background())
}

func (i *managedClusterPropertiesPropertiesPtrType) ToManagedClusterPropertiesPropertiesPtrOutputWithContext(ctx context.Context) ManagedClusterPropertiesPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterPropertiesPropertiesPtrOutput)
}

// Parameters to be applied to the cluster-autoscaler when enabled
type ManagedClusterPropertiesPropertiesOutput struct{ *pulumi.OutputState }

func (ManagedClusterPropertiesPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterPropertiesProperties)(nil)).Elem()
}

func (o ManagedClusterPropertiesPropertiesOutput) ToManagedClusterPropertiesPropertiesOutput() ManagedClusterPropertiesPropertiesOutput {
	return o
}

func (o ManagedClusterPropertiesPropertiesOutput) ToManagedClusterPropertiesPropertiesOutputWithContext(ctx context.Context) ManagedClusterPropertiesPropertiesOutput {
	return o
}

func (o ManagedClusterPropertiesPropertiesOutput) ToManagedClusterPropertiesPropertiesPtrOutput() ManagedClusterPropertiesPropertiesPtrOutput {
	return o.ToManagedClusterPropertiesPropertiesPtrOutputWithContext(context.Background())
}

func (o ManagedClusterPropertiesPropertiesOutput) ToManagedClusterPropertiesPropertiesPtrOutputWithContext(ctx context.Context) ManagedClusterPropertiesPropertiesPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesProperties) *ManagedClusterPropertiesProperties {
		return &v
	}).(ManagedClusterPropertiesPropertiesPtrOutput)
}

type ManagedClusterPropertiesPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterPropertiesPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterPropertiesProperties)(nil)).Elem()
}

func (o ManagedClusterPropertiesPropertiesPtrOutput) ToManagedClusterPropertiesPropertiesPtrOutput() ManagedClusterPropertiesPropertiesPtrOutput {
	return o
}

func (o ManagedClusterPropertiesPropertiesPtrOutput) ToManagedClusterPropertiesPropertiesPtrOutputWithContext(ctx context.Context) ManagedClusterPropertiesPropertiesPtrOutput {
	return o
}

func (o ManagedClusterPropertiesPropertiesPtrOutput) Elem() ManagedClusterPropertiesPropertiesOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesProperties) ManagedClusterPropertiesProperties { return *v }).(ManagedClusterPropertiesPropertiesOutput)
}

// Properties of the managed cluster.
type ManagedClusterPropertiesResponse struct {
	// Profile of Azure Active Directory configuration.
	AadProfile *ManagedClusterAADProfileResponse `pulumi:"aadProfile"`
	// Profile of managed cluster add-on.
	AddonProfiles map[string]string `pulumi:"addonProfiles"`
	// Properties of the agent pool.
	AgentPoolProfiles []ManagedClusterAgentPoolProfileResponse `pulumi:"agentPoolProfiles"`
	// Access profile for managed cluster API server.
	ApiServerAccessProfile *ManagedClusterAPIServerAccessProfileResponse `pulumi:"apiServerAccessProfile"`
	// Parameters to be applied to the cluster-autoscaler when enabled
	AutoScalerProfile *ManagedClusterPropertiesResponseProperties `pulumi:"autoScalerProfile"`
	// ResourceId of the disk encryption set to use for enabling encryption at rest.
	DiskEncryptionSetID *string `pulumi:"diskEncryptionSetID"`
	// DNS prefix specified when creating the managed cluster.
	DnsPrefix *string `pulumi:"dnsPrefix"`
	// (PREVIEW) Whether to enable Kubernetes Pod security policy.
	EnablePodSecurityPolicy *bool `pulumi:"enablePodSecurityPolicy"`
	// Whether to enable Kubernetes Role-Based Access Control.
	EnableRBAC *bool `pulumi:"enableRBAC"`
	// FQDN for the master pool.
	Fqdn string `pulumi:"fqdn"`
	// Identities associated with the cluster.
	IdentityProfile map[string]string `pulumi:"identityProfile"`
	// Version of Kubernetes specified when creating the managed cluster.
	KubernetesVersion *string `pulumi:"kubernetesVersion"`
	// Profile for Linux VMs in the container service cluster.
	LinuxProfile *ContainerServiceLinuxProfileResponse `pulumi:"linuxProfile"`
	// The max number of agent pools for the managed cluster.
	MaxAgentPools int `pulumi:"maxAgentPools"`
	// Profile of network configuration.
	NetworkProfile *ContainerServiceNetworkProfileResponse `pulumi:"networkProfile"`
	// Name of the resource group containing agent pool nodes.
	NodeResourceGroup *string `pulumi:"nodeResourceGroup"`
	// FQDN of private cluster.
	PrivateFQDN string `pulumi:"privateFQDN"`
	// The current deployment or provisioning state, which only appears in the response.
	ProvisioningState string `pulumi:"provisioningState"`
	// Information about a service principal identity for the cluster to use for manipulating Azure APIs.
	ServicePrincipalProfile *ManagedClusterServicePrincipalProfileResponse `pulumi:"servicePrincipalProfile"`
	// Profile for Windows VMs in the container service cluster.
	WindowsProfile *ManagedClusterWindowsProfileResponse `pulumi:"windowsProfile"`
}

// ManagedClusterPropertiesResponseInput is an input type that accepts ManagedClusterPropertiesResponseArgs and ManagedClusterPropertiesResponseOutput values.
// You can construct a concrete instance of `ManagedClusterPropertiesResponseInput` via:
//
//          ManagedClusterPropertiesResponseArgs{...}
type ManagedClusterPropertiesResponseInput interface {
	pulumi.Input

	ToManagedClusterPropertiesResponseOutput() ManagedClusterPropertiesResponseOutput
	ToManagedClusterPropertiesResponseOutputWithContext(context.Context) ManagedClusterPropertiesResponseOutput
}

// Properties of the managed cluster.
type ManagedClusterPropertiesResponseArgs struct {
	// Profile of Azure Active Directory configuration.
	AadProfile ManagedClusterAADProfileResponsePtrInput `pulumi:"aadProfile"`
	// Profile of managed cluster add-on.
	AddonProfiles pulumi.StringMapInput `pulumi:"addonProfiles"`
	// Properties of the agent pool.
	AgentPoolProfiles ManagedClusterAgentPoolProfileResponseArrayInput `pulumi:"agentPoolProfiles"`
	// Access profile for managed cluster API server.
	ApiServerAccessProfile ManagedClusterAPIServerAccessProfileResponsePtrInput `pulumi:"apiServerAccessProfile"`
	// Parameters to be applied to the cluster-autoscaler when enabled
	AutoScalerProfile ManagedClusterPropertiesResponsePropertiesPtrInput `pulumi:"autoScalerProfile"`
	// ResourceId of the disk encryption set to use for enabling encryption at rest.
	DiskEncryptionSetID pulumi.StringPtrInput `pulumi:"diskEncryptionSetID"`
	// DNS prefix specified when creating the managed cluster.
	DnsPrefix pulumi.StringPtrInput `pulumi:"dnsPrefix"`
	// (PREVIEW) Whether to enable Kubernetes Pod security policy.
	EnablePodSecurityPolicy pulumi.BoolPtrInput `pulumi:"enablePodSecurityPolicy"`
	// Whether to enable Kubernetes Role-Based Access Control.
	EnableRBAC pulumi.BoolPtrInput `pulumi:"enableRBAC"`
	// FQDN for the master pool.
	Fqdn pulumi.StringInput `pulumi:"fqdn"`
	// Identities associated with the cluster.
	IdentityProfile pulumi.StringMapInput `pulumi:"identityProfile"`
	// Version of Kubernetes specified when creating the managed cluster.
	KubernetesVersion pulumi.StringPtrInput `pulumi:"kubernetesVersion"`
	// Profile for Linux VMs in the container service cluster.
	LinuxProfile ContainerServiceLinuxProfileResponsePtrInput `pulumi:"linuxProfile"`
	// The max number of agent pools for the managed cluster.
	MaxAgentPools pulumi.IntInput `pulumi:"maxAgentPools"`
	// Profile of network configuration.
	NetworkProfile ContainerServiceNetworkProfileResponsePtrInput `pulumi:"networkProfile"`
	// Name of the resource group containing agent pool nodes.
	NodeResourceGroup pulumi.StringPtrInput `pulumi:"nodeResourceGroup"`
	// FQDN of private cluster.
	PrivateFQDN pulumi.StringInput `pulumi:"privateFQDN"`
	// The current deployment or provisioning state, which only appears in the response.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Information about a service principal identity for the cluster to use for manipulating Azure APIs.
	ServicePrincipalProfile ManagedClusterServicePrincipalProfileResponsePtrInput `pulumi:"servicePrincipalProfile"`
	// Profile for Windows VMs in the container service cluster.
	WindowsProfile ManagedClusterWindowsProfileResponsePtrInput `pulumi:"windowsProfile"`
}

func (ManagedClusterPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterPropertiesResponse)(nil)).Elem()
}

func (i ManagedClusterPropertiesResponseArgs) ToManagedClusterPropertiesResponseOutput() ManagedClusterPropertiesResponseOutput {
	return i.ToManagedClusterPropertiesResponseOutputWithContext(context.Background())
}

func (i ManagedClusterPropertiesResponseArgs) ToManagedClusterPropertiesResponseOutputWithContext(ctx context.Context) ManagedClusterPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterPropertiesResponseOutput)
}

func (i ManagedClusterPropertiesResponseArgs) ToManagedClusterPropertiesResponsePtrOutput() ManagedClusterPropertiesResponsePtrOutput {
	return i.ToManagedClusterPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ManagedClusterPropertiesResponseArgs) ToManagedClusterPropertiesResponsePtrOutputWithContext(ctx context.Context) ManagedClusterPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterPropertiesResponseOutput).ToManagedClusterPropertiesResponsePtrOutputWithContext(ctx)
}

// ManagedClusterPropertiesResponsePtrInput is an input type that accepts ManagedClusterPropertiesResponseArgs, ManagedClusterPropertiesResponsePtr and ManagedClusterPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ManagedClusterPropertiesResponsePtrInput` via:
//
//          ManagedClusterPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ManagedClusterPropertiesResponsePtrInput interface {
	pulumi.Input

	ToManagedClusterPropertiesResponsePtrOutput() ManagedClusterPropertiesResponsePtrOutput
	ToManagedClusterPropertiesResponsePtrOutputWithContext(context.Context) ManagedClusterPropertiesResponsePtrOutput
}

type managedClusterPropertiesResponsePtrType ManagedClusterPropertiesResponseArgs

func ManagedClusterPropertiesResponsePtr(v *ManagedClusterPropertiesResponseArgs) ManagedClusterPropertiesResponsePtrInput {
	return (*managedClusterPropertiesResponsePtrType)(v)
}

func (*managedClusterPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterPropertiesResponse)(nil)).Elem()
}

func (i *managedClusterPropertiesResponsePtrType) ToManagedClusterPropertiesResponsePtrOutput() ManagedClusterPropertiesResponsePtrOutput {
	return i.ToManagedClusterPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *managedClusterPropertiesResponsePtrType) ToManagedClusterPropertiesResponsePtrOutputWithContext(ctx context.Context) ManagedClusterPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterPropertiesResponsePtrOutput)
}

// Properties of the managed cluster.
type ManagedClusterPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterPropertiesResponse)(nil)).Elem()
}

func (o ManagedClusterPropertiesResponseOutput) ToManagedClusterPropertiesResponseOutput() ManagedClusterPropertiesResponseOutput {
	return o
}

func (o ManagedClusterPropertiesResponseOutput) ToManagedClusterPropertiesResponseOutputWithContext(ctx context.Context) ManagedClusterPropertiesResponseOutput {
	return o
}

func (o ManagedClusterPropertiesResponseOutput) ToManagedClusterPropertiesResponsePtrOutput() ManagedClusterPropertiesResponsePtrOutput {
	return o.ToManagedClusterPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ManagedClusterPropertiesResponseOutput) ToManagedClusterPropertiesResponsePtrOutputWithContext(ctx context.Context) ManagedClusterPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponse) *ManagedClusterPropertiesResponse {
		return &v
	}).(ManagedClusterPropertiesResponsePtrOutput)
}

// Profile of Azure Active Directory configuration.
func (o ManagedClusterPropertiesResponseOutput) AadProfile() ManagedClusterAADProfileResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponse) *ManagedClusterAADProfileResponse { return v.AadProfile }).(ManagedClusterAADProfileResponsePtrOutput)
}

// Profile of managed cluster add-on.
func (o ManagedClusterPropertiesResponseOutput) AddonProfiles() pulumi.StringMapOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponse) map[string]string { return v.AddonProfiles }).(pulumi.StringMapOutput)
}

// Properties of the agent pool.
func (o ManagedClusterPropertiesResponseOutput) AgentPoolProfiles() ManagedClusterAgentPoolProfileResponseArrayOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponse) []ManagedClusterAgentPoolProfileResponse {
		return v.AgentPoolProfiles
	}).(ManagedClusterAgentPoolProfileResponseArrayOutput)
}

// Access profile for managed cluster API server.
func (o ManagedClusterPropertiesResponseOutput) ApiServerAccessProfile() ManagedClusterAPIServerAccessProfileResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponse) *ManagedClusterAPIServerAccessProfileResponse {
		return v.ApiServerAccessProfile
	}).(ManagedClusterAPIServerAccessProfileResponsePtrOutput)
}

// Parameters to be applied to the cluster-autoscaler when enabled
func (o ManagedClusterPropertiesResponseOutput) AutoScalerProfile() ManagedClusterPropertiesResponsePropertiesPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponse) *ManagedClusterPropertiesResponseProperties {
		return v.AutoScalerProfile
	}).(ManagedClusterPropertiesResponsePropertiesPtrOutput)
}

// ResourceId of the disk encryption set to use for enabling encryption at rest.
func (o ManagedClusterPropertiesResponseOutput) DiskEncryptionSetID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponse) *string { return v.DiskEncryptionSetID }).(pulumi.StringPtrOutput)
}

// DNS prefix specified when creating the managed cluster.
func (o ManagedClusterPropertiesResponseOutput) DnsPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponse) *string { return v.DnsPrefix }).(pulumi.StringPtrOutput)
}

// (PREVIEW) Whether to enable Kubernetes Pod security policy.
func (o ManagedClusterPropertiesResponseOutput) EnablePodSecurityPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponse) *bool { return v.EnablePodSecurityPolicy }).(pulumi.BoolPtrOutput)
}

// Whether to enable Kubernetes Role-Based Access Control.
func (o ManagedClusterPropertiesResponseOutput) EnableRBAC() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponse) *bool { return v.EnableRBAC }).(pulumi.BoolPtrOutput)
}

// FQDN for the master pool.
func (o ManagedClusterPropertiesResponseOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponse) string { return v.Fqdn }).(pulumi.StringOutput)
}

// Identities associated with the cluster.
func (o ManagedClusterPropertiesResponseOutput) IdentityProfile() pulumi.StringMapOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponse) map[string]string { return v.IdentityProfile }).(pulumi.StringMapOutput)
}

// Version of Kubernetes specified when creating the managed cluster.
func (o ManagedClusterPropertiesResponseOutput) KubernetesVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponse) *string { return v.KubernetesVersion }).(pulumi.StringPtrOutput)
}

// Profile for Linux VMs in the container service cluster.
func (o ManagedClusterPropertiesResponseOutput) LinuxProfile() ContainerServiceLinuxProfileResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponse) *ContainerServiceLinuxProfileResponse { return v.LinuxProfile }).(ContainerServiceLinuxProfileResponsePtrOutput)
}

// The max number of agent pools for the managed cluster.
func (o ManagedClusterPropertiesResponseOutput) MaxAgentPools() pulumi.IntOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponse) int { return v.MaxAgentPools }).(pulumi.IntOutput)
}

// Profile of network configuration.
func (o ManagedClusterPropertiesResponseOutput) NetworkProfile() ContainerServiceNetworkProfileResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponse) *ContainerServiceNetworkProfileResponse {
		return v.NetworkProfile
	}).(ContainerServiceNetworkProfileResponsePtrOutput)
}

// Name of the resource group containing agent pool nodes.
func (o ManagedClusterPropertiesResponseOutput) NodeResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponse) *string { return v.NodeResourceGroup }).(pulumi.StringPtrOutput)
}

// FQDN of private cluster.
func (o ManagedClusterPropertiesResponseOutput) PrivateFQDN() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponse) string { return v.PrivateFQDN }).(pulumi.StringOutput)
}

// The current deployment or provisioning state, which only appears in the response.
func (o ManagedClusterPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Information about a service principal identity for the cluster to use for manipulating Azure APIs.
func (o ManagedClusterPropertiesResponseOutput) ServicePrincipalProfile() ManagedClusterServicePrincipalProfileResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponse) *ManagedClusterServicePrincipalProfileResponse {
		return v.ServicePrincipalProfile
	}).(ManagedClusterServicePrincipalProfileResponsePtrOutput)
}

// Profile for Windows VMs in the container service cluster.
func (o ManagedClusterPropertiesResponseOutput) WindowsProfile() ManagedClusterWindowsProfileResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponse) *ManagedClusterWindowsProfileResponse {
		return v.WindowsProfile
	}).(ManagedClusterWindowsProfileResponsePtrOutput)
}

type ManagedClusterPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterPropertiesResponse)(nil)).Elem()
}

func (o ManagedClusterPropertiesResponsePtrOutput) ToManagedClusterPropertiesResponsePtrOutput() ManagedClusterPropertiesResponsePtrOutput {
	return o
}

func (o ManagedClusterPropertiesResponsePtrOutput) ToManagedClusterPropertiesResponsePtrOutputWithContext(ctx context.Context) ManagedClusterPropertiesResponsePtrOutput {
	return o
}

func (o ManagedClusterPropertiesResponsePtrOutput) Elem() ManagedClusterPropertiesResponseOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponse) ManagedClusterPropertiesResponse { return *v }).(ManagedClusterPropertiesResponseOutput)
}

// Profile of Azure Active Directory configuration.
func (o ManagedClusterPropertiesResponsePtrOutput) AadProfile() ManagedClusterAADProfileResponsePtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponse) *ManagedClusterAADProfileResponse {
		if v == nil {
			return nil
		}
		return v.AadProfile
	}).(ManagedClusterAADProfileResponsePtrOutput)
}

// Profile of managed cluster add-on.
func (o ManagedClusterPropertiesResponsePtrOutput) AddonProfiles() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.AddonProfiles
	}).(pulumi.StringMapOutput)
}

// Properties of the agent pool.
func (o ManagedClusterPropertiesResponsePtrOutput) AgentPoolProfiles() ManagedClusterAgentPoolProfileResponseArrayOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponse) []ManagedClusterAgentPoolProfileResponse {
		if v == nil {
			return nil
		}
		return v.AgentPoolProfiles
	}).(ManagedClusterAgentPoolProfileResponseArrayOutput)
}

// Access profile for managed cluster API server.
func (o ManagedClusterPropertiesResponsePtrOutput) ApiServerAccessProfile() ManagedClusterAPIServerAccessProfileResponsePtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponse) *ManagedClusterAPIServerAccessProfileResponse {
		if v == nil {
			return nil
		}
		return v.ApiServerAccessProfile
	}).(ManagedClusterAPIServerAccessProfileResponsePtrOutput)
}

// Parameters to be applied to the cluster-autoscaler when enabled
func (o ManagedClusterPropertiesResponsePtrOutput) AutoScalerProfile() ManagedClusterPropertiesResponsePropertiesPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponse) *ManagedClusterPropertiesResponseProperties {
		if v == nil {
			return nil
		}
		return v.AutoScalerProfile
	}).(ManagedClusterPropertiesResponsePropertiesPtrOutput)
}

// ResourceId of the disk encryption set to use for enabling encryption at rest.
func (o ManagedClusterPropertiesResponsePtrOutput) DiskEncryptionSetID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DiskEncryptionSetID
	}).(pulumi.StringPtrOutput)
}

// DNS prefix specified when creating the managed cluster.
func (o ManagedClusterPropertiesResponsePtrOutput) DnsPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DnsPrefix
	}).(pulumi.StringPtrOutput)
}

// (PREVIEW) Whether to enable Kubernetes Pod security policy.
func (o ManagedClusterPropertiesResponsePtrOutput) EnablePodSecurityPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnablePodSecurityPolicy
	}).(pulumi.BoolPtrOutput)
}

// Whether to enable Kubernetes Role-Based Access Control.
func (o ManagedClusterPropertiesResponsePtrOutput) EnableRBAC() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableRBAC
	}).(pulumi.BoolPtrOutput)
}

// FQDN for the master pool.
func (o ManagedClusterPropertiesResponsePtrOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Fqdn
	}).(pulumi.StringPtrOutput)
}

// Identities associated with the cluster.
func (o ManagedClusterPropertiesResponsePtrOutput) IdentityProfile() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.IdentityProfile
	}).(pulumi.StringMapOutput)
}

// Version of Kubernetes specified when creating the managed cluster.
func (o ManagedClusterPropertiesResponsePtrOutput) KubernetesVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.KubernetesVersion
	}).(pulumi.StringPtrOutput)
}

// Profile for Linux VMs in the container service cluster.
func (o ManagedClusterPropertiesResponsePtrOutput) LinuxProfile() ContainerServiceLinuxProfileResponsePtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponse) *ContainerServiceLinuxProfileResponse {
		if v == nil {
			return nil
		}
		return v.LinuxProfile
	}).(ContainerServiceLinuxProfileResponsePtrOutput)
}

// The max number of agent pools for the managed cluster.
func (o ManagedClusterPropertiesResponsePtrOutput) MaxAgentPools() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.MaxAgentPools
	}).(pulumi.IntPtrOutput)
}

// Profile of network configuration.
func (o ManagedClusterPropertiesResponsePtrOutput) NetworkProfile() ContainerServiceNetworkProfileResponsePtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponse) *ContainerServiceNetworkProfileResponse {
		if v == nil {
			return nil
		}
		return v.NetworkProfile
	}).(ContainerServiceNetworkProfileResponsePtrOutput)
}

// Name of the resource group containing agent pool nodes.
func (o ManagedClusterPropertiesResponsePtrOutput) NodeResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.NodeResourceGroup
	}).(pulumi.StringPtrOutput)
}

// FQDN of private cluster.
func (o ManagedClusterPropertiesResponsePtrOutput) PrivateFQDN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrivateFQDN
	}).(pulumi.StringPtrOutput)
}

// The current deployment or provisioning state, which only appears in the response.
func (o ManagedClusterPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Information about a service principal identity for the cluster to use for manipulating Azure APIs.
func (o ManagedClusterPropertiesResponsePtrOutput) ServicePrincipalProfile() ManagedClusterServicePrincipalProfileResponsePtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponse) *ManagedClusterServicePrincipalProfileResponse {
		if v == nil {
			return nil
		}
		return v.ServicePrincipalProfile
	}).(ManagedClusterServicePrincipalProfileResponsePtrOutput)
}

// Profile for Windows VMs in the container service cluster.
func (o ManagedClusterPropertiesResponsePtrOutput) WindowsProfile() ManagedClusterWindowsProfileResponsePtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponse) *ManagedClusterWindowsProfileResponse {
		if v == nil {
			return nil
		}
		return v.WindowsProfile
	}).(ManagedClusterWindowsProfileResponsePtrOutput)
}

// Parameters to be applied to the cluster-autoscaler when enabled
type ManagedClusterPropertiesResponseProperties struct {
}

// ManagedClusterPropertiesResponsePropertiesInput is an input type that accepts ManagedClusterPropertiesResponsePropertiesArgs and ManagedClusterPropertiesResponsePropertiesOutput values.
// You can construct a concrete instance of `ManagedClusterPropertiesResponsePropertiesInput` via:
//
//          ManagedClusterPropertiesResponsePropertiesArgs{...}
type ManagedClusterPropertiesResponsePropertiesInput interface {
	pulumi.Input

	ToManagedClusterPropertiesResponsePropertiesOutput() ManagedClusterPropertiesResponsePropertiesOutput
	ToManagedClusterPropertiesResponsePropertiesOutputWithContext(context.Context) ManagedClusterPropertiesResponsePropertiesOutput
}

// Parameters to be applied to the cluster-autoscaler when enabled
type ManagedClusterPropertiesResponsePropertiesArgs struct {
}

func (ManagedClusterPropertiesResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterPropertiesResponseProperties)(nil)).Elem()
}

func (i ManagedClusterPropertiesResponsePropertiesArgs) ToManagedClusterPropertiesResponsePropertiesOutput() ManagedClusterPropertiesResponsePropertiesOutput {
	return i.ToManagedClusterPropertiesResponsePropertiesOutputWithContext(context.Background())
}

func (i ManagedClusterPropertiesResponsePropertiesArgs) ToManagedClusterPropertiesResponsePropertiesOutputWithContext(ctx context.Context) ManagedClusterPropertiesResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterPropertiesResponsePropertiesOutput)
}

func (i ManagedClusterPropertiesResponsePropertiesArgs) ToManagedClusterPropertiesResponsePropertiesPtrOutput() ManagedClusterPropertiesResponsePropertiesPtrOutput {
	return i.ToManagedClusterPropertiesResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i ManagedClusterPropertiesResponsePropertiesArgs) ToManagedClusterPropertiesResponsePropertiesPtrOutputWithContext(ctx context.Context) ManagedClusterPropertiesResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterPropertiesResponsePropertiesOutput).ToManagedClusterPropertiesResponsePropertiesPtrOutputWithContext(ctx)
}

// ManagedClusterPropertiesResponsePropertiesPtrInput is an input type that accepts ManagedClusterPropertiesResponsePropertiesArgs, ManagedClusterPropertiesResponsePropertiesPtr and ManagedClusterPropertiesResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `ManagedClusterPropertiesResponsePropertiesPtrInput` via:
//
//          ManagedClusterPropertiesResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type ManagedClusterPropertiesResponsePropertiesPtrInput interface {
	pulumi.Input

	ToManagedClusterPropertiesResponsePropertiesPtrOutput() ManagedClusterPropertiesResponsePropertiesPtrOutput
	ToManagedClusterPropertiesResponsePropertiesPtrOutputWithContext(context.Context) ManagedClusterPropertiesResponsePropertiesPtrOutput
}

type managedClusterPropertiesResponsePropertiesPtrType ManagedClusterPropertiesResponsePropertiesArgs

func ManagedClusterPropertiesResponsePropertiesPtr(v *ManagedClusterPropertiesResponsePropertiesArgs) ManagedClusterPropertiesResponsePropertiesPtrInput {
	return (*managedClusterPropertiesResponsePropertiesPtrType)(v)
}

func (*managedClusterPropertiesResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterPropertiesResponseProperties)(nil)).Elem()
}

func (i *managedClusterPropertiesResponsePropertiesPtrType) ToManagedClusterPropertiesResponsePropertiesPtrOutput() ManagedClusterPropertiesResponsePropertiesPtrOutput {
	return i.ToManagedClusterPropertiesResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *managedClusterPropertiesResponsePropertiesPtrType) ToManagedClusterPropertiesResponsePropertiesPtrOutputWithContext(ctx context.Context) ManagedClusterPropertiesResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterPropertiesResponsePropertiesPtrOutput)
}

// Parameters to be applied to the cluster-autoscaler when enabled
type ManagedClusterPropertiesResponsePropertiesOutput struct{ *pulumi.OutputState }

func (ManagedClusterPropertiesResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterPropertiesResponseProperties)(nil)).Elem()
}

func (o ManagedClusterPropertiesResponsePropertiesOutput) ToManagedClusterPropertiesResponsePropertiesOutput() ManagedClusterPropertiesResponsePropertiesOutput {
	return o
}

func (o ManagedClusterPropertiesResponsePropertiesOutput) ToManagedClusterPropertiesResponsePropertiesOutputWithContext(ctx context.Context) ManagedClusterPropertiesResponsePropertiesOutput {
	return o
}

func (o ManagedClusterPropertiesResponsePropertiesOutput) ToManagedClusterPropertiesResponsePropertiesPtrOutput() ManagedClusterPropertiesResponsePropertiesPtrOutput {
	return o.ToManagedClusterPropertiesResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o ManagedClusterPropertiesResponsePropertiesOutput) ToManagedClusterPropertiesResponsePropertiesPtrOutputWithContext(ctx context.Context) ManagedClusterPropertiesResponsePropertiesPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponseProperties) *ManagedClusterPropertiesResponseProperties {
		return &v
	}).(ManagedClusterPropertiesResponsePropertiesPtrOutput)
}

type ManagedClusterPropertiesResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterPropertiesResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterPropertiesResponseProperties)(nil)).Elem()
}

func (o ManagedClusterPropertiesResponsePropertiesPtrOutput) ToManagedClusterPropertiesResponsePropertiesPtrOutput() ManagedClusterPropertiesResponsePropertiesPtrOutput {
	return o
}

func (o ManagedClusterPropertiesResponsePropertiesPtrOutput) ToManagedClusterPropertiesResponsePropertiesPtrOutputWithContext(ctx context.Context) ManagedClusterPropertiesResponsePropertiesPtrOutput {
	return o
}

func (o ManagedClusterPropertiesResponsePropertiesPtrOutput) Elem() ManagedClusterPropertiesResponsePropertiesOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponseProperties) ManagedClusterPropertiesResponseProperties {
		return *v
	}).(ManagedClusterPropertiesResponsePropertiesOutput)
}

type ManagedClusterSKU struct {
	// Name of a managed cluster SKU.
	Name *string `pulumi:"name"`
	// Tier of a managed cluster SKU.
	Tier *string `pulumi:"tier"`
}

// ManagedClusterSKUInput is an input type that accepts ManagedClusterSKUArgs and ManagedClusterSKUOutput values.
// You can construct a concrete instance of `ManagedClusterSKUInput` via:
//
//          ManagedClusterSKUArgs{...}
type ManagedClusterSKUInput interface {
	pulumi.Input

	ToManagedClusterSKUOutput() ManagedClusterSKUOutput
	ToManagedClusterSKUOutputWithContext(context.Context) ManagedClusterSKUOutput
}

type ManagedClusterSKUArgs struct {
	// Name of a managed cluster SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tier of a managed cluster SKU.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (ManagedClusterSKUArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterSKU)(nil)).Elem()
}

func (i ManagedClusterSKUArgs) ToManagedClusterSKUOutput() ManagedClusterSKUOutput {
	return i.ToManagedClusterSKUOutputWithContext(context.Background())
}

func (i ManagedClusterSKUArgs) ToManagedClusterSKUOutputWithContext(ctx context.Context) ManagedClusterSKUOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterSKUOutput)
}

func (i ManagedClusterSKUArgs) ToManagedClusterSKUPtrOutput() ManagedClusterSKUPtrOutput {
	return i.ToManagedClusterSKUPtrOutputWithContext(context.Background())
}

func (i ManagedClusterSKUArgs) ToManagedClusterSKUPtrOutputWithContext(ctx context.Context) ManagedClusterSKUPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterSKUOutput).ToManagedClusterSKUPtrOutputWithContext(ctx)
}

// ManagedClusterSKUPtrInput is an input type that accepts ManagedClusterSKUArgs, ManagedClusterSKUPtr and ManagedClusterSKUPtrOutput values.
// You can construct a concrete instance of `ManagedClusterSKUPtrInput` via:
//
//          ManagedClusterSKUArgs{...}
//
//  or:
//
//          nil
type ManagedClusterSKUPtrInput interface {
	pulumi.Input

	ToManagedClusterSKUPtrOutput() ManagedClusterSKUPtrOutput
	ToManagedClusterSKUPtrOutputWithContext(context.Context) ManagedClusterSKUPtrOutput
}

type managedClusterSKUPtrType ManagedClusterSKUArgs

func ManagedClusterSKUPtr(v *ManagedClusterSKUArgs) ManagedClusterSKUPtrInput {
	return (*managedClusterSKUPtrType)(v)
}

func (*managedClusterSKUPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterSKU)(nil)).Elem()
}

func (i *managedClusterSKUPtrType) ToManagedClusterSKUPtrOutput() ManagedClusterSKUPtrOutput {
	return i.ToManagedClusterSKUPtrOutputWithContext(context.Background())
}

func (i *managedClusterSKUPtrType) ToManagedClusterSKUPtrOutputWithContext(ctx context.Context) ManagedClusterSKUPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterSKUPtrOutput)
}

type ManagedClusterSKUOutput struct{ *pulumi.OutputState }

func (ManagedClusterSKUOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterSKU)(nil)).Elem()
}

func (o ManagedClusterSKUOutput) ToManagedClusterSKUOutput() ManagedClusterSKUOutput {
	return o
}

func (o ManagedClusterSKUOutput) ToManagedClusterSKUOutputWithContext(ctx context.Context) ManagedClusterSKUOutput {
	return o
}

func (o ManagedClusterSKUOutput) ToManagedClusterSKUPtrOutput() ManagedClusterSKUPtrOutput {
	return o.ToManagedClusterSKUPtrOutputWithContext(context.Background())
}

func (o ManagedClusterSKUOutput) ToManagedClusterSKUPtrOutputWithContext(ctx context.Context) ManagedClusterSKUPtrOutput {
	return o.ApplyT(func(v ManagedClusterSKU) *ManagedClusterSKU {
		return &v
	}).(ManagedClusterSKUPtrOutput)
}

// Name of a managed cluster SKU.
func (o ManagedClusterSKUOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterSKU) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tier of a managed cluster SKU.
func (o ManagedClusterSKUOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterSKU) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type ManagedClusterSKUPtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterSKUPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterSKU)(nil)).Elem()
}

func (o ManagedClusterSKUPtrOutput) ToManagedClusterSKUPtrOutput() ManagedClusterSKUPtrOutput {
	return o
}

func (o ManagedClusterSKUPtrOutput) ToManagedClusterSKUPtrOutputWithContext(ctx context.Context) ManagedClusterSKUPtrOutput {
	return o
}

func (o ManagedClusterSKUPtrOutput) Elem() ManagedClusterSKUOutput {
	return o.ApplyT(func(v *ManagedClusterSKU) ManagedClusterSKU { return *v }).(ManagedClusterSKUOutput)
}

// Name of a managed cluster SKU.
func (o ManagedClusterSKUPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterSKU) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Tier of a managed cluster SKU.
func (o ManagedClusterSKUPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterSKU) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

type ManagedClusterSKUResponse struct {
	// Name of a managed cluster SKU.
	Name *string `pulumi:"name"`
	// Tier of a managed cluster SKU.
	Tier *string `pulumi:"tier"`
}

// ManagedClusterSKUResponseInput is an input type that accepts ManagedClusterSKUResponseArgs and ManagedClusterSKUResponseOutput values.
// You can construct a concrete instance of `ManagedClusterSKUResponseInput` via:
//
//          ManagedClusterSKUResponseArgs{...}
type ManagedClusterSKUResponseInput interface {
	pulumi.Input

	ToManagedClusterSKUResponseOutput() ManagedClusterSKUResponseOutput
	ToManagedClusterSKUResponseOutputWithContext(context.Context) ManagedClusterSKUResponseOutput
}

type ManagedClusterSKUResponseArgs struct {
	// Name of a managed cluster SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tier of a managed cluster SKU.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (ManagedClusterSKUResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterSKUResponse)(nil)).Elem()
}

func (i ManagedClusterSKUResponseArgs) ToManagedClusterSKUResponseOutput() ManagedClusterSKUResponseOutput {
	return i.ToManagedClusterSKUResponseOutputWithContext(context.Background())
}

func (i ManagedClusterSKUResponseArgs) ToManagedClusterSKUResponseOutputWithContext(ctx context.Context) ManagedClusterSKUResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterSKUResponseOutput)
}

func (i ManagedClusterSKUResponseArgs) ToManagedClusterSKUResponsePtrOutput() ManagedClusterSKUResponsePtrOutput {
	return i.ToManagedClusterSKUResponsePtrOutputWithContext(context.Background())
}

func (i ManagedClusterSKUResponseArgs) ToManagedClusterSKUResponsePtrOutputWithContext(ctx context.Context) ManagedClusterSKUResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterSKUResponseOutput).ToManagedClusterSKUResponsePtrOutputWithContext(ctx)
}

// ManagedClusterSKUResponsePtrInput is an input type that accepts ManagedClusterSKUResponseArgs, ManagedClusterSKUResponsePtr and ManagedClusterSKUResponsePtrOutput values.
// You can construct a concrete instance of `ManagedClusterSKUResponsePtrInput` via:
//
//          ManagedClusterSKUResponseArgs{...}
//
//  or:
//
//          nil
type ManagedClusterSKUResponsePtrInput interface {
	pulumi.Input

	ToManagedClusterSKUResponsePtrOutput() ManagedClusterSKUResponsePtrOutput
	ToManagedClusterSKUResponsePtrOutputWithContext(context.Context) ManagedClusterSKUResponsePtrOutput
}

type managedClusterSKUResponsePtrType ManagedClusterSKUResponseArgs

func ManagedClusterSKUResponsePtr(v *ManagedClusterSKUResponseArgs) ManagedClusterSKUResponsePtrInput {
	return (*managedClusterSKUResponsePtrType)(v)
}

func (*managedClusterSKUResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterSKUResponse)(nil)).Elem()
}

func (i *managedClusterSKUResponsePtrType) ToManagedClusterSKUResponsePtrOutput() ManagedClusterSKUResponsePtrOutput {
	return i.ToManagedClusterSKUResponsePtrOutputWithContext(context.Background())
}

func (i *managedClusterSKUResponsePtrType) ToManagedClusterSKUResponsePtrOutputWithContext(ctx context.Context) ManagedClusterSKUResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterSKUResponsePtrOutput)
}

type ManagedClusterSKUResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterSKUResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterSKUResponse)(nil)).Elem()
}

func (o ManagedClusterSKUResponseOutput) ToManagedClusterSKUResponseOutput() ManagedClusterSKUResponseOutput {
	return o
}

func (o ManagedClusterSKUResponseOutput) ToManagedClusterSKUResponseOutputWithContext(ctx context.Context) ManagedClusterSKUResponseOutput {
	return o
}

func (o ManagedClusterSKUResponseOutput) ToManagedClusterSKUResponsePtrOutput() ManagedClusterSKUResponsePtrOutput {
	return o.ToManagedClusterSKUResponsePtrOutputWithContext(context.Background())
}

func (o ManagedClusterSKUResponseOutput) ToManagedClusterSKUResponsePtrOutputWithContext(ctx context.Context) ManagedClusterSKUResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterSKUResponse) *ManagedClusterSKUResponse {
		return &v
	}).(ManagedClusterSKUResponsePtrOutput)
}

// Name of a managed cluster SKU.
func (o ManagedClusterSKUResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterSKUResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tier of a managed cluster SKU.
func (o ManagedClusterSKUResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterSKUResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type ManagedClusterSKUResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterSKUResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterSKUResponse)(nil)).Elem()
}

func (o ManagedClusterSKUResponsePtrOutput) ToManagedClusterSKUResponsePtrOutput() ManagedClusterSKUResponsePtrOutput {
	return o
}

func (o ManagedClusterSKUResponsePtrOutput) ToManagedClusterSKUResponsePtrOutputWithContext(ctx context.Context) ManagedClusterSKUResponsePtrOutput {
	return o
}

func (o ManagedClusterSKUResponsePtrOutput) Elem() ManagedClusterSKUResponseOutput {
	return o.ApplyT(func(v *ManagedClusterSKUResponse) ManagedClusterSKUResponse { return *v }).(ManagedClusterSKUResponseOutput)
}

// Name of a managed cluster SKU.
func (o ManagedClusterSKUResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterSKUResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Tier of a managed cluster SKU.
func (o ManagedClusterSKUResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterSKUResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Information about a service principal identity for the cluster to use for manipulating Azure APIs.
type ManagedClusterServicePrincipalProfile struct {
	// The ID for the service principal.
	ClientId string `pulumi:"clientId"`
	// The secret password associated with the service principal in plain text.
	Secret *string `pulumi:"secret"`
}

// ManagedClusterServicePrincipalProfileInput is an input type that accepts ManagedClusterServicePrincipalProfileArgs and ManagedClusterServicePrincipalProfileOutput values.
// You can construct a concrete instance of `ManagedClusterServicePrincipalProfileInput` via:
//
//          ManagedClusterServicePrincipalProfileArgs{...}
type ManagedClusterServicePrincipalProfileInput interface {
	pulumi.Input

	ToManagedClusterServicePrincipalProfileOutput() ManagedClusterServicePrincipalProfileOutput
	ToManagedClusterServicePrincipalProfileOutputWithContext(context.Context) ManagedClusterServicePrincipalProfileOutput
}

// Information about a service principal identity for the cluster to use for manipulating Azure APIs.
type ManagedClusterServicePrincipalProfileArgs struct {
	// The ID for the service principal.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The secret password associated with the service principal in plain text.
	Secret pulumi.StringPtrInput `pulumi:"secret"`
}

func (ManagedClusterServicePrincipalProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterServicePrincipalProfile)(nil)).Elem()
}

func (i ManagedClusterServicePrincipalProfileArgs) ToManagedClusterServicePrincipalProfileOutput() ManagedClusterServicePrincipalProfileOutput {
	return i.ToManagedClusterServicePrincipalProfileOutputWithContext(context.Background())
}

func (i ManagedClusterServicePrincipalProfileArgs) ToManagedClusterServicePrincipalProfileOutputWithContext(ctx context.Context) ManagedClusterServicePrincipalProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterServicePrincipalProfileOutput)
}

func (i ManagedClusterServicePrincipalProfileArgs) ToManagedClusterServicePrincipalProfilePtrOutput() ManagedClusterServicePrincipalProfilePtrOutput {
	return i.ToManagedClusterServicePrincipalProfilePtrOutputWithContext(context.Background())
}

func (i ManagedClusterServicePrincipalProfileArgs) ToManagedClusterServicePrincipalProfilePtrOutputWithContext(ctx context.Context) ManagedClusterServicePrincipalProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterServicePrincipalProfileOutput).ToManagedClusterServicePrincipalProfilePtrOutputWithContext(ctx)
}

// ManagedClusterServicePrincipalProfilePtrInput is an input type that accepts ManagedClusterServicePrincipalProfileArgs, ManagedClusterServicePrincipalProfilePtr and ManagedClusterServicePrincipalProfilePtrOutput values.
// You can construct a concrete instance of `ManagedClusterServicePrincipalProfilePtrInput` via:
//
//          ManagedClusterServicePrincipalProfileArgs{...}
//
//  or:
//
//          nil
type ManagedClusterServicePrincipalProfilePtrInput interface {
	pulumi.Input

	ToManagedClusterServicePrincipalProfilePtrOutput() ManagedClusterServicePrincipalProfilePtrOutput
	ToManagedClusterServicePrincipalProfilePtrOutputWithContext(context.Context) ManagedClusterServicePrincipalProfilePtrOutput
}

type managedClusterServicePrincipalProfilePtrType ManagedClusterServicePrincipalProfileArgs

func ManagedClusterServicePrincipalProfilePtr(v *ManagedClusterServicePrincipalProfileArgs) ManagedClusterServicePrincipalProfilePtrInput {
	return (*managedClusterServicePrincipalProfilePtrType)(v)
}

func (*managedClusterServicePrincipalProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterServicePrincipalProfile)(nil)).Elem()
}

func (i *managedClusterServicePrincipalProfilePtrType) ToManagedClusterServicePrincipalProfilePtrOutput() ManagedClusterServicePrincipalProfilePtrOutput {
	return i.ToManagedClusterServicePrincipalProfilePtrOutputWithContext(context.Background())
}

func (i *managedClusterServicePrincipalProfilePtrType) ToManagedClusterServicePrincipalProfilePtrOutputWithContext(ctx context.Context) ManagedClusterServicePrincipalProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterServicePrincipalProfilePtrOutput)
}

// Information about a service principal identity for the cluster to use for manipulating Azure APIs.
type ManagedClusterServicePrincipalProfileOutput struct{ *pulumi.OutputState }

func (ManagedClusterServicePrincipalProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterServicePrincipalProfile)(nil)).Elem()
}

func (o ManagedClusterServicePrincipalProfileOutput) ToManagedClusterServicePrincipalProfileOutput() ManagedClusterServicePrincipalProfileOutput {
	return o
}

func (o ManagedClusterServicePrincipalProfileOutput) ToManagedClusterServicePrincipalProfileOutputWithContext(ctx context.Context) ManagedClusterServicePrincipalProfileOutput {
	return o
}

func (o ManagedClusterServicePrincipalProfileOutput) ToManagedClusterServicePrincipalProfilePtrOutput() ManagedClusterServicePrincipalProfilePtrOutput {
	return o.ToManagedClusterServicePrincipalProfilePtrOutputWithContext(context.Background())
}

func (o ManagedClusterServicePrincipalProfileOutput) ToManagedClusterServicePrincipalProfilePtrOutputWithContext(ctx context.Context) ManagedClusterServicePrincipalProfilePtrOutput {
	return o.ApplyT(func(v ManagedClusterServicePrincipalProfile) *ManagedClusterServicePrincipalProfile {
		return &v
	}).(ManagedClusterServicePrincipalProfilePtrOutput)
}

// The ID for the service principal.
func (o ManagedClusterServicePrincipalProfileOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterServicePrincipalProfile) string { return v.ClientId }).(pulumi.StringOutput)
}

// The secret password associated with the service principal in plain text.
func (o ManagedClusterServicePrincipalProfileOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterServicePrincipalProfile) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

type ManagedClusterServicePrincipalProfilePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterServicePrincipalProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterServicePrincipalProfile)(nil)).Elem()
}

func (o ManagedClusterServicePrincipalProfilePtrOutput) ToManagedClusterServicePrincipalProfilePtrOutput() ManagedClusterServicePrincipalProfilePtrOutput {
	return o
}

func (o ManagedClusterServicePrincipalProfilePtrOutput) ToManagedClusterServicePrincipalProfilePtrOutputWithContext(ctx context.Context) ManagedClusterServicePrincipalProfilePtrOutput {
	return o
}

func (o ManagedClusterServicePrincipalProfilePtrOutput) Elem() ManagedClusterServicePrincipalProfileOutput {
	return o.ApplyT(func(v *ManagedClusterServicePrincipalProfile) ManagedClusterServicePrincipalProfile { return *v }).(ManagedClusterServicePrincipalProfileOutput)
}

// The ID for the service principal.
func (o ManagedClusterServicePrincipalProfilePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterServicePrincipalProfile) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The secret password associated with the service principal in plain text.
func (o ManagedClusterServicePrincipalProfilePtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterServicePrincipalProfile) *string {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(pulumi.StringPtrOutput)
}

// Information about a service principal identity for the cluster to use for manipulating Azure APIs.
type ManagedClusterServicePrincipalProfileResponse struct {
	// The ID for the service principal.
	ClientId string `pulumi:"clientId"`
	// The secret password associated with the service principal in plain text.
	Secret *string `pulumi:"secret"`
}

// ManagedClusterServicePrincipalProfileResponseInput is an input type that accepts ManagedClusterServicePrincipalProfileResponseArgs and ManagedClusterServicePrincipalProfileResponseOutput values.
// You can construct a concrete instance of `ManagedClusterServicePrincipalProfileResponseInput` via:
//
//          ManagedClusterServicePrincipalProfileResponseArgs{...}
type ManagedClusterServicePrincipalProfileResponseInput interface {
	pulumi.Input

	ToManagedClusterServicePrincipalProfileResponseOutput() ManagedClusterServicePrincipalProfileResponseOutput
	ToManagedClusterServicePrincipalProfileResponseOutputWithContext(context.Context) ManagedClusterServicePrincipalProfileResponseOutput
}

// Information about a service principal identity for the cluster to use for manipulating Azure APIs.
type ManagedClusterServicePrincipalProfileResponseArgs struct {
	// The ID for the service principal.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The secret password associated with the service principal in plain text.
	Secret pulumi.StringPtrInput `pulumi:"secret"`
}

func (ManagedClusterServicePrincipalProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterServicePrincipalProfileResponse)(nil)).Elem()
}

func (i ManagedClusterServicePrincipalProfileResponseArgs) ToManagedClusterServicePrincipalProfileResponseOutput() ManagedClusterServicePrincipalProfileResponseOutput {
	return i.ToManagedClusterServicePrincipalProfileResponseOutputWithContext(context.Background())
}

func (i ManagedClusterServicePrincipalProfileResponseArgs) ToManagedClusterServicePrincipalProfileResponseOutputWithContext(ctx context.Context) ManagedClusterServicePrincipalProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterServicePrincipalProfileResponseOutput)
}

func (i ManagedClusterServicePrincipalProfileResponseArgs) ToManagedClusterServicePrincipalProfileResponsePtrOutput() ManagedClusterServicePrincipalProfileResponsePtrOutput {
	return i.ToManagedClusterServicePrincipalProfileResponsePtrOutputWithContext(context.Background())
}

func (i ManagedClusterServicePrincipalProfileResponseArgs) ToManagedClusterServicePrincipalProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterServicePrincipalProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterServicePrincipalProfileResponseOutput).ToManagedClusterServicePrincipalProfileResponsePtrOutputWithContext(ctx)
}

// ManagedClusterServicePrincipalProfileResponsePtrInput is an input type that accepts ManagedClusterServicePrincipalProfileResponseArgs, ManagedClusterServicePrincipalProfileResponsePtr and ManagedClusterServicePrincipalProfileResponsePtrOutput values.
// You can construct a concrete instance of `ManagedClusterServicePrincipalProfileResponsePtrInput` via:
//
//          ManagedClusterServicePrincipalProfileResponseArgs{...}
//
//  or:
//
//          nil
type ManagedClusterServicePrincipalProfileResponsePtrInput interface {
	pulumi.Input

	ToManagedClusterServicePrincipalProfileResponsePtrOutput() ManagedClusterServicePrincipalProfileResponsePtrOutput
	ToManagedClusterServicePrincipalProfileResponsePtrOutputWithContext(context.Context) ManagedClusterServicePrincipalProfileResponsePtrOutput
}

type managedClusterServicePrincipalProfileResponsePtrType ManagedClusterServicePrincipalProfileResponseArgs

func ManagedClusterServicePrincipalProfileResponsePtr(v *ManagedClusterServicePrincipalProfileResponseArgs) ManagedClusterServicePrincipalProfileResponsePtrInput {
	return (*managedClusterServicePrincipalProfileResponsePtrType)(v)
}

func (*managedClusterServicePrincipalProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterServicePrincipalProfileResponse)(nil)).Elem()
}

func (i *managedClusterServicePrincipalProfileResponsePtrType) ToManagedClusterServicePrincipalProfileResponsePtrOutput() ManagedClusterServicePrincipalProfileResponsePtrOutput {
	return i.ToManagedClusterServicePrincipalProfileResponsePtrOutputWithContext(context.Background())
}

func (i *managedClusterServicePrincipalProfileResponsePtrType) ToManagedClusterServicePrincipalProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterServicePrincipalProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterServicePrincipalProfileResponsePtrOutput)
}

// Information about a service principal identity for the cluster to use for manipulating Azure APIs.
type ManagedClusterServicePrincipalProfileResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterServicePrincipalProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterServicePrincipalProfileResponse)(nil)).Elem()
}

func (o ManagedClusterServicePrincipalProfileResponseOutput) ToManagedClusterServicePrincipalProfileResponseOutput() ManagedClusterServicePrincipalProfileResponseOutput {
	return o
}

func (o ManagedClusterServicePrincipalProfileResponseOutput) ToManagedClusterServicePrincipalProfileResponseOutputWithContext(ctx context.Context) ManagedClusterServicePrincipalProfileResponseOutput {
	return o
}

func (o ManagedClusterServicePrincipalProfileResponseOutput) ToManagedClusterServicePrincipalProfileResponsePtrOutput() ManagedClusterServicePrincipalProfileResponsePtrOutput {
	return o.ToManagedClusterServicePrincipalProfileResponsePtrOutputWithContext(context.Background())
}

func (o ManagedClusterServicePrincipalProfileResponseOutput) ToManagedClusterServicePrincipalProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterServicePrincipalProfileResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterServicePrincipalProfileResponse) *ManagedClusterServicePrincipalProfileResponse {
		return &v
	}).(ManagedClusterServicePrincipalProfileResponsePtrOutput)
}

// The ID for the service principal.
func (o ManagedClusterServicePrincipalProfileResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterServicePrincipalProfileResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// The secret password associated with the service principal in plain text.
func (o ManagedClusterServicePrincipalProfileResponseOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterServicePrincipalProfileResponse) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

type ManagedClusterServicePrincipalProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterServicePrincipalProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterServicePrincipalProfileResponse)(nil)).Elem()
}

func (o ManagedClusterServicePrincipalProfileResponsePtrOutput) ToManagedClusterServicePrincipalProfileResponsePtrOutput() ManagedClusterServicePrincipalProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterServicePrincipalProfileResponsePtrOutput) ToManagedClusterServicePrincipalProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterServicePrincipalProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterServicePrincipalProfileResponsePtrOutput) Elem() ManagedClusterServicePrincipalProfileResponseOutput {
	return o.ApplyT(func(v *ManagedClusterServicePrincipalProfileResponse) ManagedClusterServicePrincipalProfileResponse {
		return *v
	}).(ManagedClusterServicePrincipalProfileResponseOutput)
}

// The ID for the service principal.
func (o ManagedClusterServicePrincipalProfileResponsePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterServicePrincipalProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The secret password associated with the service principal in plain text.
func (o ManagedClusterServicePrincipalProfileResponsePtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterServicePrincipalProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(pulumi.StringPtrOutput)
}

// Profile for Windows VMs in the container service cluster.
type ManagedClusterWindowsProfile struct {
	// The administrator password to use for Windows VMs.
	AdminPassword *string `pulumi:"adminPassword"`
	// The administrator username to use for Windows VMs.
	AdminUsername string `pulumi:"adminUsername"`
}

// ManagedClusterWindowsProfileInput is an input type that accepts ManagedClusterWindowsProfileArgs and ManagedClusterWindowsProfileOutput values.
// You can construct a concrete instance of `ManagedClusterWindowsProfileInput` via:
//
//          ManagedClusterWindowsProfileArgs{...}
type ManagedClusterWindowsProfileInput interface {
	pulumi.Input

	ToManagedClusterWindowsProfileOutput() ManagedClusterWindowsProfileOutput
	ToManagedClusterWindowsProfileOutputWithContext(context.Context) ManagedClusterWindowsProfileOutput
}

// Profile for Windows VMs in the container service cluster.
type ManagedClusterWindowsProfileArgs struct {
	// The administrator password to use for Windows VMs.
	AdminPassword pulumi.StringPtrInput `pulumi:"adminPassword"`
	// The administrator username to use for Windows VMs.
	AdminUsername pulumi.StringInput `pulumi:"adminUsername"`
}

func (ManagedClusterWindowsProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterWindowsProfile)(nil)).Elem()
}

func (i ManagedClusterWindowsProfileArgs) ToManagedClusterWindowsProfileOutput() ManagedClusterWindowsProfileOutput {
	return i.ToManagedClusterWindowsProfileOutputWithContext(context.Background())
}

func (i ManagedClusterWindowsProfileArgs) ToManagedClusterWindowsProfileOutputWithContext(ctx context.Context) ManagedClusterWindowsProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterWindowsProfileOutput)
}

func (i ManagedClusterWindowsProfileArgs) ToManagedClusterWindowsProfilePtrOutput() ManagedClusterWindowsProfilePtrOutput {
	return i.ToManagedClusterWindowsProfilePtrOutputWithContext(context.Background())
}

func (i ManagedClusterWindowsProfileArgs) ToManagedClusterWindowsProfilePtrOutputWithContext(ctx context.Context) ManagedClusterWindowsProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterWindowsProfileOutput).ToManagedClusterWindowsProfilePtrOutputWithContext(ctx)
}

// ManagedClusterWindowsProfilePtrInput is an input type that accepts ManagedClusterWindowsProfileArgs, ManagedClusterWindowsProfilePtr and ManagedClusterWindowsProfilePtrOutput values.
// You can construct a concrete instance of `ManagedClusterWindowsProfilePtrInput` via:
//
//          ManagedClusterWindowsProfileArgs{...}
//
//  or:
//
//          nil
type ManagedClusterWindowsProfilePtrInput interface {
	pulumi.Input

	ToManagedClusterWindowsProfilePtrOutput() ManagedClusterWindowsProfilePtrOutput
	ToManagedClusterWindowsProfilePtrOutputWithContext(context.Context) ManagedClusterWindowsProfilePtrOutput
}

type managedClusterWindowsProfilePtrType ManagedClusterWindowsProfileArgs

func ManagedClusterWindowsProfilePtr(v *ManagedClusterWindowsProfileArgs) ManagedClusterWindowsProfilePtrInput {
	return (*managedClusterWindowsProfilePtrType)(v)
}

func (*managedClusterWindowsProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterWindowsProfile)(nil)).Elem()
}

func (i *managedClusterWindowsProfilePtrType) ToManagedClusterWindowsProfilePtrOutput() ManagedClusterWindowsProfilePtrOutput {
	return i.ToManagedClusterWindowsProfilePtrOutputWithContext(context.Background())
}

func (i *managedClusterWindowsProfilePtrType) ToManagedClusterWindowsProfilePtrOutputWithContext(ctx context.Context) ManagedClusterWindowsProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterWindowsProfilePtrOutput)
}

// Profile for Windows VMs in the container service cluster.
type ManagedClusterWindowsProfileOutput struct{ *pulumi.OutputState }

func (ManagedClusterWindowsProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterWindowsProfile)(nil)).Elem()
}

func (o ManagedClusterWindowsProfileOutput) ToManagedClusterWindowsProfileOutput() ManagedClusterWindowsProfileOutput {
	return o
}

func (o ManagedClusterWindowsProfileOutput) ToManagedClusterWindowsProfileOutputWithContext(ctx context.Context) ManagedClusterWindowsProfileOutput {
	return o
}

func (o ManagedClusterWindowsProfileOutput) ToManagedClusterWindowsProfilePtrOutput() ManagedClusterWindowsProfilePtrOutput {
	return o.ToManagedClusterWindowsProfilePtrOutputWithContext(context.Background())
}

func (o ManagedClusterWindowsProfileOutput) ToManagedClusterWindowsProfilePtrOutputWithContext(ctx context.Context) ManagedClusterWindowsProfilePtrOutput {
	return o.ApplyT(func(v ManagedClusterWindowsProfile) *ManagedClusterWindowsProfile {
		return &v
	}).(ManagedClusterWindowsProfilePtrOutput)
}

// The administrator password to use for Windows VMs.
func (o ManagedClusterWindowsProfileOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterWindowsProfile) *string { return v.AdminPassword }).(pulumi.StringPtrOutput)
}

// The administrator username to use for Windows VMs.
func (o ManagedClusterWindowsProfileOutput) AdminUsername() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterWindowsProfile) string { return v.AdminUsername }).(pulumi.StringOutput)
}

type ManagedClusterWindowsProfilePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterWindowsProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterWindowsProfile)(nil)).Elem()
}

func (o ManagedClusterWindowsProfilePtrOutput) ToManagedClusterWindowsProfilePtrOutput() ManagedClusterWindowsProfilePtrOutput {
	return o
}

func (o ManagedClusterWindowsProfilePtrOutput) ToManagedClusterWindowsProfilePtrOutputWithContext(ctx context.Context) ManagedClusterWindowsProfilePtrOutput {
	return o
}

func (o ManagedClusterWindowsProfilePtrOutput) Elem() ManagedClusterWindowsProfileOutput {
	return o.ApplyT(func(v *ManagedClusterWindowsProfile) ManagedClusterWindowsProfile { return *v }).(ManagedClusterWindowsProfileOutput)
}

// The administrator password to use for Windows VMs.
func (o ManagedClusterWindowsProfilePtrOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterWindowsProfile) *string {
		if v == nil {
			return nil
		}
		return v.AdminPassword
	}).(pulumi.StringPtrOutput)
}

// The administrator username to use for Windows VMs.
func (o ManagedClusterWindowsProfilePtrOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterWindowsProfile) *string {
		if v == nil {
			return nil
		}
		return &v.AdminUsername
	}).(pulumi.StringPtrOutput)
}

// Profile for Windows VMs in the container service cluster.
type ManagedClusterWindowsProfileResponse struct {
	// The administrator password to use for Windows VMs.
	AdminPassword *string `pulumi:"adminPassword"`
	// The administrator username to use for Windows VMs.
	AdminUsername string `pulumi:"adminUsername"`
}

// ManagedClusterWindowsProfileResponseInput is an input type that accepts ManagedClusterWindowsProfileResponseArgs and ManagedClusterWindowsProfileResponseOutput values.
// You can construct a concrete instance of `ManagedClusterWindowsProfileResponseInput` via:
//
//          ManagedClusterWindowsProfileResponseArgs{...}
type ManagedClusterWindowsProfileResponseInput interface {
	pulumi.Input

	ToManagedClusterWindowsProfileResponseOutput() ManagedClusterWindowsProfileResponseOutput
	ToManagedClusterWindowsProfileResponseOutputWithContext(context.Context) ManagedClusterWindowsProfileResponseOutput
}

// Profile for Windows VMs in the container service cluster.
type ManagedClusterWindowsProfileResponseArgs struct {
	// The administrator password to use for Windows VMs.
	AdminPassword pulumi.StringPtrInput `pulumi:"adminPassword"`
	// The administrator username to use for Windows VMs.
	AdminUsername pulumi.StringInput `pulumi:"adminUsername"`
}

func (ManagedClusterWindowsProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterWindowsProfileResponse)(nil)).Elem()
}

func (i ManagedClusterWindowsProfileResponseArgs) ToManagedClusterWindowsProfileResponseOutput() ManagedClusterWindowsProfileResponseOutput {
	return i.ToManagedClusterWindowsProfileResponseOutputWithContext(context.Background())
}

func (i ManagedClusterWindowsProfileResponseArgs) ToManagedClusterWindowsProfileResponseOutputWithContext(ctx context.Context) ManagedClusterWindowsProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterWindowsProfileResponseOutput)
}

func (i ManagedClusterWindowsProfileResponseArgs) ToManagedClusterWindowsProfileResponsePtrOutput() ManagedClusterWindowsProfileResponsePtrOutput {
	return i.ToManagedClusterWindowsProfileResponsePtrOutputWithContext(context.Background())
}

func (i ManagedClusterWindowsProfileResponseArgs) ToManagedClusterWindowsProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterWindowsProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterWindowsProfileResponseOutput).ToManagedClusterWindowsProfileResponsePtrOutputWithContext(ctx)
}

// ManagedClusterWindowsProfileResponsePtrInput is an input type that accepts ManagedClusterWindowsProfileResponseArgs, ManagedClusterWindowsProfileResponsePtr and ManagedClusterWindowsProfileResponsePtrOutput values.
// You can construct a concrete instance of `ManagedClusterWindowsProfileResponsePtrInput` via:
//
//          ManagedClusterWindowsProfileResponseArgs{...}
//
//  or:
//
//          nil
type ManagedClusterWindowsProfileResponsePtrInput interface {
	pulumi.Input

	ToManagedClusterWindowsProfileResponsePtrOutput() ManagedClusterWindowsProfileResponsePtrOutput
	ToManagedClusterWindowsProfileResponsePtrOutputWithContext(context.Context) ManagedClusterWindowsProfileResponsePtrOutput
}

type managedClusterWindowsProfileResponsePtrType ManagedClusterWindowsProfileResponseArgs

func ManagedClusterWindowsProfileResponsePtr(v *ManagedClusterWindowsProfileResponseArgs) ManagedClusterWindowsProfileResponsePtrInput {
	return (*managedClusterWindowsProfileResponsePtrType)(v)
}

func (*managedClusterWindowsProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterWindowsProfileResponse)(nil)).Elem()
}

func (i *managedClusterWindowsProfileResponsePtrType) ToManagedClusterWindowsProfileResponsePtrOutput() ManagedClusterWindowsProfileResponsePtrOutput {
	return i.ToManagedClusterWindowsProfileResponsePtrOutputWithContext(context.Background())
}

func (i *managedClusterWindowsProfileResponsePtrType) ToManagedClusterWindowsProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterWindowsProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterWindowsProfileResponsePtrOutput)
}

// Profile for Windows VMs in the container service cluster.
type ManagedClusterWindowsProfileResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterWindowsProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterWindowsProfileResponse)(nil)).Elem()
}

func (o ManagedClusterWindowsProfileResponseOutput) ToManagedClusterWindowsProfileResponseOutput() ManagedClusterWindowsProfileResponseOutput {
	return o
}

func (o ManagedClusterWindowsProfileResponseOutput) ToManagedClusterWindowsProfileResponseOutputWithContext(ctx context.Context) ManagedClusterWindowsProfileResponseOutput {
	return o
}

func (o ManagedClusterWindowsProfileResponseOutput) ToManagedClusterWindowsProfileResponsePtrOutput() ManagedClusterWindowsProfileResponsePtrOutput {
	return o.ToManagedClusterWindowsProfileResponsePtrOutputWithContext(context.Background())
}

func (o ManagedClusterWindowsProfileResponseOutput) ToManagedClusterWindowsProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterWindowsProfileResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterWindowsProfileResponse) *ManagedClusterWindowsProfileResponse {
		return &v
	}).(ManagedClusterWindowsProfileResponsePtrOutput)
}

// The administrator password to use for Windows VMs.
func (o ManagedClusterWindowsProfileResponseOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterWindowsProfileResponse) *string { return v.AdminPassword }).(pulumi.StringPtrOutput)
}

// The administrator username to use for Windows VMs.
func (o ManagedClusterWindowsProfileResponseOutput) AdminUsername() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterWindowsProfileResponse) string { return v.AdminUsername }).(pulumi.StringOutput)
}

type ManagedClusterWindowsProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterWindowsProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterWindowsProfileResponse)(nil)).Elem()
}

func (o ManagedClusterWindowsProfileResponsePtrOutput) ToManagedClusterWindowsProfileResponsePtrOutput() ManagedClusterWindowsProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterWindowsProfileResponsePtrOutput) ToManagedClusterWindowsProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterWindowsProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterWindowsProfileResponsePtrOutput) Elem() ManagedClusterWindowsProfileResponseOutput {
	return o.ApplyT(func(v *ManagedClusterWindowsProfileResponse) ManagedClusterWindowsProfileResponse { return *v }).(ManagedClusterWindowsProfileResponseOutput)
}

// The administrator password to use for Windows VMs.
func (o ManagedClusterWindowsProfileResponsePtrOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterWindowsProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.AdminPassword
	}).(pulumi.StringPtrOutput)
}

// The administrator username to use for Windows VMs.
func (o ManagedClusterWindowsProfileResponsePtrOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterWindowsProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AdminUsername
	}).(pulumi.StringPtrOutput)
}

// Represents the OpenShift networking configuration
type NetworkProfile struct {
	// CIDR of the Vnet to peer.
	PeerVnetId *string `pulumi:"peerVnetId"`
	// CIDR for the OpenShift Vnet.
	VnetCidr *string `pulumi:"vnetCidr"`
	// ID of the Vnet created for OSA cluster.
	VnetId *string `pulumi:"vnetId"`
}

// NetworkProfileInput is an input type that accepts NetworkProfileArgs and NetworkProfileOutput values.
// You can construct a concrete instance of `NetworkProfileInput` via:
//
//          NetworkProfileArgs{...}
type NetworkProfileInput interface {
	pulumi.Input

	ToNetworkProfileOutput() NetworkProfileOutput
	ToNetworkProfileOutputWithContext(context.Context) NetworkProfileOutput
}

// Represents the OpenShift networking configuration
type NetworkProfileArgs struct {
	// CIDR of the Vnet to peer.
	PeerVnetId pulumi.StringPtrInput `pulumi:"peerVnetId"`
	// CIDR for the OpenShift Vnet.
	VnetCidr pulumi.StringPtrInput `pulumi:"vnetCidr"`
	// ID of the Vnet created for OSA cluster.
	VnetId pulumi.StringPtrInput `pulumi:"vnetId"`
}

func (NetworkProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkProfile)(nil)).Elem()
}

func (i NetworkProfileArgs) ToNetworkProfileOutput() NetworkProfileOutput {
	return i.ToNetworkProfileOutputWithContext(context.Background())
}

func (i NetworkProfileArgs) ToNetworkProfileOutputWithContext(ctx context.Context) NetworkProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfileOutput)
}

func (i NetworkProfileArgs) ToNetworkProfilePtrOutput() NetworkProfilePtrOutput {
	return i.ToNetworkProfilePtrOutputWithContext(context.Background())
}

func (i NetworkProfileArgs) ToNetworkProfilePtrOutputWithContext(ctx context.Context) NetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfileOutput).ToNetworkProfilePtrOutputWithContext(ctx)
}

// NetworkProfilePtrInput is an input type that accepts NetworkProfileArgs, NetworkProfilePtr and NetworkProfilePtrOutput values.
// You can construct a concrete instance of `NetworkProfilePtrInput` via:
//
//          NetworkProfileArgs{...}
//
//  or:
//
//          nil
type NetworkProfilePtrInput interface {
	pulumi.Input

	ToNetworkProfilePtrOutput() NetworkProfilePtrOutput
	ToNetworkProfilePtrOutputWithContext(context.Context) NetworkProfilePtrOutput
}

type networkProfilePtrType NetworkProfileArgs

func NetworkProfilePtr(v *NetworkProfileArgs) NetworkProfilePtrInput {
	return (*networkProfilePtrType)(v)
}

func (*networkProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkProfile)(nil)).Elem()
}

func (i *networkProfilePtrType) ToNetworkProfilePtrOutput() NetworkProfilePtrOutput {
	return i.ToNetworkProfilePtrOutputWithContext(context.Background())
}

func (i *networkProfilePtrType) ToNetworkProfilePtrOutputWithContext(ctx context.Context) NetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfilePtrOutput)
}

// Represents the OpenShift networking configuration
type NetworkProfileOutput struct{ *pulumi.OutputState }

func (NetworkProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkProfile)(nil)).Elem()
}

func (o NetworkProfileOutput) ToNetworkProfileOutput() NetworkProfileOutput {
	return o
}

func (o NetworkProfileOutput) ToNetworkProfileOutputWithContext(ctx context.Context) NetworkProfileOutput {
	return o
}

func (o NetworkProfileOutput) ToNetworkProfilePtrOutput() NetworkProfilePtrOutput {
	return o.ToNetworkProfilePtrOutputWithContext(context.Background())
}

func (o NetworkProfileOutput) ToNetworkProfilePtrOutputWithContext(ctx context.Context) NetworkProfilePtrOutput {
	return o.ApplyT(func(v NetworkProfile) *NetworkProfile {
		return &v
	}).(NetworkProfilePtrOutput)
}

// CIDR of the Vnet to peer.
func (o NetworkProfileOutput) PeerVnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkProfile) *string { return v.PeerVnetId }).(pulumi.StringPtrOutput)
}

// CIDR for the OpenShift Vnet.
func (o NetworkProfileOutput) VnetCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkProfile) *string { return v.VnetCidr }).(pulumi.StringPtrOutput)
}

// ID of the Vnet created for OSA cluster.
func (o NetworkProfileOutput) VnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkProfile) *string { return v.VnetId }).(pulumi.StringPtrOutput)
}

type NetworkProfilePtrOutput struct{ *pulumi.OutputState }

func (NetworkProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkProfile)(nil)).Elem()
}

func (o NetworkProfilePtrOutput) ToNetworkProfilePtrOutput() NetworkProfilePtrOutput {
	return o
}

func (o NetworkProfilePtrOutput) ToNetworkProfilePtrOutputWithContext(ctx context.Context) NetworkProfilePtrOutput {
	return o
}

func (o NetworkProfilePtrOutput) Elem() NetworkProfileOutput {
	return o.ApplyT(func(v *NetworkProfile) NetworkProfile { return *v }).(NetworkProfileOutput)
}

// CIDR of the Vnet to peer.
func (o NetworkProfilePtrOutput) PeerVnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.PeerVnetId
	}).(pulumi.StringPtrOutput)
}

// CIDR for the OpenShift Vnet.
func (o NetworkProfilePtrOutput) VnetCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.VnetCidr
	}).(pulumi.StringPtrOutput)
}

// ID of the Vnet created for OSA cluster.
func (o NetworkProfilePtrOutput) VnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.VnetId
	}).(pulumi.StringPtrOutput)
}

// Represents the OpenShift networking configuration
type NetworkProfileResponse struct {
	// CIDR of the Vnet to peer.
	PeerVnetId *string `pulumi:"peerVnetId"`
	// CIDR for the OpenShift Vnet.
	VnetCidr *string `pulumi:"vnetCidr"`
	// ID of the Vnet created for OSA cluster.
	VnetId *string `pulumi:"vnetId"`
}

// NetworkProfileResponseInput is an input type that accepts NetworkProfileResponseArgs and NetworkProfileResponseOutput values.
// You can construct a concrete instance of `NetworkProfileResponseInput` via:
//
//          NetworkProfileResponseArgs{...}
type NetworkProfileResponseInput interface {
	pulumi.Input

	ToNetworkProfileResponseOutput() NetworkProfileResponseOutput
	ToNetworkProfileResponseOutputWithContext(context.Context) NetworkProfileResponseOutput
}

// Represents the OpenShift networking configuration
type NetworkProfileResponseArgs struct {
	// CIDR of the Vnet to peer.
	PeerVnetId pulumi.StringPtrInput `pulumi:"peerVnetId"`
	// CIDR for the OpenShift Vnet.
	VnetCidr pulumi.StringPtrInput `pulumi:"vnetCidr"`
	// ID of the Vnet created for OSA cluster.
	VnetId pulumi.StringPtrInput `pulumi:"vnetId"`
}

func (NetworkProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkProfileResponse)(nil)).Elem()
}

func (i NetworkProfileResponseArgs) ToNetworkProfileResponseOutput() NetworkProfileResponseOutput {
	return i.ToNetworkProfileResponseOutputWithContext(context.Background())
}

func (i NetworkProfileResponseArgs) ToNetworkProfileResponseOutputWithContext(ctx context.Context) NetworkProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfileResponseOutput)
}

func (i NetworkProfileResponseArgs) ToNetworkProfileResponsePtrOutput() NetworkProfileResponsePtrOutput {
	return i.ToNetworkProfileResponsePtrOutputWithContext(context.Background())
}

func (i NetworkProfileResponseArgs) ToNetworkProfileResponsePtrOutputWithContext(ctx context.Context) NetworkProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfileResponseOutput).ToNetworkProfileResponsePtrOutputWithContext(ctx)
}

// NetworkProfileResponsePtrInput is an input type that accepts NetworkProfileResponseArgs, NetworkProfileResponsePtr and NetworkProfileResponsePtrOutput values.
// You can construct a concrete instance of `NetworkProfileResponsePtrInput` via:
//
//          NetworkProfileResponseArgs{...}
//
//  or:
//
//          nil
type NetworkProfileResponsePtrInput interface {
	pulumi.Input

	ToNetworkProfileResponsePtrOutput() NetworkProfileResponsePtrOutput
	ToNetworkProfileResponsePtrOutputWithContext(context.Context) NetworkProfileResponsePtrOutput
}

type networkProfileResponsePtrType NetworkProfileResponseArgs

func NetworkProfileResponsePtr(v *NetworkProfileResponseArgs) NetworkProfileResponsePtrInput {
	return (*networkProfileResponsePtrType)(v)
}

func (*networkProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkProfileResponse)(nil)).Elem()
}

func (i *networkProfileResponsePtrType) ToNetworkProfileResponsePtrOutput() NetworkProfileResponsePtrOutput {
	return i.ToNetworkProfileResponsePtrOutputWithContext(context.Background())
}

func (i *networkProfileResponsePtrType) ToNetworkProfileResponsePtrOutputWithContext(ctx context.Context) NetworkProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfileResponsePtrOutput)
}

// Represents the OpenShift networking configuration
type NetworkProfileResponseOutput struct{ *pulumi.OutputState }

func (NetworkProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkProfileResponse)(nil)).Elem()
}

func (o NetworkProfileResponseOutput) ToNetworkProfileResponseOutput() NetworkProfileResponseOutput {
	return o
}

func (o NetworkProfileResponseOutput) ToNetworkProfileResponseOutputWithContext(ctx context.Context) NetworkProfileResponseOutput {
	return o
}

func (o NetworkProfileResponseOutput) ToNetworkProfileResponsePtrOutput() NetworkProfileResponsePtrOutput {
	return o.ToNetworkProfileResponsePtrOutputWithContext(context.Background())
}

func (o NetworkProfileResponseOutput) ToNetworkProfileResponsePtrOutputWithContext(ctx context.Context) NetworkProfileResponsePtrOutput {
	return o.ApplyT(func(v NetworkProfileResponse) *NetworkProfileResponse {
		return &v
	}).(NetworkProfileResponsePtrOutput)
}

// CIDR of the Vnet to peer.
func (o NetworkProfileResponseOutput) PeerVnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkProfileResponse) *string { return v.PeerVnetId }).(pulumi.StringPtrOutput)
}

// CIDR for the OpenShift Vnet.
func (o NetworkProfileResponseOutput) VnetCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkProfileResponse) *string { return v.VnetCidr }).(pulumi.StringPtrOutput)
}

// ID of the Vnet created for OSA cluster.
func (o NetworkProfileResponseOutput) VnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkProfileResponse) *string { return v.VnetId }).(pulumi.StringPtrOutput)
}

type NetworkProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkProfileResponse)(nil)).Elem()
}

func (o NetworkProfileResponsePtrOutput) ToNetworkProfileResponsePtrOutput() NetworkProfileResponsePtrOutput {
	return o
}

func (o NetworkProfileResponsePtrOutput) ToNetworkProfileResponsePtrOutputWithContext(ctx context.Context) NetworkProfileResponsePtrOutput {
	return o
}

func (o NetworkProfileResponsePtrOutput) Elem() NetworkProfileResponseOutput {
	return o.ApplyT(func(v *NetworkProfileResponse) NetworkProfileResponse { return *v }).(NetworkProfileResponseOutput)
}

// CIDR of the Vnet to peer.
func (o NetworkProfileResponsePtrOutput) PeerVnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.PeerVnetId
	}).(pulumi.StringPtrOutput)
}

// CIDR for the OpenShift Vnet.
func (o NetworkProfileResponsePtrOutput) VnetCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.VnetCidr
	}).(pulumi.StringPtrOutput)
}

// ID of the Vnet created for OSA cluster.
func (o NetworkProfileResponsePtrOutput) VnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.VnetId
	}).(pulumi.StringPtrOutput)
}

// OpenShift Managed cluster.
type OpenShiftManagedClusterType struct {
	// Resource location
	Location string `pulumi:"location"`
	// Resource name
	Name string `pulumi:"name"`
	// Define the resource plan as required by ARM for billing purposes
	Plan *PurchasePlanResponse `pulumi:"plan"`
	// Properties of a OpenShift managed cluster.
	Properties OpenShiftManagedClusterPropertiesResponse `pulumi:"properties"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type string `pulumi:"type"`
}

// OpenShiftManagedClusterTypeInput is an input type that accepts OpenShiftManagedClusterTypeArgs and OpenShiftManagedClusterTypeOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterTypeInput` via:
//
//          OpenShiftManagedClusterTypeArgs{...}
type OpenShiftManagedClusterTypeInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterTypeOutput() OpenShiftManagedClusterTypeOutput
	ToOpenShiftManagedClusterTypeOutputWithContext(context.Context) OpenShiftManagedClusterTypeOutput
}

// OpenShift Managed cluster.
type OpenShiftManagedClusterTypeArgs struct {
	// Resource location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource name
	Name pulumi.StringInput `pulumi:"name"`
	// Define the resource plan as required by ARM for billing purposes
	Plan PurchasePlanResponsePtrInput `pulumi:"plan"`
	// Properties of a OpenShift managed cluster.
	Properties OpenShiftManagedClusterPropertiesResponseInput `pulumi:"properties"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringInput `pulumi:"type"`
}

func (OpenShiftManagedClusterTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterType)(nil)).Elem()
}

func (i OpenShiftManagedClusterTypeArgs) ToOpenShiftManagedClusterTypeOutput() OpenShiftManagedClusterTypeOutput {
	return i.ToOpenShiftManagedClusterTypeOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterTypeArgs) ToOpenShiftManagedClusterTypeOutputWithContext(ctx context.Context) OpenShiftManagedClusterTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterTypeOutput)
}

// OpenShift Managed cluster.
type OpenShiftManagedClusterTypeOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterType)(nil)).Elem()
}

func (o OpenShiftManagedClusterTypeOutput) ToOpenShiftManagedClusterTypeOutput() OpenShiftManagedClusterTypeOutput {
	return o
}

func (o OpenShiftManagedClusterTypeOutput) ToOpenShiftManagedClusterTypeOutputWithContext(ctx context.Context) OpenShiftManagedClusterTypeOutput {
	return o
}

// Resource location
func (o OpenShiftManagedClusterTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource name
func (o OpenShiftManagedClusterTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterType) string { return v.Name }).(pulumi.StringOutput)
}

// Define the resource plan as required by ARM for billing purposes
func (o OpenShiftManagedClusterTypeOutput) Plan() PurchasePlanResponsePtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterType) *PurchasePlanResponse { return v.Plan }).(PurchasePlanResponsePtrOutput)
}

// Properties of a OpenShift managed cluster.
func (o OpenShiftManagedClusterTypeOutput) Properties() OpenShiftManagedClusterPropertiesResponseOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterType) OpenShiftManagedClusterPropertiesResponse { return v.Properties }).(OpenShiftManagedClusterPropertiesResponseOutput)
}

// Resource tags
func (o OpenShiftManagedClusterTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o OpenShiftManagedClusterTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterType) string { return v.Type }).(pulumi.StringOutput)
}

// Defines the configuration of the OpenShift cluster VMs.
type OpenShiftManagedClusterAgentPoolProfile struct {
	// Number of agents (VMs) to host docker containers.
	Count int `pulumi:"count"`
	// Unique name of the pool profile in the context of the subscription and resource group.
	Name string `pulumi:"name"`
	// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
	OsType *string `pulumi:"osType"`
	// Define the role of the AgentPoolProfile.
	Role *string `pulumi:"role"`
	// Subnet CIDR for the peering.
	SubnetCidr *string `pulumi:"subnetCidr"`
	// Size of agent VMs.
	VmSize string `pulumi:"vmSize"`
}

// OpenShiftManagedClusterAgentPoolProfileInput is an input type that accepts OpenShiftManagedClusterAgentPoolProfileArgs and OpenShiftManagedClusterAgentPoolProfileOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterAgentPoolProfileInput` via:
//
//          OpenShiftManagedClusterAgentPoolProfileArgs{...}
type OpenShiftManagedClusterAgentPoolProfileInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterAgentPoolProfileOutput() OpenShiftManagedClusterAgentPoolProfileOutput
	ToOpenShiftManagedClusterAgentPoolProfileOutputWithContext(context.Context) OpenShiftManagedClusterAgentPoolProfileOutput
}

// Defines the configuration of the OpenShift cluster VMs.
type OpenShiftManagedClusterAgentPoolProfileArgs struct {
	// Number of agents (VMs) to host docker containers.
	Count pulumi.IntInput `pulumi:"count"`
	// Unique name of the pool profile in the context of the subscription and resource group.
	Name pulumi.StringInput `pulumi:"name"`
	// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// Define the role of the AgentPoolProfile.
	Role pulumi.StringPtrInput `pulumi:"role"`
	// Subnet CIDR for the peering.
	SubnetCidr pulumi.StringPtrInput `pulumi:"subnetCidr"`
	// Size of agent VMs.
	VmSize pulumi.StringInput `pulumi:"vmSize"`
}

func (OpenShiftManagedClusterAgentPoolProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterAgentPoolProfile)(nil)).Elem()
}

func (i OpenShiftManagedClusterAgentPoolProfileArgs) ToOpenShiftManagedClusterAgentPoolProfileOutput() OpenShiftManagedClusterAgentPoolProfileOutput {
	return i.ToOpenShiftManagedClusterAgentPoolProfileOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterAgentPoolProfileArgs) ToOpenShiftManagedClusterAgentPoolProfileOutputWithContext(ctx context.Context) OpenShiftManagedClusterAgentPoolProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterAgentPoolProfileOutput)
}

// OpenShiftManagedClusterAgentPoolProfileArrayInput is an input type that accepts OpenShiftManagedClusterAgentPoolProfileArray and OpenShiftManagedClusterAgentPoolProfileArrayOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterAgentPoolProfileArrayInput` via:
//
//          OpenShiftManagedClusterAgentPoolProfileArray{ OpenShiftManagedClusterAgentPoolProfileArgs{...} }
type OpenShiftManagedClusterAgentPoolProfileArrayInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterAgentPoolProfileArrayOutput() OpenShiftManagedClusterAgentPoolProfileArrayOutput
	ToOpenShiftManagedClusterAgentPoolProfileArrayOutputWithContext(context.Context) OpenShiftManagedClusterAgentPoolProfileArrayOutput
}

type OpenShiftManagedClusterAgentPoolProfileArray []OpenShiftManagedClusterAgentPoolProfileInput

func (OpenShiftManagedClusterAgentPoolProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OpenShiftManagedClusterAgentPoolProfile)(nil)).Elem()
}

func (i OpenShiftManagedClusterAgentPoolProfileArray) ToOpenShiftManagedClusterAgentPoolProfileArrayOutput() OpenShiftManagedClusterAgentPoolProfileArrayOutput {
	return i.ToOpenShiftManagedClusterAgentPoolProfileArrayOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterAgentPoolProfileArray) ToOpenShiftManagedClusterAgentPoolProfileArrayOutputWithContext(ctx context.Context) OpenShiftManagedClusterAgentPoolProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterAgentPoolProfileArrayOutput)
}

// Defines the configuration of the OpenShift cluster VMs.
type OpenShiftManagedClusterAgentPoolProfileOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterAgentPoolProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterAgentPoolProfile)(nil)).Elem()
}

func (o OpenShiftManagedClusterAgentPoolProfileOutput) ToOpenShiftManagedClusterAgentPoolProfileOutput() OpenShiftManagedClusterAgentPoolProfileOutput {
	return o
}

func (o OpenShiftManagedClusterAgentPoolProfileOutput) ToOpenShiftManagedClusterAgentPoolProfileOutputWithContext(ctx context.Context) OpenShiftManagedClusterAgentPoolProfileOutput {
	return o
}

// Number of agents (VMs) to host docker containers.
func (o OpenShiftManagedClusterAgentPoolProfileOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterAgentPoolProfile) int { return v.Count }).(pulumi.IntOutput)
}

// Unique name of the pool profile in the context of the subscription and resource group.
func (o OpenShiftManagedClusterAgentPoolProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterAgentPoolProfile) string { return v.Name }).(pulumi.StringOutput)
}

// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
func (o OpenShiftManagedClusterAgentPoolProfileOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterAgentPoolProfile) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// Define the role of the AgentPoolProfile.
func (o OpenShiftManagedClusterAgentPoolProfileOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterAgentPoolProfile) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// Subnet CIDR for the peering.
func (o OpenShiftManagedClusterAgentPoolProfileOutput) SubnetCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterAgentPoolProfile) *string { return v.SubnetCidr }).(pulumi.StringPtrOutput)
}

// Size of agent VMs.
func (o OpenShiftManagedClusterAgentPoolProfileOutput) VmSize() pulumi.StringOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterAgentPoolProfile) string { return v.VmSize }).(pulumi.StringOutput)
}

type OpenShiftManagedClusterAgentPoolProfileArrayOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterAgentPoolProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OpenShiftManagedClusterAgentPoolProfile)(nil)).Elem()
}

func (o OpenShiftManagedClusterAgentPoolProfileArrayOutput) ToOpenShiftManagedClusterAgentPoolProfileArrayOutput() OpenShiftManagedClusterAgentPoolProfileArrayOutput {
	return o
}

func (o OpenShiftManagedClusterAgentPoolProfileArrayOutput) ToOpenShiftManagedClusterAgentPoolProfileArrayOutputWithContext(ctx context.Context) OpenShiftManagedClusterAgentPoolProfileArrayOutput {
	return o
}

func (o OpenShiftManagedClusterAgentPoolProfileArrayOutput) Index(i pulumi.IntInput) OpenShiftManagedClusterAgentPoolProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OpenShiftManagedClusterAgentPoolProfile {
		return vs[0].([]OpenShiftManagedClusterAgentPoolProfile)[vs[1].(int)]
	}).(OpenShiftManagedClusterAgentPoolProfileOutput)
}

// Defines the configuration of the OpenShift cluster VMs.
type OpenShiftManagedClusterAgentPoolProfileResponse struct {
	// Number of agents (VMs) to host docker containers.
	Count int `pulumi:"count"`
	// Unique name of the pool profile in the context of the subscription and resource group.
	Name string `pulumi:"name"`
	// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
	OsType *string `pulumi:"osType"`
	// Define the role of the AgentPoolProfile.
	Role *string `pulumi:"role"`
	// Subnet CIDR for the peering.
	SubnetCidr *string `pulumi:"subnetCidr"`
	// Size of agent VMs.
	VmSize string `pulumi:"vmSize"`
}

// OpenShiftManagedClusterAgentPoolProfileResponseInput is an input type that accepts OpenShiftManagedClusterAgentPoolProfileResponseArgs and OpenShiftManagedClusterAgentPoolProfileResponseOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterAgentPoolProfileResponseInput` via:
//
//          OpenShiftManagedClusterAgentPoolProfileResponseArgs{...}
type OpenShiftManagedClusterAgentPoolProfileResponseInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterAgentPoolProfileResponseOutput() OpenShiftManagedClusterAgentPoolProfileResponseOutput
	ToOpenShiftManagedClusterAgentPoolProfileResponseOutputWithContext(context.Context) OpenShiftManagedClusterAgentPoolProfileResponseOutput
}

// Defines the configuration of the OpenShift cluster VMs.
type OpenShiftManagedClusterAgentPoolProfileResponseArgs struct {
	// Number of agents (VMs) to host docker containers.
	Count pulumi.IntInput `pulumi:"count"`
	// Unique name of the pool profile in the context of the subscription and resource group.
	Name pulumi.StringInput `pulumi:"name"`
	// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// Define the role of the AgentPoolProfile.
	Role pulumi.StringPtrInput `pulumi:"role"`
	// Subnet CIDR for the peering.
	SubnetCidr pulumi.StringPtrInput `pulumi:"subnetCidr"`
	// Size of agent VMs.
	VmSize pulumi.StringInput `pulumi:"vmSize"`
}

func (OpenShiftManagedClusterAgentPoolProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterAgentPoolProfileResponse)(nil)).Elem()
}

func (i OpenShiftManagedClusterAgentPoolProfileResponseArgs) ToOpenShiftManagedClusterAgentPoolProfileResponseOutput() OpenShiftManagedClusterAgentPoolProfileResponseOutput {
	return i.ToOpenShiftManagedClusterAgentPoolProfileResponseOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterAgentPoolProfileResponseArgs) ToOpenShiftManagedClusterAgentPoolProfileResponseOutputWithContext(ctx context.Context) OpenShiftManagedClusterAgentPoolProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterAgentPoolProfileResponseOutput)
}

// OpenShiftManagedClusterAgentPoolProfileResponseArrayInput is an input type that accepts OpenShiftManagedClusterAgentPoolProfileResponseArray and OpenShiftManagedClusterAgentPoolProfileResponseArrayOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterAgentPoolProfileResponseArrayInput` via:
//
//          OpenShiftManagedClusterAgentPoolProfileResponseArray{ OpenShiftManagedClusterAgentPoolProfileResponseArgs{...} }
type OpenShiftManagedClusterAgentPoolProfileResponseArrayInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterAgentPoolProfileResponseArrayOutput() OpenShiftManagedClusterAgentPoolProfileResponseArrayOutput
	ToOpenShiftManagedClusterAgentPoolProfileResponseArrayOutputWithContext(context.Context) OpenShiftManagedClusterAgentPoolProfileResponseArrayOutput
}

type OpenShiftManagedClusterAgentPoolProfileResponseArray []OpenShiftManagedClusterAgentPoolProfileResponseInput

func (OpenShiftManagedClusterAgentPoolProfileResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OpenShiftManagedClusterAgentPoolProfileResponse)(nil)).Elem()
}

func (i OpenShiftManagedClusterAgentPoolProfileResponseArray) ToOpenShiftManagedClusterAgentPoolProfileResponseArrayOutput() OpenShiftManagedClusterAgentPoolProfileResponseArrayOutput {
	return i.ToOpenShiftManagedClusterAgentPoolProfileResponseArrayOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterAgentPoolProfileResponseArray) ToOpenShiftManagedClusterAgentPoolProfileResponseArrayOutputWithContext(ctx context.Context) OpenShiftManagedClusterAgentPoolProfileResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterAgentPoolProfileResponseArrayOutput)
}

// Defines the configuration of the OpenShift cluster VMs.
type OpenShiftManagedClusterAgentPoolProfileResponseOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterAgentPoolProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterAgentPoolProfileResponse)(nil)).Elem()
}

func (o OpenShiftManagedClusterAgentPoolProfileResponseOutput) ToOpenShiftManagedClusterAgentPoolProfileResponseOutput() OpenShiftManagedClusterAgentPoolProfileResponseOutput {
	return o
}

func (o OpenShiftManagedClusterAgentPoolProfileResponseOutput) ToOpenShiftManagedClusterAgentPoolProfileResponseOutputWithContext(ctx context.Context) OpenShiftManagedClusterAgentPoolProfileResponseOutput {
	return o
}

// Number of agents (VMs) to host docker containers.
func (o OpenShiftManagedClusterAgentPoolProfileResponseOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterAgentPoolProfileResponse) int { return v.Count }).(pulumi.IntOutput)
}

// Unique name of the pool profile in the context of the subscription and resource group.
func (o OpenShiftManagedClusterAgentPoolProfileResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterAgentPoolProfileResponse) string { return v.Name }).(pulumi.StringOutput)
}

// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
func (o OpenShiftManagedClusterAgentPoolProfileResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterAgentPoolProfileResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// Define the role of the AgentPoolProfile.
func (o OpenShiftManagedClusterAgentPoolProfileResponseOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterAgentPoolProfileResponse) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// Subnet CIDR for the peering.
func (o OpenShiftManagedClusterAgentPoolProfileResponseOutput) SubnetCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterAgentPoolProfileResponse) *string { return v.SubnetCidr }).(pulumi.StringPtrOutput)
}

// Size of agent VMs.
func (o OpenShiftManagedClusterAgentPoolProfileResponseOutput) VmSize() pulumi.StringOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterAgentPoolProfileResponse) string { return v.VmSize }).(pulumi.StringOutput)
}

type OpenShiftManagedClusterAgentPoolProfileResponseArrayOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterAgentPoolProfileResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OpenShiftManagedClusterAgentPoolProfileResponse)(nil)).Elem()
}

func (o OpenShiftManagedClusterAgentPoolProfileResponseArrayOutput) ToOpenShiftManagedClusterAgentPoolProfileResponseArrayOutput() OpenShiftManagedClusterAgentPoolProfileResponseArrayOutput {
	return o
}

func (o OpenShiftManagedClusterAgentPoolProfileResponseArrayOutput) ToOpenShiftManagedClusterAgentPoolProfileResponseArrayOutputWithContext(ctx context.Context) OpenShiftManagedClusterAgentPoolProfileResponseArrayOutput {
	return o
}

func (o OpenShiftManagedClusterAgentPoolProfileResponseArrayOutput) Index(i pulumi.IntInput) OpenShiftManagedClusterAgentPoolProfileResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OpenShiftManagedClusterAgentPoolProfileResponse {
		return vs[0].([]OpenShiftManagedClusterAgentPoolProfileResponse)[vs[1].(int)]
	}).(OpenShiftManagedClusterAgentPoolProfileResponseOutput)
}

// Defines all possible authentication profiles for the OpenShift cluster.
type OpenShiftManagedClusterAuthProfile struct {
	// Type of authentication profile to use.
	IdentityProviders []OpenShiftManagedClusterIdentityProvider `pulumi:"identityProviders"`
}

// OpenShiftManagedClusterAuthProfileInput is an input type that accepts OpenShiftManagedClusterAuthProfileArgs and OpenShiftManagedClusterAuthProfileOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterAuthProfileInput` via:
//
//          OpenShiftManagedClusterAuthProfileArgs{...}
type OpenShiftManagedClusterAuthProfileInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterAuthProfileOutput() OpenShiftManagedClusterAuthProfileOutput
	ToOpenShiftManagedClusterAuthProfileOutputWithContext(context.Context) OpenShiftManagedClusterAuthProfileOutput
}

// Defines all possible authentication profiles for the OpenShift cluster.
type OpenShiftManagedClusterAuthProfileArgs struct {
	// Type of authentication profile to use.
	IdentityProviders OpenShiftManagedClusterIdentityProviderArrayInput `pulumi:"identityProviders"`
}

func (OpenShiftManagedClusterAuthProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterAuthProfile)(nil)).Elem()
}

func (i OpenShiftManagedClusterAuthProfileArgs) ToOpenShiftManagedClusterAuthProfileOutput() OpenShiftManagedClusterAuthProfileOutput {
	return i.ToOpenShiftManagedClusterAuthProfileOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterAuthProfileArgs) ToOpenShiftManagedClusterAuthProfileOutputWithContext(ctx context.Context) OpenShiftManagedClusterAuthProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterAuthProfileOutput)
}

func (i OpenShiftManagedClusterAuthProfileArgs) ToOpenShiftManagedClusterAuthProfilePtrOutput() OpenShiftManagedClusterAuthProfilePtrOutput {
	return i.ToOpenShiftManagedClusterAuthProfilePtrOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterAuthProfileArgs) ToOpenShiftManagedClusterAuthProfilePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterAuthProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterAuthProfileOutput).ToOpenShiftManagedClusterAuthProfilePtrOutputWithContext(ctx)
}

// OpenShiftManagedClusterAuthProfilePtrInput is an input type that accepts OpenShiftManagedClusterAuthProfileArgs, OpenShiftManagedClusterAuthProfilePtr and OpenShiftManagedClusterAuthProfilePtrOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterAuthProfilePtrInput` via:
//
//          OpenShiftManagedClusterAuthProfileArgs{...}
//
//  or:
//
//          nil
type OpenShiftManagedClusterAuthProfilePtrInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterAuthProfilePtrOutput() OpenShiftManagedClusterAuthProfilePtrOutput
	ToOpenShiftManagedClusterAuthProfilePtrOutputWithContext(context.Context) OpenShiftManagedClusterAuthProfilePtrOutput
}

type openShiftManagedClusterAuthProfilePtrType OpenShiftManagedClusterAuthProfileArgs

func OpenShiftManagedClusterAuthProfilePtr(v *OpenShiftManagedClusterAuthProfileArgs) OpenShiftManagedClusterAuthProfilePtrInput {
	return (*openShiftManagedClusterAuthProfilePtrType)(v)
}

func (*openShiftManagedClusterAuthProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenShiftManagedClusterAuthProfile)(nil)).Elem()
}

func (i *openShiftManagedClusterAuthProfilePtrType) ToOpenShiftManagedClusterAuthProfilePtrOutput() OpenShiftManagedClusterAuthProfilePtrOutput {
	return i.ToOpenShiftManagedClusterAuthProfilePtrOutputWithContext(context.Background())
}

func (i *openShiftManagedClusterAuthProfilePtrType) ToOpenShiftManagedClusterAuthProfilePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterAuthProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterAuthProfilePtrOutput)
}

// Defines all possible authentication profiles for the OpenShift cluster.
type OpenShiftManagedClusterAuthProfileOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterAuthProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterAuthProfile)(nil)).Elem()
}

func (o OpenShiftManagedClusterAuthProfileOutput) ToOpenShiftManagedClusterAuthProfileOutput() OpenShiftManagedClusterAuthProfileOutput {
	return o
}

func (o OpenShiftManagedClusterAuthProfileOutput) ToOpenShiftManagedClusterAuthProfileOutputWithContext(ctx context.Context) OpenShiftManagedClusterAuthProfileOutput {
	return o
}

func (o OpenShiftManagedClusterAuthProfileOutput) ToOpenShiftManagedClusterAuthProfilePtrOutput() OpenShiftManagedClusterAuthProfilePtrOutput {
	return o.ToOpenShiftManagedClusterAuthProfilePtrOutputWithContext(context.Background())
}

func (o OpenShiftManagedClusterAuthProfileOutput) ToOpenShiftManagedClusterAuthProfilePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterAuthProfilePtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterAuthProfile) *OpenShiftManagedClusterAuthProfile {
		return &v
	}).(OpenShiftManagedClusterAuthProfilePtrOutput)
}

// Type of authentication profile to use.
func (o OpenShiftManagedClusterAuthProfileOutput) IdentityProviders() OpenShiftManagedClusterIdentityProviderArrayOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterAuthProfile) []OpenShiftManagedClusterIdentityProvider {
		return v.IdentityProviders
	}).(OpenShiftManagedClusterIdentityProviderArrayOutput)
}

type OpenShiftManagedClusterAuthProfilePtrOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterAuthProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenShiftManagedClusterAuthProfile)(nil)).Elem()
}

func (o OpenShiftManagedClusterAuthProfilePtrOutput) ToOpenShiftManagedClusterAuthProfilePtrOutput() OpenShiftManagedClusterAuthProfilePtrOutput {
	return o
}

func (o OpenShiftManagedClusterAuthProfilePtrOutput) ToOpenShiftManagedClusterAuthProfilePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterAuthProfilePtrOutput {
	return o
}

func (o OpenShiftManagedClusterAuthProfilePtrOutput) Elem() OpenShiftManagedClusterAuthProfileOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterAuthProfile) OpenShiftManagedClusterAuthProfile { return *v }).(OpenShiftManagedClusterAuthProfileOutput)
}

// Type of authentication profile to use.
func (o OpenShiftManagedClusterAuthProfilePtrOutput) IdentityProviders() OpenShiftManagedClusterIdentityProviderArrayOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterAuthProfile) []OpenShiftManagedClusterIdentityProvider {
		if v == nil {
			return nil
		}
		return v.IdentityProviders
	}).(OpenShiftManagedClusterIdentityProviderArrayOutput)
}

// Defines all possible authentication profiles for the OpenShift cluster.
type OpenShiftManagedClusterAuthProfileResponse struct {
	// Type of authentication profile to use.
	IdentityProviders []OpenShiftManagedClusterIdentityProviderResponse `pulumi:"identityProviders"`
}

// OpenShiftManagedClusterAuthProfileResponseInput is an input type that accepts OpenShiftManagedClusterAuthProfileResponseArgs and OpenShiftManagedClusterAuthProfileResponseOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterAuthProfileResponseInput` via:
//
//          OpenShiftManagedClusterAuthProfileResponseArgs{...}
type OpenShiftManagedClusterAuthProfileResponseInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterAuthProfileResponseOutput() OpenShiftManagedClusterAuthProfileResponseOutput
	ToOpenShiftManagedClusterAuthProfileResponseOutputWithContext(context.Context) OpenShiftManagedClusterAuthProfileResponseOutput
}

// Defines all possible authentication profiles for the OpenShift cluster.
type OpenShiftManagedClusterAuthProfileResponseArgs struct {
	// Type of authentication profile to use.
	IdentityProviders OpenShiftManagedClusterIdentityProviderResponseArrayInput `pulumi:"identityProviders"`
}

func (OpenShiftManagedClusterAuthProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterAuthProfileResponse)(nil)).Elem()
}

func (i OpenShiftManagedClusterAuthProfileResponseArgs) ToOpenShiftManagedClusterAuthProfileResponseOutput() OpenShiftManagedClusterAuthProfileResponseOutput {
	return i.ToOpenShiftManagedClusterAuthProfileResponseOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterAuthProfileResponseArgs) ToOpenShiftManagedClusterAuthProfileResponseOutputWithContext(ctx context.Context) OpenShiftManagedClusterAuthProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterAuthProfileResponseOutput)
}

func (i OpenShiftManagedClusterAuthProfileResponseArgs) ToOpenShiftManagedClusterAuthProfileResponsePtrOutput() OpenShiftManagedClusterAuthProfileResponsePtrOutput {
	return i.ToOpenShiftManagedClusterAuthProfileResponsePtrOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterAuthProfileResponseArgs) ToOpenShiftManagedClusterAuthProfileResponsePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterAuthProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterAuthProfileResponseOutput).ToOpenShiftManagedClusterAuthProfileResponsePtrOutputWithContext(ctx)
}

// OpenShiftManagedClusterAuthProfileResponsePtrInput is an input type that accepts OpenShiftManagedClusterAuthProfileResponseArgs, OpenShiftManagedClusterAuthProfileResponsePtr and OpenShiftManagedClusterAuthProfileResponsePtrOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterAuthProfileResponsePtrInput` via:
//
//          OpenShiftManagedClusterAuthProfileResponseArgs{...}
//
//  or:
//
//          nil
type OpenShiftManagedClusterAuthProfileResponsePtrInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterAuthProfileResponsePtrOutput() OpenShiftManagedClusterAuthProfileResponsePtrOutput
	ToOpenShiftManagedClusterAuthProfileResponsePtrOutputWithContext(context.Context) OpenShiftManagedClusterAuthProfileResponsePtrOutput
}

type openShiftManagedClusterAuthProfileResponsePtrType OpenShiftManagedClusterAuthProfileResponseArgs

func OpenShiftManagedClusterAuthProfileResponsePtr(v *OpenShiftManagedClusterAuthProfileResponseArgs) OpenShiftManagedClusterAuthProfileResponsePtrInput {
	return (*openShiftManagedClusterAuthProfileResponsePtrType)(v)
}

func (*openShiftManagedClusterAuthProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenShiftManagedClusterAuthProfileResponse)(nil)).Elem()
}

func (i *openShiftManagedClusterAuthProfileResponsePtrType) ToOpenShiftManagedClusterAuthProfileResponsePtrOutput() OpenShiftManagedClusterAuthProfileResponsePtrOutput {
	return i.ToOpenShiftManagedClusterAuthProfileResponsePtrOutputWithContext(context.Background())
}

func (i *openShiftManagedClusterAuthProfileResponsePtrType) ToOpenShiftManagedClusterAuthProfileResponsePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterAuthProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterAuthProfileResponsePtrOutput)
}

// Defines all possible authentication profiles for the OpenShift cluster.
type OpenShiftManagedClusterAuthProfileResponseOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterAuthProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterAuthProfileResponse)(nil)).Elem()
}

func (o OpenShiftManagedClusterAuthProfileResponseOutput) ToOpenShiftManagedClusterAuthProfileResponseOutput() OpenShiftManagedClusterAuthProfileResponseOutput {
	return o
}

func (o OpenShiftManagedClusterAuthProfileResponseOutput) ToOpenShiftManagedClusterAuthProfileResponseOutputWithContext(ctx context.Context) OpenShiftManagedClusterAuthProfileResponseOutput {
	return o
}

func (o OpenShiftManagedClusterAuthProfileResponseOutput) ToOpenShiftManagedClusterAuthProfileResponsePtrOutput() OpenShiftManagedClusterAuthProfileResponsePtrOutput {
	return o.ToOpenShiftManagedClusterAuthProfileResponsePtrOutputWithContext(context.Background())
}

func (o OpenShiftManagedClusterAuthProfileResponseOutput) ToOpenShiftManagedClusterAuthProfileResponsePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterAuthProfileResponsePtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterAuthProfileResponse) *OpenShiftManagedClusterAuthProfileResponse {
		return &v
	}).(OpenShiftManagedClusterAuthProfileResponsePtrOutput)
}

// Type of authentication profile to use.
func (o OpenShiftManagedClusterAuthProfileResponseOutput) IdentityProviders() OpenShiftManagedClusterIdentityProviderResponseArrayOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterAuthProfileResponse) []OpenShiftManagedClusterIdentityProviderResponse {
		return v.IdentityProviders
	}).(OpenShiftManagedClusterIdentityProviderResponseArrayOutput)
}

type OpenShiftManagedClusterAuthProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterAuthProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenShiftManagedClusterAuthProfileResponse)(nil)).Elem()
}

func (o OpenShiftManagedClusterAuthProfileResponsePtrOutput) ToOpenShiftManagedClusterAuthProfileResponsePtrOutput() OpenShiftManagedClusterAuthProfileResponsePtrOutput {
	return o
}

func (o OpenShiftManagedClusterAuthProfileResponsePtrOutput) ToOpenShiftManagedClusterAuthProfileResponsePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterAuthProfileResponsePtrOutput {
	return o
}

func (o OpenShiftManagedClusterAuthProfileResponsePtrOutput) Elem() OpenShiftManagedClusterAuthProfileResponseOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterAuthProfileResponse) OpenShiftManagedClusterAuthProfileResponse {
		return *v
	}).(OpenShiftManagedClusterAuthProfileResponseOutput)
}

// Type of authentication profile to use.
func (o OpenShiftManagedClusterAuthProfileResponsePtrOutput) IdentityProviders() OpenShiftManagedClusterIdentityProviderResponseArrayOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterAuthProfileResponse) []OpenShiftManagedClusterIdentityProviderResponse {
		if v == nil {
			return nil
		}
		return v.IdentityProviders
	}).(OpenShiftManagedClusterIdentityProviderResponseArrayOutput)
}

// Structure for any Identity provider.
type OpenShiftManagedClusterBaseIdentityProvider struct {
	// The kind of the provider.
	Kind string `pulumi:"kind"`
}

// OpenShiftManagedClusterBaseIdentityProviderInput is an input type that accepts OpenShiftManagedClusterBaseIdentityProviderArgs and OpenShiftManagedClusterBaseIdentityProviderOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterBaseIdentityProviderInput` via:
//
//          OpenShiftManagedClusterBaseIdentityProviderArgs{...}
type OpenShiftManagedClusterBaseIdentityProviderInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterBaseIdentityProviderOutput() OpenShiftManagedClusterBaseIdentityProviderOutput
	ToOpenShiftManagedClusterBaseIdentityProviderOutputWithContext(context.Context) OpenShiftManagedClusterBaseIdentityProviderOutput
}

// Structure for any Identity provider.
type OpenShiftManagedClusterBaseIdentityProviderArgs struct {
	// The kind of the provider.
	Kind pulumi.StringInput `pulumi:"kind"`
}

func (OpenShiftManagedClusterBaseIdentityProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterBaseIdentityProvider)(nil)).Elem()
}

func (i OpenShiftManagedClusterBaseIdentityProviderArgs) ToOpenShiftManagedClusterBaseIdentityProviderOutput() OpenShiftManagedClusterBaseIdentityProviderOutput {
	return i.ToOpenShiftManagedClusterBaseIdentityProviderOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterBaseIdentityProviderArgs) ToOpenShiftManagedClusterBaseIdentityProviderOutputWithContext(ctx context.Context) OpenShiftManagedClusterBaseIdentityProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterBaseIdentityProviderOutput)
}

func (i OpenShiftManagedClusterBaseIdentityProviderArgs) ToOpenShiftManagedClusterBaseIdentityProviderPtrOutput() OpenShiftManagedClusterBaseIdentityProviderPtrOutput {
	return i.ToOpenShiftManagedClusterBaseIdentityProviderPtrOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterBaseIdentityProviderArgs) ToOpenShiftManagedClusterBaseIdentityProviderPtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterBaseIdentityProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterBaseIdentityProviderOutput).ToOpenShiftManagedClusterBaseIdentityProviderPtrOutputWithContext(ctx)
}

// OpenShiftManagedClusterBaseIdentityProviderPtrInput is an input type that accepts OpenShiftManagedClusterBaseIdentityProviderArgs, OpenShiftManagedClusterBaseIdentityProviderPtr and OpenShiftManagedClusterBaseIdentityProviderPtrOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterBaseIdentityProviderPtrInput` via:
//
//          OpenShiftManagedClusterBaseIdentityProviderArgs{...}
//
//  or:
//
//          nil
type OpenShiftManagedClusterBaseIdentityProviderPtrInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterBaseIdentityProviderPtrOutput() OpenShiftManagedClusterBaseIdentityProviderPtrOutput
	ToOpenShiftManagedClusterBaseIdentityProviderPtrOutputWithContext(context.Context) OpenShiftManagedClusterBaseIdentityProviderPtrOutput
}

type openShiftManagedClusterBaseIdentityProviderPtrType OpenShiftManagedClusterBaseIdentityProviderArgs

func OpenShiftManagedClusterBaseIdentityProviderPtr(v *OpenShiftManagedClusterBaseIdentityProviderArgs) OpenShiftManagedClusterBaseIdentityProviderPtrInput {
	return (*openShiftManagedClusterBaseIdentityProviderPtrType)(v)
}

func (*openShiftManagedClusterBaseIdentityProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenShiftManagedClusterBaseIdentityProvider)(nil)).Elem()
}

func (i *openShiftManagedClusterBaseIdentityProviderPtrType) ToOpenShiftManagedClusterBaseIdentityProviderPtrOutput() OpenShiftManagedClusterBaseIdentityProviderPtrOutput {
	return i.ToOpenShiftManagedClusterBaseIdentityProviderPtrOutputWithContext(context.Background())
}

func (i *openShiftManagedClusterBaseIdentityProviderPtrType) ToOpenShiftManagedClusterBaseIdentityProviderPtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterBaseIdentityProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterBaseIdentityProviderPtrOutput)
}

// Structure for any Identity provider.
type OpenShiftManagedClusterBaseIdentityProviderOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterBaseIdentityProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterBaseIdentityProvider)(nil)).Elem()
}

func (o OpenShiftManagedClusterBaseIdentityProviderOutput) ToOpenShiftManagedClusterBaseIdentityProviderOutput() OpenShiftManagedClusterBaseIdentityProviderOutput {
	return o
}

func (o OpenShiftManagedClusterBaseIdentityProviderOutput) ToOpenShiftManagedClusterBaseIdentityProviderOutputWithContext(ctx context.Context) OpenShiftManagedClusterBaseIdentityProviderOutput {
	return o
}

func (o OpenShiftManagedClusterBaseIdentityProviderOutput) ToOpenShiftManagedClusterBaseIdentityProviderPtrOutput() OpenShiftManagedClusterBaseIdentityProviderPtrOutput {
	return o.ToOpenShiftManagedClusterBaseIdentityProviderPtrOutputWithContext(context.Background())
}

func (o OpenShiftManagedClusterBaseIdentityProviderOutput) ToOpenShiftManagedClusterBaseIdentityProviderPtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterBaseIdentityProviderPtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterBaseIdentityProvider) *OpenShiftManagedClusterBaseIdentityProvider {
		return &v
	}).(OpenShiftManagedClusterBaseIdentityProviderPtrOutput)
}

// The kind of the provider.
func (o OpenShiftManagedClusterBaseIdentityProviderOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterBaseIdentityProvider) string { return v.Kind }).(pulumi.StringOutput)
}

type OpenShiftManagedClusterBaseIdentityProviderPtrOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterBaseIdentityProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenShiftManagedClusterBaseIdentityProvider)(nil)).Elem()
}

func (o OpenShiftManagedClusterBaseIdentityProviderPtrOutput) ToOpenShiftManagedClusterBaseIdentityProviderPtrOutput() OpenShiftManagedClusterBaseIdentityProviderPtrOutput {
	return o
}

func (o OpenShiftManagedClusterBaseIdentityProviderPtrOutput) ToOpenShiftManagedClusterBaseIdentityProviderPtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterBaseIdentityProviderPtrOutput {
	return o
}

func (o OpenShiftManagedClusterBaseIdentityProviderPtrOutput) Elem() OpenShiftManagedClusterBaseIdentityProviderOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterBaseIdentityProvider) OpenShiftManagedClusterBaseIdentityProvider {
		return *v
	}).(OpenShiftManagedClusterBaseIdentityProviderOutput)
}

// The kind of the provider.
func (o OpenShiftManagedClusterBaseIdentityProviderPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterBaseIdentityProvider) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// Structure for any Identity provider.
type OpenShiftManagedClusterBaseIdentityProviderResponse struct {
	// The kind of the provider.
	Kind string `pulumi:"kind"`
}

// OpenShiftManagedClusterBaseIdentityProviderResponseInput is an input type that accepts OpenShiftManagedClusterBaseIdentityProviderResponseArgs and OpenShiftManagedClusterBaseIdentityProviderResponseOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterBaseIdentityProviderResponseInput` via:
//
//          OpenShiftManagedClusterBaseIdentityProviderResponseArgs{...}
type OpenShiftManagedClusterBaseIdentityProviderResponseInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterBaseIdentityProviderResponseOutput() OpenShiftManagedClusterBaseIdentityProviderResponseOutput
	ToOpenShiftManagedClusterBaseIdentityProviderResponseOutputWithContext(context.Context) OpenShiftManagedClusterBaseIdentityProviderResponseOutput
}

// Structure for any Identity provider.
type OpenShiftManagedClusterBaseIdentityProviderResponseArgs struct {
	// The kind of the provider.
	Kind pulumi.StringInput `pulumi:"kind"`
}

func (OpenShiftManagedClusterBaseIdentityProviderResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterBaseIdentityProviderResponse)(nil)).Elem()
}

func (i OpenShiftManagedClusterBaseIdentityProviderResponseArgs) ToOpenShiftManagedClusterBaseIdentityProviderResponseOutput() OpenShiftManagedClusterBaseIdentityProviderResponseOutput {
	return i.ToOpenShiftManagedClusterBaseIdentityProviderResponseOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterBaseIdentityProviderResponseArgs) ToOpenShiftManagedClusterBaseIdentityProviderResponseOutputWithContext(ctx context.Context) OpenShiftManagedClusterBaseIdentityProviderResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterBaseIdentityProviderResponseOutput)
}

func (i OpenShiftManagedClusterBaseIdentityProviderResponseArgs) ToOpenShiftManagedClusterBaseIdentityProviderResponsePtrOutput() OpenShiftManagedClusterBaseIdentityProviderResponsePtrOutput {
	return i.ToOpenShiftManagedClusterBaseIdentityProviderResponsePtrOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterBaseIdentityProviderResponseArgs) ToOpenShiftManagedClusterBaseIdentityProviderResponsePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterBaseIdentityProviderResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterBaseIdentityProviderResponseOutput).ToOpenShiftManagedClusterBaseIdentityProviderResponsePtrOutputWithContext(ctx)
}

// OpenShiftManagedClusterBaseIdentityProviderResponsePtrInput is an input type that accepts OpenShiftManagedClusterBaseIdentityProviderResponseArgs, OpenShiftManagedClusterBaseIdentityProviderResponsePtr and OpenShiftManagedClusterBaseIdentityProviderResponsePtrOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterBaseIdentityProviderResponsePtrInput` via:
//
//          OpenShiftManagedClusterBaseIdentityProviderResponseArgs{...}
//
//  or:
//
//          nil
type OpenShiftManagedClusterBaseIdentityProviderResponsePtrInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterBaseIdentityProviderResponsePtrOutput() OpenShiftManagedClusterBaseIdentityProviderResponsePtrOutput
	ToOpenShiftManagedClusterBaseIdentityProviderResponsePtrOutputWithContext(context.Context) OpenShiftManagedClusterBaseIdentityProviderResponsePtrOutput
}

type openShiftManagedClusterBaseIdentityProviderResponsePtrType OpenShiftManagedClusterBaseIdentityProviderResponseArgs

func OpenShiftManagedClusterBaseIdentityProviderResponsePtr(v *OpenShiftManagedClusterBaseIdentityProviderResponseArgs) OpenShiftManagedClusterBaseIdentityProviderResponsePtrInput {
	return (*openShiftManagedClusterBaseIdentityProviderResponsePtrType)(v)
}

func (*openShiftManagedClusterBaseIdentityProviderResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenShiftManagedClusterBaseIdentityProviderResponse)(nil)).Elem()
}

func (i *openShiftManagedClusterBaseIdentityProviderResponsePtrType) ToOpenShiftManagedClusterBaseIdentityProviderResponsePtrOutput() OpenShiftManagedClusterBaseIdentityProviderResponsePtrOutput {
	return i.ToOpenShiftManagedClusterBaseIdentityProviderResponsePtrOutputWithContext(context.Background())
}

func (i *openShiftManagedClusterBaseIdentityProviderResponsePtrType) ToOpenShiftManagedClusterBaseIdentityProviderResponsePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterBaseIdentityProviderResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterBaseIdentityProviderResponsePtrOutput)
}

// Structure for any Identity provider.
type OpenShiftManagedClusterBaseIdentityProviderResponseOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterBaseIdentityProviderResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterBaseIdentityProviderResponse)(nil)).Elem()
}

func (o OpenShiftManagedClusterBaseIdentityProviderResponseOutput) ToOpenShiftManagedClusterBaseIdentityProviderResponseOutput() OpenShiftManagedClusterBaseIdentityProviderResponseOutput {
	return o
}

func (o OpenShiftManagedClusterBaseIdentityProviderResponseOutput) ToOpenShiftManagedClusterBaseIdentityProviderResponseOutputWithContext(ctx context.Context) OpenShiftManagedClusterBaseIdentityProviderResponseOutput {
	return o
}

func (o OpenShiftManagedClusterBaseIdentityProviderResponseOutput) ToOpenShiftManagedClusterBaseIdentityProviderResponsePtrOutput() OpenShiftManagedClusterBaseIdentityProviderResponsePtrOutput {
	return o.ToOpenShiftManagedClusterBaseIdentityProviderResponsePtrOutputWithContext(context.Background())
}

func (o OpenShiftManagedClusterBaseIdentityProviderResponseOutput) ToOpenShiftManagedClusterBaseIdentityProviderResponsePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterBaseIdentityProviderResponsePtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterBaseIdentityProviderResponse) *OpenShiftManagedClusterBaseIdentityProviderResponse {
		return &v
	}).(OpenShiftManagedClusterBaseIdentityProviderResponsePtrOutput)
}

// The kind of the provider.
func (o OpenShiftManagedClusterBaseIdentityProviderResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterBaseIdentityProviderResponse) string { return v.Kind }).(pulumi.StringOutput)
}

type OpenShiftManagedClusterBaseIdentityProviderResponsePtrOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterBaseIdentityProviderResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenShiftManagedClusterBaseIdentityProviderResponse)(nil)).Elem()
}

func (o OpenShiftManagedClusterBaseIdentityProviderResponsePtrOutput) ToOpenShiftManagedClusterBaseIdentityProviderResponsePtrOutput() OpenShiftManagedClusterBaseIdentityProviderResponsePtrOutput {
	return o
}

func (o OpenShiftManagedClusterBaseIdentityProviderResponsePtrOutput) ToOpenShiftManagedClusterBaseIdentityProviderResponsePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterBaseIdentityProviderResponsePtrOutput {
	return o
}

func (o OpenShiftManagedClusterBaseIdentityProviderResponsePtrOutput) Elem() OpenShiftManagedClusterBaseIdentityProviderResponseOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterBaseIdentityProviderResponse) OpenShiftManagedClusterBaseIdentityProviderResponse {
		return *v
	}).(OpenShiftManagedClusterBaseIdentityProviderResponseOutput)
}

// The kind of the provider.
func (o OpenShiftManagedClusterBaseIdentityProviderResponsePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterBaseIdentityProviderResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// Defines the configuration of the identity providers to be used in the OpenShift cluster.
type OpenShiftManagedClusterIdentityProvider struct {
	// Name of the provider.
	Name *string `pulumi:"name"`
	// Configuration of the provider.
	Provider *OpenShiftManagedClusterBaseIdentityProvider `pulumi:"provider"`
}

// OpenShiftManagedClusterIdentityProviderInput is an input type that accepts OpenShiftManagedClusterIdentityProviderArgs and OpenShiftManagedClusterIdentityProviderOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterIdentityProviderInput` via:
//
//          OpenShiftManagedClusterIdentityProviderArgs{...}
type OpenShiftManagedClusterIdentityProviderInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterIdentityProviderOutput() OpenShiftManagedClusterIdentityProviderOutput
	ToOpenShiftManagedClusterIdentityProviderOutputWithContext(context.Context) OpenShiftManagedClusterIdentityProviderOutput
}

// Defines the configuration of the identity providers to be used in the OpenShift cluster.
type OpenShiftManagedClusterIdentityProviderArgs struct {
	// Name of the provider.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Configuration of the provider.
	Provider OpenShiftManagedClusterBaseIdentityProviderPtrInput `pulumi:"provider"`
}

func (OpenShiftManagedClusterIdentityProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterIdentityProvider)(nil)).Elem()
}

func (i OpenShiftManagedClusterIdentityProviderArgs) ToOpenShiftManagedClusterIdentityProviderOutput() OpenShiftManagedClusterIdentityProviderOutput {
	return i.ToOpenShiftManagedClusterIdentityProviderOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterIdentityProviderArgs) ToOpenShiftManagedClusterIdentityProviderOutputWithContext(ctx context.Context) OpenShiftManagedClusterIdentityProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterIdentityProviderOutput)
}

// OpenShiftManagedClusterIdentityProviderArrayInput is an input type that accepts OpenShiftManagedClusterIdentityProviderArray and OpenShiftManagedClusterIdentityProviderArrayOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterIdentityProviderArrayInput` via:
//
//          OpenShiftManagedClusterIdentityProviderArray{ OpenShiftManagedClusterIdentityProviderArgs{...} }
type OpenShiftManagedClusterIdentityProviderArrayInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterIdentityProviderArrayOutput() OpenShiftManagedClusterIdentityProviderArrayOutput
	ToOpenShiftManagedClusterIdentityProviderArrayOutputWithContext(context.Context) OpenShiftManagedClusterIdentityProviderArrayOutput
}

type OpenShiftManagedClusterIdentityProviderArray []OpenShiftManagedClusterIdentityProviderInput

func (OpenShiftManagedClusterIdentityProviderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OpenShiftManagedClusterIdentityProvider)(nil)).Elem()
}

func (i OpenShiftManagedClusterIdentityProviderArray) ToOpenShiftManagedClusterIdentityProviderArrayOutput() OpenShiftManagedClusterIdentityProviderArrayOutput {
	return i.ToOpenShiftManagedClusterIdentityProviderArrayOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterIdentityProviderArray) ToOpenShiftManagedClusterIdentityProviderArrayOutputWithContext(ctx context.Context) OpenShiftManagedClusterIdentityProviderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterIdentityProviderArrayOutput)
}

// Defines the configuration of the identity providers to be used in the OpenShift cluster.
type OpenShiftManagedClusterIdentityProviderOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterIdentityProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterIdentityProvider)(nil)).Elem()
}

func (o OpenShiftManagedClusterIdentityProviderOutput) ToOpenShiftManagedClusterIdentityProviderOutput() OpenShiftManagedClusterIdentityProviderOutput {
	return o
}

func (o OpenShiftManagedClusterIdentityProviderOutput) ToOpenShiftManagedClusterIdentityProviderOutputWithContext(ctx context.Context) OpenShiftManagedClusterIdentityProviderOutput {
	return o
}

// Name of the provider.
func (o OpenShiftManagedClusterIdentityProviderOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterIdentityProvider) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Configuration of the provider.
func (o OpenShiftManagedClusterIdentityProviderOutput) Provider() OpenShiftManagedClusterBaseIdentityProviderPtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterIdentityProvider) *OpenShiftManagedClusterBaseIdentityProvider {
		return v.Provider
	}).(OpenShiftManagedClusterBaseIdentityProviderPtrOutput)
}

type OpenShiftManagedClusterIdentityProviderArrayOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterIdentityProviderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OpenShiftManagedClusterIdentityProvider)(nil)).Elem()
}

func (o OpenShiftManagedClusterIdentityProviderArrayOutput) ToOpenShiftManagedClusterIdentityProviderArrayOutput() OpenShiftManagedClusterIdentityProviderArrayOutput {
	return o
}

func (o OpenShiftManagedClusterIdentityProviderArrayOutput) ToOpenShiftManagedClusterIdentityProviderArrayOutputWithContext(ctx context.Context) OpenShiftManagedClusterIdentityProviderArrayOutput {
	return o
}

func (o OpenShiftManagedClusterIdentityProviderArrayOutput) Index(i pulumi.IntInput) OpenShiftManagedClusterIdentityProviderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OpenShiftManagedClusterIdentityProvider {
		return vs[0].([]OpenShiftManagedClusterIdentityProvider)[vs[1].(int)]
	}).(OpenShiftManagedClusterIdentityProviderOutput)
}

// Defines the configuration of the identity providers to be used in the OpenShift cluster.
type OpenShiftManagedClusterIdentityProviderResponse struct {
	// Name of the provider.
	Name *string `pulumi:"name"`
	// Configuration of the provider.
	Provider *OpenShiftManagedClusterBaseIdentityProviderResponse `pulumi:"provider"`
}

// OpenShiftManagedClusterIdentityProviderResponseInput is an input type that accepts OpenShiftManagedClusterIdentityProviderResponseArgs and OpenShiftManagedClusterIdentityProviderResponseOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterIdentityProviderResponseInput` via:
//
//          OpenShiftManagedClusterIdentityProviderResponseArgs{...}
type OpenShiftManagedClusterIdentityProviderResponseInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterIdentityProviderResponseOutput() OpenShiftManagedClusterIdentityProviderResponseOutput
	ToOpenShiftManagedClusterIdentityProviderResponseOutputWithContext(context.Context) OpenShiftManagedClusterIdentityProviderResponseOutput
}

// Defines the configuration of the identity providers to be used in the OpenShift cluster.
type OpenShiftManagedClusterIdentityProviderResponseArgs struct {
	// Name of the provider.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Configuration of the provider.
	Provider OpenShiftManagedClusterBaseIdentityProviderResponsePtrInput `pulumi:"provider"`
}

func (OpenShiftManagedClusterIdentityProviderResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterIdentityProviderResponse)(nil)).Elem()
}

func (i OpenShiftManagedClusterIdentityProviderResponseArgs) ToOpenShiftManagedClusterIdentityProviderResponseOutput() OpenShiftManagedClusterIdentityProviderResponseOutput {
	return i.ToOpenShiftManagedClusterIdentityProviderResponseOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterIdentityProviderResponseArgs) ToOpenShiftManagedClusterIdentityProviderResponseOutputWithContext(ctx context.Context) OpenShiftManagedClusterIdentityProviderResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterIdentityProviderResponseOutput)
}

// OpenShiftManagedClusterIdentityProviderResponseArrayInput is an input type that accepts OpenShiftManagedClusterIdentityProviderResponseArray and OpenShiftManagedClusterIdentityProviderResponseArrayOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterIdentityProviderResponseArrayInput` via:
//
//          OpenShiftManagedClusterIdentityProviderResponseArray{ OpenShiftManagedClusterIdentityProviderResponseArgs{...} }
type OpenShiftManagedClusterIdentityProviderResponseArrayInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterIdentityProviderResponseArrayOutput() OpenShiftManagedClusterIdentityProviderResponseArrayOutput
	ToOpenShiftManagedClusterIdentityProviderResponseArrayOutputWithContext(context.Context) OpenShiftManagedClusterIdentityProviderResponseArrayOutput
}

type OpenShiftManagedClusterIdentityProviderResponseArray []OpenShiftManagedClusterIdentityProviderResponseInput

func (OpenShiftManagedClusterIdentityProviderResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OpenShiftManagedClusterIdentityProviderResponse)(nil)).Elem()
}

func (i OpenShiftManagedClusterIdentityProviderResponseArray) ToOpenShiftManagedClusterIdentityProviderResponseArrayOutput() OpenShiftManagedClusterIdentityProviderResponseArrayOutput {
	return i.ToOpenShiftManagedClusterIdentityProviderResponseArrayOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterIdentityProviderResponseArray) ToOpenShiftManagedClusterIdentityProviderResponseArrayOutputWithContext(ctx context.Context) OpenShiftManagedClusterIdentityProviderResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterIdentityProviderResponseArrayOutput)
}

// Defines the configuration of the identity providers to be used in the OpenShift cluster.
type OpenShiftManagedClusterIdentityProviderResponseOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterIdentityProviderResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterIdentityProviderResponse)(nil)).Elem()
}

func (o OpenShiftManagedClusterIdentityProviderResponseOutput) ToOpenShiftManagedClusterIdentityProviderResponseOutput() OpenShiftManagedClusterIdentityProviderResponseOutput {
	return o
}

func (o OpenShiftManagedClusterIdentityProviderResponseOutput) ToOpenShiftManagedClusterIdentityProviderResponseOutputWithContext(ctx context.Context) OpenShiftManagedClusterIdentityProviderResponseOutput {
	return o
}

// Name of the provider.
func (o OpenShiftManagedClusterIdentityProviderResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterIdentityProviderResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Configuration of the provider.
func (o OpenShiftManagedClusterIdentityProviderResponseOutput) Provider() OpenShiftManagedClusterBaseIdentityProviderResponsePtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterIdentityProviderResponse) *OpenShiftManagedClusterBaseIdentityProviderResponse {
		return v.Provider
	}).(OpenShiftManagedClusterBaseIdentityProviderResponsePtrOutput)
}

type OpenShiftManagedClusterIdentityProviderResponseArrayOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterIdentityProviderResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OpenShiftManagedClusterIdentityProviderResponse)(nil)).Elem()
}

func (o OpenShiftManagedClusterIdentityProviderResponseArrayOutput) ToOpenShiftManagedClusterIdentityProviderResponseArrayOutput() OpenShiftManagedClusterIdentityProviderResponseArrayOutput {
	return o
}

func (o OpenShiftManagedClusterIdentityProviderResponseArrayOutput) ToOpenShiftManagedClusterIdentityProviderResponseArrayOutputWithContext(ctx context.Context) OpenShiftManagedClusterIdentityProviderResponseArrayOutput {
	return o
}

func (o OpenShiftManagedClusterIdentityProviderResponseArrayOutput) Index(i pulumi.IntInput) OpenShiftManagedClusterIdentityProviderResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OpenShiftManagedClusterIdentityProviderResponse {
		return vs[0].([]OpenShiftManagedClusterIdentityProviderResponse)[vs[1].(int)]
	}).(OpenShiftManagedClusterIdentityProviderResponseOutput)
}

// OpenShiftManagedClusterMaterPoolProfile contains configuration for OpenShift master VMs.
type OpenShiftManagedClusterMasterPoolProfile struct {
	// Number of masters (VMs) to host docker containers. The default value is 3.
	Count int `pulumi:"count"`
	// Unique name of the master pool profile in the context of the subscription and resource group.
	Name *string `pulumi:"name"`
	// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
	OsType *string `pulumi:"osType"`
	// Subnet CIDR for the peering.
	SubnetCidr *string `pulumi:"subnetCidr"`
	// Size of agent VMs.
	VmSize string `pulumi:"vmSize"`
}

// OpenShiftManagedClusterMasterPoolProfileInput is an input type that accepts OpenShiftManagedClusterMasterPoolProfileArgs and OpenShiftManagedClusterMasterPoolProfileOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterMasterPoolProfileInput` via:
//
//          OpenShiftManagedClusterMasterPoolProfileArgs{...}
type OpenShiftManagedClusterMasterPoolProfileInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterMasterPoolProfileOutput() OpenShiftManagedClusterMasterPoolProfileOutput
	ToOpenShiftManagedClusterMasterPoolProfileOutputWithContext(context.Context) OpenShiftManagedClusterMasterPoolProfileOutput
}

// OpenShiftManagedClusterMaterPoolProfile contains configuration for OpenShift master VMs.
type OpenShiftManagedClusterMasterPoolProfileArgs struct {
	// Number of masters (VMs) to host docker containers. The default value is 3.
	Count pulumi.IntInput `pulumi:"count"`
	// Unique name of the master pool profile in the context of the subscription and resource group.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// Subnet CIDR for the peering.
	SubnetCidr pulumi.StringPtrInput `pulumi:"subnetCidr"`
	// Size of agent VMs.
	VmSize pulumi.StringInput `pulumi:"vmSize"`
}

func (OpenShiftManagedClusterMasterPoolProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterMasterPoolProfile)(nil)).Elem()
}

func (i OpenShiftManagedClusterMasterPoolProfileArgs) ToOpenShiftManagedClusterMasterPoolProfileOutput() OpenShiftManagedClusterMasterPoolProfileOutput {
	return i.ToOpenShiftManagedClusterMasterPoolProfileOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterMasterPoolProfileArgs) ToOpenShiftManagedClusterMasterPoolProfileOutputWithContext(ctx context.Context) OpenShiftManagedClusterMasterPoolProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterMasterPoolProfileOutput)
}

func (i OpenShiftManagedClusterMasterPoolProfileArgs) ToOpenShiftManagedClusterMasterPoolProfilePtrOutput() OpenShiftManagedClusterMasterPoolProfilePtrOutput {
	return i.ToOpenShiftManagedClusterMasterPoolProfilePtrOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterMasterPoolProfileArgs) ToOpenShiftManagedClusterMasterPoolProfilePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterMasterPoolProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterMasterPoolProfileOutput).ToOpenShiftManagedClusterMasterPoolProfilePtrOutputWithContext(ctx)
}

// OpenShiftManagedClusterMasterPoolProfilePtrInput is an input type that accepts OpenShiftManagedClusterMasterPoolProfileArgs, OpenShiftManagedClusterMasterPoolProfilePtr and OpenShiftManagedClusterMasterPoolProfilePtrOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterMasterPoolProfilePtrInput` via:
//
//          OpenShiftManagedClusterMasterPoolProfileArgs{...}
//
//  or:
//
//          nil
type OpenShiftManagedClusterMasterPoolProfilePtrInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterMasterPoolProfilePtrOutput() OpenShiftManagedClusterMasterPoolProfilePtrOutput
	ToOpenShiftManagedClusterMasterPoolProfilePtrOutputWithContext(context.Context) OpenShiftManagedClusterMasterPoolProfilePtrOutput
}

type openShiftManagedClusterMasterPoolProfilePtrType OpenShiftManagedClusterMasterPoolProfileArgs

func OpenShiftManagedClusterMasterPoolProfilePtr(v *OpenShiftManagedClusterMasterPoolProfileArgs) OpenShiftManagedClusterMasterPoolProfilePtrInput {
	return (*openShiftManagedClusterMasterPoolProfilePtrType)(v)
}

func (*openShiftManagedClusterMasterPoolProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenShiftManagedClusterMasterPoolProfile)(nil)).Elem()
}

func (i *openShiftManagedClusterMasterPoolProfilePtrType) ToOpenShiftManagedClusterMasterPoolProfilePtrOutput() OpenShiftManagedClusterMasterPoolProfilePtrOutput {
	return i.ToOpenShiftManagedClusterMasterPoolProfilePtrOutputWithContext(context.Background())
}

func (i *openShiftManagedClusterMasterPoolProfilePtrType) ToOpenShiftManagedClusterMasterPoolProfilePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterMasterPoolProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterMasterPoolProfilePtrOutput)
}

// OpenShiftManagedClusterMaterPoolProfile contains configuration for OpenShift master VMs.
type OpenShiftManagedClusterMasterPoolProfileOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterMasterPoolProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterMasterPoolProfile)(nil)).Elem()
}

func (o OpenShiftManagedClusterMasterPoolProfileOutput) ToOpenShiftManagedClusterMasterPoolProfileOutput() OpenShiftManagedClusterMasterPoolProfileOutput {
	return o
}

func (o OpenShiftManagedClusterMasterPoolProfileOutput) ToOpenShiftManagedClusterMasterPoolProfileOutputWithContext(ctx context.Context) OpenShiftManagedClusterMasterPoolProfileOutput {
	return o
}

func (o OpenShiftManagedClusterMasterPoolProfileOutput) ToOpenShiftManagedClusterMasterPoolProfilePtrOutput() OpenShiftManagedClusterMasterPoolProfilePtrOutput {
	return o.ToOpenShiftManagedClusterMasterPoolProfilePtrOutputWithContext(context.Background())
}

func (o OpenShiftManagedClusterMasterPoolProfileOutput) ToOpenShiftManagedClusterMasterPoolProfilePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterMasterPoolProfilePtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterMasterPoolProfile) *OpenShiftManagedClusterMasterPoolProfile {
		return &v
	}).(OpenShiftManagedClusterMasterPoolProfilePtrOutput)
}

// Number of masters (VMs) to host docker containers. The default value is 3.
func (o OpenShiftManagedClusterMasterPoolProfileOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterMasterPoolProfile) int { return v.Count }).(pulumi.IntOutput)
}

// Unique name of the master pool profile in the context of the subscription and resource group.
func (o OpenShiftManagedClusterMasterPoolProfileOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterMasterPoolProfile) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
func (o OpenShiftManagedClusterMasterPoolProfileOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterMasterPoolProfile) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// Subnet CIDR for the peering.
func (o OpenShiftManagedClusterMasterPoolProfileOutput) SubnetCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterMasterPoolProfile) *string { return v.SubnetCidr }).(pulumi.StringPtrOutput)
}

// Size of agent VMs.
func (o OpenShiftManagedClusterMasterPoolProfileOutput) VmSize() pulumi.StringOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterMasterPoolProfile) string { return v.VmSize }).(pulumi.StringOutput)
}

type OpenShiftManagedClusterMasterPoolProfilePtrOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterMasterPoolProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenShiftManagedClusterMasterPoolProfile)(nil)).Elem()
}

func (o OpenShiftManagedClusterMasterPoolProfilePtrOutput) ToOpenShiftManagedClusterMasterPoolProfilePtrOutput() OpenShiftManagedClusterMasterPoolProfilePtrOutput {
	return o
}

func (o OpenShiftManagedClusterMasterPoolProfilePtrOutput) ToOpenShiftManagedClusterMasterPoolProfilePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterMasterPoolProfilePtrOutput {
	return o
}

func (o OpenShiftManagedClusterMasterPoolProfilePtrOutput) Elem() OpenShiftManagedClusterMasterPoolProfileOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterMasterPoolProfile) OpenShiftManagedClusterMasterPoolProfile { return *v }).(OpenShiftManagedClusterMasterPoolProfileOutput)
}

// Number of masters (VMs) to host docker containers. The default value is 3.
func (o OpenShiftManagedClusterMasterPoolProfilePtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterMasterPoolProfile) *int {
		if v == nil {
			return nil
		}
		return &v.Count
	}).(pulumi.IntPtrOutput)
}

// Unique name of the master pool profile in the context of the subscription and resource group.
func (o OpenShiftManagedClusterMasterPoolProfilePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterMasterPoolProfile) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
func (o OpenShiftManagedClusterMasterPoolProfilePtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterMasterPoolProfile) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// Subnet CIDR for the peering.
func (o OpenShiftManagedClusterMasterPoolProfilePtrOutput) SubnetCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterMasterPoolProfile) *string {
		if v == nil {
			return nil
		}
		return v.SubnetCidr
	}).(pulumi.StringPtrOutput)
}

// Size of agent VMs.
func (o OpenShiftManagedClusterMasterPoolProfilePtrOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterMasterPoolProfile) *string {
		if v == nil {
			return nil
		}
		return &v.VmSize
	}).(pulumi.StringPtrOutput)
}

// OpenShiftManagedClusterMaterPoolProfile contains configuration for OpenShift master VMs.
type OpenShiftManagedClusterMasterPoolProfileResponse struct {
	// Number of masters (VMs) to host docker containers. The default value is 3.
	Count int `pulumi:"count"`
	// Unique name of the master pool profile in the context of the subscription and resource group.
	Name *string `pulumi:"name"`
	// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
	OsType *string `pulumi:"osType"`
	// Subnet CIDR for the peering.
	SubnetCidr *string `pulumi:"subnetCidr"`
	// Size of agent VMs.
	VmSize string `pulumi:"vmSize"`
}

// OpenShiftManagedClusterMasterPoolProfileResponseInput is an input type that accepts OpenShiftManagedClusterMasterPoolProfileResponseArgs and OpenShiftManagedClusterMasterPoolProfileResponseOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterMasterPoolProfileResponseInput` via:
//
//          OpenShiftManagedClusterMasterPoolProfileResponseArgs{...}
type OpenShiftManagedClusterMasterPoolProfileResponseInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterMasterPoolProfileResponseOutput() OpenShiftManagedClusterMasterPoolProfileResponseOutput
	ToOpenShiftManagedClusterMasterPoolProfileResponseOutputWithContext(context.Context) OpenShiftManagedClusterMasterPoolProfileResponseOutput
}

// OpenShiftManagedClusterMaterPoolProfile contains configuration for OpenShift master VMs.
type OpenShiftManagedClusterMasterPoolProfileResponseArgs struct {
	// Number of masters (VMs) to host docker containers. The default value is 3.
	Count pulumi.IntInput `pulumi:"count"`
	// Unique name of the master pool profile in the context of the subscription and resource group.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// Subnet CIDR for the peering.
	SubnetCidr pulumi.StringPtrInput `pulumi:"subnetCidr"`
	// Size of agent VMs.
	VmSize pulumi.StringInput `pulumi:"vmSize"`
}

func (OpenShiftManagedClusterMasterPoolProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterMasterPoolProfileResponse)(nil)).Elem()
}

func (i OpenShiftManagedClusterMasterPoolProfileResponseArgs) ToOpenShiftManagedClusterMasterPoolProfileResponseOutput() OpenShiftManagedClusterMasterPoolProfileResponseOutput {
	return i.ToOpenShiftManagedClusterMasterPoolProfileResponseOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterMasterPoolProfileResponseArgs) ToOpenShiftManagedClusterMasterPoolProfileResponseOutputWithContext(ctx context.Context) OpenShiftManagedClusterMasterPoolProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterMasterPoolProfileResponseOutput)
}

func (i OpenShiftManagedClusterMasterPoolProfileResponseArgs) ToOpenShiftManagedClusterMasterPoolProfileResponsePtrOutput() OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput {
	return i.ToOpenShiftManagedClusterMasterPoolProfileResponsePtrOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterMasterPoolProfileResponseArgs) ToOpenShiftManagedClusterMasterPoolProfileResponsePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterMasterPoolProfileResponseOutput).ToOpenShiftManagedClusterMasterPoolProfileResponsePtrOutputWithContext(ctx)
}

// OpenShiftManagedClusterMasterPoolProfileResponsePtrInput is an input type that accepts OpenShiftManagedClusterMasterPoolProfileResponseArgs, OpenShiftManagedClusterMasterPoolProfileResponsePtr and OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterMasterPoolProfileResponsePtrInput` via:
//
//          OpenShiftManagedClusterMasterPoolProfileResponseArgs{...}
//
//  or:
//
//          nil
type OpenShiftManagedClusterMasterPoolProfileResponsePtrInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterMasterPoolProfileResponsePtrOutput() OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput
	ToOpenShiftManagedClusterMasterPoolProfileResponsePtrOutputWithContext(context.Context) OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput
}

type openShiftManagedClusterMasterPoolProfileResponsePtrType OpenShiftManagedClusterMasterPoolProfileResponseArgs

func OpenShiftManagedClusterMasterPoolProfileResponsePtr(v *OpenShiftManagedClusterMasterPoolProfileResponseArgs) OpenShiftManagedClusterMasterPoolProfileResponsePtrInput {
	return (*openShiftManagedClusterMasterPoolProfileResponsePtrType)(v)
}

func (*openShiftManagedClusterMasterPoolProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenShiftManagedClusterMasterPoolProfileResponse)(nil)).Elem()
}

func (i *openShiftManagedClusterMasterPoolProfileResponsePtrType) ToOpenShiftManagedClusterMasterPoolProfileResponsePtrOutput() OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput {
	return i.ToOpenShiftManagedClusterMasterPoolProfileResponsePtrOutputWithContext(context.Background())
}

func (i *openShiftManagedClusterMasterPoolProfileResponsePtrType) ToOpenShiftManagedClusterMasterPoolProfileResponsePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput)
}

// OpenShiftManagedClusterMaterPoolProfile contains configuration for OpenShift master VMs.
type OpenShiftManagedClusterMasterPoolProfileResponseOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterMasterPoolProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterMasterPoolProfileResponse)(nil)).Elem()
}

func (o OpenShiftManagedClusterMasterPoolProfileResponseOutput) ToOpenShiftManagedClusterMasterPoolProfileResponseOutput() OpenShiftManagedClusterMasterPoolProfileResponseOutput {
	return o
}

func (o OpenShiftManagedClusterMasterPoolProfileResponseOutput) ToOpenShiftManagedClusterMasterPoolProfileResponseOutputWithContext(ctx context.Context) OpenShiftManagedClusterMasterPoolProfileResponseOutput {
	return o
}

func (o OpenShiftManagedClusterMasterPoolProfileResponseOutput) ToOpenShiftManagedClusterMasterPoolProfileResponsePtrOutput() OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput {
	return o.ToOpenShiftManagedClusterMasterPoolProfileResponsePtrOutputWithContext(context.Background())
}

func (o OpenShiftManagedClusterMasterPoolProfileResponseOutput) ToOpenShiftManagedClusterMasterPoolProfileResponsePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterMasterPoolProfileResponse) *OpenShiftManagedClusterMasterPoolProfileResponse {
		return &v
	}).(OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput)
}

// Number of masters (VMs) to host docker containers. The default value is 3.
func (o OpenShiftManagedClusterMasterPoolProfileResponseOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterMasterPoolProfileResponse) int { return v.Count }).(pulumi.IntOutput)
}

// Unique name of the master pool profile in the context of the subscription and resource group.
func (o OpenShiftManagedClusterMasterPoolProfileResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterMasterPoolProfileResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
func (o OpenShiftManagedClusterMasterPoolProfileResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterMasterPoolProfileResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// Subnet CIDR for the peering.
func (o OpenShiftManagedClusterMasterPoolProfileResponseOutput) SubnetCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterMasterPoolProfileResponse) *string { return v.SubnetCidr }).(pulumi.StringPtrOutput)
}

// Size of agent VMs.
func (o OpenShiftManagedClusterMasterPoolProfileResponseOutput) VmSize() pulumi.StringOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterMasterPoolProfileResponse) string { return v.VmSize }).(pulumi.StringOutput)
}

type OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenShiftManagedClusterMasterPoolProfileResponse)(nil)).Elem()
}

func (o OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput) ToOpenShiftManagedClusterMasterPoolProfileResponsePtrOutput() OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput {
	return o
}

func (o OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput) ToOpenShiftManagedClusterMasterPoolProfileResponsePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput {
	return o
}

func (o OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput) Elem() OpenShiftManagedClusterMasterPoolProfileResponseOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterMasterPoolProfileResponse) OpenShiftManagedClusterMasterPoolProfileResponse {
		return *v
	}).(OpenShiftManagedClusterMasterPoolProfileResponseOutput)
}

// Number of masters (VMs) to host docker containers. The default value is 3.
func (o OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterMasterPoolProfileResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Count
	}).(pulumi.IntPtrOutput)
}

// Unique name of the master pool profile in the context of the subscription and resource group.
func (o OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterMasterPoolProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
func (o OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterMasterPoolProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// Subnet CIDR for the peering.
func (o OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput) SubnetCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterMasterPoolProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.SubnetCidr
	}).(pulumi.StringPtrOutput)
}

// Size of agent VMs.
func (o OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterMasterPoolProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.VmSize
	}).(pulumi.StringPtrOutput)
}

// Properties of the OpenShift managed cluster.
type OpenShiftManagedClusterProperties struct {
	// Configuration of OpenShift cluster VMs.
	AgentPoolProfiles []OpenShiftManagedClusterAgentPoolProfile `pulumi:"agentPoolProfiles"`
	// Configures OpenShift authentication.
	AuthProfile *OpenShiftManagedClusterAuthProfile `pulumi:"authProfile"`
	// Configuration for OpenShift master VMs.
	MasterPoolProfile *OpenShiftManagedClusterMasterPoolProfile `pulumi:"masterPoolProfile"`
	// Configuration for OpenShift networking.
	NetworkProfile *NetworkProfile `pulumi:"networkProfile"`
	// Version of OpenShift specified when creating the cluster.
	OpenShiftVersion string `pulumi:"openShiftVersion"`
	// Configuration for OpenShift router(s).
	RouterProfiles []OpenShiftRouterProfile `pulumi:"routerProfiles"`
}

// OpenShiftManagedClusterPropertiesInput is an input type that accepts OpenShiftManagedClusterPropertiesArgs and OpenShiftManagedClusterPropertiesOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterPropertiesInput` via:
//
//          OpenShiftManagedClusterPropertiesArgs{...}
type OpenShiftManagedClusterPropertiesInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterPropertiesOutput() OpenShiftManagedClusterPropertiesOutput
	ToOpenShiftManagedClusterPropertiesOutputWithContext(context.Context) OpenShiftManagedClusterPropertiesOutput
}

// Properties of the OpenShift managed cluster.
type OpenShiftManagedClusterPropertiesArgs struct {
	// Configuration of OpenShift cluster VMs.
	AgentPoolProfiles OpenShiftManagedClusterAgentPoolProfileArrayInput `pulumi:"agentPoolProfiles"`
	// Configures OpenShift authentication.
	AuthProfile OpenShiftManagedClusterAuthProfilePtrInput `pulumi:"authProfile"`
	// Configuration for OpenShift master VMs.
	MasterPoolProfile OpenShiftManagedClusterMasterPoolProfilePtrInput `pulumi:"masterPoolProfile"`
	// Configuration for OpenShift networking.
	NetworkProfile NetworkProfilePtrInput `pulumi:"networkProfile"`
	// Version of OpenShift specified when creating the cluster.
	OpenShiftVersion pulumi.StringInput `pulumi:"openShiftVersion"`
	// Configuration for OpenShift router(s).
	RouterProfiles OpenShiftRouterProfileArrayInput `pulumi:"routerProfiles"`
}

func (OpenShiftManagedClusterPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterProperties)(nil)).Elem()
}

func (i OpenShiftManagedClusterPropertiesArgs) ToOpenShiftManagedClusterPropertiesOutput() OpenShiftManagedClusterPropertiesOutput {
	return i.ToOpenShiftManagedClusterPropertiesOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterPropertiesArgs) ToOpenShiftManagedClusterPropertiesOutputWithContext(ctx context.Context) OpenShiftManagedClusterPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterPropertiesOutput)
}

func (i OpenShiftManagedClusterPropertiesArgs) ToOpenShiftManagedClusterPropertiesPtrOutput() OpenShiftManagedClusterPropertiesPtrOutput {
	return i.ToOpenShiftManagedClusterPropertiesPtrOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterPropertiesArgs) ToOpenShiftManagedClusterPropertiesPtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterPropertiesOutput).ToOpenShiftManagedClusterPropertiesPtrOutputWithContext(ctx)
}

// OpenShiftManagedClusterPropertiesPtrInput is an input type that accepts OpenShiftManagedClusterPropertiesArgs, OpenShiftManagedClusterPropertiesPtr and OpenShiftManagedClusterPropertiesPtrOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterPropertiesPtrInput` via:
//
//          OpenShiftManagedClusterPropertiesArgs{...}
//
//  or:
//
//          nil
type OpenShiftManagedClusterPropertiesPtrInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterPropertiesPtrOutput() OpenShiftManagedClusterPropertiesPtrOutput
	ToOpenShiftManagedClusterPropertiesPtrOutputWithContext(context.Context) OpenShiftManagedClusterPropertiesPtrOutput
}

type openShiftManagedClusterPropertiesPtrType OpenShiftManagedClusterPropertiesArgs

func OpenShiftManagedClusterPropertiesPtr(v *OpenShiftManagedClusterPropertiesArgs) OpenShiftManagedClusterPropertiesPtrInput {
	return (*openShiftManagedClusterPropertiesPtrType)(v)
}

func (*openShiftManagedClusterPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenShiftManagedClusterProperties)(nil)).Elem()
}

func (i *openShiftManagedClusterPropertiesPtrType) ToOpenShiftManagedClusterPropertiesPtrOutput() OpenShiftManagedClusterPropertiesPtrOutput {
	return i.ToOpenShiftManagedClusterPropertiesPtrOutputWithContext(context.Background())
}

func (i *openShiftManagedClusterPropertiesPtrType) ToOpenShiftManagedClusterPropertiesPtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterPropertiesPtrOutput)
}

// Properties of the OpenShift managed cluster.
type OpenShiftManagedClusterPropertiesOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterProperties)(nil)).Elem()
}

func (o OpenShiftManagedClusterPropertiesOutput) ToOpenShiftManagedClusterPropertiesOutput() OpenShiftManagedClusterPropertiesOutput {
	return o
}

func (o OpenShiftManagedClusterPropertiesOutput) ToOpenShiftManagedClusterPropertiesOutputWithContext(ctx context.Context) OpenShiftManagedClusterPropertiesOutput {
	return o
}

func (o OpenShiftManagedClusterPropertiesOutput) ToOpenShiftManagedClusterPropertiesPtrOutput() OpenShiftManagedClusterPropertiesPtrOutput {
	return o.ToOpenShiftManagedClusterPropertiesPtrOutputWithContext(context.Background())
}

func (o OpenShiftManagedClusterPropertiesOutput) ToOpenShiftManagedClusterPropertiesPtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterPropertiesPtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterProperties) *OpenShiftManagedClusterProperties {
		return &v
	}).(OpenShiftManagedClusterPropertiesPtrOutput)
}

// Configuration of OpenShift cluster VMs.
func (o OpenShiftManagedClusterPropertiesOutput) AgentPoolProfiles() OpenShiftManagedClusterAgentPoolProfileArrayOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterProperties) []OpenShiftManagedClusterAgentPoolProfile {
		return v.AgentPoolProfiles
	}).(OpenShiftManagedClusterAgentPoolProfileArrayOutput)
}

// Configures OpenShift authentication.
func (o OpenShiftManagedClusterPropertiesOutput) AuthProfile() OpenShiftManagedClusterAuthProfilePtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterProperties) *OpenShiftManagedClusterAuthProfile { return v.AuthProfile }).(OpenShiftManagedClusterAuthProfilePtrOutput)
}

// Configuration for OpenShift master VMs.
func (o OpenShiftManagedClusterPropertiesOutput) MasterPoolProfile() OpenShiftManagedClusterMasterPoolProfilePtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterProperties) *OpenShiftManagedClusterMasterPoolProfile {
		return v.MasterPoolProfile
	}).(OpenShiftManagedClusterMasterPoolProfilePtrOutput)
}

// Configuration for OpenShift networking.
func (o OpenShiftManagedClusterPropertiesOutput) NetworkProfile() NetworkProfilePtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterProperties) *NetworkProfile { return v.NetworkProfile }).(NetworkProfilePtrOutput)
}

// Version of OpenShift specified when creating the cluster.
func (o OpenShiftManagedClusterPropertiesOutput) OpenShiftVersion() pulumi.StringOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterProperties) string { return v.OpenShiftVersion }).(pulumi.StringOutput)
}

// Configuration for OpenShift router(s).
func (o OpenShiftManagedClusterPropertiesOutput) RouterProfiles() OpenShiftRouterProfileArrayOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterProperties) []OpenShiftRouterProfile { return v.RouterProfiles }).(OpenShiftRouterProfileArrayOutput)
}

type OpenShiftManagedClusterPropertiesPtrOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenShiftManagedClusterProperties)(nil)).Elem()
}

func (o OpenShiftManagedClusterPropertiesPtrOutput) ToOpenShiftManagedClusterPropertiesPtrOutput() OpenShiftManagedClusterPropertiesPtrOutput {
	return o
}

func (o OpenShiftManagedClusterPropertiesPtrOutput) ToOpenShiftManagedClusterPropertiesPtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterPropertiesPtrOutput {
	return o
}

func (o OpenShiftManagedClusterPropertiesPtrOutput) Elem() OpenShiftManagedClusterPropertiesOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterProperties) OpenShiftManagedClusterProperties { return *v }).(OpenShiftManagedClusterPropertiesOutput)
}

// Configuration of OpenShift cluster VMs.
func (o OpenShiftManagedClusterPropertiesPtrOutput) AgentPoolProfiles() OpenShiftManagedClusterAgentPoolProfileArrayOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterProperties) []OpenShiftManagedClusterAgentPoolProfile {
		if v == nil {
			return nil
		}
		return v.AgentPoolProfiles
	}).(OpenShiftManagedClusterAgentPoolProfileArrayOutput)
}

// Configures OpenShift authentication.
func (o OpenShiftManagedClusterPropertiesPtrOutput) AuthProfile() OpenShiftManagedClusterAuthProfilePtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterProperties) *OpenShiftManagedClusterAuthProfile {
		if v == nil {
			return nil
		}
		return v.AuthProfile
	}).(OpenShiftManagedClusterAuthProfilePtrOutput)
}

// Configuration for OpenShift master VMs.
func (o OpenShiftManagedClusterPropertiesPtrOutput) MasterPoolProfile() OpenShiftManagedClusterMasterPoolProfilePtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterProperties) *OpenShiftManagedClusterMasterPoolProfile {
		if v == nil {
			return nil
		}
		return v.MasterPoolProfile
	}).(OpenShiftManagedClusterMasterPoolProfilePtrOutput)
}

// Configuration for OpenShift networking.
func (o OpenShiftManagedClusterPropertiesPtrOutput) NetworkProfile() NetworkProfilePtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterProperties) *NetworkProfile {
		if v == nil {
			return nil
		}
		return v.NetworkProfile
	}).(NetworkProfilePtrOutput)
}

// Version of OpenShift specified when creating the cluster.
func (o OpenShiftManagedClusterPropertiesPtrOutput) OpenShiftVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterProperties) *string {
		if v == nil {
			return nil
		}
		return &v.OpenShiftVersion
	}).(pulumi.StringPtrOutput)
}

// Configuration for OpenShift router(s).
func (o OpenShiftManagedClusterPropertiesPtrOutput) RouterProfiles() OpenShiftRouterProfileArrayOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterProperties) []OpenShiftRouterProfile {
		if v == nil {
			return nil
		}
		return v.RouterProfiles
	}).(OpenShiftRouterProfileArrayOutput)
}

// Properties of the OpenShift managed cluster.
type OpenShiftManagedClusterPropertiesResponse struct {
	// Configuration of OpenShift cluster VMs.
	AgentPoolProfiles []OpenShiftManagedClusterAgentPoolProfileResponse `pulumi:"agentPoolProfiles"`
	// Configures OpenShift authentication.
	AuthProfile *OpenShiftManagedClusterAuthProfileResponse `pulumi:"authProfile"`
	// Version of OpenShift specified when creating the cluster.
	ClusterVersion string `pulumi:"clusterVersion"`
	// Service generated FQDN for OpenShift API server loadbalancer internal hostname.
	Fqdn string `pulumi:"fqdn"`
	// Configuration for OpenShift master VMs.
	MasterPoolProfile *OpenShiftManagedClusterMasterPoolProfileResponse `pulumi:"masterPoolProfile"`
	// Configuration for OpenShift networking.
	NetworkProfile *NetworkProfileResponse `pulumi:"networkProfile"`
	// Version of OpenShift specified when creating the cluster.
	OpenShiftVersion string `pulumi:"openShiftVersion"`
	// The current deployment or provisioning state, which only appears in the response.
	ProvisioningState string `pulumi:"provisioningState"`
	// Service generated FQDN for OpenShift API server.
	PublicHostname string `pulumi:"publicHostname"`
	// Configuration for OpenShift router(s).
	RouterProfiles []OpenShiftRouterProfileResponse `pulumi:"routerProfiles"`
}

// OpenShiftManagedClusterPropertiesResponseInput is an input type that accepts OpenShiftManagedClusterPropertiesResponseArgs and OpenShiftManagedClusterPropertiesResponseOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterPropertiesResponseInput` via:
//
//          OpenShiftManagedClusterPropertiesResponseArgs{...}
type OpenShiftManagedClusterPropertiesResponseInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterPropertiesResponseOutput() OpenShiftManagedClusterPropertiesResponseOutput
	ToOpenShiftManagedClusterPropertiesResponseOutputWithContext(context.Context) OpenShiftManagedClusterPropertiesResponseOutput
}

// Properties of the OpenShift managed cluster.
type OpenShiftManagedClusterPropertiesResponseArgs struct {
	// Configuration of OpenShift cluster VMs.
	AgentPoolProfiles OpenShiftManagedClusterAgentPoolProfileResponseArrayInput `pulumi:"agentPoolProfiles"`
	// Configures OpenShift authentication.
	AuthProfile OpenShiftManagedClusterAuthProfileResponsePtrInput `pulumi:"authProfile"`
	// Version of OpenShift specified when creating the cluster.
	ClusterVersion pulumi.StringInput `pulumi:"clusterVersion"`
	// Service generated FQDN for OpenShift API server loadbalancer internal hostname.
	Fqdn pulumi.StringInput `pulumi:"fqdn"`
	// Configuration for OpenShift master VMs.
	MasterPoolProfile OpenShiftManagedClusterMasterPoolProfileResponsePtrInput `pulumi:"masterPoolProfile"`
	// Configuration for OpenShift networking.
	NetworkProfile NetworkProfileResponsePtrInput `pulumi:"networkProfile"`
	// Version of OpenShift specified when creating the cluster.
	OpenShiftVersion pulumi.StringInput `pulumi:"openShiftVersion"`
	// The current deployment or provisioning state, which only appears in the response.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Service generated FQDN for OpenShift API server.
	PublicHostname pulumi.StringInput `pulumi:"publicHostname"`
	// Configuration for OpenShift router(s).
	RouterProfiles OpenShiftRouterProfileResponseArrayInput `pulumi:"routerProfiles"`
}

func (OpenShiftManagedClusterPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterPropertiesResponse)(nil)).Elem()
}

func (i OpenShiftManagedClusterPropertiesResponseArgs) ToOpenShiftManagedClusterPropertiesResponseOutput() OpenShiftManagedClusterPropertiesResponseOutput {
	return i.ToOpenShiftManagedClusterPropertiesResponseOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterPropertiesResponseArgs) ToOpenShiftManagedClusterPropertiesResponseOutputWithContext(ctx context.Context) OpenShiftManagedClusterPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterPropertiesResponseOutput)
}

func (i OpenShiftManagedClusterPropertiesResponseArgs) ToOpenShiftManagedClusterPropertiesResponsePtrOutput() OpenShiftManagedClusterPropertiesResponsePtrOutput {
	return i.ToOpenShiftManagedClusterPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i OpenShiftManagedClusterPropertiesResponseArgs) ToOpenShiftManagedClusterPropertiesResponsePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterPropertiesResponseOutput).ToOpenShiftManagedClusterPropertiesResponsePtrOutputWithContext(ctx)
}

// OpenShiftManagedClusterPropertiesResponsePtrInput is an input type that accepts OpenShiftManagedClusterPropertiesResponseArgs, OpenShiftManagedClusterPropertiesResponsePtr and OpenShiftManagedClusterPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `OpenShiftManagedClusterPropertiesResponsePtrInput` via:
//
//          OpenShiftManagedClusterPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type OpenShiftManagedClusterPropertiesResponsePtrInput interface {
	pulumi.Input

	ToOpenShiftManagedClusterPropertiesResponsePtrOutput() OpenShiftManagedClusterPropertiesResponsePtrOutput
	ToOpenShiftManagedClusterPropertiesResponsePtrOutputWithContext(context.Context) OpenShiftManagedClusterPropertiesResponsePtrOutput
}

type openShiftManagedClusterPropertiesResponsePtrType OpenShiftManagedClusterPropertiesResponseArgs

func OpenShiftManagedClusterPropertiesResponsePtr(v *OpenShiftManagedClusterPropertiesResponseArgs) OpenShiftManagedClusterPropertiesResponsePtrInput {
	return (*openShiftManagedClusterPropertiesResponsePtrType)(v)
}

func (*openShiftManagedClusterPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenShiftManagedClusterPropertiesResponse)(nil)).Elem()
}

func (i *openShiftManagedClusterPropertiesResponsePtrType) ToOpenShiftManagedClusterPropertiesResponsePtrOutput() OpenShiftManagedClusterPropertiesResponsePtrOutput {
	return i.ToOpenShiftManagedClusterPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *openShiftManagedClusterPropertiesResponsePtrType) ToOpenShiftManagedClusterPropertiesResponsePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftManagedClusterPropertiesResponsePtrOutput)
}

// Properties of the OpenShift managed cluster.
type OpenShiftManagedClusterPropertiesResponseOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftManagedClusterPropertiesResponse)(nil)).Elem()
}

func (o OpenShiftManagedClusterPropertiesResponseOutput) ToOpenShiftManagedClusterPropertiesResponseOutput() OpenShiftManagedClusterPropertiesResponseOutput {
	return o
}

func (o OpenShiftManagedClusterPropertiesResponseOutput) ToOpenShiftManagedClusterPropertiesResponseOutputWithContext(ctx context.Context) OpenShiftManagedClusterPropertiesResponseOutput {
	return o
}

func (o OpenShiftManagedClusterPropertiesResponseOutput) ToOpenShiftManagedClusterPropertiesResponsePtrOutput() OpenShiftManagedClusterPropertiesResponsePtrOutput {
	return o.ToOpenShiftManagedClusterPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o OpenShiftManagedClusterPropertiesResponseOutput) ToOpenShiftManagedClusterPropertiesResponsePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterPropertiesResponsePtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterPropertiesResponse) *OpenShiftManagedClusterPropertiesResponse {
		return &v
	}).(OpenShiftManagedClusterPropertiesResponsePtrOutput)
}

// Configuration of OpenShift cluster VMs.
func (o OpenShiftManagedClusterPropertiesResponseOutput) AgentPoolProfiles() OpenShiftManagedClusterAgentPoolProfileResponseArrayOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterPropertiesResponse) []OpenShiftManagedClusterAgentPoolProfileResponse {
		return v.AgentPoolProfiles
	}).(OpenShiftManagedClusterAgentPoolProfileResponseArrayOutput)
}

// Configures OpenShift authentication.
func (o OpenShiftManagedClusterPropertiesResponseOutput) AuthProfile() OpenShiftManagedClusterAuthProfileResponsePtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterPropertiesResponse) *OpenShiftManagedClusterAuthProfileResponse {
		return v.AuthProfile
	}).(OpenShiftManagedClusterAuthProfileResponsePtrOutput)
}

// Version of OpenShift specified when creating the cluster.
func (o OpenShiftManagedClusterPropertiesResponseOutput) ClusterVersion() pulumi.StringOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterPropertiesResponse) string { return v.ClusterVersion }).(pulumi.StringOutput)
}

// Service generated FQDN for OpenShift API server loadbalancer internal hostname.
func (o OpenShiftManagedClusterPropertiesResponseOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterPropertiesResponse) string { return v.Fqdn }).(pulumi.StringOutput)
}

// Configuration for OpenShift master VMs.
func (o OpenShiftManagedClusterPropertiesResponseOutput) MasterPoolProfile() OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterPropertiesResponse) *OpenShiftManagedClusterMasterPoolProfileResponse {
		return v.MasterPoolProfile
	}).(OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput)
}

// Configuration for OpenShift networking.
func (o OpenShiftManagedClusterPropertiesResponseOutput) NetworkProfile() NetworkProfileResponsePtrOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterPropertiesResponse) *NetworkProfileResponse { return v.NetworkProfile }).(NetworkProfileResponsePtrOutput)
}

// Version of OpenShift specified when creating the cluster.
func (o OpenShiftManagedClusterPropertiesResponseOutput) OpenShiftVersion() pulumi.StringOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterPropertiesResponse) string { return v.OpenShiftVersion }).(pulumi.StringOutput)
}

// The current deployment or provisioning state, which only appears in the response.
func (o OpenShiftManagedClusterPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Service generated FQDN for OpenShift API server.
func (o OpenShiftManagedClusterPropertiesResponseOutput) PublicHostname() pulumi.StringOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterPropertiesResponse) string { return v.PublicHostname }).(pulumi.StringOutput)
}

// Configuration for OpenShift router(s).
func (o OpenShiftManagedClusterPropertiesResponseOutput) RouterProfiles() OpenShiftRouterProfileResponseArrayOutput {
	return o.ApplyT(func(v OpenShiftManagedClusterPropertiesResponse) []OpenShiftRouterProfileResponse {
		return v.RouterProfiles
	}).(OpenShiftRouterProfileResponseArrayOutput)
}

type OpenShiftManagedClusterPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (OpenShiftManagedClusterPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenShiftManagedClusterPropertiesResponse)(nil)).Elem()
}

func (o OpenShiftManagedClusterPropertiesResponsePtrOutput) ToOpenShiftManagedClusterPropertiesResponsePtrOutput() OpenShiftManagedClusterPropertiesResponsePtrOutput {
	return o
}

func (o OpenShiftManagedClusterPropertiesResponsePtrOutput) ToOpenShiftManagedClusterPropertiesResponsePtrOutputWithContext(ctx context.Context) OpenShiftManagedClusterPropertiesResponsePtrOutput {
	return o
}

func (o OpenShiftManagedClusterPropertiesResponsePtrOutput) Elem() OpenShiftManagedClusterPropertiesResponseOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterPropertiesResponse) OpenShiftManagedClusterPropertiesResponse {
		return *v
	}).(OpenShiftManagedClusterPropertiesResponseOutput)
}

// Configuration of OpenShift cluster VMs.
func (o OpenShiftManagedClusterPropertiesResponsePtrOutput) AgentPoolProfiles() OpenShiftManagedClusterAgentPoolProfileResponseArrayOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterPropertiesResponse) []OpenShiftManagedClusterAgentPoolProfileResponse {
		if v == nil {
			return nil
		}
		return v.AgentPoolProfiles
	}).(OpenShiftManagedClusterAgentPoolProfileResponseArrayOutput)
}

// Configures OpenShift authentication.
func (o OpenShiftManagedClusterPropertiesResponsePtrOutput) AuthProfile() OpenShiftManagedClusterAuthProfileResponsePtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterPropertiesResponse) *OpenShiftManagedClusterAuthProfileResponse {
		if v == nil {
			return nil
		}
		return v.AuthProfile
	}).(OpenShiftManagedClusterAuthProfileResponsePtrOutput)
}

// Version of OpenShift specified when creating the cluster.
func (o OpenShiftManagedClusterPropertiesResponsePtrOutput) ClusterVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterVersion
	}).(pulumi.StringPtrOutput)
}

// Service generated FQDN for OpenShift API server loadbalancer internal hostname.
func (o OpenShiftManagedClusterPropertiesResponsePtrOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Fqdn
	}).(pulumi.StringPtrOutput)
}

// Configuration for OpenShift master VMs.
func (o OpenShiftManagedClusterPropertiesResponsePtrOutput) MasterPoolProfile() OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterPropertiesResponse) *OpenShiftManagedClusterMasterPoolProfileResponse {
		if v == nil {
			return nil
		}
		return v.MasterPoolProfile
	}).(OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput)
}

// Configuration for OpenShift networking.
func (o OpenShiftManagedClusterPropertiesResponsePtrOutput) NetworkProfile() NetworkProfileResponsePtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterPropertiesResponse) *NetworkProfileResponse {
		if v == nil {
			return nil
		}
		return v.NetworkProfile
	}).(NetworkProfileResponsePtrOutput)
}

// Version of OpenShift specified when creating the cluster.
func (o OpenShiftManagedClusterPropertiesResponsePtrOutput) OpenShiftVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.OpenShiftVersion
	}).(pulumi.StringPtrOutput)
}

// The current deployment or provisioning state, which only appears in the response.
func (o OpenShiftManagedClusterPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Service generated FQDN for OpenShift API server.
func (o OpenShiftManagedClusterPropertiesResponsePtrOutput) PublicHostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PublicHostname
	}).(pulumi.StringPtrOutput)
}

// Configuration for OpenShift router(s).
func (o OpenShiftManagedClusterPropertiesResponsePtrOutput) RouterProfiles() OpenShiftRouterProfileResponseArrayOutput {
	return o.ApplyT(func(v *OpenShiftManagedClusterPropertiesResponse) []OpenShiftRouterProfileResponse {
		if v == nil {
			return nil
		}
		return v.RouterProfiles
	}).(OpenShiftRouterProfileResponseArrayOutput)
}

// Represents an OpenShift router
type OpenShiftRouterProfile struct {
	// Name of the router profile.
	Name *string `pulumi:"name"`
}

// OpenShiftRouterProfileInput is an input type that accepts OpenShiftRouterProfileArgs and OpenShiftRouterProfileOutput values.
// You can construct a concrete instance of `OpenShiftRouterProfileInput` via:
//
//          OpenShiftRouterProfileArgs{...}
type OpenShiftRouterProfileInput interface {
	pulumi.Input

	ToOpenShiftRouterProfileOutput() OpenShiftRouterProfileOutput
	ToOpenShiftRouterProfileOutputWithContext(context.Context) OpenShiftRouterProfileOutput
}

// Represents an OpenShift router
type OpenShiftRouterProfileArgs struct {
	// Name of the router profile.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (OpenShiftRouterProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftRouterProfile)(nil)).Elem()
}

func (i OpenShiftRouterProfileArgs) ToOpenShiftRouterProfileOutput() OpenShiftRouterProfileOutput {
	return i.ToOpenShiftRouterProfileOutputWithContext(context.Background())
}

func (i OpenShiftRouterProfileArgs) ToOpenShiftRouterProfileOutputWithContext(ctx context.Context) OpenShiftRouterProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftRouterProfileOutput)
}

// OpenShiftRouterProfileArrayInput is an input type that accepts OpenShiftRouterProfileArray and OpenShiftRouterProfileArrayOutput values.
// You can construct a concrete instance of `OpenShiftRouterProfileArrayInput` via:
//
//          OpenShiftRouterProfileArray{ OpenShiftRouterProfileArgs{...} }
type OpenShiftRouterProfileArrayInput interface {
	pulumi.Input

	ToOpenShiftRouterProfileArrayOutput() OpenShiftRouterProfileArrayOutput
	ToOpenShiftRouterProfileArrayOutputWithContext(context.Context) OpenShiftRouterProfileArrayOutput
}

type OpenShiftRouterProfileArray []OpenShiftRouterProfileInput

func (OpenShiftRouterProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OpenShiftRouterProfile)(nil)).Elem()
}

func (i OpenShiftRouterProfileArray) ToOpenShiftRouterProfileArrayOutput() OpenShiftRouterProfileArrayOutput {
	return i.ToOpenShiftRouterProfileArrayOutputWithContext(context.Background())
}

func (i OpenShiftRouterProfileArray) ToOpenShiftRouterProfileArrayOutputWithContext(ctx context.Context) OpenShiftRouterProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftRouterProfileArrayOutput)
}

// Represents an OpenShift router
type OpenShiftRouterProfileOutput struct{ *pulumi.OutputState }

func (OpenShiftRouterProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftRouterProfile)(nil)).Elem()
}

func (o OpenShiftRouterProfileOutput) ToOpenShiftRouterProfileOutput() OpenShiftRouterProfileOutput {
	return o
}

func (o OpenShiftRouterProfileOutput) ToOpenShiftRouterProfileOutputWithContext(ctx context.Context) OpenShiftRouterProfileOutput {
	return o
}

// Name of the router profile.
func (o OpenShiftRouterProfileOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenShiftRouterProfile) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type OpenShiftRouterProfileArrayOutput struct{ *pulumi.OutputState }

func (OpenShiftRouterProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OpenShiftRouterProfile)(nil)).Elem()
}

func (o OpenShiftRouterProfileArrayOutput) ToOpenShiftRouterProfileArrayOutput() OpenShiftRouterProfileArrayOutput {
	return o
}

func (o OpenShiftRouterProfileArrayOutput) ToOpenShiftRouterProfileArrayOutputWithContext(ctx context.Context) OpenShiftRouterProfileArrayOutput {
	return o
}

func (o OpenShiftRouterProfileArrayOutput) Index(i pulumi.IntInput) OpenShiftRouterProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OpenShiftRouterProfile {
		return vs[0].([]OpenShiftRouterProfile)[vs[1].(int)]
	}).(OpenShiftRouterProfileOutput)
}

// Represents an OpenShift router
type OpenShiftRouterProfileResponse struct {
	// Auto-allocated FQDN for the OpenShift router.
	Fqdn string `pulumi:"fqdn"`
	// Name of the router profile.
	Name *string `pulumi:"name"`
	// DNS subdomain for OpenShift router.
	PublicSubdomain string `pulumi:"publicSubdomain"`
}

// OpenShiftRouterProfileResponseInput is an input type that accepts OpenShiftRouterProfileResponseArgs and OpenShiftRouterProfileResponseOutput values.
// You can construct a concrete instance of `OpenShiftRouterProfileResponseInput` via:
//
//          OpenShiftRouterProfileResponseArgs{...}
type OpenShiftRouterProfileResponseInput interface {
	pulumi.Input

	ToOpenShiftRouterProfileResponseOutput() OpenShiftRouterProfileResponseOutput
	ToOpenShiftRouterProfileResponseOutputWithContext(context.Context) OpenShiftRouterProfileResponseOutput
}

// Represents an OpenShift router
type OpenShiftRouterProfileResponseArgs struct {
	// Auto-allocated FQDN for the OpenShift router.
	Fqdn pulumi.StringInput `pulumi:"fqdn"`
	// Name of the router profile.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// DNS subdomain for OpenShift router.
	PublicSubdomain pulumi.StringInput `pulumi:"publicSubdomain"`
}

func (OpenShiftRouterProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftRouterProfileResponse)(nil)).Elem()
}

func (i OpenShiftRouterProfileResponseArgs) ToOpenShiftRouterProfileResponseOutput() OpenShiftRouterProfileResponseOutput {
	return i.ToOpenShiftRouterProfileResponseOutputWithContext(context.Background())
}

func (i OpenShiftRouterProfileResponseArgs) ToOpenShiftRouterProfileResponseOutputWithContext(ctx context.Context) OpenShiftRouterProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftRouterProfileResponseOutput)
}

// OpenShiftRouterProfileResponseArrayInput is an input type that accepts OpenShiftRouterProfileResponseArray and OpenShiftRouterProfileResponseArrayOutput values.
// You can construct a concrete instance of `OpenShiftRouterProfileResponseArrayInput` via:
//
//          OpenShiftRouterProfileResponseArray{ OpenShiftRouterProfileResponseArgs{...} }
type OpenShiftRouterProfileResponseArrayInput interface {
	pulumi.Input

	ToOpenShiftRouterProfileResponseArrayOutput() OpenShiftRouterProfileResponseArrayOutput
	ToOpenShiftRouterProfileResponseArrayOutputWithContext(context.Context) OpenShiftRouterProfileResponseArrayOutput
}

type OpenShiftRouterProfileResponseArray []OpenShiftRouterProfileResponseInput

func (OpenShiftRouterProfileResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OpenShiftRouterProfileResponse)(nil)).Elem()
}

func (i OpenShiftRouterProfileResponseArray) ToOpenShiftRouterProfileResponseArrayOutput() OpenShiftRouterProfileResponseArrayOutput {
	return i.ToOpenShiftRouterProfileResponseArrayOutputWithContext(context.Background())
}

func (i OpenShiftRouterProfileResponseArray) ToOpenShiftRouterProfileResponseArrayOutputWithContext(ctx context.Context) OpenShiftRouterProfileResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenShiftRouterProfileResponseArrayOutput)
}

// Represents an OpenShift router
type OpenShiftRouterProfileResponseOutput struct{ *pulumi.OutputState }

func (OpenShiftRouterProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenShiftRouterProfileResponse)(nil)).Elem()
}

func (o OpenShiftRouterProfileResponseOutput) ToOpenShiftRouterProfileResponseOutput() OpenShiftRouterProfileResponseOutput {
	return o
}

func (o OpenShiftRouterProfileResponseOutput) ToOpenShiftRouterProfileResponseOutputWithContext(ctx context.Context) OpenShiftRouterProfileResponseOutput {
	return o
}

// Auto-allocated FQDN for the OpenShift router.
func (o OpenShiftRouterProfileResponseOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v OpenShiftRouterProfileResponse) string { return v.Fqdn }).(pulumi.StringOutput)
}

// Name of the router profile.
func (o OpenShiftRouterProfileResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenShiftRouterProfileResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// DNS subdomain for OpenShift router.
func (o OpenShiftRouterProfileResponseOutput) PublicSubdomain() pulumi.StringOutput {
	return o.ApplyT(func(v OpenShiftRouterProfileResponse) string { return v.PublicSubdomain }).(pulumi.StringOutput)
}

type OpenShiftRouterProfileResponseArrayOutput struct{ *pulumi.OutputState }

func (OpenShiftRouterProfileResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OpenShiftRouterProfileResponse)(nil)).Elem()
}

func (o OpenShiftRouterProfileResponseArrayOutput) ToOpenShiftRouterProfileResponseArrayOutput() OpenShiftRouterProfileResponseArrayOutput {
	return o
}

func (o OpenShiftRouterProfileResponseArrayOutput) ToOpenShiftRouterProfileResponseArrayOutputWithContext(ctx context.Context) OpenShiftRouterProfileResponseArrayOutput {
	return o
}

func (o OpenShiftRouterProfileResponseArrayOutput) Index(i pulumi.IntInput) OpenShiftRouterProfileResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OpenShiftRouterProfileResponse {
		return vs[0].([]OpenShiftRouterProfileResponse)[vs[1].(int)]
	}).(OpenShiftRouterProfileResponseOutput)
}

// Private endpoint which a connection belongs to.
type PrivateEndpoint struct {
	// The resource Id for private endpoint
	Id *string `pulumi:"id"`
}

// PrivateEndpointInput is an input type that accepts PrivateEndpointArgs and PrivateEndpointOutput values.
// You can construct a concrete instance of `PrivateEndpointInput` via:
//
//          PrivateEndpointArgs{...}
type PrivateEndpointInput interface {
	pulumi.Input

	ToPrivateEndpointOutput() PrivateEndpointOutput
	ToPrivateEndpointOutputWithContext(context.Context) PrivateEndpointOutput
}

// Private endpoint which a connection belongs to.
type PrivateEndpointArgs struct {
	// The resource Id for private endpoint
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (PrivateEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpoint)(nil)).Elem()
}

func (i PrivateEndpointArgs) ToPrivateEndpointOutput() PrivateEndpointOutput {
	return i.ToPrivateEndpointOutputWithContext(context.Background())
}

func (i PrivateEndpointArgs) ToPrivateEndpointOutputWithContext(ctx context.Context) PrivateEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointOutput)
}

func (i PrivateEndpointArgs) ToPrivateEndpointPtrOutput() PrivateEndpointPtrOutput {
	return i.ToPrivateEndpointPtrOutputWithContext(context.Background())
}

func (i PrivateEndpointArgs) ToPrivateEndpointPtrOutputWithContext(ctx context.Context) PrivateEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointOutput).ToPrivateEndpointPtrOutputWithContext(ctx)
}

// PrivateEndpointPtrInput is an input type that accepts PrivateEndpointArgs, PrivateEndpointPtr and PrivateEndpointPtrOutput values.
// You can construct a concrete instance of `PrivateEndpointPtrInput` via:
//
//          PrivateEndpointArgs{...}
//
//  or:
//
//          nil
type PrivateEndpointPtrInput interface {
	pulumi.Input

	ToPrivateEndpointPtrOutput() PrivateEndpointPtrOutput
	ToPrivateEndpointPtrOutputWithContext(context.Context) PrivateEndpointPtrOutput
}

type privateEndpointPtrType PrivateEndpointArgs

func PrivateEndpointPtr(v *PrivateEndpointArgs) PrivateEndpointPtrInput {
	return (*privateEndpointPtrType)(v)
}

func (*privateEndpointPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpoint)(nil)).Elem()
}

func (i *privateEndpointPtrType) ToPrivateEndpointPtrOutput() PrivateEndpointPtrOutput {
	return i.ToPrivateEndpointPtrOutputWithContext(context.Background())
}

func (i *privateEndpointPtrType) ToPrivateEndpointPtrOutputWithContext(ctx context.Context) PrivateEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointPtrOutput)
}

// Private endpoint which a connection belongs to.
type PrivateEndpointOutput struct{ *pulumi.OutputState }

func (PrivateEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpoint)(nil)).Elem()
}

func (o PrivateEndpointOutput) ToPrivateEndpointOutput() PrivateEndpointOutput {
	return o
}

func (o PrivateEndpointOutput) ToPrivateEndpointOutputWithContext(ctx context.Context) PrivateEndpointOutput {
	return o
}

func (o PrivateEndpointOutput) ToPrivateEndpointPtrOutput() PrivateEndpointPtrOutput {
	return o.ToPrivateEndpointPtrOutputWithContext(context.Background())
}

func (o PrivateEndpointOutput) ToPrivateEndpointPtrOutputWithContext(ctx context.Context) PrivateEndpointPtrOutput {
	return o.ApplyT(func(v PrivateEndpoint) *PrivateEndpoint {
		return &v
	}).(PrivateEndpointPtrOutput)
}

// The resource Id for private endpoint
func (o PrivateEndpointOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpoint) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type PrivateEndpointPtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpoint)(nil)).Elem()
}

func (o PrivateEndpointPtrOutput) ToPrivateEndpointPtrOutput() PrivateEndpointPtrOutput {
	return o
}

func (o PrivateEndpointPtrOutput) ToPrivateEndpointPtrOutputWithContext(ctx context.Context) PrivateEndpointPtrOutput {
	return o
}

func (o PrivateEndpointPtrOutput) Elem() PrivateEndpointOutput {
	return o.ApplyT(func(v *PrivateEndpoint) PrivateEndpoint { return *v }).(PrivateEndpointOutput)
}

// The resource Id for private endpoint
func (o PrivateEndpointPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Properties of a private endpoint connection.
type PrivateEndpointConnectionProperties struct {
	// The resource of private endpoint.
	PrivateEndpoint *PrivateEndpoint `pulumi:"privateEndpoint"`
	// A collection of information about the state of the connection between service consumer and provider.
	PrivateLinkServiceConnectionState PrivateLinkServiceConnectionState `pulumi:"privateLinkServiceConnectionState"`
}

// PrivateEndpointConnectionPropertiesInput is an input type that accepts PrivateEndpointConnectionPropertiesArgs and PrivateEndpointConnectionPropertiesOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionPropertiesInput` via:
//
//          PrivateEndpointConnectionPropertiesArgs{...}
type PrivateEndpointConnectionPropertiesInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionPropertiesOutput() PrivateEndpointConnectionPropertiesOutput
	ToPrivateEndpointConnectionPropertiesOutputWithContext(context.Context) PrivateEndpointConnectionPropertiesOutput
}

// Properties of a private endpoint connection.
type PrivateEndpointConnectionPropertiesArgs struct {
	// The resource of private endpoint.
	PrivateEndpoint PrivateEndpointPtrInput `pulumi:"privateEndpoint"`
	// A collection of information about the state of the connection between service consumer and provider.
	PrivateLinkServiceConnectionState PrivateLinkServiceConnectionStateInput `pulumi:"privateLinkServiceConnectionState"`
}

func (PrivateEndpointConnectionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionProperties)(nil)).Elem()
}

func (i PrivateEndpointConnectionPropertiesArgs) ToPrivateEndpointConnectionPropertiesOutput() PrivateEndpointConnectionPropertiesOutput {
	return i.ToPrivateEndpointConnectionPropertiesOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionPropertiesArgs) ToPrivateEndpointConnectionPropertiesOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionPropertiesOutput)
}

func (i PrivateEndpointConnectionPropertiesArgs) ToPrivateEndpointConnectionPropertiesPtrOutput() PrivateEndpointConnectionPropertiesPtrOutput {
	return i.ToPrivateEndpointConnectionPropertiesPtrOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionPropertiesArgs) ToPrivateEndpointConnectionPropertiesPtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionPropertiesOutput).ToPrivateEndpointConnectionPropertiesPtrOutputWithContext(ctx)
}

// PrivateEndpointConnectionPropertiesPtrInput is an input type that accepts PrivateEndpointConnectionPropertiesArgs, PrivateEndpointConnectionPropertiesPtr and PrivateEndpointConnectionPropertiesPtrOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionPropertiesPtrInput` via:
//
//          PrivateEndpointConnectionPropertiesArgs{...}
//
//  or:
//
//          nil
type PrivateEndpointConnectionPropertiesPtrInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionPropertiesPtrOutput() PrivateEndpointConnectionPropertiesPtrOutput
	ToPrivateEndpointConnectionPropertiesPtrOutputWithContext(context.Context) PrivateEndpointConnectionPropertiesPtrOutput
}

type privateEndpointConnectionPropertiesPtrType PrivateEndpointConnectionPropertiesArgs

func PrivateEndpointConnectionPropertiesPtr(v *PrivateEndpointConnectionPropertiesArgs) PrivateEndpointConnectionPropertiesPtrInput {
	return (*privateEndpointConnectionPropertiesPtrType)(v)
}

func (*privateEndpointConnectionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointConnectionProperties)(nil)).Elem()
}

func (i *privateEndpointConnectionPropertiesPtrType) ToPrivateEndpointConnectionPropertiesPtrOutput() PrivateEndpointConnectionPropertiesPtrOutput {
	return i.ToPrivateEndpointConnectionPropertiesPtrOutputWithContext(context.Background())
}

func (i *privateEndpointConnectionPropertiesPtrType) ToPrivateEndpointConnectionPropertiesPtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionPropertiesPtrOutput)
}

// Properties of a private endpoint connection.
type PrivateEndpointConnectionPropertiesOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionProperties)(nil)).Elem()
}

func (o PrivateEndpointConnectionPropertiesOutput) ToPrivateEndpointConnectionPropertiesOutput() PrivateEndpointConnectionPropertiesOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesOutput) ToPrivateEndpointConnectionPropertiesOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesOutput) ToPrivateEndpointConnectionPropertiesPtrOutput() PrivateEndpointConnectionPropertiesPtrOutput {
	return o.ToPrivateEndpointConnectionPropertiesPtrOutputWithContext(context.Background())
}

func (o PrivateEndpointConnectionPropertiesOutput) ToPrivateEndpointConnectionPropertiesPtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesPtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionProperties) *PrivateEndpointConnectionProperties {
		return &v
	}).(PrivateEndpointConnectionPropertiesPtrOutput)
}

// The resource of private endpoint.
func (o PrivateEndpointConnectionPropertiesOutput) PrivateEndpoint() PrivateEndpointPtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionProperties) *PrivateEndpoint { return v.PrivateEndpoint }).(PrivateEndpointPtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
func (o PrivateEndpointConnectionPropertiesOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStateOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionProperties) PrivateLinkServiceConnectionState {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStateOutput)
}

type PrivateEndpointConnectionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointConnectionProperties)(nil)).Elem()
}

func (o PrivateEndpointConnectionPropertiesPtrOutput) ToPrivateEndpointConnectionPropertiesPtrOutput() PrivateEndpointConnectionPropertiesPtrOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesPtrOutput) ToPrivateEndpointConnectionPropertiesPtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesPtrOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesPtrOutput) Elem() PrivateEndpointConnectionPropertiesOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionProperties) PrivateEndpointConnectionProperties { return *v }).(PrivateEndpointConnectionPropertiesOutput)
}

// The resource of private endpoint.
func (o PrivateEndpointConnectionPropertiesPtrOutput) PrivateEndpoint() PrivateEndpointPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionProperties) *PrivateEndpoint {
		if v == nil {
			return nil
		}
		return v.PrivateEndpoint
	}).(PrivateEndpointPtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
func (o PrivateEndpointConnectionPropertiesPtrOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStatePtrOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionProperties) *PrivateLinkServiceConnectionState {
		if v == nil {
			return nil
		}
		return &v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStatePtrOutput)
}

// Properties of a private endpoint connection.
type PrivateEndpointConnectionPropertiesResponse struct {
	// The resource of private endpoint.
	PrivateEndpoint *PrivateEndpointResponse `pulumi:"privateEndpoint"`
	// A collection of information about the state of the connection between service consumer and provider.
	PrivateLinkServiceConnectionState PrivateLinkServiceConnectionStateResponse `pulumi:"privateLinkServiceConnectionState"`
	// The current provisioning state.
	ProvisioningState string `pulumi:"provisioningState"`
}

// PrivateEndpointConnectionPropertiesResponseInput is an input type that accepts PrivateEndpointConnectionPropertiesResponseArgs and PrivateEndpointConnectionPropertiesResponseOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionPropertiesResponseInput` via:
//
//          PrivateEndpointConnectionPropertiesResponseArgs{...}
type PrivateEndpointConnectionPropertiesResponseInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionPropertiesResponseOutput() PrivateEndpointConnectionPropertiesResponseOutput
	ToPrivateEndpointConnectionPropertiesResponseOutputWithContext(context.Context) PrivateEndpointConnectionPropertiesResponseOutput
}

// Properties of a private endpoint connection.
type PrivateEndpointConnectionPropertiesResponseArgs struct {
	// The resource of private endpoint.
	PrivateEndpoint PrivateEndpointResponsePtrInput `pulumi:"privateEndpoint"`
	// A collection of information about the state of the connection between service consumer and provider.
	PrivateLinkServiceConnectionState PrivateLinkServiceConnectionStateResponseInput `pulumi:"privateLinkServiceConnectionState"`
	// The current provisioning state.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
}

func (PrivateEndpointConnectionPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionPropertiesResponse)(nil)).Elem()
}

func (i PrivateEndpointConnectionPropertiesResponseArgs) ToPrivateEndpointConnectionPropertiesResponseOutput() PrivateEndpointConnectionPropertiesResponseOutput {
	return i.ToPrivateEndpointConnectionPropertiesResponseOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionPropertiesResponseArgs) ToPrivateEndpointConnectionPropertiesResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionPropertiesResponseOutput)
}

func (i PrivateEndpointConnectionPropertiesResponseArgs) ToPrivateEndpointConnectionPropertiesResponsePtrOutput() PrivateEndpointConnectionPropertiesResponsePtrOutput {
	return i.ToPrivateEndpointConnectionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionPropertiesResponseArgs) ToPrivateEndpointConnectionPropertiesResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionPropertiesResponseOutput).ToPrivateEndpointConnectionPropertiesResponsePtrOutputWithContext(ctx)
}

// PrivateEndpointConnectionPropertiesResponsePtrInput is an input type that accepts PrivateEndpointConnectionPropertiesResponseArgs, PrivateEndpointConnectionPropertiesResponsePtr and PrivateEndpointConnectionPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionPropertiesResponsePtrInput` via:
//
//          PrivateEndpointConnectionPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type PrivateEndpointConnectionPropertiesResponsePtrInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionPropertiesResponsePtrOutput() PrivateEndpointConnectionPropertiesResponsePtrOutput
	ToPrivateEndpointConnectionPropertiesResponsePtrOutputWithContext(context.Context) PrivateEndpointConnectionPropertiesResponsePtrOutput
}

type privateEndpointConnectionPropertiesResponsePtrType PrivateEndpointConnectionPropertiesResponseArgs

func PrivateEndpointConnectionPropertiesResponsePtr(v *PrivateEndpointConnectionPropertiesResponseArgs) PrivateEndpointConnectionPropertiesResponsePtrInput {
	return (*privateEndpointConnectionPropertiesResponsePtrType)(v)
}

func (*privateEndpointConnectionPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointConnectionPropertiesResponse)(nil)).Elem()
}

func (i *privateEndpointConnectionPropertiesResponsePtrType) ToPrivateEndpointConnectionPropertiesResponsePtrOutput() PrivateEndpointConnectionPropertiesResponsePtrOutput {
	return i.ToPrivateEndpointConnectionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *privateEndpointConnectionPropertiesResponsePtrType) ToPrivateEndpointConnectionPropertiesResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionPropertiesResponsePtrOutput)
}

// Properties of a private endpoint connection.
type PrivateEndpointConnectionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionPropertiesResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionPropertiesResponseOutput) ToPrivateEndpointConnectionPropertiesResponseOutput() PrivateEndpointConnectionPropertiesResponseOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesResponseOutput) ToPrivateEndpointConnectionPropertiesResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesResponseOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesResponseOutput) ToPrivateEndpointConnectionPropertiesResponsePtrOutput() PrivateEndpointConnectionPropertiesResponsePtrOutput {
	return o.ToPrivateEndpointConnectionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o PrivateEndpointConnectionPropertiesResponseOutput) ToPrivateEndpointConnectionPropertiesResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionPropertiesResponse) *PrivateEndpointConnectionPropertiesResponse {
		return &v
	}).(PrivateEndpointConnectionPropertiesResponsePtrOutput)
}

// The resource of private endpoint.
func (o PrivateEndpointConnectionPropertiesResponseOutput) PrivateEndpoint() PrivateEndpointResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionPropertiesResponse) *PrivateEndpointResponse { return v.PrivateEndpoint }).(PrivateEndpointResponsePtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
func (o PrivateEndpointConnectionPropertiesResponseOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStateResponseOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionPropertiesResponse) PrivateLinkServiceConnectionStateResponse {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStateResponseOutput)
}

// The current provisioning state.
func (o PrivateEndpointConnectionPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type PrivateEndpointConnectionPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointConnectionPropertiesResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionPropertiesResponsePtrOutput) ToPrivateEndpointConnectionPropertiesResponsePtrOutput() PrivateEndpointConnectionPropertiesResponsePtrOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesResponsePtrOutput) ToPrivateEndpointConnectionPropertiesResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesResponsePtrOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesResponsePtrOutput) Elem() PrivateEndpointConnectionPropertiesResponseOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionPropertiesResponse) PrivateEndpointConnectionPropertiesResponse {
		return *v
	}).(PrivateEndpointConnectionPropertiesResponseOutput)
}

// The resource of private endpoint.
func (o PrivateEndpointConnectionPropertiesResponsePtrOutput) PrivateEndpoint() PrivateEndpointResponsePtrOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionPropertiesResponse) *PrivateEndpointResponse {
		if v == nil {
			return nil
		}
		return v.PrivateEndpoint
	}).(PrivateEndpointResponsePtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
func (o PrivateEndpointConnectionPropertiesResponsePtrOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionPropertiesResponse) *PrivateLinkServiceConnectionStateResponse {
		if v == nil {
			return nil
		}
		return &v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStateResponsePtrOutput)
}

// The current provisioning state.
func (o PrivateEndpointConnectionPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Private endpoint which a connection belongs to.
type PrivateEndpointResponse struct {
	// The resource Id for private endpoint
	Id *string `pulumi:"id"`
}

// PrivateEndpointResponseInput is an input type that accepts PrivateEndpointResponseArgs and PrivateEndpointResponseOutput values.
// You can construct a concrete instance of `PrivateEndpointResponseInput` via:
//
//          PrivateEndpointResponseArgs{...}
type PrivateEndpointResponseInput interface {
	pulumi.Input

	ToPrivateEndpointResponseOutput() PrivateEndpointResponseOutput
	ToPrivateEndpointResponseOutputWithContext(context.Context) PrivateEndpointResponseOutput
}

// Private endpoint which a connection belongs to.
type PrivateEndpointResponseArgs struct {
	// The resource Id for private endpoint
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (PrivateEndpointResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointResponse)(nil)).Elem()
}

func (i PrivateEndpointResponseArgs) ToPrivateEndpointResponseOutput() PrivateEndpointResponseOutput {
	return i.ToPrivateEndpointResponseOutputWithContext(context.Background())
}

func (i PrivateEndpointResponseArgs) ToPrivateEndpointResponseOutputWithContext(ctx context.Context) PrivateEndpointResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointResponseOutput)
}

func (i PrivateEndpointResponseArgs) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return i.ToPrivateEndpointResponsePtrOutputWithContext(context.Background())
}

func (i PrivateEndpointResponseArgs) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointResponseOutput).ToPrivateEndpointResponsePtrOutputWithContext(ctx)
}

// PrivateEndpointResponsePtrInput is an input type that accepts PrivateEndpointResponseArgs, PrivateEndpointResponsePtr and PrivateEndpointResponsePtrOutput values.
// You can construct a concrete instance of `PrivateEndpointResponsePtrInput` via:
//
//          PrivateEndpointResponseArgs{...}
//
//  or:
//
//          nil
type PrivateEndpointResponsePtrInput interface {
	pulumi.Input

	ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput
	ToPrivateEndpointResponsePtrOutputWithContext(context.Context) PrivateEndpointResponsePtrOutput
}

type privateEndpointResponsePtrType PrivateEndpointResponseArgs

func PrivateEndpointResponsePtr(v *PrivateEndpointResponseArgs) PrivateEndpointResponsePtrInput {
	return (*privateEndpointResponsePtrType)(v)
}

func (*privateEndpointResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointResponse)(nil)).Elem()
}

func (i *privateEndpointResponsePtrType) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return i.ToPrivateEndpointResponsePtrOutputWithContext(context.Background())
}

func (i *privateEndpointResponsePtrType) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointResponsePtrOutput)
}

// Private endpoint which a connection belongs to.
type PrivateEndpointResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutput() PrivateEndpointResponseOutput {
	return o
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutputWithContext(ctx context.Context) PrivateEndpointResponseOutput {
	return o
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return o.ToPrivateEndpointResponsePtrOutputWithContext(context.Background())
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) *PrivateEndpointResponse {
		return &v
	}).(PrivateEndpointResponsePtrOutput)
}

// The resource Id for private endpoint
func (o PrivateEndpointResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type PrivateEndpointResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) Elem() PrivateEndpointResponseOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) PrivateEndpointResponse { return *v }).(PrivateEndpointResponseOutput)
}

// The resource Id for private endpoint
func (o PrivateEndpointResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The state of a private link service connection.
type PrivateLinkServiceConnectionState struct {
	// The private link service connection description.
	Description *string `pulumi:"description"`
	// The private link service connection status.
	Status *string `pulumi:"status"`
}

// PrivateLinkServiceConnectionStateInput is an input type that accepts PrivateLinkServiceConnectionStateArgs and PrivateLinkServiceConnectionStateOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStateInput` via:
//
//          PrivateLinkServiceConnectionStateArgs{...}
type PrivateLinkServiceConnectionStateInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput
	ToPrivateLinkServiceConnectionStateOutputWithContext(context.Context) PrivateLinkServiceConnectionStateOutput
}

// The state of a private link service connection.
type PrivateLinkServiceConnectionStateArgs struct {
	// The private link service connection description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The private link service connection status.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (PrivateLinkServiceConnectionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return i.ToPrivateLinkServiceConnectionStateOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateOutput)
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return i.ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateOutput).ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx)
}

// PrivateLinkServiceConnectionStatePtrInput is an input type that accepts PrivateLinkServiceConnectionStateArgs, PrivateLinkServiceConnectionStatePtr and PrivateLinkServiceConnectionStatePtrOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStatePtrInput` via:
//
//          PrivateLinkServiceConnectionStateArgs{...}
//
//  or:
//
//          nil
type PrivateLinkServiceConnectionStatePtrInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput
	ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Context) PrivateLinkServiceConnectionStatePtrOutput
}

type privateLinkServiceConnectionStatePtrType PrivateLinkServiceConnectionStateArgs

func PrivateLinkServiceConnectionStatePtr(v *PrivateLinkServiceConnectionStateArgs) PrivateLinkServiceConnectionStatePtrInput {
	return (*privateLinkServiceConnectionStatePtrType)(v)
}

func (*privateLinkServiceConnectionStatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (i *privateLinkServiceConnectionStatePtrType) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return i.ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (i *privateLinkServiceConnectionStatePtrType) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStatePtrOutput)
}

// The state of a private link service connection.
type PrivateLinkServiceConnectionStateOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return o.ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *PrivateLinkServiceConnectionState {
		return &v
	}).(PrivateLinkServiceConnectionStatePtrOutput)
}

// The private link service connection description.
func (o PrivateLinkServiceConnectionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The private link service connection status.
func (o PrivateLinkServiceConnectionStateOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type PrivateLinkServiceConnectionStatePtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStatePtrOutput) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStatePtrOutput) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStatePtrOutput) Elem() PrivateLinkServiceConnectionStateOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) PrivateLinkServiceConnectionState { return *v }).(PrivateLinkServiceConnectionStateOutput)
}

// The private link service connection description.
func (o PrivateLinkServiceConnectionStatePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The private link service connection status.
func (o PrivateLinkServiceConnectionStatePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The state of a private link service connection.
type PrivateLinkServiceConnectionStateResponse struct {
	// The private link service connection description.
	Description *string `pulumi:"description"`
	// The private link service connection status.
	Status *string `pulumi:"status"`
}

// PrivateLinkServiceConnectionStateResponseInput is an input type that accepts PrivateLinkServiceConnectionStateResponseArgs and PrivateLinkServiceConnectionStateResponseOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStateResponseInput` via:
//
//          PrivateLinkServiceConnectionStateResponseArgs{...}
type PrivateLinkServiceConnectionStateResponseInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStateResponseOutput() PrivateLinkServiceConnectionStateResponseOutput
	ToPrivateLinkServiceConnectionStateResponseOutputWithContext(context.Context) PrivateLinkServiceConnectionStateResponseOutput
}

// The state of a private link service connection.
type PrivateLinkServiceConnectionStateResponseArgs struct {
	// The private link service connection description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The private link service connection status.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (PrivateLinkServiceConnectionStateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (i PrivateLinkServiceConnectionStateResponseArgs) ToPrivateLinkServiceConnectionStateResponseOutput() PrivateLinkServiceConnectionStateResponseOutput {
	return i.ToPrivateLinkServiceConnectionStateResponseOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateResponseArgs) ToPrivateLinkServiceConnectionStateResponseOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateResponseOutput)
}

func (i PrivateLinkServiceConnectionStateResponseArgs) ToPrivateLinkServiceConnectionStateResponsePtrOutput() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return i.ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateResponseArgs) ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateResponseOutput).ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(ctx)
}

// PrivateLinkServiceConnectionStateResponsePtrInput is an input type that accepts PrivateLinkServiceConnectionStateResponseArgs, PrivateLinkServiceConnectionStateResponsePtr and PrivateLinkServiceConnectionStateResponsePtrOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStateResponsePtrInput` via:
//
//          PrivateLinkServiceConnectionStateResponseArgs{...}
//
//  or:
//
//          nil
type PrivateLinkServiceConnectionStateResponsePtrInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStateResponsePtrOutput() PrivateLinkServiceConnectionStateResponsePtrOutput
	ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(context.Context) PrivateLinkServiceConnectionStateResponsePtrOutput
}

type privateLinkServiceConnectionStateResponsePtrType PrivateLinkServiceConnectionStateResponseArgs

func PrivateLinkServiceConnectionStateResponsePtr(v *PrivateLinkServiceConnectionStateResponseArgs) PrivateLinkServiceConnectionStateResponsePtrInput {
	return (*privateLinkServiceConnectionStateResponsePtrType)(v)
}

func (*privateLinkServiceConnectionStateResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (i *privateLinkServiceConnectionStateResponsePtrType) ToPrivateLinkServiceConnectionStateResponsePtrOutput() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return i.ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(context.Background())
}

func (i *privateLinkServiceConnectionStateResponsePtrType) ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateResponsePtrOutput)
}

// The state of a private link service connection.
type PrivateLinkServiceConnectionStateResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutput() PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutput() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o.ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(context.Background())
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *PrivateLinkServiceConnectionStateResponse {
		return &v
	}).(PrivateLinkServiceConnectionStateResponsePtrOutput)
}

// The private link service connection description.
func (o PrivateLinkServiceConnectionStateResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The private link service connection status.
func (o PrivateLinkServiceConnectionStateResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type PrivateLinkServiceConnectionStateResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutput() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Elem() PrivateLinkServiceConnectionStateResponseOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) PrivateLinkServiceConnectionStateResponse {
		return *v
	}).(PrivateLinkServiceConnectionStateResponseOutput)
}

// The private link service connection description.
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The private link service connection status.
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Used for establishing the purchase context of any 3rd Party artifact through MarketPlace.
type PurchasePlan struct {
	// The plan ID.
	Name *string `pulumi:"name"`
	// Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
	Product *string `pulumi:"product"`
	// The promotion code.
	PromotionCode *string `pulumi:"promotionCode"`
	// The plan ID.
	Publisher *string `pulumi:"publisher"`
}

// PurchasePlanInput is an input type that accepts PurchasePlanArgs and PurchasePlanOutput values.
// You can construct a concrete instance of `PurchasePlanInput` via:
//
//          PurchasePlanArgs{...}
type PurchasePlanInput interface {
	pulumi.Input

	ToPurchasePlanOutput() PurchasePlanOutput
	ToPurchasePlanOutputWithContext(context.Context) PurchasePlanOutput
}

// Used for establishing the purchase context of any 3rd Party artifact through MarketPlace.
type PurchasePlanArgs struct {
	// The plan ID.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
	Product pulumi.StringPtrInput `pulumi:"product"`
	// The promotion code.
	PromotionCode pulumi.StringPtrInput `pulumi:"promotionCode"`
	// The plan ID.
	Publisher pulumi.StringPtrInput `pulumi:"publisher"`
}

func (PurchasePlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PurchasePlan)(nil)).Elem()
}

func (i PurchasePlanArgs) ToPurchasePlanOutput() PurchasePlanOutput {
	return i.ToPurchasePlanOutputWithContext(context.Background())
}

func (i PurchasePlanArgs) ToPurchasePlanOutputWithContext(ctx context.Context) PurchasePlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PurchasePlanOutput)
}

func (i PurchasePlanArgs) ToPurchasePlanPtrOutput() PurchasePlanPtrOutput {
	return i.ToPurchasePlanPtrOutputWithContext(context.Background())
}

func (i PurchasePlanArgs) ToPurchasePlanPtrOutputWithContext(ctx context.Context) PurchasePlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PurchasePlanOutput).ToPurchasePlanPtrOutputWithContext(ctx)
}

// PurchasePlanPtrInput is an input type that accepts PurchasePlanArgs, PurchasePlanPtr and PurchasePlanPtrOutput values.
// You can construct a concrete instance of `PurchasePlanPtrInput` via:
//
//          PurchasePlanArgs{...}
//
//  or:
//
//          nil
type PurchasePlanPtrInput interface {
	pulumi.Input

	ToPurchasePlanPtrOutput() PurchasePlanPtrOutput
	ToPurchasePlanPtrOutputWithContext(context.Context) PurchasePlanPtrOutput
}

type purchasePlanPtrType PurchasePlanArgs

func PurchasePlanPtr(v *PurchasePlanArgs) PurchasePlanPtrInput {
	return (*purchasePlanPtrType)(v)
}

func (*purchasePlanPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PurchasePlan)(nil)).Elem()
}

func (i *purchasePlanPtrType) ToPurchasePlanPtrOutput() PurchasePlanPtrOutput {
	return i.ToPurchasePlanPtrOutputWithContext(context.Background())
}

func (i *purchasePlanPtrType) ToPurchasePlanPtrOutputWithContext(ctx context.Context) PurchasePlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PurchasePlanPtrOutput)
}

// Used for establishing the purchase context of any 3rd Party artifact through MarketPlace.
type PurchasePlanOutput struct{ *pulumi.OutputState }

func (PurchasePlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PurchasePlan)(nil)).Elem()
}

func (o PurchasePlanOutput) ToPurchasePlanOutput() PurchasePlanOutput {
	return o
}

func (o PurchasePlanOutput) ToPurchasePlanOutputWithContext(ctx context.Context) PurchasePlanOutput {
	return o
}

func (o PurchasePlanOutput) ToPurchasePlanPtrOutput() PurchasePlanPtrOutput {
	return o.ToPurchasePlanPtrOutputWithContext(context.Background())
}

func (o PurchasePlanOutput) ToPurchasePlanPtrOutputWithContext(ctx context.Context) PurchasePlanPtrOutput {
	return o.ApplyT(func(v PurchasePlan) *PurchasePlan {
		return &v
	}).(PurchasePlanPtrOutput)
}

// The plan ID.
func (o PurchasePlanOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PurchasePlan) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
func (o PurchasePlanOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PurchasePlan) *string { return v.Product }).(pulumi.StringPtrOutput)
}

// The promotion code.
func (o PurchasePlanOutput) PromotionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PurchasePlan) *string { return v.PromotionCode }).(pulumi.StringPtrOutput)
}

// The plan ID.
func (o PurchasePlanOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PurchasePlan) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

type PurchasePlanPtrOutput struct{ *pulumi.OutputState }

func (PurchasePlanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PurchasePlan)(nil)).Elem()
}

func (o PurchasePlanPtrOutput) ToPurchasePlanPtrOutput() PurchasePlanPtrOutput {
	return o
}

func (o PurchasePlanPtrOutput) ToPurchasePlanPtrOutputWithContext(ctx context.Context) PurchasePlanPtrOutput {
	return o
}

func (o PurchasePlanPtrOutput) Elem() PurchasePlanOutput {
	return o.ApplyT(func(v *PurchasePlan) PurchasePlan { return *v }).(PurchasePlanOutput)
}

// The plan ID.
func (o PurchasePlanPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PurchasePlan) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
func (o PurchasePlanPtrOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PurchasePlan) *string {
		if v == nil {
			return nil
		}
		return v.Product
	}).(pulumi.StringPtrOutput)
}

// The promotion code.
func (o PurchasePlanPtrOutput) PromotionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PurchasePlan) *string {
		if v == nil {
			return nil
		}
		return v.PromotionCode
	}).(pulumi.StringPtrOutput)
}

// The plan ID.
func (o PurchasePlanPtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PurchasePlan) *string {
		if v == nil {
			return nil
		}
		return v.Publisher
	}).(pulumi.StringPtrOutput)
}

// Used for establishing the purchase context of any 3rd Party artifact through MarketPlace.
type PurchasePlanResponse struct {
	// The plan ID.
	Name *string `pulumi:"name"`
	// Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
	Product *string `pulumi:"product"`
	// The promotion code.
	PromotionCode *string `pulumi:"promotionCode"`
	// The plan ID.
	Publisher *string `pulumi:"publisher"`
}

// PurchasePlanResponseInput is an input type that accepts PurchasePlanResponseArgs and PurchasePlanResponseOutput values.
// You can construct a concrete instance of `PurchasePlanResponseInput` via:
//
//          PurchasePlanResponseArgs{...}
type PurchasePlanResponseInput interface {
	pulumi.Input

	ToPurchasePlanResponseOutput() PurchasePlanResponseOutput
	ToPurchasePlanResponseOutputWithContext(context.Context) PurchasePlanResponseOutput
}

// Used for establishing the purchase context of any 3rd Party artifact through MarketPlace.
type PurchasePlanResponseArgs struct {
	// The plan ID.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
	Product pulumi.StringPtrInput `pulumi:"product"`
	// The promotion code.
	PromotionCode pulumi.StringPtrInput `pulumi:"promotionCode"`
	// The plan ID.
	Publisher pulumi.StringPtrInput `pulumi:"publisher"`
}

func (PurchasePlanResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PurchasePlanResponse)(nil)).Elem()
}

func (i PurchasePlanResponseArgs) ToPurchasePlanResponseOutput() PurchasePlanResponseOutput {
	return i.ToPurchasePlanResponseOutputWithContext(context.Background())
}

func (i PurchasePlanResponseArgs) ToPurchasePlanResponseOutputWithContext(ctx context.Context) PurchasePlanResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PurchasePlanResponseOutput)
}

func (i PurchasePlanResponseArgs) ToPurchasePlanResponsePtrOutput() PurchasePlanResponsePtrOutput {
	return i.ToPurchasePlanResponsePtrOutputWithContext(context.Background())
}

func (i PurchasePlanResponseArgs) ToPurchasePlanResponsePtrOutputWithContext(ctx context.Context) PurchasePlanResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PurchasePlanResponseOutput).ToPurchasePlanResponsePtrOutputWithContext(ctx)
}

// PurchasePlanResponsePtrInput is an input type that accepts PurchasePlanResponseArgs, PurchasePlanResponsePtr and PurchasePlanResponsePtrOutput values.
// You can construct a concrete instance of `PurchasePlanResponsePtrInput` via:
//
//          PurchasePlanResponseArgs{...}
//
//  or:
//
//          nil
type PurchasePlanResponsePtrInput interface {
	pulumi.Input

	ToPurchasePlanResponsePtrOutput() PurchasePlanResponsePtrOutput
	ToPurchasePlanResponsePtrOutputWithContext(context.Context) PurchasePlanResponsePtrOutput
}

type purchasePlanResponsePtrType PurchasePlanResponseArgs

func PurchasePlanResponsePtr(v *PurchasePlanResponseArgs) PurchasePlanResponsePtrInput {
	return (*purchasePlanResponsePtrType)(v)
}

func (*purchasePlanResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PurchasePlanResponse)(nil)).Elem()
}

func (i *purchasePlanResponsePtrType) ToPurchasePlanResponsePtrOutput() PurchasePlanResponsePtrOutput {
	return i.ToPurchasePlanResponsePtrOutputWithContext(context.Background())
}

func (i *purchasePlanResponsePtrType) ToPurchasePlanResponsePtrOutputWithContext(ctx context.Context) PurchasePlanResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PurchasePlanResponsePtrOutput)
}

// Used for establishing the purchase context of any 3rd Party artifact through MarketPlace.
type PurchasePlanResponseOutput struct{ *pulumi.OutputState }

func (PurchasePlanResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PurchasePlanResponse)(nil)).Elem()
}

func (o PurchasePlanResponseOutput) ToPurchasePlanResponseOutput() PurchasePlanResponseOutput {
	return o
}

func (o PurchasePlanResponseOutput) ToPurchasePlanResponseOutputWithContext(ctx context.Context) PurchasePlanResponseOutput {
	return o
}

func (o PurchasePlanResponseOutput) ToPurchasePlanResponsePtrOutput() PurchasePlanResponsePtrOutput {
	return o.ToPurchasePlanResponsePtrOutputWithContext(context.Background())
}

func (o PurchasePlanResponseOutput) ToPurchasePlanResponsePtrOutputWithContext(ctx context.Context) PurchasePlanResponsePtrOutput {
	return o.ApplyT(func(v PurchasePlanResponse) *PurchasePlanResponse {
		return &v
	}).(PurchasePlanResponsePtrOutput)
}

// The plan ID.
func (o PurchasePlanResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PurchasePlanResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
func (o PurchasePlanResponseOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PurchasePlanResponse) *string { return v.Product }).(pulumi.StringPtrOutput)
}

// The promotion code.
func (o PurchasePlanResponseOutput) PromotionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PurchasePlanResponse) *string { return v.PromotionCode }).(pulumi.StringPtrOutput)
}

// The plan ID.
func (o PurchasePlanResponseOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PurchasePlanResponse) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

type PurchasePlanResponsePtrOutput struct{ *pulumi.OutputState }

func (PurchasePlanResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PurchasePlanResponse)(nil)).Elem()
}

func (o PurchasePlanResponsePtrOutput) ToPurchasePlanResponsePtrOutput() PurchasePlanResponsePtrOutput {
	return o
}

func (o PurchasePlanResponsePtrOutput) ToPurchasePlanResponsePtrOutputWithContext(ctx context.Context) PurchasePlanResponsePtrOutput {
	return o
}

func (o PurchasePlanResponsePtrOutput) Elem() PurchasePlanResponseOutput {
	return o.ApplyT(func(v *PurchasePlanResponse) PurchasePlanResponse { return *v }).(PurchasePlanResponseOutput)
}

// The plan ID.
func (o PurchasePlanResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PurchasePlanResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
func (o PurchasePlanResponsePtrOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PurchasePlanResponse) *string {
		if v == nil {
			return nil
		}
		return v.Product
	}).(pulumi.StringPtrOutput)
}

// The promotion code.
func (o PurchasePlanResponsePtrOutput) PromotionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PurchasePlanResponse) *string {
		if v == nil {
			return nil
		}
		return v.PromotionCode
	}).(pulumi.StringPtrOutput)
}

// The plan ID.
func (o PurchasePlanResponsePtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PurchasePlanResponse) *string {
		if v == nil {
			return nil
		}
		return v.Publisher
	}).(pulumi.StringPtrOutput)
}

// A reference to an Azure resource.
type ResourceReference struct {
	// The fully qualified Azure resource id.
	Id *string `pulumi:"id"`
}

// ResourceReferenceInput is an input type that accepts ResourceReferenceArgs and ResourceReferenceOutput values.
// You can construct a concrete instance of `ResourceReferenceInput` via:
//
//          ResourceReferenceArgs{...}
type ResourceReferenceInput interface {
	pulumi.Input

	ToResourceReferenceOutput() ResourceReferenceOutput
	ToResourceReferenceOutputWithContext(context.Context) ResourceReferenceOutput
}

// A reference to an Azure resource.
type ResourceReferenceArgs struct {
	// The fully qualified Azure resource id.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ResourceReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceReference)(nil)).Elem()
}

func (i ResourceReferenceArgs) ToResourceReferenceOutput() ResourceReferenceOutput {
	return i.ToResourceReferenceOutputWithContext(context.Background())
}

func (i ResourceReferenceArgs) ToResourceReferenceOutputWithContext(ctx context.Context) ResourceReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceReferenceOutput)
}

// ResourceReferenceArrayInput is an input type that accepts ResourceReferenceArray and ResourceReferenceArrayOutput values.
// You can construct a concrete instance of `ResourceReferenceArrayInput` via:
//
//          ResourceReferenceArray{ ResourceReferenceArgs{...} }
type ResourceReferenceArrayInput interface {
	pulumi.Input

	ToResourceReferenceArrayOutput() ResourceReferenceArrayOutput
	ToResourceReferenceArrayOutputWithContext(context.Context) ResourceReferenceArrayOutput
}

type ResourceReferenceArray []ResourceReferenceInput

func (ResourceReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceReference)(nil)).Elem()
}

func (i ResourceReferenceArray) ToResourceReferenceArrayOutput() ResourceReferenceArrayOutput {
	return i.ToResourceReferenceArrayOutputWithContext(context.Background())
}

func (i ResourceReferenceArray) ToResourceReferenceArrayOutputWithContext(ctx context.Context) ResourceReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceReferenceArrayOutput)
}

// A reference to an Azure resource.
type ResourceReferenceOutput struct{ *pulumi.OutputState }

func (ResourceReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceReference)(nil)).Elem()
}

func (o ResourceReferenceOutput) ToResourceReferenceOutput() ResourceReferenceOutput {
	return o
}

func (o ResourceReferenceOutput) ToResourceReferenceOutputWithContext(ctx context.Context) ResourceReferenceOutput {
	return o
}

// The fully qualified Azure resource id.
func (o ResourceReferenceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceReference) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ResourceReferenceArrayOutput struct{ *pulumi.OutputState }

func (ResourceReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceReference)(nil)).Elem()
}

func (o ResourceReferenceArrayOutput) ToResourceReferenceArrayOutput() ResourceReferenceArrayOutput {
	return o
}

func (o ResourceReferenceArrayOutput) ToResourceReferenceArrayOutputWithContext(ctx context.Context) ResourceReferenceArrayOutput {
	return o
}

func (o ResourceReferenceArrayOutput) Index(i pulumi.IntInput) ResourceReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceReference {
		return vs[0].([]ResourceReference)[vs[1].(int)]
	}).(ResourceReferenceOutput)
}

// A reference to an Azure resource.
type ResourceReferenceResponse struct {
	// The fully qualified Azure resource id.
	Id *string `pulumi:"id"`
}

// ResourceReferenceResponseInput is an input type that accepts ResourceReferenceResponseArgs and ResourceReferenceResponseOutput values.
// You can construct a concrete instance of `ResourceReferenceResponseInput` via:
//
//          ResourceReferenceResponseArgs{...}
type ResourceReferenceResponseInput interface {
	pulumi.Input

	ToResourceReferenceResponseOutput() ResourceReferenceResponseOutput
	ToResourceReferenceResponseOutputWithContext(context.Context) ResourceReferenceResponseOutput
}

// A reference to an Azure resource.
type ResourceReferenceResponseArgs struct {
	// The fully qualified Azure resource id.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ResourceReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceReferenceResponse)(nil)).Elem()
}

func (i ResourceReferenceResponseArgs) ToResourceReferenceResponseOutput() ResourceReferenceResponseOutput {
	return i.ToResourceReferenceResponseOutputWithContext(context.Background())
}

func (i ResourceReferenceResponseArgs) ToResourceReferenceResponseOutputWithContext(ctx context.Context) ResourceReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceReferenceResponseOutput)
}

// ResourceReferenceResponseArrayInput is an input type that accepts ResourceReferenceResponseArray and ResourceReferenceResponseArrayOutput values.
// You can construct a concrete instance of `ResourceReferenceResponseArrayInput` via:
//
//          ResourceReferenceResponseArray{ ResourceReferenceResponseArgs{...} }
type ResourceReferenceResponseArrayInput interface {
	pulumi.Input

	ToResourceReferenceResponseArrayOutput() ResourceReferenceResponseArrayOutput
	ToResourceReferenceResponseArrayOutputWithContext(context.Context) ResourceReferenceResponseArrayOutput
}

type ResourceReferenceResponseArray []ResourceReferenceResponseInput

func (ResourceReferenceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceReferenceResponse)(nil)).Elem()
}

func (i ResourceReferenceResponseArray) ToResourceReferenceResponseArrayOutput() ResourceReferenceResponseArrayOutput {
	return i.ToResourceReferenceResponseArrayOutputWithContext(context.Background())
}

func (i ResourceReferenceResponseArray) ToResourceReferenceResponseArrayOutputWithContext(ctx context.Context) ResourceReferenceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceReferenceResponseArrayOutput)
}

// A reference to an Azure resource.
type ResourceReferenceResponseOutput struct{ *pulumi.OutputState }

func (ResourceReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceReferenceResponse)(nil)).Elem()
}

func (o ResourceReferenceResponseOutput) ToResourceReferenceResponseOutput() ResourceReferenceResponseOutput {
	return o
}

func (o ResourceReferenceResponseOutput) ToResourceReferenceResponseOutputWithContext(ctx context.Context) ResourceReferenceResponseOutput {
	return o
}

// The fully qualified Azure resource id.
func (o ResourceReferenceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceReferenceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ResourceReferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (ResourceReferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceReferenceResponse)(nil)).Elem()
}

func (o ResourceReferenceResponseArrayOutput) ToResourceReferenceResponseArrayOutput() ResourceReferenceResponseArrayOutput {
	return o
}

func (o ResourceReferenceResponseArrayOutput) ToResourceReferenceResponseArrayOutputWithContext(ctx context.Context) ResourceReferenceResponseArrayOutput {
	return o
}

func (o ResourceReferenceResponseArrayOutput) Index(i pulumi.IntInput) ResourceReferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceReferenceResponse {
		return vs[0].([]ResourceReferenceResponse)[vs[1].(int)]
	}).(ResourceReferenceResponseOutput)
}

// SpotMaxPrice to be used to specify the maximum price you are willing to pay in US Dollars. Possible values are any decimal value greater than zero or -1 which indicates default price to be up-to on-demand.
type SpotMaxPrice struct {
}

// SpotMaxPriceInput is an input type that accepts SpotMaxPriceArgs and SpotMaxPriceOutput values.
// You can construct a concrete instance of `SpotMaxPriceInput` via:
//
//          SpotMaxPriceArgs{...}
type SpotMaxPriceInput interface {
	pulumi.Input

	ToSpotMaxPriceOutput() SpotMaxPriceOutput
	ToSpotMaxPriceOutputWithContext(context.Context) SpotMaxPriceOutput
}

// SpotMaxPrice to be used to specify the maximum price you are willing to pay in US Dollars. Possible values are any decimal value greater than zero or -1 which indicates default price to be up-to on-demand.
type SpotMaxPriceArgs struct {
}

func (SpotMaxPriceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotMaxPrice)(nil)).Elem()
}

func (i SpotMaxPriceArgs) ToSpotMaxPriceOutput() SpotMaxPriceOutput {
	return i.ToSpotMaxPriceOutputWithContext(context.Background())
}

func (i SpotMaxPriceArgs) ToSpotMaxPriceOutputWithContext(ctx context.Context) SpotMaxPriceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotMaxPriceOutput)
}

func (i SpotMaxPriceArgs) ToSpotMaxPricePtrOutput() SpotMaxPricePtrOutput {
	return i.ToSpotMaxPricePtrOutputWithContext(context.Background())
}

func (i SpotMaxPriceArgs) ToSpotMaxPricePtrOutputWithContext(ctx context.Context) SpotMaxPricePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotMaxPriceOutput).ToSpotMaxPricePtrOutputWithContext(ctx)
}

// SpotMaxPricePtrInput is an input type that accepts SpotMaxPriceArgs, SpotMaxPricePtr and SpotMaxPricePtrOutput values.
// You can construct a concrete instance of `SpotMaxPricePtrInput` via:
//
//          SpotMaxPriceArgs{...}
//
//  or:
//
//          nil
type SpotMaxPricePtrInput interface {
	pulumi.Input

	ToSpotMaxPricePtrOutput() SpotMaxPricePtrOutput
	ToSpotMaxPricePtrOutputWithContext(context.Context) SpotMaxPricePtrOutput
}

type spotMaxPricePtrType SpotMaxPriceArgs

func SpotMaxPricePtr(v *SpotMaxPriceArgs) SpotMaxPricePtrInput {
	return (*spotMaxPricePtrType)(v)
}

func (*spotMaxPricePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpotMaxPrice)(nil)).Elem()
}

func (i *spotMaxPricePtrType) ToSpotMaxPricePtrOutput() SpotMaxPricePtrOutput {
	return i.ToSpotMaxPricePtrOutputWithContext(context.Background())
}

func (i *spotMaxPricePtrType) ToSpotMaxPricePtrOutputWithContext(ctx context.Context) SpotMaxPricePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotMaxPricePtrOutput)
}

// SpotMaxPrice to be used to specify the maximum price you are willing to pay in US Dollars. Possible values are any decimal value greater than zero or -1 which indicates default price to be up-to on-demand.
type SpotMaxPriceOutput struct{ *pulumi.OutputState }

func (SpotMaxPriceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotMaxPrice)(nil)).Elem()
}

func (o SpotMaxPriceOutput) ToSpotMaxPriceOutput() SpotMaxPriceOutput {
	return o
}

func (o SpotMaxPriceOutput) ToSpotMaxPriceOutputWithContext(ctx context.Context) SpotMaxPriceOutput {
	return o
}

func (o SpotMaxPriceOutput) ToSpotMaxPricePtrOutput() SpotMaxPricePtrOutput {
	return o.ToSpotMaxPricePtrOutputWithContext(context.Background())
}

func (o SpotMaxPriceOutput) ToSpotMaxPricePtrOutputWithContext(ctx context.Context) SpotMaxPricePtrOutput {
	return o.ApplyT(func(v SpotMaxPrice) *SpotMaxPrice {
		return &v
	}).(SpotMaxPricePtrOutput)
}

type SpotMaxPricePtrOutput struct{ *pulumi.OutputState }

func (SpotMaxPricePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpotMaxPrice)(nil)).Elem()
}

func (o SpotMaxPricePtrOutput) ToSpotMaxPricePtrOutput() SpotMaxPricePtrOutput {
	return o
}

func (o SpotMaxPricePtrOutput) ToSpotMaxPricePtrOutputWithContext(ctx context.Context) SpotMaxPricePtrOutput {
	return o
}

func (o SpotMaxPricePtrOutput) Elem() SpotMaxPriceOutput {
	return o.ApplyT(func(v *SpotMaxPrice) SpotMaxPrice { return *v }).(SpotMaxPriceOutput)
}

// SpotMaxPrice to be used to specify the maximum price you are willing to pay in US Dollars. Possible values are any decimal value greater than zero or -1 which indicates default price to be up-to on-demand.
type SpotMaxPriceResponse struct {
}

// SpotMaxPriceResponseInput is an input type that accepts SpotMaxPriceResponseArgs and SpotMaxPriceResponseOutput values.
// You can construct a concrete instance of `SpotMaxPriceResponseInput` via:
//
//          SpotMaxPriceResponseArgs{...}
type SpotMaxPriceResponseInput interface {
	pulumi.Input

	ToSpotMaxPriceResponseOutput() SpotMaxPriceResponseOutput
	ToSpotMaxPriceResponseOutputWithContext(context.Context) SpotMaxPriceResponseOutput
}

// SpotMaxPrice to be used to specify the maximum price you are willing to pay in US Dollars. Possible values are any decimal value greater than zero or -1 which indicates default price to be up-to on-demand.
type SpotMaxPriceResponseArgs struct {
}

func (SpotMaxPriceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotMaxPriceResponse)(nil)).Elem()
}

func (i SpotMaxPriceResponseArgs) ToSpotMaxPriceResponseOutput() SpotMaxPriceResponseOutput {
	return i.ToSpotMaxPriceResponseOutputWithContext(context.Background())
}

func (i SpotMaxPriceResponseArgs) ToSpotMaxPriceResponseOutputWithContext(ctx context.Context) SpotMaxPriceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotMaxPriceResponseOutput)
}

func (i SpotMaxPriceResponseArgs) ToSpotMaxPriceResponsePtrOutput() SpotMaxPriceResponsePtrOutput {
	return i.ToSpotMaxPriceResponsePtrOutputWithContext(context.Background())
}

func (i SpotMaxPriceResponseArgs) ToSpotMaxPriceResponsePtrOutputWithContext(ctx context.Context) SpotMaxPriceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotMaxPriceResponseOutput).ToSpotMaxPriceResponsePtrOutputWithContext(ctx)
}

// SpotMaxPriceResponsePtrInput is an input type that accepts SpotMaxPriceResponseArgs, SpotMaxPriceResponsePtr and SpotMaxPriceResponsePtrOutput values.
// You can construct a concrete instance of `SpotMaxPriceResponsePtrInput` via:
//
//          SpotMaxPriceResponseArgs{...}
//
//  or:
//
//          nil
type SpotMaxPriceResponsePtrInput interface {
	pulumi.Input

	ToSpotMaxPriceResponsePtrOutput() SpotMaxPriceResponsePtrOutput
	ToSpotMaxPriceResponsePtrOutputWithContext(context.Context) SpotMaxPriceResponsePtrOutput
}

type spotMaxPriceResponsePtrType SpotMaxPriceResponseArgs

func SpotMaxPriceResponsePtr(v *SpotMaxPriceResponseArgs) SpotMaxPriceResponsePtrInput {
	return (*spotMaxPriceResponsePtrType)(v)
}

func (*spotMaxPriceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpotMaxPriceResponse)(nil)).Elem()
}

func (i *spotMaxPriceResponsePtrType) ToSpotMaxPriceResponsePtrOutput() SpotMaxPriceResponsePtrOutput {
	return i.ToSpotMaxPriceResponsePtrOutputWithContext(context.Background())
}

func (i *spotMaxPriceResponsePtrType) ToSpotMaxPriceResponsePtrOutputWithContext(ctx context.Context) SpotMaxPriceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotMaxPriceResponsePtrOutput)
}

// SpotMaxPrice to be used to specify the maximum price you are willing to pay in US Dollars. Possible values are any decimal value greater than zero or -1 which indicates default price to be up-to on-demand.
type SpotMaxPriceResponseOutput struct{ *pulumi.OutputState }

func (SpotMaxPriceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotMaxPriceResponse)(nil)).Elem()
}

func (o SpotMaxPriceResponseOutput) ToSpotMaxPriceResponseOutput() SpotMaxPriceResponseOutput {
	return o
}

func (o SpotMaxPriceResponseOutput) ToSpotMaxPriceResponseOutputWithContext(ctx context.Context) SpotMaxPriceResponseOutput {
	return o
}

func (o SpotMaxPriceResponseOutput) ToSpotMaxPriceResponsePtrOutput() SpotMaxPriceResponsePtrOutput {
	return o.ToSpotMaxPriceResponsePtrOutputWithContext(context.Background())
}

func (o SpotMaxPriceResponseOutput) ToSpotMaxPriceResponsePtrOutputWithContext(ctx context.Context) SpotMaxPriceResponsePtrOutput {
	return o.ApplyT(func(v SpotMaxPriceResponse) *SpotMaxPriceResponse {
		return &v
	}).(SpotMaxPriceResponsePtrOutput)
}

type SpotMaxPriceResponsePtrOutput struct{ *pulumi.OutputState }

func (SpotMaxPriceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpotMaxPriceResponse)(nil)).Elem()
}

func (o SpotMaxPriceResponsePtrOutput) ToSpotMaxPriceResponsePtrOutput() SpotMaxPriceResponsePtrOutput {
	return o
}

func (o SpotMaxPriceResponsePtrOutput) ToSpotMaxPriceResponsePtrOutputWithContext(ctx context.Context) SpotMaxPriceResponsePtrOutput {
	return o
}

func (o SpotMaxPriceResponsePtrOutput) Elem() SpotMaxPriceResponseOutput {
	return o.ApplyT(func(v *SpotMaxPriceResponse) SpotMaxPriceResponse { return *v }).(SpotMaxPriceResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(AccessProfileResponseOutput{})
	pulumi.RegisterOutputType(AgentPoolUpgradeSettingsOutput{})
	pulumi.RegisterOutputType(AgentPoolUpgradeSettingsPtrOutput{})
	pulumi.RegisterOutputType(AgentPoolUpgradeSettingsResponseOutput{})
	pulumi.RegisterOutputType(AgentPoolUpgradeSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(ContainerServiceTypeOutput{})
	pulumi.RegisterOutputType(ContainerServiceAgentPoolProfileOutput{})
	pulumi.RegisterOutputType(ContainerServiceAgentPoolProfileArrayOutput{})
	pulumi.RegisterOutputType(ContainerServiceAgentPoolProfileResponseOutput{})
	pulumi.RegisterOutputType(ContainerServiceAgentPoolProfileResponseArrayOutput{})
	pulumi.RegisterOutputType(ContainerServiceCustomProfileOutput{})
	pulumi.RegisterOutputType(ContainerServiceCustomProfilePtrOutput{})
	pulumi.RegisterOutputType(ContainerServiceCustomProfileResponseOutput{})
	pulumi.RegisterOutputType(ContainerServiceCustomProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(ContainerServiceDiagnosticsProfileOutput{})
	pulumi.RegisterOutputType(ContainerServiceDiagnosticsProfilePtrOutput{})
	pulumi.RegisterOutputType(ContainerServiceDiagnosticsProfileResponseOutput{})
	pulumi.RegisterOutputType(ContainerServiceDiagnosticsProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(ContainerServiceLinuxProfileOutput{})
	pulumi.RegisterOutputType(ContainerServiceLinuxProfilePtrOutput{})
	pulumi.RegisterOutputType(ContainerServiceLinuxProfileResponseOutput{})
	pulumi.RegisterOutputType(ContainerServiceLinuxProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(ContainerServiceMasterProfileOutput{})
	pulumi.RegisterOutputType(ContainerServiceMasterProfilePtrOutput{})
	pulumi.RegisterOutputType(ContainerServiceMasterProfileResponseOutput{})
	pulumi.RegisterOutputType(ContainerServiceMasterProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(ContainerServiceNetworkProfileOutput{})
	pulumi.RegisterOutputType(ContainerServiceNetworkProfilePtrOutput{})
	pulumi.RegisterOutputType(ContainerServiceNetworkProfileResponseOutput{})
	pulumi.RegisterOutputType(ContainerServiceNetworkProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(ContainerServiceOSDiskOutput{})
	pulumi.RegisterOutputType(ContainerServiceOSDiskPtrOutput{})
	pulumi.RegisterOutputType(ContainerServiceOSDiskResponseOutput{})
	pulumi.RegisterOutputType(ContainerServiceOSDiskResponsePtrOutput{})
	pulumi.RegisterOutputType(ContainerServiceOrchestratorProfileOutput{})
	pulumi.RegisterOutputType(ContainerServiceOrchestratorProfilePtrOutput{})
	pulumi.RegisterOutputType(ContainerServiceOrchestratorProfileResponseOutput{})
	pulumi.RegisterOutputType(ContainerServiceOrchestratorProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(ContainerServicePropertiesOutput{})
	pulumi.RegisterOutputType(ContainerServicePropertiesPtrOutput{})
	pulumi.RegisterOutputType(ContainerServicePropertiesResponseOutput{})
	pulumi.RegisterOutputType(ContainerServicePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ContainerServiceServicePrincipalProfileOutput{})
	pulumi.RegisterOutputType(ContainerServiceServicePrincipalProfilePtrOutput{})
	pulumi.RegisterOutputType(ContainerServiceServicePrincipalProfileResponseOutput{})
	pulumi.RegisterOutputType(ContainerServiceServicePrincipalProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(ContainerServiceSshConfigurationOutput{})
	pulumi.RegisterOutputType(ContainerServiceSshConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ContainerServiceSshConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ContainerServiceSshConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ContainerServiceSshPublicKeyOutput{})
	pulumi.RegisterOutputType(ContainerServiceSshPublicKeyArrayOutput{})
	pulumi.RegisterOutputType(ContainerServiceSshPublicKeyResponseOutput{})
	pulumi.RegisterOutputType(ContainerServiceSshPublicKeyResponseArrayOutput{})
	pulumi.RegisterOutputType(ContainerServiceVMDiagnosticsOutput{})
	pulumi.RegisterOutputType(ContainerServiceVMDiagnosticsPtrOutput{})
	pulumi.RegisterOutputType(ContainerServiceVMDiagnosticsResponseOutput{})
	pulumi.RegisterOutputType(ContainerServiceVMDiagnosticsResponsePtrOutput{})
	pulumi.RegisterOutputType(ContainerServiceWindowsProfileOutput{})
	pulumi.RegisterOutputType(ContainerServiceWindowsProfilePtrOutput{})
	pulumi.RegisterOutputType(ContainerServiceWindowsProfileResponseOutput{})
	pulumi.RegisterOutputType(ContainerServiceWindowsProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(CredentialResultResponseOutput{})
	pulumi.RegisterOutputType(CredentialResultResponseArrayOutput{})
	pulumi.RegisterOutputType(KeyVaultSecretRefOutput{})
	pulumi.RegisterOutputType(KeyVaultSecretRefPtrOutput{})
	pulumi.RegisterOutputType(KeyVaultSecretRefResponseOutput{})
	pulumi.RegisterOutputType(KeyVaultSecretRefResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterTypeOutput{})
	pulumi.RegisterOutputType(ManagedClusterAADProfileOutput{})
	pulumi.RegisterOutputType(ManagedClusterAADProfilePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterAADProfileResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterAADProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterAPIServerAccessProfileOutput{})
	pulumi.RegisterOutputType(ManagedClusterAPIServerAccessProfilePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterAPIServerAccessProfileResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterAPIServerAccessProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterAgentPoolTypeOutput{})
	pulumi.RegisterOutputType(ManagedClusterAgentPoolProfileOutput{})
	pulumi.RegisterOutputType(ManagedClusterAgentPoolProfileArrayOutput{})
	pulumi.RegisterOutputType(ManagedClusterAgentPoolProfilePropertiesOutput{})
	pulumi.RegisterOutputType(ManagedClusterAgentPoolProfilePropertiesPtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterAgentPoolProfilePropertiesResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterAgentPoolProfilePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterAgentPoolProfileResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterAgentPoolProfileResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagedClusterIdentityOutput{})
	pulumi.RegisterOutputType(ManagedClusterIdentityPtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterIdentityResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterLoadBalancerProfileOutput{})
	pulumi.RegisterOutputType(ManagedClusterLoadBalancerProfilePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterLoadBalancerProfilePropertiesOutput{})
	pulumi.RegisterOutputType(ManagedClusterLoadBalancerProfilePropertiesPtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterLoadBalancerProfileResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterLoadBalancerProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterLoadBalancerProfileResponsePropertiesOutput{})
	pulumi.RegisterOutputType(ManagedClusterLoadBalancerProfileResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterPrivateEndpointConnectionTypeOutput{})
	pulumi.RegisterOutputType(ManagedClusterPropertiesOutput{})
	pulumi.RegisterOutputType(ManagedClusterPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterPropertiesPropertiesOutput{})
	pulumi.RegisterOutputType(ManagedClusterPropertiesPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterPropertiesResponsePropertiesOutput{})
	pulumi.RegisterOutputType(ManagedClusterPropertiesResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterSKUOutput{})
	pulumi.RegisterOutputType(ManagedClusterSKUPtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterSKUResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterSKUResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterServicePrincipalProfileOutput{})
	pulumi.RegisterOutputType(ManagedClusterServicePrincipalProfilePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterServicePrincipalProfileResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterServicePrincipalProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterWindowsProfileOutput{})
	pulumi.RegisterOutputType(ManagedClusterWindowsProfilePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterWindowsProfileResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterWindowsProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkProfileOutput{})
	pulumi.RegisterOutputType(NetworkProfilePtrOutput{})
	pulumi.RegisterOutputType(NetworkProfileResponseOutput{})
	pulumi.RegisterOutputType(NetworkProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterTypeOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterAgentPoolProfileOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterAgentPoolProfileArrayOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterAgentPoolProfileResponseOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterAgentPoolProfileResponseArrayOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterAuthProfileOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterAuthProfilePtrOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterAuthProfileResponseOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterAuthProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterBaseIdentityProviderOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterBaseIdentityProviderPtrOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterBaseIdentityProviderResponseOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterBaseIdentityProviderResponsePtrOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterIdentityProviderOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterIdentityProviderArrayOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterIdentityProviderResponseOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterIdentityProviderResponseArrayOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterMasterPoolProfileOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterMasterPoolProfilePtrOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterMasterPoolProfileResponseOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterMasterPoolProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterPropertiesOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterPropertiesPtrOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterPropertiesResponseOutput{})
	pulumi.RegisterOutputType(OpenShiftManagedClusterPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(OpenShiftRouterProfileOutput{})
	pulumi.RegisterOutputType(OpenShiftRouterProfileArrayOutput{})
	pulumi.RegisterOutputType(OpenShiftRouterProfileResponseOutput{})
	pulumi.RegisterOutputType(OpenShiftRouterProfileResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointOutput{})
	pulumi.RegisterOutputType(PrivateEndpointPtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionPropertiesOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStatePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponseOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponsePtrOutput{})
	pulumi.RegisterOutputType(PurchasePlanOutput{})
	pulumi.RegisterOutputType(PurchasePlanPtrOutput{})
	pulumi.RegisterOutputType(PurchasePlanResponseOutput{})
	pulumi.RegisterOutputType(PurchasePlanResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceReferenceOutput{})
	pulumi.RegisterOutputType(ResourceReferenceArrayOutput{})
	pulumi.RegisterOutputType(ResourceReferenceResponseOutput{})
	pulumi.RegisterOutputType(ResourceReferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(SpotMaxPriceOutput{})
	pulumi.RegisterOutputType(SpotMaxPricePtrOutput{})
	pulumi.RegisterOutputType(SpotMaxPriceResponseOutput{})
	pulumi.RegisterOutputType(SpotMaxPriceResponsePtrOutput{})
}
