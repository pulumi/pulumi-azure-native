// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20180701

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Properties of the blob container, including Id, resource name, resource type, Etag.
type BlobContainerType struct {
	// Resource Etag.
	Etag string `pulumi:"etag"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Properties of the blob container.
	Properties ContainerPropertiesResponse `pulumi:"properties"`
	// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
	Type string `pulumi:"type"`
}

// BlobContainerTypeInput is an input type that accepts BlobContainerTypeArgs and BlobContainerTypeOutput values.
// You can construct a concrete instance of `BlobContainerTypeInput` via:
//
//          BlobContainerTypeArgs{...}
type BlobContainerTypeInput interface {
	pulumi.Input

	ToBlobContainerTypeOutput() BlobContainerTypeOutput
	ToBlobContainerTypeOutputWithContext(context.Context) BlobContainerTypeOutput
}

// Properties of the blob container, including Id, resource name, resource type, Etag.
type BlobContainerTypeArgs struct {
	// Resource Etag.
	Etag pulumi.StringInput `pulumi:"etag"`
	// The name of the resource
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of the blob container.
	Properties ContainerPropertiesResponseInput `pulumi:"properties"`
	// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
	Type pulumi.StringInput `pulumi:"type"`
}

func (BlobContainerTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobContainerType)(nil)).Elem()
}

func (i BlobContainerTypeArgs) ToBlobContainerTypeOutput() BlobContainerTypeOutput {
	return i.ToBlobContainerTypeOutputWithContext(context.Background())
}

func (i BlobContainerTypeArgs) ToBlobContainerTypeOutputWithContext(ctx context.Context) BlobContainerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobContainerTypeOutput)
}

// Properties of the blob container, including Id, resource name, resource type, Etag.
type BlobContainerTypeOutput struct{ *pulumi.OutputState }

func (BlobContainerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobContainerType)(nil)).Elem()
}

func (o BlobContainerTypeOutput) ToBlobContainerTypeOutput() BlobContainerTypeOutput {
	return o
}

func (o BlobContainerTypeOutput) ToBlobContainerTypeOutputWithContext(ctx context.Context) BlobContainerTypeOutput {
	return o
}

// Resource Etag.
func (o BlobContainerTypeOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v BlobContainerType) string { return v.Etag }).(pulumi.StringOutput)
}

// The name of the resource
func (o BlobContainerTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BlobContainerType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the blob container.
func (o BlobContainerTypeOutput) Properties() ContainerPropertiesResponseOutput {
	return o.ApplyT(func(v BlobContainerType) ContainerPropertiesResponse { return v.Properties }).(ContainerPropertiesResponseOutput)
}

// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
func (o BlobContainerTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BlobContainerType) string { return v.Type }).(pulumi.StringOutput)
}

// The ImmutabilityPolicy property of a blob container, including Id, resource name, resource type, Etag.
type BlobContainerImmutabilityPolicyType struct {
	// Resource Etag.
	Etag string `pulumi:"etag"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The properties of an ImmutabilityPolicy of a blob container.
	Properties ImmutabilityPolicyPropertyResponse `pulumi:"properties"`
	// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
	Type string `pulumi:"type"`
}

// BlobContainerImmutabilityPolicyTypeInput is an input type that accepts BlobContainerImmutabilityPolicyTypeArgs and BlobContainerImmutabilityPolicyTypeOutput values.
// You can construct a concrete instance of `BlobContainerImmutabilityPolicyTypeInput` via:
//
//          BlobContainerImmutabilityPolicyTypeArgs{...}
type BlobContainerImmutabilityPolicyTypeInput interface {
	pulumi.Input

	ToBlobContainerImmutabilityPolicyTypeOutput() BlobContainerImmutabilityPolicyTypeOutput
	ToBlobContainerImmutabilityPolicyTypeOutputWithContext(context.Context) BlobContainerImmutabilityPolicyTypeOutput
}

// The ImmutabilityPolicy property of a blob container, including Id, resource name, resource type, Etag.
type BlobContainerImmutabilityPolicyTypeArgs struct {
	// Resource Etag.
	Etag pulumi.StringInput `pulumi:"etag"`
	// The name of the resource
	Name pulumi.StringInput `pulumi:"name"`
	// The properties of an ImmutabilityPolicy of a blob container.
	Properties ImmutabilityPolicyPropertyResponseInput `pulumi:"properties"`
	// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
	Type pulumi.StringInput `pulumi:"type"`
}

func (BlobContainerImmutabilityPolicyTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobContainerImmutabilityPolicyType)(nil)).Elem()
}

func (i BlobContainerImmutabilityPolicyTypeArgs) ToBlobContainerImmutabilityPolicyTypeOutput() BlobContainerImmutabilityPolicyTypeOutput {
	return i.ToBlobContainerImmutabilityPolicyTypeOutputWithContext(context.Background())
}

func (i BlobContainerImmutabilityPolicyTypeArgs) ToBlobContainerImmutabilityPolicyTypeOutputWithContext(ctx context.Context) BlobContainerImmutabilityPolicyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobContainerImmutabilityPolicyTypeOutput)
}

// The ImmutabilityPolicy property of a blob container, including Id, resource name, resource type, Etag.
type BlobContainerImmutabilityPolicyTypeOutput struct{ *pulumi.OutputState }

func (BlobContainerImmutabilityPolicyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobContainerImmutabilityPolicyType)(nil)).Elem()
}

func (o BlobContainerImmutabilityPolicyTypeOutput) ToBlobContainerImmutabilityPolicyTypeOutput() BlobContainerImmutabilityPolicyTypeOutput {
	return o
}

func (o BlobContainerImmutabilityPolicyTypeOutput) ToBlobContainerImmutabilityPolicyTypeOutputWithContext(ctx context.Context) BlobContainerImmutabilityPolicyTypeOutput {
	return o
}

// Resource Etag.
func (o BlobContainerImmutabilityPolicyTypeOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v BlobContainerImmutabilityPolicyType) string { return v.Etag }).(pulumi.StringOutput)
}

// The name of the resource
func (o BlobContainerImmutabilityPolicyTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BlobContainerImmutabilityPolicyType) string { return v.Name }).(pulumi.StringOutput)
}

// The properties of an ImmutabilityPolicy of a blob container.
func (o BlobContainerImmutabilityPolicyTypeOutput) Properties() ImmutabilityPolicyPropertyResponseOutput {
	return o.ApplyT(func(v BlobContainerImmutabilityPolicyType) ImmutabilityPolicyPropertyResponse { return v.Properties }).(ImmutabilityPolicyPropertyResponseOutput)
}

// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
func (o BlobContainerImmutabilityPolicyTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BlobContainerImmutabilityPolicyType) string { return v.Type }).(pulumi.StringOutput)
}

// The properties of a container.
type ContainerProperties struct {
	// A name-value pair to associate with the container as metadata.
	Metadata map[string]string `pulumi:"metadata"`
	// Specifies whether data in the container may be accessed publicly and the level of access.
	PublicAccess *string `pulumi:"publicAccess"`
}

// ContainerPropertiesInput is an input type that accepts ContainerPropertiesArgs and ContainerPropertiesOutput values.
// You can construct a concrete instance of `ContainerPropertiesInput` via:
//
//          ContainerPropertiesArgs{...}
type ContainerPropertiesInput interface {
	pulumi.Input

	ToContainerPropertiesOutput() ContainerPropertiesOutput
	ToContainerPropertiesOutputWithContext(context.Context) ContainerPropertiesOutput
}

// The properties of a container.
type ContainerPropertiesArgs struct {
	// A name-value pair to associate with the container as metadata.
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
	// Specifies whether data in the container may be accessed publicly and the level of access.
	PublicAccess pulumi.StringPtrInput `pulumi:"publicAccess"`
}

func (ContainerPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerProperties)(nil)).Elem()
}

func (i ContainerPropertiesArgs) ToContainerPropertiesOutput() ContainerPropertiesOutput {
	return i.ToContainerPropertiesOutputWithContext(context.Background())
}

func (i ContainerPropertiesArgs) ToContainerPropertiesOutputWithContext(ctx context.Context) ContainerPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerPropertiesOutput)
}

func (i ContainerPropertiesArgs) ToContainerPropertiesPtrOutput() ContainerPropertiesPtrOutput {
	return i.ToContainerPropertiesPtrOutputWithContext(context.Background())
}

func (i ContainerPropertiesArgs) ToContainerPropertiesPtrOutputWithContext(ctx context.Context) ContainerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerPropertiesOutput).ToContainerPropertiesPtrOutputWithContext(ctx)
}

// ContainerPropertiesPtrInput is an input type that accepts ContainerPropertiesArgs, ContainerPropertiesPtr and ContainerPropertiesPtrOutput values.
// You can construct a concrete instance of `ContainerPropertiesPtrInput` via:
//
//          ContainerPropertiesArgs{...}
//
//  or:
//
//          nil
type ContainerPropertiesPtrInput interface {
	pulumi.Input

	ToContainerPropertiesPtrOutput() ContainerPropertiesPtrOutput
	ToContainerPropertiesPtrOutputWithContext(context.Context) ContainerPropertiesPtrOutput
}

type containerPropertiesPtrType ContainerPropertiesArgs

func ContainerPropertiesPtr(v *ContainerPropertiesArgs) ContainerPropertiesPtrInput {
	return (*containerPropertiesPtrType)(v)
}

func (*containerPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerProperties)(nil)).Elem()
}

func (i *containerPropertiesPtrType) ToContainerPropertiesPtrOutput() ContainerPropertiesPtrOutput {
	return i.ToContainerPropertiesPtrOutputWithContext(context.Background())
}

func (i *containerPropertiesPtrType) ToContainerPropertiesPtrOutputWithContext(ctx context.Context) ContainerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerPropertiesPtrOutput)
}

// The properties of a container.
type ContainerPropertiesOutput struct{ *pulumi.OutputState }

func (ContainerPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerProperties)(nil)).Elem()
}

func (o ContainerPropertiesOutput) ToContainerPropertiesOutput() ContainerPropertiesOutput {
	return o
}

func (o ContainerPropertiesOutput) ToContainerPropertiesOutputWithContext(ctx context.Context) ContainerPropertiesOutput {
	return o
}

func (o ContainerPropertiesOutput) ToContainerPropertiesPtrOutput() ContainerPropertiesPtrOutput {
	return o.ToContainerPropertiesPtrOutputWithContext(context.Background())
}

func (o ContainerPropertiesOutput) ToContainerPropertiesPtrOutputWithContext(ctx context.Context) ContainerPropertiesPtrOutput {
	return o.ApplyT(func(v ContainerProperties) *ContainerProperties {
		return &v
	}).(ContainerPropertiesPtrOutput)
}

// A name-value pair to associate with the container as metadata.
func (o ContainerPropertiesOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v ContainerProperties) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// Specifies whether data in the container may be accessed publicly and the level of access.
func (o ContainerPropertiesOutput) PublicAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerProperties) *string { return v.PublicAccess }).(pulumi.StringPtrOutput)
}

type ContainerPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ContainerPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerProperties)(nil)).Elem()
}

func (o ContainerPropertiesPtrOutput) ToContainerPropertiesPtrOutput() ContainerPropertiesPtrOutput {
	return o
}

func (o ContainerPropertiesPtrOutput) ToContainerPropertiesPtrOutputWithContext(ctx context.Context) ContainerPropertiesPtrOutput {
	return o
}

func (o ContainerPropertiesPtrOutput) Elem() ContainerPropertiesOutput {
	return o.ApplyT(func(v *ContainerProperties) ContainerProperties { return *v }).(ContainerPropertiesOutput)
}

// A name-value pair to associate with the container as metadata.
func (o ContainerPropertiesPtrOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ContainerProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(pulumi.StringMapOutput)
}

// Specifies whether data in the container may be accessed publicly and the level of access.
func (o ContainerPropertiesPtrOutput) PublicAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicAccess
	}).(pulumi.StringPtrOutput)
}

// The properties of a container.
type ContainerPropertiesResponse struct {
	// The hasImmutabilityPolicy public property is set to true by SRP if ImmutabilityPolicy has been created for this container. The hasImmutabilityPolicy public property is set to false by SRP if ImmutabilityPolicy has not been created for this container.
	HasImmutabilityPolicy bool `pulumi:"hasImmutabilityPolicy"`
	// The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.
	HasLegalHold bool `pulumi:"hasLegalHold"`
	// The ImmutabilityPolicy property of the container.
	ImmutabilityPolicy ImmutabilityPolicyPropertiesResponse `pulumi:"immutabilityPolicy"`
	// Returns the date and time the container was last modified.
	LastModifiedTime string `pulumi:"lastModifiedTime"`
	// Specifies whether the lease on a container is of infinite or fixed duration, only when the container is leased.
	LeaseDuration string `pulumi:"leaseDuration"`
	// Lease state of the container.
	LeaseState string `pulumi:"leaseState"`
	// The lease status of the container.
	LeaseStatus string `pulumi:"leaseStatus"`
	// The LegalHold property of the container.
	LegalHold LegalHoldPropertiesResponse `pulumi:"legalHold"`
	// A name-value pair to associate with the container as metadata.
	Metadata map[string]string `pulumi:"metadata"`
	// Specifies whether data in the container may be accessed publicly and the level of access.
	PublicAccess *string `pulumi:"publicAccess"`
}

// ContainerPropertiesResponseInput is an input type that accepts ContainerPropertiesResponseArgs and ContainerPropertiesResponseOutput values.
// You can construct a concrete instance of `ContainerPropertiesResponseInput` via:
//
//          ContainerPropertiesResponseArgs{...}
type ContainerPropertiesResponseInput interface {
	pulumi.Input

	ToContainerPropertiesResponseOutput() ContainerPropertiesResponseOutput
	ToContainerPropertiesResponseOutputWithContext(context.Context) ContainerPropertiesResponseOutput
}

// The properties of a container.
type ContainerPropertiesResponseArgs struct {
	// The hasImmutabilityPolicy public property is set to true by SRP if ImmutabilityPolicy has been created for this container. The hasImmutabilityPolicy public property is set to false by SRP if ImmutabilityPolicy has not been created for this container.
	HasImmutabilityPolicy pulumi.BoolInput `pulumi:"hasImmutabilityPolicy"`
	// The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.
	HasLegalHold pulumi.BoolInput `pulumi:"hasLegalHold"`
	// The ImmutabilityPolicy property of the container.
	ImmutabilityPolicy ImmutabilityPolicyPropertiesResponseInput `pulumi:"immutabilityPolicy"`
	// Returns the date and time the container was last modified.
	LastModifiedTime pulumi.StringInput `pulumi:"lastModifiedTime"`
	// Specifies whether the lease on a container is of infinite or fixed duration, only when the container is leased.
	LeaseDuration pulumi.StringInput `pulumi:"leaseDuration"`
	// Lease state of the container.
	LeaseState pulumi.StringInput `pulumi:"leaseState"`
	// The lease status of the container.
	LeaseStatus pulumi.StringInput `pulumi:"leaseStatus"`
	// The LegalHold property of the container.
	LegalHold LegalHoldPropertiesResponseInput `pulumi:"legalHold"`
	// A name-value pair to associate with the container as metadata.
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
	// Specifies whether data in the container may be accessed publicly and the level of access.
	PublicAccess pulumi.StringPtrInput `pulumi:"publicAccess"`
}

func (ContainerPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerPropertiesResponse)(nil)).Elem()
}

func (i ContainerPropertiesResponseArgs) ToContainerPropertiesResponseOutput() ContainerPropertiesResponseOutput {
	return i.ToContainerPropertiesResponseOutputWithContext(context.Background())
}

func (i ContainerPropertiesResponseArgs) ToContainerPropertiesResponseOutputWithContext(ctx context.Context) ContainerPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerPropertiesResponseOutput)
}

func (i ContainerPropertiesResponseArgs) ToContainerPropertiesResponsePtrOutput() ContainerPropertiesResponsePtrOutput {
	return i.ToContainerPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ContainerPropertiesResponseArgs) ToContainerPropertiesResponsePtrOutputWithContext(ctx context.Context) ContainerPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerPropertiesResponseOutput).ToContainerPropertiesResponsePtrOutputWithContext(ctx)
}

// ContainerPropertiesResponsePtrInput is an input type that accepts ContainerPropertiesResponseArgs, ContainerPropertiesResponsePtr and ContainerPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ContainerPropertiesResponsePtrInput` via:
//
//          ContainerPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ContainerPropertiesResponsePtrInput interface {
	pulumi.Input

	ToContainerPropertiesResponsePtrOutput() ContainerPropertiesResponsePtrOutput
	ToContainerPropertiesResponsePtrOutputWithContext(context.Context) ContainerPropertiesResponsePtrOutput
}

type containerPropertiesResponsePtrType ContainerPropertiesResponseArgs

func ContainerPropertiesResponsePtr(v *ContainerPropertiesResponseArgs) ContainerPropertiesResponsePtrInput {
	return (*containerPropertiesResponsePtrType)(v)
}

func (*containerPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerPropertiesResponse)(nil)).Elem()
}

func (i *containerPropertiesResponsePtrType) ToContainerPropertiesResponsePtrOutput() ContainerPropertiesResponsePtrOutput {
	return i.ToContainerPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *containerPropertiesResponsePtrType) ToContainerPropertiesResponsePtrOutputWithContext(ctx context.Context) ContainerPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerPropertiesResponsePtrOutput)
}

// The properties of a container.
type ContainerPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ContainerPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerPropertiesResponse)(nil)).Elem()
}

func (o ContainerPropertiesResponseOutput) ToContainerPropertiesResponseOutput() ContainerPropertiesResponseOutput {
	return o
}

func (o ContainerPropertiesResponseOutput) ToContainerPropertiesResponseOutputWithContext(ctx context.Context) ContainerPropertiesResponseOutput {
	return o
}

func (o ContainerPropertiesResponseOutput) ToContainerPropertiesResponsePtrOutput() ContainerPropertiesResponsePtrOutput {
	return o.ToContainerPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ContainerPropertiesResponseOutput) ToContainerPropertiesResponsePtrOutputWithContext(ctx context.Context) ContainerPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ContainerPropertiesResponse) *ContainerPropertiesResponse {
		return &v
	}).(ContainerPropertiesResponsePtrOutput)
}

// The hasImmutabilityPolicy public property is set to true by SRP if ImmutabilityPolicy has been created for this container. The hasImmutabilityPolicy public property is set to false by SRP if ImmutabilityPolicy has not been created for this container.
func (o ContainerPropertiesResponseOutput) HasImmutabilityPolicy() pulumi.BoolOutput {
	return o.ApplyT(func(v ContainerPropertiesResponse) bool { return v.HasImmutabilityPolicy }).(pulumi.BoolOutput)
}

// The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.
func (o ContainerPropertiesResponseOutput) HasLegalHold() pulumi.BoolOutput {
	return o.ApplyT(func(v ContainerPropertiesResponse) bool { return v.HasLegalHold }).(pulumi.BoolOutput)
}

// The ImmutabilityPolicy property of the container.
func (o ContainerPropertiesResponseOutput) ImmutabilityPolicy() ImmutabilityPolicyPropertiesResponseOutput {
	return o.ApplyT(func(v ContainerPropertiesResponse) ImmutabilityPolicyPropertiesResponse { return v.ImmutabilityPolicy }).(ImmutabilityPolicyPropertiesResponseOutput)
}

// Returns the date and time the container was last modified.
func (o ContainerPropertiesResponseOutput) LastModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerPropertiesResponse) string { return v.LastModifiedTime }).(pulumi.StringOutput)
}

// Specifies whether the lease on a container is of infinite or fixed duration, only when the container is leased.
func (o ContainerPropertiesResponseOutput) LeaseDuration() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerPropertiesResponse) string { return v.LeaseDuration }).(pulumi.StringOutput)
}

// Lease state of the container.
func (o ContainerPropertiesResponseOutput) LeaseState() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerPropertiesResponse) string { return v.LeaseState }).(pulumi.StringOutput)
}

// The lease status of the container.
func (o ContainerPropertiesResponseOutput) LeaseStatus() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerPropertiesResponse) string { return v.LeaseStatus }).(pulumi.StringOutput)
}

// The LegalHold property of the container.
func (o ContainerPropertiesResponseOutput) LegalHold() LegalHoldPropertiesResponseOutput {
	return o.ApplyT(func(v ContainerPropertiesResponse) LegalHoldPropertiesResponse { return v.LegalHold }).(LegalHoldPropertiesResponseOutput)
}

// A name-value pair to associate with the container as metadata.
func (o ContainerPropertiesResponseOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v ContainerPropertiesResponse) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// Specifies whether data in the container may be accessed publicly and the level of access.
func (o ContainerPropertiesResponseOutput) PublicAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerPropertiesResponse) *string { return v.PublicAccess }).(pulumi.StringPtrOutput)
}

type ContainerPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ContainerPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerPropertiesResponse)(nil)).Elem()
}

func (o ContainerPropertiesResponsePtrOutput) ToContainerPropertiesResponsePtrOutput() ContainerPropertiesResponsePtrOutput {
	return o
}

func (o ContainerPropertiesResponsePtrOutput) ToContainerPropertiesResponsePtrOutputWithContext(ctx context.Context) ContainerPropertiesResponsePtrOutput {
	return o
}

func (o ContainerPropertiesResponsePtrOutput) Elem() ContainerPropertiesResponseOutput {
	return o.ApplyT(func(v *ContainerPropertiesResponse) ContainerPropertiesResponse { return *v }).(ContainerPropertiesResponseOutput)
}

// The hasImmutabilityPolicy public property is set to true by SRP if ImmutabilityPolicy has been created for this container. The hasImmutabilityPolicy public property is set to false by SRP if ImmutabilityPolicy has not been created for this container.
func (o ContainerPropertiesResponsePtrOutput) HasImmutabilityPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ContainerPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.HasImmutabilityPolicy
	}).(pulumi.BoolPtrOutput)
}

// The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.
func (o ContainerPropertiesResponsePtrOutput) HasLegalHold() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ContainerPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.HasLegalHold
	}).(pulumi.BoolPtrOutput)
}

// The ImmutabilityPolicy property of the container.
func (o ContainerPropertiesResponsePtrOutput) ImmutabilityPolicy() ImmutabilityPolicyPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *ContainerPropertiesResponse) *ImmutabilityPolicyPropertiesResponse {
		if v == nil {
			return nil
		}
		return &v.ImmutabilityPolicy
	}).(ImmutabilityPolicyPropertiesResponsePtrOutput)
}

// Returns the date and time the container was last modified.
func (o ContainerPropertiesResponsePtrOutput) LastModifiedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastModifiedTime
	}).(pulumi.StringPtrOutput)
}

// Specifies whether the lease on a container is of infinite or fixed duration, only when the container is leased.
func (o ContainerPropertiesResponsePtrOutput) LeaseDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LeaseDuration
	}).(pulumi.StringPtrOutput)
}

// Lease state of the container.
func (o ContainerPropertiesResponsePtrOutput) LeaseState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LeaseState
	}).(pulumi.StringPtrOutput)
}

// The lease status of the container.
func (o ContainerPropertiesResponsePtrOutput) LeaseStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LeaseStatus
	}).(pulumi.StringPtrOutput)
}

// The LegalHold property of the container.
func (o ContainerPropertiesResponsePtrOutput) LegalHold() LegalHoldPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *ContainerPropertiesResponse) *LegalHoldPropertiesResponse {
		if v == nil {
			return nil
		}
		return &v.LegalHold
	}).(LegalHoldPropertiesResponsePtrOutput)
}

// A name-value pair to associate with the container as metadata.
func (o ContainerPropertiesResponsePtrOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ContainerPropertiesResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(pulumi.StringMapOutput)
}

// Specifies whether data in the container may be accessed publicly and the level of access.
func (o ContainerPropertiesResponsePtrOutput) PublicAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PublicAccess
	}).(pulumi.StringPtrOutput)
}

// The custom domain assigned to this storage account. This can be set via Update.
type CustomDomain struct {
	// Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.
	Name string `pulumi:"name"`
	// Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates.
	UseSubDomainName *bool `pulumi:"useSubDomainName"`
}

// CustomDomainInput is an input type that accepts CustomDomainArgs and CustomDomainOutput values.
// You can construct a concrete instance of `CustomDomainInput` via:
//
//          CustomDomainArgs{...}
type CustomDomainInput interface {
	pulumi.Input

	ToCustomDomainOutput() CustomDomainOutput
	ToCustomDomainOutputWithContext(context.Context) CustomDomainOutput
}

// The custom domain assigned to this storage account. This can be set via Update.
type CustomDomainArgs struct {
	// Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.
	Name pulumi.StringInput `pulumi:"name"`
	// Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates.
	UseSubDomainName pulumi.BoolPtrInput `pulumi:"useSubDomainName"`
}

func (CustomDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDomain)(nil)).Elem()
}

func (i CustomDomainArgs) ToCustomDomainOutput() CustomDomainOutput {
	return i.ToCustomDomainOutputWithContext(context.Background())
}

func (i CustomDomainArgs) ToCustomDomainOutputWithContext(ctx context.Context) CustomDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainOutput)
}

func (i CustomDomainArgs) ToCustomDomainPtrOutput() CustomDomainPtrOutput {
	return i.ToCustomDomainPtrOutputWithContext(context.Background())
}

func (i CustomDomainArgs) ToCustomDomainPtrOutputWithContext(ctx context.Context) CustomDomainPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainOutput).ToCustomDomainPtrOutputWithContext(ctx)
}

// CustomDomainPtrInput is an input type that accepts CustomDomainArgs, CustomDomainPtr and CustomDomainPtrOutput values.
// You can construct a concrete instance of `CustomDomainPtrInput` via:
//
//          CustomDomainArgs{...}
//
//  or:
//
//          nil
type CustomDomainPtrInput interface {
	pulumi.Input

	ToCustomDomainPtrOutput() CustomDomainPtrOutput
	ToCustomDomainPtrOutputWithContext(context.Context) CustomDomainPtrOutput
}

type customDomainPtrType CustomDomainArgs

func CustomDomainPtr(v *CustomDomainArgs) CustomDomainPtrInput {
	return (*customDomainPtrType)(v)
}

func (*customDomainPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomDomain)(nil)).Elem()
}

func (i *customDomainPtrType) ToCustomDomainPtrOutput() CustomDomainPtrOutput {
	return i.ToCustomDomainPtrOutputWithContext(context.Background())
}

func (i *customDomainPtrType) ToCustomDomainPtrOutputWithContext(ctx context.Context) CustomDomainPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainPtrOutput)
}

// The custom domain assigned to this storage account. This can be set via Update.
type CustomDomainOutput struct{ *pulumi.OutputState }

func (CustomDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDomain)(nil)).Elem()
}

func (o CustomDomainOutput) ToCustomDomainOutput() CustomDomainOutput {
	return o
}

func (o CustomDomainOutput) ToCustomDomainOutputWithContext(ctx context.Context) CustomDomainOutput {
	return o
}

func (o CustomDomainOutput) ToCustomDomainPtrOutput() CustomDomainPtrOutput {
	return o.ToCustomDomainPtrOutputWithContext(context.Background())
}

func (o CustomDomainOutput) ToCustomDomainPtrOutputWithContext(ctx context.Context) CustomDomainPtrOutput {
	return o.ApplyT(func(v CustomDomain) *CustomDomain {
		return &v
	}).(CustomDomainPtrOutput)
}

// Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.
func (o CustomDomainOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDomain) string { return v.Name }).(pulumi.StringOutput)
}

// Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates.
func (o CustomDomainOutput) UseSubDomainName() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomDomain) *bool { return v.UseSubDomainName }).(pulumi.BoolPtrOutput)
}

type CustomDomainPtrOutput struct{ *pulumi.OutputState }

func (CustomDomainPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomDomain)(nil)).Elem()
}

func (o CustomDomainPtrOutput) ToCustomDomainPtrOutput() CustomDomainPtrOutput {
	return o
}

func (o CustomDomainPtrOutput) ToCustomDomainPtrOutputWithContext(ctx context.Context) CustomDomainPtrOutput {
	return o
}

func (o CustomDomainPtrOutput) Elem() CustomDomainOutput {
	return o.ApplyT(func(v *CustomDomain) CustomDomain { return *v }).(CustomDomainOutput)
}

// Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.
func (o CustomDomainPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomDomain) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates.
func (o CustomDomainPtrOutput) UseSubDomainName() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CustomDomain) *bool {
		if v == nil {
			return nil
		}
		return v.UseSubDomainName
	}).(pulumi.BoolPtrOutput)
}

// The custom domain assigned to this storage account. This can be set via Update.
type CustomDomainResponse struct {
	// Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.
	Name string `pulumi:"name"`
	// Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates.
	UseSubDomainName *bool `pulumi:"useSubDomainName"`
}

// CustomDomainResponseInput is an input type that accepts CustomDomainResponseArgs and CustomDomainResponseOutput values.
// You can construct a concrete instance of `CustomDomainResponseInput` via:
//
//          CustomDomainResponseArgs{...}
type CustomDomainResponseInput interface {
	pulumi.Input

	ToCustomDomainResponseOutput() CustomDomainResponseOutput
	ToCustomDomainResponseOutputWithContext(context.Context) CustomDomainResponseOutput
}

// The custom domain assigned to this storage account. This can be set via Update.
type CustomDomainResponseArgs struct {
	// Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.
	Name pulumi.StringInput `pulumi:"name"`
	// Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates.
	UseSubDomainName pulumi.BoolPtrInput `pulumi:"useSubDomainName"`
}

func (CustomDomainResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDomainResponse)(nil)).Elem()
}

func (i CustomDomainResponseArgs) ToCustomDomainResponseOutput() CustomDomainResponseOutput {
	return i.ToCustomDomainResponseOutputWithContext(context.Background())
}

func (i CustomDomainResponseArgs) ToCustomDomainResponseOutputWithContext(ctx context.Context) CustomDomainResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainResponseOutput)
}

func (i CustomDomainResponseArgs) ToCustomDomainResponsePtrOutput() CustomDomainResponsePtrOutput {
	return i.ToCustomDomainResponsePtrOutputWithContext(context.Background())
}

func (i CustomDomainResponseArgs) ToCustomDomainResponsePtrOutputWithContext(ctx context.Context) CustomDomainResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainResponseOutput).ToCustomDomainResponsePtrOutputWithContext(ctx)
}

// CustomDomainResponsePtrInput is an input type that accepts CustomDomainResponseArgs, CustomDomainResponsePtr and CustomDomainResponsePtrOutput values.
// You can construct a concrete instance of `CustomDomainResponsePtrInput` via:
//
//          CustomDomainResponseArgs{...}
//
//  or:
//
//          nil
type CustomDomainResponsePtrInput interface {
	pulumi.Input

	ToCustomDomainResponsePtrOutput() CustomDomainResponsePtrOutput
	ToCustomDomainResponsePtrOutputWithContext(context.Context) CustomDomainResponsePtrOutput
}

type customDomainResponsePtrType CustomDomainResponseArgs

func CustomDomainResponsePtr(v *CustomDomainResponseArgs) CustomDomainResponsePtrInput {
	return (*customDomainResponsePtrType)(v)
}

func (*customDomainResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomDomainResponse)(nil)).Elem()
}

func (i *customDomainResponsePtrType) ToCustomDomainResponsePtrOutput() CustomDomainResponsePtrOutput {
	return i.ToCustomDomainResponsePtrOutputWithContext(context.Background())
}

func (i *customDomainResponsePtrType) ToCustomDomainResponsePtrOutputWithContext(ctx context.Context) CustomDomainResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainResponsePtrOutput)
}

// The custom domain assigned to this storage account. This can be set via Update.
type CustomDomainResponseOutput struct{ *pulumi.OutputState }

func (CustomDomainResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDomainResponse)(nil)).Elem()
}

func (o CustomDomainResponseOutput) ToCustomDomainResponseOutput() CustomDomainResponseOutput {
	return o
}

func (o CustomDomainResponseOutput) ToCustomDomainResponseOutputWithContext(ctx context.Context) CustomDomainResponseOutput {
	return o
}

func (o CustomDomainResponseOutput) ToCustomDomainResponsePtrOutput() CustomDomainResponsePtrOutput {
	return o.ToCustomDomainResponsePtrOutputWithContext(context.Background())
}

func (o CustomDomainResponseOutput) ToCustomDomainResponsePtrOutputWithContext(ctx context.Context) CustomDomainResponsePtrOutput {
	return o.ApplyT(func(v CustomDomainResponse) *CustomDomainResponse {
		return &v
	}).(CustomDomainResponsePtrOutput)
}

// Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.
func (o CustomDomainResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDomainResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates.
func (o CustomDomainResponseOutput) UseSubDomainName() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomDomainResponse) *bool { return v.UseSubDomainName }).(pulumi.BoolPtrOutput)
}

type CustomDomainResponsePtrOutput struct{ *pulumi.OutputState }

func (CustomDomainResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomDomainResponse)(nil)).Elem()
}

func (o CustomDomainResponsePtrOutput) ToCustomDomainResponsePtrOutput() CustomDomainResponsePtrOutput {
	return o
}

func (o CustomDomainResponsePtrOutput) ToCustomDomainResponsePtrOutputWithContext(ctx context.Context) CustomDomainResponsePtrOutput {
	return o
}

func (o CustomDomainResponsePtrOutput) Elem() CustomDomainResponseOutput {
	return o.ApplyT(func(v *CustomDomainResponse) CustomDomainResponse { return *v }).(CustomDomainResponseOutput)
}

// Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.
func (o CustomDomainResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomDomainResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates.
func (o CustomDomainResponsePtrOutput) UseSubDomainName() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CustomDomainResponse) *bool {
		if v == nil {
			return nil
		}
		return v.UseSubDomainName
	}).(pulumi.BoolPtrOutput)
}

// The encryption settings on the storage account.
type Encryption struct {
	// The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault
	KeySource string `pulumi:"keySource"`
	// Properties provided by key vault.
	KeyVaultProperties *KeyVaultProperties `pulumi:"keyVaultProperties"`
	// List of services which support encryption.
	Services *EncryptionServices `pulumi:"services"`
}

// EncryptionInput is an input type that accepts EncryptionArgs and EncryptionOutput values.
// You can construct a concrete instance of `EncryptionInput` via:
//
//          EncryptionArgs{...}
type EncryptionInput interface {
	pulumi.Input

	ToEncryptionOutput() EncryptionOutput
	ToEncryptionOutputWithContext(context.Context) EncryptionOutput
}

// The encryption settings on the storage account.
type EncryptionArgs struct {
	// The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault
	KeySource pulumi.StringInput `pulumi:"keySource"`
	// Properties provided by key vault.
	KeyVaultProperties KeyVaultPropertiesPtrInput `pulumi:"keyVaultProperties"`
	// List of services which support encryption.
	Services EncryptionServicesPtrInput `pulumi:"services"`
}

func (EncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Encryption)(nil)).Elem()
}

func (i EncryptionArgs) ToEncryptionOutput() EncryptionOutput {
	return i.ToEncryptionOutputWithContext(context.Background())
}

func (i EncryptionArgs) ToEncryptionOutputWithContext(ctx context.Context) EncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionOutput)
}

func (i EncryptionArgs) ToEncryptionPtrOutput() EncryptionPtrOutput {
	return i.ToEncryptionPtrOutputWithContext(context.Background())
}

func (i EncryptionArgs) ToEncryptionPtrOutputWithContext(ctx context.Context) EncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionOutput).ToEncryptionPtrOutputWithContext(ctx)
}

// EncryptionPtrInput is an input type that accepts EncryptionArgs, EncryptionPtr and EncryptionPtrOutput values.
// You can construct a concrete instance of `EncryptionPtrInput` via:
//
//          EncryptionArgs{...}
//
//  or:
//
//          nil
type EncryptionPtrInput interface {
	pulumi.Input

	ToEncryptionPtrOutput() EncryptionPtrOutput
	ToEncryptionPtrOutputWithContext(context.Context) EncryptionPtrOutput
}

type encryptionPtrType EncryptionArgs

func EncryptionPtr(v *EncryptionArgs) EncryptionPtrInput {
	return (*encryptionPtrType)(v)
}

func (*encryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Encryption)(nil)).Elem()
}

func (i *encryptionPtrType) ToEncryptionPtrOutput() EncryptionPtrOutput {
	return i.ToEncryptionPtrOutputWithContext(context.Background())
}

func (i *encryptionPtrType) ToEncryptionPtrOutputWithContext(ctx context.Context) EncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPtrOutput)
}

// The encryption settings on the storage account.
type EncryptionOutput struct{ *pulumi.OutputState }

func (EncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Encryption)(nil)).Elem()
}

func (o EncryptionOutput) ToEncryptionOutput() EncryptionOutput {
	return o
}

func (o EncryptionOutput) ToEncryptionOutputWithContext(ctx context.Context) EncryptionOutput {
	return o
}

func (o EncryptionOutput) ToEncryptionPtrOutput() EncryptionPtrOutput {
	return o.ToEncryptionPtrOutputWithContext(context.Background())
}

func (o EncryptionOutput) ToEncryptionPtrOutputWithContext(ctx context.Context) EncryptionPtrOutput {
	return o.ApplyT(func(v Encryption) *Encryption {
		return &v
	}).(EncryptionPtrOutput)
}

// The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault
func (o EncryptionOutput) KeySource() pulumi.StringOutput {
	return o.ApplyT(func(v Encryption) string { return v.KeySource }).(pulumi.StringOutput)
}

// Properties provided by key vault.
func (o EncryptionOutput) KeyVaultProperties() KeyVaultPropertiesPtrOutput {
	return o.ApplyT(func(v Encryption) *KeyVaultProperties { return v.KeyVaultProperties }).(KeyVaultPropertiesPtrOutput)
}

// List of services which support encryption.
func (o EncryptionOutput) Services() EncryptionServicesPtrOutput {
	return o.ApplyT(func(v Encryption) *EncryptionServices { return v.Services }).(EncryptionServicesPtrOutput)
}

type EncryptionPtrOutput struct{ *pulumi.OutputState }

func (EncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Encryption)(nil)).Elem()
}

func (o EncryptionPtrOutput) ToEncryptionPtrOutput() EncryptionPtrOutput {
	return o
}

func (o EncryptionPtrOutput) ToEncryptionPtrOutputWithContext(ctx context.Context) EncryptionPtrOutput {
	return o
}

func (o EncryptionPtrOutput) Elem() EncryptionOutput {
	return o.ApplyT(func(v *Encryption) Encryption { return *v }).(EncryptionOutput)
}

// The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault
func (o EncryptionPtrOutput) KeySource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Encryption) *string {
		if v == nil {
			return nil
		}
		return &v.KeySource
	}).(pulumi.StringPtrOutput)
}

// Properties provided by key vault.
func (o EncryptionPtrOutput) KeyVaultProperties() KeyVaultPropertiesPtrOutput {
	return o.ApplyT(func(v *Encryption) *KeyVaultProperties {
		if v == nil {
			return nil
		}
		return v.KeyVaultProperties
	}).(KeyVaultPropertiesPtrOutput)
}

// List of services which support encryption.
func (o EncryptionPtrOutput) Services() EncryptionServicesPtrOutput {
	return o.ApplyT(func(v *Encryption) *EncryptionServices {
		if v == nil {
			return nil
		}
		return v.Services
	}).(EncryptionServicesPtrOutput)
}

// The encryption settings on the storage account.
type EncryptionResponse struct {
	// The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault
	KeySource string `pulumi:"keySource"`
	// Properties provided by key vault.
	Keyvaultproperties *KeyVaultPropertiesResponse `pulumi:"keyvaultproperties"`
	// List of services which support encryption.
	Services *EncryptionServicesResponse `pulumi:"services"`
}

// EncryptionResponseInput is an input type that accepts EncryptionResponseArgs and EncryptionResponseOutput values.
// You can construct a concrete instance of `EncryptionResponseInput` via:
//
//          EncryptionResponseArgs{...}
type EncryptionResponseInput interface {
	pulumi.Input

	ToEncryptionResponseOutput() EncryptionResponseOutput
	ToEncryptionResponseOutputWithContext(context.Context) EncryptionResponseOutput
}

// The encryption settings on the storage account.
type EncryptionResponseArgs struct {
	// The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault
	KeySource pulumi.StringInput `pulumi:"keySource"`
	// Properties provided by key vault.
	Keyvaultproperties KeyVaultPropertiesResponsePtrInput `pulumi:"keyvaultproperties"`
	// List of services which support encryption.
	Services EncryptionServicesResponsePtrInput `pulumi:"services"`
}

func (EncryptionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionResponse)(nil)).Elem()
}

func (i EncryptionResponseArgs) ToEncryptionResponseOutput() EncryptionResponseOutput {
	return i.ToEncryptionResponseOutputWithContext(context.Background())
}

func (i EncryptionResponseArgs) ToEncryptionResponseOutputWithContext(ctx context.Context) EncryptionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionResponseOutput)
}

func (i EncryptionResponseArgs) ToEncryptionResponsePtrOutput() EncryptionResponsePtrOutput {
	return i.ToEncryptionResponsePtrOutputWithContext(context.Background())
}

func (i EncryptionResponseArgs) ToEncryptionResponsePtrOutputWithContext(ctx context.Context) EncryptionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionResponseOutput).ToEncryptionResponsePtrOutputWithContext(ctx)
}

// EncryptionResponsePtrInput is an input type that accepts EncryptionResponseArgs, EncryptionResponsePtr and EncryptionResponsePtrOutput values.
// You can construct a concrete instance of `EncryptionResponsePtrInput` via:
//
//          EncryptionResponseArgs{...}
//
//  or:
//
//          nil
type EncryptionResponsePtrInput interface {
	pulumi.Input

	ToEncryptionResponsePtrOutput() EncryptionResponsePtrOutput
	ToEncryptionResponsePtrOutputWithContext(context.Context) EncryptionResponsePtrOutput
}

type encryptionResponsePtrType EncryptionResponseArgs

func EncryptionResponsePtr(v *EncryptionResponseArgs) EncryptionResponsePtrInput {
	return (*encryptionResponsePtrType)(v)
}

func (*encryptionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionResponse)(nil)).Elem()
}

func (i *encryptionResponsePtrType) ToEncryptionResponsePtrOutput() EncryptionResponsePtrOutput {
	return i.ToEncryptionResponsePtrOutputWithContext(context.Background())
}

func (i *encryptionResponsePtrType) ToEncryptionResponsePtrOutputWithContext(ctx context.Context) EncryptionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionResponsePtrOutput)
}

// The encryption settings on the storage account.
type EncryptionResponseOutput struct{ *pulumi.OutputState }

func (EncryptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionResponse)(nil)).Elem()
}

func (o EncryptionResponseOutput) ToEncryptionResponseOutput() EncryptionResponseOutput {
	return o
}

func (o EncryptionResponseOutput) ToEncryptionResponseOutputWithContext(ctx context.Context) EncryptionResponseOutput {
	return o
}

func (o EncryptionResponseOutput) ToEncryptionResponsePtrOutput() EncryptionResponsePtrOutput {
	return o.ToEncryptionResponsePtrOutputWithContext(context.Background())
}

func (o EncryptionResponseOutput) ToEncryptionResponsePtrOutputWithContext(ctx context.Context) EncryptionResponsePtrOutput {
	return o.ApplyT(func(v EncryptionResponse) *EncryptionResponse {
		return &v
	}).(EncryptionResponsePtrOutput)
}

// The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault
func (o EncryptionResponseOutput) KeySource() pulumi.StringOutput {
	return o.ApplyT(func(v EncryptionResponse) string { return v.KeySource }).(pulumi.StringOutput)
}

// Properties provided by key vault.
func (o EncryptionResponseOutput) Keyvaultproperties() KeyVaultPropertiesResponsePtrOutput {
	return o.ApplyT(func(v EncryptionResponse) *KeyVaultPropertiesResponse { return v.Keyvaultproperties }).(KeyVaultPropertiesResponsePtrOutput)
}

// List of services which support encryption.
func (o EncryptionResponseOutput) Services() EncryptionServicesResponsePtrOutput {
	return o.ApplyT(func(v EncryptionResponse) *EncryptionServicesResponse { return v.Services }).(EncryptionServicesResponsePtrOutput)
}

type EncryptionResponsePtrOutput struct{ *pulumi.OutputState }

func (EncryptionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionResponse)(nil)).Elem()
}

func (o EncryptionResponsePtrOutput) ToEncryptionResponsePtrOutput() EncryptionResponsePtrOutput {
	return o
}

func (o EncryptionResponsePtrOutput) ToEncryptionResponsePtrOutputWithContext(ctx context.Context) EncryptionResponsePtrOutput {
	return o
}

func (o EncryptionResponsePtrOutput) Elem() EncryptionResponseOutput {
	return o.ApplyT(func(v *EncryptionResponse) EncryptionResponse { return *v }).(EncryptionResponseOutput)
}

// The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault
func (o EncryptionResponsePtrOutput) KeySource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionResponse) *string {
		if v == nil {
			return nil
		}
		return &v.KeySource
	}).(pulumi.StringPtrOutput)
}

// Properties provided by key vault.
func (o EncryptionResponsePtrOutput) Keyvaultproperties() KeyVaultPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *EncryptionResponse) *KeyVaultPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Keyvaultproperties
	}).(KeyVaultPropertiesResponsePtrOutput)
}

// List of services which support encryption.
func (o EncryptionResponsePtrOutput) Services() EncryptionServicesResponsePtrOutput {
	return o.ApplyT(func(v *EncryptionResponse) *EncryptionServicesResponse {
		if v == nil {
			return nil
		}
		return v.Services
	}).(EncryptionServicesResponsePtrOutput)
}

// A service that allows server-side encryption to be used.
type EncryptionService struct {
	// A boolean indicating whether or not the service encrypts the data as it is stored.
	Enabled *bool `pulumi:"enabled"`
}

// EncryptionServiceInput is an input type that accepts EncryptionServiceArgs and EncryptionServiceOutput values.
// You can construct a concrete instance of `EncryptionServiceInput` via:
//
//          EncryptionServiceArgs{...}
type EncryptionServiceInput interface {
	pulumi.Input

	ToEncryptionServiceOutput() EncryptionServiceOutput
	ToEncryptionServiceOutputWithContext(context.Context) EncryptionServiceOutput
}

// A service that allows server-side encryption to be used.
type EncryptionServiceArgs struct {
	// A boolean indicating whether or not the service encrypts the data as it is stored.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (EncryptionServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionService)(nil)).Elem()
}

func (i EncryptionServiceArgs) ToEncryptionServiceOutput() EncryptionServiceOutput {
	return i.ToEncryptionServiceOutputWithContext(context.Background())
}

func (i EncryptionServiceArgs) ToEncryptionServiceOutputWithContext(ctx context.Context) EncryptionServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionServiceOutput)
}

func (i EncryptionServiceArgs) ToEncryptionServicePtrOutput() EncryptionServicePtrOutput {
	return i.ToEncryptionServicePtrOutputWithContext(context.Background())
}

func (i EncryptionServiceArgs) ToEncryptionServicePtrOutputWithContext(ctx context.Context) EncryptionServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionServiceOutput).ToEncryptionServicePtrOutputWithContext(ctx)
}

// EncryptionServicePtrInput is an input type that accepts EncryptionServiceArgs, EncryptionServicePtr and EncryptionServicePtrOutput values.
// You can construct a concrete instance of `EncryptionServicePtrInput` via:
//
//          EncryptionServiceArgs{...}
//
//  or:
//
//          nil
type EncryptionServicePtrInput interface {
	pulumi.Input

	ToEncryptionServicePtrOutput() EncryptionServicePtrOutput
	ToEncryptionServicePtrOutputWithContext(context.Context) EncryptionServicePtrOutput
}

type encryptionServicePtrType EncryptionServiceArgs

func EncryptionServicePtr(v *EncryptionServiceArgs) EncryptionServicePtrInput {
	return (*encryptionServicePtrType)(v)
}

func (*encryptionServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionService)(nil)).Elem()
}

func (i *encryptionServicePtrType) ToEncryptionServicePtrOutput() EncryptionServicePtrOutput {
	return i.ToEncryptionServicePtrOutputWithContext(context.Background())
}

func (i *encryptionServicePtrType) ToEncryptionServicePtrOutputWithContext(ctx context.Context) EncryptionServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionServicePtrOutput)
}

// A service that allows server-side encryption to be used.
type EncryptionServiceOutput struct{ *pulumi.OutputState }

func (EncryptionServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionService)(nil)).Elem()
}

func (o EncryptionServiceOutput) ToEncryptionServiceOutput() EncryptionServiceOutput {
	return o
}

func (o EncryptionServiceOutput) ToEncryptionServiceOutputWithContext(ctx context.Context) EncryptionServiceOutput {
	return o
}

func (o EncryptionServiceOutput) ToEncryptionServicePtrOutput() EncryptionServicePtrOutput {
	return o.ToEncryptionServicePtrOutputWithContext(context.Background())
}

func (o EncryptionServiceOutput) ToEncryptionServicePtrOutputWithContext(ctx context.Context) EncryptionServicePtrOutput {
	return o.ApplyT(func(v EncryptionService) *EncryptionService {
		return &v
	}).(EncryptionServicePtrOutput)
}

// A boolean indicating whether or not the service encrypts the data as it is stored.
func (o EncryptionServiceOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EncryptionService) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type EncryptionServicePtrOutput struct{ *pulumi.OutputState }

func (EncryptionServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionService)(nil)).Elem()
}

func (o EncryptionServicePtrOutput) ToEncryptionServicePtrOutput() EncryptionServicePtrOutput {
	return o
}

func (o EncryptionServicePtrOutput) ToEncryptionServicePtrOutputWithContext(ctx context.Context) EncryptionServicePtrOutput {
	return o
}

func (o EncryptionServicePtrOutput) Elem() EncryptionServiceOutput {
	return o.ApplyT(func(v *EncryptionService) EncryptionService { return *v }).(EncryptionServiceOutput)
}

// A boolean indicating whether or not the service encrypts the data as it is stored.
func (o EncryptionServicePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EncryptionService) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// A service that allows server-side encryption to be used.
type EncryptionServiceResponse struct {
	// A boolean indicating whether or not the service encrypts the data as it is stored.
	Enabled *bool `pulumi:"enabled"`
	// Gets a rough estimate of the date/time when the encryption was last enabled by the user. Only returned when encryption is enabled. There might be some unencrypted blobs which were written after this time, as it is just a rough estimate.
	LastEnabledTime string `pulumi:"lastEnabledTime"`
}

// EncryptionServiceResponseInput is an input type that accepts EncryptionServiceResponseArgs and EncryptionServiceResponseOutput values.
// You can construct a concrete instance of `EncryptionServiceResponseInput` via:
//
//          EncryptionServiceResponseArgs{...}
type EncryptionServiceResponseInput interface {
	pulumi.Input

	ToEncryptionServiceResponseOutput() EncryptionServiceResponseOutput
	ToEncryptionServiceResponseOutputWithContext(context.Context) EncryptionServiceResponseOutput
}

// A service that allows server-side encryption to be used.
type EncryptionServiceResponseArgs struct {
	// A boolean indicating whether or not the service encrypts the data as it is stored.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Gets a rough estimate of the date/time when the encryption was last enabled by the user. Only returned when encryption is enabled. There might be some unencrypted blobs which were written after this time, as it is just a rough estimate.
	LastEnabledTime pulumi.StringInput `pulumi:"lastEnabledTime"`
}

func (EncryptionServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionServiceResponse)(nil)).Elem()
}

func (i EncryptionServiceResponseArgs) ToEncryptionServiceResponseOutput() EncryptionServiceResponseOutput {
	return i.ToEncryptionServiceResponseOutputWithContext(context.Background())
}

func (i EncryptionServiceResponseArgs) ToEncryptionServiceResponseOutputWithContext(ctx context.Context) EncryptionServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionServiceResponseOutput)
}

func (i EncryptionServiceResponseArgs) ToEncryptionServiceResponsePtrOutput() EncryptionServiceResponsePtrOutput {
	return i.ToEncryptionServiceResponsePtrOutputWithContext(context.Background())
}

func (i EncryptionServiceResponseArgs) ToEncryptionServiceResponsePtrOutputWithContext(ctx context.Context) EncryptionServiceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionServiceResponseOutput).ToEncryptionServiceResponsePtrOutputWithContext(ctx)
}

// EncryptionServiceResponsePtrInput is an input type that accepts EncryptionServiceResponseArgs, EncryptionServiceResponsePtr and EncryptionServiceResponsePtrOutput values.
// You can construct a concrete instance of `EncryptionServiceResponsePtrInput` via:
//
//          EncryptionServiceResponseArgs{...}
//
//  or:
//
//          nil
type EncryptionServiceResponsePtrInput interface {
	pulumi.Input

	ToEncryptionServiceResponsePtrOutput() EncryptionServiceResponsePtrOutput
	ToEncryptionServiceResponsePtrOutputWithContext(context.Context) EncryptionServiceResponsePtrOutput
}

type encryptionServiceResponsePtrType EncryptionServiceResponseArgs

func EncryptionServiceResponsePtr(v *EncryptionServiceResponseArgs) EncryptionServiceResponsePtrInput {
	return (*encryptionServiceResponsePtrType)(v)
}

func (*encryptionServiceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionServiceResponse)(nil)).Elem()
}

func (i *encryptionServiceResponsePtrType) ToEncryptionServiceResponsePtrOutput() EncryptionServiceResponsePtrOutput {
	return i.ToEncryptionServiceResponsePtrOutputWithContext(context.Background())
}

func (i *encryptionServiceResponsePtrType) ToEncryptionServiceResponsePtrOutputWithContext(ctx context.Context) EncryptionServiceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionServiceResponsePtrOutput)
}

// A service that allows server-side encryption to be used.
type EncryptionServiceResponseOutput struct{ *pulumi.OutputState }

func (EncryptionServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionServiceResponse)(nil)).Elem()
}

func (o EncryptionServiceResponseOutput) ToEncryptionServiceResponseOutput() EncryptionServiceResponseOutput {
	return o
}

func (o EncryptionServiceResponseOutput) ToEncryptionServiceResponseOutputWithContext(ctx context.Context) EncryptionServiceResponseOutput {
	return o
}

func (o EncryptionServiceResponseOutput) ToEncryptionServiceResponsePtrOutput() EncryptionServiceResponsePtrOutput {
	return o.ToEncryptionServiceResponsePtrOutputWithContext(context.Background())
}

func (o EncryptionServiceResponseOutput) ToEncryptionServiceResponsePtrOutputWithContext(ctx context.Context) EncryptionServiceResponsePtrOutput {
	return o.ApplyT(func(v EncryptionServiceResponse) *EncryptionServiceResponse {
		return &v
	}).(EncryptionServiceResponsePtrOutput)
}

// A boolean indicating whether or not the service encrypts the data as it is stored.
func (o EncryptionServiceResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EncryptionServiceResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Gets a rough estimate of the date/time when the encryption was last enabled by the user. Only returned when encryption is enabled. There might be some unencrypted blobs which were written after this time, as it is just a rough estimate.
func (o EncryptionServiceResponseOutput) LastEnabledTime() pulumi.StringOutput {
	return o.ApplyT(func(v EncryptionServiceResponse) string { return v.LastEnabledTime }).(pulumi.StringOutput)
}

type EncryptionServiceResponsePtrOutput struct{ *pulumi.OutputState }

func (EncryptionServiceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionServiceResponse)(nil)).Elem()
}

func (o EncryptionServiceResponsePtrOutput) ToEncryptionServiceResponsePtrOutput() EncryptionServiceResponsePtrOutput {
	return o
}

func (o EncryptionServiceResponsePtrOutput) ToEncryptionServiceResponsePtrOutputWithContext(ctx context.Context) EncryptionServiceResponsePtrOutput {
	return o
}

func (o EncryptionServiceResponsePtrOutput) Elem() EncryptionServiceResponseOutput {
	return o.ApplyT(func(v *EncryptionServiceResponse) EncryptionServiceResponse { return *v }).(EncryptionServiceResponseOutput)
}

// A boolean indicating whether or not the service encrypts the data as it is stored.
func (o EncryptionServiceResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EncryptionServiceResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Gets a rough estimate of the date/time when the encryption was last enabled by the user. Only returned when encryption is enabled. There might be some unencrypted blobs which were written after this time, as it is just a rough estimate.
func (o EncryptionServiceResponsePtrOutput) LastEnabledTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionServiceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastEnabledTime
	}).(pulumi.StringPtrOutput)
}

// A list of services that support encryption.
type EncryptionServices struct {
	// The encryption function of the blob storage service.
	Blob *EncryptionService `pulumi:"blob"`
	// The encryption function of the file storage service.
	File *EncryptionService `pulumi:"file"`
}

// EncryptionServicesInput is an input type that accepts EncryptionServicesArgs and EncryptionServicesOutput values.
// You can construct a concrete instance of `EncryptionServicesInput` via:
//
//          EncryptionServicesArgs{...}
type EncryptionServicesInput interface {
	pulumi.Input

	ToEncryptionServicesOutput() EncryptionServicesOutput
	ToEncryptionServicesOutputWithContext(context.Context) EncryptionServicesOutput
}

// A list of services that support encryption.
type EncryptionServicesArgs struct {
	// The encryption function of the blob storage service.
	Blob EncryptionServicePtrInput `pulumi:"blob"`
	// The encryption function of the file storage service.
	File EncryptionServicePtrInput `pulumi:"file"`
}

func (EncryptionServicesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionServices)(nil)).Elem()
}

func (i EncryptionServicesArgs) ToEncryptionServicesOutput() EncryptionServicesOutput {
	return i.ToEncryptionServicesOutputWithContext(context.Background())
}

func (i EncryptionServicesArgs) ToEncryptionServicesOutputWithContext(ctx context.Context) EncryptionServicesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionServicesOutput)
}

func (i EncryptionServicesArgs) ToEncryptionServicesPtrOutput() EncryptionServicesPtrOutput {
	return i.ToEncryptionServicesPtrOutputWithContext(context.Background())
}

func (i EncryptionServicesArgs) ToEncryptionServicesPtrOutputWithContext(ctx context.Context) EncryptionServicesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionServicesOutput).ToEncryptionServicesPtrOutputWithContext(ctx)
}

// EncryptionServicesPtrInput is an input type that accepts EncryptionServicesArgs, EncryptionServicesPtr and EncryptionServicesPtrOutput values.
// You can construct a concrete instance of `EncryptionServicesPtrInput` via:
//
//          EncryptionServicesArgs{...}
//
//  or:
//
//          nil
type EncryptionServicesPtrInput interface {
	pulumi.Input

	ToEncryptionServicesPtrOutput() EncryptionServicesPtrOutput
	ToEncryptionServicesPtrOutputWithContext(context.Context) EncryptionServicesPtrOutput
}

type encryptionServicesPtrType EncryptionServicesArgs

func EncryptionServicesPtr(v *EncryptionServicesArgs) EncryptionServicesPtrInput {
	return (*encryptionServicesPtrType)(v)
}

func (*encryptionServicesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionServices)(nil)).Elem()
}

func (i *encryptionServicesPtrType) ToEncryptionServicesPtrOutput() EncryptionServicesPtrOutput {
	return i.ToEncryptionServicesPtrOutputWithContext(context.Background())
}

func (i *encryptionServicesPtrType) ToEncryptionServicesPtrOutputWithContext(ctx context.Context) EncryptionServicesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionServicesPtrOutput)
}

// A list of services that support encryption.
type EncryptionServicesOutput struct{ *pulumi.OutputState }

func (EncryptionServicesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionServices)(nil)).Elem()
}

func (o EncryptionServicesOutput) ToEncryptionServicesOutput() EncryptionServicesOutput {
	return o
}

func (o EncryptionServicesOutput) ToEncryptionServicesOutputWithContext(ctx context.Context) EncryptionServicesOutput {
	return o
}

func (o EncryptionServicesOutput) ToEncryptionServicesPtrOutput() EncryptionServicesPtrOutput {
	return o.ToEncryptionServicesPtrOutputWithContext(context.Background())
}

func (o EncryptionServicesOutput) ToEncryptionServicesPtrOutputWithContext(ctx context.Context) EncryptionServicesPtrOutput {
	return o.ApplyT(func(v EncryptionServices) *EncryptionServices {
		return &v
	}).(EncryptionServicesPtrOutput)
}

// The encryption function of the blob storage service.
func (o EncryptionServicesOutput) Blob() EncryptionServicePtrOutput {
	return o.ApplyT(func(v EncryptionServices) *EncryptionService { return v.Blob }).(EncryptionServicePtrOutput)
}

// The encryption function of the file storage service.
func (o EncryptionServicesOutput) File() EncryptionServicePtrOutput {
	return o.ApplyT(func(v EncryptionServices) *EncryptionService { return v.File }).(EncryptionServicePtrOutput)
}

type EncryptionServicesPtrOutput struct{ *pulumi.OutputState }

func (EncryptionServicesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionServices)(nil)).Elem()
}

func (o EncryptionServicesPtrOutput) ToEncryptionServicesPtrOutput() EncryptionServicesPtrOutput {
	return o
}

func (o EncryptionServicesPtrOutput) ToEncryptionServicesPtrOutputWithContext(ctx context.Context) EncryptionServicesPtrOutput {
	return o
}

func (o EncryptionServicesPtrOutput) Elem() EncryptionServicesOutput {
	return o.ApplyT(func(v *EncryptionServices) EncryptionServices { return *v }).(EncryptionServicesOutput)
}

// The encryption function of the blob storage service.
func (o EncryptionServicesPtrOutput) Blob() EncryptionServicePtrOutput {
	return o.ApplyT(func(v *EncryptionServices) *EncryptionService {
		if v == nil {
			return nil
		}
		return v.Blob
	}).(EncryptionServicePtrOutput)
}

// The encryption function of the file storage service.
func (o EncryptionServicesPtrOutput) File() EncryptionServicePtrOutput {
	return o.ApplyT(func(v *EncryptionServices) *EncryptionService {
		if v == nil {
			return nil
		}
		return v.File
	}).(EncryptionServicePtrOutput)
}

// A list of services that support encryption.
type EncryptionServicesResponse struct {
	// The encryption function of the blob storage service.
	Blob *EncryptionServiceResponse `pulumi:"blob"`
	// The encryption function of the file storage service.
	File *EncryptionServiceResponse `pulumi:"file"`
	// The encryption function of the queue storage service.
	Queue EncryptionServiceResponse `pulumi:"queue"`
	// The encryption function of the table storage service.
	Table EncryptionServiceResponse `pulumi:"table"`
}

// EncryptionServicesResponseInput is an input type that accepts EncryptionServicesResponseArgs and EncryptionServicesResponseOutput values.
// You can construct a concrete instance of `EncryptionServicesResponseInput` via:
//
//          EncryptionServicesResponseArgs{...}
type EncryptionServicesResponseInput interface {
	pulumi.Input

	ToEncryptionServicesResponseOutput() EncryptionServicesResponseOutput
	ToEncryptionServicesResponseOutputWithContext(context.Context) EncryptionServicesResponseOutput
}

// A list of services that support encryption.
type EncryptionServicesResponseArgs struct {
	// The encryption function of the blob storage service.
	Blob EncryptionServiceResponsePtrInput `pulumi:"blob"`
	// The encryption function of the file storage service.
	File EncryptionServiceResponsePtrInput `pulumi:"file"`
	// The encryption function of the queue storage service.
	Queue EncryptionServiceResponseInput `pulumi:"queue"`
	// The encryption function of the table storage service.
	Table EncryptionServiceResponseInput `pulumi:"table"`
}

func (EncryptionServicesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionServicesResponse)(nil)).Elem()
}

func (i EncryptionServicesResponseArgs) ToEncryptionServicesResponseOutput() EncryptionServicesResponseOutput {
	return i.ToEncryptionServicesResponseOutputWithContext(context.Background())
}

func (i EncryptionServicesResponseArgs) ToEncryptionServicesResponseOutputWithContext(ctx context.Context) EncryptionServicesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionServicesResponseOutput)
}

func (i EncryptionServicesResponseArgs) ToEncryptionServicesResponsePtrOutput() EncryptionServicesResponsePtrOutput {
	return i.ToEncryptionServicesResponsePtrOutputWithContext(context.Background())
}

func (i EncryptionServicesResponseArgs) ToEncryptionServicesResponsePtrOutputWithContext(ctx context.Context) EncryptionServicesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionServicesResponseOutput).ToEncryptionServicesResponsePtrOutputWithContext(ctx)
}

// EncryptionServicesResponsePtrInput is an input type that accepts EncryptionServicesResponseArgs, EncryptionServicesResponsePtr and EncryptionServicesResponsePtrOutput values.
// You can construct a concrete instance of `EncryptionServicesResponsePtrInput` via:
//
//          EncryptionServicesResponseArgs{...}
//
//  or:
//
//          nil
type EncryptionServicesResponsePtrInput interface {
	pulumi.Input

	ToEncryptionServicesResponsePtrOutput() EncryptionServicesResponsePtrOutput
	ToEncryptionServicesResponsePtrOutputWithContext(context.Context) EncryptionServicesResponsePtrOutput
}

type encryptionServicesResponsePtrType EncryptionServicesResponseArgs

func EncryptionServicesResponsePtr(v *EncryptionServicesResponseArgs) EncryptionServicesResponsePtrInput {
	return (*encryptionServicesResponsePtrType)(v)
}

func (*encryptionServicesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionServicesResponse)(nil)).Elem()
}

func (i *encryptionServicesResponsePtrType) ToEncryptionServicesResponsePtrOutput() EncryptionServicesResponsePtrOutput {
	return i.ToEncryptionServicesResponsePtrOutputWithContext(context.Background())
}

func (i *encryptionServicesResponsePtrType) ToEncryptionServicesResponsePtrOutputWithContext(ctx context.Context) EncryptionServicesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionServicesResponsePtrOutput)
}

// A list of services that support encryption.
type EncryptionServicesResponseOutput struct{ *pulumi.OutputState }

func (EncryptionServicesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionServicesResponse)(nil)).Elem()
}

func (o EncryptionServicesResponseOutput) ToEncryptionServicesResponseOutput() EncryptionServicesResponseOutput {
	return o
}

func (o EncryptionServicesResponseOutput) ToEncryptionServicesResponseOutputWithContext(ctx context.Context) EncryptionServicesResponseOutput {
	return o
}

func (o EncryptionServicesResponseOutput) ToEncryptionServicesResponsePtrOutput() EncryptionServicesResponsePtrOutput {
	return o.ToEncryptionServicesResponsePtrOutputWithContext(context.Background())
}

func (o EncryptionServicesResponseOutput) ToEncryptionServicesResponsePtrOutputWithContext(ctx context.Context) EncryptionServicesResponsePtrOutput {
	return o.ApplyT(func(v EncryptionServicesResponse) *EncryptionServicesResponse {
		return &v
	}).(EncryptionServicesResponsePtrOutput)
}

// The encryption function of the blob storage service.
func (o EncryptionServicesResponseOutput) Blob() EncryptionServiceResponsePtrOutput {
	return o.ApplyT(func(v EncryptionServicesResponse) *EncryptionServiceResponse { return v.Blob }).(EncryptionServiceResponsePtrOutput)
}

// The encryption function of the file storage service.
func (o EncryptionServicesResponseOutput) File() EncryptionServiceResponsePtrOutput {
	return o.ApplyT(func(v EncryptionServicesResponse) *EncryptionServiceResponse { return v.File }).(EncryptionServiceResponsePtrOutput)
}

// The encryption function of the queue storage service.
func (o EncryptionServicesResponseOutput) Queue() EncryptionServiceResponseOutput {
	return o.ApplyT(func(v EncryptionServicesResponse) EncryptionServiceResponse { return v.Queue }).(EncryptionServiceResponseOutput)
}

// The encryption function of the table storage service.
func (o EncryptionServicesResponseOutput) Table() EncryptionServiceResponseOutput {
	return o.ApplyT(func(v EncryptionServicesResponse) EncryptionServiceResponse { return v.Table }).(EncryptionServiceResponseOutput)
}

type EncryptionServicesResponsePtrOutput struct{ *pulumi.OutputState }

func (EncryptionServicesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionServicesResponse)(nil)).Elem()
}

func (o EncryptionServicesResponsePtrOutput) ToEncryptionServicesResponsePtrOutput() EncryptionServicesResponsePtrOutput {
	return o
}

func (o EncryptionServicesResponsePtrOutput) ToEncryptionServicesResponsePtrOutputWithContext(ctx context.Context) EncryptionServicesResponsePtrOutput {
	return o
}

func (o EncryptionServicesResponsePtrOutput) Elem() EncryptionServicesResponseOutput {
	return o.ApplyT(func(v *EncryptionServicesResponse) EncryptionServicesResponse { return *v }).(EncryptionServicesResponseOutput)
}

// The encryption function of the blob storage service.
func (o EncryptionServicesResponsePtrOutput) Blob() EncryptionServiceResponsePtrOutput {
	return o.ApplyT(func(v *EncryptionServicesResponse) *EncryptionServiceResponse {
		if v == nil {
			return nil
		}
		return v.Blob
	}).(EncryptionServiceResponsePtrOutput)
}

// The encryption function of the file storage service.
func (o EncryptionServicesResponsePtrOutput) File() EncryptionServiceResponsePtrOutput {
	return o.ApplyT(func(v *EncryptionServicesResponse) *EncryptionServiceResponse {
		if v == nil {
			return nil
		}
		return v.File
	}).(EncryptionServiceResponsePtrOutput)
}

// The encryption function of the queue storage service.
func (o EncryptionServicesResponsePtrOutput) Queue() EncryptionServiceResponsePtrOutput {
	return o.ApplyT(func(v *EncryptionServicesResponse) *EncryptionServiceResponse {
		if v == nil {
			return nil
		}
		return &v.Queue
	}).(EncryptionServiceResponsePtrOutput)
}

// The encryption function of the table storage service.
func (o EncryptionServicesResponsePtrOutput) Table() EncryptionServiceResponsePtrOutput {
	return o.ApplyT(func(v *EncryptionServicesResponse) *EncryptionServiceResponse {
		if v == nil {
			return nil
		}
		return &v.Table
	}).(EncryptionServiceResponsePtrOutput)
}

// The URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object.
type EndpointsResponse struct {
	// Gets the blob endpoint.
	Blob string `pulumi:"blob"`
	// Gets the dfs endpoint.
	Dfs string `pulumi:"dfs"`
	// Gets the file endpoint.
	File string `pulumi:"file"`
	// Gets the queue endpoint.
	Queue string `pulumi:"queue"`
	// Gets the table endpoint.
	Table string `pulumi:"table"`
	// Gets the web endpoint.
	Web string `pulumi:"web"`
}

// EndpointsResponseInput is an input type that accepts EndpointsResponseArgs and EndpointsResponseOutput values.
// You can construct a concrete instance of `EndpointsResponseInput` via:
//
//          EndpointsResponseArgs{...}
type EndpointsResponseInput interface {
	pulumi.Input

	ToEndpointsResponseOutput() EndpointsResponseOutput
	ToEndpointsResponseOutputWithContext(context.Context) EndpointsResponseOutput
}

// The URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object.
type EndpointsResponseArgs struct {
	// Gets the blob endpoint.
	Blob pulumi.StringInput `pulumi:"blob"`
	// Gets the dfs endpoint.
	Dfs pulumi.StringInput `pulumi:"dfs"`
	// Gets the file endpoint.
	File pulumi.StringInput `pulumi:"file"`
	// Gets the queue endpoint.
	Queue pulumi.StringInput `pulumi:"queue"`
	// Gets the table endpoint.
	Table pulumi.StringInput `pulumi:"table"`
	// Gets the web endpoint.
	Web pulumi.StringInput `pulumi:"web"`
}

func (EndpointsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointsResponse)(nil)).Elem()
}

func (i EndpointsResponseArgs) ToEndpointsResponseOutput() EndpointsResponseOutput {
	return i.ToEndpointsResponseOutputWithContext(context.Background())
}

func (i EndpointsResponseArgs) ToEndpointsResponseOutputWithContext(ctx context.Context) EndpointsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointsResponseOutput)
}

func (i EndpointsResponseArgs) ToEndpointsResponsePtrOutput() EndpointsResponsePtrOutput {
	return i.ToEndpointsResponsePtrOutputWithContext(context.Background())
}

func (i EndpointsResponseArgs) ToEndpointsResponsePtrOutputWithContext(ctx context.Context) EndpointsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointsResponseOutput).ToEndpointsResponsePtrOutputWithContext(ctx)
}

// EndpointsResponsePtrInput is an input type that accepts EndpointsResponseArgs, EndpointsResponsePtr and EndpointsResponsePtrOutput values.
// You can construct a concrete instance of `EndpointsResponsePtrInput` via:
//
//          EndpointsResponseArgs{...}
//
//  or:
//
//          nil
type EndpointsResponsePtrInput interface {
	pulumi.Input

	ToEndpointsResponsePtrOutput() EndpointsResponsePtrOutput
	ToEndpointsResponsePtrOutputWithContext(context.Context) EndpointsResponsePtrOutput
}

type endpointsResponsePtrType EndpointsResponseArgs

func EndpointsResponsePtr(v *EndpointsResponseArgs) EndpointsResponsePtrInput {
	return (*endpointsResponsePtrType)(v)
}

func (*endpointsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointsResponse)(nil)).Elem()
}

func (i *endpointsResponsePtrType) ToEndpointsResponsePtrOutput() EndpointsResponsePtrOutput {
	return i.ToEndpointsResponsePtrOutputWithContext(context.Background())
}

func (i *endpointsResponsePtrType) ToEndpointsResponsePtrOutputWithContext(ctx context.Context) EndpointsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointsResponsePtrOutput)
}

// The URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object.
type EndpointsResponseOutput struct{ *pulumi.OutputState }

func (EndpointsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointsResponse)(nil)).Elem()
}

func (o EndpointsResponseOutput) ToEndpointsResponseOutput() EndpointsResponseOutput {
	return o
}

func (o EndpointsResponseOutput) ToEndpointsResponseOutputWithContext(ctx context.Context) EndpointsResponseOutput {
	return o
}

func (o EndpointsResponseOutput) ToEndpointsResponsePtrOutput() EndpointsResponsePtrOutput {
	return o.ToEndpointsResponsePtrOutputWithContext(context.Background())
}

func (o EndpointsResponseOutput) ToEndpointsResponsePtrOutputWithContext(ctx context.Context) EndpointsResponsePtrOutput {
	return o.ApplyT(func(v EndpointsResponse) *EndpointsResponse {
		return &v
	}).(EndpointsResponsePtrOutput)
}

// Gets the blob endpoint.
func (o EndpointsResponseOutput) Blob() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsResponse) string { return v.Blob }).(pulumi.StringOutput)
}

// Gets the dfs endpoint.
func (o EndpointsResponseOutput) Dfs() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsResponse) string { return v.Dfs }).(pulumi.StringOutput)
}

// Gets the file endpoint.
func (o EndpointsResponseOutput) File() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsResponse) string { return v.File }).(pulumi.StringOutput)
}

// Gets the queue endpoint.
func (o EndpointsResponseOutput) Queue() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsResponse) string { return v.Queue }).(pulumi.StringOutput)
}

// Gets the table endpoint.
func (o EndpointsResponseOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsResponse) string { return v.Table }).(pulumi.StringOutput)
}

// Gets the web endpoint.
func (o EndpointsResponseOutput) Web() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsResponse) string { return v.Web }).(pulumi.StringOutput)
}

type EndpointsResponsePtrOutput struct{ *pulumi.OutputState }

func (EndpointsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointsResponse)(nil)).Elem()
}

func (o EndpointsResponsePtrOutput) ToEndpointsResponsePtrOutput() EndpointsResponsePtrOutput {
	return o
}

func (o EndpointsResponsePtrOutput) ToEndpointsResponsePtrOutputWithContext(ctx context.Context) EndpointsResponsePtrOutput {
	return o
}

func (o EndpointsResponsePtrOutput) Elem() EndpointsResponseOutput {
	return o.ApplyT(func(v *EndpointsResponse) EndpointsResponse { return *v }).(EndpointsResponseOutput)
}

// Gets the blob endpoint.
func (o EndpointsResponsePtrOutput) Blob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Blob
	}).(pulumi.StringPtrOutput)
}

// Gets the dfs endpoint.
func (o EndpointsResponsePtrOutput) Dfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Dfs
	}).(pulumi.StringPtrOutput)
}

// Gets the file endpoint.
func (o EndpointsResponsePtrOutput) File() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.File
	}).(pulumi.StringPtrOutput)
}

// Gets the queue endpoint.
func (o EndpointsResponsePtrOutput) Queue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Queue
	}).(pulumi.StringPtrOutput)
}

// Gets the table endpoint.
func (o EndpointsResponsePtrOutput) Table() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Table
	}).(pulumi.StringPtrOutput)
}

// Gets the web endpoint.
func (o EndpointsResponsePtrOutput) Web() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Web
	}).(pulumi.StringPtrOutput)
}

// Statistics related to replication for storage account's Blob, Table, Queue and File services. It is only available when geo-redundant replication is enabled for the storage account.
type GeoReplicationStatsResponse struct {
	// A boolean flag which indicates whether or not account failover is supported for the account.
	CanFailover bool `pulumi:"canFailover"`
	// All primary writes preceding this UTC date/time value are guaranteed to be available for read operations. Primary writes following this point in time may or may not be available for reads. Element may be default value if value of LastSyncTime is not available, this can happen if secondary is offline or we are in bootstrap.
	LastSyncTime string `pulumi:"lastSyncTime"`
	// The status of the secondary location. Possible values are: - Live: Indicates that the secondary location is active and operational. - Bootstrap: Indicates initial synchronization from the primary location to the secondary location is in progress.This typically occurs when replication is first enabled. - Unavailable: Indicates that the secondary location is temporarily unavailable.
	Status string `pulumi:"status"`
}

// GeoReplicationStatsResponseInput is an input type that accepts GeoReplicationStatsResponseArgs and GeoReplicationStatsResponseOutput values.
// You can construct a concrete instance of `GeoReplicationStatsResponseInput` via:
//
//          GeoReplicationStatsResponseArgs{...}
type GeoReplicationStatsResponseInput interface {
	pulumi.Input

	ToGeoReplicationStatsResponseOutput() GeoReplicationStatsResponseOutput
	ToGeoReplicationStatsResponseOutputWithContext(context.Context) GeoReplicationStatsResponseOutput
}

// Statistics related to replication for storage account's Blob, Table, Queue and File services. It is only available when geo-redundant replication is enabled for the storage account.
type GeoReplicationStatsResponseArgs struct {
	// A boolean flag which indicates whether or not account failover is supported for the account.
	CanFailover pulumi.BoolInput `pulumi:"canFailover"`
	// All primary writes preceding this UTC date/time value are guaranteed to be available for read operations. Primary writes following this point in time may or may not be available for reads. Element may be default value if value of LastSyncTime is not available, this can happen if secondary is offline or we are in bootstrap.
	LastSyncTime pulumi.StringInput `pulumi:"lastSyncTime"`
	// The status of the secondary location. Possible values are: - Live: Indicates that the secondary location is active and operational. - Bootstrap: Indicates initial synchronization from the primary location to the secondary location is in progress.This typically occurs when replication is first enabled. - Unavailable: Indicates that the secondary location is temporarily unavailable.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GeoReplicationStatsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoReplicationStatsResponse)(nil)).Elem()
}

func (i GeoReplicationStatsResponseArgs) ToGeoReplicationStatsResponseOutput() GeoReplicationStatsResponseOutput {
	return i.ToGeoReplicationStatsResponseOutputWithContext(context.Background())
}

func (i GeoReplicationStatsResponseArgs) ToGeoReplicationStatsResponseOutputWithContext(ctx context.Context) GeoReplicationStatsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeoReplicationStatsResponseOutput)
}

func (i GeoReplicationStatsResponseArgs) ToGeoReplicationStatsResponsePtrOutput() GeoReplicationStatsResponsePtrOutput {
	return i.ToGeoReplicationStatsResponsePtrOutputWithContext(context.Background())
}

func (i GeoReplicationStatsResponseArgs) ToGeoReplicationStatsResponsePtrOutputWithContext(ctx context.Context) GeoReplicationStatsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeoReplicationStatsResponseOutput).ToGeoReplicationStatsResponsePtrOutputWithContext(ctx)
}

// GeoReplicationStatsResponsePtrInput is an input type that accepts GeoReplicationStatsResponseArgs, GeoReplicationStatsResponsePtr and GeoReplicationStatsResponsePtrOutput values.
// You can construct a concrete instance of `GeoReplicationStatsResponsePtrInput` via:
//
//          GeoReplicationStatsResponseArgs{...}
//
//  or:
//
//          nil
type GeoReplicationStatsResponsePtrInput interface {
	pulumi.Input

	ToGeoReplicationStatsResponsePtrOutput() GeoReplicationStatsResponsePtrOutput
	ToGeoReplicationStatsResponsePtrOutputWithContext(context.Context) GeoReplicationStatsResponsePtrOutput
}

type geoReplicationStatsResponsePtrType GeoReplicationStatsResponseArgs

func GeoReplicationStatsResponsePtr(v *GeoReplicationStatsResponseArgs) GeoReplicationStatsResponsePtrInput {
	return (*geoReplicationStatsResponsePtrType)(v)
}

func (*geoReplicationStatsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GeoReplicationStatsResponse)(nil)).Elem()
}

func (i *geoReplicationStatsResponsePtrType) ToGeoReplicationStatsResponsePtrOutput() GeoReplicationStatsResponsePtrOutput {
	return i.ToGeoReplicationStatsResponsePtrOutputWithContext(context.Background())
}

func (i *geoReplicationStatsResponsePtrType) ToGeoReplicationStatsResponsePtrOutputWithContext(ctx context.Context) GeoReplicationStatsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeoReplicationStatsResponsePtrOutput)
}

// Statistics related to replication for storage account's Blob, Table, Queue and File services. It is only available when geo-redundant replication is enabled for the storage account.
type GeoReplicationStatsResponseOutput struct{ *pulumi.OutputState }

func (GeoReplicationStatsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoReplicationStatsResponse)(nil)).Elem()
}

func (o GeoReplicationStatsResponseOutput) ToGeoReplicationStatsResponseOutput() GeoReplicationStatsResponseOutput {
	return o
}

func (o GeoReplicationStatsResponseOutput) ToGeoReplicationStatsResponseOutputWithContext(ctx context.Context) GeoReplicationStatsResponseOutput {
	return o
}

func (o GeoReplicationStatsResponseOutput) ToGeoReplicationStatsResponsePtrOutput() GeoReplicationStatsResponsePtrOutput {
	return o.ToGeoReplicationStatsResponsePtrOutputWithContext(context.Background())
}

func (o GeoReplicationStatsResponseOutput) ToGeoReplicationStatsResponsePtrOutputWithContext(ctx context.Context) GeoReplicationStatsResponsePtrOutput {
	return o.ApplyT(func(v GeoReplicationStatsResponse) *GeoReplicationStatsResponse {
		return &v
	}).(GeoReplicationStatsResponsePtrOutput)
}

// A boolean flag which indicates whether or not account failover is supported for the account.
func (o GeoReplicationStatsResponseOutput) CanFailover() pulumi.BoolOutput {
	return o.ApplyT(func(v GeoReplicationStatsResponse) bool { return v.CanFailover }).(pulumi.BoolOutput)
}

// All primary writes preceding this UTC date/time value are guaranteed to be available for read operations. Primary writes following this point in time may or may not be available for reads. Element may be default value if value of LastSyncTime is not available, this can happen if secondary is offline or we are in bootstrap.
func (o GeoReplicationStatsResponseOutput) LastSyncTime() pulumi.StringOutput {
	return o.ApplyT(func(v GeoReplicationStatsResponse) string { return v.LastSyncTime }).(pulumi.StringOutput)
}

// The status of the secondary location. Possible values are: - Live: Indicates that the secondary location is active and operational. - Bootstrap: Indicates initial synchronization from the primary location to the secondary location is in progress.This typically occurs when replication is first enabled. - Unavailable: Indicates that the secondary location is temporarily unavailable.
func (o GeoReplicationStatsResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GeoReplicationStatsResponse) string { return v.Status }).(pulumi.StringOutput)
}

type GeoReplicationStatsResponsePtrOutput struct{ *pulumi.OutputState }

func (GeoReplicationStatsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GeoReplicationStatsResponse)(nil)).Elem()
}

func (o GeoReplicationStatsResponsePtrOutput) ToGeoReplicationStatsResponsePtrOutput() GeoReplicationStatsResponsePtrOutput {
	return o
}

func (o GeoReplicationStatsResponsePtrOutput) ToGeoReplicationStatsResponsePtrOutputWithContext(ctx context.Context) GeoReplicationStatsResponsePtrOutput {
	return o
}

func (o GeoReplicationStatsResponsePtrOutput) Elem() GeoReplicationStatsResponseOutput {
	return o.ApplyT(func(v *GeoReplicationStatsResponse) GeoReplicationStatsResponse { return *v }).(GeoReplicationStatsResponseOutput)
}

// A boolean flag which indicates whether or not account failover is supported for the account.
func (o GeoReplicationStatsResponsePtrOutput) CanFailover() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GeoReplicationStatsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.CanFailover
	}).(pulumi.BoolPtrOutput)
}

// All primary writes preceding this UTC date/time value are guaranteed to be available for read operations. Primary writes following this point in time may or may not be available for reads. Element may be default value if value of LastSyncTime is not available, this can happen if secondary is offline or we are in bootstrap.
func (o GeoReplicationStatsResponsePtrOutput) LastSyncTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GeoReplicationStatsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastSyncTime
	}).(pulumi.StringPtrOutput)
}

// The status of the secondary location. Possible values are: - Live: Indicates that the secondary location is active and operational. - Bootstrap: Indicates initial synchronization from the primary location to the secondary location is in progress.This typically occurs when replication is first enabled. - Unavailable: Indicates that the secondary location is temporarily unavailable.
func (o GeoReplicationStatsResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GeoReplicationStatsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// IP rule with specific IP or IP range in CIDR format.
type IPRule struct {
	// The action of IP ACL rule.
	Action *string `pulumi:"action"`
	// Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
	IPAddressOrRange string `pulumi:"iPAddressOrRange"`
}

// IPRuleInput is an input type that accepts IPRuleArgs and IPRuleOutput values.
// You can construct a concrete instance of `IPRuleInput` via:
//
//          IPRuleArgs{...}
type IPRuleInput interface {
	pulumi.Input

	ToIPRuleOutput() IPRuleOutput
	ToIPRuleOutputWithContext(context.Context) IPRuleOutput
}

// IP rule with specific IP or IP range in CIDR format.
type IPRuleArgs struct {
	// The action of IP ACL rule.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
	IPAddressOrRange pulumi.StringInput `pulumi:"iPAddressOrRange"`
}

func (IPRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPRule)(nil)).Elem()
}

func (i IPRuleArgs) ToIPRuleOutput() IPRuleOutput {
	return i.ToIPRuleOutputWithContext(context.Background())
}

func (i IPRuleArgs) ToIPRuleOutputWithContext(ctx context.Context) IPRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPRuleOutput)
}

// IPRuleArrayInput is an input type that accepts IPRuleArray and IPRuleArrayOutput values.
// You can construct a concrete instance of `IPRuleArrayInput` via:
//
//          IPRuleArray{ IPRuleArgs{...} }
type IPRuleArrayInput interface {
	pulumi.Input

	ToIPRuleArrayOutput() IPRuleArrayOutput
	ToIPRuleArrayOutputWithContext(context.Context) IPRuleArrayOutput
}

type IPRuleArray []IPRuleInput

func (IPRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPRule)(nil)).Elem()
}

func (i IPRuleArray) ToIPRuleArrayOutput() IPRuleArrayOutput {
	return i.ToIPRuleArrayOutputWithContext(context.Background())
}

func (i IPRuleArray) ToIPRuleArrayOutputWithContext(ctx context.Context) IPRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPRuleArrayOutput)
}

// IP rule with specific IP or IP range in CIDR format.
type IPRuleOutput struct{ *pulumi.OutputState }

func (IPRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPRule)(nil)).Elem()
}

func (o IPRuleOutput) ToIPRuleOutput() IPRuleOutput {
	return o
}

func (o IPRuleOutput) ToIPRuleOutputWithContext(ctx context.Context) IPRuleOutput {
	return o
}

// The action of IP ACL rule.
func (o IPRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
func (o IPRuleOutput) IPAddressOrRange() pulumi.StringOutput {
	return o.ApplyT(func(v IPRule) string { return v.IPAddressOrRange }).(pulumi.StringOutput)
}

type IPRuleArrayOutput struct{ *pulumi.OutputState }

func (IPRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPRule)(nil)).Elem()
}

func (o IPRuleArrayOutput) ToIPRuleArrayOutput() IPRuleArrayOutput {
	return o
}

func (o IPRuleArrayOutput) ToIPRuleArrayOutputWithContext(ctx context.Context) IPRuleArrayOutput {
	return o
}

func (o IPRuleArrayOutput) Index(i pulumi.IntInput) IPRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPRule {
		return vs[0].([]IPRule)[vs[1].(int)]
	}).(IPRuleOutput)
}

// IP rule with specific IP or IP range in CIDR format.
type IPRuleResponse struct {
	// The action of IP ACL rule.
	Action *string `pulumi:"action"`
	// Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
	Value string `pulumi:"value"`
}

// IPRuleResponseInput is an input type that accepts IPRuleResponseArgs and IPRuleResponseOutput values.
// You can construct a concrete instance of `IPRuleResponseInput` via:
//
//          IPRuleResponseArgs{...}
type IPRuleResponseInput interface {
	pulumi.Input

	ToIPRuleResponseOutput() IPRuleResponseOutput
	ToIPRuleResponseOutputWithContext(context.Context) IPRuleResponseOutput
}

// IP rule with specific IP or IP range in CIDR format.
type IPRuleResponseArgs struct {
	// The action of IP ACL rule.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
	Value pulumi.StringInput `pulumi:"value"`
}

func (IPRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPRuleResponse)(nil)).Elem()
}

func (i IPRuleResponseArgs) ToIPRuleResponseOutput() IPRuleResponseOutput {
	return i.ToIPRuleResponseOutputWithContext(context.Background())
}

func (i IPRuleResponseArgs) ToIPRuleResponseOutputWithContext(ctx context.Context) IPRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPRuleResponseOutput)
}

// IPRuleResponseArrayInput is an input type that accepts IPRuleResponseArray and IPRuleResponseArrayOutput values.
// You can construct a concrete instance of `IPRuleResponseArrayInput` via:
//
//          IPRuleResponseArray{ IPRuleResponseArgs{...} }
type IPRuleResponseArrayInput interface {
	pulumi.Input

	ToIPRuleResponseArrayOutput() IPRuleResponseArrayOutput
	ToIPRuleResponseArrayOutputWithContext(context.Context) IPRuleResponseArrayOutput
}

type IPRuleResponseArray []IPRuleResponseInput

func (IPRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPRuleResponse)(nil)).Elem()
}

func (i IPRuleResponseArray) ToIPRuleResponseArrayOutput() IPRuleResponseArrayOutput {
	return i.ToIPRuleResponseArrayOutputWithContext(context.Background())
}

func (i IPRuleResponseArray) ToIPRuleResponseArrayOutputWithContext(ctx context.Context) IPRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPRuleResponseArrayOutput)
}

// IP rule with specific IP or IP range in CIDR format.
type IPRuleResponseOutput struct{ *pulumi.OutputState }

func (IPRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPRuleResponse)(nil)).Elem()
}

func (o IPRuleResponseOutput) ToIPRuleResponseOutput() IPRuleResponseOutput {
	return o
}

func (o IPRuleResponseOutput) ToIPRuleResponseOutputWithContext(ctx context.Context) IPRuleResponseOutput {
	return o
}

// The action of IP ACL rule.
func (o IPRuleResponseOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPRuleResponse) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
func (o IPRuleResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v IPRuleResponse) string { return v.Value }).(pulumi.StringOutput)
}

type IPRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (IPRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPRuleResponse)(nil)).Elem()
}

func (o IPRuleResponseArrayOutput) ToIPRuleResponseArrayOutput() IPRuleResponseArrayOutput {
	return o
}

func (o IPRuleResponseArrayOutput) ToIPRuleResponseArrayOutputWithContext(ctx context.Context) IPRuleResponseArrayOutput {
	return o
}

func (o IPRuleResponseArrayOutput) Index(i pulumi.IntInput) IPRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPRuleResponse {
		return vs[0].([]IPRuleResponse)[vs[1].(int)]
	}).(IPRuleResponseOutput)
}

// Identity for the resource.
type Identity struct {
	// The identity type.
	Type string `pulumi:"type"`
}

// IdentityInput is an input type that accepts IdentityArgs and IdentityOutput values.
// You can construct a concrete instance of `IdentityInput` via:
//
//          IdentityArgs{...}
type IdentityInput interface {
	pulumi.Input

	ToIdentityOutput() IdentityOutput
	ToIdentityOutputWithContext(context.Context) IdentityOutput
}

// Identity for the resource.
type IdentityArgs struct {
	// The identity type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (IdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Identity)(nil)).Elem()
}

func (i IdentityArgs) ToIdentityOutput() IdentityOutput {
	return i.ToIdentityOutputWithContext(context.Background())
}

func (i IdentityArgs) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput)
}

func (i IdentityArgs) ToIdentityPtrOutput() IdentityPtrOutput {
	return i.ToIdentityPtrOutputWithContext(context.Background())
}

func (i IdentityArgs) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput).ToIdentityPtrOutputWithContext(ctx)
}

// IdentityPtrInput is an input type that accepts IdentityArgs, IdentityPtr and IdentityPtrOutput values.
// You can construct a concrete instance of `IdentityPtrInput` via:
//
//          IdentityArgs{...}
//
//  or:
//
//          nil
type IdentityPtrInput interface {
	pulumi.Input

	ToIdentityPtrOutput() IdentityPtrOutput
	ToIdentityPtrOutputWithContext(context.Context) IdentityPtrOutput
}

type identityPtrType IdentityArgs

func IdentityPtr(v *IdentityArgs) IdentityPtrInput {
	return (*identityPtrType)(v)
}

func (*identityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (i *identityPtrType) ToIdentityPtrOutput() IdentityPtrOutput {
	return i.ToIdentityPtrOutputWithContext(context.Background())
}

func (i *identityPtrType) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPtrOutput)
}

// Identity for the resource.
type IdentityOutput struct{ *pulumi.OutputState }

func (IdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Identity)(nil)).Elem()
}

func (o IdentityOutput) ToIdentityOutput() IdentityOutput {
	return o
}

func (o IdentityOutput) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return o
}

func (o IdentityOutput) ToIdentityPtrOutput() IdentityPtrOutput {
	return o.ToIdentityPtrOutputWithContext(context.Background())
}

func (o IdentityOutput) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return o.ApplyT(func(v Identity) *Identity {
		return &v
	}).(IdentityPtrOutput)
}

// The identity type.
func (o IdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v Identity) string { return v.Type }).(pulumi.StringOutput)
}

type IdentityPtrOutput struct{ *pulumi.OutputState }

func (IdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (o IdentityPtrOutput) ToIdentityPtrOutput() IdentityPtrOutput {
	return o
}

func (o IdentityPtrOutput) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return o
}

func (o IdentityPtrOutput) Elem() IdentityOutput {
	return o.ApplyT(func(v *Identity) Identity { return *v }).(IdentityOutput)
}

// The identity type.
func (o IdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Identity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Identity for the resource.
type IdentityResponse struct {
	// The principal ID of resource identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId string `pulumi:"tenantId"`
	// The identity type.
	Type string `pulumi:"type"`
}

// IdentityResponseInput is an input type that accepts IdentityResponseArgs and IdentityResponseOutput values.
// You can construct a concrete instance of `IdentityResponseInput` via:
//
//          IdentityResponseArgs{...}
type IdentityResponseInput interface {
	pulumi.Input

	ToIdentityResponseOutput() IdentityResponseOutput
	ToIdentityResponseOutputWithContext(context.Context) IdentityResponseOutput
}

// Identity for the resource.
type IdentityResponseArgs struct {
	// The principal ID of resource identity.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// The identity type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (IdentityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityResponse)(nil)).Elem()
}

func (i IdentityResponseArgs) ToIdentityResponseOutput() IdentityResponseOutput {
	return i.ToIdentityResponseOutputWithContext(context.Background())
}

func (i IdentityResponseArgs) ToIdentityResponseOutputWithContext(ctx context.Context) IdentityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityResponseOutput)
}

func (i IdentityResponseArgs) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return i.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (i IdentityResponseArgs) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityResponseOutput).ToIdentityResponsePtrOutputWithContext(ctx)
}

// IdentityResponsePtrInput is an input type that accepts IdentityResponseArgs, IdentityResponsePtr and IdentityResponsePtrOutput values.
// You can construct a concrete instance of `IdentityResponsePtrInput` via:
//
//          IdentityResponseArgs{...}
//
//  or:
//
//          nil
type IdentityResponsePtrInput interface {
	pulumi.Input

	ToIdentityResponsePtrOutput() IdentityResponsePtrOutput
	ToIdentityResponsePtrOutputWithContext(context.Context) IdentityResponsePtrOutput
}

type identityResponsePtrType IdentityResponseArgs

func IdentityResponsePtr(v *IdentityResponseArgs) IdentityResponsePtrInput {
	return (*identityResponsePtrType)(v)
}

func (*identityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityResponse)(nil)).Elem()
}

func (i *identityResponsePtrType) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return i.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (i *identityResponsePtrType) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityResponsePtrOutput)
}

// Identity for the resource.
type IdentityResponseOutput struct{ *pulumi.OutputState }

func (IdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityResponse)(nil)).Elem()
}

func (o IdentityResponseOutput) ToIdentityResponseOutput() IdentityResponseOutput {
	return o
}

func (o IdentityResponseOutput) ToIdentityResponseOutputWithContext(ctx context.Context) IdentityResponseOutput {
	return o
}

func (o IdentityResponseOutput) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return o.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (o IdentityResponseOutput) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return o.ApplyT(func(v IdentityResponse) *IdentityResponse {
		return &v
	}).(IdentityResponsePtrOutput)
}

// The principal ID of resource identity.
func (o IdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID of resource.
func (o IdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The identity type.
func (o IdentityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityResponse) string { return v.Type }).(pulumi.StringOutput)
}

type IdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (IdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityResponse)(nil)).Elem()
}

func (o IdentityResponsePtrOutput) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return o
}

func (o IdentityResponsePtrOutput) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return o
}

func (o IdentityResponsePtrOutput) Elem() IdentityResponseOutput {
	return o.ApplyT(func(v *IdentityResponse) IdentityResponse { return *v }).(IdentityResponseOutput)
}

// The principal ID of resource identity.
func (o IdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of resource.
func (o IdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The identity type.
func (o IdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The properties of an ImmutabilityPolicy of a blob container.
type ImmutabilityPolicyProperties struct {
	// The properties of an ImmutabilityPolicy of a blob container.
	Properties *ImmutabilityPolicyProperty `pulumi:"properties"`
}

// ImmutabilityPolicyPropertiesInput is an input type that accepts ImmutabilityPolicyPropertiesArgs and ImmutabilityPolicyPropertiesOutput values.
// You can construct a concrete instance of `ImmutabilityPolicyPropertiesInput` via:
//
//          ImmutabilityPolicyPropertiesArgs{...}
type ImmutabilityPolicyPropertiesInput interface {
	pulumi.Input

	ToImmutabilityPolicyPropertiesOutput() ImmutabilityPolicyPropertiesOutput
	ToImmutabilityPolicyPropertiesOutputWithContext(context.Context) ImmutabilityPolicyPropertiesOutput
}

// The properties of an ImmutabilityPolicy of a blob container.
type ImmutabilityPolicyPropertiesArgs struct {
	// The properties of an ImmutabilityPolicy of a blob container.
	Properties ImmutabilityPolicyPropertyPtrInput `pulumi:"properties"`
}

func (ImmutabilityPolicyPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImmutabilityPolicyProperties)(nil)).Elem()
}

func (i ImmutabilityPolicyPropertiesArgs) ToImmutabilityPolicyPropertiesOutput() ImmutabilityPolicyPropertiesOutput {
	return i.ToImmutabilityPolicyPropertiesOutputWithContext(context.Background())
}

func (i ImmutabilityPolicyPropertiesArgs) ToImmutabilityPolicyPropertiesOutputWithContext(ctx context.Context) ImmutabilityPolicyPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImmutabilityPolicyPropertiesOutput)
}

// The properties of an ImmutabilityPolicy of a blob container.
type ImmutabilityPolicyPropertiesOutput struct{ *pulumi.OutputState }

func (ImmutabilityPolicyPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImmutabilityPolicyProperties)(nil)).Elem()
}

func (o ImmutabilityPolicyPropertiesOutput) ToImmutabilityPolicyPropertiesOutput() ImmutabilityPolicyPropertiesOutput {
	return o
}

func (o ImmutabilityPolicyPropertiesOutput) ToImmutabilityPolicyPropertiesOutputWithContext(ctx context.Context) ImmutabilityPolicyPropertiesOutput {
	return o
}

// The properties of an ImmutabilityPolicy of a blob container.
func (o ImmutabilityPolicyPropertiesOutput) Properties() ImmutabilityPolicyPropertyPtrOutput {
	return o.ApplyT(func(v ImmutabilityPolicyProperties) *ImmutabilityPolicyProperty { return v.Properties }).(ImmutabilityPolicyPropertyPtrOutput)
}

// The properties of an ImmutabilityPolicy of a blob container.
type ImmutabilityPolicyPropertiesResponse struct {
	// ImmutabilityPolicy Etag.
	Etag string `pulumi:"etag"`
	// The properties of an ImmutabilityPolicy of a blob container.
	Properties *ImmutabilityPolicyPropertyResponse `pulumi:"properties"`
	// The ImmutabilityPolicy update history of the blob container.
	UpdateHistory []UpdateHistoryPropertyResponse `pulumi:"updateHistory"`
}

// ImmutabilityPolicyPropertiesResponseInput is an input type that accepts ImmutabilityPolicyPropertiesResponseArgs and ImmutabilityPolicyPropertiesResponseOutput values.
// You can construct a concrete instance of `ImmutabilityPolicyPropertiesResponseInput` via:
//
//          ImmutabilityPolicyPropertiesResponseArgs{...}
type ImmutabilityPolicyPropertiesResponseInput interface {
	pulumi.Input

	ToImmutabilityPolicyPropertiesResponseOutput() ImmutabilityPolicyPropertiesResponseOutput
	ToImmutabilityPolicyPropertiesResponseOutputWithContext(context.Context) ImmutabilityPolicyPropertiesResponseOutput
}

// The properties of an ImmutabilityPolicy of a blob container.
type ImmutabilityPolicyPropertiesResponseArgs struct {
	// ImmutabilityPolicy Etag.
	Etag pulumi.StringInput `pulumi:"etag"`
	// The properties of an ImmutabilityPolicy of a blob container.
	Properties ImmutabilityPolicyPropertyResponsePtrInput `pulumi:"properties"`
	// The ImmutabilityPolicy update history of the blob container.
	UpdateHistory UpdateHistoryPropertyResponseArrayInput `pulumi:"updateHistory"`
}

func (ImmutabilityPolicyPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImmutabilityPolicyPropertiesResponse)(nil)).Elem()
}

func (i ImmutabilityPolicyPropertiesResponseArgs) ToImmutabilityPolicyPropertiesResponseOutput() ImmutabilityPolicyPropertiesResponseOutput {
	return i.ToImmutabilityPolicyPropertiesResponseOutputWithContext(context.Background())
}

func (i ImmutabilityPolicyPropertiesResponseArgs) ToImmutabilityPolicyPropertiesResponseOutputWithContext(ctx context.Context) ImmutabilityPolicyPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImmutabilityPolicyPropertiesResponseOutput)
}

func (i ImmutabilityPolicyPropertiesResponseArgs) ToImmutabilityPolicyPropertiesResponsePtrOutput() ImmutabilityPolicyPropertiesResponsePtrOutput {
	return i.ToImmutabilityPolicyPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ImmutabilityPolicyPropertiesResponseArgs) ToImmutabilityPolicyPropertiesResponsePtrOutputWithContext(ctx context.Context) ImmutabilityPolicyPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImmutabilityPolicyPropertiesResponseOutput).ToImmutabilityPolicyPropertiesResponsePtrOutputWithContext(ctx)
}

// ImmutabilityPolicyPropertiesResponsePtrInput is an input type that accepts ImmutabilityPolicyPropertiesResponseArgs, ImmutabilityPolicyPropertiesResponsePtr and ImmutabilityPolicyPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ImmutabilityPolicyPropertiesResponsePtrInput` via:
//
//          ImmutabilityPolicyPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ImmutabilityPolicyPropertiesResponsePtrInput interface {
	pulumi.Input

	ToImmutabilityPolicyPropertiesResponsePtrOutput() ImmutabilityPolicyPropertiesResponsePtrOutput
	ToImmutabilityPolicyPropertiesResponsePtrOutputWithContext(context.Context) ImmutabilityPolicyPropertiesResponsePtrOutput
}

type immutabilityPolicyPropertiesResponsePtrType ImmutabilityPolicyPropertiesResponseArgs

func ImmutabilityPolicyPropertiesResponsePtr(v *ImmutabilityPolicyPropertiesResponseArgs) ImmutabilityPolicyPropertiesResponsePtrInput {
	return (*immutabilityPolicyPropertiesResponsePtrType)(v)
}

func (*immutabilityPolicyPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ImmutabilityPolicyPropertiesResponse)(nil)).Elem()
}

func (i *immutabilityPolicyPropertiesResponsePtrType) ToImmutabilityPolicyPropertiesResponsePtrOutput() ImmutabilityPolicyPropertiesResponsePtrOutput {
	return i.ToImmutabilityPolicyPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *immutabilityPolicyPropertiesResponsePtrType) ToImmutabilityPolicyPropertiesResponsePtrOutputWithContext(ctx context.Context) ImmutabilityPolicyPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImmutabilityPolicyPropertiesResponsePtrOutput)
}

// The properties of an ImmutabilityPolicy of a blob container.
type ImmutabilityPolicyPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ImmutabilityPolicyPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImmutabilityPolicyPropertiesResponse)(nil)).Elem()
}

func (o ImmutabilityPolicyPropertiesResponseOutput) ToImmutabilityPolicyPropertiesResponseOutput() ImmutabilityPolicyPropertiesResponseOutput {
	return o
}

func (o ImmutabilityPolicyPropertiesResponseOutput) ToImmutabilityPolicyPropertiesResponseOutputWithContext(ctx context.Context) ImmutabilityPolicyPropertiesResponseOutput {
	return o
}

func (o ImmutabilityPolicyPropertiesResponseOutput) ToImmutabilityPolicyPropertiesResponsePtrOutput() ImmutabilityPolicyPropertiesResponsePtrOutput {
	return o.ToImmutabilityPolicyPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ImmutabilityPolicyPropertiesResponseOutput) ToImmutabilityPolicyPropertiesResponsePtrOutputWithContext(ctx context.Context) ImmutabilityPolicyPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ImmutabilityPolicyPropertiesResponse) *ImmutabilityPolicyPropertiesResponse {
		return &v
	}).(ImmutabilityPolicyPropertiesResponsePtrOutput)
}

// ImmutabilityPolicy Etag.
func (o ImmutabilityPolicyPropertiesResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ImmutabilityPolicyPropertiesResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// The properties of an ImmutabilityPolicy of a blob container.
func (o ImmutabilityPolicyPropertiesResponseOutput) Properties() ImmutabilityPolicyPropertyResponsePtrOutput {
	return o.ApplyT(func(v ImmutabilityPolicyPropertiesResponse) *ImmutabilityPolicyPropertyResponse { return v.Properties }).(ImmutabilityPolicyPropertyResponsePtrOutput)
}

// The ImmutabilityPolicy update history of the blob container.
func (o ImmutabilityPolicyPropertiesResponseOutput) UpdateHistory() UpdateHistoryPropertyResponseArrayOutput {
	return o.ApplyT(func(v ImmutabilityPolicyPropertiesResponse) []UpdateHistoryPropertyResponse { return v.UpdateHistory }).(UpdateHistoryPropertyResponseArrayOutput)
}

type ImmutabilityPolicyPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ImmutabilityPolicyPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImmutabilityPolicyPropertiesResponse)(nil)).Elem()
}

func (o ImmutabilityPolicyPropertiesResponsePtrOutput) ToImmutabilityPolicyPropertiesResponsePtrOutput() ImmutabilityPolicyPropertiesResponsePtrOutput {
	return o
}

func (o ImmutabilityPolicyPropertiesResponsePtrOutput) ToImmutabilityPolicyPropertiesResponsePtrOutputWithContext(ctx context.Context) ImmutabilityPolicyPropertiesResponsePtrOutput {
	return o
}

func (o ImmutabilityPolicyPropertiesResponsePtrOutput) Elem() ImmutabilityPolicyPropertiesResponseOutput {
	return o.ApplyT(func(v *ImmutabilityPolicyPropertiesResponse) ImmutabilityPolicyPropertiesResponse { return *v }).(ImmutabilityPolicyPropertiesResponseOutput)
}

// ImmutabilityPolicy Etag.
func (o ImmutabilityPolicyPropertiesResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImmutabilityPolicyPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// The properties of an ImmutabilityPolicy of a blob container.
func (o ImmutabilityPolicyPropertiesResponsePtrOutput) Properties() ImmutabilityPolicyPropertyResponsePtrOutput {
	return o.ApplyT(func(v *ImmutabilityPolicyPropertiesResponse) *ImmutabilityPolicyPropertyResponse {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(ImmutabilityPolicyPropertyResponsePtrOutput)
}

// The ImmutabilityPolicy update history of the blob container.
func (o ImmutabilityPolicyPropertiesResponsePtrOutput) UpdateHistory() UpdateHistoryPropertyResponseArrayOutput {
	return o.ApplyT(func(v *ImmutabilityPolicyPropertiesResponse) []UpdateHistoryPropertyResponse {
		if v == nil {
			return nil
		}
		return v.UpdateHistory
	}).(UpdateHistoryPropertyResponseArrayOutput)
}

// The properties of an ImmutabilityPolicy of a blob container.
type ImmutabilityPolicyProperty struct {
	// The immutability period for the blobs in the container since the policy creation, in days.
	ImmutabilityPeriodSinceCreationInDays int `pulumi:"immutabilityPeriodSinceCreationInDays"`
}

// ImmutabilityPolicyPropertyInput is an input type that accepts ImmutabilityPolicyPropertyArgs and ImmutabilityPolicyPropertyOutput values.
// You can construct a concrete instance of `ImmutabilityPolicyPropertyInput` via:
//
//          ImmutabilityPolicyPropertyArgs{...}
type ImmutabilityPolicyPropertyInput interface {
	pulumi.Input

	ToImmutabilityPolicyPropertyOutput() ImmutabilityPolicyPropertyOutput
	ToImmutabilityPolicyPropertyOutputWithContext(context.Context) ImmutabilityPolicyPropertyOutput
}

// The properties of an ImmutabilityPolicy of a blob container.
type ImmutabilityPolicyPropertyArgs struct {
	// The immutability period for the blobs in the container since the policy creation, in days.
	ImmutabilityPeriodSinceCreationInDays pulumi.IntInput `pulumi:"immutabilityPeriodSinceCreationInDays"`
}

func (ImmutabilityPolicyPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImmutabilityPolicyProperty)(nil)).Elem()
}

func (i ImmutabilityPolicyPropertyArgs) ToImmutabilityPolicyPropertyOutput() ImmutabilityPolicyPropertyOutput {
	return i.ToImmutabilityPolicyPropertyOutputWithContext(context.Background())
}

func (i ImmutabilityPolicyPropertyArgs) ToImmutabilityPolicyPropertyOutputWithContext(ctx context.Context) ImmutabilityPolicyPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImmutabilityPolicyPropertyOutput)
}

func (i ImmutabilityPolicyPropertyArgs) ToImmutabilityPolicyPropertyPtrOutput() ImmutabilityPolicyPropertyPtrOutput {
	return i.ToImmutabilityPolicyPropertyPtrOutputWithContext(context.Background())
}

func (i ImmutabilityPolicyPropertyArgs) ToImmutabilityPolicyPropertyPtrOutputWithContext(ctx context.Context) ImmutabilityPolicyPropertyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImmutabilityPolicyPropertyOutput).ToImmutabilityPolicyPropertyPtrOutputWithContext(ctx)
}

// ImmutabilityPolicyPropertyPtrInput is an input type that accepts ImmutabilityPolicyPropertyArgs, ImmutabilityPolicyPropertyPtr and ImmutabilityPolicyPropertyPtrOutput values.
// You can construct a concrete instance of `ImmutabilityPolicyPropertyPtrInput` via:
//
//          ImmutabilityPolicyPropertyArgs{...}
//
//  or:
//
//          nil
type ImmutabilityPolicyPropertyPtrInput interface {
	pulumi.Input

	ToImmutabilityPolicyPropertyPtrOutput() ImmutabilityPolicyPropertyPtrOutput
	ToImmutabilityPolicyPropertyPtrOutputWithContext(context.Context) ImmutabilityPolicyPropertyPtrOutput
}

type immutabilityPolicyPropertyPtrType ImmutabilityPolicyPropertyArgs

func ImmutabilityPolicyPropertyPtr(v *ImmutabilityPolicyPropertyArgs) ImmutabilityPolicyPropertyPtrInput {
	return (*immutabilityPolicyPropertyPtrType)(v)
}

func (*immutabilityPolicyPropertyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ImmutabilityPolicyProperty)(nil)).Elem()
}

func (i *immutabilityPolicyPropertyPtrType) ToImmutabilityPolicyPropertyPtrOutput() ImmutabilityPolicyPropertyPtrOutput {
	return i.ToImmutabilityPolicyPropertyPtrOutputWithContext(context.Background())
}

func (i *immutabilityPolicyPropertyPtrType) ToImmutabilityPolicyPropertyPtrOutputWithContext(ctx context.Context) ImmutabilityPolicyPropertyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImmutabilityPolicyPropertyPtrOutput)
}

// The properties of an ImmutabilityPolicy of a blob container.
type ImmutabilityPolicyPropertyOutput struct{ *pulumi.OutputState }

func (ImmutabilityPolicyPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImmutabilityPolicyProperty)(nil)).Elem()
}

func (o ImmutabilityPolicyPropertyOutput) ToImmutabilityPolicyPropertyOutput() ImmutabilityPolicyPropertyOutput {
	return o
}

func (o ImmutabilityPolicyPropertyOutput) ToImmutabilityPolicyPropertyOutputWithContext(ctx context.Context) ImmutabilityPolicyPropertyOutput {
	return o
}

func (o ImmutabilityPolicyPropertyOutput) ToImmutabilityPolicyPropertyPtrOutput() ImmutabilityPolicyPropertyPtrOutput {
	return o.ToImmutabilityPolicyPropertyPtrOutputWithContext(context.Background())
}

func (o ImmutabilityPolicyPropertyOutput) ToImmutabilityPolicyPropertyPtrOutputWithContext(ctx context.Context) ImmutabilityPolicyPropertyPtrOutput {
	return o.ApplyT(func(v ImmutabilityPolicyProperty) *ImmutabilityPolicyProperty {
		return &v
	}).(ImmutabilityPolicyPropertyPtrOutput)
}

// The immutability period for the blobs in the container since the policy creation, in days.
func (o ImmutabilityPolicyPropertyOutput) ImmutabilityPeriodSinceCreationInDays() pulumi.IntOutput {
	return o.ApplyT(func(v ImmutabilityPolicyProperty) int { return v.ImmutabilityPeriodSinceCreationInDays }).(pulumi.IntOutput)
}

type ImmutabilityPolicyPropertyPtrOutput struct{ *pulumi.OutputState }

func (ImmutabilityPolicyPropertyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImmutabilityPolicyProperty)(nil)).Elem()
}

func (o ImmutabilityPolicyPropertyPtrOutput) ToImmutabilityPolicyPropertyPtrOutput() ImmutabilityPolicyPropertyPtrOutput {
	return o
}

func (o ImmutabilityPolicyPropertyPtrOutput) ToImmutabilityPolicyPropertyPtrOutputWithContext(ctx context.Context) ImmutabilityPolicyPropertyPtrOutput {
	return o
}

func (o ImmutabilityPolicyPropertyPtrOutput) Elem() ImmutabilityPolicyPropertyOutput {
	return o.ApplyT(func(v *ImmutabilityPolicyProperty) ImmutabilityPolicyProperty { return *v }).(ImmutabilityPolicyPropertyOutput)
}

// The immutability period for the blobs in the container since the policy creation, in days.
func (o ImmutabilityPolicyPropertyPtrOutput) ImmutabilityPeriodSinceCreationInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ImmutabilityPolicyProperty) *int {
		if v == nil {
			return nil
		}
		return &v.ImmutabilityPeriodSinceCreationInDays
	}).(pulumi.IntPtrOutput)
}

// The properties of an ImmutabilityPolicy of a blob container.
type ImmutabilityPolicyPropertyResponse struct {
	// The immutability period for the blobs in the container since the policy creation, in days.
	ImmutabilityPeriodSinceCreationInDays int `pulumi:"immutabilityPeriodSinceCreationInDays"`
	// The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked.
	State string `pulumi:"state"`
}

// ImmutabilityPolicyPropertyResponseInput is an input type that accepts ImmutabilityPolicyPropertyResponseArgs and ImmutabilityPolicyPropertyResponseOutput values.
// You can construct a concrete instance of `ImmutabilityPolicyPropertyResponseInput` via:
//
//          ImmutabilityPolicyPropertyResponseArgs{...}
type ImmutabilityPolicyPropertyResponseInput interface {
	pulumi.Input

	ToImmutabilityPolicyPropertyResponseOutput() ImmutabilityPolicyPropertyResponseOutput
	ToImmutabilityPolicyPropertyResponseOutputWithContext(context.Context) ImmutabilityPolicyPropertyResponseOutput
}

// The properties of an ImmutabilityPolicy of a blob container.
type ImmutabilityPolicyPropertyResponseArgs struct {
	// The immutability period for the blobs in the container since the policy creation, in days.
	ImmutabilityPeriodSinceCreationInDays pulumi.IntInput `pulumi:"immutabilityPeriodSinceCreationInDays"`
	// The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked.
	State pulumi.StringInput `pulumi:"state"`
}

func (ImmutabilityPolicyPropertyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImmutabilityPolicyPropertyResponse)(nil)).Elem()
}

func (i ImmutabilityPolicyPropertyResponseArgs) ToImmutabilityPolicyPropertyResponseOutput() ImmutabilityPolicyPropertyResponseOutput {
	return i.ToImmutabilityPolicyPropertyResponseOutputWithContext(context.Background())
}

func (i ImmutabilityPolicyPropertyResponseArgs) ToImmutabilityPolicyPropertyResponseOutputWithContext(ctx context.Context) ImmutabilityPolicyPropertyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImmutabilityPolicyPropertyResponseOutput)
}

func (i ImmutabilityPolicyPropertyResponseArgs) ToImmutabilityPolicyPropertyResponsePtrOutput() ImmutabilityPolicyPropertyResponsePtrOutput {
	return i.ToImmutabilityPolicyPropertyResponsePtrOutputWithContext(context.Background())
}

func (i ImmutabilityPolicyPropertyResponseArgs) ToImmutabilityPolicyPropertyResponsePtrOutputWithContext(ctx context.Context) ImmutabilityPolicyPropertyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImmutabilityPolicyPropertyResponseOutput).ToImmutabilityPolicyPropertyResponsePtrOutputWithContext(ctx)
}

// ImmutabilityPolicyPropertyResponsePtrInput is an input type that accepts ImmutabilityPolicyPropertyResponseArgs, ImmutabilityPolicyPropertyResponsePtr and ImmutabilityPolicyPropertyResponsePtrOutput values.
// You can construct a concrete instance of `ImmutabilityPolicyPropertyResponsePtrInput` via:
//
//          ImmutabilityPolicyPropertyResponseArgs{...}
//
//  or:
//
//          nil
type ImmutabilityPolicyPropertyResponsePtrInput interface {
	pulumi.Input

	ToImmutabilityPolicyPropertyResponsePtrOutput() ImmutabilityPolicyPropertyResponsePtrOutput
	ToImmutabilityPolicyPropertyResponsePtrOutputWithContext(context.Context) ImmutabilityPolicyPropertyResponsePtrOutput
}

type immutabilityPolicyPropertyResponsePtrType ImmutabilityPolicyPropertyResponseArgs

func ImmutabilityPolicyPropertyResponsePtr(v *ImmutabilityPolicyPropertyResponseArgs) ImmutabilityPolicyPropertyResponsePtrInput {
	return (*immutabilityPolicyPropertyResponsePtrType)(v)
}

func (*immutabilityPolicyPropertyResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ImmutabilityPolicyPropertyResponse)(nil)).Elem()
}

func (i *immutabilityPolicyPropertyResponsePtrType) ToImmutabilityPolicyPropertyResponsePtrOutput() ImmutabilityPolicyPropertyResponsePtrOutput {
	return i.ToImmutabilityPolicyPropertyResponsePtrOutputWithContext(context.Background())
}

func (i *immutabilityPolicyPropertyResponsePtrType) ToImmutabilityPolicyPropertyResponsePtrOutputWithContext(ctx context.Context) ImmutabilityPolicyPropertyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImmutabilityPolicyPropertyResponsePtrOutput)
}

// The properties of an ImmutabilityPolicy of a blob container.
type ImmutabilityPolicyPropertyResponseOutput struct{ *pulumi.OutputState }

func (ImmutabilityPolicyPropertyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImmutabilityPolicyPropertyResponse)(nil)).Elem()
}

func (o ImmutabilityPolicyPropertyResponseOutput) ToImmutabilityPolicyPropertyResponseOutput() ImmutabilityPolicyPropertyResponseOutput {
	return o
}

func (o ImmutabilityPolicyPropertyResponseOutput) ToImmutabilityPolicyPropertyResponseOutputWithContext(ctx context.Context) ImmutabilityPolicyPropertyResponseOutput {
	return o
}

func (o ImmutabilityPolicyPropertyResponseOutput) ToImmutabilityPolicyPropertyResponsePtrOutput() ImmutabilityPolicyPropertyResponsePtrOutput {
	return o.ToImmutabilityPolicyPropertyResponsePtrOutputWithContext(context.Background())
}

func (o ImmutabilityPolicyPropertyResponseOutput) ToImmutabilityPolicyPropertyResponsePtrOutputWithContext(ctx context.Context) ImmutabilityPolicyPropertyResponsePtrOutput {
	return o.ApplyT(func(v ImmutabilityPolicyPropertyResponse) *ImmutabilityPolicyPropertyResponse {
		return &v
	}).(ImmutabilityPolicyPropertyResponsePtrOutput)
}

// The immutability period for the blobs in the container since the policy creation, in days.
func (o ImmutabilityPolicyPropertyResponseOutput) ImmutabilityPeriodSinceCreationInDays() pulumi.IntOutput {
	return o.ApplyT(func(v ImmutabilityPolicyPropertyResponse) int { return v.ImmutabilityPeriodSinceCreationInDays }).(pulumi.IntOutput)
}

// The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked.
func (o ImmutabilityPolicyPropertyResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ImmutabilityPolicyPropertyResponse) string { return v.State }).(pulumi.StringOutput)
}

type ImmutabilityPolicyPropertyResponsePtrOutput struct{ *pulumi.OutputState }

func (ImmutabilityPolicyPropertyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImmutabilityPolicyPropertyResponse)(nil)).Elem()
}

func (o ImmutabilityPolicyPropertyResponsePtrOutput) ToImmutabilityPolicyPropertyResponsePtrOutput() ImmutabilityPolicyPropertyResponsePtrOutput {
	return o
}

func (o ImmutabilityPolicyPropertyResponsePtrOutput) ToImmutabilityPolicyPropertyResponsePtrOutputWithContext(ctx context.Context) ImmutabilityPolicyPropertyResponsePtrOutput {
	return o
}

func (o ImmutabilityPolicyPropertyResponsePtrOutput) Elem() ImmutabilityPolicyPropertyResponseOutput {
	return o.ApplyT(func(v *ImmutabilityPolicyPropertyResponse) ImmutabilityPolicyPropertyResponse { return *v }).(ImmutabilityPolicyPropertyResponseOutput)
}

// The immutability period for the blobs in the container since the policy creation, in days.
func (o ImmutabilityPolicyPropertyResponsePtrOutput) ImmutabilityPeriodSinceCreationInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ImmutabilityPolicyPropertyResponse) *int {
		if v == nil {
			return nil
		}
		return &v.ImmutabilityPeriodSinceCreationInDays
	}).(pulumi.IntPtrOutput)
}

// The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked.
func (o ImmutabilityPolicyPropertyResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImmutabilityPolicyPropertyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.State
	}).(pulumi.StringPtrOutput)
}

// Properties of key vault.
type KeyVaultProperties struct {
	// The name of KeyVault key.
	KeyName *string `pulumi:"keyName"`
	// The Uri of KeyVault.
	KeyVaultUri *string `pulumi:"keyVaultUri"`
	// The version of KeyVault key.
	KeyVersion *string `pulumi:"keyVersion"`
}

// KeyVaultPropertiesInput is an input type that accepts KeyVaultPropertiesArgs and KeyVaultPropertiesOutput values.
// You can construct a concrete instance of `KeyVaultPropertiesInput` via:
//
//          KeyVaultPropertiesArgs{...}
type KeyVaultPropertiesInput interface {
	pulumi.Input

	ToKeyVaultPropertiesOutput() KeyVaultPropertiesOutput
	ToKeyVaultPropertiesOutputWithContext(context.Context) KeyVaultPropertiesOutput
}

// Properties of key vault.
type KeyVaultPropertiesArgs struct {
	// The name of KeyVault key.
	KeyName pulumi.StringPtrInput `pulumi:"keyName"`
	// The Uri of KeyVault.
	KeyVaultUri pulumi.StringPtrInput `pulumi:"keyVaultUri"`
	// The version of KeyVault key.
	KeyVersion pulumi.StringPtrInput `pulumi:"keyVersion"`
}

func (KeyVaultPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultProperties)(nil)).Elem()
}

func (i KeyVaultPropertiesArgs) ToKeyVaultPropertiesOutput() KeyVaultPropertiesOutput {
	return i.ToKeyVaultPropertiesOutputWithContext(context.Background())
}

func (i KeyVaultPropertiesArgs) ToKeyVaultPropertiesOutputWithContext(ctx context.Context) KeyVaultPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesOutput)
}

func (i KeyVaultPropertiesArgs) ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput {
	return i.ToKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (i KeyVaultPropertiesArgs) ToKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) KeyVaultPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesOutput).ToKeyVaultPropertiesPtrOutputWithContext(ctx)
}

// KeyVaultPropertiesPtrInput is an input type that accepts KeyVaultPropertiesArgs, KeyVaultPropertiesPtr and KeyVaultPropertiesPtrOutput values.
// You can construct a concrete instance of `KeyVaultPropertiesPtrInput` via:
//
//          KeyVaultPropertiesArgs{...}
//
//  or:
//
//          nil
type KeyVaultPropertiesPtrInput interface {
	pulumi.Input

	ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput
	ToKeyVaultPropertiesPtrOutputWithContext(context.Context) KeyVaultPropertiesPtrOutput
}

type keyVaultPropertiesPtrType KeyVaultPropertiesArgs

func KeyVaultPropertiesPtr(v *KeyVaultPropertiesArgs) KeyVaultPropertiesPtrInput {
	return (*keyVaultPropertiesPtrType)(v)
}

func (*keyVaultPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultProperties)(nil)).Elem()
}

func (i *keyVaultPropertiesPtrType) ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput {
	return i.ToKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (i *keyVaultPropertiesPtrType) ToKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) KeyVaultPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesPtrOutput)
}

// Properties of key vault.
type KeyVaultPropertiesOutput struct{ *pulumi.OutputState }

func (KeyVaultPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultProperties)(nil)).Elem()
}

func (o KeyVaultPropertiesOutput) ToKeyVaultPropertiesOutput() KeyVaultPropertiesOutput {
	return o
}

func (o KeyVaultPropertiesOutput) ToKeyVaultPropertiesOutputWithContext(ctx context.Context) KeyVaultPropertiesOutput {
	return o
}

func (o KeyVaultPropertiesOutput) ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput {
	return o.ToKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (o KeyVaultPropertiesOutput) ToKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) KeyVaultPropertiesPtrOutput {
	return o.ApplyT(func(v KeyVaultProperties) *KeyVaultProperties {
		return &v
	}).(KeyVaultPropertiesPtrOutput)
}

// The name of KeyVault key.
func (o KeyVaultPropertiesOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultProperties) *string { return v.KeyName }).(pulumi.StringPtrOutput)
}

// The Uri of KeyVault.
func (o KeyVaultPropertiesOutput) KeyVaultUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultProperties) *string { return v.KeyVaultUri }).(pulumi.StringPtrOutput)
}

// The version of KeyVault key.
func (o KeyVaultPropertiesOutput) KeyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultProperties) *string { return v.KeyVersion }).(pulumi.StringPtrOutput)
}

type KeyVaultPropertiesPtrOutput struct{ *pulumi.OutputState }

func (KeyVaultPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultProperties)(nil)).Elem()
}

func (o KeyVaultPropertiesPtrOutput) ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput {
	return o
}

func (o KeyVaultPropertiesPtrOutput) ToKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) KeyVaultPropertiesPtrOutput {
	return o
}

func (o KeyVaultPropertiesPtrOutput) Elem() KeyVaultPropertiesOutput {
	return o.ApplyT(func(v *KeyVaultProperties) KeyVaultProperties { return *v }).(KeyVaultPropertiesOutput)
}

// The name of KeyVault key.
func (o KeyVaultPropertiesPtrOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultProperties) *string {
		if v == nil {
			return nil
		}
		return v.KeyName
	}).(pulumi.StringPtrOutput)
}

// The Uri of KeyVault.
func (o KeyVaultPropertiesPtrOutput) KeyVaultUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultProperties) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultUri
	}).(pulumi.StringPtrOutput)
}

// The version of KeyVault key.
func (o KeyVaultPropertiesPtrOutput) KeyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultProperties) *string {
		if v == nil {
			return nil
		}
		return v.KeyVersion
	}).(pulumi.StringPtrOutput)
}

// Properties of key vault.
type KeyVaultPropertiesResponse struct {
	// The name of KeyVault key.
	Keyname *string `pulumi:"keyname"`
	// The Uri of KeyVault.
	Keyvaulturi *string `pulumi:"keyvaulturi"`
	// The version of KeyVault key.
	Keyversion *string `pulumi:"keyversion"`
}

// KeyVaultPropertiesResponseInput is an input type that accepts KeyVaultPropertiesResponseArgs and KeyVaultPropertiesResponseOutput values.
// You can construct a concrete instance of `KeyVaultPropertiesResponseInput` via:
//
//          KeyVaultPropertiesResponseArgs{...}
type KeyVaultPropertiesResponseInput interface {
	pulumi.Input

	ToKeyVaultPropertiesResponseOutput() KeyVaultPropertiesResponseOutput
	ToKeyVaultPropertiesResponseOutputWithContext(context.Context) KeyVaultPropertiesResponseOutput
}

// Properties of key vault.
type KeyVaultPropertiesResponseArgs struct {
	// The name of KeyVault key.
	Keyname pulumi.StringPtrInput `pulumi:"keyname"`
	// The Uri of KeyVault.
	Keyvaulturi pulumi.StringPtrInput `pulumi:"keyvaulturi"`
	// The version of KeyVault key.
	Keyversion pulumi.StringPtrInput `pulumi:"keyversion"`
}

func (KeyVaultPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultPropertiesResponse)(nil)).Elem()
}

func (i KeyVaultPropertiesResponseArgs) ToKeyVaultPropertiesResponseOutput() KeyVaultPropertiesResponseOutput {
	return i.ToKeyVaultPropertiesResponseOutputWithContext(context.Background())
}

func (i KeyVaultPropertiesResponseArgs) ToKeyVaultPropertiesResponseOutputWithContext(ctx context.Context) KeyVaultPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesResponseOutput)
}

func (i KeyVaultPropertiesResponseArgs) ToKeyVaultPropertiesResponsePtrOutput() KeyVaultPropertiesResponsePtrOutput {
	return i.ToKeyVaultPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i KeyVaultPropertiesResponseArgs) ToKeyVaultPropertiesResponsePtrOutputWithContext(ctx context.Context) KeyVaultPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesResponseOutput).ToKeyVaultPropertiesResponsePtrOutputWithContext(ctx)
}

// KeyVaultPropertiesResponsePtrInput is an input type that accepts KeyVaultPropertiesResponseArgs, KeyVaultPropertiesResponsePtr and KeyVaultPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `KeyVaultPropertiesResponsePtrInput` via:
//
//          KeyVaultPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type KeyVaultPropertiesResponsePtrInput interface {
	pulumi.Input

	ToKeyVaultPropertiesResponsePtrOutput() KeyVaultPropertiesResponsePtrOutput
	ToKeyVaultPropertiesResponsePtrOutputWithContext(context.Context) KeyVaultPropertiesResponsePtrOutput
}

type keyVaultPropertiesResponsePtrType KeyVaultPropertiesResponseArgs

func KeyVaultPropertiesResponsePtr(v *KeyVaultPropertiesResponseArgs) KeyVaultPropertiesResponsePtrInput {
	return (*keyVaultPropertiesResponsePtrType)(v)
}

func (*keyVaultPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultPropertiesResponse)(nil)).Elem()
}

func (i *keyVaultPropertiesResponsePtrType) ToKeyVaultPropertiesResponsePtrOutput() KeyVaultPropertiesResponsePtrOutput {
	return i.ToKeyVaultPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *keyVaultPropertiesResponsePtrType) ToKeyVaultPropertiesResponsePtrOutputWithContext(ctx context.Context) KeyVaultPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesResponsePtrOutput)
}

// Properties of key vault.
type KeyVaultPropertiesResponseOutput struct{ *pulumi.OutputState }

func (KeyVaultPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultPropertiesResponse)(nil)).Elem()
}

func (o KeyVaultPropertiesResponseOutput) ToKeyVaultPropertiesResponseOutput() KeyVaultPropertiesResponseOutput {
	return o
}

func (o KeyVaultPropertiesResponseOutput) ToKeyVaultPropertiesResponseOutputWithContext(ctx context.Context) KeyVaultPropertiesResponseOutput {
	return o
}

func (o KeyVaultPropertiesResponseOutput) ToKeyVaultPropertiesResponsePtrOutput() KeyVaultPropertiesResponsePtrOutput {
	return o.ToKeyVaultPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o KeyVaultPropertiesResponseOutput) ToKeyVaultPropertiesResponsePtrOutputWithContext(ctx context.Context) KeyVaultPropertiesResponsePtrOutput {
	return o.ApplyT(func(v KeyVaultPropertiesResponse) *KeyVaultPropertiesResponse {
		return &v
	}).(KeyVaultPropertiesResponsePtrOutput)
}

// The name of KeyVault key.
func (o KeyVaultPropertiesResponseOutput) Keyname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultPropertiesResponse) *string { return v.Keyname }).(pulumi.StringPtrOutput)
}

// The Uri of KeyVault.
func (o KeyVaultPropertiesResponseOutput) Keyvaulturi() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultPropertiesResponse) *string { return v.Keyvaulturi }).(pulumi.StringPtrOutput)
}

// The version of KeyVault key.
func (o KeyVaultPropertiesResponseOutput) Keyversion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultPropertiesResponse) *string { return v.Keyversion }).(pulumi.StringPtrOutput)
}

type KeyVaultPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (KeyVaultPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultPropertiesResponse)(nil)).Elem()
}

func (o KeyVaultPropertiesResponsePtrOutput) ToKeyVaultPropertiesResponsePtrOutput() KeyVaultPropertiesResponsePtrOutput {
	return o
}

func (o KeyVaultPropertiesResponsePtrOutput) ToKeyVaultPropertiesResponsePtrOutputWithContext(ctx context.Context) KeyVaultPropertiesResponsePtrOutput {
	return o
}

func (o KeyVaultPropertiesResponsePtrOutput) Elem() KeyVaultPropertiesResponseOutput {
	return o.ApplyT(func(v *KeyVaultPropertiesResponse) KeyVaultPropertiesResponse { return *v }).(KeyVaultPropertiesResponseOutput)
}

// The name of KeyVault key.
func (o KeyVaultPropertiesResponsePtrOutput) Keyname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Keyname
	}).(pulumi.StringPtrOutput)
}

// The Uri of KeyVault.
func (o KeyVaultPropertiesResponsePtrOutput) Keyvaulturi() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Keyvaulturi
	}).(pulumi.StringPtrOutput)
}

// The version of KeyVault key.
func (o KeyVaultPropertiesResponsePtrOutput) Keyversion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Keyversion
	}).(pulumi.StringPtrOutput)
}

// The LegalHold property of a blob container.
type LegalHoldProperties struct {
	// The list of LegalHold tags of a blob container.
	Tags []TagProperty `pulumi:"tags"`
}

// LegalHoldPropertiesInput is an input type that accepts LegalHoldPropertiesArgs and LegalHoldPropertiesOutput values.
// You can construct a concrete instance of `LegalHoldPropertiesInput` via:
//
//          LegalHoldPropertiesArgs{...}
type LegalHoldPropertiesInput interface {
	pulumi.Input

	ToLegalHoldPropertiesOutput() LegalHoldPropertiesOutput
	ToLegalHoldPropertiesOutputWithContext(context.Context) LegalHoldPropertiesOutput
}

// The LegalHold property of a blob container.
type LegalHoldPropertiesArgs struct {
	// The list of LegalHold tags of a blob container.
	Tags TagPropertyArrayInput `pulumi:"tags"`
}

func (LegalHoldPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LegalHoldProperties)(nil)).Elem()
}

func (i LegalHoldPropertiesArgs) ToLegalHoldPropertiesOutput() LegalHoldPropertiesOutput {
	return i.ToLegalHoldPropertiesOutputWithContext(context.Background())
}

func (i LegalHoldPropertiesArgs) ToLegalHoldPropertiesOutputWithContext(ctx context.Context) LegalHoldPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LegalHoldPropertiesOutput)
}

// The LegalHold property of a blob container.
type LegalHoldPropertiesOutput struct{ *pulumi.OutputState }

func (LegalHoldPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LegalHoldProperties)(nil)).Elem()
}

func (o LegalHoldPropertiesOutput) ToLegalHoldPropertiesOutput() LegalHoldPropertiesOutput {
	return o
}

func (o LegalHoldPropertiesOutput) ToLegalHoldPropertiesOutputWithContext(ctx context.Context) LegalHoldPropertiesOutput {
	return o
}

// The list of LegalHold tags of a blob container.
func (o LegalHoldPropertiesOutput) Tags() TagPropertyArrayOutput {
	return o.ApplyT(func(v LegalHoldProperties) []TagProperty { return v.Tags }).(TagPropertyArrayOutput)
}

// The LegalHold property of a blob container.
type LegalHoldPropertiesResponse struct {
	// The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.
	HasLegalHold bool `pulumi:"hasLegalHold"`
	// The list of LegalHold tags of a blob container.
	Tags []TagPropertyResponse `pulumi:"tags"`
}

// LegalHoldPropertiesResponseInput is an input type that accepts LegalHoldPropertiesResponseArgs and LegalHoldPropertiesResponseOutput values.
// You can construct a concrete instance of `LegalHoldPropertiesResponseInput` via:
//
//          LegalHoldPropertiesResponseArgs{...}
type LegalHoldPropertiesResponseInput interface {
	pulumi.Input

	ToLegalHoldPropertiesResponseOutput() LegalHoldPropertiesResponseOutput
	ToLegalHoldPropertiesResponseOutputWithContext(context.Context) LegalHoldPropertiesResponseOutput
}

// The LegalHold property of a blob container.
type LegalHoldPropertiesResponseArgs struct {
	// The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.
	HasLegalHold pulumi.BoolInput `pulumi:"hasLegalHold"`
	// The list of LegalHold tags of a blob container.
	Tags TagPropertyResponseArrayInput `pulumi:"tags"`
}

func (LegalHoldPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LegalHoldPropertiesResponse)(nil)).Elem()
}

func (i LegalHoldPropertiesResponseArgs) ToLegalHoldPropertiesResponseOutput() LegalHoldPropertiesResponseOutput {
	return i.ToLegalHoldPropertiesResponseOutputWithContext(context.Background())
}

func (i LegalHoldPropertiesResponseArgs) ToLegalHoldPropertiesResponseOutputWithContext(ctx context.Context) LegalHoldPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LegalHoldPropertiesResponseOutput)
}

func (i LegalHoldPropertiesResponseArgs) ToLegalHoldPropertiesResponsePtrOutput() LegalHoldPropertiesResponsePtrOutput {
	return i.ToLegalHoldPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i LegalHoldPropertiesResponseArgs) ToLegalHoldPropertiesResponsePtrOutputWithContext(ctx context.Context) LegalHoldPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LegalHoldPropertiesResponseOutput).ToLegalHoldPropertiesResponsePtrOutputWithContext(ctx)
}

// LegalHoldPropertiesResponsePtrInput is an input type that accepts LegalHoldPropertiesResponseArgs, LegalHoldPropertiesResponsePtr and LegalHoldPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `LegalHoldPropertiesResponsePtrInput` via:
//
//          LegalHoldPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type LegalHoldPropertiesResponsePtrInput interface {
	pulumi.Input

	ToLegalHoldPropertiesResponsePtrOutput() LegalHoldPropertiesResponsePtrOutput
	ToLegalHoldPropertiesResponsePtrOutputWithContext(context.Context) LegalHoldPropertiesResponsePtrOutput
}

type legalHoldPropertiesResponsePtrType LegalHoldPropertiesResponseArgs

func LegalHoldPropertiesResponsePtr(v *LegalHoldPropertiesResponseArgs) LegalHoldPropertiesResponsePtrInput {
	return (*legalHoldPropertiesResponsePtrType)(v)
}

func (*legalHoldPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LegalHoldPropertiesResponse)(nil)).Elem()
}

func (i *legalHoldPropertiesResponsePtrType) ToLegalHoldPropertiesResponsePtrOutput() LegalHoldPropertiesResponsePtrOutput {
	return i.ToLegalHoldPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *legalHoldPropertiesResponsePtrType) ToLegalHoldPropertiesResponsePtrOutputWithContext(ctx context.Context) LegalHoldPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LegalHoldPropertiesResponsePtrOutput)
}

// The LegalHold property of a blob container.
type LegalHoldPropertiesResponseOutput struct{ *pulumi.OutputState }

func (LegalHoldPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LegalHoldPropertiesResponse)(nil)).Elem()
}

func (o LegalHoldPropertiesResponseOutput) ToLegalHoldPropertiesResponseOutput() LegalHoldPropertiesResponseOutput {
	return o
}

func (o LegalHoldPropertiesResponseOutput) ToLegalHoldPropertiesResponseOutputWithContext(ctx context.Context) LegalHoldPropertiesResponseOutput {
	return o
}

func (o LegalHoldPropertiesResponseOutput) ToLegalHoldPropertiesResponsePtrOutput() LegalHoldPropertiesResponsePtrOutput {
	return o.ToLegalHoldPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o LegalHoldPropertiesResponseOutput) ToLegalHoldPropertiesResponsePtrOutputWithContext(ctx context.Context) LegalHoldPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LegalHoldPropertiesResponse) *LegalHoldPropertiesResponse {
		return &v
	}).(LegalHoldPropertiesResponsePtrOutput)
}

// The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.
func (o LegalHoldPropertiesResponseOutput) HasLegalHold() pulumi.BoolOutput {
	return o.ApplyT(func(v LegalHoldPropertiesResponse) bool { return v.HasLegalHold }).(pulumi.BoolOutput)
}

// The list of LegalHold tags of a blob container.
func (o LegalHoldPropertiesResponseOutput) Tags() TagPropertyResponseArrayOutput {
	return o.ApplyT(func(v LegalHoldPropertiesResponse) []TagPropertyResponse { return v.Tags }).(TagPropertyResponseArrayOutput)
}

type LegalHoldPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (LegalHoldPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LegalHoldPropertiesResponse)(nil)).Elem()
}

func (o LegalHoldPropertiesResponsePtrOutput) ToLegalHoldPropertiesResponsePtrOutput() LegalHoldPropertiesResponsePtrOutput {
	return o
}

func (o LegalHoldPropertiesResponsePtrOutput) ToLegalHoldPropertiesResponsePtrOutputWithContext(ctx context.Context) LegalHoldPropertiesResponsePtrOutput {
	return o
}

func (o LegalHoldPropertiesResponsePtrOutput) Elem() LegalHoldPropertiesResponseOutput {
	return o.ApplyT(func(v *LegalHoldPropertiesResponse) LegalHoldPropertiesResponse { return *v }).(LegalHoldPropertiesResponseOutput)
}

// The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.
func (o LegalHoldPropertiesResponsePtrOutput) HasLegalHold() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LegalHoldPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.HasLegalHold
	}).(pulumi.BoolPtrOutput)
}

// The list of LegalHold tags of a blob container.
func (o LegalHoldPropertiesResponsePtrOutput) Tags() TagPropertyResponseArrayOutput {
	return o.ApplyT(func(v *LegalHoldPropertiesResponse) []TagPropertyResponse {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(TagPropertyResponseArrayOutput)
}

// Network rule set
type NetworkRuleSet struct {
	// Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, "Logging, Metrics"), or None to bypass none of those traffics.
	Bypass *string `pulumi:"bypass"`
	// Specifies the default action of allow or deny when no other rules match.
	DefaultAction string `pulumi:"defaultAction"`
	// Sets the IP ACL rules
	IpRules []IPRule `pulumi:"ipRules"`
	// Sets the virtual network rules
	VirtualNetworkRules []VirtualNetworkRule `pulumi:"virtualNetworkRules"`
}

// NetworkRuleSetInput is an input type that accepts NetworkRuleSetArgs and NetworkRuleSetOutput values.
// You can construct a concrete instance of `NetworkRuleSetInput` via:
//
//          NetworkRuleSetArgs{...}
type NetworkRuleSetInput interface {
	pulumi.Input

	ToNetworkRuleSetOutput() NetworkRuleSetOutput
	ToNetworkRuleSetOutputWithContext(context.Context) NetworkRuleSetOutput
}

// Network rule set
type NetworkRuleSetArgs struct {
	// Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, "Logging, Metrics"), or None to bypass none of those traffics.
	Bypass pulumi.StringPtrInput `pulumi:"bypass"`
	// Specifies the default action of allow or deny when no other rules match.
	DefaultAction pulumi.StringInput `pulumi:"defaultAction"`
	// Sets the IP ACL rules
	IpRules IPRuleArrayInput `pulumi:"ipRules"`
	// Sets the virtual network rules
	VirtualNetworkRules VirtualNetworkRuleArrayInput `pulumi:"virtualNetworkRules"`
}

func (NetworkRuleSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRuleSet)(nil)).Elem()
}

func (i NetworkRuleSetArgs) ToNetworkRuleSetOutput() NetworkRuleSetOutput {
	return i.ToNetworkRuleSetOutputWithContext(context.Background())
}

func (i NetworkRuleSetArgs) ToNetworkRuleSetOutputWithContext(ctx context.Context) NetworkRuleSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRuleSetOutput)
}

func (i NetworkRuleSetArgs) ToNetworkRuleSetPtrOutput() NetworkRuleSetPtrOutput {
	return i.ToNetworkRuleSetPtrOutputWithContext(context.Background())
}

func (i NetworkRuleSetArgs) ToNetworkRuleSetPtrOutputWithContext(ctx context.Context) NetworkRuleSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRuleSetOutput).ToNetworkRuleSetPtrOutputWithContext(ctx)
}

// NetworkRuleSetPtrInput is an input type that accepts NetworkRuleSetArgs, NetworkRuleSetPtr and NetworkRuleSetPtrOutput values.
// You can construct a concrete instance of `NetworkRuleSetPtrInput` via:
//
//          NetworkRuleSetArgs{...}
//
//  or:
//
//          nil
type NetworkRuleSetPtrInput interface {
	pulumi.Input

	ToNetworkRuleSetPtrOutput() NetworkRuleSetPtrOutput
	ToNetworkRuleSetPtrOutputWithContext(context.Context) NetworkRuleSetPtrOutput
}

type networkRuleSetPtrType NetworkRuleSetArgs

func NetworkRuleSetPtr(v *NetworkRuleSetArgs) NetworkRuleSetPtrInput {
	return (*networkRuleSetPtrType)(v)
}

func (*networkRuleSetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkRuleSet)(nil)).Elem()
}

func (i *networkRuleSetPtrType) ToNetworkRuleSetPtrOutput() NetworkRuleSetPtrOutput {
	return i.ToNetworkRuleSetPtrOutputWithContext(context.Background())
}

func (i *networkRuleSetPtrType) ToNetworkRuleSetPtrOutputWithContext(ctx context.Context) NetworkRuleSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRuleSetPtrOutput)
}

// Network rule set
type NetworkRuleSetOutput struct{ *pulumi.OutputState }

func (NetworkRuleSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRuleSet)(nil)).Elem()
}

func (o NetworkRuleSetOutput) ToNetworkRuleSetOutput() NetworkRuleSetOutput {
	return o
}

func (o NetworkRuleSetOutput) ToNetworkRuleSetOutputWithContext(ctx context.Context) NetworkRuleSetOutput {
	return o
}

func (o NetworkRuleSetOutput) ToNetworkRuleSetPtrOutput() NetworkRuleSetPtrOutput {
	return o.ToNetworkRuleSetPtrOutputWithContext(context.Background())
}

func (o NetworkRuleSetOutput) ToNetworkRuleSetPtrOutputWithContext(ctx context.Context) NetworkRuleSetPtrOutput {
	return o.ApplyT(func(v NetworkRuleSet) *NetworkRuleSet {
		return &v
	}).(NetworkRuleSetPtrOutput)
}

// Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, "Logging, Metrics"), or None to bypass none of those traffics.
func (o NetworkRuleSetOutput) Bypass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkRuleSet) *string { return v.Bypass }).(pulumi.StringPtrOutput)
}

// Specifies the default action of allow or deny when no other rules match.
func (o NetworkRuleSetOutput) DefaultAction() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkRuleSet) string { return v.DefaultAction }).(pulumi.StringOutput)
}

// Sets the IP ACL rules
func (o NetworkRuleSetOutput) IpRules() IPRuleArrayOutput {
	return o.ApplyT(func(v NetworkRuleSet) []IPRule { return v.IpRules }).(IPRuleArrayOutput)
}

// Sets the virtual network rules
func (o NetworkRuleSetOutput) VirtualNetworkRules() VirtualNetworkRuleArrayOutput {
	return o.ApplyT(func(v NetworkRuleSet) []VirtualNetworkRule { return v.VirtualNetworkRules }).(VirtualNetworkRuleArrayOutput)
}

type NetworkRuleSetPtrOutput struct{ *pulumi.OutputState }

func (NetworkRuleSetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkRuleSet)(nil)).Elem()
}

func (o NetworkRuleSetPtrOutput) ToNetworkRuleSetPtrOutput() NetworkRuleSetPtrOutput {
	return o
}

func (o NetworkRuleSetPtrOutput) ToNetworkRuleSetPtrOutputWithContext(ctx context.Context) NetworkRuleSetPtrOutput {
	return o
}

func (o NetworkRuleSetPtrOutput) Elem() NetworkRuleSetOutput {
	return o.ApplyT(func(v *NetworkRuleSet) NetworkRuleSet { return *v }).(NetworkRuleSetOutput)
}

// Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, "Logging, Metrics"), or None to bypass none of those traffics.
func (o NetworkRuleSetPtrOutput) Bypass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkRuleSet) *string {
		if v == nil {
			return nil
		}
		return v.Bypass
	}).(pulumi.StringPtrOutput)
}

// Specifies the default action of allow or deny when no other rules match.
func (o NetworkRuleSetPtrOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkRuleSet) *string {
		if v == nil {
			return nil
		}
		return &v.DefaultAction
	}).(pulumi.StringPtrOutput)
}

// Sets the IP ACL rules
func (o NetworkRuleSetPtrOutput) IpRules() IPRuleArrayOutput {
	return o.ApplyT(func(v *NetworkRuleSet) []IPRule {
		if v == nil {
			return nil
		}
		return v.IpRules
	}).(IPRuleArrayOutput)
}

// Sets the virtual network rules
func (o NetworkRuleSetPtrOutput) VirtualNetworkRules() VirtualNetworkRuleArrayOutput {
	return o.ApplyT(func(v *NetworkRuleSet) []VirtualNetworkRule {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkRules
	}).(VirtualNetworkRuleArrayOutput)
}

// Network rule set
type NetworkRuleSetResponse struct {
	// Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, "Logging, Metrics"), or None to bypass none of those traffics.
	Bypass *string `pulumi:"bypass"`
	// Specifies the default action of allow or deny when no other rules match.
	DefaultAction string `pulumi:"defaultAction"`
	// Sets the IP ACL rules
	IpRules []IPRuleResponse `pulumi:"ipRules"`
	// Sets the virtual network rules
	VirtualNetworkRules []VirtualNetworkRuleResponse `pulumi:"virtualNetworkRules"`
}

// NetworkRuleSetResponseInput is an input type that accepts NetworkRuleSetResponseArgs and NetworkRuleSetResponseOutput values.
// You can construct a concrete instance of `NetworkRuleSetResponseInput` via:
//
//          NetworkRuleSetResponseArgs{...}
type NetworkRuleSetResponseInput interface {
	pulumi.Input

	ToNetworkRuleSetResponseOutput() NetworkRuleSetResponseOutput
	ToNetworkRuleSetResponseOutputWithContext(context.Context) NetworkRuleSetResponseOutput
}

// Network rule set
type NetworkRuleSetResponseArgs struct {
	// Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, "Logging, Metrics"), or None to bypass none of those traffics.
	Bypass pulumi.StringPtrInput `pulumi:"bypass"`
	// Specifies the default action of allow or deny when no other rules match.
	DefaultAction pulumi.StringInput `pulumi:"defaultAction"`
	// Sets the IP ACL rules
	IpRules IPRuleResponseArrayInput `pulumi:"ipRules"`
	// Sets the virtual network rules
	VirtualNetworkRules VirtualNetworkRuleResponseArrayInput `pulumi:"virtualNetworkRules"`
}

func (NetworkRuleSetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRuleSetResponse)(nil)).Elem()
}

func (i NetworkRuleSetResponseArgs) ToNetworkRuleSetResponseOutput() NetworkRuleSetResponseOutput {
	return i.ToNetworkRuleSetResponseOutputWithContext(context.Background())
}

func (i NetworkRuleSetResponseArgs) ToNetworkRuleSetResponseOutputWithContext(ctx context.Context) NetworkRuleSetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRuleSetResponseOutput)
}

func (i NetworkRuleSetResponseArgs) ToNetworkRuleSetResponsePtrOutput() NetworkRuleSetResponsePtrOutput {
	return i.ToNetworkRuleSetResponsePtrOutputWithContext(context.Background())
}

func (i NetworkRuleSetResponseArgs) ToNetworkRuleSetResponsePtrOutputWithContext(ctx context.Context) NetworkRuleSetResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRuleSetResponseOutput).ToNetworkRuleSetResponsePtrOutputWithContext(ctx)
}

// NetworkRuleSetResponsePtrInput is an input type that accepts NetworkRuleSetResponseArgs, NetworkRuleSetResponsePtr and NetworkRuleSetResponsePtrOutput values.
// You can construct a concrete instance of `NetworkRuleSetResponsePtrInput` via:
//
//          NetworkRuleSetResponseArgs{...}
//
//  or:
//
//          nil
type NetworkRuleSetResponsePtrInput interface {
	pulumi.Input

	ToNetworkRuleSetResponsePtrOutput() NetworkRuleSetResponsePtrOutput
	ToNetworkRuleSetResponsePtrOutputWithContext(context.Context) NetworkRuleSetResponsePtrOutput
}

type networkRuleSetResponsePtrType NetworkRuleSetResponseArgs

func NetworkRuleSetResponsePtr(v *NetworkRuleSetResponseArgs) NetworkRuleSetResponsePtrInput {
	return (*networkRuleSetResponsePtrType)(v)
}

func (*networkRuleSetResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkRuleSetResponse)(nil)).Elem()
}

func (i *networkRuleSetResponsePtrType) ToNetworkRuleSetResponsePtrOutput() NetworkRuleSetResponsePtrOutput {
	return i.ToNetworkRuleSetResponsePtrOutputWithContext(context.Background())
}

func (i *networkRuleSetResponsePtrType) ToNetworkRuleSetResponsePtrOutputWithContext(ctx context.Context) NetworkRuleSetResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRuleSetResponsePtrOutput)
}

// Network rule set
type NetworkRuleSetResponseOutput struct{ *pulumi.OutputState }

func (NetworkRuleSetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRuleSetResponse)(nil)).Elem()
}

func (o NetworkRuleSetResponseOutput) ToNetworkRuleSetResponseOutput() NetworkRuleSetResponseOutput {
	return o
}

func (o NetworkRuleSetResponseOutput) ToNetworkRuleSetResponseOutputWithContext(ctx context.Context) NetworkRuleSetResponseOutput {
	return o
}

func (o NetworkRuleSetResponseOutput) ToNetworkRuleSetResponsePtrOutput() NetworkRuleSetResponsePtrOutput {
	return o.ToNetworkRuleSetResponsePtrOutputWithContext(context.Background())
}

func (o NetworkRuleSetResponseOutput) ToNetworkRuleSetResponsePtrOutputWithContext(ctx context.Context) NetworkRuleSetResponsePtrOutput {
	return o.ApplyT(func(v NetworkRuleSetResponse) *NetworkRuleSetResponse {
		return &v
	}).(NetworkRuleSetResponsePtrOutput)
}

// Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, "Logging, Metrics"), or None to bypass none of those traffics.
func (o NetworkRuleSetResponseOutput) Bypass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkRuleSetResponse) *string { return v.Bypass }).(pulumi.StringPtrOutput)
}

// Specifies the default action of allow or deny when no other rules match.
func (o NetworkRuleSetResponseOutput) DefaultAction() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkRuleSetResponse) string { return v.DefaultAction }).(pulumi.StringOutput)
}

// Sets the IP ACL rules
func (o NetworkRuleSetResponseOutput) IpRules() IPRuleResponseArrayOutput {
	return o.ApplyT(func(v NetworkRuleSetResponse) []IPRuleResponse { return v.IpRules }).(IPRuleResponseArrayOutput)
}

// Sets the virtual network rules
func (o NetworkRuleSetResponseOutput) VirtualNetworkRules() VirtualNetworkRuleResponseArrayOutput {
	return o.ApplyT(func(v NetworkRuleSetResponse) []VirtualNetworkRuleResponse { return v.VirtualNetworkRules }).(VirtualNetworkRuleResponseArrayOutput)
}

type NetworkRuleSetResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkRuleSetResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkRuleSetResponse)(nil)).Elem()
}

func (o NetworkRuleSetResponsePtrOutput) ToNetworkRuleSetResponsePtrOutput() NetworkRuleSetResponsePtrOutput {
	return o
}

func (o NetworkRuleSetResponsePtrOutput) ToNetworkRuleSetResponsePtrOutputWithContext(ctx context.Context) NetworkRuleSetResponsePtrOutput {
	return o
}

func (o NetworkRuleSetResponsePtrOutput) Elem() NetworkRuleSetResponseOutput {
	return o.ApplyT(func(v *NetworkRuleSetResponse) NetworkRuleSetResponse { return *v }).(NetworkRuleSetResponseOutput)
}

// Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, "Logging, Metrics"), or None to bypass none of those traffics.
func (o NetworkRuleSetResponsePtrOutput) Bypass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkRuleSetResponse) *string {
		if v == nil {
			return nil
		}
		return v.Bypass
	}).(pulumi.StringPtrOutput)
}

// Specifies the default action of allow or deny when no other rules match.
func (o NetworkRuleSetResponsePtrOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkRuleSetResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DefaultAction
	}).(pulumi.StringPtrOutput)
}

// Sets the IP ACL rules
func (o NetworkRuleSetResponsePtrOutput) IpRules() IPRuleResponseArrayOutput {
	return o.ApplyT(func(v *NetworkRuleSetResponse) []IPRuleResponse {
		if v == nil {
			return nil
		}
		return v.IpRules
	}).(IPRuleResponseArrayOutput)
}

// Sets the virtual network rules
func (o NetworkRuleSetResponsePtrOutput) VirtualNetworkRules() VirtualNetworkRuleResponseArrayOutput {
	return o.ApplyT(func(v *NetworkRuleSetResponse) []VirtualNetworkRuleResponse {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkRules
	}).(VirtualNetworkRuleResponseArrayOutput)
}

// The restriction because of which SKU cannot be used.
type Restriction struct {
	// The reason for the restriction. As of now this can be "QuotaId" or "NotAvailableForSubscription". Quota Id is set when the SKU has requiredQuotas parameter as the subscription does not belong to that quota. The "NotAvailableForSubscription" is related to capacity at DC.
	ReasonCode *string `pulumi:"reasonCode"`
}

// RestrictionInput is an input type that accepts RestrictionArgs and RestrictionOutput values.
// You can construct a concrete instance of `RestrictionInput` via:
//
//          RestrictionArgs{...}
type RestrictionInput interface {
	pulumi.Input

	ToRestrictionOutput() RestrictionOutput
	ToRestrictionOutputWithContext(context.Context) RestrictionOutput
}

// The restriction because of which SKU cannot be used.
type RestrictionArgs struct {
	// The reason for the restriction. As of now this can be "QuotaId" or "NotAvailableForSubscription". Quota Id is set when the SKU has requiredQuotas parameter as the subscription does not belong to that quota. The "NotAvailableForSubscription" is related to capacity at DC.
	ReasonCode pulumi.StringPtrInput `pulumi:"reasonCode"`
}

func (RestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Restriction)(nil)).Elem()
}

func (i RestrictionArgs) ToRestrictionOutput() RestrictionOutput {
	return i.ToRestrictionOutputWithContext(context.Background())
}

func (i RestrictionArgs) ToRestrictionOutputWithContext(ctx context.Context) RestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestrictionOutput)
}

// RestrictionArrayInput is an input type that accepts RestrictionArray and RestrictionArrayOutput values.
// You can construct a concrete instance of `RestrictionArrayInput` via:
//
//          RestrictionArray{ RestrictionArgs{...} }
type RestrictionArrayInput interface {
	pulumi.Input

	ToRestrictionArrayOutput() RestrictionArrayOutput
	ToRestrictionArrayOutputWithContext(context.Context) RestrictionArrayOutput
}

type RestrictionArray []RestrictionInput

func (RestrictionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Restriction)(nil)).Elem()
}

func (i RestrictionArray) ToRestrictionArrayOutput() RestrictionArrayOutput {
	return i.ToRestrictionArrayOutputWithContext(context.Background())
}

func (i RestrictionArray) ToRestrictionArrayOutputWithContext(ctx context.Context) RestrictionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestrictionArrayOutput)
}

// The restriction because of which SKU cannot be used.
type RestrictionOutput struct{ *pulumi.OutputState }

func (RestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Restriction)(nil)).Elem()
}

func (o RestrictionOutput) ToRestrictionOutput() RestrictionOutput {
	return o
}

func (o RestrictionOutput) ToRestrictionOutputWithContext(ctx context.Context) RestrictionOutput {
	return o
}

// The reason for the restriction. As of now this can be "QuotaId" or "NotAvailableForSubscription". Quota Id is set when the SKU has requiredQuotas parameter as the subscription does not belong to that quota. The "NotAvailableForSubscription" is related to capacity at DC.
func (o RestrictionOutput) ReasonCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Restriction) *string { return v.ReasonCode }).(pulumi.StringPtrOutput)
}

type RestrictionArrayOutput struct{ *pulumi.OutputState }

func (RestrictionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Restriction)(nil)).Elem()
}

func (o RestrictionArrayOutput) ToRestrictionArrayOutput() RestrictionArrayOutput {
	return o
}

func (o RestrictionArrayOutput) ToRestrictionArrayOutputWithContext(ctx context.Context) RestrictionArrayOutput {
	return o
}

func (o RestrictionArrayOutput) Index(i pulumi.IntInput) RestrictionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Restriction {
		return vs[0].([]Restriction)[vs[1].(int)]
	}).(RestrictionOutput)
}

// The restriction because of which SKU cannot be used.
type RestrictionResponse struct {
	// The reason for the restriction. As of now this can be "QuotaId" or "NotAvailableForSubscription". Quota Id is set when the SKU has requiredQuotas parameter as the subscription does not belong to that quota. The "NotAvailableForSubscription" is related to capacity at DC.
	ReasonCode *string `pulumi:"reasonCode"`
	// The type of restrictions. As of now only possible value for this is location.
	Type string `pulumi:"type"`
	// The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted.
	Values []string `pulumi:"values"`
}

// RestrictionResponseInput is an input type that accepts RestrictionResponseArgs and RestrictionResponseOutput values.
// You can construct a concrete instance of `RestrictionResponseInput` via:
//
//          RestrictionResponseArgs{...}
type RestrictionResponseInput interface {
	pulumi.Input

	ToRestrictionResponseOutput() RestrictionResponseOutput
	ToRestrictionResponseOutputWithContext(context.Context) RestrictionResponseOutput
}

// The restriction because of which SKU cannot be used.
type RestrictionResponseArgs struct {
	// The reason for the restriction. As of now this can be "QuotaId" or "NotAvailableForSubscription". Quota Id is set when the SKU has requiredQuotas parameter as the subscription does not belong to that quota. The "NotAvailableForSubscription" is related to capacity at DC.
	ReasonCode pulumi.StringPtrInput `pulumi:"reasonCode"`
	// The type of restrictions. As of now only possible value for this is location.
	Type pulumi.StringInput `pulumi:"type"`
	// The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (RestrictionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RestrictionResponse)(nil)).Elem()
}

func (i RestrictionResponseArgs) ToRestrictionResponseOutput() RestrictionResponseOutput {
	return i.ToRestrictionResponseOutputWithContext(context.Background())
}

func (i RestrictionResponseArgs) ToRestrictionResponseOutputWithContext(ctx context.Context) RestrictionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestrictionResponseOutput)
}

// RestrictionResponseArrayInput is an input type that accepts RestrictionResponseArray and RestrictionResponseArrayOutput values.
// You can construct a concrete instance of `RestrictionResponseArrayInput` via:
//
//          RestrictionResponseArray{ RestrictionResponseArgs{...} }
type RestrictionResponseArrayInput interface {
	pulumi.Input

	ToRestrictionResponseArrayOutput() RestrictionResponseArrayOutput
	ToRestrictionResponseArrayOutputWithContext(context.Context) RestrictionResponseArrayOutput
}

type RestrictionResponseArray []RestrictionResponseInput

func (RestrictionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RestrictionResponse)(nil)).Elem()
}

func (i RestrictionResponseArray) ToRestrictionResponseArrayOutput() RestrictionResponseArrayOutput {
	return i.ToRestrictionResponseArrayOutputWithContext(context.Background())
}

func (i RestrictionResponseArray) ToRestrictionResponseArrayOutputWithContext(ctx context.Context) RestrictionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestrictionResponseArrayOutput)
}

// The restriction because of which SKU cannot be used.
type RestrictionResponseOutput struct{ *pulumi.OutputState }

func (RestrictionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestrictionResponse)(nil)).Elem()
}

func (o RestrictionResponseOutput) ToRestrictionResponseOutput() RestrictionResponseOutput {
	return o
}

func (o RestrictionResponseOutput) ToRestrictionResponseOutputWithContext(ctx context.Context) RestrictionResponseOutput {
	return o
}

// The reason for the restriction. As of now this can be "QuotaId" or "NotAvailableForSubscription". Quota Id is set when the SKU has requiredQuotas parameter as the subscription does not belong to that quota. The "NotAvailableForSubscription" is related to capacity at DC.
func (o RestrictionResponseOutput) ReasonCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestrictionResponse) *string { return v.ReasonCode }).(pulumi.StringPtrOutput)
}

// The type of restrictions. As of now only possible value for this is location.
func (o RestrictionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RestrictionResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted.
func (o RestrictionResponseOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RestrictionResponse) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type RestrictionResponseArrayOutput struct{ *pulumi.OutputState }

func (RestrictionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RestrictionResponse)(nil)).Elem()
}

func (o RestrictionResponseArrayOutput) ToRestrictionResponseArrayOutput() RestrictionResponseArrayOutput {
	return o
}

func (o RestrictionResponseArrayOutput) ToRestrictionResponseArrayOutputWithContext(ctx context.Context) RestrictionResponseArrayOutput {
	return o
}

func (o RestrictionResponseArrayOutput) Index(i pulumi.IntInput) RestrictionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RestrictionResponse {
		return vs[0].([]RestrictionResponse)[vs[1].(int)]
	}).(RestrictionResponseOutput)
}

// The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.
type SKUCapability struct {
}

// SKUCapabilityInput is an input type that accepts SKUCapabilityArgs and SKUCapabilityOutput values.
// You can construct a concrete instance of `SKUCapabilityInput` via:
//
//          SKUCapabilityArgs{...}
type SKUCapabilityInput interface {
	pulumi.Input

	ToSKUCapabilityOutput() SKUCapabilityOutput
	ToSKUCapabilityOutputWithContext(context.Context) SKUCapabilityOutput
}

// The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.
type SKUCapabilityArgs struct {
}

func (SKUCapabilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SKUCapability)(nil)).Elem()
}

func (i SKUCapabilityArgs) ToSKUCapabilityOutput() SKUCapabilityOutput {
	return i.ToSKUCapabilityOutputWithContext(context.Background())
}

func (i SKUCapabilityArgs) ToSKUCapabilityOutputWithContext(ctx context.Context) SKUCapabilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SKUCapabilityOutput)
}

// The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.
type SKUCapabilityOutput struct{ *pulumi.OutputState }

func (SKUCapabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SKUCapability)(nil)).Elem()
}

func (o SKUCapabilityOutput) ToSKUCapabilityOutput() SKUCapabilityOutput {
	return o
}

func (o SKUCapabilityOutput) ToSKUCapabilityOutputWithContext(ctx context.Context) SKUCapabilityOutput {
	return o
}

// The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.
type SKUCapabilityResponse struct {
	// The name of capability, The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.
	Name string `pulumi:"name"`
	// A string value to indicate states of given capability. Possibly 'true' or 'false'.
	Value string `pulumi:"value"`
}

// SKUCapabilityResponseInput is an input type that accepts SKUCapabilityResponseArgs and SKUCapabilityResponseOutput values.
// You can construct a concrete instance of `SKUCapabilityResponseInput` via:
//
//          SKUCapabilityResponseArgs{...}
type SKUCapabilityResponseInput interface {
	pulumi.Input

	ToSKUCapabilityResponseOutput() SKUCapabilityResponseOutput
	ToSKUCapabilityResponseOutputWithContext(context.Context) SKUCapabilityResponseOutput
}

// The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.
type SKUCapabilityResponseArgs struct {
	// The name of capability, The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.
	Name pulumi.StringInput `pulumi:"name"`
	// A string value to indicate states of given capability. Possibly 'true' or 'false'.
	Value pulumi.StringInput `pulumi:"value"`
}

func (SKUCapabilityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SKUCapabilityResponse)(nil)).Elem()
}

func (i SKUCapabilityResponseArgs) ToSKUCapabilityResponseOutput() SKUCapabilityResponseOutput {
	return i.ToSKUCapabilityResponseOutputWithContext(context.Background())
}

func (i SKUCapabilityResponseArgs) ToSKUCapabilityResponseOutputWithContext(ctx context.Context) SKUCapabilityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SKUCapabilityResponseOutput)
}

// SKUCapabilityResponseArrayInput is an input type that accepts SKUCapabilityResponseArray and SKUCapabilityResponseArrayOutput values.
// You can construct a concrete instance of `SKUCapabilityResponseArrayInput` via:
//
//          SKUCapabilityResponseArray{ SKUCapabilityResponseArgs{...} }
type SKUCapabilityResponseArrayInput interface {
	pulumi.Input

	ToSKUCapabilityResponseArrayOutput() SKUCapabilityResponseArrayOutput
	ToSKUCapabilityResponseArrayOutputWithContext(context.Context) SKUCapabilityResponseArrayOutput
}

type SKUCapabilityResponseArray []SKUCapabilityResponseInput

func (SKUCapabilityResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SKUCapabilityResponse)(nil)).Elem()
}

func (i SKUCapabilityResponseArray) ToSKUCapabilityResponseArrayOutput() SKUCapabilityResponseArrayOutput {
	return i.ToSKUCapabilityResponseArrayOutputWithContext(context.Background())
}

func (i SKUCapabilityResponseArray) ToSKUCapabilityResponseArrayOutputWithContext(ctx context.Context) SKUCapabilityResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SKUCapabilityResponseArrayOutput)
}

// The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.
type SKUCapabilityResponseOutput struct{ *pulumi.OutputState }

func (SKUCapabilityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SKUCapabilityResponse)(nil)).Elem()
}

func (o SKUCapabilityResponseOutput) ToSKUCapabilityResponseOutput() SKUCapabilityResponseOutput {
	return o
}

func (o SKUCapabilityResponseOutput) ToSKUCapabilityResponseOutputWithContext(ctx context.Context) SKUCapabilityResponseOutput {
	return o
}

// The name of capability, The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.
func (o SKUCapabilityResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SKUCapabilityResponse) string { return v.Name }).(pulumi.StringOutput)
}

// A string value to indicate states of given capability. Possibly 'true' or 'false'.
func (o SKUCapabilityResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SKUCapabilityResponse) string { return v.Value }).(pulumi.StringOutput)
}

type SKUCapabilityResponseArrayOutput struct{ *pulumi.OutputState }

func (SKUCapabilityResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SKUCapabilityResponse)(nil)).Elem()
}

func (o SKUCapabilityResponseArrayOutput) ToSKUCapabilityResponseArrayOutput() SKUCapabilityResponseArrayOutput {
	return o
}

func (o SKUCapabilityResponseArrayOutput) ToSKUCapabilityResponseArrayOutputWithContext(ctx context.Context) SKUCapabilityResponseArrayOutput {
	return o
}

func (o SKUCapabilityResponseArrayOutput) Index(i pulumi.IntInput) SKUCapabilityResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SKUCapabilityResponse {
		return vs[0].([]SKUCapabilityResponse)[vs[1].(int)]
	}).(SKUCapabilityResponseOutput)
}

// The SKU of the storage account.
type Sku struct {
	// Gets or sets the SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType.
	Name string `pulumi:"name"`
	// The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.
	Restrictions []Restriction `pulumi:"restrictions"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//          SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// The SKU of the storage account.
type SkuArgs struct {
	// Gets or sets the SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType.
	Name pulumi.StringInput `pulumi:"name"`
	// The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.
	Restrictions RestrictionArrayInput `pulumi:"restrictions"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//          SkuArgs{...}
//
//  or:
//
//          nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// The SKU of the storage account.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyT(func(v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// Gets or sets the SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType.
func (o SkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Sku) string { return v.Name }).(pulumi.StringOutput)
}

// The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.
func (o SkuOutput) Restrictions() RestrictionArrayOutput {
	return o.ApplyT(func(v Sku) []Restriction { return v.Restrictions }).(RestrictionArrayOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku { return *v }).(SkuOutput)
}

// Gets or sets the SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType.
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.
func (o SkuPtrOutput) Restrictions() RestrictionArrayOutput {
	return o.ApplyT(func(v *Sku) []Restriction {
		if v == nil {
			return nil
		}
		return v.Restrictions
	}).(RestrictionArrayOutput)
}

// The SKU of the storage account.
type SkuResponse struct {
	// The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.
	Capabilities []SKUCapabilityResponse `pulumi:"capabilities"`
	// Indicates the type of storage account.
	Kind string `pulumi:"kind"`
	// The set of locations that the SKU is available. This will be supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.).
	Locations []string `pulumi:"locations"`
	// Gets or sets the SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType.
	Name string `pulumi:"name"`
	// The type of the resource, usually it is 'storageAccounts'.
	ResourceType string `pulumi:"resourceType"`
	// The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.
	Restrictions []RestrictionResponse `pulumi:"restrictions"`
	// Gets the SKU tier. This is based on the SKU name.
	Tier string `pulumi:"tier"`
}

// SkuResponseInput is an input type that accepts SkuResponseArgs and SkuResponseOutput values.
// You can construct a concrete instance of `SkuResponseInput` via:
//
//          SkuResponseArgs{...}
type SkuResponseInput interface {
	pulumi.Input

	ToSkuResponseOutput() SkuResponseOutput
	ToSkuResponseOutputWithContext(context.Context) SkuResponseOutput
}

// The SKU of the storage account.
type SkuResponseArgs struct {
	// The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.
	Capabilities SKUCapabilityResponseArrayInput `pulumi:"capabilities"`
	// Indicates the type of storage account.
	Kind pulumi.StringInput `pulumi:"kind"`
	// The set of locations that the SKU is available. This will be supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.).
	Locations pulumi.StringArrayInput `pulumi:"locations"`
	// Gets or sets the SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType.
	Name pulumi.StringInput `pulumi:"name"`
	// The type of the resource, usually it is 'storageAccounts'.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.
	Restrictions RestrictionResponseArrayInput `pulumi:"restrictions"`
	// Gets the SKU tier. This is based on the SKU name.
	Tier pulumi.StringInput `pulumi:"tier"`
}

func (SkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (i SkuResponseArgs) ToSkuResponseOutput() SkuResponseOutput {
	return i.ToSkuResponseOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput)
}

func (i SkuResponseArgs) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput).ToSkuResponsePtrOutputWithContext(ctx)
}

// SkuResponsePtrInput is an input type that accepts SkuResponseArgs, SkuResponsePtr and SkuResponsePtrOutput values.
// You can construct a concrete instance of `SkuResponsePtrInput` via:
//
//          SkuResponseArgs{...}
//
//  or:
//
//          nil
type SkuResponsePtrInput interface {
	pulumi.Input

	ToSkuResponsePtrOutput() SkuResponsePtrOutput
	ToSkuResponsePtrOutputWithContext(context.Context) SkuResponsePtrOutput
}

type skuResponsePtrType SkuResponseArgs

func SkuResponsePtr(v *SkuResponseArgs) SkuResponsePtrInput {
	return (*skuResponsePtrType)(v)
}

func (*skuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponsePtrOutput)
}

// The SKU of the storage account.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (o SkuResponseOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o.ApplyT(func(v SkuResponse) *SkuResponse {
		return &v
	}).(SkuResponsePtrOutput)
}

// The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.
func (o SkuResponseOutput) Capabilities() SKUCapabilityResponseArrayOutput {
	return o.ApplyT(func(v SkuResponse) []SKUCapabilityResponse { return v.Capabilities }).(SKUCapabilityResponseArrayOutput)
}

// Indicates the type of storage account.
func (o SkuResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// The set of locations that the SKU is available. This will be supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.).
func (o SkuResponseOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SkuResponse) []string { return v.Locations }).(pulumi.StringArrayOutput)
}

// Gets or sets the SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType.
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the resource, usually it is 'storageAccounts'.
func (o SkuResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.
func (o SkuResponseOutput) Restrictions() RestrictionResponseArrayOutput {
	return o.ApplyT(func(v SkuResponse) []RestrictionResponse { return v.Restrictions }).(RestrictionResponseArrayOutput)
}

// Gets the SKU tier. This is based on the SKU name.
func (o SkuResponseOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Tier }).(pulumi.StringOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse { return *v }).(SkuResponseOutput)
}

// The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.
func (o SkuResponsePtrOutput) Capabilities() SKUCapabilityResponseArrayOutput {
	return o.ApplyT(func(v *SkuResponse) []SKUCapabilityResponse {
		if v == nil {
			return nil
		}
		return v.Capabilities
	}).(SKUCapabilityResponseArrayOutput)
}

// Indicates the type of storage account.
func (o SkuResponsePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// The set of locations that the SKU is available. This will be supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.).
func (o SkuResponsePtrOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SkuResponse) []string {
		if v == nil {
			return nil
		}
		return v.Locations
	}).(pulumi.StringArrayOutput)
}

// Gets or sets the SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType.
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The type of the resource, usually it is 'storageAccounts'.
func (o SkuResponsePtrOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceType
	}).(pulumi.StringPtrOutput)
}

// The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.
func (o SkuResponsePtrOutput) Restrictions() RestrictionResponseArrayOutput {
	return o.ApplyT(func(v *SkuResponse) []RestrictionResponse {
		if v == nil {
			return nil
		}
		return v.Restrictions
	}).(RestrictionResponseArrayOutput)
}

// Gets the SKU tier. This is based on the SKU name.
func (o SkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Tier
	}).(pulumi.StringPtrOutput)
}

// The storage account.
type StorageAccountType struct {
	// The identity of the resource.
	Identity *IdentityResponse `pulumi:"identity"`
	// Gets the Kind.
	Kind string `pulumi:"kind"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Properties of the storage account.
	Properties StorageAccountPropertiesResponse `pulumi:"properties"`
	// Gets the SKU.
	Sku SkuResponse `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
	Type string `pulumi:"type"`
}

// StorageAccountTypeInput is an input type that accepts StorageAccountTypeArgs and StorageAccountTypeOutput values.
// You can construct a concrete instance of `StorageAccountTypeInput` via:
//
//          StorageAccountTypeArgs{...}
type StorageAccountTypeInput interface {
	pulumi.Input

	ToStorageAccountTypeOutput() StorageAccountTypeOutput
	ToStorageAccountTypeOutputWithContext(context.Context) StorageAccountTypeOutput
}

// The storage account.
type StorageAccountTypeArgs struct {
	// The identity of the resource.
	Identity IdentityResponsePtrInput `pulumi:"identity"`
	// Gets the Kind.
	Kind pulumi.StringInput `pulumi:"kind"`
	// The geo-location where the resource lives
	Location pulumi.StringInput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of the storage account.
	Properties StorageAccountPropertiesResponseInput `pulumi:"properties"`
	// Gets the SKU.
	Sku SkuResponseInput `pulumi:"sku"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
	Type pulumi.StringInput `pulumi:"type"`
}

func (StorageAccountTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountType)(nil)).Elem()
}

func (i StorageAccountTypeArgs) ToStorageAccountTypeOutput() StorageAccountTypeOutput {
	return i.ToStorageAccountTypeOutputWithContext(context.Background())
}

func (i StorageAccountTypeArgs) ToStorageAccountTypeOutputWithContext(ctx context.Context) StorageAccountTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountTypeOutput)
}

// The storage account.
type StorageAccountTypeOutput struct{ *pulumi.OutputState }

func (StorageAccountTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountType)(nil)).Elem()
}

func (o StorageAccountTypeOutput) ToStorageAccountTypeOutput() StorageAccountTypeOutput {
	return o
}

func (o StorageAccountTypeOutput) ToStorageAccountTypeOutputWithContext(ctx context.Context) StorageAccountTypeOutput {
	return o
}

// The identity of the resource.
func (o StorageAccountTypeOutput) Identity() IdentityResponsePtrOutput {
	return o.ApplyT(func(v StorageAccountType) *IdentityResponse { return v.Identity }).(IdentityResponsePtrOutput)
}

// Gets the Kind.
func (o StorageAccountTypeOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountType) string { return v.Kind }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o StorageAccountTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountType) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o StorageAccountTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the storage account.
func (o StorageAccountTypeOutput) Properties() StorageAccountPropertiesResponseOutput {
	return o.ApplyT(func(v StorageAccountType) StorageAccountPropertiesResponse { return v.Properties }).(StorageAccountPropertiesResponseOutput)
}

// Gets the SKU.
func (o StorageAccountTypeOutput) Sku() SkuResponseOutput {
	return o.ApplyT(func(v StorageAccountType) SkuResponse { return v.Sku }).(SkuResponseOutput)
}

// Resource tags.
func (o StorageAccountTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v StorageAccountType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
func (o StorageAccountTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountType) string { return v.Type }).(pulumi.StringOutput)
}

// An access key for the storage account.
type StorageAccountKeyResponse struct {
	// Name of the key.
	KeyName string `pulumi:"keyName"`
	// Permissions for the key -- read-only or full permissions.
	Permissions string `pulumi:"permissions"`
	// Base 64-encoded value of the key.
	Value string `pulumi:"value"`
}

// StorageAccountKeyResponseInput is an input type that accepts StorageAccountKeyResponseArgs and StorageAccountKeyResponseOutput values.
// You can construct a concrete instance of `StorageAccountKeyResponseInput` via:
//
//          StorageAccountKeyResponseArgs{...}
type StorageAccountKeyResponseInput interface {
	pulumi.Input

	ToStorageAccountKeyResponseOutput() StorageAccountKeyResponseOutput
	ToStorageAccountKeyResponseOutputWithContext(context.Context) StorageAccountKeyResponseOutput
}

// An access key for the storage account.
type StorageAccountKeyResponseArgs struct {
	// Name of the key.
	KeyName pulumi.StringInput `pulumi:"keyName"`
	// Permissions for the key -- read-only or full permissions.
	Permissions pulumi.StringInput `pulumi:"permissions"`
	// Base 64-encoded value of the key.
	Value pulumi.StringInput `pulumi:"value"`
}

func (StorageAccountKeyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountKeyResponse)(nil)).Elem()
}

func (i StorageAccountKeyResponseArgs) ToStorageAccountKeyResponseOutput() StorageAccountKeyResponseOutput {
	return i.ToStorageAccountKeyResponseOutputWithContext(context.Background())
}

func (i StorageAccountKeyResponseArgs) ToStorageAccountKeyResponseOutputWithContext(ctx context.Context) StorageAccountKeyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountKeyResponseOutput)
}

// StorageAccountKeyResponseArrayInput is an input type that accepts StorageAccountKeyResponseArray and StorageAccountKeyResponseArrayOutput values.
// You can construct a concrete instance of `StorageAccountKeyResponseArrayInput` via:
//
//          StorageAccountKeyResponseArray{ StorageAccountKeyResponseArgs{...} }
type StorageAccountKeyResponseArrayInput interface {
	pulumi.Input

	ToStorageAccountKeyResponseArrayOutput() StorageAccountKeyResponseArrayOutput
	ToStorageAccountKeyResponseArrayOutputWithContext(context.Context) StorageAccountKeyResponseArrayOutput
}

type StorageAccountKeyResponseArray []StorageAccountKeyResponseInput

func (StorageAccountKeyResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageAccountKeyResponse)(nil)).Elem()
}

func (i StorageAccountKeyResponseArray) ToStorageAccountKeyResponseArrayOutput() StorageAccountKeyResponseArrayOutput {
	return i.ToStorageAccountKeyResponseArrayOutputWithContext(context.Background())
}

func (i StorageAccountKeyResponseArray) ToStorageAccountKeyResponseArrayOutputWithContext(ctx context.Context) StorageAccountKeyResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountKeyResponseArrayOutput)
}

// An access key for the storage account.
type StorageAccountKeyResponseOutput struct{ *pulumi.OutputState }

func (StorageAccountKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountKeyResponse)(nil)).Elem()
}

func (o StorageAccountKeyResponseOutput) ToStorageAccountKeyResponseOutput() StorageAccountKeyResponseOutput {
	return o
}

func (o StorageAccountKeyResponseOutput) ToStorageAccountKeyResponseOutputWithContext(ctx context.Context) StorageAccountKeyResponseOutput {
	return o
}

// Name of the key.
func (o StorageAccountKeyResponseOutput) KeyName() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountKeyResponse) string { return v.KeyName }).(pulumi.StringOutput)
}

// Permissions for the key -- read-only or full permissions.
func (o StorageAccountKeyResponseOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountKeyResponse) string { return v.Permissions }).(pulumi.StringOutput)
}

// Base 64-encoded value of the key.
func (o StorageAccountKeyResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountKeyResponse) string { return v.Value }).(pulumi.StringOutput)
}

type StorageAccountKeyResponseArrayOutput struct{ *pulumi.OutputState }

func (StorageAccountKeyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageAccountKeyResponse)(nil)).Elem()
}

func (o StorageAccountKeyResponseArrayOutput) ToStorageAccountKeyResponseArrayOutput() StorageAccountKeyResponseArrayOutput {
	return o
}

func (o StorageAccountKeyResponseArrayOutput) ToStorageAccountKeyResponseArrayOutputWithContext(ctx context.Context) StorageAccountKeyResponseArrayOutput {
	return o
}

func (o StorageAccountKeyResponseArrayOutput) Index(i pulumi.IntInput) StorageAccountKeyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageAccountKeyResponse {
		return vs[0].([]StorageAccountKeyResponse)[vs[1].(int)]
	}).(StorageAccountKeyResponseOutput)
}

// The parameters used to create the storage account.
type StorageAccountPropertiesCreateParameters struct {
	// Required for storage accounts where kind = BlobStorage. The access tier used for billing.
	AccessTier *string `pulumi:"accessTier"`
	// User domain assigned to the storage account. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property.
	CustomDomain *CustomDomain `pulumi:"customDomain"`
	// Enables Azure Files AAD Integration for SMB if sets to true.
	EnableAzureFilesAadIntegration *bool `pulumi:"enableAzureFilesAadIntegration"`
	// Allows https traffic only to storage service if sets to true.
	EnableHttpsTrafficOnly *bool `pulumi:"enableHttpsTrafficOnly"`
	// Provides the encryption settings on the account. If left unspecified the account encryption settings will remain the same. The default setting is unencrypted.
	Encryption *Encryption `pulumi:"encryption"`
	// Account HierarchicalNamespace enabled if sets to true.
	IsHnsEnabled *bool `pulumi:"isHnsEnabled"`
	// Network rule set
	NetworkRuleSet *NetworkRuleSet `pulumi:"networkRuleSet"`
}

// StorageAccountPropertiesCreateParametersInput is an input type that accepts StorageAccountPropertiesCreateParametersArgs and StorageAccountPropertiesCreateParametersOutput values.
// You can construct a concrete instance of `StorageAccountPropertiesCreateParametersInput` via:
//
//          StorageAccountPropertiesCreateParametersArgs{...}
type StorageAccountPropertiesCreateParametersInput interface {
	pulumi.Input

	ToStorageAccountPropertiesCreateParametersOutput() StorageAccountPropertiesCreateParametersOutput
	ToStorageAccountPropertiesCreateParametersOutputWithContext(context.Context) StorageAccountPropertiesCreateParametersOutput
}

// The parameters used to create the storage account.
type StorageAccountPropertiesCreateParametersArgs struct {
	// Required for storage accounts where kind = BlobStorage. The access tier used for billing.
	AccessTier pulumi.StringPtrInput `pulumi:"accessTier"`
	// User domain assigned to the storage account. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property.
	CustomDomain CustomDomainPtrInput `pulumi:"customDomain"`
	// Enables Azure Files AAD Integration for SMB if sets to true.
	EnableAzureFilesAadIntegration pulumi.BoolPtrInput `pulumi:"enableAzureFilesAadIntegration"`
	// Allows https traffic only to storage service if sets to true.
	EnableHttpsTrafficOnly pulumi.BoolPtrInput `pulumi:"enableHttpsTrafficOnly"`
	// Provides the encryption settings on the account. If left unspecified the account encryption settings will remain the same. The default setting is unencrypted.
	Encryption EncryptionPtrInput `pulumi:"encryption"`
	// Account HierarchicalNamespace enabled if sets to true.
	IsHnsEnabled pulumi.BoolPtrInput `pulumi:"isHnsEnabled"`
	// Network rule set
	NetworkRuleSet NetworkRuleSetPtrInput `pulumi:"networkRuleSet"`
}

func (StorageAccountPropertiesCreateParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountPropertiesCreateParameters)(nil)).Elem()
}

func (i StorageAccountPropertiesCreateParametersArgs) ToStorageAccountPropertiesCreateParametersOutput() StorageAccountPropertiesCreateParametersOutput {
	return i.ToStorageAccountPropertiesCreateParametersOutputWithContext(context.Background())
}

func (i StorageAccountPropertiesCreateParametersArgs) ToStorageAccountPropertiesCreateParametersOutputWithContext(ctx context.Context) StorageAccountPropertiesCreateParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountPropertiesCreateParametersOutput)
}

func (i StorageAccountPropertiesCreateParametersArgs) ToStorageAccountPropertiesCreateParametersPtrOutput() StorageAccountPropertiesCreateParametersPtrOutput {
	return i.ToStorageAccountPropertiesCreateParametersPtrOutputWithContext(context.Background())
}

func (i StorageAccountPropertiesCreateParametersArgs) ToStorageAccountPropertiesCreateParametersPtrOutputWithContext(ctx context.Context) StorageAccountPropertiesCreateParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountPropertiesCreateParametersOutput).ToStorageAccountPropertiesCreateParametersPtrOutputWithContext(ctx)
}

// StorageAccountPropertiesCreateParametersPtrInput is an input type that accepts StorageAccountPropertiesCreateParametersArgs, StorageAccountPropertiesCreateParametersPtr and StorageAccountPropertiesCreateParametersPtrOutput values.
// You can construct a concrete instance of `StorageAccountPropertiesCreateParametersPtrInput` via:
//
//          StorageAccountPropertiesCreateParametersArgs{...}
//
//  or:
//
//          nil
type StorageAccountPropertiesCreateParametersPtrInput interface {
	pulumi.Input

	ToStorageAccountPropertiesCreateParametersPtrOutput() StorageAccountPropertiesCreateParametersPtrOutput
	ToStorageAccountPropertiesCreateParametersPtrOutputWithContext(context.Context) StorageAccountPropertiesCreateParametersPtrOutput
}

type storageAccountPropertiesCreateParametersPtrType StorageAccountPropertiesCreateParametersArgs

func StorageAccountPropertiesCreateParametersPtr(v *StorageAccountPropertiesCreateParametersArgs) StorageAccountPropertiesCreateParametersPtrInput {
	return (*storageAccountPropertiesCreateParametersPtrType)(v)
}

func (*storageAccountPropertiesCreateParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAccountPropertiesCreateParameters)(nil)).Elem()
}

func (i *storageAccountPropertiesCreateParametersPtrType) ToStorageAccountPropertiesCreateParametersPtrOutput() StorageAccountPropertiesCreateParametersPtrOutput {
	return i.ToStorageAccountPropertiesCreateParametersPtrOutputWithContext(context.Background())
}

func (i *storageAccountPropertiesCreateParametersPtrType) ToStorageAccountPropertiesCreateParametersPtrOutputWithContext(ctx context.Context) StorageAccountPropertiesCreateParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountPropertiesCreateParametersPtrOutput)
}

// The parameters used to create the storage account.
type StorageAccountPropertiesCreateParametersOutput struct{ *pulumi.OutputState }

func (StorageAccountPropertiesCreateParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountPropertiesCreateParameters)(nil)).Elem()
}

func (o StorageAccountPropertiesCreateParametersOutput) ToStorageAccountPropertiesCreateParametersOutput() StorageAccountPropertiesCreateParametersOutput {
	return o
}

func (o StorageAccountPropertiesCreateParametersOutput) ToStorageAccountPropertiesCreateParametersOutputWithContext(ctx context.Context) StorageAccountPropertiesCreateParametersOutput {
	return o
}

func (o StorageAccountPropertiesCreateParametersOutput) ToStorageAccountPropertiesCreateParametersPtrOutput() StorageAccountPropertiesCreateParametersPtrOutput {
	return o.ToStorageAccountPropertiesCreateParametersPtrOutputWithContext(context.Background())
}

func (o StorageAccountPropertiesCreateParametersOutput) ToStorageAccountPropertiesCreateParametersPtrOutputWithContext(ctx context.Context) StorageAccountPropertiesCreateParametersPtrOutput {
	return o.ApplyT(func(v StorageAccountPropertiesCreateParameters) *StorageAccountPropertiesCreateParameters {
		return &v
	}).(StorageAccountPropertiesCreateParametersPtrOutput)
}

// Required for storage accounts where kind = BlobStorage. The access tier used for billing.
func (o StorageAccountPropertiesCreateParametersOutput) AccessTier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageAccountPropertiesCreateParameters) *string { return v.AccessTier }).(pulumi.StringPtrOutput)
}

// User domain assigned to the storage account. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property.
func (o StorageAccountPropertiesCreateParametersOutput) CustomDomain() CustomDomainPtrOutput {
	return o.ApplyT(func(v StorageAccountPropertiesCreateParameters) *CustomDomain { return v.CustomDomain }).(CustomDomainPtrOutput)
}

// Enables Azure Files AAD Integration for SMB if sets to true.
func (o StorageAccountPropertiesCreateParametersOutput) EnableAzureFilesAadIntegration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StorageAccountPropertiesCreateParameters) *bool { return v.EnableAzureFilesAadIntegration }).(pulumi.BoolPtrOutput)
}

// Allows https traffic only to storage service if sets to true.
func (o StorageAccountPropertiesCreateParametersOutput) EnableHttpsTrafficOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StorageAccountPropertiesCreateParameters) *bool { return v.EnableHttpsTrafficOnly }).(pulumi.BoolPtrOutput)
}

// Provides the encryption settings on the account. If left unspecified the account encryption settings will remain the same. The default setting is unencrypted.
func (o StorageAccountPropertiesCreateParametersOutput) Encryption() EncryptionPtrOutput {
	return o.ApplyT(func(v StorageAccountPropertiesCreateParameters) *Encryption { return v.Encryption }).(EncryptionPtrOutput)
}

// Account HierarchicalNamespace enabled if sets to true.
func (o StorageAccountPropertiesCreateParametersOutput) IsHnsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StorageAccountPropertiesCreateParameters) *bool { return v.IsHnsEnabled }).(pulumi.BoolPtrOutput)
}

// Network rule set
func (o StorageAccountPropertiesCreateParametersOutput) NetworkRuleSet() NetworkRuleSetPtrOutput {
	return o.ApplyT(func(v StorageAccountPropertiesCreateParameters) *NetworkRuleSet { return v.NetworkRuleSet }).(NetworkRuleSetPtrOutput)
}

type StorageAccountPropertiesCreateParametersPtrOutput struct{ *pulumi.OutputState }

func (StorageAccountPropertiesCreateParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAccountPropertiesCreateParameters)(nil)).Elem()
}

func (o StorageAccountPropertiesCreateParametersPtrOutput) ToStorageAccountPropertiesCreateParametersPtrOutput() StorageAccountPropertiesCreateParametersPtrOutput {
	return o
}

func (o StorageAccountPropertiesCreateParametersPtrOutput) ToStorageAccountPropertiesCreateParametersPtrOutputWithContext(ctx context.Context) StorageAccountPropertiesCreateParametersPtrOutput {
	return o
}

func (o StorageAccountPropertiesCreateParametersPtrOutput) Elem() StorageAccountPropertiesCreateParametersOutput {
	return o.ApplyT(func(v *StorageAccountPropertiesCreateParameters) StorageAccountPropertiesCreateParameters { return *v }).(StorageAccountPropertiesCreateParametersOutput)
}

// Required for storage accounts where kind = BlobStorage. The access tier used for billing.
func (o StorageAccountPropertiesCreateParametersPtrOutput) AccessTier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountPropertiesCreateParameters) *string {
		if v == nil {
			return nil
		}
		return v.AccessTier
	}).(pulumi.StringPtrOutput)
}

// User domain assigned to the storage account. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property.
func (o StorageAccountPropertiesCreateParametersPtrOutput) CustomDomain() CustomDomainPtrOutput {
	return o.ApplyT(func(v *StorageAccountPropertiesCreateParameters) *CustomDomain {
		if v == nil {
			return nil
		}
		return v.CustomDomain
	}).(CustomDomainPtrOutput)
}

// Enables Azure Files AAD Integration for SMB if sets to true.
func (o StorageAccountPropertiesCreateParametersPtrOutput) EnableAzureFilesAadIntegration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageAccountPropertiesCreateParameters) *bool {
		if v == nil {
			return nil
		}
		return v.EnableAzureFilesAadIntegration
	}).(pulumi.BoolPtrOutput)
}

// Allows https traffic only to storage service if sets to true.
func (o StorageAccountPropertiesCreateParametersPtrOutput) EnableHttpsTrafficOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageAccountPropertiesCreateParameters) *bool {
		if v == nil {
			return nil
		}
		return v.EnableHttpsTrafficOnly
	}).(pulumi.BoolPtrOutput)
}

// Provides the encryption settings on the account. If left unspecified the account encryption settings will remain the same. The default setting is unencrypted.
func (o StorageAccountPropertiesCreateParametersPtrOutput) Encryption() EncryptionPtrOutput {
	return o.ApplyT(func(v *StorageAccountPropertiesCreateParameters) *Encryption {
		if v == nil {
			return nil
		}
		return v.Encryption
	}).(EncryptionPtrOutput)
}

// Account HierarchicalNamespace enabled if sets to true.
func (o StorageAccountPropertiesCreateParametersPtrOutput) IsHnsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageAccountPropertiesCreateParameters) *bool {
		if v == nil {
			return nil
		}
		return v.IsHnsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Network rule set
func (o StorageAccountPropertiesCreateParametersPtrOutput) NetworkRuleSet() NetworkRuleSetPtrOutput {
	return o.ApplyT(func(v *StorageAccountPropertiesCreateParameters) *NetworkRuleSet {
		if v == nil {
			return nil
		}
		return v.NetworkRuleSet
	}).(NetworkRuleSetPtrOutput)
}

// Properties of the storage account.
type StorageAccountPropertiesResponse struct {
	// Required for storage accounts where kind = BlobStorage. The access tier used for billing.
	AccessTier string `pulumi:"accessTier"`
	// Enables Azure Files AAD Integration for SMB if sets to true.
	AzureFilesAadIntegration *bool `pulumi:"azureFilesAadIntegration"`
	// Gets the creation date and time of the storage account in UTC.
	CreationTime string `pulumi:"creationTime"`
	// Gets the custom domain the user assigned to this storage account.
	CustomDomain CustomDomainResponse `pulumi:"customDomain"`
	// Gets the encryption settings on the account. If unspecified, the account is unencrypted.
	Encryption EncryptionResponse `pulumi:"encryption"`
	// If the failover is in progress, the value will be true, otherwise, it will be null.
	FailoverInProgress bool `pulumi:"failoverInProgress"`
	// Geo Replication Stats
	GeoReplicationStats GeoReplicationStatsResponse `pulumi:"geoReplicationStats"`
	// Account HierarchicalNamespace enabled if sets to true.
	IsHnsEnabled *bool `pulumi:"isHnsEnabled"`
	// Gets the timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available if the accountType is Standard_GRS or Standard_RAGRS.
	LastGeoFailoverTime string `pulumi:"lastGeoFailoverTime"`
	// Network rule set
	NetworkAcls NetworkRuleSetResponse `pulumi:"networkAcls"`
	// Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object. Note that Standard_ZRS and Premium_LRS accounts only return the blob endpoint.
	PrimaryEndpoints EndpointsResponse `pulumi:"primaryEndpoints"`
	// Gets the location of the primary data center for the storage account.
	PrimaryLocation string `pulumi:"primaryLocation"`
	// Gets the status of the storage account at the time the operation was called.
	ProvisioningState string `pulumi:"provisioningState"`
	// Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object from the secondary location of the storage account. Only available if the SKU name is Standard_RAGRS.
	SecondaryEndpoints EndpointsResponse `pulumi:"secondaryEndpoints"`
	// Gets the location of the geo-replicated secondary for the storage account. Only available if the accountType is Standard_GRS or Standard_RAGRS.
	SecondaryLocation string `pulumi:"secondaryLocation"`
	// Gets the status indicating whether the primary location of the storage account is available or unavailable.
	StatusOfPrimary string `pulumi:"statusOfPrimary"`
	// Gets the status indicating whether the secondary location of the storage account is available or unavailable. Only available if the SKU name is Standard_GRS or Standard_RAGRS.
	StatusOfSecondary string `pulumi:"statusOfSecondary"`
	// Allows https traffic only to storage service if sets to true.
	SupportsHttpsTrafficOnly *bool `pulumi:"supportsHttpsTrafficOnly"`
}

// StorageAccountPropertiesResponseInput is an input type that accepts StorageAccountPropertiesResponseArgs and StorageAccountPropertiesResponseOutput values.
// You can construct a concrete instance of `StorageAccountPropertiesResponseInput` via:
//
//          StorageAccountPropertiesResponseArgs{...}
type StorageAccountPropertiesResponseInput interface {
	pulumi.Input

	ToStorageAccountPropertiesResponseOutput() StorageAccountPropertiesResponseOutput
	ToStorageAccountPropertiesResponseOutputWithContext(context.Context) StorageAccountPropertiesResponseOutput
}

// Properties of the storage account.
type StorageAccountPropertiesResponseArgs struct {
	// Required for storage accounts where kind = BlobStorage. The access tier used for billing.
	AccessTier pulumi.StringInput `pulumi:"accessTier"`
	// Enables Azure Files AAD Integration for SMB if sets to true.
	AzureFilesAadIntegration pulumi.BoolPtrInput `pulumi:"azureFilesAadIntegration"`
	// Gets the creation date and time of the storage account in UTC.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// Gets the custom domain the user assigned to this storage account.
	CustomDomain CustomDomainResponseInput `pulumi:"customDomain"`
	// Gets the encryption settings on the account. If unspecified, the account is unencrypted.
	Encryption EncryptionResponseInput `pulumi:"encryption"`
	// If the failover is in progress, the value will be true, otherwise, it will be null.
	FailoverInProgress pulumi.BoolInput `pulumi:"failoverInProgress"`
	// Geo Replication Stats
	GeoReplicationStats GeoReplicationStatsResponseInput `pulumi:"geoReplicationStats"`
	// Account HierarchicalNamespace enabled if sets to true.
	IsHnsEnabled pulumi.BoolPtrInput `pulumi:"isHnsEnabled"`
	// Gets the timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available if the accountType is Standard_GRS or Standard_RAGRS.
	LastGeoFailoverTime pulumi.StringInput `pulumi:"lastGeoFailoverTime"`
	// Network rule set
	NetworkAcls NetworkRuleSetResponseInput `pulumi:"networkAcls"`
	// Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object. Note that Standard_ZRS and Premium_LRS accounts only return the blob endpoint.
	PrimaryEndpoints EndpointsResponseInput `pulumi:"primaryEndpoints"`
	// Gets the location of the primary data center for the storage account.
	PrimaryLocation pulumi.StringInput `pulumi:"primaryLocation"`
	// Gets the status of the storage account at the time the operation was called.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object from the secondary location of the storage account. Only available if the SKU name is Standard_RAGRS.
	SecondaryEndpoints EndpointsResponseInput `pulumi:"secondaryEndpoints"`
	// Gets the location of the geo-replicated secondary for the storage account. Only available if the accountType is Standard_GRS or Standard_RAGRS.
	SecondaryLocation pulumi.StringInput `pulumi:"secondaryLocation"`
	// Gets the status indicating whether the primary location of the storage account is available or unavailable.
	StatusOfPrimary pulumi.StringInput `pulumi:"statusOfPrimary"`
	// Gets the status indicating whether the secondary location of the storage account is available or unavailable. Only available if the SKU name is Standard_GRS or Standard_RAGRS.
	StatusOfSecondary pulumi.StringInput `pulumi:"statusOfSecondary"`
	// Allows https traffic only to storage service if sets to true.
	SupportsHttpsTrafficOnly pulumi.BoolPtrInput `pulumi:"supportsHttpsTrafficOnly"`
}

func (StorageAccountPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountPropertiesResponse)(nil)).Elem()
}

func (i StorageAccountPropertiesResponseArgs) ToStorageAccountPropertiesResponseOutput() StorageAccountPropertiesResponseOutput {
	return i.ToStorageAccountPropertiesResponseOutputWithContext(context.Background())
}

func (i StorageAccountPropertiesResponseArgs) ToStorageAccountPropertiesResponseOutputWithContext(ctx context.Context) StorageAccountPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountPropertiesResponseOutput)
}

func (i StorageAccountPropertiesResponseArgs) ToStorageAccountPropertiesResponsePtrOutput() StorageAccountPropertiesResponsePtrOutput {
	return i.ToStorageAccountPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i StorageAccountPropertiesResponseArgs) ToStorageAccountPropertiesResponsePtrOutputWithContext(ctx context.Context) StorageAccountPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountPropertiesResponseOutput).ToStorageAccountPropertiesResponsePtrOutputWithContext(ctx)
}

// StorageAccountPropertiesResponsePtrInput is an input type that accepts StorageAccountPropertiesResponseArgs, StorageAccountPropertiesResponsePtr and StorageAccountPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `StorageAccountPropertiesResponsePtrInput` via:
//
//          StorageAccountPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type StorageAccountPropertiesResponsePtrInput interface {
	pulumi.Input

	ToStorageAccountPropertiesResponsePtrOutput() StorageAccountPropertiesResponsePtrOutput
	ToStorageAccountPropertiesResponsePtrOutputWithContext(context.Context) StorageAccountPropertiesResponsePtrOutput
}

type storageAccountPropertiesResponsePtrType StorageAccountPropertiesResponseArgs

func StorageAccountPropertiesResponsePtr(v *StorageAccountPropertiesResponseArgs) StorageAccountPropertiesResponsePtrInput {
	return (*storageAccountPropertiesResponsePtrType)(v)
}

func (*storageAccountPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAccountPropertiesResponse)(nil)).Elem()
}

func (i *storageAccountPropertiesResponsePtrType) ToStorageAccountPropertiesResponsePtrOutput() StorageAccountPropertiesResponsePtrOutput {
	return i.ToStorageAccountPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *storageAccountPropertiesResponsePtrType) ToStorageAccountPropertiesResponsePtrOutputWithContext(ctx context.Context) StorageAccountPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountPropertiesResponsePtrOutput)
}

// Properties of the storage account.
type StorageAccountPropertiesResponseOutput struct{ *pulumi.OutputState }

func (StorageAccountPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountPropertiesResponse)(nil)).Elem()
}

func (o StorageAccountPropertiesResponseOutput) ToStorageAccountPropertiesResponseOutput() StorageAccountPropertiesResponseOutput {
	return o
}

func (o StorageAccountPropertiesResponseOutput) ToStorageAccountPropertiesResponseOutputWithContext(ctx context.Context) StorageAccountPropertiesResponseOutput {
	return o
}

func (o StorageAccountPropertiesResponseOutput) ToStorageAccountPropertiesResponsePtrOutput() StorageAccountPropertiesResponsePtrOutput {
	return o.ToStorageAccountPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o StorageAccountPropertiesResponseOutput) ToStorageAccountPropertiesResponsePtrOutputWithContext(ctx context.Context) StorageAccountPropertiesResponsePtrOutput {
	return o.ApplyT(func(v StorageAccountPropertiesResponse) *StorageAccountPropertiesResponse {
		return &v
	}).(StorageAccountPropertiesResponsePtrOutput)
}

// Required for storage accounts where kind = BlobStorage. The access tier used for billing.
func (o StorageAccountPropertiesResponseOutput) AccessTier() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountPropertiesResponse) string { return v.AccessTier }).(pulumi.StringOutput)
}

// Enables Azure Files AAD Integration for SMB if sets to true.
func (o StorageAccountPropertiesResponseOutput) AzureFilesAadIntegration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StorageAccountPropertiesResponse) *bool { return v.AzureFilesAadIntegration }).(pulumi.BoolPtrOutput)
}

// Gets the creation date and time of the storage account in UTC.
func (o StorageAccountPropertiesResponseOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountPropertiesResponse) string { return v.CreationTime }).(pulumi.StringOutput)
}

// Gets the custom domain the user assigned to this storage account.
func (o StorageAccountPropertiesResponseOutput) CustomDomain() CustomDomainResponseOutput {
	return o.ApplyT(func(v StorageAccountPropertiesResponse) CustomDomainResponse { return v.CustomDomain }).(CustomDomainResponseOutput)
}

// Gets the encryption settings on the account. If unspecified, the account is unencrypted.
func (o StorageAccountPropertiesResponseOutput) Encryption() EncryptionResponseOutput {
	return o.ApplyT(func(v StorageAccountPropertiesResponse) EncryptionResponse { return v.Encryption }).(EncryptionResponseOutput)
}

// If the failover is in progress, the value will be true, otherwise, it will be null.
func (o StorageAccountPropertiesResponseOutput) FailoverInProgress() pulumi.BoolOutput {
	return o.ApplyT(func(v StorageAccountPropertiesResponse) bool { return v.FailoverInProgress }).(pulumi.BoolOutput)
}

// Geo Replication Stats
func (o StorageAccountPropertiesResponseOutput) GeoReplicationStats() GeoReplicationStatsResponseOutput {
	return o.ApplyT(func(v StorageAccountPropertiesResponse) GeoReplicationStatsResponse { return v.GeoReplicationStats }).(GeoReplicationStatsResponseOutput)
}

// Account HierarchicalNamespace enabled if sets to true.
func (o StorageAccountPropertiesResponseOutput) IsHnsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StorageAccountPropertiesResponse) *bool { return v.IsHnsEnabled }).(pulumi.BoolPtrOutput)
}

// Gets the timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available if the accountType is Standard_GRS or Standard_RAGRS.
func (o StorageAccountPropertiesResponseOutput) LastGeoFailoverTime() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountPropertiesResponse) string { return v.LastGeoFailoverTime }).(pulumi.StringOutput)
}

// Network rule set
func (o StorageAccountPropertiesResponseOutput) NetworkAcls() NetworkRuleSetResponseOutput {
	return o.ApplyT(func(v StorageAccountPropertiesResponse) NetworkRuleSetResponse { return v.NetworkAcls }).(NetworkRuleSetResponseOutput)
}

// Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object. Note that Standard_ZRS and Premium_LRS accounts only return the blob endpoint.
func (o StorageAccountPropertiesResponseOutput) PrimaryEndpoints() EndpointsResponseOutput {
	return o.ApplyT(func(v StorageAccountPropertiesResponse) EndpointsResponse { return v.PrimaryEndpoints }).(EndpointsResponseOutput)
}

// Gets the location of the primary data center for the storage account.
func (o StorageAccountPropertiesResponseOutput) PrimaryLocation() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountPropertiesResponse) string { return v.PrimaryLocation }).(pulumi.StringOutput)
}

// Gets the status of the storage account at the time the operation was called.
func (o StorageAccountPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object from the secondary location of the storage account. Only available if the SKU name is Standard_RAGRS.
func (o StorageAccountPropertiesResponseOutput) SecondaryEndpoints() EndpointsResponseOutput {
	return o.ApplyT(func(v StorageAccountPropertiesResponse) EndpointsResponse { return v.SecondaryEndpoints }).(EndpointsResponseOutput)
}

// Gets the location of the geo-replicated secondary for the storage account. Only available if the accountType is Standard_GRS or Standard_RAGRS.
func (o StorageAccountPropertiesResponseOutput) SecondaryLocation() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountPropertiesResponse) string { return v.SecondaryLocation }).(pulumi.StringOutput)
}

// Gets the status indicating whether the primary location of the storage account is available or unavailable.
func (o StorageAccountPropertiesResponseOutput) StatusOfPrimary() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountPropertiesResponse) string { return v.StatusOfPrimary }).(pulumi.StringOutput)
}

// Gets the status indicating whether the secondary location of the storage account is available or unavailable. Only available if the SKU name is Standard_GRS or Standard_RAGRS.
func (o StorageAccountPropertiesResponseOutput) StatusOfSecondary() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountPropertiesResponse) string { return v.StatusOfSecondary }).(pulumi.StringOutput)
}

// Allows https traffic only to storage service if sets to true.
func (o StorageAccountPropertiesResponseOutput) SupportsHttpsTrafficOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StorageAccountPropertiesResponse) *bool { return v.SupportsHttpsTrafficOnly }).(pulumi.BoolPtrOutput)
}

type StorageAccountPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (StorageAccountPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAccountPropertiesResponse)(nil)).Elem()
}

func (o StorageAccountPropertiesResponsePtrOutput) ToStorageAccountPropertiesResponsePtrOutput() StorageAccountPropertiesResponsePtrOutput {
	return o
}

func (o StorageAccountPropertiesResponsePtrOutput) ToStorageAccountPropertiesResponsePtrOutputWithContext(ctx context.Context) StorageAccountPropertiesResponsePtrOutput {
	return o
}

func (o StorageAccountPropertiesResponsePtrOutput) Elem() StorageAccountPropertiesResponseOutput {
	return o.ApplyT(func(v *StorageAccountPropertiesResponse) StorageAccountPropertiesResponse { return *v }).(StorageAccountPropertiesResponseOutput)
}

// Required for storage accounts where kind = BlobStorage. The access tier used for billing.
func (o StorageAccountPropertiesResponsePtrOutput) AccessTier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AccessTier
	}).(pulumi.StringPtrOutput)
}

// Enables Azure Files AAD Integration for SMB if sets to true.
func (o StorageAccountPropertiesResponsePtrOutput) AzureFilesAadIntegration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageAccountPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AzureFilesAadIntegration
	}).(pulumi.BoolPtrOutput)
}

// Gets the creation date and time of the storage account in UTC.
func (o StorageAccountPropertiesResponsePtrOutput) CreationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreationTime
	}).(pulumi.StringPtrOutput)
}

// Gets the custom domain the user assigned to this storage account.
func (o StorageAccountPropertiesResponsePtrOutput) CustomDomain() CustomDomainResponsePtrOutput {
	return o.ApplyT(func(v *StorageAccountPropertiesResponse) *CustomDomainResponse {
		if v == nil {
			return nil
		}
		return &v.CustomDomain
	}).(CustomDomainResponsePtrOutput)
}

// Gets the encryption settings on the account. If unspecified, the account is unencrypted.
func (o StorageAccountPropertiesResponsePtrOutput) Encryption() EncryptionResponsePtrOutput {
	return o.ApplyT(func(v *StorageAccountPropertiesResponse) *EncryptionResponse {
		if v == nil {
			return nil
		}
		return &v.Encryption
	}).(EncryptionResponsePtrOutput)
}

// If the failover is in progress, the value will be true, otherwise, it will be null.
func (o StorageAccountPropertiesResponsePtrOutput) FailoverInProgress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageAccountPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.FailoverInProgress
	}).(pulumi.BoolPtrOutput)
}

// Geo Replication Stats
func (o StorageAccountPropertiesResponsePtrOutput) GeoReplicationStats() GeoReplicationStatsResponsePtrOutput {
	return o.ApplyT(func(v *StorageAccountPropertiesResponse) *GeoReplicationStatsResponse {
		if v == nil {
			return nil
		}
		return &v.GeoReplicationStats
	}).(GeoReplicationStatsResponsePtrOutput)
}

// Account HierarchicalNamespace enabled if sets to true.
func (o StorageAccountPropertiesResponsePtrOutput) IsHnsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageAccountPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsHnsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Gets the timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available if the accountType is Standard_GRS or Standard_RAGRS.
func (o StorageAccountPropertiesResponsePtrOutput) LastGeoFailoverTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastGeoFailoverTime
	}).(pulumi.StringPtrOutput)
}

// Network rule set
func (o StorageAccountPropertiesResponsePtrOutput) NetworkAcls() NetworkRuleSetResponsePtrOutput {
	return o.ApplyT(func(v *StorageAccountPropertiesResponse) *NetworkRuleSetResponse {
		if v == nil {
			return nil
		}
		return &v.NetworkAcls
	}).(NetworkRuleSetResponsePtrOutput)
}

// Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object. Note that Standard_ZRS and Premium_LRS accounts only return the blob endpoint.
func (o StorageAccountPropertiesResponsePtrOutput) PrimaryEndpoints() EndpointsResponsePtrOutput {
	return o.ApplyT(func(v *StorageAccountPropertiesResponse) *EndpointsResponse {
		if v == nil {
			return nil
		}
		return &v.PrimaryEndpoints
	}).(EndpointsResponsePtrOutput)
}

// Gets the location of the primary data center for the storage account.
func (o StorageAccountPropertiesResponsePtrOutput) PrimaryLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrimaryLocation
	}).(pulumi.StringPtrOutput)
}

// Gets the status of the storage account at the time the operation was called.
func (o StorageAccountPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object from the secondary location of the storage account. Only available if the SKU name is Standard_RAGRS.
func (o StorageAccountPropertiesResponsePtrOutput) SecondaryEndpoints() EndpointsResponsePtrOutput {
	return o.ApplyT(func(v *StorageAccountPropertiesResponse) *EndpointsResponse {
		if v == nil {
			return nil
		}
		return &v.SecondaryEndpoints
	}).(EndpointsResponsePtrOutput)
}

// Gets the location of the geo-replicated secondary for the storage account. Only available if the accountType is Standard_GRS or Standard_RAGRS.
func (o StorageAccountPropertiesResponsePtrOutput) SecondaryLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SecondaryLocation
	}).(pulumi.StringPtrOutput)
}

// Gets the status indicating whether the primary location of the storage account is available or unavailable.
func (o StorageAccountPropertiesResponsePtrOutput) StatusOfPrimary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StatusOfPrimary
	}).(pulumi.StringPtrOutput)
}

// Gets the status indicating whether the secondary location of the storage account is available or unavailable. Only available if the SKU name is Standard_GRS or Standard_RAGRS.
func (o StorageAccountPropertiesResponsePtrOutput) StatusOfSecondary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StatusOfSecondary
	}).(pulumi.StringPtrOutput)
}

// Allows https traffic only to storage service if sets to true.
func (o StorageAccountPropertiesResponsePtrOutput) SupportsHttpsTrafficOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageAccountPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.SupportsHttpsTrafficOnly
	}).(pulumi.BoolPtrOutput)
}

// A tag of the LegalHold of a blob container.
type TagProperty struct {
}

// TagPropertyInput is an input type that accepts TagPropertyArgs and TagPropertyOutput values.
// You can construct a concrete instance of `TagPropertyInput` via:
//
//          TagPropertyArgs{...}
type TagPropertyInput interface {
	pulumi.Input

	ToTagPropertyOutput() TagPropertyOutput
	ToTagPropertyOutputWithContext(context.Context) TagPropertyOutput
}

// A tag of the LegalHold of a blob container.
type TagPropertyArgs struct {
}

func (TagPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TagProperty)(nil)).Elem()
}

func (i TagPropertyArgs) ToTagPropertyOutput() TagPropertyOutput {
	return i.ToTagPropertyOutputWithContext(context.Background())
}

func (i TagPropertyArgs) ToTagPropertyOutputWithContext(ctx context.Context) TagPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagPropertyOutput)
}

// TagPropertyArrayInput is an input type that accepts TagPropertyArray and TagPropertyArrayOutput values.
// You can construct a concrete instance of `TagPropertyArrayInput` via:
//
//          TagPropertyArray{ TagPropertyArgs{...} }
type TagPropertyArrayInput interface {
	pulumi.Input

	ToTagPropertyArrayOutput() TagPropertyArrayOutput
	ToTagPropertyArrayOutputWithContext(context.Context) TagPropertyArrayOutput
}

type TagPropertyArray []TagPropertyInput

func (TagPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TagProperty)(nil)).Elem()
}

func (i TagPropertyArray) ToTagPropertyArrayOutput() TagPropertyArrayOutput {
	return i.ToTagPropertyArrayOutputWithContext(context.Background())
}

func (i TagPropertyArray) ToTagPropertyArrayOutputWithContext(ctx context.Context) TagPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagPropertyArrayOutput)
}

// A tag of the LegalHold of a blob container.
type TagPropertyOutput struct{ *pulumi.OutputState }

func (TagPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagProperty)(nil)).Elem()
}

func (o TagPropertyOutput) ToTagPropertyOutput() TagPropertyOutput {
	return o
}

func (o TagPropertyOutput) ToTagPropertyOutputWithContext(ctx context.Context) TagPropertyOutput {
	return o
}

type TagPropertyArrayOutput struct{ *pulumi.OutputState }

func (TagPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TagProperty)(nil)).Elem()
}

func (o TagPropertyArrayOutput) ToTagPropertyArrayOutput() TagPropertyArrayOutput {
	return o
}

func (o TagPropertyArrayOutput) ToTagPropertyArrayOutputWithContext(ctx context.Context) TagPropertyArrayOutput {
	return o
}

func (o TagPropertyArrayOutput) Index(i pulumi.IntInput) TagPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TagProperty {
		return vs[0].([]TagProperty)[vs[1].(int)]
	}).(TagPropertyOutput)
}

// A tag of the LegalHold of a blob container.
type TagPropertyResponse struct {
	// Returns the Object ID of the user who added the tag.
	ObjectIdentifier string `pulumi:"objectIdentifier"`
	// The tag value.
	Tag string `pulumi:"tag"`
	// Returns the Tenant ID that issued the token for the user who added the tag.
	TenantId string `pulumi:"tenantId"`
	// Returns the date and time the tag was added.
	Timestamp string `pulumi:"timestamp"`
	// Returns the User Principal Name of the user who added the tag.
	Upn string `pulumi:"upn"`
}

// TagPropertyResponseInput is an input type that accepts TagPropertyResponseArgs and TagPropertyResponseOutput values.
// You can construct a concrete instance of `TagPropertyResponseInput` via:
//
//          TagPropertyResponseArgs{...}
type TagPropertyResponseInput interface {
	pulumi.Input

	ToTagPropertyResponseOutput() TagPropertyResponseOutput
	ToTagPropertyResponseOutputWithContext(context.Context) TagPropertyResponseOutput
}

// A tag of the LegalHold of a blob container.
type TagPropertyResponseArgs struct {
	// Returns the Object ID of the user who added the tag.
	ObjectIdentifier pulumi.StringInput `pulumi:"objectIdentifier"`
	// The tag value.
	Tag pulumi.StringInput `pulumi:"tag"`
	// Returns the Tenant ID that issued the token for the user who added the tag.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// Returns the date and time the tag was added.
	Timestamp pulumi.StringInput `pulumi:"timestamp"`
	// Returns the User Principal Name of the user who added the tag.
	Upn pulumi.StringInput `pulumi:"upn"`
}

func (TagPropertyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TagPropertyResponse)(nil)).Elem()
}

func (i TagPropertyResponseArgs) ToTagPropertyResponseOutput() TagPropertyResponseOutput {
	return i.ToTagPropertyResponseOutputWithContext(context.Background())
}

func (i TagPropertyResponseArgs) ToTagPropertyResponseOutputWithContext(ctx context.Context) TagPropertyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagPropertyResponseOutput)
}

// TagPropertyResponseArrayInput is an input type that accepts TagPropertyResponseArray and TagPropertyResponseArrayOutput values.
// You can construct a concrete instance of `TagPropertyResponseArrayInput` via:
//
//          TagPropertyResponseArray{ TagPropertyResponseArgs{...} }
type TagPropertyResponseArrayInput interface {
	pulumi.Input

	ToTagPropertyResponseArrayOutput() TagPropertyResponseArrayOutput
	ToTagPropertyResponseArrayOutputWithContext(context.Context) TagPropertyResponseArrayOutput
}

type TagPropertyResponseArray []TagPropertyResponseInput

func (TagPropertyResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TagPropertyResponse)(nil)).Elem()
}

func (i TagPropertyResponseArray) ToTagPropertyResponseArrayOutput() TagPropertyResponseArrayOutput {
	return i.ToTagPropertyResponseArrayOutputWithContext(context.Background())
}

func (i TagPropertyResponseArray) ToTagPropertyResponseArrayOutputWithContext(ctx context.Context) TagPropertyResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagPropertyResponseArrayOutput)
}

// A tag of the LegalHold of a blob container.
type TagPropertyResponseOutput struct{ *pulumi.OutputState }

func (TagPropertyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagPropertyResponse)(nil)).Elem()
}

func (o TagPropertyResponseOutput) ToTagPropertyResponseOutput() TagPropertyResponseOutput {
	return o
}

func (o TagPropertyResponseOutput) ToTagPropertyResponseOutputWithContext(ctx context.Context) TagPropertyResponseOutput {
	return o
}

// Returns the Object ID of the user who added the tag.
func (o TagPropertyResponseOutput) ObjectIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v TagPropertyResponse) string { return v.ObjectIdentifier }).(pulumi.StringOutput)
}

// The tag value.
func (o TagPropertyResponseOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v TagPropertyResponse) string { return v.Tag }).(pulumi.StringOutput)
}

// Returns the Tenant ID that issued the token for the user who added the tag.
func (o TagPropertyResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v TagPropertyResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Returns the date and time the tag was added.
func (o TagPropertyResponseOutput) Timestamp() pulumi.StringOutput {
	return o.ApplyT(func(v TagPropertyResponse) string { return v.Timestamp }).(pulumi.StringOutput)
}

// Returns the User Principal Name of the user who added the tag.
func (o TagPropertyResponseOutput) Upn() pulumi.StringOutput {
	return o.ApplyT(func(v TagPropertyResponse) string { return v.Upn }).(pulumi.StringOutput)
}

type TagPropertyResponseArrayOutput struct{ *pulumi.OutputState }

func (TagPropertyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TagPropertyResponse)(nil)).Elem()
}

func (o TagPropertyResponseArrayOutput) ToTagPropertyResponseArrayOutput() TagPropertyResponseArrayOutput {
	return o
}

func (o TagPropertyResponseArrayOutput) ToTagPropertyResponseArrayOutputWithContext(ctx context.Context) TagPropertyResponseArrayOutput {
	return o
}

func (o TagPropertyResponseArrayOutput) Index(i pulumi.IntInput) TagPropertyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TagPropertyResponse {
		return vs[0].([]TagPropertyResponse)[vs[1].(int)]
	}).(TagPropertyResponseOutput)
}

// An update history of the ImmutabilityPolicy of a blob container.
type UpdateHistoryProperty struct {
}

// UpdateHistoryPropertyInput is an input type that accepts UpdateHistoryPropertyArgs and UpdateHistoryPropertyOutput values.
// You can construct a concrete instance of `UpdateHistoryPropertyInput` via:
//
//          UpdateHistoryPropertyArgs{...}
type UpdateHistoryPropertyInput interface {
	pulumi.Input

	ToUpdateHistoryPropertyOutput() UpdateHistoryPropertyOutput
	ToUpdateHistoryPropertyOutputWithContext(context.Context) UpdateHistoryPropertyOutput
}

// An update history of the ImmutabilityPolicy of a blob container.
type UpdateHistoryPropertyArgs struct {
}

func (UpdateHistoryPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdateHistoryProperty)(nil)).Elem()
}

func (i UpdateHistoryPropertyArgs) ToUpdateHistoryPropertyOutput() UpdateHistoryPropertyOutput {
	return i.ToUpdateHistoryPropertyOutputWithContext(context.Background())
}

func (i UpdateHistoryPropertyArgs) ToUpdateHistoryPropertyOutputWithContext(ctx context.Context) UpdateHistoryPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateHistoryPropertyOutput)
}

// An update history of the ImmutabilityPolicy of a blob container.
type UpdateHistoryPropertyOutput struct{ *pulumi.OutputState }

func (UpdateHistoryPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdateHistoryProperty)(nil)).Elem()
}

func (o UpdateHistoryPropertyOutput) ToUpdateHistoryPropertyOutput() UpdateHistoryPropertyOutput {
	return o
}

func (o UpdateHistoryPropertyOutput) ToUpdateHistoryPropertyOutputWithContext(ctx context.Context) UpdateHistoryPropertyOutput {
	return o
}

// An update history of the ImmutabilityPolicy of a blob container.
type UpdateHistoryPropertyResponse struct {
	// The immutability period for the blobs in the container since the policy creation, in days.
	ImmutabilityPeriodSinceCreationInDays int `pulumi:"immutabilityPeriodSinceCreationInDays"`
	// Returns the Object ID of the user who updated the ImmutabilityPolicy.
	ObjectIdentifier string `pulumi:"objectIdentifier"`
	// Returns the Tenant ID that issued the token for the user who updated the ImmutabilityPolicy.
	TenantId string `pulumi:"tenantId"`
	// Returns the date and time the ImmutabilityPolicy was updated.
	Timestamp string `pulumi:"timestamp"`
	// The ImmutabilityPolicy update type of a blob container, possible values include: put, lock and extend.
	Update string `pulumi:"update"`
	// Returns the User Principal Name of the user who updated the ImmutabilityPolicy.
	Upn string `pulumi:"upn"`
}

// UpdateHistoryPropertyResponseInput is an input type that accepts UpdateHistoryPropertyResponseArgs and UpdateHistoryPropertyResponseOutput values.
// You can construct a concrete instance of `UpdateHistoryPropertyResponseInput` via:
//
//          UpdateHistoryPropertyResponseArgs{...}
type UpdateHistoryPropertyResponseInput interface {
	pulumi.Input

	ToUpdateHistoryPropertyResponseOutput() UpdateHistoryPropertyResponseOutput
	ToUpdateHistoryPropertyResponseOutputWithContext(context.Context) UpdateHistoryPropertyResponseOutput
}

// An update history of the ImmutabilityPolicy of a blob container.
type UpdateHistoryPropertyResponseArgs struct {
	// The immutability period for the blobs in the container since the policy creation, in days.
	ImmutabilityPeriodSinceCreationInDays pulumi.IntInput `pulumi:"immutabilityPeriodSinceCreationInDays"`
	// Returns the Object ID of the user who updated the ImmutabilityPolicy.
	ObjectIdentifier pulumi.StringInput `pulumi:"objectIdentifier"`
	// Returns the Tenant ID that issued the token for the user who updated the ImmutabilityPolicy.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// Returns the date and time the ImmutabilityPolicy was updated.
	Timestamp pulumi.StringInput `pulumi:"timestamp"`
	// The ImmutabilityPolicy update type of a blob container, possible values include: put, lock and extend.
	Update pulumi.StringInput `pulumi:"update"`
	// Returns the User Principal Name of the user who updated the ImmutabilityPolicy.
	Upn pulumi.StringInput `pulumi:"upn"`
}

func (UpdateHistoryPropertyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdateHistoryPropertyResponse)(nil)).Elem()
}

func (i UpdateHistoryPropertyResponseArgs) ToUpdateHistoryPropertyResponseOutput() UpdateHistoryPropertyResponseOutput {
	return i.ToUpdateHistoryPropertyResponseOutputWithContext(context.Background())
}

func (i UpdateHistoryPropertyResponseArgs) ToUpdateHistoryPropertyResponseOutputWithContext(ctx context.Context) UpdateHistoryPropertyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateHistoryPropertyResponseOutput)
}

// UpdateHistoryPropertyResponseArrayInput is an input type that accepts UpdateHistoryPropertyResponseArray and UpdateHistoryPropertyResponseArrayOutput values.
// You can construct a concrete instance of `UpdateHistoryPropertyResponseArrayInput` via:
//
//          UpdateHistoryPropertyResponseArray{ UpdateHistoryPropertyResponseArgs{...} }
type UpdateHistoryPropertyResponseArrayInput interface {
	pulumi.Input

	ToUpdateHistoryPropertyResponseArrayOutput() UpdateHistoryPropertyResponseArrayOutput
	ToUpdateHistoryPropertyResponseArrayOutputWithContext(context.Context) UpdateHistoryPropertyResponseArrayOutput
}

type UpdateHistoryPropertyResponseArray []UpdateHistoryPropertyResponseInput

func (UpdateHistoryPropertyResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UpdateHistoryPropertyResponse)(nil)).Elem()
}

func (i UpdateHistoryPropertyResponseArray) ToUpdateHistoryPropertyResponseArrayOutput() UpdateHistoryPropertyResponseArrayOutput {
	return i.ToUpdateHistoryPropertyResponseArrayOutputWithContext(context.Background())
}

func (i UpdateHistoryPropertyResponseArray) ToUpdateHistoryPropertyResponseArrayOutputWithContext(ctx context.Context) UpdateHistoryPropertyResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateHistoryPropertyResponseArrayOutput)
}

// An update history of the ImmutabilityPolicy of a blob container.
type UpdateHistoryPropertyResponseOutput struct{ *pulumi.OutputState }

func (UpdateHistoryPropertyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdateHistoryPropertyResponse)(nil)).Elem()
}

func (o UpdateHistoryPropertyResponseOutput) ToUpdateHistoryPropertyResponseOutput() UpdateHistoryPropertyResponseOutput {
	return o
}

func (o UpdateHistoryPropertyResponseOutput) ToUpdateHistoryPropertyResponseOutputWithContext(ctx context.Context) UpdateHistoryPropertyResponseOutput {
	return o
}

// The immutability period for the blobs in the container since the policy creation, in days.
func (o UpdateHistoryPropertyResponseOutput) ImmutabilityPeriodSinceCreationInDays() pulumi.IntOutput {
	return o.ApplyT(func(v UpdateHistoryPropertyResponse) int { return v.ImmutabilityPeriodSinceCreationInDays }).(pulumi.IntOutput)
}

// Returns the Object ID of the user who updated the ImmutabilityPolicy.
func (o UpdateHistoryPropertyResponseOutput) ObjectIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v UpdateHistoryPropertyResponse) string { return v.ObjectIdentifier }).(pulumi.StringOutput)
}

// Returns the Tenant ID that issued the token for the user who updated the ImmutabilityPolicy.
func (o UpdateHistoryPropertyResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v UpdateHistoryPropertyResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Returns the date and time the ImmutabilityPolicy was updated.
func (o UpdateHistoryPropertyResponseOutput) Timestamp() pulumi.StringOutput {
	return o.ApplyT(func(v UpdateHistoryPropertyResponse) string { return v.Timestamp }).(pulumi.StringOutput)
}

// The ImmutabilityPolicy update type of a blob container, possible values include: put, lock and extend.
func (o UpdateHistoryPropertyResponseOutput) Update() pulumi.StringOutput {
	return o.ApplyT(func(v UpdateHistoryPropertyResponse) string { return v.Update }).(pulumi.StringOutput)
}

// Returns the User Principal Name of the user who updated the ImmutabilityPolicy.
func (o UpdateHistoryPropertyResponseOutput) Upn() pulumi.StringOutput {
	return o.ApplyT(func(v UpdateHistoryPropertyResponse) string { return v.Upn }).(pulumi.StringOutput)
}

type UpdateHistoryPropertyResponseArrayOutput struct{ *pulumi.OutputState }

func (UpdateHistoryPropertyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UpdateHistoryPropertyResponse)(nil)).Elem()
}

func (o UpdateHistoryPropertyResponseArrayOutput) ToUpdateHistoryPropertyResponseArrayOutput() UpdateHistoryPropertyResponseArrayOutput {
	return o
}

func (o UpdateHistoryPropertyResponseArrayOutput) ToUpdateHistoryPropertyResponseArrayOutputWithContext(ctx context.Context) UpdateHistoryPropertyResponseArrayOutput {
	return o
}

func (o UpdateHistoryPropertyResponseArrayOutput) Index(i pulumi.IntInput) UpdateHistoryPropertyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UpdateHistoryPropertyResponse {
		return vs[0].([]UpdateHistoryPropertyResponse)[vs[1].(int)]
	}).(UpdateHistoryPropertyResponseOutput)
}

// Virtual Network rule.
type VirtualNetworkRule struct {
	// The action of virtual network rule.
	Action *string `pulumi:"action"`
	// Gets the state of virtual network rule.
	State *string `pulumi:"state"`
	// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
	VirtualNetworkResourceId string `pulumi:"virtualNetworkResourceId"`
}

// VirtualNetworkRuleInput is an input type that accepts VirtualNetworkRuleArgs and VirtualNetworkRuleOutput values.
// You can construct a concrete instance of `VirtualNetworkRuleInput` via:
//
//          VirtualNetworkRuleArgs{...}
type VirtualNetworkRuleInput interface {
	pulumi.Input

	ToVirtualNetworkRuleOutput() VirtualNetworkRuleOutput
	ToVirtualNetworkRuleOutputWithContext(context.Context) VirtualNetworkRuleOutput
}

// Virtual Network rule.
type VirtualNetworkRuleArgs struct {
	// The action of virtual network rule.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Gets the state of virtual network rule.
	State pulumi.StringPtrInput `pulumi:"state"`
	// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
	VirtualNetworkResourceId pulumi.StringInput `pulumi:"virtualNetworkResourceId"`
}

func (VirtualNetworkRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkRule)(nil)).Elem()
}

func (i VirtualNetworkRuleArgs) ToVirtualNetworkRuleOutput() VirtualNetworkRuleOutput {
	return i.ToVirtualNetworkRuleOutputWithContext(context.Background())
}

func (i VirtualNetworkRuleArgs) ToVirtualNetworkRuleOutputWithContext(ctx context.Context) VirtualNetworkRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkRuleOutput)
}

// VirtualNetworkRuleArrayInput is an input type that accepts VirtualNetworkRuleArray and VirtualNetworkRuleArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkRuleArrayInput` via:
//
//          VirtualNetworkRuleArray{ VirtualNetworkRuleArgs{...} }
type VirtualNetworkRuleArrayInput interface {
	pulumi.Input

	ToVirtualNetworkRuleArrayOutput() VirtualNetworkRuleArrayOutput
	ToVirtualNetworkRuleArrayOutputWithContext(context.Context) VirtualNetworkRuleArrayOutput
}

type VirtualNetworkRuleArray []VirtualNetworkRuleInput

func (VirtualNetworkRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkRule)(nil)).Elem()
}

func (i VirtualNetworkRuleArray) ToVirtualNetworkRuleArrayOutput() VirtualNetworkRuleArrayOutput {
	return i.ToVirtualNetworkRuleArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkRuleArray) ToVirtualNetworkRuleArrayOutputWithContext(ctx context.Context) VirtualNetworkRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkRuleArrayOutput)
}

// Virtual Network rule.
type VirtualNetworkRuleOutput struct{ *pulumi.OutputState }

func (VirtualNetworkRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkRule)(nil)).Elem()
}

func (o VirtualNetworkRuleOutput) ToVirtualNetworkRuleOutput() VirtualNetworkRuleOutput {
	return o
}

func (o VirtualNetworkRuleOutput) ToVirtualNetworkRuleOutputWithContext(ctx context.Context) VirtualNetworkRuleOutput {
	return o
}

// The action of virtual network rule.
func (o VirtualNetworkRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Gets the state of virtual network rule.
func (o VirtualNetworkRuleOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkRule) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
func (o VirtualNetworkRuleOutput) VirtualNetworkResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkRule) string { return v.VirtualNetworkResourceId }).(pulumi.StringOutput)
}

type VirtualNetworkRuleArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkRule)(nil)).Elem()
}

func (o VirtualNetworkRuleArrayOutput) ToVirtualNetworkRuleArrayOutput() VirtualNetworkRuleArrayOutput {
	return o
}

func (o VirtualNetworkRuleArrayOutput) ToVirtualNetworkRuleArrayOutputWithContext(ctx context.Context) VirtualNetworkRuleArrayOutput {
	return o
}

func (o VirtualNetworkRuleArrayOutput) Index(i pulumi.IntInput) VirtualNetworkRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkRule {
		return vs[0].([]VirtualNetworkRule)[vs[1].(int)]
	}).(VirtualNetworkRuleOutput)
}

// Virtual Network rule.
type VirtualNetworkRuleResponse struct {
	// The action of virtual network rule.
	Action *string `pulumi:"action"`
	// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
	Id string `pulumi:"id"`
	// Gets the state of virtual network rule.
	State *string `pulumi:"state"`
}

// VirtualNetworkRuleResponseInput is an input type that accepts VirtualNetworkRuleResponseArgs and VirtualNetworkRuleResponseOutput values.
// You can construct a concrete instance of `VirtualNetworkRuleResponseInput` via:
//
//          VirtualNetworkRuleResponseArgs{...}
type VirtualNetworkRuleResponseInput interface {
	pulumi.Input

	ToVirtualNetworkRuleResponseOutput() VirtualNetworkRuleResponseOutput
	ToVirtualNetworkRuleResponseOutputWithContext(context.Context) VirtualNetworkRuleResponseOutput
}

// Virtual Network rule.
type VirtualNetworkRuleResponseArgs struct {
	// The action of virtual network rule.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
	Id pulumi.StringInput `pulumi:"id"`
	// Gets the state of virtual network rule.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (VirtualNetworkRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkRuleResponse)(nil)).Elem()
}

func (i VirtualNetworkRuleResponseArgs) ToVirtualNetworkRuleResponseOutput() VirtualNetworkRuleResponseOutput {
	return i.ToVirtualNetworkRuleResponseOutputWithContext(context.Background())
}

func (i VirtualNetworkRuleResponseArgs) ToVirtualNetworkRuleResponseOutputWithContext(ctx context.Context) VirtualNetworkRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkRuleResponseOutput)
}

// VirtualNetworkRuleResponseArrayInput is an input type that accepts VirtualNetworkRuleResponseArray and VirtualNetworkRuleResponseArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkRuleResponseArrayInput` via:
//
//          VirtualNetworkRuleResponseArray{ VirtualNetworkRuleResponseArgs{...} }
type VirtualNetworkRuleResponseArrayInput interface {
	pulumi.Input

	ToVirtualNetworkRuleResponseArrayOutput() VirtualNetworkRuleResponseArrayOutput
	ToVirtualNetworkRuleResponseArrayOutputWithContext(context.Context) VirtualNetworkRuleResponseArrayOutput
}

type VirtualNetworkRuleResponseArray []VirtualNetworkRuleResponseInput

func (VirtualNetworkRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkRuleResponse)(nil)).Elem()
}

func (i VirtualNetworkRuleResponseArray) ToVirtualNetworkRuleResponseArrayOutput() VirtualNetworkRuleResponseArrayOutput {
	return i.ToVirtualNetworkRuleResponseArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkRuleResponseArray) ToVirtualNetworkRuleResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkRuleResponseArrayOutput)
}

// Virtual Network rule.
type VirtualNetworkRuleResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkRuleResponse)(nil)).Elem()
}

func (o VirtualNetworkRuleResponseOutput) ToVirtualNetworkRuleResponseOutput() VirtualNetworkRuleResponseOutput {
	return o
}

func (o VirtualNetworkRuleResponseOutput) ToVirtualNetworkRuleResponseOutputWithContext(ctx context.Context) VirtualNetworkRuleResponseOutput {
	return o
}

// The action of virtual network rule.
func (o VirtualNetworkRuleResponseOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkRuleResponse) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
func (o VirtualNetworkRuleResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkRuleResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Gets the state of virtual network rule.
func (o VirtualNetworkRuleResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkRuleResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

type VirtualNetworkRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkRuleResponse)(nil)).Elem()
}

func (o VirtualNetworkRuleResponseArrayOutput) ToVirtualNetworkRuleResponseArrayOutput() VirtualNetworkRuleResponseArrayOutput {
	return o
}

func (o VirtualNetworkRuleResponseArrayOutput) ToVirtualNetworkRuleResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkRuleResponseArrayOutput {
	return o
}

func (o VirtualNetworkRuleResponseArrayOutput) Index(i pulumi.IntInput) VirtualNetworkRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkRuleResponse {
		return vs[0].([]VirtualNetworkRuleResponse)[vs[1].(int)]
	}).(VirtualNetworkRuleResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(BlobContainerTypeOutput{})
	pulumi.RegisterOutputType(BlobContainerImmutabilityPolicyTypeOutput{})
	pulumi.RegisterOutputType(ContainerPropertiesOutput{})
	pulumi.RegisterOutputType(ContainerPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ContainerPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ContainerPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(CustomDomainOutput{})
	pulumi.RegisterOutputType(CustomDomainPtrOutput{})
	pulumi.RegisterOutputType(CustomDomainResponseOutput{})
	pulumi.RegisterOutputType(CustomDomainResponsePtrOutput{})
	pulumi.RegisterOutputType(EncryptionOutput{})
	pulumi.RegisterOutputType(EncryptionPtrOutput{})
	pulumi.RegisterOutputType(EncryptionResponseOutput{})
	pulumi.RegisterOutputType(EncryptionResponsePtrOutput{})
	pulumi.RegisterOutputType(EncryptionServiceOutput{})
	pulumi.RegisterOutputType(EncryptionServicePtrOutput{})
	pulumi.RegisterOutputType(EncryptionServiceResponseOutput{})
	pulumi.RegisterOutputType(EncryptionServiceResponsePtrOutput{})
	pulumi.RegisterOutputType(EncryptionServicesOutput{})
	pulumi.RegisterOutputType(EncryptionServicesPtrOutput{})
	pulumi.RegisterOutputType(EncryptionServicesResponseOutput{})
	pulumi.RegisterOutputType(EncryptionServicesResponsePtrOutput{})
	pulumi.RegisterOutputType(EndpointsResponseOutput{})
	pulumi.RegisterOutputType(EndpointsResponsePtrOutput{})
	pulumi.RegisterOutputType(GeoReplicationStatsResponseOutput{})
	pulumi.RegisterOutputType(GeoReplicationStatsResponsePtrOutput{})
	pulumi.RegisterOutputType(IPRuleOutput{})
	pulumi.RegisterOutputType(IPRuleArrayOutput{})
	pulumi.RegisterOutputType(IPRuleResponseOutput{})
	pulumi.RegisterOutputType(IPRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(IdentityOutput{})
	pulumi.RegisterOutputType(IdentityPtrOutput{})
	pulumi.RegisterOutputType(IdentityResponseOutput{})
	pulumi.RegisterOutputType(IdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(ImmutabilityPolicyPropertiesOutput{})
	pulumi.RegisterOutputType(ImmutabilityPolicyPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ImmutabilityPolicyPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ImmutabilityPolicyPropertyOutput{})
	pulumi.RegisterOutputType(ImmutabilityPolicyPropertyPtrOutput{})
	pulumi.RegisterOutputType(ImmutabilityPolicyPropertyResponseOutput{})
	pulumi.RegisterOutputType(ImmutabilityPolicyPropertyResponsePtrOutput{})
	pulumi.RegisterOutputType(KeyVaultPropertiesOutput{})
	pulumi.RegisterOutputType(KeyVaultPropertiesPtrOutput{})
	pulumi.RegisterOutputType(KeyVaultPropertiesResponseOutput{})
	pulumi.RegisterOutputType(KeyVaultPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(LegalHoldPropertiesOutput{})
	pulumi.RegisterOutputType(LegalHoldPropertiesResponseOutput{})
	pulumi.RegisterOutputType(LegalHoldPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkRuleSetOutput{})
	pulumi.RegisterOutputType(NetworkRuleSetPtrOutput{})
	pulumi.RegisterOutputType(NetworkRuleSetResponseOutput{})
	pulumi.RegisterOutputType(NetworkRuleSetResponsePtrOutput{})
	pulumi.RegisterOutputType(RestrictionOutput{})
	pulumi.RegisterOutputType(RestrictionArrayOutput{})
	pulumi.RegisterOutputType(RestrictionResponseOutput{})
	pulumi.RegisterOutputType(RestrictionResponseArrayOutput{})
	pulumi.RegisterOutputType(SKUCapabilityOutput{})
	pulumi.RegisterOutputType(SKUCapabilityResponseOutput{})
	pulumi.RegisterOutputType(SKUCapabilityResponseArrayOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
	pulumi.RegisterOutputType(StorageAccountTypeOutput{})
	pulumi.RegisterOutputType(StorageAccountKeyResponseOutput{})
	pulumi.RegisterOutputType(StorageAccountKeyResponseArrayOutput{})
	pulumi.RegisterOutputType(StorageAccountPropertiesCreateParametersOutput{})
	pulumi.RegisterOutputType(StorageAccountPropertiesCreateParametersPtrOutput{})
	pulumi.RegisterOutputType(StorageAccountPropertiesResponseOutput{})
	pulumi.RegisterOutputType(StorageAccountPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(TagPropertyOutput{})
	pulumi.RegisterOutputType(TagPropertyArrayOutput{})
	pulumi.RegisterOutputType(TagPropertyResponseOutput{})
	pulumi.RegisterOutputType(TagPropertyResponseArrayOutput{})
	pulumi.RegisterOutputType(UpdateHistoryPropertyOutput{})
	pulumi.RegisterOutputType(UpdateHistoryPropertyResponseOutput{})
	pulumi.RegisterOutputType(UpdateHistoryPropertyResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkRuleOutput{})
	pulumi.RegisterOutputType(VirtualNetworkRuleArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkRuleResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkRuleResponseArrayOutput{})
}
