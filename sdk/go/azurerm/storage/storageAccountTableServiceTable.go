// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package storage

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Properties of the table, including Id, resource name, resource type.
type StorageAccountTableServiceTable struct {
	pulumi.CustomResourceState

	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Table resource properties.
	Properties TablePropertiesResponseOutput `pulumi:"properties"`
	// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewStorageAccountTableServiceTable registers a new resource with the given unique name, arguments, and options.
func NewStorageAccountTableServiceTable(ctx *pulumi.Context,
	name string, args *StorageAccountTableServiceTableArgs, opts ...pulumi.ResourceOption) (*StorageAccountTableServiceTable, error) {
	if args == nil || args.AccountName == nil {
		return nil, errors.New("missing required argument 'AccountName'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &StorageAccountTableServiceTableArgs{}
	}
	var resource StorageAccountTableServiceTable
	err := ctx.RegisterResource("azurerm:storage:StorageAccountTableServiceTable", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStorageAccountTableServiceTable gets an existing StorageAccountTableServiceTable resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStorageAccountTableServiceTable(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StorageAccountTableServiceTableState, opts ...pulumi.ResourceOption) (*StorageAccountTableServiceTable, error) {
	var resource StorageAccountTableServiceTable
	err := ctx.ReadResource("azurerm:storage:StorageAccountTableServiceTable", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StorageAccountTableServiceTable resources.
type storageAccountTableServiceTableState struct {
	// The name of the resource
	Name *string `pulumi:"name"`
	// Table resource properties.
	Properties *TablePropertiesResponse `pulumi:"properties"`
	// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
	Type *string `pulumi:"type"`
}

type StorageAccountTableServiceTableState struct {
	// The name of the resource
	Name pulumi.StringPtrInput
	// Table resource properties.
	Properties TablePropertiesResponsePtrInput
	// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
	Type pulumi.StringPtrInput
}

func (StorageAccountTableServiceTableState) ElementType() reflect.Type {
	return reflect.TypeOf((*storageAccountTableServiceTableState)(nil)).Elem()
}

type storageAccountTableServiceTableArgs struct {
	// The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
	AccountName string `pulumi:"accountName"`
	// A table name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of only alphanumeric characters and it cannot begin with a numeric character.
	Name string `pulumi:"name"`
	// The name of the resource group within the user's subscription. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a StorageAccountTableServiceTable resource.
type StorageAccountTableServiceTableArgs struct {
	// The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
	AccountName pulumi.StringInput
	// A table name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of only alphanumeric characters and it cannot begin with a numeric character.
	Name pulumi.StringInput
	// The name of the resource group within the user's subscription. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
}

func (StorageAccountTableServiceTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*storageAccountTableServiceTableArgs)(nil)).Elem()
}
