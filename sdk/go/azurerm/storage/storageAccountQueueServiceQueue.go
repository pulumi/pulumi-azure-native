// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package storage

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type StorageAccountQueueServiceQueue struct {
	pulumi.CustomResourceState

	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Queue resource properties.
	Properties QueuePropertiesResponseOutput `pulumi:"properties"`
	// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewStorageAccountQueueServiceQueue registers a new resource with the given unique name, arguments, and options.
func NewStorageAccountQueueServiceQueue(ctx *pulumi.Context,
	name string, args *StorageAccountQueueServiceQueueArgs, opts ...pulumi.ResourceOption) (*StorageAccountQueueServiceQueue, error) {
	if args == nil || args.AccountName == nil {
		return nil, errors.New("missing required argument 'AccountName'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &StorageAccountQueueServiceQueueArgs{}
	}
	var resource StorageAccountQueueServiceQueue
	err := ctx.RegisterResource("azurerm:storage:StorageAccountQueueServiceQueue", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStorageAccountQueueServiceQueue gets an existing StorageAccountQueueServiceQueue resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStorageAccountQueueServiceQueue(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StorageAccountQueueServiceQueueState, opts ...pulumi.ResourceOption) (*StorageAccountQueueServiceQueue, error) {
	var resource StorageAccountQueueServiceQueue
	err := ctx.ReadResource("azurerm:storage:StorageAccountQueueServiceQueue", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StorageAccountQueueServiceQueue resources.
type storageAccountQueueServiceQueueState struct {
	// The name of the resource
	Name *string `pulumi:"name"`
	// Queue resource properties.
	Properties *QueuePropertiesResponse `pulumi:"properties"`
	// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
	Type *string `pulumi:"type"`
}

type StorageAccountQueueServiceQueueState struct {
	// The name of the resource
	Name pulumi.StringPtrInput
	// Queue resource properties.
	Properties QueuePropertiesResponsePtrInput
	// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
	Type pulumi.StringPtrInput
}

func (StorageAccountQueueServiceQueueState) ElementType() reflect.Type {
	return reflect.TypeOf((*storageAccountQueueServiceQueueState)(nil)).Elem()
}

type storageAccountQueueServiceQueueArgs struct {
	// The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
	AccountName string `pulumi:"accountName"`
	// A queue name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an alphanumeric character and it cannot have two consecutive dash(-) characters.
	Name string `pulumi:"name"`
	// Queue resource properties.
	Properties *QueueProperties `pulumi:"properties"`
	// The name of the resource group within the user's subscription. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a StorageAccountQueueServiceQueue resource.
type StorageAccountQueueServiceQueueArgs struct {
	// The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
	AccountName pulumi.StringInput
	// A queue name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an alphanumeric character and it cannot have two consecutive dash(-) characters.
	Name pulumi.StringInput
	// Queue resource properties.
	Properties QueuePropertiesPtrInput
	// The name of the resource group within the user's subscription. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
}

func (StorageAccountQueueServiceQueueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*storageAccountQueueServiceQueueArgs)(nil)).Elem()
}
