// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package eventgrid

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// ConnectionState information.
type ConnectionState struct {
	// Actions required (if any).
	ActionsRequired *string `pulumi:"actionsRequired"`
	// Description of the connection state.
	Description *string `pulumi:"description"`
	// Status of the connection.
	Status *string `pulumi:"status"`
}

// ConnectionStateInput is an input type that accepts ConnectionStateArgs and ConnectionStateOutput values.
// You can construct a concrete instance of `ConnectionStateInput` via:
//
//          ConnectionStateArgs{...}
type ConnectionStateInput interface {
	pulumi.Input

	ToConnectionStateOutput() ConnectionStateOutput
	ToConnectionStateOutputWithContext(context.Context) ConnectionStateOutput
}

// ConnectionState information.
type ConnectionStateArgs struct {
	// Actions required (if any).
	ActionsRequired pulumi.StringPtrInput `pulumi:"actionsRequired"`
	// Description of the connection state.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Status of the connection.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (ConnectionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionState)(nil)).Elem()
}

func (i ConnectionStateArgs) ToConnectionStateOutput() ConnectionStateOutput {
	return i.ToConnectionStateOutputWithContext(context.Background())
}

func (i ConnectionStateArgs) ToConnectionStateOutputWithContext(ctx context.Context) ConnectionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionStateOutput)
}

func (i ConnectionStateArgs) ToConnectionStatePtrOutput() ConnectionStatePtrOutput {
	return i.ToConnectionStatePtrOutputWithContext(context.Background())
}

func (i ConnectionStateArgs) ToConnectionStatePtrOutputWithContext(ctx context.Context) ConnectionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionStateOutput).ToConnectionStatePtrOutputWithContext(ctx)
}

// ConnectionStatePtrInput is an input type that accepts ConnectionStateArgs, ConnectionStatePtr and ConnectionStatePtrOutput values.
// You can construct a concrete instance of `ConnectionStatePtrInput` via:
//
//          ConnectionStateArgs{...}
//
//  or:
//
//          nil
type ConnectionStatePtrInput interface {
	pulumi.Input

	ToConnectionStatePtrOutput() ConnectionStatePtrOutput
	ToConnectionStatePtrOutputWithContext(context.Context) ConnectionStatePtrOutput
}

type connectionStatePtrType ConnectionStateArgs

func ConnectionStatePtr(v *ConnectionStateArgs) ConnectionStatePtrInput {
	return (*connectionStatePtrType)(v)
}

func (*connectionStatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionState)(nil)).Elem()
}

func (i *connectionStatePtrType) ToConnectionStatePtrOutput() ConnectionStatePtrOutput {
	return i.ToConnectionStatePtrOutputWithContext(context.Background())
}

func (i *connectionStatePtrType) ToConnectionStatePtrOutputWithContext(ctx context.Context) ConnectionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionStatePtrOutput)
}

// ConnectionState information.
type ConnectionStateOutput struct{ *pulumi.OutputState }

func (ConnectionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionState)(nil)).Elem()
}

func (o ConnectionStateOutput) ToConnectionStateOutput() ConnectionStateOutput {
	return o
}

func (o ConnectionStateOutput) ToConnectionStateOutputWithContext(ctx context.Context) ConnectionStateOutput {
	return o
}

func (o ConnectionStateOutput) ToConnectionStatePtrOutput() ConnectionStatePtrOutput {
	return o.ToConnectionStatePtrOutputWithContext(context.Background())
}

func (o ConnectionStateOutput) ToConnectionStatePtrOutputWithContext(ctx context.Context) ConnectionStatePtrOutput {
	return o.ApplyT(func(v ConnectionState) *ConnectionState {
		return &v
	}).(ConnectionStatePtrOutput)
}

// Actions required (if any).
func (o ConnectionStateOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionState) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// Description of the connection state.
func (o ConnectionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Status of the connection.
func (o ConnectionStateOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionState) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type ConnectionStatePtrOutput struct{ *pulumi.OutputState }

func (ConnectionStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionState)(nil)).Elem()
}

func (o ConnectionStatePtrOutput) ToConnectionStatePtrOutput() ConnectionStatePtrOutput {
	return o
}

func (o ConnectionStatePtrOutput) ToConnectionStatePtrOutputWithContext(ctx context.Context) ConnectionStatePtrOutput {
	return o
}

func (o ConnectionStatePtrOutput) Elem() ConnectionStateOutput {
	return o.ApplyT(func(v *ConnectionState) ConnectionState { return *v }).(ConnectionStateOutput)
}

// Actions required (if any).
func (o ConnectionStatePtrOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.ActionsRequired
	}).(pulumi.StringPtrOutput)
}

// Description of the connection state.
func (o ConnectionStatePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Status of the connection.
func (o ConnectionStatePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// ConnectionState information.
type ConnectionStateResponse struct {
	// Actions required (if any).
	ActionsRequired *string `pulumi:"actionsRequired"`
	// Description of the connection state.
	Description *string `pulumi:"description"`
	// Status of the connection.
	Status *string `pulumi:"status"`
}

// ConnectionStateResponseInput is an input type that accepts ConnectionStateResponseArgs and ConnectionStateResponseOutput values.
// You can construct a concrete instance of `ConnectionStateResponseInput` via:
//
//          ConnectionStateResponseArgs{...}
type ConnectionStateResponseInput interface {
	pulumi.Input

	ToConnectionStateResponseOutput() ConnectionStateResponseOutput
	ToConnectionStateResponseOutputWithContext(context.Context) ConnectionStateResponseOutput
}

// ConnectionState information.
type ConnectionStateResponseArgs struct {
	// Actions required (if any).
	ActionsRequired pulumi.StringPtrInput `pulumi:"actionsRequired"`
	// Description of the connection state.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Status of the connection.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (ConnectionStateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionStateResponse)(nil)).Elem()
}

func (i ConnectionStateResponseArgs) ToConnectionStateResponseOutput() ConnectionStateResponseOutput {
	return i.ToConnectionStateResponseOutputWithContext(context.Background())
}

func (i ConnectionStateResponseArgs) ToConnectionStateResponseOutputWithContext(ctx context.Context) ConnectionStateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionStateResponseOutput)
}

func (i ConnectionStateResponseArgs) ToConnectionStateResponsePtrOutput() ConnectionStateResponsePtrOutput {
	return i.ToConnectionStateResponsePtrOutputWithContext(context.Background())
}

func (i ConnectionStateResponseArgs) ToConnectionStateResponsePtrOutputWithContext(ctx context.Context) ConnectionStateResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionStateResponseOutput).ToConnectionStateResponsePtrOutputWithContext(ctx)
}

// ConnectionStateResponsePtrInput is an input type that accepts ConnectionStateResponseArgs, ConnectionStateResponsePtr and ConnectionStateResponsePtrOutput values.
// You can construct a concrete instance of `ConnectionStateResponsePtrInput` via:
//
//          ConnectionStateResponseArgs{...}
//
//  or:
//
//          nil
type ConnectionStateResponsePtrInput interface {
	pulumi.Input

	ToConnectionStateResponsePtrOutput() ConnectionStateResponsePtrOutput
	ToConnectionStateResponsePtrOutputWithContext(context.Context) ConnectionStateResponsePtrOutput
}

type connectionStateResponsePtrType ConnectionStateResponseArgs

func ConnectionStateResponsePtr(v *ConnectionStateResponseArgs) ConnectionStateResponsePtrInput {
	return (*connectionStateResponsePtrType)(v)
}

func (*connectionStateResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionStateResponse)(nil)).Elem()
}

func (i *connectionStateResponsePtrType) ToConnectionStateResponsePtrOutput() ConnectionStateResponsePtrOutput {
	return i.ToConnectionStateResponsePtrOutputWithContext(context.Background())
}

func (i *connectionStateResponsePtrType) ToConnectionStateResponsePtrOutputWithContext(ctx context.Context) ConnectionStateResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionStateResponsePtrOutput)
}

// ConnectionState information.
type ConnectionStateResponseOutput struct{ *pulumi.OutputState }

func (ConnectionStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionStateResponse)(nil)).Elem()
}

func (o ConnectionStateResponseOutput) ToConnectionStateResponseOutput() ConnectionStateResponseOutput {
	return o
}

func (o ConnectionStateResponseOutput) ToConnectionStateResponseOutputWithContext(ctx context.Context) ConnectionStateResponseOutput {
	return o
}

func (o ConnectionStateResponseOutput) ToConnectionStateResponsePtrOutput() ConnectionStateResponsePtrOutput {
	return o.ToConnectionStateResponsePtrOutputWithContext(context.Background())
}

func (o ConnectionStateResponseOutput) ToConnectionStateResponsePtrOutputWithContext(ctx context.Context) ConnectionStateResponsePtrOutput {
	return o.ApplyT(func(v ConnectionStateResponse) *ConnectionStateResponse {
		return &v
	}).(ConnectionStateResponsePtrOutput)
}

// Actions required (if any).
func (o ConnectionStateResponseOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionStateResponse) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// Description of the connection state.
func (o ConnectionStateResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionStateResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Status of the connection.
func (o ConnectionStateResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionStateResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type ConnectionStateResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectionStateResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionStateResponse)(nil)).Elem()
}

func (o ConnectionStateResponsePtrOutput) ToConnectionStateResponsePtrOutput() ConnectionStateResponsePtrOutput {
	return o
}

func (o ConnectionStateResponsePtrOutput) ToConnectionStateResponsePtrOutputWithContext(ctx context.Context) ConnectionStateResponsePtrOutput {
	return o
}

func (o ConnectionStateResponsePtrOutput) Elem() ConnectionStateResponseOutput {
	return o.ApplyT(func(v *ConnectionStateResponse) ConnectionStateResponse { return *v }).(ConnectionStateResponseOutput)
}

// Actions required (if any).
func (o ConnectionStateResponsePtrOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.ActionsRequired
	}).(pulumi.StringPtrOutput)
}

// Description of the connection state.
func (o ConnectionStateResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Status of the connection.
func (o ConnectionStateResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// EventGrid Domain.
type DomainType struct {
	// Location of the resource.
	Location string `pulumi:"location"`
	// Name of the resource.
	Name string `pulumi:"name"`
	// Properties of the domain.
	Properties DomainPropertiesResponse `pulumi:"properties"`
	// Tags of the resource.
	Tags map[string]string `pulumi:"tags"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// DomainTypeInput is an input type that accepts DomainTypeArgs and DomainTypeOutput values.
// You can construct a concrete instance of `DomainTypeInput` via:
//
//          DomainTypeArgs{...}
type DomainTypeInput interface {
	pulumi.Input

	ToDomainTypeOutput() DomainTypeOutput
	ToDomainTypeOutputWithContext(context.Context) DomainTypeOutput
}

// EventGrid Domain.
type DomainTypeArgs struct {
	// Location of the resource.
	Location pulumi.StringInput `pulumi:"location"`
	// Name of the resource.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of the domain.
	Properties DomainPropertiesResponseInput `pulumi:"properties"`
	// Tags of the resource.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DomainTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainType)(nil)).Elem()
}

func (i DomainTypeArgs) ToDomainTypeOutput() DomainTypeOutput {
	return i.ToDomainTypeOutputWithContext(context.Background())
}

func (i DomainTypeArgs) ToDomainTypeOutputWithContext(ctx context.Context) DomainTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainTypeOutput)
}

// EventGrid Domain.
type DomainTypeOutput struct{ *pulumi.OutputState }

func (DomainTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainType)(nil)).Elem()
}

func (o DomainTypeOutput) ToDomainTypeOutput() DomainTypeOutput {
	return o
}

func (o DomainTypeOutput) ToDomainTypeOutputWithContext(ctx context.Context) DomainTypeOutput {
	return o
}

// Location of the resource.
func (o DomainTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v DomainType) string { return v.Location }).(pulumi.StringOutput)
}

// Name of the resource.
func (o DomainTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DomainType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the domain.
func (o DomainTypeOutput) Properties() DomainPropertiesResponseOutput {
	return o.ApplyT(func(v DomainType) DomainPropertiesResponse { return v.Properties }).(DomainPropertiesResponseOutput)
}

// Tags of the resource.
func (o DomainTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v DomainType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Type of the resource.
func (o DomainTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DomainType) string { return v.Type }).(pulumi.StringOutput)
}

// Properties of the Domain.
type DomainProperties struct {
	// This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.
	InboundIpRules []InboundIpRule `pulumi:"inboundIpRules"`
	// This determines the format that Event Grid should expect for incoming events published to the domain.
	InputSchema *string `pulumi:"inputSchema"`
	// Information about the InputSchemaMapping which specified the info about mapping event payload.
	InputSchemaMapping *InputSchemaMapping `pulumi:"inputSchemaMapping"`
	// List of private endpoint connections.
	PrivateEndpointConnections []PrivateEndpointConnection `pulumi:"privateEndpointConnections"`
	// This determines if traffic is allowed over public network. By default it is enabled.
	// You can further restrict to specific IPs by configuring <seealso cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainProperties.InboundIpRules" />
	PublicNetworkAccess *string `pulumi:"publicNetworkAccess"`
}

// DomainPropertiesInput is an input type that accepts DomainPropertiesArgs and DomainPropertiesOutput values.
// You can construct a concrete instance of `DomainPropertiesInput` via:
//
//          DomainPropertiesArgs{...}
type DomainPropertiesInput interface {
	pulumi.Input

	ToDomainPropertiesOutput() DomainPropertiesOutput
	ToDomainPropertiesOutputWithContext(context.Context) DomainPropertiesOutput
}

// Properties of the Domain.
type DomainPropertiesArgs struct {
	// This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.
	InboundIpRules InboundIpRuleArrayInput `pulumi:"inboundIpRules"`
	// This determines the format that Event Grid should expect for incoming events published to the domain.
	InputSchema pulumi.StringPtrInput `pulumi:"inputSchema"`
	// Information about the InputSchemaMapping which specified the info about mapping event payload.
	InputSchemaMapping InputSchemaMappingPtrInput `pulumi:"inputSchemaMapping"`
	// List of private endpoint connections.
	PrivateEndpointConnections PrivateEndpointConnectionArrayInput `pulumi:"privateEndpointConnections"`
	// This determines if traffic is allowed over public network. By default it is enabled.
	// You can further restrict to specific IPs by configuring <seealso cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainProperties.InboundIpRules" />
	PublicNetworkAccess pulumi.StringPtrInput `pulumi:"publicNetworkAccess"`
}

func (DomainPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainProperties)(nil)).Elem()
}

func (i DomainPropertiesArgs) ToDomainPropertiesOutput() DomainPropertiesOutput {
	return i.ToDomainPropertiesOutputWithContext(context.Background())
}

func (i DomainPropertiesArgs) ToDomainPropertiesOutputWithContext(ctx context.Context) DomainPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainPropertiesOutput)
}

func (i DomainPropertiesArgs) ToDomainPropertiesPtrOutput() DomainPropertiesPtrOutput {
	return i.ToDomainPropertiesPtrOutputWithContext(context.Background())
}

func (i DomainPropertiesArgs) ToDomainPropertiesPtrOutputWithContext(ctx context.Context) DomainPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainPropertiesOutput).ToDomainPropertiesPtrOutputWithContext(ctx)
}

// DomainPropertiesPtrInput is an input type that accepts DomainPropertiesArgs, DomainPropertiesPtr and DomainPropertiesPtrOutput values.
// You can construct a concrete instance of `DomainPropertiesPtrInput` via:
//
//          DomainPropertiesArgs{...}
//
//  or:
//
//          nil
type DomainPropertiesPtrInput interface {
	pulumi.Input

	ToDomainPropertiesPtrOutput() DomainPropertiesPtrOutput
	ToDomainPropertiesPtrOutputWithContext(context.Context) DomainPropertiesPtrOutput
}

type domainPropertiesPtrType DomainPropertiesArgs

func DomainPropertiesPtr(v *DomainPropertiesArgs) DomainPropertiesPtrInput {
	return (*domainPropertiesPtrType)(v)
}

func (*domainPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainProperties)(nil)).Elem()
}

func (i *domainPropertiesPtrType) ToDomainPropertiesPtrOutput() DomainPropertiesPtrOutput {
	return i.ToDomainPropertiesPtrOutputWithContext(context.Background())
}

func (i *domainPropertiesPtrType) ToDomainPropertiesPtrOutputWithContext(ctx context.Context) DomainPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainPropertiesPtrOutput)
}

// Properties of the Domain.
type DomainPropertiesOutput struct{ *pulumi.OutputState }

func (DomainPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainProperties)(nil)).Elem()
}

func (o DomainPropertiesOutput) ToDomainPropertiesOutput() DomainPropertiesOutput {
	return o
}

func (o DomainPropertiesOutput) ToDomainPropertiesOutputWithContext(ctx context.Context) DomainPropertiesOutput {
	return o
}

func (o DomainPropertiesOutput) ToDomainPropertiesPtrOutput() DomainPropertiesPtrOutput {
	return o.ToDomainPropertiesPtrOutputWithContext(context.Background())
}

func (o DomainPropertiesOutput) ToDomainPropertiesPtrOutputWithContext(ctx context.Context) DomainPropertiesPtrOutput {
	return o.ApplyT(func(v DomainProperties) *DomainProperties {
		return &v
	}).(DomainPropertiesPtrOutput)
}

// This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.
func (o DomainPropertiesOutput) InboundIpRules() InboundIpRuleArrayOutput {
	return o.ApplyT(func(v DomainProperties) []InboundIpRule { return v.InboundIpRules }).(InboundIpRuleArrayOutput)
}

// This determines the format that Event Grid should expect for incoming events published to the domain.
func (o DomainPropertiesOutput) InputSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainProperties) *string { return v.InputSchema }).(pulumi.StringPtrOutput)
}

// Information about the InputSchemaMapping which specified the info about mapping event payload.
func (o DomainPropertiesOutput) InputSchemaMapping() InputSchemaMappingPtrOutput {
	return o.ApplyT(func(v DomainProperties) *InputSchemaMapping { return v.InputSchemaMapping }).(InputSchemaMappingPtrOutput)
}

// List of private endpoint connections.
func (o DomainPropertiesOutput) PrivateEndpointConnections() PrivateEndpointConnectionArrayOutput {
	return o.ApplyT(func(v DomainProperties) []PrivateEndpointConnection { return v.PrivateEndpointConnections }).(PrivateEndpointConnectionArrayOutput)
}

// This determines if traffic is allowed over public network. By default it is enabled.
// You can further restrict to specific IPs by configuring <seealso cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainProperties.InboundIpRules" />
func (o DomainPropertiesOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainProperties) *string { return v.PublicNetworkAccess }).(pulumi.StringPtrOutput)
}

type DomainPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DomainPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainProperties)(nil)).Elem()
}

func (o DomainPropertiesPtrOutput) ToDomainPropertiesPtrOutput() DomainPropertiesPtrOutput {
	return o
}

func (o DomainPropertiesPtrOutput) ToDomainPropertiesPtrOutputWithContext(ctx context.Context) DomainPropertiesPtrOutput {
	return o
}

func (o DomainPropertiesPtrOutput) Elem() DomainPropertiesOutput {
	return o.ApplyT(func(v *DomainProperties) DomainProperties { return *v }).(DomainPropertiesOutput)
}

// This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.
func (o DomainPropertiesPtrOutput) InboundIpRules() InboundIpRuleArrayOutput {
	return o.ApplyT(func(v *DomainProperties) []InboundIpRule {
		if v == nil {
			return nil
		}
		return v.InboundIpRules
	}).(InboundIpRuleArrayOutput)
}

// This determines the format that Event Grid should expect for incoming events published to the domain.
func (o DomainPropertiesPtrOutput) InputSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainProperties) *string {
		if v == nil {
			return nil
		}
		return v.InputSchema
	}).(pulumi.StringPtrOutput)
}

// Information about the InputSchemaMapping which specified the info about mapping event payload.
func (o DomainPropertiesPtrOutput) InputSchemaMapping() InputSchemaMappingPtrOutput {
	return o.ApplyT(func(v *DomainProperties) *InputSchemaMapping {
		if v == nil {
			return nil
		}
		return v.InputSchemaMapping
	}).(InputSchemaMappingPtrOutput)
}

// List of private endpoint connections.
func (o DomainPropertiesPtrOutput) PrivateEndpointConnections() PrivateEndpointConnectionArrayOutput {
	return o.ApplyT(func(v *DomainProperties) []PrivateEndpointConnection {
		if v == nil {
			return nil
		}
		return v.PrivateEndpointConnections
	}).(PrivateEndpointConnectionArrayOutput)
}

// This determines if traffic is allowed over public network. By default it is enabled.
// You can further restrict to specific IPs by configuring <seealso cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainProperties.InboundIpRules" />
func (o DomainPropertiesPtrOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicNetworkAccess
	}).(pulumi.StringPtrOutput)
}

// Properties of the Domain.
type DomainPropertiesResponse struct {
	// Endpoint for the domain.
	Endpoint string `pulumi:"endpoint"`
	// This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.
	InboundIpRules []InboundIpRuleResponse `pulumi:"inboundIpRules"`
	// This determines the format that Event Grid should expect for incoming events published to the domain.
	InputSchema *string `pulumi:"inputSchema"`
	// Information about the InputSchemaMapping which specified the info about mapping event payload.
	InputSchemaMapping *InputSchemaMappingResponse `pulumi:"inputSchemaMapping"`
	// Metric resource id for the domain.
	MetricResourceId string `pulumi:"metricResourceId"`
	// List of private endpoint connections.
	PrivateEndpointConnections []PrivateEndpointConnectionResponse `pulumi:"privateEndpointConnections"`
	// Provisioning state of the domain.
	ProvisioningState string `pulumi:"provisioningState"`
	// This determines if traffic is allowed over public network. By default it is enabled.
	// You can further restrict to specific IPs by configuring <seealso cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainProperties.InboundIpRules" />
	PublicNetworkAccess *string `pulumi:"publicNetworkAccess"`
}

// DomainPropertiesResponseInput is an input type that accepts DomainPropertiesResponseArgs and DomainPropertiesResponseOutput values.
// You can construct a concrete instance of `DomainPropertiesResponseInput` via:
//
//          DomainPropertiesResponseArgs{...}
type DomainPropertiesResponseInput interface {
	pulumi.Input

	ToDomainPropertiesResponseOutput() DomainPropertiesResponseOutput
	ToDomainPropertiesResponseOutputWithContext(context.Context) DomainPropertiesResponseOutput
}

// Properties of the Domain.
type DomainPropertiesResponseArgs struct {
	// Endpoint for the domain.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
	// This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.
	InboundIpRules InboundIpRuleResponseArrayInput `pulumi:"inboundIpRules"`
	// This determines the format that Event Grid should expect for incoming events published to the domain.
	InputSchema pulumi.StringPtrInput `pulumi:"inputSchema"`
	// Information about the InputSchemaMapping which specified the info about mapping event payload.
	InputSchemaMapping InputSchemaMappingResponsePtrInput `pulumi:"inputSchemaMapping"`
	// Metric resource id for the domain.
	MetricResourceId pulumi.StringInput `pulumi:"metricResourceId"`
	// List of private endpoint connections.
	PrivateEndpointConnections PrivateEndpointConnectionResponseArrayInput `pulumi:"privateEndpointConnections"`
	// Provisioning state of the domain.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// This determines if traffic is allowed over public network. By default it is enabled.
	// You can further restrict to specific IPs by configuring <seealso cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainProperties.InboundIpRules" />
	PublicNetworkAccess pulumi.StringPtrInput `pulumi:"publicNetworkAccess"`
}

func (DomainPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainPropertiesResponse)(nil)).Elem()
}

func (i DomainPropertiesResponseArgs) ToDomainPropertiesResponseOutput() DomainPropertiesResponseOutput {
	return i.ToDomainPropertiesResponseOutputWithContext(context.Background())
}

func (i DomainPropertiesResponseArgs) ToDomainPropertiesResponseOutputWithContext(ctx context.Context) DomainPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainPropertiesResponseOutput)
}

func (i DomainPropertiesResponseArgs) ToDomainPropertiesResponsePtrOutput() DomainPropertiesResponsePtrOutput {
	return i.ToDomainPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i DomainPropertiesResponseArgs) ToDomainPropertiesResponsePtrOutputWithContext(ctx context.Context) DomainPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainPropertiesResponseOutput).ToDomainPropertiesResponsePtrOutputWithContext(ctx)
}

// DomainPropertiesResponsePtrInput is an input type that accepts DomainPropertiesResponseArgs, DomainPropertiesResponsePtr and DomainPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `DomainPropertiesResponsePtrInput` via:
//
//          DomainPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type DomainPropertiesResponsePtrInput interface {
	pulumi.Input

	ToDomainPropertiesResponsePtrOutput() DomainPropertiesResponsePtrOutput
	ToDomainPropertiesResponsePtrOutputWithContext(context.Context) DomainPropertiesResponsePtrOutput
}

type domainPropertiesResponsePtrType DomainPropertiesResponseArgs

func DomainPropertiesResponsePtr(v *DomainPropertiesResponseArgs) DomainPropertiesResponsePtrInput {
	return (*domainPropertiesResponsePtrType)(v)
}

func (*domainPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainPropertiesResponse)(nil)).Elem()
}

func (i *domainPropertiesResponsePtrType) ToDomainPropertiesResponsePtrOutput() DomainPropertiesResponsePtrOutput {
	return i.ToDomainPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *domainPropertiesResponsePtrType) ToDomainPropertiesResponsePtrOutputWithContext(ctx context.Context) DomainPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainPropertiesResponsePtrOutput)
}

// Properties of the Domain.
type DomainPropertiesResponseOutput struct{ *pulumi.OutputState }

func (DomainPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainPropertiesResponse)(nil)).Elem()
}

func (o DomainPropertiesResponseOutput) ToDomainPropertiesResponseOutput() DomainPropertiesResponseOutput {
	return o
}

func (o DomainPropertiesResponseOutput) ToDomainPropertiesResponseOutputWithContext(ctx context.Context) DomainPropertiesResponseOutput {
	return o
}

func (o DomainPropertiesResponseOutput) ToDomainPropertiesResponsePtrOutput() DomainPropertiesResponsePtrOutput {
	return o.ToDomainPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o DomainPropertiesResponseOutput) ToDomainPropertiesResponsePtrOutputWithContext(ctx context.Context) DomainPropertiesResponsePtrOutput {
	return o.ApplyT(func(v DomainPropertiesResponse) *DomainPropertiesResponse {
		return &v
	}).(DomainPropertiesResponsePtrOutput)
}

// Endpoint for the domain.
func (o DomainPropertiesResponseOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v DomainPropertiesResponse) string { return v.Endpoint }).(pulumi.StringOutput)
}

// This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.
func (o DomainPropertiesResponseOutput) InboundIpRules() InboundIpRuleResponseArrayOutput {
	return o.ApplyT(func(v DomainPropertiesResponse) []InboundIpRuleResponse { return v.InboundIpRules }).(InboundIpRuleResponseArrayOutput)
}

// This determines the format that Event Grid should expect for incoming events published to the domain.
func (o DomainPropertiesResponseOutput) InputSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainPropertiesResponse) *string { return v.InputSchema }).(pulumi.StringPtrOutput)
}

// Information about the InputSchemaMapping which specified the info about mapping event payload.
func (o DomainPropertiesResponseOutput) InputSchemaMapping() InputSchemaMappingResponsePtrOutput {
	return o.ApplyT(func(v DomainPropertiesResponse) *InputSchemaMappingResponse { return v.InputSchemaMapping }).(InputSchemaMappingResponsePtrOutput)
}

// Metric resource id for the domain.
func (o DomainPropertiesResponseOutput) MetricResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v DomainPropertiesResponse) string { return v.MetricResourceId }).(pulumi.StringOutput)
}

// List of private endpoint connections.
func (o DomainPropertiesResponseOutput) PrivateEndpointConnections() PrivateEndpointConnectionResponseArrayOutput {
	return o.ApplyT(func(v DomainPropertiesResponse) []PrivateEndpointConnectionResponse {
		return v.PrivateEndpointConnections
	}).(PrivateEndpointConnectionResponseArrayOutput)
}

// Provisioning state of the domain.
func (o DomainPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v DomainPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// This determines if traffic is allowed over public network. By default it is enabled.
// You can further restrict to specific IPs by configuring <seealso cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainProperties.InboundIpRules" />
func (o DomainPropertiesResponseOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainPropertiesResponse) *string { return v.PublicNetworkAccess }).(pulumi.StringPtrOutput)
}

type DomainPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (DomainPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainPropertiesResponse)(nil)).Elem()
}

func (o DomainPropertiesResponsePtrOutput) ToDomainPropertiesResponsePtrOutput() DomainPropertiesResponsePtrOutput {
	return o
}

func (o DomainPropertiesResponsePtrOutput) ToDomainPropertiesResponsePtrOutputWithContext(ctx context.Context) DomainPropertiesResponsePtrOutput {
	return o
}

func (o DomainPropertiesResponsePtrOutput) Elem() DomainPropertiesResponseOutput {
	return o.ApplyT(func(v *DomainPropertiesResponse) DomainPropertiesResponse { return *v }).(DomainPropertiesResponseOutput)
}

// Endpoint for the domain.
func (o DomainPropertiesResponsePtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoint
	}).(pulumi.StringPtrOutput)
}

// This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.
func (o DomainPropertiesResponsePtrOutput) InboundIpRules() InboundIpRuleResponseArrayOutput {
	return o.ApplyT(func(v *DomainPropertiesResponse) []InboundIpRuleResponse {
		if v == nil {
			return nil
		}
		return v.InboundIpRules
	}).(InboundIpRuleResponseArrayOutput)
}

// This determines the format that Event Grid should expect for incoming events published to the domain.
func (o DomainPropertiesResponsePtrOutput) InputSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.InputSchema
	}).(pulumi.StringPtrOutput)
}

// Information about the InputSchemaMapping which specified the info about mapping event payload.
func (o DomainPropertiesResponsePtrOutput) InputSchemaMapping() InputSchemaMappingResponsePtrOutput {
	return o.ApplyT(func(v *DomainPropertiesResponse) *InputSchemaMappingResponse {
		if v == nil {
			return nil
		}
		return v.InputSchemaMapping
	}).(InputSchemaMappingResponsePtrOutput)
}

// Metric resource id for the domain.
func (o DomainPropertiesResponsePtrOutput) MetricResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MetricResourceId
	}).(pulumi.StringPtrOutput)
}

// List of private endpoint connections.
func (o DomainPropertiesResponsePtrOutput) PrivateEndpointConnections() PrivateEndpointConnectionResponseArrayOutput {
	return o.ApplyT(func(v *DomainPropertiesResponse) []PrivateEndpointConnectionResponse {
		if v == nil {
			return nil
		}
		return v.PrivateEndpointConnections
	}).(PrivateEndpointConnectionResponseArrayOutput)
}

// Provisioning state of the domain.
func (o DomainPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// This determines if traffic is allowed over public network. By default it is enabled.
// You can further restrict to specific IPs by configuring <seealso cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainProperties.InboundIpRules" />
func (o DomainPropertiesResponsePtrOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PublicNetworkAccess
	}).(pulumi.StringPtrOutput)
}

// Domain Topic.
type DomainTopicType struct {
	// Name of the resource.
	Name string `pulumi:"name"`
	// Properties of the Domain Topic.
	Properties DomainTopicPropertiesResponse `pulumi:"properties"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// DomainTopicTypeInput is an input type that accepts DomainTopicTypeArgs and DomainTopicTypeOutput values.
// You can construct a concrete instance of `DomainTopicTypeInput` via:
//
//          DomainTopicTypeArgs{...}
type DomainTopicTypeInput interface {
	pulumi.Input

	ToDomainTopicTypeOutput() DomainTopicTypeOutput
	ToDomainTopicTypeOutputWithContext(context.Context) DomainTopicTypeOutput
}

// Domain Topic.
type DomainTopicTypeArgs struct {
	// Name of the resource.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of the Domain Topic.
	Properties DomainTopicPropertiesResponseInput `pulumi:"properties"`
	// Type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DomainTopicTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainTopicType)(nil)).Elem()
}

func (i DomainTopicTypeArgs) ToDomainTopicTypeOutput() DomainTopicTypeOutput {
	return i.ToDomainTopicTypeOutputWithContext(context.Background())
}

func (i DomainTopicTypeArgs) ToDomainTopicTypeOutputWithContext(ctx context.Context) DomainTopicTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainTopicTypeOutput)
}

// Domain Topic.
type DomainTopicTypeOutput struct{ *pulumi.OutputState }

func (DomainTopicTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainTopicType)(nil)).Elem()
}

func (o DomainTopicTypeOutput) ToDomainTopicTypeOutput() DomainTopicTypeOutput {
	return o
}

func (o DomainTopicTypeOutput) ToDomainTopicTypeOutputWithContext(ctx context.Context) DomainTopicTypeOutput {
	return o
}

// Name of the resource.
func (o DomainTopicTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DomainTopicType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the Domain Topic.
func (o DomainTopicTypeOutput) Properties() DomainTopicPropertiesResponseOutput {
	return o.ApplyT(func(v DomainTopicType) DomainTopicPropertiesResponse { return v.Properties }).(DomainTopicPropertiesResponseOutput)
}

// Type of the resource.
func (o DomainTopicTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DomainTopicType) string { return v.Type }).(pulumi.StringOutput)
}

// Properties of the Domain Topic.
type DomainTopicPropertiesResponse struct {
	// Provisioning state of the domain topic.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// DomainTopicPropertiesResponseInput is an input type that accepts DomainTopicPropertiesResponseArgs and DomainTopicPropertiesResponseOutput values.
// You can construct a concrete instance of `DomainTopicPropertiesResponseInput` via:
//
//          DomainTopicPropertiesResponseArgs{...}
type DomainTopicPropertiesResponseInput interface {
	pulumi.Input

	ToDomainTopicPropertiesResponseOutput() DomainTopicPropertiesResponseOutput
	ToDomainTopicPropertiesResponseOutputWithContext(context.Context) DomainTopicPropertiesResponseOutput
}

// Properties of the Domain Topic.
type DomainTopicPropertiesResponseArgs struct {
	// Provisioning state of the domain topic.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (DomainTopicPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainTopicPropertiesResponse)(nil)).Elem()
}

func (i DomainTopicPropertiesResponseArgs) ToDomainTopicPropertiesResponseOutput() DomainTopicPropertiesResponseOutput {
	return i.ToDomainTopicPropertiesResponseOutputWithContext(context.Background())
}

func (i DomainTopicPropertiesResponseArgs) ToDomainTopicPropertiesResponseOutputWithContext(ctx context.Context) DomainTopicPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainTopicPropertiesResponseOutput)
}

func (i DomainTopicPropertiesResponseArgs) ToDomainTopicPropertiesResponsePtrOutput() DomainTopicPropertiesResponsePtrOutput {
	return i.ToDomainTopicPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i DomainTopicPropertiesResponseArgs) ToDomainTopicPropertiesResponsePtrOutputWithContext(ctx context.Context) DomainTopicPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainTopicPropertiesResponseOutput).ToDomainTopicPropertiesResponsePtrOutputWithContext(ctx)
}

// DomainTopicPropertiesResponsePtrInput is an input type that accepts DomainTopicPropertiesResponseArgs, DomainTopicPropertiesResponsePtr and DomainTopicPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `DomainTopicPropertiesResponsePtrInput` via:
//
//          DomainTopicPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type DomainTopicPropertiesResponsePtrInput interface {
	pulumi.Input

	ToDomainTopicPropertiesResponsePtrOutput() DomainTopicPropertiesResponsePtrOutput
	ToDomainTopicPropertiesResponsePtrOutputWithContext(context.Context) DomainTopicPropertiesResponsePtrOutput
}

type domainTopicPropertiesResponsePtrType DomainTopicPropertiesResponseArgs

func DomainTopicPropertiesResponsePtr(v *DomainTopicPropertiesResponseArgs) DomainTopicPropertiesResponsePtrInput {
	return (*domainTopicPropertiesResponsePtrType)(v)
}

func (*domainTopicPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainTopicPropertiesResponse)(nil)).Elem()
}

func (i *domainTopicPropertiesResponsePtrType) ToDomainTopicPropertiesResponsePtrOutput() DomainTopicPropertiesResponsePtrOutput {
	return i.ToDomainTopicPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *domainTopicPropertiesResponsePtrType) ToDomainTopicPropertiesResponsePtrOutputWithContext(ctx context.Context) DomainTopicPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainTopicPropertiesResponsePtrOutput)
}

// Properties of the Domain Topic.
type DomainTopicPropertiesResponseOutput struct{ *pulumi.OutputState }

func (DomainTopicPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainTopicPropertiesResponse)(nil)).Elem()
}

func (o DomainTopicPropertiesResponseOutput) ToDomainTopicPropertiesResponseOutput() DomainTopicPropertiesResponseOutput {
	return o
}

func (o DomainTopicPropertiesResponseOutput) ToDomainTopicPropertiesResponseOutputWithContext(ctx context.Context) DomainTopicPropertiesResponseOutput {
	return o
}

func (o DomainTopicPropertiesResponseOutput) ToDomainTopicPropertiesResponsePtrOutput() DomainTopicPropertiesResponsePtrOutput {
	return o.ToDomainTopicPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o DomainTopicPropertiesResponseOutput) ToDomainTopicPropertiesResponsePtrOutputWithContext(ctx context.Context) DomainTopicPropertiesResponsePtrOutput {
	return o.ApplyT(func(v DomainTopicPropertiesResponse) *DomainTopicPropertiesResponse {
		return &v
	}).(DomainTopicPropertiesResponsePtrOutput)
}

// Provisioning state of the domain topic.
func (o DomainTopicPropertiesResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainTopicPropertiesResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type DomainTopicPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (DomainTopicPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainTopicPropertiesResponse)(nil)).Elem()
}

func (o DomainTopicPropertiesResponsePtrOutput) ToDomainTopicPropertiesResponsePtrOutput() DomainTopicPropertiesResponsePtrOutput {
	return o
}

func (o DomainTopicPropertiesResponsePtrOutput) ToDomainTopicPropertiesResponsePtrOutputWithContext(ctx context.Context) DomainTopicPropertiesResponsePtrOutput {
	return o
}

func (o DomainTopicPropertiesResponsePtrOutput) Elem() DomainTopicPropertiesResponseOutput {
	return o.ApplyT(func(v *DomainTopicPropertiesResponse) DomainTopicPropertiesResponse { return *v }).(DomainTopicPropertiesResponseOutput)
}

// Provisioning state of the domain topic.
func (o DomainTopicPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainTopicPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

type InboundIpRule struct {
	// Action to perform based on the match or no match of the IpMask.
	Action *string `pulumi:"action"`
	// IP Address in CIDR notation e.g., 10.0.0.0/8.
	IpMask *string `pulumi:"ipMask"`
}

// InboundIpRuleInput is an input type that accepts InboundIpRuleArgs and InboundIpRuleOutput values.
// You can construct a concrete instance of `InboundIpRuleInput` via:
//
//          InboundIpRuleArgs{...}
type InboundIpRuleInput interface {
	pulumi.Input

	ToInboundIpRuleOutput() InboundIpRuleOutput
	ToInboundIpRuleOutputWithContext(context.Context) InboundIpRuleOutput
}

type InboundIpRuleArgs struct {
	// Action to perform based on the match or no match of the IpMask.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// IP Address in CIDR notation e.g., 10.0.0.0/8.
	IpMask pulumi.StringPtrInput `pulumi:"ipMask"`
}

func (InboundIpRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundIpRule)(nil)).Elem()
}

func (i InboundIpRuleArgs) ToInboundIpRuleOutput() InboundIpRuleOutput {
	return i.ToInboundIpRuleOutputWithContext(context.Background())
}

func (i InboundIpRuleArgs) ToInboundIpRuleOutputWithContext(ctx context.Context) InboundIpRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundIpRuleOutput)
}

// InboundIpRuleArrayInput is an input type that accepts InboundIpRuleArray and InboundIpRuleArrayOutput values.
// You can construct a concrete instance of `InboundIpRuleArrayInput` via:
//
//          InboundIpRuleArray{ InboundIpRuleArgs{...} }
type InboundIpRuleArrayInput interface {
	pulumi.Input

	ToInboundIpRuleArrayOutput() InboundIpRuleArrayOutput
	ToInboundIpRuleArrayOutputWithContext(context.Context) InboundIpRuleArrayOutput
}

type InboundIpRuleArray []InboundIpRuleInput

func (InboundIpRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundIpRule)(nil)).Elem()
}

func (i InboundIpRuleArray) ToInboundIpRuleArrayOutput() InboundIpRuleArrayOutput {
	return i.ToInboundIpRuleArrayOutputWithContext(context.Background())
}

func (i InboundIpRuleArray) ToInboundIpRuleArrayOutputWithContext(ctx context.Context) InboundIpRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundIpRuleArrayOutput)
}

type InboundIpRuleOutput struct{ *pulumi.OutputState }

func (InboundIpRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundIpRule)(nil)).Elem()
}

func (o InboundIpRuleOutput) ToInboundIpRuleOutput() InboundIpRuleOutput {
	return o
}

func (o InboundIpRuleOutput) ToInboundIpRuleOutputWithContext(ctx context.Context) InboundIpRuleOutput {
	return o
}

// Action to perform based on the match or no match of the IpMask.
func (o InboundIpRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundIpRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// IP Address in CIDR notation e.g., 10.0.0.0/8.
func (o InboundIpRuleOutput) IpMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundIpRule) *string { return v.IpMask }).(pulumi.StringPtrOutput)
}

type InboundIpRuleArrayOutput struct{ *pulumi.OutputState }

func (InboundIpRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundIpRule)(nil)).Elem()
}

func (o InboundIpRuleArrayOutput) ToInboundIpRuleArrayOutput() InboundIpRuleArrayOutput {
	return o
}

func (o InboundIpRuleArrayOutput) ToInboundIpRuleArrayOutputWithContext(ctx context.Context) InboundIpRuleArrayOutput {
	return o
}

func (o InboundIpRuleArrayOutput) Index(i pulumi.IntInput) InboundIpRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InboundIpRule {
		return vs[0].([]InboundIpRule)[vs[1].(int)]
	}).(InboundIpRuleOutput)
}

type InboundIpRuleResponse struct {
	// Action to perform based on the match or no match of the IpMask.
	Action *string `pulumi:"action"`
	// IP Address in CIDR notation e.g., 10.0.0.0/8.
	IpMask *string `pulumi:"ipMask"`
}

// InboundIpRuleResponseInput is an input type that accepts InboundIpRuleResponseArgs and InboundIpRuleResponseOutput values.
// You can construct a concrete instance of `InboundIpRuleResponseInput` via:
//
//          InboundIpRuleResponseArgs{...}
type InboundIpRuleResponseInput interface {
	pulumi.Input

	ToInboundIpRuleResponseOutput() InboundIpRuleResponseOutput
	ToInboundIpRuleResponseOutputWithContext(context.Context) InboundIpRuleResponseOutput
}

type InboundIpRuleResponseArgs struct {
	// Action to perform based on the match or no match of the IpMask.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// IP Address in CIDR notation e.g., 10.0.0.0/8.
	IpMask pulumi.StringPtrInput `pulumi:"ipMask"`
}

func (InboundIpRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundIpRuleResponse)(nil)).Elem()
}

func (i InboundIpRuleResponseArgs) ToInboundIpRuleResponseOutput() InboundIpRuleResponseOutput {
	return i.ToInboundIpRuleResponseOutputWithContext(context.Background())
}

func (i InboundIpRuleResponseArgs) ToInboundIpRuleResponseOutputWithContext(ctx context.Context) InboundIpRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundIpRuleResponseOutput)
}

// InboundIpRuleResponseArrayInput is an input type that accepts InboundIpRuleResponseArray and InboundIpRuleResponseArrayOutput values.
// You can construct a concrete instance of `InboundIpRuleResponseArrayInput` via:
//
//          InboundIpRuleResponseArray{ InboundIpRuleResponseArgs{...} }
type InboundIpRuleResponseArrayInput interface {
	pulumi.Input

	ToInboundIpRuleResponseArrayOutput() InboundIpRuleResponseArrayOutput
	ToInboundIpRuleResponseArrayOutputWithContext(context.Context) InboundIpRuleResponseArrayOutput
}

type InboundIpRuleResponseArray []InboundIpRuleResponseInput

func (InboundIpRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundIpRuleResponse)(nil)).Elem()
}

func (i InboundIpRuleResponseArray) ToInboundIpRuleResponseArrayOutput() InboundIpRuleResponseArrayOutput {
	return i.ToInboundIpRuleResponseArrayOutputWithContext(context.Background())
}

func (i InboundIpRuleResponseArray) ToInboundIpRuleResponseArrayOutputWithContext(ctx context.Context) InboundIpRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundIpRuleResponseArrayOutput)
}

type InboundIpRuleResponseOutput struct{ *pulumi.OutputState }

func (InboundIpRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundIpRuleResponse)(nil)).Elem()
}

func (o InboundIpRuleResponseOutput) ToInboundIpRuleResponseOutput() InboundIpRuleResponseOutput {
	return o
}

func (o InboundIpRuleResponseOutput) ToInboundIpRuleResponseOutputWithContext(ctx context.Context) InboundIpRuleResponseOutput {
	return o
}

// Action to perform based on the match or no match of the IpMask.
func (o InboundIpRuleResponseOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundIpRuleResponse) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// IP Address in CIDR notation e.g., 10.0.0.0/8.
func (o InboundIpRuleResponseOutput) IpMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundIpRuleResponse) *string { return v.IpMask }).(pulumi.StringPtrOutput)
}

type InboundIpRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (InboundIpRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundIpRuleResponse)(nil)).Elem()
}

func (o InboundIpRuleResponseArrayOutput) ToInboundIpRuleResponseArrayOutput() InboundIpRuleResponseArrayOutput {
	return o
}

func (o InboundIpRuleResponseArrayOutput) ToInboundIpRuleResponseArrayOutputWithContext(ctx context.Context) InboundIpRuleResponseArrayOutput {
	return o
}

func (o InboundIpRuleResponseArrayOutput) Index(i pulumi.IntInput) InboundIpRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InboundIpRuleResponse {
		return vs[0].([]InboundIpRuleResponse)[vs[1].(int)]
	}).(InboundIpRuleResponseOutput)
}

// By default, Event Grid expects events to be in the Event Grid event schema. Specifying an input schema mapping enables publishing to Event Grid using a custom input schema. Currently, the only supported type of InputSchemaMapping is 'JsonInputSchemaMapping'.
type InputSchemaMapping struct {
	// Type of the custom mapping
	InputSchemaMappingType string `pulumi:"inputSchemaMappingType"`
}

// InputSchemaMappingInput is an input type that accepts InputSchemaMappingArgs and InputSchemaMappingOutput values.
// You can construct a concrete instance of `InputSchemaMappingInput` via:
//
//          InputSchemaMappingArgs{...}
type InputSchemaMappingInput interface {
	pulumi.Input

	ToInputSchemaMappingOutput() InputSchemaMappingOutput
	ToInputSchemaMappingOutputWithContext(context.Context) InputSchemaMappingOutput
}

// By default, Event Grid expects events to be in the Event Grid event schema. Specifying an input schema mapping enables publishing to Event Grid using a custom input schema. Currently, the only supported type of InputSchemaMapping is 'JsonInputSchemaMapping'.
type InputSchemaMappingArgs struct {
	// Type of the custom mapping
	InputSchemaMappingType pulumi.StringInput `pulumi:"inputSchemaMappingType"`
}

func (InputSchemaMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InputSchemaMapping)(nil)).Elem()
}

func (i InputSchemaMappingArgs) ToInputSchemaMappingOutput() InputSchemaMappingOutput {
	return i.ToInputSchemaMappingOutputWithContext(context.Background())
}

func (i InputSchemaMappingArgs) ToInputSchemaMappingOutputWithContext(ctx context.Context) InputSchemaMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputSchemaMappingOutput)
}

func (i InputSchemaMappingArgs) ToInputSchemaMappingPtrOutput() InputSchemaMappingPtrOutput {
	return i.ToInputSchemaMappingPtrOutputWithContext(context.Background())
}

func (i InputSchemaMappingArgs) ToInputSchemaMappingPtrOutputWithContext(ctx context.Context) InputSchemaMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputSchemaMappingOutput).ToInputSchemaMappingPtrOutputWithContext(ctx)
}

// InputSchemaMappingPtrInput is an input type that accepts InputSchemaMappingArgs, InputSchemaMappingPtr and InputSchemaMappingPtrOutput values.
// You can construct a concrete instance of `InputSchemaMappingPtrInput` via:
//
//          InputSchemaMappingArgs{...}
//
//  or:
//
//          nil
type InputSchemaMappingPtrInput interface {
	pulumi.Input

	ToInputSchemaMappingPtrOutput() InputSchemaMappingPtrOutput
	ToInputSchemaMappingPtrOutputWithContext(context.Context) InputSchemaMappingPtrOutput
}

type inputSchemaMappingPtrType InputSchemaMappingArgs

func InputSchemaMappingPtr(v *InputSchemaMappingArgs) InputSchemaMappingPtrInput {
	return (*inputSchemaMappingPtrType)(v)
}

func (*inputSchemaMappingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InputSchemaMapping)(nil)).Elem()
}

func (i *inputSchemaMappingPtrType) ToInputSchemaMappingPtrOutput() InputSchemaMappingPtrOutput {
	return i.ToInputSchemaMappingPtrOutputWithContext(context.Background())
}

func (i *inputSchemaMappingPtrType) ToInputSchemaMappingPtrOutputWithContext(ctx context.Context) InputSchemaMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputSchemaMappingPtrOutput)
}

// By default, Event Grid expects events to be in the Event Grid event schema. Specifying an input schema mapping enables publishing to Event Grid using a custom input schema. Currently, the only supported type of InputSchemaMapping is 'JsonInputSchemaMapping'.
type InputSchemaMappingOutput struct{ *pulumi.OutputState }

func (InputSchemaMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InputSchemaMapping)(nil)).Elem()
}

func (o InputSchemaMappingOutput) ToInputSchemaMappingOutput() InputSchemaMappingOutput {
	return o
}

func (o InputSchemaMappingOutput) ToInputSchemaMappingOutputWithContext(ctx context.Context) InputSchemaMappingOutput {
	return o
}

func (o InputSchemaMappingOutput) ToInputSchemaMappingPtrOutput() InputSchemaMappingPtrOutput {
	return o.ToInputSchemaMappingPtrOutputWithContext(context.Background())
}

func (o InputSchemaMappingOutput) ToInputSchemaMappingPtrOutputWithContext(ctx context.Context) InputSchemaMappingPtrOutput {
	return o.ApplyT(func(v InputSchemaMapping) *InputSchemaMapping {
		return &v
	}).(InputSchemaMappingPtrOutput)
}

// Type of the custom mapping
func (o InputSchemaMappingOutput) InputSchemaMappingType() pulumi.StringOutput {
	return o.ApplyT(func(v InputSchemaMapping) string { return v.InputSchemaMappingType }).(pulumi.StringOutput)
}

type InputSchemaMappingPtrOutput struct{ *pulumi.OutputState }

func (InputSchemaMappingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InputSchemaMapping)(nil)).Elem()
}

func (o InputSchemaMappingPtrOutput) ToInputSchemaMappingPtrOutput() InputSchemaMappingPtrOutput {
	return o
}

func (o InputSchemaMappingPtrOutput) ToInputSchemaMappingPtrOutputWithContext(ctx context.Context) InputSchemaMappingPtrOutput {
	return o
}

func (o InputSchemaMappingPtrOutput) Elem() InputSchemaMappingOutput {
	return o.ApplyT(func(v *InputSchemaMapping) InputSchemaMapping { return *v }).(InputSchemaMappingOutput)
}

// Type of the custom mapping
func (o InputSchemaMappingPtrOutput) InputSchemaMappingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InputSchemaMapping) *string {
		if v == nil {
			return nil
		}
		return &v.InputSchemaMappingType
	}).(pulumi.StringPtrOutput)
}

// By default, Event Grid expects events to be in the Event Grid event schema. Specifying an input schema mapping enables publishing to Event Grid using a custom input schema. Currently, the only supported type of InputSchemaMapping is 'JsonInputSchemaMapping'.
type InputSchemaMappingResponse struct {
	// Type of the custom mapping
	InputSchemaMappingType string `pulumi:"inputSchemaMappingType"`
}

// InputSchemaMappingResponseInput is an input type that accepts InputSchemaMappingResponseArgs and InputSchemaMappingResponseOutput values.
// You can construct a concrete instance of `InputSchemaMappingResponseInput` via:
//
//          InputSchemaMappingResponseArgs{...}
type InputSchemaMappingResponseInput interface {
	pulumi.Input

	ToInputSchemaMappingResponseOutput() InputSchemaMappingResponseOutput
	ToInputSchemaMappingResponseOutputWithContext(context.Context) InputSchemaMappingResponseOutput
}

// By default, Event Grid expects events to be in the Event Grid event schema. Specifying an input schema mapping enables publishing to Event Grid using a custom input schema. Currently, the only supported type of InputSchemaMapping is 'JsonInputSchemaMapping'.
type InputSchemaMappingResponseArgs struct {
	// Type of the custom mapping
	InputSchemaMappingType pulumi.StringInput `pulumi:"inputSchemaMappingType"`
}

func (InputSchemaMappingResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InputSchemaMappingResponse)(nil)).Elem()
}

func (i InputSchemaMappingResponseArgs) ToInputSchemaMappingResponseOutput() InputSchemaMappingResponseOutput {
	return i.ToInputSchemaMappingResponseOutputWithContext(context.Background())
}

func (i InputSchemaMappingResponseArgs) ToInputSchemaMappingResponseOutputWithContext(ctx context.Context) InputSchemaMappingResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputSchemaMappingResponseOutput)
}

func (i InputSchemaMappingResponseArgs) ToInputSchemaMappingResponsePtrOutput() InputSchemaMappingResponsePtrOutput {
	return i.ToInputSchemaMappingResponsePtrOutputWithContext(context.Background())
}

func (i InputSchemaMappingResponseArgs) ToInputSchemaMappingResponsePtrOutputWithContext(ctx context.Context) InputSchemaMappingResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputSchemaMappingResponseOutput).ToInputSchemaMappingResponsePtrOutputWithContext(ctx)
}

// InputSchemaMappingResponsePtrInput is an input type that accepts InputSchemaMappingResponseArgs, InputSchemaMappingResponsePtr and InputSchemaMappingResponsePtrOutput values.
// You can construct a concrete instance of `InputSchemaMappingResponsePtrInput` via:
//
//          InputSchemaMappingResponseArgs{...}
//
//  or:
//
//          nil
type InputSchemaMappingResponsePtrInput interface {
	pulumi.Input

	ToInputSchemaMappingResponsePtrOutput() InputSchemaMappingResponsePtrOutput
	ToInputSchemaMappingResponsePtrOutputWithContext(context.Context) InputSchemaMappingResponsePtrOutput
}

type inputSchemaMappingResponsePtrType InputSchemaMappingResponseArgs

func InputSchemaMappingResponsePtr(v *InputSchemaMappingResponseArgs) InputSchemaMappingResponsePtrInput {
	return (*inputSchemaMappingResponsePtrType)(v)
}

func (*inputSchemaMappingResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InputSchemaMappingResponse)(nil)).Elem()
}

func (i *inputSchemaMappingResponsePtrType) ToInputSchemaMappingResponsePtrOutput() InputSchemaMappingResponsePtrOutput {
	return i.ToInputSchemaMappingResponsePtrOutputWithContext(context.Background())
}

func (i *inputSchemaMappingResponsePtrType) ToInputSchemaMappingResponsePtrOutputWithContext(ctx context.Context) InputSchemaMappingResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputSchemaMappingResponsePtrOutput)
}

// By default, Event Grid expects events to be in the Event Grid event schema. Specifying an input schema mapping enables publishing to Event Grid using a custom input schema. Currently, the only supported type of InputSchemaMapping is 'JsonInputSchemaMapping'.
type InputSchemaMappingResponseOutput struct{ *pulumi.OutputState }

func (InputSchemaMappingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InputSchemaMappingResponse)(nil)).Elem()
}

func (o InputSchemaMappingResponseOutput) ToInputSchemaMappingResponseOutput() InputSchemaMappingResponseOutput {
	return o
}

func (o InputSchemaMappingResponseOutput) ToInputSchemaMappingResponseOutputWithContext(ctx context.Context) InputSchemaMappingResponseOutput {
	return o
}

func (o InputSchemaMappingResponseOutput) ToInputSchemaMappingResponsePtrOutput() InputSchemaMappingResponsePtrOutput {
	return o.ToInputSchemaMappingResponsePtrOutputWithContext(context.Background())
}

func (o InputSchemaMappingResponseOutput) ToInputSchemaMappingResponsePtrOutputWithContext(ctx context.Context) InputSchemaMappingResponsePtrOutput {
	return o.ApplyT(func(v InputSchemaMappingResponse) *InputSchemaMappingResponse {
		return &v
	}).(InputSchemaMappingResponsePtrOutput)
}

// Type of the custom mapping
func (o InputSchemaMappingResponseOutput) InputSchemaMappingType() pulumi.StringOutput {
	return o.ApplyT(func(v InputSchemaMappingResponse) string { return v.InputSchemaMappingType }).(pulumi.StringOutput)
}

type InputSchemaMappingResponsePtrOutput struct{ *pulumi.OutputState }

func (InputSchemaMappingResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InputSchemaMappingResponse)(nil)).Elem()
}

func (o InputSchemaMappingResponsePtrOutput) ToInputSchemaMappingResponsePtrOutput() InputSchemaMappingResponsePtrOutput {
	return o
}

func (o InputSchemaMappingResponsePtrOutput) ToInputSchemaMappingResponsePtrOutputWithContext(ctx context.Context) InputSchemaMappingResponsePtrOutput {
	return o
}

func (o InputSchemaMappingResponsePtrOutput) Elem() InputSchemaMappingResponseOutput {
	return o.ApplyT(func(v *InputSchemaMappingResponse) InputSchemaMappingResponse { return *v }).(InputSchemaMappingResponseOutput)
}

// Type of the custom mapping
func (o InputSchemaMappingResponsePtrOutput) InputSchemaMappingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InputSchemaMappingResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InputSchemaMappingType
	}).(pulumi.StringPtrOutput)
}

// PrivateEndpoint information.
type PrivateEndpoint struct {
	// The ARM identifier for Private Endpoint.
	Id *string `pulumi:"id"`
}

// PrivateEndpointInput is an input type that accepts PrivateEndpointArgs and PrivateEndpointOutput values.
// You can construct a concrete instance of `PrivateEndpointInput` via:
//
//          PrivateEndpointArgs{...}
type PrivateEndpointInput interface {
	pulumi.Input

	ToPrivateEndpointOutput() PrivateEndpointOutput
	ToPrivateEndpointOutputWithContext(context.Context) PrivateEndpointOutput
}

// PrivateEndpoint information.
type PrivateEndpointArgs struct {
	// The ARM identifier for Private Endpoint.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (PrivateEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpoint)(nil)).Elem()
}

func (i PrivateEndpointArgs) ToPrivateEndpointOutput() PrivateEndpointOutput {
	return i.ToPrivateEndpointOutputWithContext(context.Background())
}

func (i PrivateEndpointArgs) ToPrivateEndpointOutputWithContext(ctx context.Context) PrivateEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointOutput)
}

func (i PrivateEndpointArgs) ToPrivateEndpointPtrOutput() PrivateEndpointPtrOutput {
	return i.ToPrivateEndpointPtrOutputWithContext(context.Background())
}

func (i PrivateEndpointArgs) ToPrivateEndpointPtrOutputWithContext(ctx context.Context) PrivateEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointOutput).ToPrivateEndpointPtrOutputWithContext(ctx)
}

// PrivateEndpointPtrInput is an input type that accepts PrivateEndpointArgs, PrivateEndpointPtr and PrivateEndpointPtrOutput values.
// You can construct a concrete instance of `PrivateEndpointPtrInput` via:
//
//          PrivateEndpointArgs{...}
//
//  or:
//
//          nil
type PrivateEndpointPtrInput interface {
	pulumi.Input

	ToPrivateEndpointPtrOutput() PrivateEndpointPtrOutput
	ToPrivateEndpointPtrOutputWithContext(context.Context) PrivateEndpointPtrOutput
}

type privateEndpointPtrType PrivateEndpointArgs

func PrivateEndpointPtr(v *PrivateEndpointArgs) PrivateEndpointPtrInput {
	return (*privateEndpointPtrType)(v)
}

func (*privateEndpointPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpoint)(nil)).Elem()
}

func (i *privateEndpointPtrType) ToPrivateEndpointPtrOutput() PrivateEndpointPtrOutput {
	return i.ToPrivateEndpointPtrOutputWithContext(context.Background())
}

func (i *privateEndpointPtrType) ToPrivateEndpointPtrOutputWithContext(ctx context.Context) PrivateEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointPtrOutput)
}

// PrivateEndpoint information.
type PrivateEndpointOutput struct{ *pulumi.OutputState }

func (PrivateEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpoint)(nil)).Elem()
}

func (o PrivateEndpointOutput) ToPrivateEndpointOutput() PrivateEndpointOutput {
	return o
}

func (o PrivateEndpointOutput) ToPrivateEndpointOutputWithContext(ctx context.Context) PrivateEndpointOutput {
	return o
}

func (o PrivateEndpointOutput) ToPrivateEndpointPtrOutput() PrivateEndpointPtrOutput {
	return o.ToPrivateEndpointPtrOutputWithContext(context.Background())
}

func (o PrivateEndpointOutput) ToPrivateEndpointPtrOutputWithContext(ctx context.Context) PrivateEndpointPtrOutput {
	return o.ApplyT(func(v PrivateEndpoint) *PrivateEndpoint {
		return &v
	}).(PrivateEndpointPtrOutput)
}

// The ARM identifier for Private Endpoint.
func (o PrivateEndpointOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpoint) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type PrivateEndpointPtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpoint)(nil)).Elem()
}

func (o PrivateEndpointPtrOutput) ToPrivateEndpointPtrOutput() PrivateEndpointPtrOutput {
	return o
}

func (o PrivateEndpointPtrOutput) ToPrivateEndpointPtrOutputWithContext(ctx context.Context) PrivateEndpointPtrOutput {
	return o
}

func (o PrivateEndpointPtrOutput) Elem() PrivateEndpointOutput {
	return o.ApplyT(func(v *PrivateEndpoint) PrivateEndpoint { return *v }).(PrivateEndpointOutput)
}

// The ARM identifier for Private Endpoint.
func (o PrivateEndpointPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type PrivateEndpointConnection struct {
	// Properties of the PrivateEndpointConnection.
	Properties *PrivateEndpointConnectionProperties `pulumi:"properties"`
}

// PrivateEndpointConnectionInput is an input type that accepts PrivateEndpointConnectionArgs and PrivateEndpointConnectionOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionInput` via:
//
//          PrivateEndpointConnectionArgs{...}
type PrivateEndpointConnectionInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionOutput() PrivateEndpointConnectionOutput
	ToPrivateEndpointConnectionOutputWithContext(context.Context) PrivateEndpointConnectionOutput
}

type PrivateEndpointConnectionArgs struct {
	// Properties of the PrivateEndpointConnection.
	Properties PrivateEndpointConnectionPropertiesPtrInput `pulumi:"properties"`
}

func (PrivateEndpointConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnection)(nil)).Elem()
}

func (i PrivateEndpointConnectionArgs) ToPrivateEndpointConnectionOutput() PrivateEndpointConnectionOutput {
	return i.ToPrivateEndpointConnectionOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionArgs) ToPrivateEndpointConnectionOutputWithContext(ctx context.Context) PrivateEndpointConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionOutput)
}

// PrivateEndpointConnectionArrayInput is an input type that accepts PrivateEndpointConnectionArray and PrivateEndpointConnectionArrayOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionArrayInput` via:
//
//          PrivateEndpointConnectionArray{ PrivateEndpointConnectionArgs{...} }
type PrivateEndpointConnectionArrayInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionArrayOutput() PrivateEndpointConnectionArrayOutput
	ToPrivateEndpointConnectionArrayOutputWithContext(context.Context) PrivateEndpointConnectionArrayOutput
}

type PrivateEndpointConnectionArray []PrivateEndpointConnectionInput

func (PrivateEndpointConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnection)(nil)).Elem()
}

func (i PrivateEndpointConnectionArray) ToPrivateEndpointConnectionArrayOutput() PrivateEndpointConnectionArrayOutput {
	return i.ToPrivateEndpointConnectionArrayOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionArray) ToPrivateEndpointConnectionArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionArrayOutput)
}

type PrivateEndpointConnectionOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnection)(nil)).Elem()
}

func (o PrivateEndpointConnectionOutput) ToPrivateEndpointConnectionOutput() PrivateEndpointConnectionOutput {
	return o
}

func (o PrivateEndpointConnectionOutput) ToPrivateEndpointConnectionOutputWithContext(ctx context.Context) PrivateEndpointConnectionOutput {
	return o
}

// Properties of the PrivateEndpointConnection.
func (o PrivateEndpointConnectionOutput) Properties() PrivateEndpointConnectionPropertiesPtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnection) *PrivateEndpointConnectionProperties { return v.Properties }).(PrivateEndpointConnectionPropertiesPtrOutput)
}

type PrivateEndpointConnectionArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnection)(nil)).Elem()
}

func (o PrivateEndpointConnectionArrayOutput) ToPrivateEndpointConnectionArrayOutput() PrivateEndpointConnectionArrayOutput {
	return o
}

func (o PrivateEndpointConnectionArrayOutput) ToPrivateEndpointConnectionArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionArrayOutput {
	return o
}

func (o PrivateEndpointConnectionArrayOutput) Index(i pulumi.IntInput) PrivateEndpointConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateEndpointConnection {
		return vs[0].([]PrivateEndpointConnection)[vs[1].(int)]
	}).(PrivateEndpointConnectionOutput)
}

// Properties of the private endpoint connection resource.
type PrivateEndpointConnectionProperties struct {
	// GroupIds from the private link service resource.
	GroupIds []string `pulumi:"groupIds"`
	// The Private Endpoint resource for this Connection.
	PrivateEndpoint *PrivateEndpoint `pulumi:"privateEndpoint"`
	// Details about the state of the connection.
	PrivateLinkServiceConnectionState *ConnectionState `pulumi:"privateLinkServiceConnectionState"`
	// Provisioning state of the Private Endpoint Connection.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// PrivateEndpointConnectionPropertiesInput is an input type that accepts PrivateEndpointConnectionPropertiesArgs and PrivateEndpointConnectionPropertiesOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionPropertiesInput` via:
//
//          PrivateEndpointConnectionPropertiesArgs{...}
type PrivateEndpointConnectionPropertiesInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionPropertiesOutput() PrivateEndpointConnectionPropertiesOutput
	ToPrivateEndpointConnectionPropertiesOutputWithContext(context.Context) PrivateEndpointConnectionPropertiesOutput
}

// Properties of the private endpoint connection resource.
type PrivateEndpointConnectionPropertiesArgs struct {
	// GroupIds from the private link service resource.
	GroupIds pulumi.StringArrayInput `pulumi:"groupIds"`
	// The Private Endpoint resource for this Connection.
	PrivateEndpoint PrivateEndpointPtrInput `pulumi:"privateEndpoint"`
	// Details about the state of the connection.
	PrivateLinkServiceConnectionState ConnectionStatePtrInput `pulumi:"privateLinkServiceConnectionState"`
	// Provisioning state of the Private Endpoint Connection.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (PrivateEndpointConnectionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionProperties)(nil)).Elem()
}

func (i PrivateEndpointConnectionPropertiesArgs) ToPrivateEndpointConnectionPropertiesOutput() PrivateEndpointConnectionPropertiesOutput {
	return i.ToPrivateEndpointConnectionPropertiesOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionPropertiesArgs) ToPrivateEndpointConnectionPropertiesOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionPropertiesOutput)
}

func (i PrivateEndpointConnectionPropertiesArgs) ToPrivateEndpointConnectionPropertiesPtrOutput() PrivateEndpointConnectionPropertiesPtrOutput {
	return i.ToPrivateEndpointConnectionPropertiesPtrOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionPropertiesArgs) ToPrivateEndpointConnectionPropertiesPtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionPropertiesOutput).ToPrivateEndpointConnectionPropertiesPtrOutputWithContext(ctx)
}

// PrivateEndpointConnectionPropertiesPtrInput is an input type that accepts PrivateEndpointConnectionPropertiesArgs, PrivateEndpointConnectionPropertiesPtr and PrivateEndpointConnectionPropertiesPtrOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionPropertiesPtrInput` via:
//
//          PrivateEndpointConnectionPropertiesArgs{...}
//
//  or:
//
//          nil
type PrivateEndpointConnectionPropertiesPtrInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionPropertiesPtrOutput() PrivateEndpointConnectionPropertiesPtrOutput
	ToPrivateEndpointConnectionPropertiesPtrOutputWithContext(context.Context) PrivateEndpointConnectionPropertiesPtrOutput
}

type privateEndpointConnectionPropertiesPtrType PrivateEndpointConnectionPropertiesArgs

func PrivateEndpointConnectionPropertiesPtr(v *PrivateEndpointConnectionPropertiesArgs) PrivateEndpointConnectionPropertiesPtrInput {
	return (*privateEndpointConnectionPropertiesPtrType)(v)
}

func (*privateEndpointConnectionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointConnectionProperties)(nil)).Elem()
}

func (i *privateEndpointConnectionPropertiesPtrType) ToPrivateEndpointConnectionPropertiesPtrOutput() PrivateEndpointConnectionPropertiesPtrOutput {
	return i.ToPrivateEndpointConnectionPropertiesPtrOutputWithContext(context.Background())
}

func (i *privateEndpointConnectionPropertiesPtrType) ToPrivateEndpointConnectionPropertiesPtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionPropertiesPtrOutput)
}

// Properties of the private endpoint connection resource.
type PrivateEndpointConnectionPropertiesOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionProperties)(nil)).Elem()
}

func (o PrivateEndpointConnectionPropertiesOutput) ToPrivateEndpointConnectionPropertiesOutput() PrivateEndpointConnectionPropertiesOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesOutput) ToPrivateEndpointConnectionPropertiesOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesOutput) ToPrivateEndpointConnectionPropertiesPtrOutput() PrivateEndpointConnectionPropertiesPtrOutput {
	return o.ToPrivateEndpointConnectionPropertiesPtrOutputWithContext(context.Background())
}

func (o PrivateEndpointConnectionPropertiesOutput) ToPrivateEndpointConnectionPropertiesPtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesPtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionProperties) *PrivateEndpointConnectionProperties {
		return &v
	}).(PrivateEndpointConnectionPropertiesPtrOutput)
}

// GroupIds from the private link service resource.
func (o PrivateEndpointConnectionPropertiesOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionProperties) []string { return v.GroupIds }).(pulumi.StringArrayOutput)
}

// The Private Endpoint resource for this Connection.
func (o PrivateEndpointConnectionPropertiesOutput) PrivateEndpoint() PrivateEndpointPtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionProperties) *PrivateEndpoint { return v.PrivateEndpoint }).(PrivateEndpointPtrOutput)
}

// Details about the state of the connection.
func (o PrivateEndpointConnectionPropertiesOutput) PrivateLinkServiceConnectionState() ConnectionStatePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionProperties) *ConnectionState {
		return v.PrivateLinkServiceConnectionState
	}).(ConnectionStatePtrOutput)
}

// Provisioning state of the Private Endpoint Connection.
func (o PrivateEndpointConnectionPropertiesOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionProperties) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type PrivateEndpointConnectionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointConnectionProperties)(nil)).Elem()
}

func (o PrivateEndpointConnectionPropertiesPtrOutput) ToPrivateEndpointConnectionPropertiesPtrOutput() PrivateEndpointConnectionPropertiesPtrOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesPtrOutput) ToPrivateEndpointConnectionPropertiesPtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesPtrOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesPtrOutput) Elem() PrivateEndpointConnectionPropertiesOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionProperties) PrivateEndpointConnectionProperties { return *v }).(PrivateEndpointConnectionPropertiesOutput)
}

// GroupIds from the private link service resource.
func (o PrivateEndpointConnectionPropertiesPtrOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionProperties) []string {
		if v == nil {
			return nil
		}
		return v.GroupIds
	}).(pulumi.StringArrayOutput)
}

// The Private Endpoint resource for this Connection.
func (o PrivateEndpointConnectionPropertiesPtrOutput) PrivateEndpoint() PrivateEndpointPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionProperties) *PrivateEndpoint {
		if v == nil {
			return nil
		}
		return v.PrivateEndpoint
	}).(PrivateEndpointPtrOutput)
}

// Details about the state of the connection.
func (o PrivateEndpointConnectionPropertiesPtrOutput) PrivateLinkServiceConnectionState() ConnectionStatePtrOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionProperties) *ConnectionState {
		if v == nil {
			return nil
		}
		return v.PrivateLinkServiceConnectionState
	}).(ConnectionStatePtrOutput)
}

// Provisioning state of the Private Endpoint Connection.
func (o PrivateEndpointConnectionPropertiesPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionProperties) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Properties of the private endpoint connection resource.
type PrivateEndpointConnectionPropertiesResponse struct {
	// GroupIds from the private link service resource.
	GroupIds []string `pulumi:"groupIds"`
	// The Private Endpoint resource for this Connection.
	PrivateEndpoint *PrivateEndpointResponse `pulumi:"privateEndpoint"`
	// Details about the state of the connection.
	PrivateLinkServiceConnectionState *ConnectionStateResponse `pulumi:"privateLinkServiceConnectionState"`
	// Provisioning state of the Private Endpoint Connection.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// PrivateEndpointConnectionPropertiesResponseInput is an input type that accepts PrivateEndpointConnectionPropertiesResponseArgs and PrivateEndpointConnectionPropertiesResponseOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionPropertiesResponseInput` via:
//
//          PrivateEndpointConnectionPropertiesResponseArgs{...}
type PrivateEndpointConnectionPropertiesResponseInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionPropertiesResponseOutput() PrivateEndpointConnectionPropertiesResponseOutput
	ToPrivateEndpointConnectionPropertiesResponseOutputWithContext(context.Context) PrivateEndpointConnectionPropertiesResponseOutput
}

// Properties of the private endpoint connection resource.
type PrivateEndpointConnectionPropertiesResponseArgs struct {
	// GroupIds from the private link service resource.
	GroupIds pulumi.StringArrayInput `pulumi:"groupIds"`
	// The Private Endpoint resource for this Connection.
	PrivateEndpoint PrivateEndpointResponsePtrInput `pulumi:"privateEndpoint"`
	// Details about the state of the connection.
	PrivateLinkServiceConnectionState ConnectionStateResponsePtrInput `pulumi:"privateLinkServiceConnectionState"`
	// Provisioning state of the Private Endpoint Connection.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (PrivateEndpointConnectionPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionPropertiesResponse)(nil)).Elem()
}

func (i PrivateEndpointConnectionPropertiesResponseArgs) ToPrivateEndpointConnectionPropertiesResponseOutput() PrivateEndpointConnectionPropertiesResponseOutput {
	return i.ToPrivateEndpointConnectionPropertiesResponseOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionPropertiesResponseArgs) ToPrivateEndpointConnectionPropertiesResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionPropertiesResponseOutput)
}

func (i PrivateEndpointConnectionPropertiesResponseArgs) ToPrivateEndpointConnectionPropertiesResponsePtrOutput() PrivateEndpointConnectionPropertiesResponsePtrOutput {
	return i.ToPrivateEndpointConnectionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionPropertiesResponseArgs) ToPrivateEndpointConnectionPropertiesResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionPropertiesResponseOutput).ToPrivateEndpointConnectionPropertiesResponsePtrOutputWithContext(ctx)
}

// PrivateEndpointConnectionPropertiesResponsePtrInput is an input type that accepts PrivateEndpointConnectionPropertiesResponseArgs, PrivateEndpointConnectionPropertiesResponsePtr and PrivateEndpointConnectionPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionPropertiesResponsePtrInput` via:
//
//          PrivateEndpointConnectionPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type PrivateEndpointConnectionPropertiesResponsePtrInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionPropertiesResponsePtrOutput() PrivateEndpointConnectionPropertiesResponsePtrOutput
	ToPrivateEndpointConnectionPropertiesResponsePtrOutputWithContext(context.Context) PrivateEndpointConnectionPropertiesResponsePtrOutput
}

type privateEndpointConnectionPropertiesResponsePtrType PrivateEndpointConnectionPropertiesResponseArgs

func PrivateEndpointConnectionPropertiesResponsePtr(v *PrivateEndpointConnectionPropertiesResponseArgs) PrivateEndpointConnectionPropertiesResponsePtrInput {
	return (*privateEndpointConnectionPropertiesResponsePtrType)(v)
}

func (*privateEndpointConnectionPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointConnectionPropertiesResponse)(nil)).Elem()
}

func (i *privateEndpointConnectionPropertiesResponsePtrType) ToPrivateEndpointConnectionPropertiesResponsePtrOutput() PrivateEndpointConnectionPropertiesResponsePtrOutput {
	return i.ToPrivateEndpointConnectionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *privateEndpointConnectionPropertiesResponsePtrType) ToPrivateEndpointConnectionPropertiesResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionPropertiesResponsePtrOutput)
}

// Properties of the private endpoint connection resource.
type PrivateEndpointConnectionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionPropertiesResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionPropertiesResponseOutput) ToPrivateEndpointConnectionPropertiesResponseOutput() PrivateEndpointConnectionPropertiesResponseOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesResponseOutput) ToPrivateEndpointConnectionPropertiesResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesResponseOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesResponseOutput) ToPrivateEndpointConnectionPropertiesResponsePtrOutput() PrivateEndpointConnectionPropertiesResponsePtrOutput {
	return o.ToPrivateEndpointConnectionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o PrivateEndpointConnectionPropertiesResponseOutput) ToPrivateEndpointConnectionPropertiesResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionPropertiesResponse) *PrivateEndpointConnectionPropertiesResponse {
		return &v
	}).(PrivateEndpointConnectionPropertiesResponsePtrOutput)
}

// GroupIds from the private link service resource.
func (o PrivateEndpointConnectionPropertiesResponseOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionPropertiesResponse) []string { return v.GroupIds }).(pulumi.StringArrayOutput)
}

// The Private Endpoint resource for this Connection.
func (o PrivateEndpointConnectionPropertiesResponseOutput) PrivateEndpoint() PrivateEndpointResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionPropertiesResponse) *PrivateEndpointResponse { return v.PrivateEndpoint }).(PrivateEndpointResponsePtrOutput)
}

// Details about the state of the connection.
func (o PrivateEndpointConnectionPropertiesResponseOutput) PrivateLinkServiceConnectionState() ConnectionStateResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionPropertiesResponse) *ConnectionStateResponse {
		return v.PrivateLinkServiceConnectionState
	}).(ConnectionStateResponsePtrOutput)
}

// Provisioning state of the Private Endpoint Connection.
func (o PrivateEndpointConnectionPropertiesResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionPropertiesResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type PrivateEndpointConnectionPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointConnectionPropertiesResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionPropertiesResponsePtrOutput) ToPrivateEndpointConnectionPropertiesResponsePtrOutput() PrivateEndpointConnectionPropertiesResponsePtrOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesResponsePtrOutput) ToPrivateEndpointConnectionPropertiesResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesResponsePtrOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesResponsePtrOutput) Elem() PrivateEndpointConnectionPropertiesResponseOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionPropertiesResponse) PrivateEndpointConnectionPropertiesResponse {
		return *v
	}).(PrivateEndpointConnectionPropertiesResponseOutput)
}

// GroupIds from the private link service resource.
func (o PrivateEndpointConnectionPropertiesResponsePtrOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.GroupIds
	}).(pulumi.StringArrayOutput)
}

// The Private Endpoint resource for this Connection.
func (o PrivateEndpointConnectionPropertiesResponsePtrOutput) PrivateEndpoint() PrivateEndpointResponsePtrOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionPropertiesResponse) *PrivateEndpointResponse {
		if v == nil {
			return nil
		}
		return v.PrivateEndpoint
	}).(PrivateEndpointResponsePtrOutput)
}

// Details about the state of the connection.
func (o PrivateEndpointConnectionPropertiesResponsePtrOutput) PrivateLinkServiceConnectionState() ConnectionStateResponsePtrOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionPropertiesResponse) *ConnectionStateResponse {
		if v == nil {
			return nil
		}
		return v.PrivateLinkServiceConnectionState
	}).(ConnectionStateResponsePtrOutput)
}

// Provisioning state of the Private Endpoint Connection.
func (o PrivateEndpointConnectionPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

type PrivateEndpointConnectionResponse struct {
	// Fully qualified identifier of the resource.
	Id string `pulumi:"id"`
	// Name of the resource.
	Name string `pulumi:"name"`
	// Properties of the PrivateEndpointConnection.
	Properties *PrivateEndpointConnectionPropertiesResponse `pulumi:"properties"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// PrivateEndpointConnectionResponseInput is an input type that accepts PrivateEndpointConnectionResponseArgs and PrivateEndpointConnectionResponseOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionResponseInput` via:
//
//          PrivateEndpointConnectionResponseArgs{...}
type PrivateEndpointConnectionResponseInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionResponseOutput() PrivateEndpointConnectionResponseOutput
	ToPrivateEndpointConnectionResponseOutputWithContext(context.Context) PrivateEndpointConnectionResponseOutput
}

type PrivateEndpointConnectionResponseArgs struct {
	// Fully qualified identifier of the resource.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the resource.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of the PrivateEndpointConnection.
	Properties PrivateEndpointConnectionPropertiesResponsePtrInput `pulumi:"properties"`
	// Type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PrivateEndpointConnectionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (i PrivateEndpointConnectionResponseArgs) ToPrivateEndpointConnectionResponseOutput() PrivateEndpointConnectionResponseOutput {
	return i.ToPrivateEndpointConnectionResponseOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionResponseArgs) ToPrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionResponseOutput)
}

// PrivateEndpointConnectionResponseArrayInput is an input type that accepts PrivateEndpointConnectionResponseArray and PrivateEndpointConnectionResponseArrayOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionResponseArrayInput` via:
//
//          PrivateEndpointConnectionResponseArray{ PrivateEndpointConnectionResponseArgs{...} }
type PrivateEndpointConnectionResponseArrayInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionResponseArrayOutput() PrivateEndpointConnectionResponseArrayOutput
	ToPrivateEndpointConnectionResponseArrayOutputWithContext(context.Context) PrivateEndpointConnectionResponseArrayOutput
}

type PrivateEndpointConnectionResponseArray []PrivateEndpointConnectionResponseInput

func (PrivateEndpointConnectionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (i PrivateEndpointConnectionResponseArray) ToPrivateEndpointConnectionResponseArrayOutput() PrivateEndpointConnectionResponseArrayOutput {
	return i.ToPrivateEndpointConnectionResponseArrayOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionResponseArray) ToPrivateEndpointConnectionResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionResponseArrayOutput)
}

type PrivateEndpointConnectionResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutput() PrivateEndpointConnectionResponseOutput {
	return o
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseOutput {
	return o
}

// Fully qualified identifier of the resource.
func (o PrivateEndpointConnectionResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the resource.
func (o PrivateEndpointConnectionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the PrivateEndpointConnection.
func (o PrivateEndpointConnectionResponseOutput) Properties() PrivateEndpointConnectionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *PrivateEndpointConnectionPropertiesResponse {
		return v.Properties
	}).(PrivateEndpointConnectionPropertiesResponsePtrOutput)
}

// Type of the resource.
func (o PrivateEndpointConnectionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PrivateEndpointConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutput() PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) Index(i pulumi.IntInput) PrivateEndpointConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateEndpointConnectionResponse {
		return vs[0].([]PrivateEndpointConnectionResponse)[vs[1].(int)]
	}).(PrivateEndpointConnectionResponseOutput)
}

// PrivateEndpoint information.
type PrivateEndpointResponse struct {
	// The ARM identifier for Private Endpoint.
	Id *string `pulumi:"id"`
}

// PrivateEndpointResponseInput is an input type that accepts PrivateEndpointResponseArgs and PrivateEndpointResponseOutput values.
// You can construct a concrete instance of `PrivateEndpointResponseInput` via:
//
//          PrivateEndpointResponseArgs{...}
type PrivateEndpointResponseInput interface {
	pulumi.Input

	ToPrivateEndpointResponseOutput() PrivateEndpointResponseOutput
	ToPrivateEndpointResponseOutputWithContext(context.Context) PrivateEndpointResponseOutput
}

// PrivateEndpoint information.
type PrivateEndpointResponseArgs struct {
	// The ARM identifier for Private Endpoint.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (PrivateEndpointResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointResponse)(nil)).Elem()
}

func (i PrivateEndpointResponseArgs) ToPrivateEndpointResponseOutput() PrivateEndpointResponseOutput {
	return i.ToPrivateEndpointResponseOutputWithContext(context.Background())
}

func (i PrivateEndpointResponseArgs) ToPrivateEndpointResponseOutputWithContext(ctx context.Context) PrivateEndpointResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointResponseOutput)
}

func (i PrivateEndpointResponseArgs) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return i.ToPrivateEndpointResponsePtrOutputWithContext(context.Background())
}

func (i PrivateEndpointResponseArgs) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointResponseOutput).ToPrivateEndpointResponsePtrOutputWithContext(ctx)
}

// PrivateEndpointResponsePtrInput is an input type that accepts PrivateEndpointResponseArgs, PrivateEndpointResponsePtr and PrivateEndpointResponsePtrOutput values.
// You can construct a concrete instance of `PrivateEndpointResponsePtrInput` via:
//
//          PrivateEndpointResponseArgs{...}
//
//  or:
//
//          nil
type PrivateEndpointResponsePtrInput interface {
	pulumi.Input

	ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput
	ToPrivateEndpointResponsePtrOutputWithContext(context.Context) PrivateEndpointResponsePtrOutput
}

type privateEndpointResponsePtrType PrivateEndpointResponseArgs

func PrivateEndpointResponsePtr(v *PrivateEndpointResponseArgs) PrivateEndpointResponsePtrInput {
	return (*privateEndpointResponsePtrType)(v)
}

func (*privateEndpointResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointResponse)(nil)).Elem()
}

func (i *privateEndpointResponsePtrType) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return i.ToPrivateEndpointResponsePtrOutputWithContext(context.Background())
}

func (i *privateEndpointResponsePtrType) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointResponsePtrOutput)
}

// PrivateEndpoint information.
type PrivateEndpointResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutput() PrivateEndpointResponseOutput {
	return o
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutputWithContext(ctx context.Context) PrivateEndpointResponseOutput {
	return o
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return o.ToPrivateEndpointResponsePtrOutputWithContext(context.Background())
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) *PrivateEndpointResponse {
		return &v
	}).(PrivateEndpointResponsePtrOutput)
}

// The ARM identifier for Private Endpoint.
func (o PrivateEndpointResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type PrivateEndpointResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) Elem() PrivateEndpointResponseOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) PrivateEndpointResponse { return *v }).(PrivateEndpointResponseOutput)
}

// The ARM identifier for Private Endpoint.
func (o PrivateEndpointResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// EventGrid Topic
type TopicType struct {
	// Location of the resource.
	Location string `pulumi:"location"`
	// Name of the resource.
	Name string `pulumi:"name"`
	// Properties of the topic.
	Properties TopicPropertiesResponse `pulumi:"properties"`
	// Tags of the resource.
	Tags map[string]string `pulumi:"tags"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// TopicTypeInput is an input type that accepts TopicTypeArgs and TopicTypeOutput values.
// You can construct a concrete instance of `TopicTypeInput` via:
//
//          TopicTypeArgs{...}
type TopicTypeInput interface {
	pulumi.Input

	ToTopicTypeOutput() TopicTypeOutput
	ToTopicTypeOutputWithContext(context.Context) TopicTypeOutput
}

// EventGrid Topic
type TopicTypeArgs struct {
	// Location of the resource.
	Location pulumi.StringInput `pulumi:"location"`
	// Name of the resource.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of the topic.
	Properties TopicPropertiesResponseInput `pulumi:"properties"`
	// Tags of the resource.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (TopicTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicType)(nil)).Elem()
}

func (i TopicTypeArgs) ToTopicTypeOutput() TopicTypeOutput {
	return i.ToTopicTypeOutputWithContext(context.Background())
}

func (i TopicTypeArgs) ToTopicTypeOutputWithContext(ctx context.Context) TopicTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicTypeOutput)
}

// EventGrid Topic
type TopicTypeOutput struct{ *pulumi.OutputState }

func (TopicTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicType)(nil)).Elem()
}

func (o TopicTypeOutput) ToTopicTypeOutput() TopicTypeOutput {
	return o
}

func (o TopicTypeOutput) ToTopicTypeOutputWithContext(ctx context.Context) TopicTypeOutput {
	return o
}

// Location of the resource.
func (o TopicTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v TopicType) string { return v.Location }).(pulumi.StringOutput)
}

// Name of the resource.
func (o TopicTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TopicType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the topic.
func (o TopicTypeOutput) Properties() TopicPropertiesResponseOutput {
	return o.ApplyT(func(v TopicType) TopicPropertiesResponse { return v.Properties }).(TopicPropertiesResponseOutput)
}

// Tags of the resource.
func (o TopicTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v TopicType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Type of the resource.
func (o TopicTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v TopicType) string { return v.Type }).(pulumi.StringOutput)
}

// Properties of the Topic
type TopicProperties struct {
	// This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.
	InboundIpRules []InboundIpRule `pulumi:"inboundIpRules"`
	// This determines the format that Event Grid should expect for incoming events published to the topic.
	InputSchema *string `pulumi:"inputSchema"`
	// This enables publishing using custom event schemas. An InputSchemaMapping can be specified to map various properties of a source schema to various required properties of the EventGridEvent schema.
	InputSchemaMapping         *InputSchemaMapping         `pulumi:"inputSchemaMapping"`
	PrivateEndpointConnections []PrivateEndpointConnection `pulumi:"privateEndpointConnections"`
	// This determines if traffic is allowed over public network. By default it is enabled.
	// You can further restrict to specific IPs by configuring <seealso cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicProperties.InboundIpRules" />
	PublicNetworkAccess *string `pulumi:"publicNetworkAccess"`
}

// TopicPropertiesInput is an input type that accepts TopicPropertiesArgs and TopicPropertiesOutput values.
// You can construct a concrete instance of `TopicPropertiesInput` via:
//
//          TopicPropertiesArgs{...}
type TopicPropertiesInput interface {
	pulumi.Input

	ToTopicPropertiesOutput() TopicPropertiesOutput
	ToTopicPropertiesOutputWithContext(context.Context) TopicPropertiesOutput
}

// Properties of the Topic
type TopicPropertiesArgs struct {
	// This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.
	InboundIpRules InboundIpRuleArrayInput `pulumi:"inboundIpRules"`
	// This determines the format that Event Grid should expect for incoming events published to the topic.
	InputSchema pulumi.StringPtrInput `pulumi:"inputSchema"`
	// This enables publishing using custom event schemas. An InputSchemaMapping can be specified to map various properties of a source schema to various required properties of the EventGridEvent schema.
	InputSchemaMapping         InputSchemaMappingPtrInput          `pulumi:"inputSchemaMapping"`
	PrivateEndpointConnections PrivateEndpointConnectionArrayInput `pulumi:"privateEndpointConnections"`
	// This determines if traffic is allowed over public network. By default it is enabled.
	// You can further restrict to specific IPs by configuring <seealso cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicProperties.InboundIpRules" />
	PublicNetworkAccess pulumi.StringPtrInput `pulumi:"publicNetworkAccess"`
}

func (TopicPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicProperties)(nil)).Elem()
}

func (i TopicPropertiesArgs) ToTopicPropertiesOutput() TopicPropertiesOutput {
	return i.ToTopicPropertiesOutputWithContext(context.Background())
}

func (i TopicPropertiesArgs) ToTopicPropertiesOutputWithContext(ctx context.Context) TopicPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicPropertiesOutput)
}

func (i TopicPropertiesArgs) ToTopicPropertiesPtrOutput() TopicPropertiesPtrOutput {
	return i.ToTopicPropertiesPtrOutputWithContext(context.Background())
}

func (i TopicPropertiesArgs) ToTopicPropertiesPtrOutputWithContext(ctx context.Context) TopicPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicPropertiesOutput).ToTopicPropertiesPtrOutputWithContext(ctx)
}

// TopicPropertiesPtrInput is an input type that accepts TopicPropertiesArgs, TopicPropertiesPtr and TopicPropertiesPtrOutput values.
// You can construct a concrete instance of `TopicPropertiesPtrInput` via:
//
//          TopicPropertiesArgs{...}
//
//  or:
//
//          nil
type TopicPropertiesPtrInput interface {
	pulumi.Input

	ToTopicPropertiesPtrOutput() TopicPropertiesPtrOutput
	ToTopicPropertiesPtrOutputWithContext(context.Context) TopicPropertiesPtrOutput
}

type topicPropertiesPtrType TopicPropertiesArgs

func TopicPropertiesPtr(v *TopicPropertiesArgs) TopicPropertiesPtrInput {
	return (*topicPropertiesPtrType)(v)
}

func (*topicPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicProperties)(nil)).Elem()
}

func (i *topicPropertiesPtrType) ToTopicPropertiesPtrOutput() TopicPropertiesPtrOutput {
	return i.ToTopicPropertiesPtrOutputWithContext(context.Background())
}

func (i *topicPropertiesPtrType) ToTopicPropertiesPtrOutputWithContext(ctx context.Context) TopicPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicPropertiesPtrOutput)
}

// Properties of the Topic
type TopicPropertiesOutput struct{ *pulumi.OutputState }

func (TopicPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicProperties)(nil)).Elem()
}

func (o TopicPropertiesOutput) ToTopicPropertiesOutput() TopicPropertiesOutput {
	return o
}

func (o TopicPropertiesOutput) ToTopicPropertiesOutputWithContext(ctx context.Context) TopicPropertiesOutput {
	return o
}

func (o TopicPropertiesOutput) ToTopicPropertiesPtrOutput() TopicPropertiesPtrOutput {
	return o.ToTopicPropertiesPtrOutputWithContext(context.Background())
}

func (o TopicPropertiesOutput) ToTopicPropertiesPtrOutputWithContext(ctx context.Context) TopicPropertiesPtrOutput {
	return o.ApplyT(func(v TopicProperties) *TopicProperties {
		return &v
	}).(TopicPropertiesPtrOutput)
}

// This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.
func (o TopicPropertiesOutput) InboundIpRules() InboundIpRuleArrayOutput {
	return o.ApplyT(func(v TopicProperties) []InboundIpRule { return v.InboundIpRules }).(InboundIpRuleArrayOutput)
}

// This determines the format that Event Grid should expect for incoming events published to the topic.
func (o TopicPropertiesOutput) InputSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicProperties) *string { return v.InputSchema }).(pulumi.StringPtrOutput)
}

// This enables publishing using custom event schemas. An InputSchemaMapping can be specified to map various properties of a source schema to various required properties of the EventGridEvent schema.
func (o TopicPropertiesOutput) InputSchemaMapping() InputSchemaMappingPtrOutput {
	return o.ApplyT(func(v TopicProperties) *InputSchemaMapping { return v.InputSchemaMapping }).(InputSchemaMappingPtrOutput)
}

func (o TopicPropertiesOutput) PrivateEndpointConnections() PrivateEndpointConnectionArrayOutput {
	return o.ApplyT(func(v TopicProperties) []PrivateEndpointConnection { return v.PrivateEndpointConnections }).(PrivateEndpointConnectionArrayOutput)
}

// This determines if traffic is allowed over public network. By default it is enabled.
// You can further restrict to specific IPs by configuring <seealso cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicProperties.InboundIpRules" />
func (o TopicPropertiesOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicProperties) *string { return v.PublicNetworkAccess }).(pulumi.StringPtrOutput)
}

type TopicPropertiesPtrOutput struct{ *pulumi.OutputState }

func (TopicPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicProperties)(nil)).Elem()
}

func (o TopicPropertiesPtrOutput) ToTopicPropertiesPtrOutput() TopicPropertiesPtrOutput {
	return o
}

func (o TopicPropertiesPtrOutput) ToTopicPropertiesPtrOutputWithContext(ctx context.Context) TopicPropertiesPtrOutput {
	return o
}

func (o TopicPropertiesPtrOutput) Elem() TopicPropertiesOutput {
	return o.ApplyT(func(v *TopicProperties) TopicProperties { return *v }).(TopicPropertiesOutput)
}

// This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.
func (o TopicPropertiesPtrOutput) InboundIpRules() InboundIpRuleArrayOutput {
	return o.ApplyT(func(v *TopicProperties) []InboundIpRule {
		if v == nil {
			return nil
		}
		return v.InboundIpRules
	}).(InboundIpRuleArrayOutput)
}

// This determines the format that Event Grid should expect for incoming events published to the topic.
func (o TopicPropertiesPtrOutput) InputSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicProperties) *string {
		if v == nil {
			return nil
		}
		return v.InputSchema
	}).(pulumi.StringPtrOutput)
}

// This enables publishing using custom event schemas. An InputSchemaMapping can be specified to map various properties of a source schema to various required properties of the EventGridEvent schema.
func (o TopicPropertiesPtrOutput) InputSchemaMapping() InputSchemaMappingPtrOutput {
	return o.ApplyT(func(v *TopicProperties) *InputSchemaMapping {
		if v == nil {
			return nil
		}
		return v.InputSchemaMapping
	}).(InputSchemaMappingPtrOutput)
}

func (o TopicPropertiesPtrOutput) PrivateEndpointConnections() PrivateEndpointConnectionArrayOutput {
	return o.ApplyT(func(v *TopicProperties) []PrivateEndpointConnection {
		if v == nil {
			return nil
		}
		return v.PrivateEndpointConnections
	}).(PrivateEndpointConnectionArrayOutput)
}

// This determines if traffic is allowed over public network. By default it is enabled.
// You can further restrict to specific IPs by configuring <seealso cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicProperties.InboundIpRules" />
func (o TopicPropertiesPtrOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicNetworkAccess
	}).(pulumi.StringPtrOutput)
}

// Properties of the Topic
type TopicPropertiesResponse struct {
	// Endpoint for the topic.
	Endpoint string `pulumi:"endpoint"`
	// This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.
	InboundIpRules []InboundIpRuleResponse `pulumi:"inboundIpRules"`
	// This determines the format that Event Grid should expect for incoming events published to the topic.
	InputSchema *string `pulumi:"inputSchema"`
	// This enables publishing using custom event schemas. An InputSchemaMapping can be specified to map various properties of a source schema to various required properties of the EventGridEvent schema.
	InputSchemaMapping *InputSchemaMappingResponse `pulumi:"inputSchemaMapping"`
	// Metric resource id for the topic.
	MetricResourceId           string                              `pulumi:"metricResourceId"`
	PrivateEndpointConnections []PrivateEndpointConnectionResponse `pulumi:"privateEndpointConnections"`
	// Provisioning state of the topic.
	ProvisioningState string `pulumi:"provisioningState"`
	// This determines if traffic is allowed over public network. By default it is enabled.
	// You can further restrict to specific IPs by configuring <seealso cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicProperties.InboundIpRules" />
	PublicNetworkAccess *string `pulumi:"publicNetworkAccess"`
}

// TopicPropertiesResponseInput is an input type that accepts TopicPropertiesResponseArgs and TopicPropertiesResponseOutput values.
// You can construct a concrete instance of `TopicPropertiesResponseInput` via:
//
//          TopicPropertiesResponseArgs{...}
type TopicPropertiesResponseInput interface {
	pulumi.Input

	ToTopicPropertiesResponseOutput() TopicPropertiesResponseOutput
	ToTopicPropertiesResponseOutputWithContext(context.Context) TopicPropertiesResponseOutput
}

// Properties of the Topic
type TopicPropertiesResponseArgs struct {
	// Endpoint for the topic.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
	// This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.
	InboundIpRules InboundIpRuleResponseArrayInput `pulumi:"inboundIpRules"`
	// This determines the format that Event Grid should expect for incoming events published to the topic.
	InputSchema pulumi.StringPtrInput `pulumi:"inputSchema"`
	// This enables publishing using custom event schemas. An InputSchemaMapping can be specified to map various properties of a source schema to various required properties of the EventGridEvent schema.
	InputSchemaMapping InputSchemaMappingResponsePtrInput `pulumi:"inputSchemaMapping"`
	// Metric resource id for the topic.
	MetricResourceId           pulumi.StringInput                          `pulumi:"metricResourceId"`
	PrivateEndpointConnections PrivateEndpointConnectionResponseArrayInput `pulumi:"privateEndpointConnections"`
	// Provisioning state of the topic.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// This determines if traffic is allowed over public network. By default it is enabled.
	// You can further restrict to specific IPs by configuring <seealso cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicProperties.InboundIpRules" />
	PublicNetworkAccess pulumi.StringPtrInput `pulumi:"publicNetworkAccess"`
}

func (TopicPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicPropertiesResponse)(nil)).Elem()
}

func (i TopicPropertiesResponseArgs) ToTopicPropertiesResponseOutput() TopicPropertiesResponseOutput {
	return i.ToTopicPropertiesResponseOutputWithContext(context.Background())
}

func (i TopicPropertiesResponseArgs) ToTopicPropertiesResponseOutputWithContext(ctx context.Context) TopicPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicPropertiesResponseOutput)
}

func (i TopicPropertiesResponseArgs) ToTopicPropertiesResponsePtrOutput() TopicPropertiesResponsePtrOutput {
	return i.ToTopicPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i TopicPropertiesResponseArgs) ToTopicPropertiesResponsePtrOutputWithContext(ctx context.Context) TopicPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicPropertiesResponseOutput).ToTopicPropertiesResponsePtrOutputWithContext(ctx)
}

// TopicPropertiesResponsePtrInput is an input type that accepts TopicPropertiesResponseArgs, TopicPropertiesResponsePtr and TopicPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `TopicPropertiesResponsePtrInput` via:
//
//          TopicPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type TopicPropertiesResponsePtrInput interface {
	pulumi.Input

	ToTopicPropertiesResponsePtrOutput() TopicPropertiesResponsePtrOutput
	ToTopicPropertiesResponsePtrOutputWithContext(context.Context) TopicPropertiesResponsePtrOutput
}

type topicPropertiesResponsePtrType TopicPropertiesResponseArgs

func TopicPropertiesResponsePtr(v *TopicPropertiesResponseArgs) TopicPropertiesResponsePtrInput {
	return (*topicPropertiesResponsePtrType)(v)
}

func (*topicPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicPropertiesResponse)(nil)).Elem()
}

func (i *topicPropertiesResponsePtrType) ToTopicPropertiesResponsePtrOutput() TopicPropertiesResponsePtrOutput {
	return i.ToTopicPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *topicPropertiesResponsePtrType) ToTopicPropertiesResponsePtrOutputWithContext(ctx context.Context) TopicPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicPropertiesResponsePtrOutput)
}

// Properties of the Topic
type TopicPropertiesResponseOutput struct{ *pulumi.OutputState }

func (TopicPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicPropertiesResponse)(nil)).Elem()
}

func (o TopicPropertiesResponseOutput) ToTopicPropertiesResponseOutput() TopicPropertiesResponseOutput {
	return o
}

func (o TopicPropertiesResponseOutput) ToTopicPropertiesResponseOutputWithContext(ctx context.Context) TopicPropertiesResponseOutput {
	return o
}

func (o TopicPropertiesResponseOutput) ToTopicPropertiesResponsePtrOutput() TopicPropertiesResponsePtrOutput {
	return o.ToTopicPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o TopicPropertiesResponseOutput) ToTopicPropertiesResponsePtrOutputWithContext(ctx context.Context) TopicPropertiesResponsePtrOutput {
	return o.ApplyT(func(v TopicPropertiesResponse) *TopicPropertiesResponse {
		return &v
	}).(TopicPropertiesResponsePtrOutput)
}

// Endpoint for the topic.
func (o TopicPropertiesResponseOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v TopicPropertiesResponse) string { return v.Endpoint }).(pulumi.StringOutput)
}

// This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.
func (o TopicPropertiesResponseOutput) InboundIpRules() InboundIpRuleResponseArrayOutput {
	return o.ApplyT(func(v TopicPropertiesResponse) []InboundIpRuleResponse { return v.InboundIpRules }).(InboundIpRuleResponseArrayOutput)
}

// This determines the format that Event Grid should expect for incoming events published to the topic.
func (o TopicPropertiesResponseOutput) InputSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicPropertiesResponse) *string { return v.InputSchema }).(pulumi.StringPtrOutput)
}

// This enables publishing using custom event schemas. An InputSchemaMapping can be specified to map various properties of a source schema to various required properties of the EventGridEvent schema.
func (o TopicPropertiesResponseOutput) InputSchemaMapping() InputSchemaMappingResponsePtrOutput {
	return o.ApplyT(func(v TopicPropertiesResponse) *InputSchemaMappingResponse { return v.InputSchemaMapping }).(InputSchemaMappingResponsePtrOutput)
}

// Metric resource id for the topic.
func (o TopicPropertiesResponseOutput) MetricResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v TopicPropertiesResponse) string { return v.MetricResourceId }).(pulumi.StringOutput)
}

func (o TopicPropertiesResponseOutput) PrivateEndpointConnections() PrivateEndpointConnectionResponseArrayOutput {
	return o.ApplyT(func(v TopicPropertiesResponse) []PrivateEndpointConnectionResponse {
		return v.PrivateEndpointConnections
	}).(PrivateEndpointConnectionResponseArrayOutput)
}

// Provisioning state of the topic.
func (o TopicPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v TopicPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// This determines if traffic is allowed over public network. By default it is enabled.
// You can further restrict to specific IPs by configuring <seealso cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicProperties.InboundIpRules" />
func (o TopicPropertiesResponseOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicPropertiesResponse) *string { return v.PublicNetworkAccess }).(pulumi.StringPtrOutput)
}

type TopicPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (TopicPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicPropertiesResponse)(nil)).Elem()
}

func (o TopicPropertiesResponsePtrOutput) ToTopicPropertiesResponsePtrOutput() TopicPropertiesResponsePtrOutput {
	return o
}

func (o TopicPropertiesResponsePtrOutput) ToTopicPropertiesResponsePtrOutputWithContext(ctx context.Context) TopicPropertiesResponsePtrOutput {
	return o
}

func (o TopicPropertiesResponsePtrOutput) Elem() TopicPropertiesResponseOutput {
	return o.ApplyT(func(v *TopicPropertiesResponse) TopicPropertiesResponse { return *v }).(TopicPropertiesResponseOutput)
}

// Endpoint for the topic.
func (o TopicPropertiesResponsePtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoint
	}).(pulumi.StringPtrOutput)
}

// This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.
func (o TopicPropertiesResponsePtrOutput) InboundIpRules() InboundIpRuleResponseArrayOutput {
	return o.ApplyT(func(v *TopicPropertiesResponse) []InboundIpRuleResponse {
		if v == nil {
			return nil
		}
		return v.InboundIpRules
	}).(InboundIpRuleResponseArrayOutput)
}

// This determines the format that Event Grid should expect for incoming events published to the topic.
func (o TopicPropertiesResponsePtrOutput) InputSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.InputSchema
	}).(pulumi.StringPtrOutput)
}

// This enables publishing using custom event schemas. An InputSchemaMapping can be specified to map various properties of a source schema to various required properties of the EventGridEvent schema.
func (o TopicPropertiesResponsePtrOutput) InputSchemaMapping() InputSchemaMappingResponsePtrOutput {
	return o.ApplyT(func(v *TopicPropertiesResponse) *InputSchemaMappingResponse {
		if v == nil {
			return nil
		}
		return v.InputSchemaMapping
	}).(InputSchemaMappingResponsePtrOutput)
}

// Metric resource id for the topic.
func (o TopicPropertiesResponsePtrOutput) MetricResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MetricResourceId
	}).(pulumi.StringPtrOutput)
}

func (o TopicPropertiesResponsePtrOutput) PrivateEndpointConnections() PrivateEndpointConnectionResponseArrayOutput {
	return o.ApplyT(func(v *TopicPropertiesResponse) []PrivateEndpointConnectionResponse {
		if v == nil {
			return nil
		}
		return v.PrivateEndpointConnections
	}).(PrivateEndpointConnectionResponseArrayOutput)
}

// Provisioning state of the topic.
func (o TopicPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// This determines if traffic is allowed over public network. By default it is enabled.
// You can further restrict to specific IPs by configuring <seealso cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicProperties.InboundIpRules" />
func (o TopicPropertiesResponsePtrOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PublicNetworkAccess
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ConnectionStateOutput{})
	pulumi.RegisterOutputType(ConnectionStatePtrOutput{})
	pulumi.RegisterOutputType(ConnectionStateResponseOutput{})
	pulumi.RegisterOutputType(ConnectionStateResponsePtrOutput{})
	pulumi.RegisterOutputType(DomainTypeOutput{})
	pulumi.RegisterOutputType(DomainPropertiesOutput{})
	pulumi.RegisterOutputType(DomainPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DomainPropertiesResponseOutput{})
	pulumi.RegisterOutputType(DomainPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(DomainTopicTypeOutput{})
	pulumi.RegisterOutputType(DomainTopicPropertiesResponseOutput{})
	pulumi.RegisterOutputType(DomainTopicPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(InboundIpRuleOutput{})
	pulumi.RegisterOutputType(InboundIpRuleArrayOutput{})
	pulumi.RegisterOutputType(InboundIpRuleResponseOutput{})
	pulumi.RegisterOutputType(InboundIpRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(InputSchemaMappingOutput{})
	pulumi.RegisterOutputType(InputSchemaMappingPtrOutput{})
	pulumi.RegisterOutputType(InputSchemaMappingResponseOutput{})
	pulumi.RegisterOutputType(InputSchemaMappingResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointOutput{})
	pulumi.RegisterOutputType(PrivateEndpointPtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionPropertiesOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponsePtrOutput{})
	pulumi.RegisterOutputType(TopicTypeOutput{})
	pulumi.RegisterOutputType(TopicPropertiesOutput{})
	pulumi.RegisterOutputType(TopicPropertiesPtrOutput{})
	pulumi.RegisterOutputType(TopicPropertiesResponseOutput{})
	pulumi.RegisterOutputType(TopicPropertiesResponsePtrOutput{})
}
