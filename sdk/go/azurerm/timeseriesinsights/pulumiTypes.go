// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package timeseriesinsights

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type AccessPolicyResourceProperties struct {
	// An description of the access policy.
	Description *string `pulumi:"description"`
	// The objectId of the principal in Azure Active Directory.
	PrincipalObjectId *string `pulumi:"principalObjectId"`
	// The list of roles the principal is assigned on the environment.
	Roles []string `pulumi:"roles"`
}

// AccessPolicyResourcePropertiesInput is an input type that accepts AccessPolicyResourcePropertiesArgs and AccessPolicyResourcePropertiesOutput values.
// You can construct a concrete instance of `AccessPolicyResourcePropertiesInput` via:
//
//          AccessPolicyResourcePropertiesArgs{...}
type AccessPolicyResourcePropertiesInput interface {
	pulumi.Input

	ToAccessPolicyResourcePropertiesOutput() AccessPolicyResourcePropertiesOutput
	ToAccessPolicyResourcePropertiesOutputWithContext(context.Context) AccessPolicyResourcePropertiesOutput
}

type AccessPolicyResourcePropertiesArgs struct {
	// An description of the access policy.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The objectId of the principal in Azure Active Directory.
	PrincipalObjectId pulumi.StringPtrInput `pulumi:"principalObjectId"`
	// The list of roles the principal is assigned on the environment.
	Roles pulumi.StringArrayInput `pulumi:"roles"`
}

func (AccessPolicyResourcePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyResourceProperties)(nil)).Elem()
}

func (i AccessPolicyResourcePropertiesArgs) ToAccessPolicyResourcePropertiesOutput() AccessPolicyResourcePropertiesOutput {
	return i.ToAccessPolicyResourcePropertiesOutputWithContext(context.Background())
}

func (i AccessPolicyResourcePropertiesArgs) ToAccessPolicyResourcePropertiesOutputWithContext(ctx context.Context) AccessPolicyResourcePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyResourcePropertiesOutput)
}

func (i AccessPolicyResourcePropertiesArgs) ToAccessPolicyResourcePropertiesPtrOutput() AccessPolicyResourcePropertiesPtrOutput {
	return i.ToAccessPolicyResourcePropertiesPtrOutputWithContext(context.Background())
}

func (i AccessPolicyResourcePropertiesArgs) ToAccessPolicyResourcePropertiesPtrOutputWithContext(ctx context.Context) AccessPolicyResourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyResourcePropertiesOutput).ToAccessPolicyResourcePropertiesPtrOutputWithContext(ctx)
}

// AccessPolicyResourcePropertiesPtrInput is an input type that accepts AccessPolicyResourcePropertiesArgs, AccessPolicyResourcePropertiesPtr and AccessPolicyResourcePropertiesPtrOutput values.
// You can construct a concrete instance of `AccessPolicyResourcePropertiesPtrInput` via:
//
//          AccessPolicyResourcePropertiesArgs{...}
//
//  or:
//
//          nil
type AccessPolicyResourcePropertiesPtrInput interface {
	pulumi.Input

	ToAccessPolicyResourcePropertiesPtrOutput() AccessPolicyResourcePropertiesPtrOutput
	ToAccessPolicyResourcePropertiesPtrOutputWithContext(context.Context) AccessPolicyResourcePropertiesPtrOutput
}

type accessPolicyResourcePropertiesPtrType AccessPolicyResourcePropertiesArgs

func AccessPolicyResourcePropertiesPtr(v *AccessPolicyResourcePropertiesArgs) AccessPolicyResourcePropertiesPtrInput {
	return (*accessPolicyResourcePropertiesPtrType)(v)
}

func (*accessPolicyResourcePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPolicyResourceProperties)(nil)).Elem()
}

func (i *accessPolicyResourcePropertiesPtrType) ToAccessPolicyResourcePropertiesPtrOutput() AccessPolicyResourcePropertiesPtrOutput {
	return i.ToAccessPolicyResourcePropertiesPtrOutputWithContext(context.Background())
}

func (i *accessPolicyResourcePropertiesPtrType) ToAccessPolicyResourcePropertiesPtrOutputWithContext(ctx context.Context) AccessPolicyResourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyResourcePropertiesPtrOutput)
}

type AccessPolicyResourcePropertiesOutput struct{ *pulumi.OutputState }

func (AccessPolicyResourcePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyResourceProperties)(nil)).Elem()
}

func (o AccessPolicyResourcePropertiesOutput) ToAccessPolicyResourcePropertiesOutput() AccessPolicyResourcePropertiesOutput {
	return o
}

func (o AccessPolicyResourcePropertiesOutput) ToAccessPolicyResourcePropertiesOutputWithContext(ctx context.Context) AccessPolicyResourcePropertiesOutput {
	return o
}

func (o AccessPolicyResourcePropertiesOutput) ToAccessPolicyResourcePropertiesPtrOutput() AccessPolicyResourcePropertiesPtrOutput {
	return o.ToAccessPolicyResourcePropertiesPtrOutputWithContext(context.Background())
}

func (o AccessPolicyResourcePropertiesOutput) ToAccessPolicyResourcePropertiesPtrOutputWithContext(ctx context.Context) AccessPolicyResourcePropertiesPtrOutput {
	return o.ApplyT(func(v AccessPolicyResourceProperties) *AccessPolicyResourceProperties {
		return &v
	}).(AccessPolicyResourcePropertiesPtrOutput)
}

// An description of the access policy.
func (o AccessPolicyResourcePropertiesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyResourceProperties) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The objectId of the principal in Azure Active Directory.
func (o AccessPolicyResourcePropertiesOutput) PrincipalObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyResourceProperties) *string { return v.PrincipalObjectId }).(pulumi.StringPtrOutput)
}

// The list of roles the principal is assigned on the environment.
func (o AccessPolicyResourcePropertiesOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicyResourceProperties) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

type AccessPolicyResourcePropertiesPtrOutput struct{ *pulumi.OutputState }

func (AccessPolicyResourcePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPolicyResourceProperties)(nil)).Elem()
}

func (o AccessPolicyResourcePropertiesPtrOutput) ToAccessPolicyResourcePropertiesPtrOutput() AccessPolicyResourcePropertiesPtrOutput {
	return o
}

func (o AccessPolicyResourcePropertiesPtrOutput) ToAccessPolicyResourcePropertiesPtrOutputWithContext(ctx context.Context) AccessPolicyResourcePropertiesPtrOutput {
	return o
}

func (o AccessPolicyResourcePropertiesPtrOutput) Elem() AccessPolicyResourcePropertiesOutput {
	return o.ApplyT(func(v *AccessPolicyResourceProperties) AccessPolicyResourceProperties { return *v }).(AccessPolicyResourcePropertiesOutput)
}

// An description of the access policy.
func (o AccessPolicyResourcePropertiesPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPolicyResourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The objectId of the principal in Azure Active Directory.
func (o AccessPolicyResourcePropertiesPtrOutput) PrincipalObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPolicyResourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalObjectId
	}).(pulumi.StringPtrOutput)
}

// The list of roles the principal is assigned on the environment.
func (o AccessPolicyResourcePropertiesPtrOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AccessPolicyResourceProperties) []string {
		if v == nil {
			return nil
		}
		return v.Roles
	}).(pulumi.StringArrayOutput)
}

type AccessPolicyResourcePropertiesResponse struct {
	// An description of the access policy.
	Description *string `pulumi:"description"`
	// The objectId of the principal in Azure Active Directory.
	PrincipalObjectId *string `pulumi:"principalObjectId"`
	// The list of roles the principal is assigned on the environment.
	Roles []string `pulumi:"roles"`
}

// AccessPolicyResourcePropertiesResponseInput is an input type that accepts AccessPolicyResourcePropertiesResponseArgs and AccessPolicyResourcePropertiesResponseOutput values.
// You can construct a concrete instance of `AccessPolicyResourcePropertiesResponseInput` via:
//
//          AccessPolicyResourcePropertiesResponseArgs{...}
type AccessPolicyResourcePropertiesResponseInput interface {
	pulumi.Input

	ToAccessPolicyResourcePropertiesResponseOutput() AccessPolicyResourcePropertiesResponseOutput
	ToAccessPolicyResourcePropertiesResponseOutputWithContext(context.Context) AccessPolicyResourcePropertiesResponseOutput
}

type AccessPolicyResourcePropertiesResponseArgs struct {
	// An description of the access policy.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The objectId of the principal in Azure Active Directory.
	PrincipalObjectId pulumi.StringPtrInput `pulumi:"principalObjectId"`
	// The list of roles the principal is assigned on the environment.
	Roles pulumi.StringArrayInput `pulumi:"roles"`
}

func (AccessPolicyResourcePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyResourcePropertiesResponse)(nil)).Elem()
}

func (i AccessPolicyResourcePropertiesResponseArgs) ToAccessPolicyResourcePropertiesResponseOutput() AccessPolicyResourcePropertiesResponseOutput {
	return i.ToAccessPolicyResourcePropertiesResponseOutputWithContext(context.Background())
}

func (i AccessPolicyResourcePropertiesResponseArgs) ToAccessPolicyResourcePropertiesResponseOutputWithContext(ctx context.Context) AccessPolicyResourcePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyResourcePropertiesResponseOutput)
}

func (i AccessPolicyResourcePropertiesResponseArgs) ToAccessPolicyResourcePropertiesResponsePtrOutput() AccessPolicyResourcePropertiesResponsePtrOutput {
	return i.ToAccessPolicyResourcePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i AccessPolicyResourcePropertiesResponseArgs) ToAccessPolicyResourcePropertiesResponsePtrOutputWithContext(ctx context.Context) AccessPolicyResourcePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyResourcePropertiesResponseOutput).ToAccessPolicyResourcePropertiesResponsePtrOutputWithContext(ctx)
}

// AccessPolicyResourcePropertiesResponsePtrInput is an input type that accepts AccessPolicyResourcePropertiesResponseArgs, AccessPolicyResourcePropertiesResponsePtr and AccessPolicyResourcePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `AccessPolicyResourcePropertiesResponsePtrInput` via:
//
//          AccessPolicyResourcePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type AccessPolicyResourcePropertiesResponsePtrInput interface {
	pulumi.Input

	ToAccessPolicyResourcePropertiesResponsePtrOutput() AccessPolicyResourcePropertiesResponsePtrOutput
	ToAccessPolicyResourcePropertiesResponsePtrOutputWithContext(context.Context) AccessPolicyResourcePropertiesResponsePtrOutput
}

type accessPolicyResourcePropertiesResponsePtrType AccessPolicyResourcePropertiesResponseArgs

func AccessPolicyResourcePropertiesResponsePtr(v *AccessPolicyResourcePropertiesResponseArgs) AccessPolicyResourcePropertiesResponsePtrInput {
	return (*accessPolicyResourcePropertiesResponsePtrType)(v)
}

func (*accessPolicyResourcePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPolicyResourcePropertiesResponse)(nil)).Elem()
}

func (i *accessPolicyResourcePropertiesResponsePtrType) ToAccessPolicyResourcePropertiesResponsePtrOutput() AccessPolicyResourcePropertiesResponsePtrOutput {
	return i.ToAccessPolicyResourcePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *accessPolicyResourcePropertiesResponsePtrType) ToAccessPolicyResourcePropertiesResponsePtrOutputWithContext(ctx context.Context) AccessPolicyResourcePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyResourcePropertiesResponsePtrOutput)
}

type AccessPolicyResourcePropertiesResponseOutput struct{ *pulumi.OutputState }

func (AccessPolicyResourcePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyResourcePropertiesResponse)(nil)).Elem()
}

func (o AccessPolicyResourcePropertiesResponseOutput) ToAccessPolicyResourcePropertiesResponseOutput() AccessPolicyResourcePropertiesResponseOutput {
	return o
}

func (o AccessPolicyResourcePropertiesResponseOutput) ToAccessPolicyResourcePropertiesResponseOutputWithContext(ctx context.Context) AccessPolicyResourcePropertiesResponseOutput {
	return o
}

func (o AccessPolicyResourcePropertiesResponseOutput) ToAccessPolicyResourcePropertiesResponsePtrOutput() AccessPolicyResourcePropertiesResponsePtrOutput {
	return o.ToAccessPolicyResourcePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o AccessPolicyResourcePropertiesResponseOutput) ToAccessPolicyResourcePropertiesResponsePtrOutputWithContext(ctx context.Context) AccessPolicyResourcePropertiesResponsePtrOutput {
	return o.ApplyT(func(v AccessPolicyResourcePropertiesResponse) *AccessPolicyResourcePropertiesResponse {
		return &v
	}).(AccessPolicyResourcePropertiesResponsePtrOutput)
}

// An description of the access policy.
func (o AccessPolicyResourcePropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyResourcePropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The objectId of the principal in Azure Active Directory.
func (o AccessPolicyResourcePropertiesResponseOutput) PrincipalObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyResourcePropertiesResponse) *string { return v.PrincipalObjectId }).(pulumi.StringPtrOutput)
}

// The list of roles the principal is assigned on the environment.
func (o AccessPolicyResourcePropertiesResponseOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicyResourcePropertiesResponse) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

type AccessPolicyResourcePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (AccessPolicyResourcePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPolicyResourcePropertiesResponse)(nil)).Elem()
}

func (o AccessPolicyResourcePropertiesResponsePtrOutput) ToAccessPolicyResourcePropertiesResponsePtrOutput() AccessPolicyResourcePropertiesResponsePtrOutput {
	return o
}

func (o AccessPolicyResourcePropertiesResponsePtrOutput) ToAccessPolicyResourcePropertiesResponsePtrOutputWithContext(ctx context.Context) AccessPolicyResourcePropertiesResponsePtrOutput {
	return o
}

func (o AccessPolicyResourcePropertiesResponsePtrOutput) Elem() AccessPolicyResourcePropertiesResponseOutput {
	return o.ApplyT(func(v *AccessPolicyResourcePropertiesResponse) AccessPolicyResourcePropertiesResponse { return *v }).(AccessPolicyResourcePropertiesResponseOutput)
}

// An description of the access policy.
func (o AccessPolicyResourcePropertiesResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPolicyResourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The objectId of the principal in Azure Active Directory.
func (o AccessPolicyResourcePropertiesResponsePtrOutput) PrincipalObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPolicyResourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalObjectId
	}).(pulumi.StringPtrOutput)
}

// The list of roles the principal is assigned on the environment.
func (o AccessPolicyResourcePropertiesResponsePtrOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AccessPolicyResourcePropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.Roles
	}).(pulumi.StringArrayOutput)
}

// An environment is a set of time-series data available for query, and is the top level Azure Time Series Insights resource.
type EnvironmentType struct {
	// Resource location
	Location string `pulumi:"location"`
	// Resource name
	Name string `pulumi:"name"`
	// Properties of the environment.
	Properties EnvironmentResourcePropertiesResponse `pulumi:"properties"`
	// The sku determines the capacity of the environment, the SLA (in queries-per-minute and total capacity), and the billing rate.
	Sku *SkuResponse `pulumi:"sku"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type string `pulumi:"type"`
}

// EnvironmentTypeInput is an input type that accepts EnvironmentTypeArgs and EnvironmentTypeOutput values.
// You can construct a concrete instance of `EnvironmentTypeInput` via:
//
//          EnvironmentTypeArgs{...}
type EnvironmentTypeInput interface {
	pulumi.Input

	ToEnvironmentTypeOutput() EnvironmentTypeOutput
	ToEnvironmentTypeOutputWithContext(context.Context) EnvironmentTypeOutput
}

// An environment is a set of time-series data available for query, and is the top level Azure Time Series Insights resource.
type EnvironmentTypeArgs struct {
	// Resource location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource name
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of the environment.
	Properties EnvironmentResourcePropertiesResponseInput `pulumi:"properties"`
	// The sku determines the capacity of the environment, the SLA (in queries-per-minute and total capacity), and the billing rate.
	Sku SkuResponsePtrInput `pulumi:"sku"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringInput `pulumi:"type"`
}

func (EnvironmentTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentType)(nil)).Elem()
}

func (i EnvironmentTypeArgs) ToEnvironmentTypeOutput() EnvironmentTypeOutput {
	return i.ToEnvironmentTypeOutputWithContext(context.Background())
}

func (i EnvironmentTypeArgs) ToEnvironmentTypeOutputWithContext(ctx context.Context) EnvironmentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentTypeOutput)
}

// An environment is a set of time-series data available for query, and is the top level Azure Time Series Insights resource.
type EnvironmentTypeOutput struct{ *pulumi.OutputState }

func (EnvironmentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentType)(nil)).Elem()
}

func (o EnvironmentTypeOutput) ToEnvironmentTypeOutput() EnvironmentTypeOutput {
	return o
}

func (o EnvironmentTypeOutput) ToEnvironmentTypeOutputWithContext(ctx context.Context) EnvironmentTypeOutput {
	return o
}

// Resource location
func (o EnvironmentTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource name
func (o EnvironmentTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the environment.
func (o EnvironmentTypeOutput) Properties() EnvironmentResourcePropertiesResponseOutput {
	return o.ApplyT(func(v EnvironmentType) EnvironmentResourcePropertiesResponse { return v.Properties }).(EnvironmentResourcePropertiesResponseOutput)
}

// The sku determines the capacity of the environment, the SLA (in queries-per-minute and total capacity), and the billing rate.
func (o EnvironmentTypeOutput) Sku() SkuResponsePtrOutput {
	return o.ApplyT(func(v EnvironmentType) *SkuResponse { return v.Sku }).(SkuResponsePtrOutput)
}

// Resource tags
func (o EnvironmentTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v EnvironmentType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o EnvironmentTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentType) string { return v.Type }).(pulumi.StringOutput)
}

// An access policy is used to grant users and applications access to the environment. Roles are assigned to service principals in Azure Active Directory. These roles define the actions the principal can perform through the Time Series Insights data plane APIs.
type EnvironmentAccessPolicyType struct {
	// Resource name
	Name       string                                 `pulumi:"name"`
	Properties AccessPolicyResourcePropertiesResponse `pulumi:"properties"`
	// Resource type
	Type string `pulumi:"type"`
}

// EnvironmentAccessPolicyTypeInput is an input type that accepts EnvironmentAccessPolicyTypeArgs and EnvironmentAccessPolicyTypeOutput values.
// You can construct a concrete instance of `EnvironmentAccessPolicyTypeInput` via:
//
//          EnvironmentAccessPolicyTypeArgs{...}
type EnvironmentAccessPolicyTypeInput interface {
	pulumi.Input

	ToEnvironmentAccessPolicyTypeOutput() EnvironmentAccessPolicyTypeOutput
	ToEnvironmentAccessPolicyTypeOutputWithContext(context.Context) EnvironmentAccessPolicyTypeOutput
}

// An access policy is used to grant users and applications access to the environment. Roles are assigned to service principals in Azure Active Directory. These roles define the actions the principal can perform through the Time Series Insights data plane APIs.
type EnvironmentAccessPolicyTypeArgs struct {
	// Resource name
	Name       pulumi.StringInput                          `pulumi:"name"`
	Properties AccessPolicyResourcePropertiesResponseInput `pulumi:"properties"`
	// Resource type
	Type pulumi.StringInput `pulumi:"type"`
}

func (EnvironmentAccessPolicyTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentAccessPolicyType)(nil)).Elem()
}

func (i EnvironmentAccessPolicyTypeArgs) ToEnvironmentAccessPolicyTypeOutput() EnvironmentAccessPolicyTypeOutput {
	return i.ToEnvironmentAccessPolicyTypeOutputWithContext(context.Background())
}

func (i EnvironmentAccessPolicyTypeArgs) ToEnvironmentAccessPolicyTypeOutputWithContext(ctx context.Context) EnvironmentAccessPolicyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentAccessPolicyTypeOutput)
}

// An access policy is used to grant users and applications access to the environment. Roles are assigned to service principals in Azure Active Directory. These roles define the actions the principal can perform through the Time Series Insights data plane APIs.
type EnvironmentAccessPolicyTypeOutput struct{ *pulumi.OutputState }

func (EnvironmentAccessPolicyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentAccessPolicyType)(nil)).Elem()
}

func (o EnvironmentAccessPolicyTypeOutput) ToEnvironmentAccessPolicyTypeOutput() EnvironmentAccessPolicyTypeOutput {
	return o
}

func (o EnvironmentAccessPolicyTypeOutput) ToEnvironmentAccessPolicyTypeOutputWithContext(ctx context.Context) EnvironmentAccessPolicyTypeOutput {
	return o
}

// Resource name
func (o EnvironmentAccessPolicyTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentAccessPolicyType) string { return v.Name }).(pulumi.StringOutput)
}

func (o EnvironmentAccessPolicyTypeOutput) Properties() AccessPolicyResourcePropertiesResponseOutput {
	return o.ApplyT(func(v EnvironmentAccessPolicyType) AccessPolicyResourcePropertiesResponse { return v.Properties }).(AccessPolicyResourcePropertiesResponseOutput)
}

// Resource type
func (o EnvironmentAccessPolicyTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentAccessPolicyType) string { return v.Type }).(pulumi.StringOutput)
}

// Properties used to create an environment.
type EnvironmentCreationProperties struct {
	// ISO8601 timespan specifying the minimum number of days the environment's events will be available for query.
	DataRetentionTime string `pulumi:"dataRetentionTime"`
	// The list of partition keys according to which the data in the environment will be ordered.
	PartitionKeyProperties []PartitionKeyProperty `pulumi:"partitionKeyProperties"`
	// The behavior the Time Series Insights service should take when the environment's capacity has been exceeded. If "PauseIngress" is specified, new events will not be read from the event source. If "PurgeOldData" is specified, new events will continue to be read and old events will be deleted from the environment. The default behavior is PurgeOldData.
	StorageLimitExceededBehavior *string `pulumi:"storageLimitExceededBehavior"`
}

// EnvironmentCreationPropertiesInput is an input type that accepts EnvironmentCreationPropertiesArgs and EnvironmentCreationPropertiesOutput values.
// You can construct a concrete instance of `EnvironmentCreationPropertiesInput` via:
//
//          EnvironmentCreationPropertiesArgs{...}
type EnvironmentCreationPropertiesInput interface {
	pulumi.Input

	ToEnvironmentCreationPropertiesOutput() EnvironmentCreationPropertiesOutput
	ToEnvironmentCreationPropertiesOutputWithContext(context.Context) EnvironmentCreationPropertiesOutput
}

// Properties used to create an environment.
type EnvironmentCreationPropertiesArgs struct {
	// ISO8601 timespan specifying the minimum number of days the environment's events will be available for query.
	DataRetentionTime pulumi.StringInput `pulumi:"dataRetentionTime"`
	// The list of partition keys according to which the data in the environment will be ordered.
	PartitionKeyProperties PartitionKeyPropertyArrayInput `pulumi:"partitionKeyProperties"`
	// The behavior the Time Series Insights service should take when the environment's capacity has been exceeded. If "PauseIngress" is specified, new events will not be read from the event source. If "PurgeOldData" is specified, new events will continue to be read and old events will be deleted from the environment. The default behavior is PurgeOldData.
	StorageLimitExceededBehavior pulumi.StringPtrInput `pulumi:"storageLimitExceededBehavior"`
}

func (EnvironmentCreationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentCreationProperties)(nil)).Elem()
}

func (i EnvironmentCreationPropertiesArgs) ToEnvironmentCreationPropertiesOutput() EnvironmentCreationPropertiesOutput {
	return i.ToEnvironmentCreationPropertiesOutputWithContext(context.Background())
}

func (i EnvironmentCreationPropertiesArgs) ToEnvironmentCreationPropertiesOutputWithContext(ctx context.Context) EnvironmentCreationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentCreationPropertiesOutput)
}

func (i EnvironmentCreationPropertiesArgs) ToEnvironmentCreationPropertiesPtrOutput() EnvironmentCreationPropertiesPtrOutput {
	return i.ToEnvironmentCreationPropertiesPtrOutputWithContext(context.Background())
}

func (i EnvironmentCreationPropertiesArgs) ToEnvironmentCreationPropertiesPtrOutputWithContext(ctx context.Context) EnvironmentCreationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentCreationPropertiesOutput).ToEnvironmentCreationPropertiesPtrOutputWithContext(ctx)
}

// EnvironmentCreationPropertiesPtrInput is an input type that accepts EnvironmentCreationPropertiesArgs, EnvironmentCreationPropertiesPtr and EnvironmentCreationPropertiesPtrOutput values.
// You can construct a concrete instance of `EnvironmentCreationPropertiesPtrInput` via:
//
//          EnvironmentCreationPropertiesArgs{...}
//
//  or:
//
//          nil
type EnvironmentCreationPropertiesPtrInput interface {
	pulumi.Input

	ToEnvironmentCreationPropertiesPtrOutput() EnvironmentCreationPropertiesPtrOutput
	ToEnvironmentCreationPropertiesPtrOutputWithContext(context.Context) EnvironmentCreationPropertiesPtrOutput
}

type environmentCreationPropertiesPtrType EnvironmentCreationPropertiesArgs

func EnvironmentCreationPropertiesPtr(v *EnvironmentCreationPropertiesArgs) EnvironmentCreationPropertiesPtrInput {
	return (*environmentCreationPropertiesPtrType)(v)
}

func (*environmentCreationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentCreationProperties)(nil)).Elem()
}

func (i *environmentCreationPropertiesPtrType) ToEnvironmentCreationPropertiesPtrOutput() EnvironmentCreationPropertiesPtrOutput {
	return i.ToEnvironmentCreationPropertiesPtrOutputWithContext(context.Background())
}

func (i *environmentCreationPropertiesPtrType) ToEnvironmentCreationPropertiesPtrOutputWithContext(ctx context.Context) EnvironmentCreationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentCreationPropertiesPtrOutput)
}

// Properties used to create an environment.
type EnvironmentCreationPropertiesOutput struct{ *pulumi.OutputState }

func (EnvironmentCreationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentCreationProperties)(nil)).Elem()
}

func (o EnvironmentCreationPropertiesOutput) ToEnvironmentCreationPropertiesOutput() EnvironmentCreationPropertiesOutput {
	return o
}

func (o EnvironmentCreationPropertiesOutput) ToEnvironmentCreationPropertiesOutputWithContext(ctx context.Context) EnvironmentCreationPropertiesOutput {
	return o
}

func (o EnvironmentCreationPropertiesOutput) ToEnvironmentCreationPropertiesPtrOutput() EnvironmentCreationPropertiesPtrOutput {
	return o.ToEnvironmentCreationPropertiesPtrOutputWithContext(context.Background())
}

func (o EnvironmentCreationPropertiesOutput) ToEnvironmentCreationPropertiesPtrOutputWithContext(ctx context.Context) EnvironmentCreationPropertiesPtrOutput {
	return o.ApplyT(func(v EnvironmentCreationProperties) *EnvironmentCreationProperties {
		return &v
	}).(EnvironmentCreationPropertiesPtrOutput)
}

// ISO8601 timespan specifying the minimum number of days the environment's events will be available for query.
func (o EnvironmentCreationPropertiesOutput) DataRetentionTime() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentCreationProperties) string { return v.DataRetentionTime }).(pulumi.StringOutput)
}

// The list of partition keys according to which the data in the environment will be ordered.
func (o EnvironmentCreationPropertiesOutput) PartitionKeyProperties() PartitionKeyPropertyArrayOutput {
	return o.ApplyT(func(v EnvironmentCreationProperties) []PartitionKeyProperty { return v.PartitionKeyProperties }).(PartitionKeyPropertyArrayOutput)
}

// The behavior the Time Series Insights service should take when the environment's capacity has been exceeded. If "PauseIngress" is specified, new events will not be read from the event source. If "PurgeOldData" is specified, new events will continue to be read and old events will be deleted from the environment. The default behavior is PurgeOldData.
func (o EnvironmentCreationPropertiesOutput) StorageLimitExceededBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentCreationProperties) *string { return v.StorageLimitExceededBehavior }).(pulumi.StringPtrOutput)
}

type EnvironmentCreationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (EnvironmentCreationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentCreationProperties)(nil)).Elem()
}

func (o EnvironmentCreationPropertiesPtrOutput) ToEnvironmentCreationPropertiesPtrOutput() EnvironmentCreationPropertiesPtrOutput {
	return o
}

func (o EnvironmentCreationPropertiesPtrOutput) ToEnvironmentCreationPropertiesPtrOutputWithContext(ctx context.Context) EnvironmentCreationPropertiesPtrOutput {
	return o
}

func (o EnvironmentCreationPropertiesPtrOutput) Elem() EnvironmentCreationPropertiesOutput {
	return o.ApplyT(func(v *EnvironmentCreationProperties) EnvironmentCreationProperties { return *v }).(EnvironmentCreationPropertiesOutput)
}

// ISO8601 timespan specifying the minimum number of days the environment's events will be available for query.
func (o EnvironmentCreationPropertiesPtrOutput) DataRetentionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentCreationProperties) *string {
		if v == nil {
			return nil
		}
		return &v.DataRetentionTime
	}).(pulumi.StringPtrOutput)
}

// The list of partition keys according to which the data in the environment will be ordered.
func (o EnvironmentCreationPropertiesPtrOutput) PartitionKeyProperties() PartitionKeyPropertyArrayOutput {
	return o.ApplyT(func(v *EnvironmentCreationProperties) []PartitionKeyProperty {
		if v == nil {
			return nil
		}
		return v.PartitionKeyProperties
	}).(PartitionKeyPropertyArrayOutput)
}

// The behavior the Time Series Insights service should take when the environment's capacity has been exceeded. If "PauseIngress" is specified, new events will not be read from the event source. If "PurgeOldData" is specified, new events will continue to be read and old events will be deleted from the environment. The default behavior is PurgeOldData.
func (o EnvironmentCreationPropertiesPtrOutput) StorageLimitExceededBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentCreationProperties) *string {
		if v == nil {
			return nil
		}
		return v.StorageLimitExceededBehavior
	}).(pulumi.StringPtrOutput)
}

// An environment receives data from one or more event sources. Each event source has associated connection info that allows the Time Series Insights ingress pipeline to connect to and pull data from the event source
type EnvironmentEventSourceType struct {
	// The kind of the event source.
	Kind string `pulumi:"kind"`
	// Resource location
	Location string `pulumi:"location"`
	// Resource name
	Name string `pulumi:"name"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type string `pulumi:"type"`
}

// EnvironmentEventSourceTypeInput is an input type that accepts EnvironmentEventSourceTypeArgs and EnvironmentEventSourceTypeOutput values.
// You can construct a concrete instance of `EnvironmentEventSourceTypeInput` via:
//
//          EnvironmentEventSourceTypeArgs{...}
type EnvironmentEventSourceTypeInput interface {
	pulumi.Input

	ToEnvironmentEventSourceTypeOutput() EnvironmentEventSourceTypeOutput
	ToEnvironmentEventSourceTypeOutputWithContext(context.Context) EnvironmentEventSourceTypeOutput
}

// An environment receives data from one or more event sources. Each event source has associated connection info that allows the Time Series Insights ingress pipeline to connect to and pull data from the event source
type EnvironmentEventSourceTypeArgs struct {
	// The kind of the event source.
	Kind pulumi.StringInput `pulumi:"kind"`
	// Resource location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource name
	Name pulumi.StringInput `pulumi:"name"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringInput `pulumi:"type"`
}

func (EnvironmentEventSourceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentEventSourceType)(nil)).Elem()
}

func (i EnvironmentEventSourceTypeArgs) ToEnvironmentEventSourceTypeOutput() EnvironmentEventSourceTypeOutput {
	return i.ToEnvironmentEventSourceTypeOutputWithContext(context.Background())
}

func (i EnvironmentEventSourceTypeArgs) ToEnvironmentEventSourceTypeOutputWithContext(ctx context.Context) EnvironmentEventSourceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentEventSourceTypeOutput)
}

// An environment receives data from one or more event sources. Each event source has associated connection info that allows the Time Series Insights ingress pipeline to connect to and pull data from the event source
type EnvironmentEventSourceTypeOutput struct{ *pulumi.OutputState }

func (EnvironmentEventSourceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentEventSourceType)(nil)).Elem()
}

func (o EnvironmentEventSourceTypeOutput) ToEnvironmentEventSourceTypeOutput() EnvironmentEventSourceTypeOutput {
	return o
}

func (o EnvironmentEventSourceTypeOutput) ToEnvironmentEventSourceTypeOutputWithContext(ctx context.Context) EnvironmentEventSourceTypeOutput {
	return o
}

// The kind of the event source.
func (o EnvironmentEventSourceTypeOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentEventSourceType) string { return v.Kind }).(pulumi.StringOutput)
}

// Resource location
func (o EnvironmentEventSourceTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentEventSourceType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource name
func (o EnvironmentEventSourceTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentEventSourceType) string { return v.Name }).(pulumi.StringOutput)
}

// Resource tags
func (o EnvironmentEventSourceTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v EnvironmentEventSourceType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o EnvironmentEventSourceTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentEventSourceType) string { return v.Type }).(pulumi.StringOutput)
}

// A reference data set provides metadata about the events in an environment. Metadata in the reference data set will be joined with events as they are read from event sources. The metadata that makes up the reference data set is uploaded or modified through the Time Series Insights data plane APIs.
type EnvironmentReferenceDataSetType struct {
	// Resource location
	Location string `pulumi:"location"`
	// Resource name
	Name string `pulumi:"name"`
	// Properties of the reference data set.
	Properties ReferenceDataSetResourcePropertiesResponse `pulumi:"properties"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type string `pulumi:"type"`
}

// EnvironmentReferenceDataSetTypeInput is an input type that accepts EnvironmentReferenceDataSetTypeArgs and EnvironmentReferenceDataSetTypeOutput values.
// You can construct a concrete instance of `EnvironmentReferenceDataSetTypeInput` via:
//
//          EnvironmentReferenceDataSetTypeArgs{...}
type EnvironmentReferenceDataSetTypeInput interface {
	pulumi.Input

	ToEnvironmentReferenceDataSetTypeOutput() EnvironmentReferenceDataSetTypeOutput
	ToEnvironmentReferenceDataSetTypeOutputWithContext(context.Context) EnvironmentReferenceDataSetTypeOutput
}

// A reference data set provides metadata about the events in an environment. Metadata in the reference data set will be joined with events as they are read from event sources. The metadata that makes up the reference data set is uploaded or modified through the Time Series Insights data plane APIs.
type EnvironmentReferenceDataSetTypeArgs struct {
	// Resource location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource name
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of the reference data set.
	Properties ReferenceDataSetResourcePropertiesResponseInput `pulumi:"properties"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringInput `pulumi:"type"`
}

func (EnvironmentReferenceDataSetTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentReferenceDataSetType)(nil)).Elem()
}

func (i EnvironmentReferenceDataSetTypeArgs) ToEnvironmentReferenceDataSetTypeOutput() EnvironmentReferenceDataSetTypeOutput {
	return i.ToEnvironmentReferenceDataSetTypeOutputWithContext(context.Background())
}

func (i EnvironmentReferenceDataSetTypeArgs) ToEnvironmentReferenceDataSetTypeOutputWithContext(ctx context.Context) EnvironmentReferenceDataSetTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentReferenceDataSetTypeOutput)
}

// A reference data set provides metadata about the events in an environment. Metadata in the reference data set will be joined with events as they are read from event sources. The metadata that makes up the reference data set is uploaded or modified through the Time Series Insights data plane APIs.
type EnvironmentReferenceDataSetTypeOutput struct{ *pulumi.OutputState }

func (EnvironmentReferenceDataSetTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentReferenceDataSetType)(nil)).Elem()
}

func (o EnvironmentReferenceDataSetTypeOutput) ToEnvironmentReferenceDataSetTypeOutput() EnvironmentReferenceDataSetTypeOutput {
	return o
}

func (o EnvironmentReferenceDataSetTypeOutput) ToEnvironmentReferenceDataSetTypeOutputWithContext(ctx context.Context) EnvironmentReferenceDataSetTypeOutput {
	return o
}

// Resource location
func (o EnvironmentReferenceDataSetTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentReferenceDataSetType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource name
func (o EnvironmentReferenceDataSetTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentReferenceDataSetType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the reference data set.
func (o EnvironmentReferenceDataSetTypeOutput) Properties() ReferenceDataSetResourcePropertiesResponseOutput {
	return o.ApplyT(func(v EnvironmentReferenceDataSetType) ReferenceDataSetResourcePropertiesResponse {
		return v.Properties
	}).(ReferenceDataSetResourcePropertiesResponseOutput)
}

// Resource tags
func (o EnvironmentReferenceDataSetTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v EnvironmentReferenceDataSetType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o EnvironmentReferenceDataSetTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentReferenceDataSetType) string { return v.Type }).(pulumi.StringOutput)
}

// Properties of the environment.
type EnvironmentResourcePropertiesResponse struct {
	// The time the resource was created.
	CreationTime string `pulumi:"creationTime"`
	// The fully qualified domain name used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
	DataAccessFqdn string `pulumi:"dataAccessFqdn"`
	// An id used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
	DataAccessId string `pulumi:"dataAccessId"`
	// ISO8601 timespan specifying the minimum number of days the environment's events will be available for query.
	DataRetentionTime string `pulumi:"dataRetentionTime"`
	// The list of partition keys according to which the data in the environment will be ordered.
	PartitionKeyProperties []PartitionKeyPropertyResponse `pulumi:"partitionKeyProperties"`
	// Provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// An object that represents the status of the environment, and its internal state in the Time Series Insights service.
	Status *EnvironmentStatusResponse `pulumi:"status"`
	// The behavior the Time Series Insights service should take when the environment's capacity has been exceeded. If "PauseIngress" is specified, new events will not be read from the event source. If "PurgeOldData" is specified, new events will continue to be read and old events will be deleted from the environment. The default behavior is PurgeOldData.
	StorageLimitExceededBehavior *string `pulumi:"storageLimitExceededBehavior"`
}

// EnvironmentResourcePropertiesResponseInput is an input type that accepts EnvironmentResourcePropertiesResponseArgs and EnvironmentResourcePropertiesResponseOutput values.
// You can construct a concrete instance of `EnvironmentResourcePropertiesResponseInput` via:
//
//          EnvironmentResourcePropertiesResponseArgs{...}
type EnvironmentResourcePropertiesResponseInput interface {
	pulumi.Input

	ToEnvironmentResourcePropertiesResponseOutput() EnvironmentResourcePropertiesResponseOutput
	ToEnvironmentResourcePropertiesResponseOutputWithContext(context.Context) EnvironmentResourcePropertiesResponseOutput
}

// Properties of the environment.
type EnvironmentResourcePropertiesResponseArgs struct {
	// The time the resource was created.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The fully qualified domain name used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
	DataAccessFqdn pulumi.StringInput `pulumi:"dataAccessFqdn"`
	// An id used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
	DataAccessId pulumi.StringInput `pulumi:"dataAccessId"`
	// ISO8601 timespan specifying the minimum number of days the environment's events will be available for query.
	DataRetentionTime pulumi.StringInput `pulumi:"dataRetentionTime"`
	// The list of partition keys according to which the data in the environment will be ordered.
	PartitionKeyProperties PartitionKeyPropertyResponseArrayInput `pulumi:"partitionKeyProperties"`
	// Provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// An object that represents the status of the environment, and its internal state in the Time Series Insights service.
	Status EnvironmentStatusResponsePtrInput `pulumi:"status"`
	// The behavior the Time Series Insights service should take when the environment's capacity has been exceeded. If "PauseIngress" is specified, new events will not be read from the event source. If "PurgeOldData" is specified, new events will continue to be read and old events will be deleted from the environment. The default behavior is PurgeOldData.
	StorageLimitExceededBehavior pulumi.StringPtrInput `pulumi:"storageLimitExceededBehavior"`
}

func (EnvironmentResourcePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentResourcePropertiesResponse)(nil)).Elem()
}

func (i EnvironmentResourcePropertiesResponseArgs) ToEnvironmentResourcePropertiesResponseOutput() EnvironmentResourcePropertiesResponseOutput {
	return i.ToEnvironmentResourcePropertiesResponseOutputWithContext(context.Background())
}

func (i EnvironmentResourcePropertiesResponseArgs) ToEnvironmentResourcePropertiesResponseOutputWithContext(ctx context.Context) EnvironmentResourcePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentResourcePropertiesResponseOutput)
}

func (i EnvironmentResourcePropertiesResponseArgs) ToEnvironmentResourcePropertiesResponsePtrOutput() EnvironmentResourcePropertiesResponsePtrOutput {
	return i.ToEnvironmentResourcePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i EnvironmentResourcePropertiesResponseArgs) ToEnvironmentResourcePropertiesResponsePtrOutputWithContext(ctx context.Context) EnvironmentResourcePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentResourcePropertiesResponseOutput).ToEnvironmentResourcePropertiesResponsePtrOutputWithContext(ctx)
}

// EnvironmentResourcePropertiesResponsePtrInput is an input type that accepts EnvironmentResourcePropertiesResponseArgs, EnvironmentResourcePropertiesResponsePtr and EnvironmentResourcePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `EnvironmentResourcePropertiesResponsePtrInput` via:
//
//          EnvironmentResourcePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type EnvironmentResourcePropertiesResponsePtrInput interface {
	pulumi.Input

	ToEnvironmentResourcePropertiesResponsePtrOutput() EnvironmentResourcePropertiesResponsePtrOutput
	ToEnvironmentResourcePropertiesResponsePtrOutputWithContext(context.Context) EnvironmentResourcePropertiesResponsePtrOutput
}

type environmentResourcePropertiesResponsePtrType EnvironmentResourcePropertiesResponseArgs

func EnvironmentResourcePropertiesResponsePtr(v *EnvironmentResourcePropertiesResponseArgs) EnvironmentResourcePropertiesResponsePtrInput {
	return (*environmentResourcePropertiesResponsePtrType)(v)
}

func (*environmentResourcePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentResourcePropertiesResponse)(nil)).Elem()
}

func (i *environmentResourcePropertiesResponsePtrType) ToEnvironmentResourcePropertiesResponsePtrOutput() EnvironmentResourcePropertiesResponsePtrOutput {
	return i.ToEnvironmentResourcePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *environmentResourcePropertiesResponsePtrType) ToEnvironmentResourcePropertiesResponsePtrOutputWithContext(ctx context.Context) EnvironmentResourcePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentResourcePropertiesResponsePtrOutput)
}

// Properties of the environment.
type EnvironmentResourcePropertiesResponseOutput struct{ *pulumi.OutputState }

func (EnvironmentResourcePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentResourcePropertiesResponse)(nil)).Elem()
}

func (o EnvironmentResourcePropertiesResponseOutput) ToEnvironmentResourcePropertiesResponseOutput() EnvironmentResourcePropertiesResponseOutput {
	return o
}

func (o EnvironmentResourcePropertiesResponseOutput) ToEnvironmentResourcePropertiesResponseOutputWithContext(ctx context.Context) EnvironmentResourcePropertiesResponseOutput {
	return o
}

func (o EnvironmentResourcePropertiesResponseOutput) ToEnvironmentResourcePropertiesResponsePtrOutput() EnvironmentResourcePropertiesResponsePtrOutput {
	return o.ToEnvironmentResourcePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o EnvironmentResourcePropertiesResponseOutput) ToEnvironmentResourcePropertiesResponsePtrOutputWithContext(ctx context.Context) EnvironmentResourcePropertiesResponsePtrOutput {
	return o.ApplyT(func(v EnvironmentResourcePropertiesResponse) *EnvironmentResourcePropertiesResponse {
		return &v
	}).(EnvironmentResourcePropertiesResponsePtrOutput)
}

// The time the resource was created.
func (o EnvironmentResourcePropertiesResponseOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentResourcePropertiesResponse) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The fully qualified domain name used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
func (o EnvironmentResourcePropertiesResponseOutput) DataAccessFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentResourcePropertiesResponse) string { return v.DataAccessFqdn }).(pulumi.StringOutput)
}

// An id used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
func (o EnvironmentResourcePropertiesResponseOutput) DataAccessId() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentResourcePropertiesResponse) string { return v.DataAccessId }).(pulumi.StringOutput)
}

// ISO8601 timespan specifying the minimum number of days the environment's events will be available for query.
func (o EnvironmentResourcePropertiesResponseOutput) DataRetentionTime() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentResourcePropertiesResponse) string { return v.DataRetentionTime }).(pulumi.StringOutput)
}

// The list of partition keys according to which the data in the environment will be ordered.
func (o EnvironmentResourcePropertiesResponseOutput) PartitionKeyProperties() PartitionKeyPropertyResponseArrayOutput {
	return o.ApplyT(func(v EnvironmentResourcePropertiesResponse) []PartitionKeyPropertyResponse {
		return v.PartitionKeyProperties
	}).(PartitionKeyPropertyResponseArrayOutput)
}

// Provisioning state of the resource.
func (o EnvironmentResourcePropertiesResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentResourcePropertiesResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// An object that represents the status of the environment, and its internal state in the Time Series Insights service.
func (o EnvironmentResourcePropertiesResponseOutput) Status() EnvironmentStatusResponsePtrOutput {
	return o.ApplyT(func(v EnvironmentResourcePropertiesResponse) *EnvironmentStatusResponse { return v.Status }).(EnvironmentStatusResponsePtrOutput)
}

// The behavior the Time Series Insights service should take when the environment's capacity has been exceeded. If "PauseIngress" is specified, new events will not be read from the event source. If "PurgeOldData" is specified, new events will continue to be read and old events will be deleted from the environment. The default behavior is PurgeOldData.
func (o EnvironmentResourcePropertiesResponseOutput) StorageLimitExceededBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentResourcePropertiesResponse) *string { return v.StorageLimitExceededBehavior }).(pulumi.StringPtrOutput)
}

type EnvironmentResourcePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (EnvironmentResourcePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentResourcePropertiesResponse)(nil)).Elem()
}

func (o EnvironmentResourcePropertiesResponsePtrOutput) ToEnvironmentResourcePropertiesResponsePtrOutput() EnvironmentResourcePropertiesResponsePtrOutput {
	return o
}

func (o EnvironmentResourcePropertiesResponsePtrOutput) ToEnvironmentResourcePropertiesResponsePtrOutputWithContext(ctx context.Context) EnvironmentResourcePropertiesResponsePtrOutput {
	return o
}

func (o EnvironmentResourcePropertiesResponsePtrOutput) Elem() EnvironmentResourcePropertiesResponseOutput {
	return o.ApplyT(func(v *EnvironmentResourcePropertiesResponse) EnvironmentResourcePropertiesResponse { return *v }).(EnvironmentResourcePropertiesResponseOutput)
}

// The time the resource was created.
func (o EnvironmentResourcePropertiesResponsePtrOutput) CreationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentResourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreationTime
	}).(pulumi.StringPtrOutput)
}

// The fully qualified domain name used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
func (o EnvironmentResourcePropertiesResponsePtrOutput) DataAccessFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentResourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DataAccessFqdn
	}).(pulumi.StringPtrOutput)
}

// An id used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
func (o EnvironmentResourcePropertiesResponsePtrOutput) DataAccessId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentResourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DataAccessId
	}).(pulumi.StringPtrOutput)
}

// ISO8601 timespan specifying the minimum number of days the environment's events will be available for query.
func (o EnvironmentResourcePropertiesResponsePtrOutput) DataRetentionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentResourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DataRetentionTime
	}).(pulumi.StringPtrOutput)
}

// The list of partition keys according to which the data in the environment will be ordered.
func (o EnvironmentResourcePropertiesResponsePtrOutput) PartitionKeyProperties() PartitionKeyPropertyResponseArrayOutput {
	return o.ApplyT(func(v *EnvironmentResourcePropertiesResponse) []PartitionKeyPropertyResponse {
		if v == nil {
			return nil
		}
		return v.PartitionKeyProperties
	}).(PartitionKeyPropertyResponseArrayOutput)
}

// Provisioning state of the resource.
func (o EnvironmentResourcePropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentResourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// An object that represents the status of the environment, and its internal state in the Time Series Insights service.
func (o EnvironmentResourcePropertiesResponsePtrOutput) Status() EnvironmentStatusResponsePtrOutput {
	return o.ApplyT(func(v *EnvironmentResourcePropertiesResponse) *EnvironmentStatusResponse {
		if v == nil {
			return nil
		}
		return v.Status
	}).(EnvironmentStatusResponsePtrOutput)
}

// The behavior the Time Series Insights service should take when the environment's capacity has been exceeded. If "PauseIngress" is specified, new events will not be read from the event source. If "PurgeOldData" is specified, new events will continue to be read and old events will be deleted from the environment. The default behavior is PurgeOldData.
func (o EnvironmentResourcePropertiesResponsePtrOutput) StorageLimitExceededBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentResourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.StorageLimitExceededBehavior
	}).(pulumi.StringPtrOutput)
}

// An object that contains the details about an environment's state.
type EnvironmentStateDetailsResponse struct {
	// Contains the code that represents the reason of an environment being in a particular state. Can be used to programmatically handle specific cases.
	Code *string `pulumi:"code"`
	// A message that describes the state in detail.
	Message *string `pulumi:"message"`
}

// EnvironmentStateDetailsResponseInput is an input type that accepts EnvironmentStateDetailsResponseArgs and EnvironmentStateDetailsResponseOutput values.
// You can construct a concrete instance of `EnvironmentStateDetailsResponseInput` via:
//
//          EnvironmentStateDetailsResponseArgs{...}
type EnvironmentStateDetailsResponseInput interface {
	pulumi.Input

	ToEnvironmentStateDetailsResponseOutput() EnvironmentStateDetailsResponseOutput
	ToEnvironmentStateDetailsResponseOutputWithContext(context.Context) EnvironmentStateDetailsResponseOutput
}

// An object that contains the details about an environment's state.
type EnvironmentStateDetailsResponseArgs struct {
	// Contains the code that represents the reason of an environment being in a particular state. Can be used to programmatically handle specific cases.
	Code pulumi.StringPtrInput `pulumi:"code"`
	// A message that describes the state in detail.
	Message pulumi.StringPtrInput `pulumi:"message"`
}

func (EnvironmentStateDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentStateDetailsResponse)(nil)).Elem()
}

func (i EnvironmentStateDetailsResponseArgs) ToEnvironmentStateDetailsResponseOutput() EnvironmentStateDetailsResponseOutput {
	return i.ToEnvironmentStateDetailsResponseOutputWithContext(context.Background())
}

func (i EnvironmentStateDetailsResponseArgs) ToEnvironmentStateDetailsResponseOutputWithContext(ctx context.Context) EnvironmentStateDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentStateDetailsResponseOutput)
}

func (i EnvironmentStateDetailsResponseArgs) ToEnvironmentStateDetailsResponsePtrOutput() EnvironmentStateDetailsResponsePtrOutput {
	return i.ToEnvironmentStateDetailsResponsePtrOutputWithContext(context.Background())
}

func (i EnvironmentStateDetailsResponseArgs) ToEnvironmentStateDetailsResponsePtrOutputWithContext(ctx context.Context) EnvironmentStateDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentStateDetailsResponseOutput).ToEnvironmentStateDetailsResponsePtrOutputWithContext(ctx)
}

// EnvironmentStateDetailsResponsePtrInput is an input type that accepts EnvironmentStateDetailsResponseArgs, EnvironmentStateDetailsResponsePtr and EnvironmentStateDetailsResponsePtrOutput values.
// You can construct a concrete instance of `EnvironmentStateDetailsResponsePtrInput` via:
//
//          EnvironmentStateDetailsResponseArgs{...}
//
//  or:
//
//          nil
type EnvironmentStateDetailsResponsePtrInput interface {
	pulumi.Input

	ToEnvironmentStateDetailsResponsePtrOutput() EnvironmentStateDetailsResponsePtrOutput
	ToEnvironmentStateDetailsResponsePtrOutputWithContext(context.Context) EnvironmentStateDetailsResponsePtrOutput
}

type environmentStateDetailsResponsePtrType EnvironmentStateDetailsResponseArgs

func EnvironmentStateDetailsResponsePtr(v *EnvironmentStateDetailsResponseArgs) EnvironmentStateDetailsResponsePtrInput {
	return (*environmentStateDetailsResponsePtrType)(v)
}

func (*environmentStateDetailsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentStateDetailsResponse)(nil)).Elem()
}

func (i *environmentStateDetailsResponsePtrType) ToEnvironmentStateDetailsResponsePtrOutput() EnvironmentStateDetailsResponsePtrOutput {
	return i.ToEnvironmentStateDetailsResponsePtrOutputWithContext(context.Background())
}

func (i *environmentStateDetailsResponsePtrType) ToEnvironmentStateDetailsResponsePtrOutputWithContext(ctx context.Context) EnvironmentStateDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentStateDetailsResponsePtrOutput)
}

// An object that contains the details about an environment's state.
type EnvironmentStateDetailsResponseOutput struct{ *pulumi.OutputState }

func (EnvironmentStateDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentStateDetailsResponse)(nil)).Elem()
}

func (o EnvironmentStateDetailsResponseOutput) ToEnvironmentStateDetailsResponseOutput() EnvironmentStateDetailsResponseOutput {
	return o
}

func (o EnvironmentStateDetailsResponseOutput) ToEnvironmentStateDetailsResponseOutputWithContext(ctx context.Context) EnvironmentStateDetailsResponseOutput {
	return o
}

func (o EnvironmentStateDetailsResponseOutput) ToEnvironmentStateDetailsResponsePtrOutput() EnvironmentStateDetailsResponsePtrOutput {
	return o.ToEnvironmentStateDetailsResponsePtrOutputWithContext(context.Background())
}

func (o EnvironmentStateDetailsResponseOutput) ToEnvironmentStateDetailsResponsePtrOutputWithContext(ctx context.Context) EnvironmentStateDetailsResponsePtrOutput {
	return o.ApplyT(func(v EnvironmentStateDetailsResponse) *EnvironmentStateDetailsResponse {
		return &v
	}).(EnvironmentStateDetailsResponsePtrOutput)
}

// Contains the code that represents the reason of an environment being in a particular state. Can be used to programmatically handle specific cases.
func (o EnvironmentStateDetailsResponseOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentStateDetailsResponse) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// A message that describes the state in detail.
func (o EnvironmentStateDetailsResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentStateDetailsResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

type EnvironmentStateDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (EnvironmentStateDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentStateDetailsResponse)(nil)).Elem()
}

func (o EnvironmentStateDetailsResponsePtrOutput) ToEnvironmentStateDetailsResponsePtrOutput() EnvironmentStateDetailsResponsePtrOutput {
	return o
}

func (o EnvironmentStateDetailsResponsePtrOutput) ToEnvironmentStateDetailsResponsePtrOutputWithContext(ctx context.Context) EnvironmentStateDetailsResponsePtrOutput {
	return o
}

func (o EnvironmentStateDetailsResponsePtrOutput) Elem() EnvironmentStateDetailsResponseOutput {
	return o.ApplyT(func(v *EnvironmentStateDetailsResponse) EnvironmentStateDetailsResponse { return *v }).(EnvironmentStateDetailsResponseOutput)
}

// Contains the code that represents the reason of an environment being in a particular state. Can be used to programmatically handle specific cases.
func (o EnvironmentStateDetailsResponsePtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentStateDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.StringPtrOutput)
}

// A message that describes the state in detail.
func (o EnvironmentStateDetailsResponsePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentStateDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// An object that represents the status of the environment, and its internal state in the Time Series Insights service.
type EnvironmentStatusResponse struct {
	// An object that represents the status of ingress on an environment.
	Ingress *IngressEnvironmentStatusResponse `pulumi:"ingress"`
}

// EnvironmentStatusResponseInput is an input type that accepts EnvironmentStatusResponseArgs and EnvironmentStatusResponseOutput values.
// You can construct a concrete instance of `EnvironmentStatusResponseInput` via:
//
//          EnvironmentStatusResponseArgs{...}
type EnvironmentStatusResponseInput interface {
	pulumi.Input

	ToEnvironmentStatusResponseOutput() EnvironmentStatusResponseOutput
	ToEnvironmentStatusResponseOutputWithContext(context.Context) EnvironmentStatusResponseOutput
}

// An object that represents the status of the environment, and its internal state in the Time Series Insights service.
type EnvironmentStatusResponseArgs struct {
	// An object that represents the status of ingress on an environment.
	Ingress IngressEnvironmentStatusResponsePtrInput `pulumi:"ingress"`
}

func (EnvironmentStatusResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentStatusResponse)(nil)).Elem()
}

func (i EnvironmentStatusResponseArgs) ToEnvironmentStatusResponseOutput() EnvironmentStatusResponseOutput {
	return i.ToEnvironmentStatusResponseOutputWithContext(context.Background())
}

func (i EnvironmentStatusResponseArgs) ToEnvironmentStatusResponseOutputWithContext(ctx context.Context) EnvironmentStatusResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentStatusResponseOutput)
}

func (i EnvironmentStatusResponseArgs) ToEnvironmentStatusResponsePtrOutput() EnvironmentStatusResponsePtrOutput {
	return i.ToEnvironmentStatusResponsePtrOutputWithContext(context.Background())
}

func (i EnvironmentStatusResponseArgs) ToEnvironmentStatusResponsePtrOutputWithContext(ctx context.Context) EnvironmentStatusResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentStatusResponseOutput).ToEnvironmentStatusResponsePtrOutputWithContext(ctx)
}

// EnvironmentStatusResponsePtrInput is an input type that accepts EnvironmentStatusResponseArgs, EnvironmentStatusResponsePtr and EnvironmentStatusResponsePtrOutput values.
// You can construct a concrete instance of `EnvironmentStatusResponsePtrInput` via:
//
//          EnvironmentStatusResponseArgs{...}
//
//  or:
//
//          nil
type EnvironmentStatusResponsePtrInput interface {
	pulumi.Input

	ToEnvironmentStatusResponsePtrOutput() EnvironmentStatusResponsePtrOutput
	ToEnvironmentStatusResponsePtrOutputWithContext(context.Context) EnvironmentStatusResponsePtrOutput
}

type environmentStatusResponsePtrType EnvironmentStatusResponseArgs

func EnvironmentStatusResponsePtr(v *EnvironmentStatusResponseArgs) EnvironmentStatusResponsePtrInput {
	return (*environmentStatusResponsePtrType)(v)
}

func (*environmentStatusResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentStatusResponse)(nil)).Elem()
}

func (i *environmentStatusResponsePtrType) ToEnvironmentStatusResponsePtrOutput() EnvironmentStatusResponsePtrOutput {
	return i.ToEnvironmentStatusResponsePtrOutputWithContext(context.Background())
}

func (i *environmentStatusResponsePtrType) ToEnvironmentStatusResponsePtrOutputWithContext(ctx context.Context) EnvironmentStatusResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentStatusResponsePtrOutput)
}

// An object that represents the status of the environment, and its internal state in the Time Series Insights service.
type EnvironmentStatusResponseOutput struct{ *pulumi.OutputState }

func (EnvironmentStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentStatusResponse)(nil)).Elem()
}

func (o EnvironmentStatusResponseOutput) ToEnvironmentStatusResponseOutput() EnvironmentStatusResponseOutput {
	return o
}

func (o EnvironmentStatusResponseOutput) ToEnvironmentStatusResponseOutputWithContext(ctx context.Context) EnvironmentStatusResponseOutput {
	return o
}

func (o EnvironmentStatusResponseOutput) ToEnvironmentStatusResponsePtrOutput() EnvironmentStatusResponsePtrOutput {
	return o.ToEnvironmentStatusResponsePtrOutputWithContext(context.Background())
}

func (o EnvironmentStatusResponseOutput) ToEnvironmentStatusResponsePtrOutputWithContext(ctx context.Context) EnvironmentStatusResponsePtrOutput {
	return o.ApplyT(func(v EnvironmentStatusResponse) *EnvironmentStatusResponse {
		return &v
	}).(EnvironmentStatusResponsePtrOutput)
}

// An object that represents the status of ingress on an environment.
func (o EnvironmentStatusResponseOutput) Ingress() IngressEnvironmentStatusResponsePtrOutput {
	return o.ApplyT(func(v EnvironmentStatusResponse) *IngressEnvironmentStatusResponse { return v.Ingress }).(IngressEnvironmentStatusResponsePtrOutput)
}

type EnvironmentStatusResponsePtrOutput struct{ *pulumi.OutputState }

func (EnvironmentStatusResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentStatusResponse)(nil)).Elem()
}

func (o EnvironmentStatusResponsePtrOutput) ToEnvironmentStatusResponsePtrOutput() EnvironmentStatusResponsePtrOutput {
	return o
}

func (o EnvironmentStatusResponsePtrOutput) ToEnvironmentStatusResponsePtrOutputWithContext(ctx context.Context) EnvironmentStatusResponsePtrOutput {
	return o
}

func (o EnvironmentStatusResponsePtrOutput) Elem() EnvironmentStatusResponseOutput {
	return o.ApplyT(func(v *EnvironmentStatusResponse) EnvironmentStatusResponse { return *v }).(EnvironmentStatusResponseOutput)
}

// An object that represents the status of ingress on an environment.
func (o EnvironmentStatusResponsePtrOutput) Ingress() IngressEnvironmentStatusResponsePtrOutput {
	return o.ApplyT(func(v *EnvironmentStatusResponse) *IngressEnvironmentStatusResponse {
		if v == nil {
			return nil
		}
		return v.Ingress
	}).(IngressEnvironmentStatusResponsePtrOutput)
}

// An object that represents the status of ingress on an environment.
type IngressEnvironmentStatusResponse struct {
	// This string represents the state of ingress operations on an environment. It can be "Disabled", "Ready", "Running", "Paused" or "Unknown"
	State *string `pulumi:"state"`
	// An object that contains the details about an environment's state.
	StateDetails *EnvironmentStateDetailsResponse `pulumi:"stateDetails"`
}

// IngressEnvironmentStatusResponseInput is an input type that accepts IngressEnvironmentStatusResponseArgs and IngressEnvironmentStatusResponseOutput values.
// You can construct a concrete instance of `IngressEnvironmentStatusResponseInput` via:
//
//          IngressEnvironmentStatusResponseArgs{...}
type IngressEnvironmentStatusResponseInput interface {
	pulumi.Input

	ToIngressEnvironmentStatusResponseOutput() IngressEnvironmentStatusResponseOutput
	ToIngressEnvironmentStatusResponseOutputWithContext(context.Context) IngressEnvironmentStatusResponseOutput
}

// An object that represents the status of ingress on an environment.
type IngressEnvironmentStatusResponseArgs struct {
	// This string represents the state of ingress operations on an environment. It can be "Disabled", "Ready", "Running", "Paused" or "Unknown"
	State pulumi.StringPtrInput `pulumi:"state"`
	// An object that contains the details about an environment's state.
	StateDetails EnvironmentStateDetailsResponsePtrInput `pulumi:"stateDetails"`
}

func (IngressEnvironmentStatusResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IngressEnvironmentStatusResponse)(nil)).Elem()
}

func (i IngressEnvironmentStatusResponseArgs) ToIngressEnvironmentStatusResponseOutput() IngressEnvironmentStatusResponseOutput {
	return i.ToIngressEnvironmentStatusResponseOutputWithContext(context.Background())
}

func (i IngressEnvironmentStatusResponseArgs) ToIngressEnvironmentStatusResponseOutputWithContext(ctx context.Context) IngressEnvironmentStatusResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngressEnvironmentStatusResponseOutput)
}

func (i IngressEnvironmentStatusResponseArgs) ToIngressEnvironmentStatusResponsePtrOutput() IngressEnvironmentStatusResponsePtrOutput {
	return i.ToIngressEnvironmentStatusResponsePtrOutputWithContext(context.Background())
}

func (i IngressEnvironmentStatusResponseArgs) ToIngressEnvironmentStatusResponsePtrOutputWithContext(ctx context.Context) IngressEnvironmentStatusResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngressEnvironmentStatusResponseOutput).ToIngressEnvironmentStatusResponsePtrOutputWithContext(ctx)
}

// IngressEnvironmentStatusResponsePtrInput is an input type that accepts IngressEnvironmentStatusResponseArgs, IngressEnvironmentStatusResponsePtr and IngressEnvironmentStatusResponsePtrOutput values.
// You can construct a concrete instance of `IngressEnvironmentStatusResponsePtrInput` via:
//
//          IngressEnvironmentStatusResponseArgs{...}
//
//  or:
//
//          nil
type IngressEnvironmentStatusResponsePtrInput interface {
	pulumi.Input

	ToIngressEnvironmentStatusResponsePtrOutput() IngressEnvironmentStatusResponsePtrOutput
	ToIngressEnvironmentStatusResponsePtrOutputWithContext(context.Context) IngressEnvironmentStatusResponsePtrOutput
}

type ingressEnvironmentStatusResponsePtrType IngressEnvironmentStatusResponseArgs

func IngressEnvironmentStatusResponsePtr(v *IngressEnvironmentStatusResponseArgs) IngressEnvironmentStatusResponsePtrInput {
	return (*ingressEnvironmentStatusResponsePtrType)(v)
}

func (*ingressEnvironmentStatusResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IngressEnvironmentStatusResponse)(nil)).Elem()
}

func (i *ingressEnvironmentStatusResponsePtrType) ToIngressEnvironmentStatusResponsePtrOutput() IngressEnvironmentStatusResponsePtrOutput {
	return i.ToIngressEnvironmentStatusResponsePtrOutputWithContext(context.Background())
}

func (i *ingressEnvironmentStatusResponsePtrType) ToIngressEnvironmentStatusResponsePtrOutputWithContext(ctx context.Context) IngressEnvironmentStatusResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngressEnvironmentStatusResponsePtrOutput)
}

// An object that represents the status of ingress on an environment.
type IngressEnvironmentStatusResponseOutput struct{ *pulumi.OutputState }

func (IngressEnvironmentStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IngressEnvironmentStatusResponse)(nil)).Elem()
}

func (o IngressEnvironmentStatusResponseOutput) ToIngressEnvironmentStatusResponseOutput() IngressEnvironmentStatusResponseOutput {
	return o
}

func (o IngressEnvironmentStatusResponseOutput) ToIngressEnvironmentStatusResponseOutputWithContext(ctx context.Context) IngressEnvironmentStatusResponseOutput {
	return o
}

func (o IngressEnvironmentStatusResponseOutput) ToIngressEnvironmentStatusResponsePtrOutput() IngressEnvironmentStatusResponsePtrOutput {
	return o.ToIngressEnvironmentStatusResponsePtrOutputWithContext(context.Background())
}

func (o IngressEnvironmentStatusResponseOutput) ToIngressEnvironmentStatusResponsePtrOutputWithContext(ctx context.Context) IngressEnvironmentStatusResponsePtrOutput {
	return o.ApplyT(func(v IngressEnvironmentStatusResponse) *IngressEnvironmentStatusResponse {
		return &v
	}).(IngressEnvironmentStatusResponsePtrOutput)
}

// This string represents the state of ingress operations on an environment. It can be "Disabled", "Ready", "Running", "Paused" or "Unknown"
func (o IngressEnvironmentStatusResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IngressEnvironmentStatusResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

// An object that contains the details about an environment's state.
func (o IngressEnvironmentStatusResponseOutput) StateDetails() EnvironmentStateDetailsResponsePtrOutput {
	return o.ApplyT(func(v IngressEnvironmentStatusResponse) *EnvironmentStateDetailsResponse { return v.StateDetails }).(EnvironmentStateDetailsResponsePtrOutput)
}

type IngressEnvironmentStatusResponsePtrOutput struct{ *pulumi.OutputState }

func (IngressEnvironmentStatusResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IngressEnvironmentStatusResponse)(nil)).Elem()
}

func (o IngressEnvironmentStatusResponsePtrOutput) ToIngressEnvironmentStatusResponsePtrOutput() IngressEnvironmentStatusResponsePtrOutput {
	return o
}

func (o IngressEnvironmentStatusResponsePtrOutput) ToIngressEnvironmentStatusResponsePtrOutputWithContext(ctx context.Context) IngressEnvironmentStatusResponsePtrOutput {
	return o
}

func (o IngressEnvironmentStatusResponsePtrOutput) Elem() IngressEnvironmentStatusResponseOutput {
	return o.ApplyT(func(v *IngressEnvironmentStatusResponse) IngressEnvironmentStatusResponse { return *v }).(IngressEnvironmentStatusResponseOutput)
}

// This string represents the state of ingress operations on an environment. It can be "Disabled", "Ready", "Running", "Paused" or "Unknown"
func (o IngressEnvironmentStatusResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IngressEnvironmentStatusResponse) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// An object that contains the details about an environment's state.
func (o IngressEnvironmentStatusResponsePtrOutput) StateDetails() EnvironmentStateDetailsResponsePtrOutput {
	return o.ApplyT(func(v *IngressEnvironmentStatusResponse) *EnvironmentStateDetailsResponse {
		if v == nil {
			return nil
		}
		return v.StateDetails
	}).(EnvironmentStateDetailsResponsePtrOutput)
}

// The structure of the property that a partition key can have. An environment can have multiple such properties.
type PartitionKeyProperty struct {
	// The name of the property.
	Name *string `pulumi:"name"`
	// The type of the property.
	Type *string `pulumi:"type"`
}

// PartitionKeyPropertyInput is an input type that accepts PartitionKeyPropertyArgs and PartitionKeyPropertyOutput values.
// You can construct a concrete instance of `PartitionKeyPropertyInput` via:
//
//          PartitionKeyPropertyArgs{...}
type PartitionKeyPropertyInput interface {
	pulumi.Input

	ToPartitionKeyPropertyOutput() PartitionKeyPropertyOutput
	ToPartitionKeyPropertyOutputWithContext(context.Context) PartitionKeyPropertyOutput
}

// The structure of the property that a partition key can have. An environment can have multiple such properties.
type PartitionKeyPropertyArgs struct {
	// The name of the property.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The type of the property.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (PartitionKeyPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PartitionKeyProperty)(nil)).Elem()
}

func (i PartitionKeyPropertyArgs) ToPartitionKeyPropertyOutput() PartitionKeyPropertyOutput {
	return i.ToPartitionKeyPropertyOutputWithContext(context.Background())
}

func (i PartitionKeyPropertyArgs) ToPartitionKeyPropertyOutputWithContext(ctx context.Context) PartitionKeyPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PartitionKeyPropertyOutput)
}

// PartitionKeyPropertyArrayInput is an input type that accepts PartitionKeyPropertyArray and PartitionKeyPropertyArrayOutput values.
// You can construct a concrete instance of `PartitionKeyPropertyArrayInput` via:
//
//          PartitionKeyPropertyArray{ PartitionKeyPropertyArgs{...} }
type PartitionKeyPropertyArrayInput interface {
	pulumi.Input

	ToPartitionKeyPropertyArrayOutput() PartitionKeyPropertyArrayOutput
	ToPartitionKeyPropertyArrayOutputWithContext(context.Context) PartitionKeyPropertyArrayOutput
}

type PartitionKeyPropertyArray []PartitionKeyPropertyInput

func (PartitionKeyPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PartitionKeyProperty)(nil)).Elem()
}

func (i PartitionKeyPropertyArray) ToPartitionKeyPropertyArrayOutput() PartitionKeyPropertyArrayOutput {
	return i.ToPartitionKeyPropertyArrayOutputWithContext(context.Background())
}

func (i PartitionKeyPropertyArray) ToPartitionKeyPropertyArrayOutputWithContext(ctx context.Context) PartitionKeyPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PartitionKeyPropertyArrayOutput)
}

// The structure of the property that a partition key can have. An environment can have multiple such properties.
type PartitionKeyPropertyOutput struct{ *pulumi.OutputState }

func (PartitionKeyPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PartitionKeyProperty)(nil)).Elem()
}

func (o PartitionKeyPropertyOutput) ToPartitionKeyPropertyOutput() PartitionKeyPropertyOutput {
	return o
}

func (o PartitionKeyPropertyOutput) ToPartitionKeyPropertyOutputWithContext(ctx context.Context) PartitionKeyPropertyOutput {
	return o
}

// The name of the property.
func (o PartitionKeyPropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PartitionKeyProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of the property.
func (o PartitionKeyPropertyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PartitionKeyProperty) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type PartitionKeyPropertyArrayOutput struct{ *pulumi.OutputState }

func (PartitionKeyPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PartitionKeyProperty)(nil)).Elem()
}

func (o PartitionKeyPropertyArrayOutput) ToPartitionKeyPropertyArrayOutput() PartitionKeyPropertyArrayOutput {
	return o
}

func (o PartitionKeyPropertyArrayOutput) ToPartitionKeyPropertyArrayOutputWithContext(ctx context.Context) PartitionKeyPropertyArrayOutput {
	return o
}

func (o PartitionKeyPropertyArrayOutput) Index(i pulumi.IntInput) PartitionKeyPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PartitionKeyProperty {
		return vs[0].([]PartitionKeyProperty)[vs[1].(int)]
	}).(PartitionKeyPropertyOutput)
}

// The structure of the property that a partition key can have. An environment can have multiple such properties.
type PartitionKeyPropertyResponse struct {
	// The name of the property.
	Name *string `pulumi:"name"`
	// The type of the property.
	Type *string `pulumi:"type"`
}

// PartitionKeyPropertyResponseInput is an input type that accepts PartitionKeyPropertyResponseArgs and PartitionKeyPropertyResponseOutput values.
// You can construct a concrete instance of `PartitionKeyPropertyResponseInput` via:
//
//          PartitionKeyPropertyResponseArgs{...}
type PartitionKeyPropertyResponseInput interface {
	pulumi.Input

	ToPartitionKeyPropertyResponseOutput() PartitionKeyPropertyResponseOutput
	ToPartitionKeyPropertyResponseOutputWithContext(context.Context) PartitionKeyPropertyResponseOutput
}

// The structure of the property that a partition key can have. An environment can have multiple such properties.
type PartitionKeyPropertyResponseArgs struct {
	// The name of the property.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The type of the property.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (PartitionKeyPropertyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PartitionKeyPropertyResponse)(nil)).Elem()
}

func (i PartitionKeyPropertyResponseArgs) ToPartitionKeyPropertyResponseOutput() PartitionKeyPropertyResponseOutput {
	return i.ToPartitionKeyPropertyResponseOutputWithContext(context.Background())
}

func (i PartitionKeyPropertyResponseArgs) ToPartitionKeyPropertyResponseOutputWithContext(ctx context.Context) PartitionKeyPropertyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PartitionKeyPropertyResponseOutput)
}

// PartitionKeyPropertyResponseArrayInput is an input type that accepts PartitionKeyPropertyResponseArray and PartitionKeyPropertyResponseArrayOutput values.
// You can construct a concrete instance of `PartitionKeyPropertyResponseArrayInput` via:
//
//          PartitionKeyPropertyResponseArray{ PartitionKeyPropertyResponseArgs{...} }
type PartitionKeyPropertyResponseArrayInput interface {
	pulumi.Input

	ToPartitionKeyPropertyResponseArrayOutput() PartitionKeyPropertyResponseArrayOutput
	ToPartitionKeyPropertyResponseArrayOutputWithContext(context.Context) PartitionKeyPropertyResponseArrayOutput
}

type PartitionKeyPropertyResponseArray []PartitionKeyPropertyResponseInput

func (PartitionKeyPropertyResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PartitionKeyPropertyResponse)(nil)).Elem()
}

func (i PartitionKeyPropertyResponseArray) ToPartitionKeyPropertyResponseArrayOutput() PartitionKeyPropertyResponseArrayOutput {
	return i.ToPartitionKeyPropertyResponseArrayOutputWithContext(context.Background())
}

func (i PartitionKeyPropertyResponseArray) ToPartitionKeyPropertyResponseArrayOutputWithContext(ctx context.Context) PartitionKeyPropertyResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PartitionKeyPropertyResponseArrayOutput)
}

// The structure of the property that a partition key can have. An environment can have multiple such properties.
type PartitionKeyPropertyResponseOutput struct{ *pulumi.OutputState }

func (PartitionKeyPropertyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PartitionKeyPropertyResponse)(nil)).Elem()
}

func (o PartitionKeyPropertyResponseOutput) ToPartitionKeyPropertyResponseOutput() PartitionKeyPropertyResponseOutput {
	return o
}

func (o PartitionKeyPropertyResponseOutput) ToPartitionKeyPropertyResponseOutputWithContext(ctx context.Context) PartitionKeyPropertyResponseOutput {
	return o
}

// The name of the property.
func (o PartitionKeyPropertyResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PartitionKeyPropertyResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of the property.
func (o PartitionKeyPropertyResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PartitionKeyPropertyResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type PartitionKeyPropertyResponseArrayOutput struct{ *pulumi.OutputState }

func (PartitionKeyPropertyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PartitionKeyPropertyResponse)(nil)).Elem()
}

func (o PartitionKeyPropertyResponseArrayOutput) ToPartitionKeyPropertyResponseArrayOutput() PartitionKeyPropertyResponseArrayOutput {
	return o
}

func (o PartitionKeyPropertyResponseArrayOutput) ToPartitionKeyPropertyResponseArrayOutputWithContext(ctx context.Context) PartitionKeyPropertyResponseArrayOutput {
	return o
}

func (o PartitionKeyPropertyResponseArrayOutput) Index(i pulumi.IntInput) PartitionKeyPropertyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PartitionKeyPropertyResponse {
		return vs[0].([]PartitionKeyPropertyResponse)[vs[1].(int)]
	}).(PartitionKeyPropertyResponseOutput)
}

// Properties used to create a reference data set.
type ReferenceDataSetCreationProperties struct {
	// The reference data set key comparison behavior can be set using this property. By default, the value is 'Ordinal' - which means case sensitive key comparison will be performed while joining reference data with events or while adding new reference data. When 'OrdinalIgnoreCase' is set, case insensitive comparison will be used.
	DataStringComparisonBehavior *string `pulumi:"dataStringComparisonBehavior"`
	// The list of key properties for the reference data set.
	KeyProperties []ReferenceDataSetKeyProperty `pulumi:"keyProperties"`
}

// ReferenceDataSetCreationPropertiesInput is an input type that accepts ReferenceDataSetCreationPropertiesArgs and ReferenceDataSetCreationPropertiesOutput values.
// You can construct a concrete instance of `ReferenceDataSetCreationPropertiesInput` via:
//
//          ReferenceDataSetCreationPropertiesArgs{...}
type ReferenceDataSetCreationPropertiesInput interface {
	pulumi.Input

	ToReferenceDataSetCreationPropertiesOutput() ReferenceDataSetCreationPropertiesOutput
	ToReferenceDataSetCreationPropertiesOutputWithContext(context.Context) ReferenceDataSetCreationPropertiesOutput
}

// Properties used to create a reference data set.
type ReferenceDataSetCreationPropertiesArgs struct {
	// The reference data set key comparison behavior can be set using this property. By default, the value is 'Ordinal' - which means case sensitive key comparison will be performed while joining reference data with events or while adding new reference data. When 'OrdinalIgnoreCase' is set, case insensitive comparison will be used.
	DataStringComparisonBehavior pulumi.StringPtrInput `pulumi:"dataStringComparisonBehavior"`
	// The list of key properties for the reference data set.
	KeyProperties ReferenceDataSetKeyPropertyArrayInput `pulumi:"keyProperties"`
}

func (ReferenceDataSetCreationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferenceDataSetCreationProperties)(nil)).Elem()
}

func (i ReferenceDataSetCreationPropertiesArgs) ToReferenceDataSetCreationPropertiesOutput() ReferenceDataSetCreationPropertiesOutput {
	return i.ToReferenceDataSetCreationPropertiesOutputWithContext(context.Background())
}

func (i ReferenceDataSetCreationPropertiesArgs) ToReferenceDataSetCreationPropertiesOutputWithContext(ctx context.Context) ReferenceDataSetCreationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferenceDataSetCreationPropertiesOutput)
}

func (i ReferenceDataSetCreationPropertiesArgs) ToReferenceDataSetCreationPropertiesPtrOutput() ReferenceDataSetCreationPropertiesPtrOutput {
	return i.ToReferenceDataSetCreationPropertiesPtrOutputWithContext(context.Background())
}

func (i ReferenceDataSetCreationPropertiesArgs) ToReferenceDataSetCreationPropertiesPtrOutputWithContext(ctx context.Context) ReferenceDataSetCreationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferenceDataSetCreationPropertiesOutput).ToReferenceDataSetCreationPropertiesPtrOutputWithContext(ctx)
}

// ReferenceDataSetCreationPropertiesPtrInput is an input type that accepts ReferenceDataSetCreationPropertiesArgs, ReferenceDataSetCreationPropertiesPtr and ReferenceDataSetCreationPropertiesPtrOutput values.
// You can construct a concrete instance of `ReferenceDataSetCreationPropertiesPtrInput` via:
//
//          ReferenceDataSetCreationPropertiesArgs{...}
//
//  or:
//
//          nil
type ReferenceDataSetCreationPropertiesPtrInput interface {
	pulumi.Input

	ToReferenceDataSetCreationPropertiesPtrOutput() ReferenceDataSetCreationPropertiesPtrOutput
	ToReferenceDataSetCreationPropertiesPtrOutputWithContext(context.Context) ReferenceDataSetCreationPropertiesPtrOutput
}

type referenceDataSetCreationPropertiesPtrType ReferenceDataSetCreationPropertiesArgs

func ReferenceDataSetCreationPropertiesPtr(v *ReferenceDataSetCreationPropertiesArgs) ReferenceDataSetCreationPropertiesPtrInput {
	return (*referenceDataSetCreationPropertiesPtrType)(v)
}

func (*referenceDataSetCreationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReferenceDataSetCreationProperties)(nil)).Elem()
}

func (i *referenceDataSetCreationPropertiesPtrType) ToReferenceDataSetCreationPropertiesPtrOutput() ReferenceDataSetCreationPropertiesPtrOutput {
	return i.ToReferenceDataSetCreationPropertiesPtrOutputWithContext(context.Background())
}

func (i *referenceDataSetCreationPropertiesPtrType) ToReferenceDataSetCreationPropertiesPtrOutputWithContext(ctx context.Context) ReferenceDataSetCreationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferenceDataSetCreationPropertiesPtrOutput)
}

// Properties used to create a reference data set.
type ReferenceDataSetCreationPropertiesOutput struct{ *pulumi.OutputState }

func (ReferenceDataSetCreationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferenceDataSetCreationProperties)(nil)).Elem()
}

func (o ReferenceDataSetCreationPropertiesOutput) ToReferenceDataSetCreationPropertiesOutput() ReferenceDataSetCreationPropertiesOutput {
	return o
}

func (o ReferenceDataSetCreationPropertiesOutput) ToReferenceDataSetCreationPropertiesOutputWithContext(ctx context.Context) ReferenceDataSetCreationPropertiesOutput {
	return o
}

func (o ReferenceDataSetCreationPropertiesOutput) ToReferenceDataSetCreationPropertiesPtrOutput() ReferenceDataSetCreationPropertiesPtrOutput {
	return o.ToReferenceDataSetCreationPropertiesPtrOutputWithContext(context.Background())
}

func (o ReferenceDataSetCreationPropertiesOutput) ToReferenceDataSetCreationPropertiesPtrOutputWithContext(ctx context.Context) ReferenceDataSetCreationPropertiesPtrOutput {
	return o.ApplyT(func(v ReferenceDataSetCreationProperties) *ReferenceDataSetCreationProperties {
		return &v
	}).(ReferenceDataSetCreationPropertiesPtrOutput)
}

// The reference data set key comparison behavior can be set using this property. By default, the value is 'Ordinal' - which means case sensitive key comparison will be performed while joining reference data with events or while adding new reference data. When 'OrdinalIgnoreCase' is set, case insensitive comparison will be used.
func (o ReferenceDataSetCreationPropertiesOutput) DataStringComparisonBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReferenceDataSetCreationProperties) *string { return v.DataStringComparisonBehavior }).(pulumi.StringPtrOutput)
}

// The list of key properties for the reference data set.
func (o ReferenceDataSetCreationPropertiesOutput) KeyProperties() ReferenceDataSetKeyPropertyArrayOutput {
	return o.ApplyT(func(v ReferenceDataSetCreationProperties) []ReferenceDataSetKeyProperty { return v.KeyProperties }).(ReferenceDataSetKeyPropertyArrayOutput)
}

type ReferenceDataSetCreationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ReferenceDataSetCreationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReferenceDataSetCreationProperties)(nil)).Elem()
}

func (o ReferenceDataSetCreationPropertiesPtrOutput) ToReferenceDataSetCreationPropertiesPtrOutput() ReferenceDataSetCreationPropertiesPtrOutput {
	return o
}

func (o ReferenceDataSetCreationPropertiesPtrOutput) ToReferenceDataSetCreationPropertiesPtrOutputWithContext(ctx context.Context) ReferenceDataSetCreationPropertiesPtrOutput {
	return o
}

func (o ReferenceDataSetCreationPropertiesPtrOutput) Elem() ReferenceDataSetCreationPropertiesOutput {
	return o.ApplyT(func(v *ReferenceDataSetCreationProperties) ReferenceDataSetCreationProperties { return *v }).(ReferenceDataSetCreationPropertiesOutput)
}

// The reference data set key comparison behavior can be set using this property. By default, the value is 'Ordinal' - which means case sensitive key comparison will be performed while joining reference data with events or while adding new reference data. When 'OrdinalIgnoreCase' is set, case insensitive comparison will be used.
func (o ReferenceDataSetCreationPropertiesPtrOutput) DataStringComparisonBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReferenceDataSetCreationProperties) *string {
		if v == nil {
			return nil
		}
		return v.DataStringComparisonBehavior
	}).(pulumi.StringPtrOutput)
}

// The list of key properties for the reference data set.
func (o ReferenceDataSetCreationPropertiesPtrOutput) KeyProperties() ReferenceDataSetKeyPropertyArrayOutput {
	return o.ApplyT(func(v *ReferenceDataSetCreationProperties) []ReferenceDataSetKeyProperty {
		if v == nil {
			return nil
		}
		return v.KeyProperties
	}).(ReferenceDataSetKeyPropertyArrayOutput)
}

// A key property for the reference data set. A reference data set can have multiple key properties.
type ReferenceDataSetKeyProperty struct {
	// The name of the key property.
	Name *string `pulumi:"name"`
	// The type of the key property.
	Type *string `pulumi:"type"`
}

// ReferenceDataSetKeyPropertyInput is an input type that accepts ReferenceDataSetKeyPropertyArgs and ReferenceDataSetKeyPropertyOutput values.
// You can construct a concrete instance of `ReferenceDataSetKeyPropertyInput` via:
//
//          ReferenceDataSetKeyPropertyArgs{...}
type ReferenceDataSetKeyPropertyInput interface {
	pulumi.Input

	ToReferenceDataSetKeyPropertyOutput() ReferenceDataSetKeyPropertyOutput
	ToReferenceDataSetKeyPropertyOutputWithContext(context.Context) ReferenceDataSetKeyPropertyOutput
}

// A key property for the reference data set. A reference data set can have multiple key properties.
type ReferenceDataSetKeyPropertyArgs struct {
	// The name of the key property.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The type of the key property.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ReferenceDataSetKeyPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferenceDataSetKeyProperty)(nil)).Elem()
}

func (i ReferenceDataSetKeyPropertyArgs) ToReferenceDataSetKeyPropertyOutput() ReferenceDataSetKeyPropertyOutput {
	return i.ToReferenceDataSetKeyPropertyOutputWithContext(context.Background())
}

func (i ReferenceDataSetKeyPropertyArgs) ToReferenceDataSetKeyPropertyOutputWithContext(ctx context.Context) ReferenceDataSetKeyPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferenceDataSetKeyPropertyOutput)
}

// ReferenceDataSetKeyPropertyArrayInput is an input type that accepts ReferenceDataSetKeyPropertyArray and ReferenceDataSetKeyPropertyArrayOutput values.
// You can construct a concrete instance of `ReferenceDataSetKeyPropertyArrayInput` via:
//
//          ReferenceDataSetKeyPropertyArray{ ReferenceDataSetKeyPropertyArgs{...} }
type ReferenceDataSetKeyPropertyArrayInput interface {
	pulumi.Input

	ToReferenceDataSetKeyPropertyArrayOutput() ReferenceDataSetKeyPropertyArrayOutput
	ToReferenceDataSetKeyPropertyArrayOutputWithContext(context.Context) ReferenceDataSetKeyPropertyArrayOutput
}

type ReferenceDataSetKeyPropertyArray []ReferenceDataSetKeyPropertyInput

func (ReferenceDataSetKeyPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReferenceDataSetKeyProperty)(nil)).Elem()
}

func (i ReferenceDataSetKeyPropertyArray) ToReferenceDataSetKeyPropertyArrayOutput() ReferenceDataSetKeyPropertyArrayOutput {
	return i.ToReferenceDataSetKeyPropertyArrayOutputWithContext(context.Background())
}

func (i ReferenceDataSetKeyPropertyArray) ToReferenceDataSetKeyPropertyArrayOutputWithContext(ctx context.Context) ReferenceDataSetKeyPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferenceDataSetKeyPropertyArrayOutput)
}

// A key property for the reference data set. A reference data set can have multiple key properties.
type ReferenceDataSetKeyPropertyOutput struct{ *pulumi.OutputState }

func (ReferenceDataSetKeyPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferenceDataSetKeyProperty)(nil)).Elem()
}

func (o ReferenceDataSetKeyPropertyOutput) ToReferenceDataSetKeyPropertyOutput() ReferenceDataSetKeyPropertyOutput {
	return o
}

func (o ReferenceDataSetKeyPropertyOutput) ToReferenceDataSetKeyPropertyOutputWithContext(ctx context.Context) ReferenceDataSetKeyPropertyOutput {
	return o
}

// The name of the key property.
func (o ReferenceDataSetKeyPropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReferenceDataSetKeyProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of the key property.
func (o ReferenceDataSetKeyPropertyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReferenceDataSetKeyProperty) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ReferenceDataSetKeyPropertyArrayOutput struct{ *pulumi.OutputState }

func (ReferenceDataSetKeyPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReferenceDataSetKeyProperty)(nil)).Elem()
}

func (o ReferenceDataSetKeyPropertyArrayOutput) ToReferenceDataSetKeyPropertyArrayOutput() ReferenceDataSetKeyPropertyArrayOutput {
	return o
}

func (o ReferenceDataSetKeyPropertyArrayOutput) ToReferenceDataSetKeyPropertyArrayOutputWithContext(ctx context.Context) ReferenceDataSetKeyPropertyArrayOutput {
	return o
}

func (o ReferenceDataSetKeyPropertyArrayOutput) Index(i pulumi.IntInput) ReferenceDataSetKeyPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReferenceDataSetKeyProperty {
		return vs[0].([]ReferenceDataSetKeyProperty)[vs[1].(int)]
	}).(ReferenceDataSetKeyPropertyOutput)
}

// A key property for the reference data set. A reference data set can have multiple key properties.
type ReferenceDataSetKeyPropertyResponse struct {
	// The name of the key property.
	Name *string `pulumi:"name"`
	// The type of the key property.
	Type *string `pulumi:"type"`
}

// ReferenceDataSetKeyPropertyResponseInput is an input type that accepts ReferenceDataSetKeyPropertyResponseArgs and ReferenceDataSetKeyPropertyResponseOutput values.
// You can construct a concrete instance of `ReferenceDataSetKeyPropertyResponseInput` via:
//
//          ReferenceDataSetKeyPropertyResponseArgs{...}
type ReferenceDataSetKeyPropertyResponseInput interface {
	pulumi.Input

	ToReferenceDataSetKeyPropertyResponseOutput() ReferenceDataSetKeyPropertyResponseOutput
	ToReferenceDataSetKeyPropertyResponseOutputWithContext(context.Context) ReferenceDataSetKeyPropertyResponseOutput
}

// A key property for the reference data set. A reference data set can have multiple key properties.
type ReferenceDataSetKeyPropertyResponseArgs struct {
	// The name of the key property.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The type of the key property.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ReferenceDataSetKeyPropertyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferenceDataSetKeyPropertyResponse)(nil)).Elem()
}

func (i ReferenceDataSetKeyPropertyResponseArgs) ToReferenceDataSetKeyPropertyResponseOutput() ReferenceDataSetKeyPropertyResponseOutput {
	return i.ToReferenceDataSetKeyPropertyResponseOutputWithContext(context.Background())
}

func (i ReferenceDataSetKeyPropertyResponseArgs) ToReferenceDataSetKeyPropertyResponseOutputWithContext(ctx context.Context) ReferenceDataSetKeyPropertyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferenceDataSetKeyPropertyResponseOutput)
}

// ReferenceDataSetKeyPropertyResponseArrayInput is an input type that accepts ReferenceDataSetKeyPropertyResponseArray and ReferenceDataSetKeyPropertyResponseArrayOutput values.
// You can construct a concrete instance of `ReferenceDataSetKeyPropertyResponseArrayInput` via:
//
//          ReferenceDataSetKeyPropertyResponseArray{ ReferenceDataSetKeyPropertyResponseArgs{...} }
type ReferenceDataSetKeyPropertyResponseArrayInput interface {
	pulumi.Input

	ToReferenceDataSetKeyPropertyResponseArrayOutput() ReferenceDataSetKeyPropertyResponseArrayOutput
	ToReferenceDataSetKeyPropertyResponseArrayOutputWithContext(context.Context) ReferenceDataSetKeyPropertyResponseArrayOutput
}

type ReferenceDataSetKeyPropertyResponseArray []ReferenceDataSetKeyPropertyResponseInput

func (ReferenceDataSetKeyPropertyResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReferenceDataSetKeyPropertyResponse)(nil)).Elem()
}

func (i ReferenceDataSetKeyPropertyResponseArray) ToReferenceDataSetKeyPropertyResponseArrayOutput() ReferenceDataSetKeyPropertyResponseArrayOutput {
	return i.ToReferenceDataSetKeyPropertyResponseArrayOutputWithContext(context.Background())
}

func (i ReferenceDataSetKeyPropertyResponseArray) ToReferenceDataSetKeyPropertyResponseArrayOutputWithContext(ctx context.Context) ReferenceDataSetKeyPropertyResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferenceDataSetKeyPropertyResponseArrayOutput)
}

// A key property for the reference data set. A reference data set can have multiple key properties.
type ReferenceDataSetKeyPropertyResponseOutput struct{ *pulumi.OutputState }

func (ReferenceDataSetKeyPropertyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferenceDataSetKeyPropertyResponse)(nil)).Elem()
}

func (o ReferenceDataSetKeyPropertyResponseOutput) ToReferenceDataSetKeyPropertyResponseOutput() ReferenceDataSetKeyPropertyResponseOutput {
	return o
}

func (o ReferenceDataSetKeyPropertyResponseOutput) ToReferenceDataSetKeyPropertyResponseOutputWithContext(ctx context.Context) ReferenceDataSetKeyPropertyResponseOutput {
	return o
}

// The name of the key property.
func (o ReferenceDataSetKeyPropertyResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReferenceDataSetKeyPropertyResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of the key property.
func (o ReferenceDataSetKeyPropertyResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReferenceDataSetKeyPropertyResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ReferenceDataSetKeyPropertyResponseArrayOutput struct{ *pulumi.OutputState }

func (ReferenceDataSetKeyPropertyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReferenceDataSetKeyPropertyResponse)(nil)).Elem()
}

func (o ReferenceDataSetKeyPropertyResponseArrayOutput) ToReferenceDataSetKeyPropertyResponseArrayOutput() ReferenceDataSetKeyPropertyResponseArrayOutput {
	return o
}

func (o ReferenceDataSetKeyPropertyResponseArrayOutput) ToReferenceDataSetKeyPropertyResponseArrayOutputWithContext(ctx context.Context) ReferenceDataSetKeyPropertyResponseArrayOutput {
	return o
}

func (o ReferenceDataSetKeyPropertyResponseArrayOutput) Index(i pulumi.IntInput) ReferenceDataSetKeyPropertyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReferenceDataSetKeyPropertyResponse {
		return vs[0].([]ReferenceDataSetKeyPropertyResponse)[vs[1].(int)]
	}).(ReferenceDataSetKeyPropertyResponseOutput)
}

// Properties of the reference data set.
type ReferenceDataSetResourcePropertiesResponse struct {
	// The time the resource was created.
	CreationTime string `pulumi:"creationTime"`
	// The reference data set key comparison behavior can be set using this property. By default, the value is 'Ordinal' - which means case sensitive key comparison will be performed while joining reference data with events or while adding new reference data. When 'OrdinalIgnoreCase' is set, case insensitive comparison will be used.
	DataStringComparisonBehavior *string `pulumi:"dataStringComparisonBehavior"`
	// The list of key properties for the reference data set.
	KeyProperties []ReferenceDataSetKeyPropertyResponse `pulumi:"keyProperties"`
	// Provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// ReferenceDataSetResourcePropertiesResponseInput is an input type that accepts ReferenceDataSetResourcePropertiesResponseArgs and ReferenceDataSetResourcePropertiesResponseOutput values.
// You can construct a concrete instance of `ReferenceDataSetResourcePropertiesResponseInput` via:
//
//          ReferenceDataSetResourcePropertiesResponseArgs{...}
type ReferenceDataSetResourcePropertiesResponseInput interface {
	pulumi.Input

	ToReferenceDataSetResourcePropertiesResponseOutput() ReferenceDataSetResourcePropertiesResponseOutput
	ToReferenceDataSetResourcePropertiesResponseOutputWithContext(context.Context) ReferenceDataSetResourcePropertiesResponseOutput
}

// Properties of the reference data set.
type ReferenceDataSetResourcePropertiesResponseArgs struct {
	// The time the resource was created.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The reference data set key comparison behavior can be set using this property. By default, the value is 'Ordinal' - which means case sensitive key comparison will be performed while joining reference data with events or while adding new reference data. When 'OrdinalIgnoreCase' is set, case insensitive comparison will be used.
	DataStringComparisonBehavior pulumi.StringPtrInput `pulumi:"dataStringComparisonBehavior"`
	// The list of key properties for the reference data set.
	KeyProperties ReferenceDataSetKeyPropertyResponseArrayInput `pulumi:"keyProperties"`
	// Provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (ReferenceDataSetResourcePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferenceDataSetResourcePropertiesResponse)(nil)).Elem()
}

func (i ReferenceDataSetResourcePropertiesResponseArgs) ToReferenceDataSetResourcePropertiesResponseOutput() ReferenceDataSetResourcePropertiesResponseOutput {
	return i.ToReferenceDataSetResourcePropertiesResponseOutputWithContext(context.Background())
}

func (i ReferenceDataSetResourcePropertiesResponseArgs) ToReferenceDataSetResourcePropertiesResponseOutputWithContext(ctx context.Context) ReferenceDataSetResourcePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferenceDataSetResourcePropertiesResponseOutput)
}

func (i ReferenceDataSetResourcePropertiesResponseArgs) ToReferenceDataSetResourcePropertiesResponsePtrOutput() ReferenceDataSetResourcePropertiesResponsePtrOutput {
	return i.ToReferenceDataSetResourcePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ReferenceDataSetResourcePropertiesResponseArgs) ToReferenceDataSetResourcePropertiesResponsePtrOutputWithContext(ctx context.Context) ReferenceDataSetResourcePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferenceDataSetResourcePropertiesResponseOutput).ToReferenceDataSetResourcePropertiesResponsePtrOutputWithContext(ctx)
}

// ReferenceDataSetResourcePropertiesResponsePtrInput is an input type that accepts ReferenceDataSetResourcePropertiesResponseArgs, ReferenceDataSetResourcePropertiesResponsePtr and ReferenceDataSetResourcePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ReferenceDataSetResourcePropertiesResponsePtrInput` via:
//
//          ReferenceDataSetResourcePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ReferenceDataSetResourcePropertiesResponsePtrInput interface {
	pulumi.Input

	ToReferenceDataSetResourcePropertiesResponsePtrOutput() ReferenceDataSetResourcePropertiesResponsePtrOutput
	ToReferenceDataSetResourcePropertiesResponsePtrOutputWithContext(context.Context) ReferenceDataSetResourcePropertiesResponsePtrOutput
}

type referenceDataSetResourcePropertiesResponsePtrType ReferenceDataSetResourcePropertiesResponseArgs

func ReferenceDataSetResourcePropertiesResponsePtr(v *ReferenceDataSetResourcePropertiesResponseArgs) ReferenceDataSetResourcePropertiesResponsePtrInput {
	return (*referenceDataSetResourcePropertiesResponsePtrType)(v)
}

func (*referenceDataSetResourcePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReferenceDataSetResourcePropertiesResponse)(nil)).Elem()
}

func (i *referenceDataSetResourcePropertiesResponsePtrType) ToReferenceDataSetResourcePropertiesResponsePtrOutput() ReferenceDataSetResourcePropertiesResponsePtrOutput {
	return i.ToReferenceDataSetResourcePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *referenceDataSetResourcePropertiesResponsePtrType) ToReferenceDataSetResourcePropertiesResponsePtrOutputWithContext(ctx context.Context) ReferenceDataSetResourcePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferenceDataSetResourcePropertiesResponsePtrOutput)
}

// Properties of the reference data set.
type ReferenceDataSetResourcePropertiesResponseOutput struct{ *pulumi.OutputState }

func (ReferenceDataSetResourcePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferenceDataSetResourcePropertiesResponse)(nil)).Elem()
}

func (o ReferenceDataSetResourcePropertiesResponseOutput) ToReferenceDataSetResourcePropertiesResponseOutput() ReferenceDataSetResourcePropertiesResponseOutput {
	return o
}

func (o ReferenceDataSetResourcePropertiesResponseOutput) ToReferenceDataSetResourcePropertiesResponseOutputWithContext(ctx context.Context) ReferenceDataSetResourcePropertiesResponseOutput {
	return o
}

func (o ReferenceDataSetResourcePropertiesResponseOutput) ToReferenceDataSetResourcePropertiesResponsePtrOutput() ReferenceDataSetResourcePropertiesResponsePtrOutput {
	return o.ToReferenceDataSetResourcePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ReferenceDataSetResourcePropertiesResponseOutput) ToReferenceDataSetResourcePropertiesResponsePtrOutputWithContext(ctx context.Context) ReferenceDataSetResourcePropertiesResponsePtrOutput {
	return o.ApplyT(func(v ReferenceDataSetResourcePropertiesResponse) *ReferenceDataSetResourcePropertiesResponse {
		return &v
	}).(ReferenceDataSetResourcePropertiesResponsePtrOutput)
}

// The time the resource was created.
func (o ReferenceDataSetResourcePropertiesResponseOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v ReferenceDataSetResourcePropertiesResponse) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The reference data set key comparison behavior can be set using this property. By default, the value is 'Ordinal' - which means case sensitive key comparison will be performed while joining reference data with events or while adding new reference data. When 'OrdinalIgnoreCase' is set, case insensitive comparison will be used.
func (o ReferenceDataSetResourcePropertiesResponseOutput) DataStringComparisonBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReferenceDataSetResourcePropertiesResponse) *string { return v.DataStringComparisonBehavior }).(pulumi.StringPtrOutput)
}

// The list of key properties for the reference data set.
func (o ReferenceDataSetResourcePropertiesResponseOutput) KeyProperties() ReferenceDataSetKeyPropertyResponseArrayOutput {
	return o.ApplyT(func(v ReferenceDataSetResourcePropertiesResponse) []ReferenceDataSetKeyPropertyResponse {
		return v.KeyProperties
	}).(ReferenceDataSetKeyPropertyResponseArrayOutput)
}

// Provisioning state of the resource.
func (o ReferenceDataSetResourcePropertiesResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReferenceDataSetResourcePropertiesResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type ReferenceDataSetResourcePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ReferenceDataSetResourcePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReferenceDataSetResourcePropertiesResponse)(nil)).Elem()
}

func (o ReferenceDataSetResourcePropertiesResponsePtrOutput) ToReferenceDataSetResourcePropertiesResponsePtrOutput() ReferenceDataSetResourcePropertiesResponsePtrOutput {
	return o
}

func (o ReferenceDataSetResourcePropertiesResponsePtrOutput) ToReferenceDataSetResourcePropertiesResponsePtrOutputWithContext(ctx context.Context) ReferenceDataSetResourcePropertiesResponsePtrOutput {
	return o
}

func (o ReferenceDataSetResourcePropertiesResponsePtrOutput) Elem() ReferenceDataSetResourcePropertiesResponseOutput {
	return o.ApplyT(func(v *ReferenceDataSetResourcePropertiesResponse) ReferenceDataSetResourcePropertiesResponse {
		return *v
	}).(ReferenceDataSetResourcePropertiesResponseOutput)
}

// The time the resource was created.
func (o ReferenceDataSetResourcePropertiesResponsePtrOutput) CreationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReferenceDataSetResourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreationTime
	}).(pulumi.StringPtrOutput)
}

// The reference data set key comparison behavior can be set using this property. By default, the value is 'Ordinal' - which means case sensitive key comparison will be performed while joining reference data with events or while adding new reference data. When 'OrdinalIgnoreCase' is set, case insensitive comparison will be used.
func (o ReferenceDataSetResourcePropertiesResponsePtrOutput) DataStringComparisonBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReferenceDataSetResourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DataStringComparisonBehavior
	}).(pulumi.StringPtrOutput)
}

// The list of key properties for the reference data set.
func (o ReferenceDataSetResourcePropertiesResponsePtrOutput) KeyProperties() ReferenceDataSetKeyPropertyResponseArrayOutput {
	return o.ApplyT(func(v *ReferenceDataSetResourcePropertiesResponse) []ReferenceDataSetKeyPropertyResponse {
		if v == nil {
			return nil
		}
		return v.KeyProperties
	}).(ReferenceDataSetKeyPropertyResponseArrayOutput)
}

// Provisioning state of the resource.
func (o ReferenceDataSetResourcePropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReferenceDataSetResourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The sku determines the capacity of the environment, the SLA (in queries-per-minute and total capacity), and the billing rate.
type Sku struct {
	// The capacity of the sku. This value can be changed to support scale out of environments after they have been created.
	Capacity int `pulumi:"capacity"`
	// The name of this SKU.
	Name string `pulumi:"name"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//          SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// The sku determines the capacity of the environment, the SLA (in queries-per-minute and total capacity), and the billing rate.
type SkuArgs struct {
	// The capacity of the sku. This value can be changed to support scale out of environments after they have been created.
	Capacity pulumi.IntInput `pulumi:"capacity"`
	// The name of this SKU.
	Name pulumi.StringInput `pulumi:"name"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//          SkuArgs{...}
//
//  or:
//
//          nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// The sku determines the capacity of the environment, the SLA (in queries-per-minute and total capacity), and the billing rate.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyT(func(v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// The capacity of the sku. This value can be changed to support scale out of environments after they have been created.
func (o SkuOutput) Capacity() pulumi.IntOutput {
	return o.ApplyT(func(v Sku) int { return v.Capacity }).(pulumi.IntOutput)
}

// The name of this SKU.
func (o SkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Sku) string { return v.Name }).(pulumi.StringOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku { return *v }).(SkuOutput)
}

// The capacity of the sku. This value can be changed to support scale out of environments after they have been created.
func (o SkuPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Sku) *int {
		if v == nil {
			return nil
		}
		return &v.Capacity
	}).(pulumi.IntPtrOutput)
}

// The name of this SKU.
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The sku determines the capacity of the environment, the SLA (in queries-per-minute and total capacity), and the billing rate.
type SkuResponse struct {
	// The capacity of the sku. This value can be changed to support scale out of environments after they have been created.
	Capacity int `pulumi:"capacity"`
	// The name of this SKU.
	Name string `pulumi:"name"`
}

// SkuResponseInput is an input type that accepts SkuResponseArgs and SkuResponseOutput values.
// You can construct a concrete instance of `SkuResponseInput` via:
//
//          SkuResponseArgs{...}
type SkuResponseInput interface {
	pulumi.Input

	ToSkuResponseOutput() SkuResponseOutput
	ToSkuResponseOutputWithContext(context.Context) SkuResponseOutput
}

// The sku determines the capacity of the environment, the SLA (in queries-per-minute and total capacity), and the billing rate.
type SkuResponseArgs struct {
	// The capacity of the sku. This value can be changed to support scale out of environments after they have been created.
	Capacity pulumi.IntInput `pulumi:"capacity"`
	// The name of this SKU.
	Name pulumi.StringInput `pulumi:"name"`
}

func (SkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (i SkuResponseArgs) ToSkuResponseOutput() SkuResponseOutput {
	return i.ToSkuResponseOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput)
}

func (i SkuResponseArgs) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput).ToSkuResponsePtrOutputWithContext(ctx)
}

// SkuResponsePtrInput is an input type that accepts SkuResponseArgs, SkuResponsePtr and SkuResponsePtrOutput values.
// You can construct a concrete instance of `SkuResponsePtrInput` via:
//
//          SkuResponseArgs{...}
//
//  or:
//
//          nil
type SkuResponsePtrInput interface {
	pulumi.Input

	ToSkuResponsePtrOutput() SkuResponsePtrOutput
	ToSkuResponsePtrOutputWithContext(context.Context) SkuResponsePtrOutput
}

type skuResponsePtrType SkuResponseArgs

func SkuResponsePtr(v *SkuResponseArgs) SkuResponsePtrInput {
	return (*skuResponsePtrType)(v)
}

func (*skuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponsePtrOutput)
}

// The sku determines the capacity of the environment, the SLA (in queries-per-minute and total capacity), and the billing rate.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (o SkuResponseOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o.ApplyT(func(v SkuResponse) *SkuResponse {
		return &v
	}).(SkuResponsePtrOutput)
}

// The capacity of the sku. This value can be changed to support scale out of environments after they have been created.
func (o SkuResponseOutput) Capacity() pulumi.IntOutput {
	return o.ApplyT(func(v SkuResponse) int { return v.Capacity }).(pulumi.IntOutput)
}

// The name of this SKU.
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse { return *v }).(SkuResponseOutput)
}

// The capacity of the sku. This value can be changed to support scale out of environments after they have been created.
func (o SkuResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Capacity
	}).(pulumi.IntPtrOutput)
}

// The name of this SKU.
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AccessPolicyResourcePropertiesOutput{})
	pulumi.RegisterOutputType(AccessPolicyResourcePropertiesPtrOutput{})
	pulumi.RegisterOutputType(AccessPolicyResourcePropertiesResponseOutput{})
	pulumi.RegisterOutputType(AccessPolicyResourcePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(EnvironmentTypeOutput{})
	pulumi.RegisterOutputType(EnvironmentAccessPolicyTypeOutput{})
	pulumi.RegisterOutputType(EnvironmentCreationPropertiesOutput{})
	pulumi.RegisterOutputType(EnvironmentCreationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(EnvironmentEventSourceTypeOutput{})
	pulumi.RegisterOutputType(EnvironmentReferenceDataSetTypeOutput{})
	pulumi.RegisterOutputType(EnvironmentResourcePropertiesResponseOutput{})
	pulumi.RegisterOutputType(EnvironmentResourcePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(EnvironmentStateDetailsResponseOutput{})
	pulumi.RegisterOutputType(EnvironmentStateDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(EnvironmentStatusResponseOutput{})
	pulumi.RegisterOutputType(EnvironmentStatusResponsePtrOutput{})
	pulumi.RegisterOutputType(IngressEnvironmentStatusResponseOutput{})
	pulumi.RegisterOutputType(IngressEnvironmentStatusResponsePtrOutput{})
	pulumi.RegisterOutputType(PartitionKeyPropertyOutput{})
	pulumi.RegisterOutputType(PartitionKeyPropertyArrayOutput{})
	pulumi.RegisterOutputType(PartitionKeyPropertyResponseOutput{})
	pulumi.RegisterOutputType(PartitionKeyPropertyResponseArrayOutput{})
	pulumi.RegisterOutputType(ReferenceDataSetCreationPropertiesOutput{})
	pulumi.RegisterOutputType(ReferenceDataSetCreationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ReferenceDataSetKeyPropertyOutput{})
	pulumi.RegisterOutputType(ReferenceDataSetKeyPropertyArrayOutput{})
	pulumi.RegisterOutputType(ReferenceDataSetKeyPropertyResponseOutput{})
	pulumi.RegisterOutputType(ReferenceDataSetKeyPropertyResponseArrayOutput{})
	pulumi.RegisterOutputType(ReferenceDataSetResourcePropertiesResponseOutput{})
	pulumi.RegisterOutputType(ReferenceDataSetResourcePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
}
