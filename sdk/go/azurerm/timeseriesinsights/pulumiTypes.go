// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package timeseriesinsights

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// An access policy is used to grant users and applications access to the environment. Roles are assigned to service principals in Azure Active Directory. These roles define the actions the principal can perform through the Time Series Insights data plane APIs.
type AccessPolicyType struct {
	// Resource name
	Name       string                                 `pulumi:"name"`
	Properties AccessPolicyResourcePropertiesResponse `pulumi:"properties"`
	// Resource type
	Type string `pulumi:"type"`
}

// AccessPolicyTypeInput is an input type that accepts AccessPolicyTypeArgs and AccessPolicyTypeOutput values.
// You can construct a concrete instance of `AccessPolicyTypeInput` via:
//
//          AccessPolicyTypeArgs{...}
type AccessPolicyTypeInput interface {
	pulumi.Input

	ToAccessPolicyTypeOutput() AccessPolicyTypeOutput
	ToAccessPolicyTypeOutputWithContext(context.Context) AccessPolicyTypeOutput
}

// An access policy is used to grant users and applications access to the environment. Roles are assigned to service principals in Azure Active Directory. These roles define the actions the principal can perform through the Time Series Insights data plane APIs.
type AccessPolicyTypeArgs struct {
	// Resource name
	Name       pulumi.StringInput                          `pulumi:"name"`
	Properties AccessPolicyResourcePropertiesResponseInput `pulumi:"properties"`
	// Resource type
	Type pulumi.StringInput `pulumi:"type"`
}

func (AccessPolicyTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyType)(nil)).Elem()
}

func (i AccessPolicyTypeArgs) ToAccessPolicyTypeOutput() AccessPolicyTypeOutput {
	return i.ToAccessPolicyTypeOutputWithContext(context.Background())
}

func (i AccessPolicyTypeArgs) ToAccessPolicyTypeOutputWithContext(ctx context.Context) AccessPolicyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyTypeOutput)
}

// An access policy is used to grant users and applications access to the environment. Roles are assigned to service principals in Azure Active Directory. These roles define the actions the principal can perform through the Time Series Insights data plane APIs.
type AccessPolicyTypeOutput struct{ *pulumi.OutputState }

func (AccessPolicyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyType)(nil)).Elem()
}

func (o AccessPolicyTypeOutput) ToAccessPolicyTypeOutput() AccessPolicyTypeOutput {
	return o
}

func (o AccessPolicyTypeOutput) ToAccessPolicyTypeOutputWithContext(ctx context.Context) AccessPolicyTypeOutput {
	return o
}

// Resource name
func (o AccessPolicyTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AccessPolicyType) string { return v.Name }).(pulumi.StringOutput)
}

func (o AccessPolicyTypeOutput) Properties() AccessPolicyResourcePropertiesResponseOutput {
	return o.ApplyT(func(v AccessPolicyType) AccessPolicyResourcePropertiesResponse { return v.Properties }).(AccessPolicyResourcePropertiesResponseOutput)
}

// Resource type
func (o AccessPolicyTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AccessPolicyType) string { return v.Type }).(pulumi.StringOutput)
}

type AccessPolicyResourceProperties struct {
	// An description of the access policy.
	Description *string `pulumi:"description"`
	// The objectId of the principal in Azure Active Directory.
	PrincipalObjectId *string `pulumi:"principalObjectId"`
	// The list of roles the principal is assigned on the environment.
	Roles []string `pulumi:"roles"`
}

// AccessPolicyResourcePropertiesInput is an input type that accepts AccessPolicyResourcePropertiesArgs and AccessPolicyResourcePropertiesOutput values.
// You can construct a concrete instance of `AccessPolicyResourcePropertiesInput` via:
//
//          AccessPolicyResourcePropertiesArgs{...}
type AccessPolicyResourcePropertiesInput interface {
	pulumi.Input

	ToAccessPolicyResourcePropertiesOutput() AccessPolicyResourcePropertiesOutput
	ToAccessPolicyResourcePropertiesOutputWithContext(context.Context) AccessPolicyResourcePropertiesOutput
}

type AccessPolicyResourcePropertiesArgs struct {
	// An description of the access policy.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The objectId of the principal in Azure Active Directory.
	PrincipalObjectId pulumi.StringPtrInput `pulumi:"principalObjectId"`
	// The list of roles the principal is assigned on the environment.
	Roles pulumi.StringArrayInput `pulumi:"roles"`
}

func (AccessPolicyResourcePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyResourceProperties)(nil)).Elem()
}

func (i AccessPolicyResourcePropertiesArgs) ToAccessPolicyResourcePropertiesOutput() AccessPolicyResourcePropertiesOutput {
	return i.ToAccessPolicyResourcePropertiesOutputWithContext(context.Background())
}

func (i AccessPolicyResourcePropertiesArgs) ToAccessPolicyResourcePropertiesOutputWithContext(ctx context.Context) AccessPolicyResourcePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyResourcePropertiesOutput)
}

func (i AccessPolicyResourcePropertiesArgs) ToAccessPolicyResourcePropertiesPtrOutput() AccessPolicyResourcePropertiesPtrOutput {
	return i.ToAccessPolicyResourcePropertiesPtrOutputWithContext(context.Background())
}

func (i AccessPolicyResourcePropertiesArgs) ToAccessPolicyResourcePropertiesPtrOutputWithContext(ctx context.Context) AccessPolicyResourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyResourcePropertiesOutput).ToAccessPolicyResourcePropertiesPtrOutputWithContext(ctx)
}

// AccessPolicyResourcePropertiesPtrInput is an input type that accepts AccessPolicyResourcePropertiesArgs, AccessPolicyResourcePropertiesPtr and AccessPolicyResourcePropertiesPtrOutput values.
// You can construct a concrete instance of `AccessPolicyResourcePropertiesPtrInput` via:
//
//          AccessPolicyResourcePropertiesArgs{...}
//
//  or:
//
//          nil
type AccessPolicyResourcePropertiesPtrInput interface {
	pulumi.Input

	ToAccessPolicyResourcePropertiesPtrOutput() AccessPolicyResourcePropertiesPtrOutput
	ToAccessPolicyResourcePropertiesPtrOutputWithContext(context.Context) AccessPolicyResourcePropertiesPtrOutput
}

type accessPolicyResourcePropertiesPtrType AccessPolicyResourcePropertiesArgs

func AccessPolicyResourcePropertiesPtr(v *AccessPolicyResourcePropertiesArgs) AccessPolicyResourcePropertiesPtrInput {
	return (*accessPolicyResourcePropertiesPtrType)(v)
}

func (*accessPolicyResourcePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPolicyResourceProperties)(nil)).Elem()
}

func (i *accessPolicyResourcePropertiesPtrType) ToAccessPolicyResourcePropertiesPtrOutput() AccessPolicyResourcePropertiesPtrOutput {
	return i.ToAccessPolicyResourcePropertiesPtrOutputWithContext(context.Background())
}

func (i *accessPolicyResourcePropertiesPtrType) ToAccessPolicyResourcePropertiesPtrOutputWithContext(ctx context.Context) AccessPolicyResourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyResourcePropertiesPtrOutput)
}

type AccessPolicyResourcePropertiesOutput struct{ *pulumi.OutputState }

func (AccessPolicyResourcePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyResourceProperties)(nil)).Elem()
}

func (o AccessPolicyResourcePropertiesOutput) ToAccessPolicyResourcePropertiesOutput() AccessPolicyResourcePropertiesOutput {
	return o
}

func (o AccessPolicyResourcePropertiesOutput) ToAccessPolicyResourcePropertiesOutputWithContext(ctx context.Context) AccessPolicyResourcePropertiesOutput {
	return o
}

func (o AccessPolicyResourcePropertiesOutput) ToAccessPolicyResourcePropertiesPtrOutput() AccessPolicyResourcePropertiesPtrOutput {
	return o.ToAccessPolicyResourcePropertiesPtrOutputWithContext(context.Background())
}

func (o AccessPolicyResourcePropertiesOutput) ToAccessPolicyResourcePropertiesPtrOutputWithContext(ctx context.Context) AccessPolicyResourcePropertiesPtrOutput {
	return o.ApplyT(func(v AccessPolicyResourceProperties) *AccessPolicyResourceProperties {
		return &v
	}).(AccessPolicyResourcePropertiesPtrOutput)
}

// An description of the access policy.
func (o AccessPolicyResourcePropertiesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyResourceProperties) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The objectId of the principal in Azure Active Directory.
func (o AccessPolicyResourcePropertiesOutput) PrincipalObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyResourceProperties) *string { return v.PrincipalObjectId }).(pulumi.StringPtrOutput)
}

// The list of roles the principal is assigned on the environment.
func (o AccessPolicyResourcePropertiesOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicyResourceProperties) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

type AccessPolicyResourcePropertiesPtrOutput struct{ *pulumi.OutputState }

func (AccessPolicyResourcePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPolicyResourceProperties)(nil)).Elem()
}

func (o AccessPolicyResourcePropertiesPtrOutput) ToAccessPolicyResourcePropertiesPtrOutput() AccessPolicyResourcePropertiesPtrOutput {
	return o
}

func (o AccessPolicyResourcePropertiesPtrOutput) ToAccessPolicyResourcePropertiesPtrOutputWithContext(ctx context.Context) AccessPolicyResourcePropertiesPtrOutput {
	return o
}

func (o AccessPolicyResourcePropertiesPtrOutput) Elem() AccessPolicyResourcePropertiesOutput {
	return o.ApplyT(func(v *AccessPolicyResourceProperties) AccessPolicyResourceProperties { return *v }).(AccessPolicyResourcePropertiesOutput)
}

// An description of the access policy.
func (o AccessPolicyResourcePropertiesPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPolicyResourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The objectId of the principal in Azure Active Directory.
func (o AccessPolicyResourcePropertiesPtrOutput) PrincipalObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPolicyResourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalObjectId
	}).(pulumi.StringPtrOutput)
}

// The list of roles the principal is assigned on the environment.
func (o AccessPolicyResourcePropertiesPtrOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AccessPolicyResourceProperties) []string {
		if v == nil {
			return nil
		}
		return v.Roles
	}).(pulumi.StringArrayOutput)
}

type AccessPolicyResourcePropertiesResponse struct {
	// An description of the access policy.
	Description *string `pulumi:"description"`
	// The objectId of the principal in Azure Active Directory.
	PrincipalObjectId *string `pulumi:"principalObjectId"`
	// The list of roles the principal is assigned on the environment.
	Roles []string `pulumi:"roles"`
}

// AccessPolicyResourcePropertiesResponseInput is an input type that accepts AccessPolicyResourcePropertiesResponseArgs and AccessPolicyResourcePropertiesResponseOutput values.
// You can construct a concrete instance of `AccessPolicyResourcePropertiesResponseInput` via:
//
//          AccessPolicyResourcePropertiesResponseArgs{...}
type AccessPolicyResourcePropertiesResponseInput interface {
	pulumi.Input

	ToAccessPolicyResourcePropertiesResponseOutput() AccessPolicyResourcePropertiesResponseOutput
	ToAccessPolicyResourcePropertiesResponseOutputWithContext(context.Context) AccessPolicyResourcePropertiesResponseOutput
}

type AccessPolicyResourcePropertiesResponseArgs struct {
	// An description of the access policy.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The objectId of the principal in Azure Active Directory.
	PrincipalObjectId pulumi.StringPtrInput `pulumi:"principalObjectId"`
	// The list of roles the principal is assigned on the environment.
	Roles pulumi.StringArrayInput `pulumi:"roles"`
}

func (AccessPolicyResourcePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyResourcePropertiesResponse)(nil)).Elem()
}

func (i AccessPolicyResourcePropertiesResponseArgs) ToAccessPolicyResourcePropertiesResponseOutput() AccessPolicyResourcePropertiesResponseOutput {
	return i.ToAccessPolicyResourcePropertiesResponseOutputWithContext(context.Background())
}

func (i AccessPolicyResourcePropertiesResponseArgs) ToAccessPolicyResourcePropertiesResponseOutputWithContext(ctx context.Context) AccessPolicyResourcePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyResourcePropertiesResponseOutput)
}

func (i AccessPolicyResourcePropertiesResponseArgs) ToAccessPolicyResourcePropertiesResponsePtrOutput() AccessPolicyResourcePropertiesResponsePtrOutput {
	return i.ToAccessPolicyResourcePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i AccessPolicyResourcePropertiesResponseArgs) ToAccessPolicyResourcePropertiesResponsePtrOutputWithContext(ctx context.Context) AccessPolicyResourcePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyResourcePropertiesResponseOutput).ToAccessPolicyResourcePropertiesResponsePtrOutputWithContext(ctx)
}

// AccessPolicyResourcePropertiesResponsePtrInput is an input type that accepts AccessPolicyResourcePropertiesResponseArgs, AccessPolicyResourcePropertiesResponsePtr and AccessPolicyResourcePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `AccessPolicyResourcePropertiesResponsePtrInput` via:
//
//          AccessPolicyResourcePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type AccessPolicyResourcePropertiesResponsePtrInput interface {
	pulumi.Input

	ToAccessPolicyResourcePropertiesResponsePtrOutput() AccessPolicyResourcePropertiesResponsePtrOutput
	ToAccessPolicyResourcePropertiesResponsePtrOutputWithContext(context.Context) AccessPolicyResourcePropertiesResponsePtrOutput
}

type accessPolicyResourcePropertiesResponsePtrType AccessPolicyResourcePropertiesResponseArgs

func AccessPolicyResourcePropertiesResponsePtr(v *AccessPolicyResourcePropertiesResponseArgs) AccessPolicyResourcePropertiesResponsePtrInput {
	return (*accessPolicyResourcePropertiesResponsePtrType)(v)
}

func (*accessPolicyResourcePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPolicyResourcePropertiesResponse)(nil)).Elem()
}

func (i *accessPolicyResourcePropertiesResponsePtrType) ToAccessPolicyResourcePropertiesResponsePtrOutput() AccessPolicyResourcePropertiesResponsePtrOutput {
	return i.ToAccessPolicyResourcePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *accessPolicyResourcePropertiesResponsePtrType) ToAccessPolicyResourcePropertiesResponsePtrOutputWithContext(ctx context.Context) AccessPolicyResourcePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyResourcePropertiesResponsePtrOutput)
}

type AccessPolicyResourcePropertiesResponseOutput struct{ *pulumi.OutputState }

func (AccessPolicyResourcePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyResourcePropertiesResponse)(nil)).Elem()
}

func (o AccessPolicyResourcePropertiesResponseOutput) ToAccessPolicyResourcePropertiesResponseOutput() AccessPolicyResourcePropertiesResponseOutput {
	return o
}

func (o AccessPolicyResourcePropertiesResponseOutput) ToAccessPolicyResourcePropertiesResponseOutputWithContext(ctx context.Context) AccessPolicyResourcePropertiesResponseOutput {
	return o
}

func (o AccessPolicyResourcePropertiesResponseOutput) ToAccessPolicyResourcePropertiesResponsePtrOutput() AccessPolicyResourcePropertiesResponsePtrOutput {
	return o.ToAccessPolicyResourcePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o AccessPolicyResourcePropertiesResponseOutput) ToAccessPolicyResourcePropertiesResponsePtrOutputWithContext(ctx context.Context) AccessPolicyResourcePropertiesResponsePtrOutput {
	return o.ApplyT(func(v AccessPolicyResourcePropertiesResponse) *AccessPolicyResourcePropertiesResponse {
		return &v
	}).(AccessPolicyResourcePropertiesResponsePtrOutput)
}

// An description of the access policy.
func (o AccessPolicyResourcePropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyResourcePropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The objectId of the principal in Azure Active Directory.
func (o AccessPolicyResourcePropertiesResponseOutput) PrincipalObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyResourcePropertiesResponse) *string { return v.PrincipalObjectId }).(pulumi.StringPtrOutput)
}

// The list of roles the principal is assigned on the environment.
func (o AccessPolicyResourcePropertiesResponseOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicyResourcePropertiesResponse) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

type AccessPolicyResourcePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (AccessPolicyResourcePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPolicyResourcePropertiesResponse)(nil)).Elem()
}

func (o AccessPolicyResourcePropertiesResponsePtrOutput) ToAccessPolicyResourcePropertiesResponsePtrOutput() AccessPolicyResourcePropertiesResponsePtrOutput {
	return o
}

func (o AccessPolicyResourcePropertiesResponsePtrOutput) ToAccessPolicyResourcePropertiesResponsePtrOutputWithContext(ctx context.Context) AccessPolicyResourcePropertiesResponsePtrOutput {
	return o
}

func (o AccessPolicyResourcePropertiesResponsePtrOutput) Elem() AccessPolicyResourcePropertiesResponseOutput {
	return o.ApplyT(func(v *AccessPolicyResourcePropertiesResponse) AccessPolicyResourcePropertiesResponse { return *v }).(AccessPolicyResourcePropertiesResponseOutput)
}

// An description of the access policy.
func (o AccessPolicyResourcePropertiesResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPolicyResourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The objectId of the principal in Azure Active Directory.
func (o AccessPolicyResourcePropertiesResponsePtrOutput) PrincipalObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPolicyResourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalObjectId
	}).(pulumi.StringPtrOutput)
}

// The list of roles the principal is assigned on the environment.
func (o AccessPolicyResourcePropertiesResponsePtrOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AccessPolicyResourcePropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.Roles
	}).(pulumi.StringArrayOutput)
}

// An environment is a set of time-series data available for query, and is the top level Azure Time Series Insights resource.
type EnvironmentType struct {
	// The kind of the environment.
	Kind string `pulumi:"kind"`
	// Resource location
	Location string `pulumi:"location"`
	// Resource name
	Name string `pulumi:"name"`
	// The sku determines the type of environment, either Gen1 (S1 or S2) or Gen2 (L1). For Gen1 environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
	Sku SkuResponse `pulumi:"sku"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type string `pulumi:"type"`
}

// EnvironmentTypeInput is an input type that accepts EnvironmentTypeArgs and EnvironmentTypeOutput values.
// You can construct a concrete instance of `EnvironmentTypeInput` via:
//
//          EnvironmentTypeArgs{...}
type EnvironmentTypeInput interface {
	pulumi.Input

	ToEnvironmentTypeOutput() EnvironmentTypeOutput
	ToEnvironmentTypeOutputWithContext(context.Context) EnvironmentTypeOutput
}

// An environment is a set of time-series data available for query, and is the top level Azure Time Series Insights resource.
type EnvironmentTypeArgs struct {
	// The kind of the environment.
	Kind pulumi.StringInput `pulumi:"kind"`
	// Resource location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource name
	Name pulumi.StringInput `pulumi:"name"`
	// The sku determines the type of environment, either Gen1 (S1 or S2) or Gen2 (L1). For Gen1 environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
	Sku SkuResponseInput `pulumi:"sku"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringInput `pulumi:"type"`
}

func (EnvironmentTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentType)(nil)).Elem()
}

func (i EnvironmentTypeArgs) ToEnvironmentTypeOutput() EnvironmentTypeOutput {
	return i.ToEnvironmentTypeOutputWithContext(context.Background())
}

func (i EnvironmentTypeArgs) ToEnvironmentTypeOutputWithContext(ctx context.Context) EnvironmentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentTypeOutput)
}

// An environment is a set of time-series data available for query, and is the top level Azure Time Series Insights resource.
type EnvironmentTypeOutput struct{ *pulumi.OutputState }

func (EnvironmentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentType)(nil)).Elem()
}

func (o EnvironmentTypeOutput) ToEnvironmentTypeOutput() EnvironmentTypeOutput {
	return o
}

func (o EnvironmentTypeOutput) ToEnvironmentTypeOutputWithContext(ctx context.Context) EnvironmentTypeOutput {
	return o
}

// The kind of the environment.
func (o EnvironmentTypeOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentType) string { return v.Kind }).(pulumi.StringOutput)
}

// Resource location
func (o EnvironmentTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource name
func (o EnvironmentTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentType) string { return v.Name }).(pulumi.StringOutput)
}

// The sku determines the type of environment, either Gen1 (S1 or S2) or Gen2 (L1). For Gen1 environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
func (o EnvironmentTypeOutput) Sku() SkuResponseOutput {
	return o.ApplyT(func(v EnvironmentType) SkuResponse { return v.Sku }).(SkuResponseOutput)
}

// Resource tags
func (o EnvironmentTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v EnvironmentType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o EnvironmentTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentType) string { return v.Type }).(pulumi.StringOutput)
}

// An environment receives data from one or more event sources. Each event source has associated connection info that allows the Time Series Insights ingress pipeline to connect to and pull data from the event source
type EventSourceType struct {
	// The kind of the event source.
	Kind string `pulumi:"kind"`
	// Resource location
	Location string `pulumi:"location"`
	// Resource name
	Name string `pulumi:"name"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type string `pulumi:"type"`
}

// EventSourceTypeInput is an input type that accepts EventSourceTypeArgs and EventSourceTypeOutput values.
// You can construct a concrete instance of `EventSourceTypeInput` via:
//
//          EventSourceTypeArgs{...}
type EventSourceTypeInput interface {
	pulumi.Input

	ToEventSourceTypeOutput() EventSourceTypeOutput
	ToEventSourceTypeOutputWithContext(context.Context) EventSourceTypeOutput
}

// An environment receives data from one or more event sources. Each event source has associated connection info that allows the Time Series Insights ingress pipeline to connect to and pull data from the event source
type EventSourceTypeArgs struct {
	// The kind of the event source.
	Kind pulumi.StringInput `pulumi:"kind"`
	// Resource location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource name
	Name pulumi.StringInput `pulumi:"name"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringInput `pulumi:"type"`
}

func (EventSourceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceType)(nil)).Elem()
}

func (i EventSourceTypeArgs) ToEventSourceTypeOutput() EventSourceTypeOutput {
	return i.ToEventSourceTypeOutputWithContext(context.Background())
}

func (i EventSourceTypeArgs) ToEventSourceTypeOutputWithContext(ctx context.Context) EventSourceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceTypeOutput)
}

// An environment receives data from one or more event sources. Each event source has associated connection info that allows the Time Series Insights ingress pipeline to connect to and pull data from the event source
type EventSourceTypeOutput struct{ *pulumi.OutputState }

func (EventSourceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceType)(nil)).Elem()
}

func (o EventSourceTypeOutput) ToEventSourceTypeOutput() EventSourceTypeOutput {
	return o
}

func (o EventSourceTypeOutput) ToEventSourceTypeOutputWithContext(ctx context.Context) EventSourceTypeOutput {
	return o
}

// The kind of the event source.
func (o EventSourceTypeOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v EventSourceType) string { return v.Kind }).(pulumi.StringOutput)
}

// Resource location
func (o EventSourceTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v EventSourceType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource name
func (o EventSourceTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v EventSourceType) string { return v.Name }).(pulumi.StringOutput)
}

// Resource tags
func (o EventSourceTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v EventSourceType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o EventSourceTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EventSourceType) string { return v.Type }).(pulumi.StringOutput)
}

// An object that represents the local timestamp property. It contains the format of local timestamp that needs to be used and the corresponding timezone offset information. If a value isn't specified for localTimestamp, or if null, then the local timestamp will not be ingressed with the events.
type LocalTimestamp struct {
	// An enum that represents the format of the local timestamp property that needs to be set.
	Format *string `pulumi:"format"`
	// An object that represents the offset information for the local timestamp format specified. Should not be specified for LocalTimestampFormat - Embedded.
	TimeZoneOffset *LocalTimestampProperties `pulumi:"timeZoneOffset"`
}

// LocalTimestampInput is an input type that accepts LocalTimestampArgs and LocalTimestampOutput values.
// You can construct a concrete instance of `LocalTimestampInput` via:
//
//          LocalTimestampArgs{...}
type LocalTimestampInput interface {
	pulumi.Input

	ToLocalTimestampOutput() LocalTimestampOutput
	ToLocalTimestampOutputWithContext(context.Context) LocalTimestampOutput
}

// An object that represents the local timestamp property. It contains the format of local timestamp that needs to be used and the corresponding timezone offset information. If a value isn't specified for localTimestamp, or if null, then the local timestamp will not be ingressed with the events.
type LocalTimestampArgs struct {
	// An enum that represents the format of the local timestamp property that needs to be set.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// An object that represents the offset information for the local timestamp format specified. Should not be specified for LocalTimestampFormat - Embedded.
	TimeZoneOffset LocalTimestampPropertiesPtrInput `pulumi:"timeZoneOffset"`
}

func (LocalTimestampArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalTimestamp)(nil)).Elem()
}

func (i LocalTimestampArgs) ToLocalTimestampOutput() LocalTimestampOutput {
	return i.ToLocalTimestampOutputWithContext(context.Background())
}

func (i LocalTimestampArgs) ToLocalTimestampOutputWithContext(ctx context.Context) LocalTimestampOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalTimestampOutput)
}

func (i LocalTimestampArgs) ToLocalTimestampPtrOutput() LocalTimestampPtrOutput {
	return i.ToLocalTimestampPtrOutputWithContext(context.Background())
}

func (i LocalTimestampArgs) ToLocalTimestampPtrOutputWithContext(ctx context.Context) LocalTimestampPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalTimestampOutput).ToLocalTimestampPtrOutputWithContext(ctx)
}

// LocalTimestampPtrInput is an input type that accepts LocalTimestampArgs, LocalTimestampPtr and LocalTimestampPtrOutput values.
// You can construct a concrete instance of `LocalTimestampPtrInput` via:
//
//          LocalTimestampArgs{...}
//
//  or:
//
//          nil
type LocalTimestampPtrInput interface {
	pulumi.Input

	ToLocalTimestampPtrOutput() LocalTimestampPtrOutput
	ToLocalTimestampPtrOutputWithContext(context.Context) LocalTimestampPtrOutput
}

type localTimestampPtrType LocalTimestampArgs

func LocalTimestampPtr(v *LocalTimestampArgs) LocalTimestampPtrInput {
	return (*localTimestampPtrType)(v)
}

func (*localTimestampPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalTimestamp)(nil)).Elem()
}

func (i *localTimestampPtrType) ToLocalTimestampPtrOutput() LocalTimestampPtrOutput {
	return i.ToLocalTimestampPtrOutputWithContext(context.Background())
}

func (i *localTimestampPtrType) ToLocalTimestampPtrOutputWithContext(ctx context.Context) LocalTimestampPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalTimestampPtrOutput)
}

// An object that represents the local timestamp property. It contains the format of local timestamp that needs to be used and the corresponding timezone offset information. If a value isn't specified for localTimestamp, or if null, then the local timestamp will not be ingressed with the events.
type LocalTimestampOutput struct{ *pulumi.OutputState }

func (LocalTimestampOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalTimestamp)(nil)).Elem()
}

func (o LocalTimestampOutput) ToLocalTimestampOutput() LocalTimestampOutput {
	return o
}

func (o LocalTimestampOutput) ToLocalTimestampOutputWithContext(ctx context.Context) LocalTimestampOutput {
	return o
}

func (o LocalTimestampOutput) ToLocalTimestampPtrOutput() LocalTimestampPtrOutput {
	return o.ToLocalTimestampPtrOutputWithContext(context.Background())
}

func (o LocalTimestampOutput) ToLocalTimestampPtrOutputWithContext(ctx context.Context) LocalTimestampPtrOutput {
	return o.ApplyT(func(v LocalTimestamp) *LocalTimestamp {
		return &v
	}).(LocalTimestampPtrOutput)
}

// An enum that represents the format of the local timestamp property that needs to be set.
func (o LocalTimestampOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalTimestamp) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// An object that represents the offset information for the local timestamp format specified. Should not be specified for LocalTimestampFormat - Embedded.
func (o LocalTimestampOutput) TimeZoneOffset() LocalTimestampPropertiesPtrOutput {
	return o.ApplyT(func(v LocalTimestamp) *LocalTimestampProperties { return v.TimeZoneOffset }).(LocalTimestampPropertiesPtrOutput)
}

type LocalTimestampPtrOutput struct{ *pulumi.OutputState }

func (LocalTimestampPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalTimestamp)(nil)).Elem()
}

func (o LocalTimestampPtrOutput) ToLocalTimestampPtrOutput() LocalTimestampPtrOutput {
	return o
}

func (o LocalTimestampPtrOutput) ToLocalTimestampPtrOutputWithContext(ctx context.Context) LocalTimestampPtrOutput {
	return o
}

func (o LocalTimestampPtrOutput) Elem() LocalTimestampOutput {
	return o.ApplyT(func(v *LocalTimestamp) LocalTimestamp { return *v }).(LocalTimestampOutput)
}

// An enum that represents the format of the local timestamp property that needs to be set.
func (o LocalTimestampPtrOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalTimestamp) *string {
		if v == nil {
			return nil
		}
		return v.Format
	}).(pulumi.StringPtrOutput)
}

// An object that represents the offset information for the local timestamp format specified. Should not be specified for LocalTimestampFormat - Embedded.
func (o LocalTimestampPtrOutput) TimeZoneOffset() LocalTimestampPropertiesPtrOutput {
	return o.ApplyT(func(v *LocalTimestamp) *LocalTimestampProperties {
		if v == nil {
			return nil
		}
		return v.TimeZoneOffset
	}).(LocalTimestampPropertiesPtrOutput)
}

// An object that represents the offset information for the local timestamp format specified. Should not be specified for LocalTimestampFormat - Embedded.
type LocalTimestampProperties struct {
	// The event property that will be contain the offset information to calculate the local timestamp. When the LocalTimestampFormat is Iana, the property name will contain the name of the column which contains IANA Timezone Name (eg: Americas/Los Angeles). When LocalTimestampFormat is Timespan, it contains the name of property which contains values representing the offset (eg: P1D or 1.00:00:00)
	PropertyName *string `pulumi:"propertyName"`
}

// LocalTimestampPropertiesInput is an input type that accepts LocalTimestampPropertiesArgs and LocalTimestampPropertiesOutput values.
// You can construct a concrete instance of `LocalTimestampPropertiesInput` via:
//
//          LocalTimestampPropertiesArgs{...}
type LocalTimestampPropertiesInput interface {
	pulumi.Input

	ToLocalTimestampPropertiesOutput() LocalTimestampPropertiesOutput
	ToLocalTimestampPropertiesOutputWithContext(context.Context) LocalTimestampPropertiesOutput
}

// An object that represents the offset information for the local timestamp format specified. Should not be specified for LocalTimestampFormat - Embedded.
type LocalTimestampPropertiesArgs struct {
	// The event property that will be contain the offset information to calculate the local timestamp. When the LocalTimestampFormat is Iana, the property name will contain the name of the column which contains IANA Timezone Name (eg: Americas/Los Angeles). When LocalTimestampFormat is Timespan, it contains the name of property which contains values representing the offset (eg: P1D or 1.00:00:00)
	PropertyName pulumi.StringPtrInput `pulumi:"propertyName"`
}

func (LocalTimestampPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalTimestampProperties)(nil)).Elem()
}

func (i LocalTimestampPropertiesArgs) ToLocalTimestampPropertiesOutput() LocalTimestampPropertiesOutput {
	return i.ToLocalTimestampPropertiesOutputWithContext(context.Background())
}

func (i LocalTimestampPropertiesArgs) ToLocalTimestampPropertiesOutputWithContext(ctx context.Context) LocalTimestampPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalTimestampPropertiesOutput)
}

func (i LocalTimestampPropertiesArgs) ToLocalTimestampPropertiesPtrOutput() LocalTimestampPropertiesPtrOutput {
	return i.ToLocalTimestampPropertiesPtrOutputWithContext(context.Background())
}

func (i LocalTimestampPropertiesArgs) ToLocalTimestampPropertiesPtrOutputWithContext(ctx context.Context) LocalTimestampPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalTimestampPropertiesOutput).ToLocalTimestampPropertiesPtrOutputWithContext(ctx)
}

// LocalTimestampPropertiesPtrInput is an input type that accepts LocalTimestampPropertiesArgs, LocalTimestampPropertiesPtr and LocalTimestampPropertiesPtrOutput values.
// You can construct a concrete instance of `LocalTimestampPropertiesPtrInput` via:
//
//          LocalTimestampPropertiesArgs{...}
//
//  or:
//
//          nil
type LocalTimestampPropertiesPtrInput interface {
	pulumi.Input

	ToLocalTimestampPropertiesPtrOutput() LocalTimestampPropertiesPtrOutput
	ToLocalTimestampPropertiesPtrOutputWithContext(context.Context) LocalTimestampPropertiesPtrOutput
}

type localTimestampPropertiesPtrType LocalTimestampPropertiesArgs

func LocalTimestampPropertiesPtr(v *LocalTimestampPropertiesArgs) LocalTimestampPropertiesPtrInput {
	return (*localTimestampPropertiesPtrType)(v)
}

func (*localTimestampPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalTimestampProperties)(nil)).Elem()
}

func (i *localTimestampPropertiesPtrType) ToLocalTimestampPropertiesPtrOutput() LocalTimestampPropertiesPtrOutput {
	return i.ToLocalTimestampPropertiesPtrOutputWithContext(context.Background())
}

func (i *localTimestampPropertiesPtrType) ToLocalTimestampPropertiesPtrOutputWithContext(ctx context.Context) LocalTimestampPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalTimestampPropertiesPtrOutput)
}

// An object that represents the offset information for the local timestamp format specified. Should not be specified for LocalTimestampFormat - Embedded.
type LocalTimestampPropertiesOutput struct{ *pulumi.OutputState }

func (LocalTimestampPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalTimestampProperties)(nil)).Elem()
}

func (o LocalTimestampPropertiesOutput) ToLocalTimestampPropertiesOutput() LocalTimestampPropertiesOutput {
	return o
}

func (o LocalTimestampPropertiesOutput) ToLocalTimestampPropertiesOutputWithContext(ctx context.Context) LocalTimestampPropertiesOutput {
	return o
}

func (o LocalTimestampPropertiesOutput) ToLocalTimestampPropertiesPtrOutput() LocalTimestampPropertiesPtrOutput {
	return o.ToLocalTimestampPropertiesPtrOutputWithContext(context.Background())
}

func (o LocalTimestampPropertiesOutput) ToLocalTimestampPropertiesPtrOutputWithContext(ctx context.Context) LocalTimestampPropertiesPtrOutput {
	return o.ApplyT(func(v LocalTimestampProperties) *LocalTimestampProperties {
		return &v
	}).(LocalTimestampPropertiesPtrOutput)
}

// The event property that will be contain the offset information to calculate the local timestamp. When the LocalTimestampFormat is Iana, the property name will contain the name of the column which contains IANA Timezone Name (eg: Americas/Los Angeles). When LocalTimestampFormat is Timespan, it contains the name of property which contains values representing the offset (eg: P1D or 1.00:00:00)
func (o LocalTimestampPropertiesOutput) PropertyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalTimestampProperties) *string { return v.PropertyName }).(pulumi.StringPtrOutput)
}

type LocalTimestampPropertiesPtrOutput struct{ *pulumi.OutputState }

func (LocalTimestampPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalTimestampProperties)(nil)).Elem()
}

func (o LocalTimestampPropertiesPtrOutput) ToLocalTimestampPropertiesPtrOutput() LocalTimestampPropertiesPtrOutput {
	return o
}

func (o LocalTimestampPropertiesPtrOutput) ToLocalTimestampPropertiesPtrOutputWithContext(ctx context.Context) LocalTimestampPropertiesPtrOutput {
	return o
}

func (o LocalTimestampPropertiesPtrOutput) Elem() LocalTimestampPropertiesOutput {
	return o.ApplyT(func(v *LocalTimestampProperties) LocalTimestampProperties { return *v }).(LocalTimestampPropertiesOutput)
}

// The event property that will be contain the offset information to calculate the local timestamp. When the LocalTimestampFormat is Iana, the property name will contain the name of the column which contains IANA Timezone Name (eg: Americas/Los Angeles). When LocalTimestampFormat is Timespan, it contains the name of property which contains values representing the offset (eg: P1D or 1.00:00:00)
func (o LocalTimestampPropertiesPtrOutput) PropertyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalTimestampProperties) *string {
		if v == nil {
			return nil
		}
		return v.PropertyName
	}).(pulumi.StringPtrOutput)
}

// A reference data set provides metadata about the events in an environment. Metadata in the reference data set will be joined with events as they are read from event sources. The metadata that makes up the reference data set is uploaded or modified through the Time Series Insights data plane APIs.
type ReferenceDataSetType struct {
	// Resource location
	Location string `pulumi:"location"`
	// Resource name
	Name string `pulumi:"name"`
	// Properties of the reference data set.
	Properties ReferenceDataSetResourcePropertiesResponse `pulumi:"properties"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type string `pulumi:"type"`
}

// ReferenceDataSetTypeInput is an input type that accepts ReferenceDataSetTypeArgs and ReferenceDataSetTypeOutput values.
// You can construct a concrete instance of `ReferenceDataSetTypeInput` via:
//
//          ReferenceDataSetTypeArgs{...}
type ReferenceDataSetTypeInput interface {
	pulumi.Input

	ToReferenceDataSetTypeOutput() ReferenceDataSetTypeOutput
	ToReferenceDataSetTypeOutputWithContext(context.Context) ReferenceDataSetTypeOutput
}

// A reference data set provides metadata about the events in an environment. Metadata in the reference data set will be joined with events as they are read from event sources. The metadata that makes up the reference data set is uploaded or modified through the Time Series Insights data plane APIs.
type ReferenceDataSetTypeArgs struct {
	// Resource location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource name
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of the reference data set.
	Properties ReferenceDataSetResourcePropertiesResponseInput `pulumi:"properties"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringInput `pulumi:"type"`
}

func (ReferenceDataSetTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferenceDataSetType)(nil)).Elem()
}

func (i ReferenceDataSetTypeArgs) ToReferenceDataSetTypeOutput() ReferenceDataSetTypeOutput {
	return i.ToReferenceDataSetTypeOutputWithContext(context.Background())
}

func (i ReferenceDataSetTypeArgs) ToReferenceDataSetTypeOutputWithContext(ctx context.Context) ReferenceDataSetTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferenceDataSetTypeOutput)
}

// A reference data set provides metadata about the events in an environment. Metadata in the reference data set will be joined with events as they are read from event sources. The metadata that makes up the reference data set is uploaded or modified through the Time Series Insights data plane APIs.
type ReferenceDataSetTypeOutput struct{ *pulumi.OutputState }

func (ReferenceDataSetTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferenceDataSetType)(nil)).Elem()
}

func (o ReferenceDataSetTypeOutput) ToReferenceDataSetTypeOutput() ReferenceDataSetTypeOutput {
	return o
}

func (o ReferenceDataSetTypeOutput) ToReferenceDataSetTypeOutputWithContext(ctx context.Context) ReferenceDataSetTypeOutput {
	return o
}

// Resource location
func (o ReferenceDataSetTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v ReferenceDataSetType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource name
func (o ReferenceDataSetTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ReferenceDataSetType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the reference data set.
func (o ReferenceDataSetTypeOutput) Properties() ReferenceDataSetResourcePropertiesResponseOutput {
	return o.ApplyT(func(v ReferenceDataSetType) ReferenceDataSetResourcePropertiesResponse { return v.Properties }).(ReferenceDataSetResourcePropertiesResponseOutput)
}

// Resource tags
func (o ReferenceDataSetTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ReferenceDataSetType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o ReferenceDataSetTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ReferenceDataSetType) string { return v.Type }).(pulumi.StringOutput)
}

// Properties used to create a reference data set.
type ReferenceDataSetCreationProperties struct {
	// The reference data set key comparison behavior can be set using this property. By default, the value is 'Ordinal' - which means case sensitive key comparison will be performed while joining reference data with events or while adding new reference data. When 'OrdinalIgnoreCase' is set, case insensitive comparison will be used.
	DataStringComparisonBehavior *string `pulumi:"dataStringComparisonBehavior"`
	// The list of key properties for the reference data set.
	KeyProperties []ReferenceDataSetKeyProperty `pulumi:"keyProperties"`
}

// ReferenceDataSetCreationPropertiesInput is an input type that accepts ReferenceDataSetCreationPropertiesArgs and ReferenceDataSetCreationPropertiesOutput values.
// You can construct a concrete instance of `ReferenceDataSetCreationPropertiesInput` via:
//
//          ReferenceDataSetCreationPropertiesArgs{...}
type ReferenceDataSetCreationPropertiesInput interface {
	pulumi.Input

	ToReferenceDataSetCreationPropertiesOutput() ReferenceDataSetCreationPropertiesOutput
	ToReferenceDataSetCreationPropertiesOutputWithContext(context.Context) ReferenceDataSetCreationPropertiesOutput
}

// Properties used to create a reference data set.
type ReferenceDataSetCreationPropertiesArgs struct {
	// The reference data set key comparison behavior can be set using this property. By default, the value is 'Ordinal' - which means case sensitive key comparison will be performed while joining reference data with events or while adding new reference data. When 'OrdinalIgnoreCase' is set, case insensitive comparison will be used.
	DataStringComparisonBehavior pulumi.StringPtrInput `pulumi:"dataStringComparisonBehavior"`
	// The list of key properties for the reference data set.
	KeyProperties ReferenceDataSetKeyPropertyArrayInput `pulumi:"keyProperties"`
}

func (ReferenceDataSetCreationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferenceDataSetCreationProperties)(nil)).Elem()
}

func (i ReferenceDataSetCreationPropertiesArgs) ToReferenceDataSetCreationPropertiesOutput() ReferenceDataSetCreationPropertiesOutput {
	return i.ToReferenceDataSetCreationPropertiesOutputWithContext(context.Background())
}

func (i ReferenceDataSetCreationPropertiesArgs) ToReferenceDataSetCreationPropertiesOutputWithContext(ctx context.Context) ReferenceDataSetCreationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferenceDataSetCreationPropertiesOutput)
}

func (i ReferenceDataSetCreationPropertiesArgs) ToReferenceDataSetCreationPropertiesPtrOutput() ReferenceDataSetCreationPropertiesPtrOutput {
	return i.ToReferenceDataSetCreationPropertiesPtrOutputWithContext(context.Background())
}

func (i ReferenceDataSetCreationPropertiesArgs) ToReferenceDataSetCreationPropertiesPtrOutputWithContext(ctx context.Context) ReferenceDataSetCreationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferenceDataSetCreationPropertiesOutput).ToReferenceDataSetCreationPropertiesPtrOutputWithContext(ctx)
}

// ReferenceDataSetCreationPropertiesPtrInput is an input type that accepts ReferenceDataSetCreationPropertiesArgs, ReferenceDataSetCreationPropertiesPtr and ReferenceDataSetCreationPropertiesPtrOutput values.
// You can construct a concrete instance of `ReferenceDataSetCreationPropertiesPtrInput` via:
//
//          ReferenceDataSetCreationPropertiesArgs{...}
//
//  or:
//
//          nil
type ReferenceDataSetCreationPropertiesPtrInput interface {
	pulumi.Input

	ToReferenceDataSetCreationPropertiesPtrOutput() ReferenceDataSetCreationPropertiesPtrOutput
	ToReferenceDataSetCreationPropertiesPtrOutputWithContext(context.Context) ReferenceDataSetCreationPropertiesPtrOutput
}

type referenceDataSetCreationPropertiesPtrType ReferenceDataSetCreationPropertiesArgs

func ReferenceDataSetCreationPropertiesPtr(v *ReferenceDataSetCreationPropertiesArgs) ReferenceDataSetCreationPropertiesPtrInput {
	return (*referenceDataSetCreationPropertiesPtrType)(v)
}

func (*referenceDataSetCreationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReferenceDataSetCreationProperties)(nil)).Elem()
}

func (i *referenceDataSetCreationPropertiesPtrType) ToReferenceDataSetCreationPropertiesPtrOutput() ReferenceDataSetCreationPropertiesPtrOutput {
	return i.ToReferenceDataSetCreationPropertiesPtrOutputWithContext(context.Background())
}

func (i *referenceDataSetCreationPropertiesPtrType) ToReferenceDataSetCreationPropertiesPtrOutputWithContext(ctx context.Context) ReferenceDataSetCreationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferenceDataSetCreationPropertiesPtrOutput)
}

// Properties used to create a reference data set.
type ReferenceDataSetCreationPropertiesOutput struct{ *pulumi.OutputState }

func (ReferenceDataSetCreationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferenceDataSetCreationProperties)(nil)).Elem()
}

func (o ReferenceDataSetCreationPropertiesOutput) ToReferenceDataSetCreationPropertiesOutput() ReferenceDataSetCreationPropertiesOutput {
	return o
}

func (o ReferenceDataSetCreationPropertiesOutput) ToReferenceDataSetCreationPropertiesOutputWithContext(ctx context.Context) ReferenceDataSetCreationPropertiesOutput {
	return o
}

func (o ReferenceDataSetCreationPropertiesOutput) ToReferenceDataSetCreationPropertiesPtrOutput() ReferenceDataSetCreationPropertiesPtrOutput {
	return o.ToReferenceDataSetCreationPropertiesPtrOutputWithContext(context.Background())
}

func (o ReferenceDataSetCreationPropertiesOutput) ToReferenceDataSetCreationPropertiesPtrOutputWithContext(ctx context.Context) ReferenceDataSetCreationPropertiesPtrOutput {
	return o.ApplyT(func(v ReferenceDataSetCreationProperties) *ReferenceDataSetCreationProperties {
		return &v
	}).(ReferenceDataSetCreationPropertiesPtrOutput)
}

// The reference data set key comparison behavior can be set using this property. By default, the value is 'Ordinal' - which means case sensitive key comparison will be performed while joining reference data with events or while adding new reference data. When 'OrdinalIgnoreCase' is set, case insensitive comparison will be used.
func (o ReferenceDataSetCreationPropertiesOutput) DataStringComparisonBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReferenceDataSetCreationProperties) *string { return v.DataStringComparisonBehavior }).(pulumi.StringPtrOutput)
}

// The list of key properties for the reference data set.
func (o ReferenceDataSetCreationPropertiesOutput) KeyProperties() ReferenceDataSetKeyPropertyArrayOutput {
	return o.ApplyT(func(v ReferenceDataSetCreationProperties) []ReferenceDataSetKeyProperty { return v.KeyProperties }).(ReferenceDataSetKeyPropertyArrayOutput)
}

type ReferenceDataSetCreationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ReferenceDataSetCreationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReferenceDataSetCreationProperties)(nil)).Elem()
}

func (o ReferenceDataSetCreationPropertiesPtrOutput) ToReferenceDataSetCreationPropertiesPtrOutput() ReferenceDataSetCreationPropertiesPtrOutput {
	return o
}

func (o ReferenceDataSetCreationPropertiesPtrOutput) ToReferenceDataSetCreationPropertiesPtrOutputWithContext(ctx context.Context) ReferenceDataSetCreationPropertiesPtrOutput {
	return o
}

func (o ReferenceDataSetCreationPropertiesPtrOutput) Elem() ReferenceDataSetCreationPropertiesOutput {
	return o.ApplyT(func(v *ReferenceDataSetCreationProperties) ReferenceDataSetCreationProperties { return *v }).(ReferenceDataSetCreationPropertiesOutput)
}

// The reference data set key comparison behavior can be set using this property. By default, the value is 'Ordinal' - which means case sensitive key comparison will be performed while joining reference data with events or while adding new reference data. When 'OrdinalIgnoreCase' is set, case insensitive comparison will be used.
func (o ReferenceDataSetCreationPropertiesPtrOutput) DataStringComparisonBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReferenceDataSetCreationProperties) *string {
		if v == nil {
			return nil
		}
		return v.DataStringComparisonBehavior
	}).(pulumi.StringPtrOutput)
}

// The list of key properties for the reference data set.
func (o ReferenceDataSetCreationPropertiesPtrOutput) KeyProperties() ReferenceDataSetKeyPropertyArrayOutput {
	return o.ApplyT(func(v *ReferenceDataSetCreationProperties) []ReferenceDataSetKeyProperty {
		if v == nil {
			return nil
		}
		return v.KeyProperties
	}).(ReferenceDataSetKeyPropertyArrayOutput)
}

// A key property for the reference data set. A reference data set can have multiple key properties.
type ReferenceDataSetKeyProperty struct {
	// The name of the key property.
	Name *string `pulumi:"name"`
	// The type of the key property.
	Type *string `pulumi:"type"`
}

// ReferenceDataSetKeyPropertyInput is an input type that accepts ReferenceDataSetKeyPropertyArgs and ReferenceDataSetKeyPropertyOutput values.
// You can construct a concrete instance of `ReferenceDataSetKeyPropertyInput` via:
//
//          ReferenceDataSetKeyPropertyArgs{...}
type ReferenceDataSetKeyPropertyInput interface {
	pulumi.Input

	ToReferenceDataSetKeyPropertyOutput() ReferenceDataSetKeyPropertyOutput
	ToReferenceDataSetKeyPropertyOutputWithContext(context.Context) ReferenceDataSetKeyPropertyOutput
}

// A key property for the reference data set. A reference data set can have multiple key properties.
type ReferenceDataSetKeyPropertyArgs struct {
	// The name of the key property.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The type of the key property.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ReferenceDataSetKeyPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferenceDataSetKeyProperty)(nil)).Elem()
}

func (i ReferenceDataSetKeyPropertyArgs) ToReferenceDataSetKeyPropertyOutput() ReferenceDataSetKeyPropertyOutput {
	return i.ToReferenceDataSetKeyPropertyOutputWithContext(context.Background())
}

func (i ReferenceDataSetKeyPropertyArgs) ToReferenceDataSetKeyPropertyOutputWithContext(ctx context.Context) ReferenceDataSetKeyPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferenceDataSetKeyPropertyOutput)
}

// ReferenceDataSetKeyPropertyArrayInput is an input type that accepts ReferenceDataSetKeyPropertyArray and ReferenceDataSetKeyPropertyArrayOutput values.
// You can construct a concrete instance of `ReferenceDataSetKeyPropertyArrayInput` via:
//
//          ReferenceDataSetKeyPropertyArray{ ReferenceDataSetKeyPropertyArgs{...} }
type ReferenceDataSetKeyPropertyArrayInput interface {
	pulumi.Input

	ToReferenceDataSetKeyPropertyArrayOutput() ReferenceDataSetKeyPropertyArrayOutput
	ToReferenceDataSetKeyPropertyArrayOutputWithContext(context.Context) ReferenceDataSetKeyPropertyArrayOutput
}

type ReferenceDataSetKeyPropertyArray []ReferenceDataSetKeyPropertyInput

func (ReferenceDataSetKeyPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReferenceDataSetKeyProperty)(nil)).Elem()
}

func (i ReferenceDataSetKeyPropertyArray) ToReferenceDataSetKeyPropertyArrayOutput() ReferenceDataSetKeyPropertyArrayOutput {
	return i.ToReferenceDataSetKeyPropertyArrayOutputWithContext(context.Background())
}

func (i ReferenceDataSetKeyPropertyArray) ToReferenceDataSetKeyPropertyArrayOutputWithContext(ctx context.Context) ReferenceDataSetKeyPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferenceDataSetKeyPropertyArrayOutput)
}

// A key property for the reference data set. A reference data set can have multiple key properties.
type ReferenceDataSetKeyPropertyOutput struct{ *pulumi.OutputState }

func (ReferenceDataSetKeyPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferenceDataSetKeyProperty)(nil)).Elem()
}

func (o ReferenceDataSetKeyPropertyOutput) ToReferenceDataSetKeyPropertyOutput() ReferenceDataSetKeyPropertyOutput {
	return o
}

func (o ReferenceDataSetKeyPropertyOutput) ToReferenceDataSetKeyPropertyOutputWithContext(ctx context.Context) ReferenceDataSetKeyPropertyOutput {
	return o
}

// The name of the key property.
func (o ReferenceDataSetKeyPropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReferenceDataSetKeyProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of the key property.
func (o ReferenceDataSetKeyPropertyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReferenceDataSetKeyProperty) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ReferenceDataSetKeyPropertyArrayOutput struct{ *pulumi.OutputState }

func (ReferenceDataSetKeyPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReferenceDataSetKeyProperty)(nil)).Elem()
}

func (o ReferenceDataSetKeyPropertyArrayOutput) ToReferenceDataSetKeyPropertyArrayOutput() ReferenceDataSetKeyPropertyArrayOutput {
	return o
}

func (o ReferenceDataSetKeyPropertyArrayOutput) ToReferenceDataSetKeyPropertyArrayOutputWithContext(ctx context.Context) ReferenceDataSetKeyPropertyArrayOutput {
	return o
}

func (o ReferenceDataSetKeyPropertyArrayOutput) Index(i pulumi.IntInput) ReferenceDataSetKeyPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReferenceDataSetKeyProperty {
		return vs[0].([]ReferenceDataSetKeyProperty)[vs[1].(int)]
	}).(ReferenceDataSetKeyPropertyOutput)
}

// A key property for the reference data set. A reference data set can have multiple key properties.
type ReferenceDataSetKeyPropertyResponse struct {
	// The name of the key property.
	Name *string `pulumi:"name"`
	// The type of the key property.
	Type *string `pulumi:"type"`
}

// ReferenceDataSetKeyPropertyResponseInput is an input type that accepts ReferenceDataSetKeyPropertyResponseArgs and ReferenceDataSetKeyPropertyResponseOutput values.
// You can construct a concrete instance of `ReferenceDataSetKeyPropertyResponseInput` via:
//
//          ReferenceDataSetKeyPropertyResponseArgs{...}
type ReferenceDataSetKeyPropertyResponseInput interface {
	pulumi.Input

	ToReferenceDataSetKeyPropertyResponseOutput() ReferenceDataSetKeyPropertyResponseOutput
	ToReferenceDataSetKeyPropertyResponseOutputWithContext(context.Context) ReferenceDataSetKeyPropertyResponseOutput
}

// A key property for the reference data set. A reference data set can have multiple key properties.
type ReferenceDataSetKeyPropertyResponseArgs struct {
	// The name of the key property.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The type of the key property.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ReferenceDataSetKeyPropertyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferenceDataSetKeyPropertyResponse)(nil)).Elem()
}

func (i ReferenceDataSetKeyPropertyResponseArgs) ToReferenceDataSetKeyPropertyResponseOutput() ReferenceDataSetKeyPropertyResponseOutput {
	return i.ToReferenceDataSetKeyPropertyResponseOutputWithContext(context.Background())
}

func (i ReferenceDataSetKeyPropertyResponseArgs) ToReferenceDataSetKeyPropertyResponseOutputWithContext(ctx context.Context) ReferenceDataSetKeyPropertyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferenceDataSetKeyPropertyResponseOutput)
}

// ReferenceDataSetKeyPropertyResponseArrayInput is an input type that accepts ReferenceDataSetKeyPropertyResponseArray and ReferenceDataSetKeyPropertyResponseArrayOutput values.
// You can construct a concrete instance of `ReferenceDataSetKeyPropertyResponseArrayInput` via:
//
//          ReferenceDataSetKeyPropertyResponseArray{ ReferenceDataSetKeyPropertyResponseArgs{...} }
type ReferenceDataSetKeyPropertyResponseArrayInput interface {
	pulumi.Input

	ToReferenceDataSetKeyPropertyResponseArrayOutput() ReferenceDataSetKeyPropertyResponseArrayOutput
	ToReferenceDataSetKeyPropertyResponseArrayOutputWithContext(context.Context) ReferenceDataSetKeyPropertyResponseArrayOutput
}

type ReferenceDataSetKeyPropertyResponseArray []ReferenceDataSetKeyPropertyResponseInput

func (ReferenceDataSetKeyPropertyResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReferenceDataSetKeyPropertyResponse)(nil)).Elem()
}

func (i ReferenceDataSetKeyPropertyResponseArray) ToReferenceDataSetKeyPropertyResponseArrayOutput() ReferenceDataSetKeyPropertyResponseArrayOutput {
	return i.ToReferenceDataSetKeyPropertyResponseArrayOutputWithContext(context.Background())
}

func (i ReferenceDataSetKeyPropertyResponseArray) ToReferenceDataSetKeyPropertyResponseArrayOutputWithContext(ctx context.Context) ReferenceDataSetKeyPropertyResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferenceDataSetKeyPropertyResponseArrayOutput)
}

// A key property for the reference data set. A reference data set can have multiple key properties.
type ReferenceDataSetKeyPropertyResponseOutput struct{ *pulumi.OutputState }

func (ReferenceDataSetKeyPropertyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferenceDataSetKeyPropertyResponse)(nil)).Elem()
}

func (o ReferenceDataSetKeyPropertyResponseOutput) ToReferenceDataSetKeyPropertyResponseOutput() ReferenceDataSetKeyPropertyResponseOutput {
	return o
}

func (o ReferenceDataSetKeyPropertyResponseOutput) ToReferenceDataSetKeyPropertyResponseOutputWithContext(ctx context.Context) ReferenceDataSetKeyPropertyResponseOutput {
	return o
}

// The name of the key property.
func (o ReferenceDataSetKeyPropertyResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReferenceDataSetKeyPropertyResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of the key property.
func (o ReferenceDataSetKeyPropertyResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReferenceDataSetKeyPropertyResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ReferenceDataSetKeyPropertyResponseArrayOutput struct{ *pulumi.OutputState }

func (ReferenceDataSetKeyPropertyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReferenceDataSetKeyPropertyResponse)(nil)).Elem()
}

func (o ReferenceDataSetKeyPropertyResponseArrayOutput) ToReferenceDataSetKeyPropertyResponseArrayOutput() ReferenceDataSetKeyPropertyResponseArrayOutput {
	return o
}

func (o ReferenceDataSetKeyPropertyResponseArrayOutput) ToReferenceDataSetKeyPropertyResponseArrayOutputWithContext(ctx context.Context) ReferenceDataSetKeyPropertyResponseArrayOutput {
	return o
}

func (o ReferenceDataSetKeyPropertyResponseArrayOutput) Index(i pulumi.IntInput) ReferenceDataSetKeyPropertyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReferenceDataSetKeyPropertyResponse {
		return vs[0].([]ReferenceDataSetKeyPropertyResponse)[vs[1].(int)]
	}).(ReferenceDataSetKeyPropertyResponseOutput)
}

// Properties of the reference data set.
type ReferenceDataSetResourcePropertiesResponse struct {
	// The time the resource was created.
	CreationTime string `pulumi:"creationTime"`
	// The reference data set key comparison behavior can be set using this property. By default, the value is 'Ordinal' - which means case sensitive key comparison will be performed while joining reference data with events or while adding new reference data. When 'OrdinalIgnoreCase' is set, case insensitive comparison will be used.
	DataStringComparisonBehavior *string `pulumi:"dataStringComparisonBehavior"`
	// The list of key properties for the reference data set.
	KeyProperties []ReferenceDataSetKeyPropertyResponse `pulumi:"keyProperties"`
	// Provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// ReferenceDataSetResourcePropertiesResponseInput is an input type that accepts ReferenceDataSetResourcePropertiesResponseArgs and ReferenceDataSetResourcePropertiesResponseOutput values.
// You can construct a concrete instance of `ReferenceDataSetResourcePropertiesResponseInput` via:
//
//          ReferenceDataSetResourcePropertiesResponseArgs{...}
type ReferenceDataSetResourcePropertiesResponseInput interface {
	pulumi.Input

	ToReferenceDataSetResourcePropertiesResponseOutput() ReferenceDataSetResourcePropertiesResponseOutput
	ToReferenceDataSetResourcePropertiesResponseOutputWithContext(context.Context) ReferenceDataSetResourcePropertiesResponseOutput
}

// Properties of the reference data set.
type ReferenceDataSetResourcePropertiesResponseArgs struct {
	// The time the resource was created.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The reference data set key comparison behavior can be set using this property. By default, the value is 'Ordinal' - which means case sensitive key comparison will be performed while joining reference data with events or while adding new reference data. When 'OrdinalIgnoreCase' is set, case insensitive comparison will be used.
	DataStringComparisonBehavior pulumi.StringPtrInput `pulumi:"dataStringComparisonBehavior"`
	// The list of key properties for the reference data set.
	KeyProperties ReferenceDataSetKeyPropertyResponseArrayInput `pulumi:"keyProperties"`
	// Provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (ReferenceDataSetResourcePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferenceDataSetResourcePropertiesResponse)(nil)).Elem()
}

func (i ReferenceDataSetResourcePropertiesResponseArgs) ToReferenceDataSetResourcePropertiesResponseOutput() ReferenceDataSetResourcePropertiesResponseOutput {
	return i.ToReferenceDataSetResourcePropertiesResponseOutputWithContext(context.Background())
}

func (i ReferenceDataSetResourcePropertiesResponseArgs) ToReferenceDataSetResourcePropertiesResponseOutputWithContext(ctx context.Context) ReferenceDataSetResourcePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferenceDataSetResourcePropertiesResponseOutput)
}

func (i ReferenceDataSetResourcePropertiesResponseArgs) ToReferenceDataSetResourcePropertiesResponsePtrOutput() ReferenceDataSetResourcePropertiesResponsePtrOutput {
	return i.ToReferenceDataSetResourcePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ReferenceDataSetResourcePropertiesResponseArgs) ToReferenceDataSetResourcePropertiesResponsePtrOutputWithContext(ctx context.Context) ReferenceDataSetResourcePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferenceDataSetResourcePropertiesResponseOutput).ToReferenceDataSetResourcePropertiesResponsePtrOutputWithContext(ctx)
}

// ReferenceDataSetResourcePropertiesResponsePtrInput is an input type that accepts ReferenceDataSetResourcePropertiesResponseArgs, ReferenceDataSetResourcePropertiesResponsePtr and ReferenceDataSetResourcePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ReferenceDataSetResourcePropertiesResponsePtrInput` via:
//
//          ReferenceDataSetResourcePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ReferenceDataSetResourcePropertiesResponsePtrInput interface {
	pulumi.Input

	ToReferenceDataSetResourcePropertiesResponsePtrOutput() ReferenceDataSetResourcePropertiesResponsePtrOutput
	ToReferenceDataSetResourcePropertiesResponsePtrOutputWithContext(context.Context) ReferenceDataSetResourcePropertiesResponsePtrOutput
}

type referenceDataSetResourcePropertiesResponsePtrType ReferenceDataSetResourcePropertiesResponseArgs

func ReferenceDataSetResourcePropertiesResponsePtr(v *ReferenceDataSetResourcePropertiesResponseArgs) ReferenceDataSetResourcePropertiesResponsePtrInput {
	return (*referenceDataSetResourcePropertiesResponsePtrType)(v)
}

func (*referenceDataSetResourcePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReferenceDataSetResourcePropertiesResponse)(nil)).Elem()
}

func (i *referenceDataSetResourcePropertiesResponsePtrType) ToReferenceDataSetResourcePropertiesResponsePtrOutput() ReferenceDataSetResourcePropertiesResponsePtrOutput {
	return i.ToReferenceDataSetResourcePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *referenceDataSetResourcePropertiesResponsePtrType) ToReferenceDataSetResourcePropertiesResponsePtrOutputWithContext(ctx context.Context) ReferenceDataSetResourcePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferenceDataSetResourcePropertiesResponsePtrOutput)
}

// Properties of the reference data set.
type ReferenceDataSetResourcePropertiesResponseOutput struct{ *pulumi.OutputState }

func (ReferenceDataSetResourcePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferenceDataSetResourcePropertiesResponse)(nil)).Elem()
}

func (o ReferenceDataSetResourcePropertiesResponseOutput) ToReferenceDataSetResourcePropertiesResponseOutput() ReferenceDataSetResourcePropertiesResponseOutput {
	return o
}

func (o ReferenceDataSetResourcePropertiesResponseOutput) ToReferenceDataSetResourcePropertiesResponseOutputWithContext(ctx context.Context) ReferenceDataSetResourcePropertiesResponseOutput {
	return o
}

func (o ReferenceDataSetResourcePropertiesResponseOutput) ToReferenceDataSetResourcePropertiesResponsePtrOutput() ReferenceDataSetResourcePropertiesResponsePtrOutput {
	return o.ToReferenceDataSetResourcePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ReferenceDataSetResourcePropertiesResponseOutput) ToReferenceDataSetResourcePropertiesResponsePtrOutputWithContext(ctx context.Context) ReferenceDataSetResourcePropertiesResponsePtrOutput {
	return o.ApplyT(func(v ReferenceDataSetResourcePropertiesResponse) *ReferenceDataSetResourcePropertiesResponse {
		return &v
	}).(ReferenceDataSetResourcePropertiesResponsePtrOutput)
}

// The time the resource was created.
func (o ReferenceDataSetResourcePropertiesResponseOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v ReferenceDataSetResourcePropertiesResponse) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The reference data set key comparison behavior can be set using this property. By default, the value is 'Ordinal' - which means case sensitive key comparison will be performed while joining reference data with events or while adding new reference data. When 'OrdinalIgnoreCase' is set, case insensitive comparison will be used.
func (o ReferenceDataSetResourcePropertiesResponseOutput) DataStringComparisonBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReferenceDataSetResourcePropertiesResponse) *string { return v.DataStringComparisonBehavior }).(pulumi.StringPtrOutput)
}

// The list of key properties for the reference data set.
func (o ReferenceDataSetResourcePropertiesResponseOutput) KeyProperties() ReferenceDataSetKeyPropertyResponseArrayOutput {
	return o.ApplyT(func(v ReferenceDataSetResourcePropertiesResponse) []ReferenceDataSetKeyPropertyResponse {
		return v.KeyProperties
	}).(ReferenceDataSetKeyPropertyResponseArrayOutput)
}

// Provisioning state of the resource.
func (o ReferenceDataSetResourcePropertiesResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReferenceDataSetResourcePropertiesResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type ReferenceDataSetResourcePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ReferenceDataSetResourcePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReferenceDataSetResourcePropertiesResponse)(nil)).Elem()
}

func (o ReferenceDataSetResourcePropertiesResponsePtrOutput) ToReferenceDataSetResourcePropertiesResponsePtrOutput() ReferenceDataSetResourcePropertiesResponsePtrOutput {
	return o
}

func (o ReferenceDataSetResourcePropertiesResponsePtrOutput) ToReferenceDataSetResourcePropertiesResponsePtrOutputWithContext(ctx context.Context) ReferenceDataSetResourcePropertiesResponsePtrOutput {
	return o
}

func (o ReferenceDataSetResourcePropertiesResponsePtrOutput) Elem() ReferenceDataSetResourcePropertiesResponseOutput {
	return o.ApplyT(func(v *ReferenceDataSetResourcePropertiesResponse) ReferenceDataSetResourcePropertiesResponse {
		return *v
	}).(ReferenceDataSetResourcePropertiesResponseOutput)
}

// The time the resource was created.
func (o ReferenceDataSetResourcePropertiesResponsePtrOutput) CreationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReferenceDataSetResourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreationTime
	}).(pulumi.StringPtrOutput)
}

// The reference data set key comparison behavior can be set using this property. By default, the value is 'Ordinal' - which means case sensitive key comparison will be performed while joining reference data with events or while adding new reference data. When 'OrdinalIgnoreCase' is set, case insensitive comparison will be used.
func (o ReferenceDataSetResourcePropertiesResponsePtrOutput) DataStringComparisonBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReferenceDataSetResourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DataStringComparisonBehavior
	}).(pulumi.StringPtrOutput)
}

// The list of key properties for the reference data set.
func (o ReferenceDataSetResourcePropertiesResponsePtrOutput) KeyProperties() ReferenceDataSetKeyPropertyResponseArrayOutput {
	return o.ApplyT(func(v *ReferenceDataSetResourcePropertiesResponse) []ReferenceDataSetKeyPropertyResponse {
		if v == nil {
			return nil
		}
		return v.KeyProperties
	}).(ReferenceDataSetKeyPropertyResponseArrayOutput)
}

// Provisioning state of the resource.
func (o ReferenceDataSetResourcePropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReferenceDataSetResourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The sku determines the type of environment, either Gen1 (S1 or S2) or Gen2 (L1). For Gen1 environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
type Sku struct {
	// The capacity of the sku. For Gen1 environments, this value can be changed to support scale out of environments after they have been created.
	Capacity int `pulumi:"capacity"`
	// The name of this SKU.
	Name string `pulumi:"name"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//          SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// The sku determines the type of environment, either Gen1 (S1 or S2) or Gen2 (L1). For Gen1 environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
type SkuArgs struct {
	// The capacity of the sku. For Gen1 environments, this value can be changed to support scale out of environments after they have been created.
	Capacity pulumi.IntInput `pulumi:"capacity"`
	// The name of this SKU.
	Name pulumi.StringInput `pulumi:"name"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//          SkuArgs{...}
//
//  or:
//
//          nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// The sku determines the type of environment, either Gen1 (S1 or S2) or Gen2 (L1). For Gen1 environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyT(func(v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// The capacity of the sku. For Gen1 environments, this value can be changed to support scale out of environments after they have been created.
func (o SkuOutput) Capacity() pulumi.IntOutput {
	return o.ApplyT(func(v Sku) int { return v.Capacity }).(pulumi.IntOutput)
}

// The name of this SKU.
func (o SkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Sku) string { return v.Name }).(pulumi.StringOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku { return *v }).(SkuOutput)
}

// The capacity of the sku. For Gen1 environments, this value can be changed to support scale out of environments after they have been created.
func (o SkuPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Sku) *int {
		if v == nil {
			return nil
		}
		return &v.Capacity
	}).(pulumi.IntPtrOutput)
}

// The name of this SKU.
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The sku determines the type of environment, either Gen1 (S1 or S2) or Gen2 (L1). For Gen1 environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
type SkuResponse struct {
	// The capacity of the sku. For Gen1 environments, this value can be changed to support scale out of environments after they have been created.
	Capacity int `pulumi:"capacity"`
	// The name of this SKU.
	Name string `pulumi:"name"`
}

// SkuResponseInput is an input type that accepts SkuResponseArgs and SkuResponseOutput values.
// You can construct a concrete instance of `SkuResponseInput` via:
//
//          SkuResponseArgs{...}
type SkuResponseInput interface {
	pulumi.Input

	ToSkuResponseOutput() SkuResponseOutput
	ToSkuResponseOutputWithContext(context.Context) SkuResponseOutput
}

// The sku determines the type of environment, either Gen1 (S1 or S2) or Gen2 (L1). For Gen1 environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
type SkuResponseArgs struct {
	// The capacity of the sku. For Gen1 environments, this value can be changed to support scale out of environments after they have been created.
	Capacity pulumi.IntInput `pulumi:"capacity"`
	// The name of this SKU.
	Name pulumi.StringInput `pulumi:"name"`
}

func (SkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (i SkuResponseArgs) ToSkuResponseOutput() SkuResponseOutput {
	return i.ToSkuResponseOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput)
}

func (i SkuResponseArgs) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput).ToSkuResponsePtrOutputWithContext(ctx)
}

// SkuResponsePtrInput is an input type that accepts SkuResponseArgs, SkuResponsePtr and SkuResponsePtrOutput values.
// You can construct a concrete instance of `SkuResponsePtrInput` via:
//
//          SkuResponseArgs{...}
//
//  or:
//
//          nil
type SkuResponsePtrInput interface {
	pulumi.Input

	ToSkuResponsePtrOutput() SkuResponsePtrOutput
	ToSkuResponsePtrOutputWithContext(context.Context) SkuResponsePtrOutput
}

type skuResponsePtrType SkuResponseArgs

func SkuResponsePtr(v *SkuResponseArgs) SkuResponsePtrInput {
	return (*skuResponsePtrType)(v)
}

func (*skuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponsePtrOutput)
}

// The sku determines the type of environment, either Gen1 (S1 or S2) or Gen2 (L1). For Gen1 environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (o SkuResponseOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o.ApplyT(func(v SkuResponse) *SkuResponse {
		return &v
	}).(SkuResponsePtrOutput)
}

// The capacity of the sku. For Gen1 environments, this value can be changed to support scale out of environments after they have been created.
func (o SkuResponseOutput) Capacity() pulumi.IntOutput {
	return o.ApplyT(func(v SkuResponse) int { return v.Capacity }).(pulumi.IntOutput)
}

// The name of this SKU.
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse { return *v }).(SkuResponseOutput)
}

// The capacity of the sku. For Gen1 environments, this value can be changed to support scale out of environments after they have been created.
func (o SkuResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Capacity
	}).(pulumi.IntPtrOutput)
}

// The name of this SKU.
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AccessPolicyTypeOutput{})
	pulumi.RegisterOutputType(AccessPolicyResourcePropertiesOutput{})
	pulumi.RegisterOutputType(AccessPolicyResourcePropertiesPtrOutput{})
	pulumi.RegisterOutputType(AccessPolicyResourcePropertiesResponseOutput{})
	pulumi.RegisterOutputType(AccessPolicyResourcePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(EnvironmentTypeOutput{})
	pulumi.RegisterOutputType(EventSourceTypeOutput{})
	pulumi.RegisterOutputType(LocalTimestampOutput{})
	pulumi.RegisterOutputType(LocalTimestampPtrOutput{})
	pulumi.RegisterOutputType(LocalTimestampPropertiesOutput{})
	pulumi.RegisterOutputType(LocalTimestampPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ReferenceDataSetTypeOutput{})
	pulumi.RegisterOutputType(ReferenceDataSetCreationPropertiesOutput{})
	pulumi.RegisterOutputType(ReferenceDataSetCreationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ReferenceDataSetKeyPropertyOutput{})
	pulumi.RegisterOutputType(ReferenceDataSetKeyPropertyArrayOutput{})
	pulumi.RegisterOutputType(ReferenceDataSetKeyPropertyResponseOutput{})
	pulumi.RegisterOutputType(ReferenceDataSetKeyPropertyResponseArrayOutput{})
	pulumi.RegisterOutputType(ReferenceDataSetResourcePropertiesResponseOutput{})
	pulumi.RegisterOutputType(ReferenceDataSetResourcePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
}
