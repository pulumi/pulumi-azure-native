// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20180501

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The policy definition.
type PolicyDefinitionAtManagementGroupType struct {
	// The name of the policy definition.
	Name string `pulumi:"name"`
	// The policy definition properties.
	Properties PolicyDefinitionPropertiesResponse `pulumi:"properties"`
	// The type of the resource (Microsoft.Authorization/policyDefinitions).
	Type string `pulumi:"type"`
}

// PolicyDefinitionAtManagementGroupTypeInput is an input type that accepts PolicyDefinitionAtManagementGroupTypeArgs and PolicyDefinitionAtManagementGroupTypeOutput values.
// You can construct a concrete instance of `PolicyDefinitionAtManagementGroupTypeInput` via:
//
//          PolicyDefinitionAtManagementGroupTypeArgs{...}
type PolicyDefinitionAtManagementGroupTypeInput interface {
	pulumi.Input

	ToPolicyDefinitionAtManagementGroupTypeOutput() PolicyDefinitionAtManagementGroupTypeOutput
	ToPolicyDefinitionAtManagementGroupTypeOutputWithContext(context.Context) PolicyDefinitionAtManagementGroupTypeOutput
}

// The policy definition.
type PolicyDefinitionAtManagementGroupTypeArgs struct {
	// The name of the policy definition.
	Name pulumi.StringInput `pulumi:"name"`
	// The policy definition properties.
	Properties PolicyDefinitionPropertiesResponseInput `pulumi:"properties"`
	// The type of the resource (Microsoft.Authorization/policyDefinitions).
	Type pulumi.StringInput `pulumi:"type"`
}

func (PolicyDefinitionAtManagementGroupTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDefinitionAtManagementGroupType)(nil)).Elem()
}

func (i PolicyDefinitionAtManagementGroupTypeArgs) ToPolicyDefinitionAtManagementGroupTypeOutput() PolicyDefinitionAtManagementGroupTypeOutput {
	return i.ToPolicyDefinitionAtManagementGroupTypeOutputWithContext(context.Background())
}

func (i PolicyDefinitionAtManagementGroupTypeArgs) ToPolicyDefinitionAtManagementGroupTypeOutputWithContext(ctx context.Context) PolicyDefinitionAtManagementGroupTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDefinitionAtManagementGroupTypeOutput)
}

// The policy definition.
type PolicyDefinitionAtManagementGroupTypeOutput struct{ *pulumi.OutputState }

func (PolicyDefinitionAtManagementGroupTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDefinitionAtManagementGroupType)(nil)).Elem()
}

func (o PolicyDefinitionAtManagementGroupTypeOutput) ToPolicyDefinitionAtManagementGroupTypeOutput() PolicyDefinitionAtManagementGroupTypeOutput {
	return o
}

func (o PolicyDefinitionAtManagementGroupTypeOutput) ToPolicyDefinitionAtManagementGroupTypeOutputWithContext(ctx context.Context) PolicyDefinitionAtManagementGroupTypeOutput {
	return o
}

// The name of the policy definition.
func (o PolicyDefinitionAtManagementGroupTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyDefinitionAtManagementGroupType) string { return v.Name }).(pulumi.StringOutput)
}

// The policy definition properties.
func (o PolicyDefinitionAtManagementGroupTypeOutput) Properties() PolicyDefinitionPropertiesResponseOutput {
	return o.ApplyT(func(v PolicyDefinitionAtManagementGroupType) PolicyDefinitionPropertiesResponse { return v.Properties }).(PolicyDefinitionPropertiesResponseOutput)
}

// The type of the resource (Microsoft.Authorization/policyDefinitions).
func (o PolicyDefinitionAtManagementGroupTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyDefinitionAtManagementGroupType) string { return v.Type }).(pulumi.StringOutput)
}

// The policy definition properties.
type PolicyDefinitionPropertiesResponse struct {
	// The policy definition description.
	Description *string `pulumi:"description"`
	// The display name of the policy definition.
	DisplayName *string `pulumi:"displayName"`
	// The policy definition metadata.
	Metadata map[string]interface{} `pulumi:"metadata"`
	// The policy definition mode. Possible values are NotSpecified, Indexed, and All.
	Mode *string `pulumi:"mode"`
	// Required if a parameter is used in policy rule.
	Parameters map[string]interface{} `pulumi:"parameters"`
	// The policy rule.
	PolicyRule map[string]interface{} `pulumi:"policyRule"`
	// The type of policy definition. Possible values are NotSpecified, BuiltIn, and Custom.
	PolicyType *string `pulumi:"policyType"`
}

// PolicyDefinitionPropertiesResponseInput is an input type that accepts PolicyDefinitionPropertiesResponseArgs and PolicyDefinitionPropertiesResponseOutput values.
// You can construct a concrete instance of `PolicyDefinitionPropertiesResponseInput` via:
//
//          PolicyDefinitionPropertiesResponseArgs{...}
type PolicyDefinitionPropertiesResponseInput interface {
	pulumi.Input

	ToPolicyDefinitionPropertiesResponseOutput() PolicyDefinitionPropertiesResponseOutput
	ToPolicyDefinitionPropertiesResponseOutputWithContext(context.Context) PolicyDefinitionPropertiesResponseOutput
}

// The policy definition properties.
type PolicyDefinitionPropertiesResponseArgs struct {
	// The policy definition description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The display name of the policy definition.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The policy definition metadata.
	Metadata pulumi.MapInput `pulumi:"metadata"`
	// The policy definition mode. Possible values are NotSpecified, Indexed, and All.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Required if a parameter is used in policy rule.
	Parameters pulumi.MapInput `pulumi:"parameters"`
	// The policy rule.
	PolicyRule pulumi.MapInput `pulumi:"policyRule"`
	// The type of policy definition. Possible values are NotSpecified, BuiltIn, and Custom.
	PolicyType pulumi.StringPtrInput `pulumi:"policyType"`
}

func (PolicyDefinitionPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDefinitionPropertiesResponse)(nil)).Elem()
}

func (i PolicyDefinitionPropertiesResponseArgs) ToPolicyDefinitionPropertiesResponseOutput() PolicyDefinitionPropertiesResponseOutput {
	return i.ToPolicyDefinitionPropertiesResponseOutputWithContext(context.Background())
}

func (i PolicyDefinitionPropertiesResponseArgs) ToPolicyDefinitionPropertiesResponseOutputWithContext(ctx context.Context) PolicyDefinitionPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDefinitionPropertiesResponseOutput)
}

func (i PolicyDefinitionPropertiesResponseArgs) ToPolicyDefinitionPropertiesResponsePtrOutput() PolicyDefinitionPropertiesResponsePtrOutput {
	return i.ToPolicyDefinitionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i PolicyDefinitionPropertiesResponseArgs) ToPolicyDefinitionPropertiesResponsePtrOutputWithContext(ctx context.Context) PolicyDefinitionPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDefinitionPropertiesResponseOutput).ToPolicyDefinitionPropertiesResponsePtrOutputWithContext(ctx)
}

// PolicyDefinitionPropertiesResponsePtrInput is an input type that accepts PolicyDefinitionPropertiesResponseArgs, PolicyDefinitionPropertiesResponsePtr and PolicyDefinitionPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `PolicyDefinitionPropertiesResponsePtrInput` via:
//
//          PolicyDefinitionPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type PolicyDefinitionPropertiesResponsePtrInput interface {
	pulumi.Input

	ToPolicyDefinitionPropertiesResponsePtrOutput() PolicyDefinitionPropertiesResponsePtrOutput
	ToPolicyDefinitionPropertiesResponsePtrOutputWithContext(context.Context) PolicyDefinitionPropertiesResponsePtrOutput
}

type policyDefinitionPropertiesResponsePtrType PolicyDefinitionPropertiesResponseArgs

func PolicyDefinitionPropertiesResponsePtr(v *PolicyDefinitionPropertiesResponseArgs) PolicyDefinitionPropertiesResponsePtrInput {
	return (*policyDefinitionPropertiesResponsePtrType)(v)
}

func (*policyDefinitionPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyDefinitionPropertiesResponse)(nil)).Elem()
}

func (i *policyDefinitionPropertiesResponsePtrType) ToPolicyDefinitionPropertiesResponsePtrOutput() PolicyDefinitionPropertiesResponsePtrOutput {
	return i.ToPolicyDefinitionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *policyDefinitionPropertiesResponsePtrType) ToPolicyDefinitionPropertiesResponsePtrOutputWithContext(ctx context.Context) PolicyDefinitionPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDefinitionPropertiesResponsePtrOutput)
}

// The policy definition properties.
type PolicyDefinitionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (PolicyDefinitionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDefinitionPropertiesResponse)(nil)).Elem()
}

func (o PolicyDefinitionPropertiesResponseOutput) ToPolicyDefinitionPropertiesResponseOutput() PolicyDefinitionPropertiesResponseOutput {
	return o
}

func (o PolicyDefinitionPropertiesResponseOutput) ToPolicyDefinitionPropertiesResponseOutputWithContext(ctx context.Context) PolicyDefinitionPropertiesResponseOutput {
	return o
}

func (o PolicyDefinitionPropertiesResponseOutput) ToPolicyDefinitionPropertiesResponsePtrOutput() PolicyDefinitionPropertiesResponsePtrOutput {
	return o.ToPolicyDefinitionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o PolicyDefinitionPropertiesResponseOutput) ToPolicyDefinitionPropertiesResponsePtrOutputWithContext(ctx context.Context) PolicyDefinitionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v PolicyDefinitionPropertiesResponse) *PolicyDefinitionPropertiesResponse {
		return &v
	}).(PolicyDefinitionPropertiesResponsePtrOutput)
}

// The policy definition description.
func (o PolicyDefinitionPropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDefinitionPropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The display name of the policy definition.
func (o PolicyDefinitionPropertiesResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDefinitionPropertiesResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The policy definition metadata.
func (o PolicyDefinitionPropertiesResponseOutput) Metadata() pulumi.MapOutput {
	return o.ApplyT(func(v PolicyDefinitionPropertiesResponse) map[string]interface{} { return v.Metadata }).(pulumi.MapOutput)
}

// The policy definition mode. Possible values are NotSpecified, Indexed, and All.
func (o PolicyDefinitionPropertiesResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDefinitionPropertiesResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Required if a parameter is used in policy rule.
func (o PolicyDefinitionPropertiesResponseOutput) Parameters() pulumi.MapOutput {
	return o.ApplyT(func(v PolicyDefinitionPropertiesResponse) map[string]interface{} { return v.Parameters }).(pulumi.MapOutput)
}

// The policy rule.
func (o PolicyDefinitionPropertiesResponseOutput) PolicyRule() pulumi.MapOutput {
	return o.ApplyT(func(v PolicyDefinitionPropertiesResponse) map[string]interface{} { return v.PolicyRule }).(pulumi.MapOutput)
}

// The type of policy definition. Possible values are NotSpecified, BuiltIn, and Custom.
func (o PolicyDefinitionPropertiesResponseOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDefinitionPropertiesResponse) *string { return v.PolicyType }).(pulumi.StringPtrOutput)
}

type PolicyDefinitionPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (PolicyDefinitionPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyDefinitionPropertiesResponse)(nil)).Elem()
}

func (o PolicyDefinitionPropertiesResponsePtrOutput) ToPolicyDefinitionPropertiesResponsePtrOutput() PolicyDefinitionPropertiesResponsePtrOutput {
	return o
}

func (o PolicyDefinitionPropertiesResponsePtrOutput) ToPolicyDefinitionPropertiesResponsePtrOutputWithContext(ctx context.Context) PolicyDefinitionPropertiesResponsePtrOutput {
	return o
}

func (o PolicyDefinitionPropertiesResponsePtrOutput) Elem() PolicyDefinitionPropertiesResponseOutput {
	return o.ApplyT(func(v *PolicyDefinitionPropertiesResponse) PolicyDefinitionPropertiesResponse { return *v }).(PolicyDefinitionPropertiesResponseOutput)
}

// The policy definition description.
func (o PolicyDefinitionPropertiesResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyDefinitionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The display name of the policy definition.
func (o PolicyDefinitionPropertiesResponsePtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyDefinitionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// The policy definition metadata.
func (o PolicyDefinitionPropertiesResponsePtrOutput) Metadata() pulumi.MapOutput {
	return o.ApplyT(func(v *PolicyDefinitionPropertiesResponse) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(pulumi.MapOutput)
}

// The policy definition mode. Possible values are NotSpecified, Indexed, and All.
func (o PolicyDefinitionPropertiesResponsePtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyDefinitionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Required if a parameter is used in policy rule.
func (o PolicyDefinitionPropertiesResponsePtrOutput) Parameters() pulumi.MapOutput {
	return o.ApplyT(func(v *PolicyDefinitionPropertiesResponse) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.MapOutput)
}

// The policy rule.
func (o PolicyDefinitionPropertiesResponsePtrOutput) PolicyRule() pulumi.MapOutput {
	return o.ApplyT(func(v *PolicyDefinitionPropertiesResponse) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.PolicyRule
	}).(pulumi.MapOutput)
}

// The type of policy definition. Possible values are NotSpecified, BuiltIn, and Custom.
func (o PolicyDefinitionPropertiesResponsePtrOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyDefinitionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PolicyType
	}).(pulumi.StringPtrOutput)
}

// The policy definition reference.
type PolicyDefinitionReference struct {
	// Required if a parameter is used in policy rule.
	Parameters map[string]interface{} `pulumi:"parameters"`
	// The ID of the policy definition or policy set definition.
	PolicyDefinitionId *string `pulumi:"policyDefinitionId"`
}

// PolicyDefinitionReferenceInput is an input type that accepts PolicyDefinitionReferenceArgs and PolicyDefinitionReferenceOutput values.
// You can construct a concrete instance of `PolicyDefinitionReferenceInput` via:
//
//          PolicyDefinitionReferenceArgs{...}
type PolicyDefinitionReferenceInput interface {
	pulumi.Input

	ToPolicyDefinitionReferenceOutput() PolicyDefinitionReferenceOutput
	ToPolicyDefinitionReferenceOutputWithContext(context.Context) PolicyDefinitionReferenceOutput
}

// The policy definition reference.
type PolicyDefinitionReferenceArgs struct {
	// Required if a parameter is used in policy rule.
	Parameters pulumi.MapInput `pulumi:"parameters"`
	// The ID of the policy definition or policy set definition.
	PolicyDefinitionId pulumi.StringPtrInput `pulumi:"policyDefinitionId"`
}

func (PolicyDefinitionReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDefinitionReference)(nil)).Elem()
}

func (i PolicyDefinitionReferenceArgs) ToPolicyDefinitionReferenceOutput() PolicyDefinitionReferenceOutput {
	return i.ToPolicyDefinitionReferenceOutputWithContext(context.Background())
}

func (i PolicyDefinitionReferenceArgs) ToPolicyDefinitionReferenceOutputWithContext(ctx context.Context) PolicyDefinitionReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDefinitionReferenceOutput)
}

// PolicyDefinitionReferenceArrayInput is an input type that accepts PolicyDefinitionReferenceArray and PolicyDefinitionReferenceArrayOutput values.
// You can construct a concrete instance of `PolicyDefinitionReferenceArrayInput` via:
//
//          PolicyDefinitionReferenceArray{ PolicyDefinitionReferenceArgs{...} }
type PolicyDefinitionReferenceArrayInput interface {
	pulumi.Input

	ToPolicyDefinitionReferenceArrayOutput() PolicyDefinitionReferenceArrayOutput
	ToPolicyDefinitionReferenceArrayOutputWithContext(context.Context) PolicyDefinitionReferenceArrayOutput
}

type PolicyDefinitionReferenceArray []PolicyDefinitionReferenceInput

func (PolicyDefinitionReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyDefinitionReference)(nil)).Elem()
}

func (i PolicyDefinitionReferenceArray) ToPolicyDefinitionReferenceArrayOutput() PolicyDefinitionReferenceArrayOutput {
	return i.ToPolicyDefinitionReferenceArrayOutputWithContext(context.Background())
}

func (i PolicyDefinitionReferenceArray) ToPolicyDefinitionReferenceArrayOutputWithContext(ctx context.Context) PolicyDefinitionReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDefinitionReferenceArrayOutput)
}

// The policy definition reference.
type PolicyDefinitionReferenceOutput struct{ *pulumi.OutputState }

func (PolicyDefinitionReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDefinitionReference)(nil)).Elem()
}

func (o PolicyDefinitionReferenceOutput) ToPolicyDefinitionReferenceOutput() PolicyDefinitionReferenceOutput {
	return o
}

func (o PolicyDefinitionReferenceOutput) ToPolicyDefinitionReferenceOutputWithContext(ctx context.Context) PolicyDefinitionReferenceOutput {
	return o
}

// Required if a parameter is used in policy rule.
func (o PolicyDefinitionReferenceOutput) Parameters() pulumi.MapOutput {
	return o.ApplyT(func(v PolicyDefinitionReference) map[string]interface{} { return v.Parameters }).(pulumi.MapOutput)
}

// The ID of the policy definition or policy set definition.
func (o PolicyDefinitionReferenceOutput) PolicyDefinitionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDefinitionReference) *string { return v.PolicyDefinitionId }).(pulumi.StringPtrOutput)
}

type PolicyDefinitionReferenceArrayOutput struct{ *pulumi.OutputState }

func (PolicyDefinitionReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyDefinitionReference)(nil)).Elem()
}

func (o PolicyDefinitionReferenceArrayOutput) ToPolicyDefinitionReferenceArrayOutput() PolicyDefinitionReferenceArrayOutput {
	return o
}

func (o PolicyDefinitionReferenceArrayOutput) ToPolicyDefinitionReferenceArrayOutputWithContext(ctx context.Context) PolicyDefinitionReferenceArrayOutput {
	return o
}

func (o PolicyDefinitionReferenceArrayOutput) Index(i pulumi.IntInput) PolicyDefinitionReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyDefinitionReference {
		return vs[0].([]PolicyDefinitionReference)[vs[1].(int)]
	}).(PolicyDefinitionReferenceOutput)
}

// The policy definition reference.
type PolicyDefinitionReferenceResponse struct {
	// Required if a parameter is used in policy rule.
	Parameters map[string]interface{} `pulumi:"parameters"`
	// The ID of the policy definition or policy set definition.
	PolicyDefinitionId *string `pulumi:"policyDefinitionId"`
}

// PolicyDefinitionReferenceResponseInput is an input type that accepts PolicyDefinitionReferenceResponseArgs and PolicyDefinitionReferenceResponseOutput values.
// You can construct a concrete instance of `PolicyDefinitionReferenceResponseInput` via:
//
//          PolicyDefinitionReferenceResponseArgs{...}
type PolicyDefinitionReferenceResponseInput interface {
	pulumi.Input

	ToPolicyDefinitionReferenceResponseOutput() PolicyDefinitionReferenceResponseOutput
	ToPolicyDefinitionReferenceResponseOutputWithContext(context.Context) PolicyDefinitionReferenceResponseOutput
}

// The policy definition reference.
type PolicyDefinitionReferenceResponseArgs struct {
	// Required if a parameter is used in policy rule.
	Parameters pulumi.MapInput `pulumi:"parameters"`
	// The ID of the policy definition or policy set definition.
	PolicyDefinitionId pulumi.StringPtrInput `pulumi:"policyDefinitionId"`
}

func (PolicyDefinitionReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDefinitionReferenceResponse)(nil)).Elem()
}

func (i PolicyDefinitionReferenceResponseArgs) ToPolicyDefinitionReferenceResponseOutput() PolicyDefinitionReferenceResponseOutput {
	return i.ToPolicyDefinitionReferenceResponseOutputWithContext(context.Background())
}

func (i PolicyDefinitionReferenceResponseArgs) ToPolicyDefinitionReferenceResponseOutputWithContext(ctx context.Context) PolicyDefinitionReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDefinitionReferenceResponseOutput)
}

// PolicyDefinitionReferenceResponseArrayInput is an input type that accepts PolicyDefinitionReferenceResponseArray and PolicyDefinitionReferenceResponseArrayOutput values.
// You can construct a concrete instance of `PolicyDefinitionReferenceResponseArrayInput` via:
//
//          PolicyDefinitionReferenceResponseArray{ PolicyDefinitionReferenceResponseArgs{...} }
type PolicyDefinitionReferenceResponseArrayInput interface {
	pulumi.Input

	ToPolicyDefinitionReferenceResponseArrayOutput() PolicyDefinitionReferenceResponseArrayOutput
	ToPolicyDefinitionReferenceResponseArrayOutputWithContext(context.Context) PolicyDefinitionReferenceResponseArrayOutput
}

type PolicyDefinitionReferenceResponseArray []PolicyDefinitionReferenceResponseInput

func (PolicyDefinitionReferenceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyDefinitionReferenceResponse)(nil)).Elem()
}

func (i PolicyDefinitionReferenceResponseArray) ToPolicyDefinitionReferenceResponseArrayOutput() PolicyDefinitionReferenceResponseArrayOutput {
	return i.ToPolicyDefinitionReferenceResponseArrayOutputWithContext(context.Background())
}

func (i PolicyDefinitionReferenceResponseArray) ToPolicyDefinitionReferenceResponseArrayOutputWithContext(ctx context.Context) PolicyDefinitionReferenceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDefinitionReferenceResponseArrayOutput)
}

// The policy definition reference.
type PolicyDefinitionReferenceResponseOutput struct{ *pulumi.OutputState }

func (PolicyDefinitionReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDefinitionReferenceResponse)(nil)).Elem()
}

func (o PolicyDefinitionReferenceResponseOutput) ToPolicyDefinitionReferenceResponseOutput() PolicyDefinitionReferenceResponseOutput {
	return o
}

func (o PolicyDefinitionReferenceResponseOutput) ToPolicyDefinitionReferenceResponseOutputWithContext(ctx context.Context) PolicyDefinitionReferenceResponseOutput {
	return o
}

// Required if a parameter is used in policy rule.
func (o PolicyDefinitionReferenceResponseOutput) Parameters() pulumi.MapOutput {
	return o.ApplyT(func(v PolicyDefinitionReferenceResponse) map[string]interface{} { return v.Parameters }).(pulumi.MapOutput)
}

// The ID of the policy definition or policy set definition.
func (o PolicyDefinitionReferenceResponseOutput) PolicyDefinitionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDefinitionReferenceResponse) *string { return v.PolicyDefinitionId }).(pulumi.StringPtrOutput)
}

type PolicyDefinitionReferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (PolicyDefinitionReferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyDefinitionReferenceResponse)(nil)).Elem()
}

func (o PolicyDefinitionReferenceResponseArrayOutput) ToPolicyDefinitionReferenceResponseArrayOutput() PolicyDefinitionReferenceResponseArrayOutput {
	return o
}

func (o PolicyDefinitionReferenceResponseArrayOutput) ToPolicyDefinitionReferenceResponseArrayOutputWithContext(ctx context.Context) PolicyDefinitionReferenceResponseArrayOutput {
	return o
}

func (o PolicyDefinitionReferenceResponseArrayOutput) Index(i pulumi.IntInput) PolicyDefinitionReferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyDefinitionReferenceResponse {
		return vs[0].([]PolicyDefinitionReferenceResponse)[vs[1].(int)]
	}).(PolicyDefinitionReferenceResponseOutput)
}

// The policy set definition.
type PolicySetDefinitionAtManagementGroupType struct {
	// The name of the policy set definition.
	Name string `pulumi:"name"`
	// The policy definition properties.
	Properties PolicySetDefinitionPropertiesResponse `pulumi:"properties"`
	// The type of the resource (Microsoft.Authorization/policySetDefinitions).
	Type string `pulumi:"type"`
}

// PolicySetDefinitionAtManagementGroupTypeInput is an input type that accepts PolicySetDefinitionAtManagementGroupTypeArgs and PolicySetDefinitionAtManagementGroupTypeOutput values.
// You can construct a concrete instance of `PolicySetDefinitionAtManagementGroupTypeInput` via:
//
//          PolicySetDefinitionAtManagementGroupTypeArgs{...}
type PolicySetDefinitionAtManagementGroupTypeInput interface {
	pulumi.Input

	ToPolicySetDefinitionAtManagementGroupTypeOutput() PolicySetDefinitionAtManagementGroupTypeOutput
	ToPolicySetDefinitionAtManagementGroupTypeOutputWithContext(context.Context) PolicySetDefinitionAtManagementGroupTypeOutput
}

// The policy set definition.
type PolicySetDefinitionAtManagementGroupTypeArgs struct {
	// The name of the policy set definition.
	Name pulumi.StringInput `pulumi:"name"`
	// The policy definition properties.
	Properties PolicySetDefinitionPropertiesResponseInput `pulumi:"properties"`
	// The type of the resource (Microsoft.Authorization/policySetDefinitions).
	Type pulumi.StringInput `pulumi:"type"`
}

func (PolicySetDefinitionAtManagementGroupTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySetDefinitionAtManagementGroupType)(nil)).Elem()
}

func (i PolicySetDefinitionAtManagementGroupTypeArgs) ToPolicySetDefinitionAtManagementGroupTypeOutput() PolicySetDefinitionAtManagementGroupTypeOutput {
	return i.ToPolicySetDefinitionAtManagementGroupTypeOutputWithContext(context.Background())
}

func (i PolicySetDefinitionAtManagementGroupTypeArgs) ToPolicySetDefinitionAtManagementGroupTypeOutputWithContext(ctx context.Context) PolicySetDefinitionAtManagementGroupTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySetDefinitionAtManagementGroupTypeOutput)
}

// The policy set definition.
type PolicySetDefinitionAtManagementGroupTypeOutput struct{ *pulumi.OutputState }

func (PolicySetDefinitionAtManagementGroupTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySetDefinitionAtManagementGroupType)(nil)).Elem()
}

func (o PolicySetDefinitionAtManagementGroupTypeOutput) ToPolicySetDefinitionAtManagementGroupTypeOutput() PolicySetDefinitionAtManagementGroupTypeOutput {
	return o
}

func (o PolicySetDefinitionAtManagementGroupTypeOutput) ToPolicySetDefinitionAtManagementGroupTypeOutputWithContext(ctx context.Context) PolicySetDefinitionAtManagementGroupTypeOutput {
	return o
}

// The name of the policy set definition.
func (o PolicySetDefinitionAtManagementGroupTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PolicySetDefinitionAtManagementGroupType) string { return v.Name }).(pulumi.StringOutput)
}

// The policy definition properties.
func (o PolicySetDefinitionAtManagementGroupTypeOutput) Properties() PolicySetDefinitionPropertiesResponseOutput {
	return o.ApplyT(func(v PolicySetDefinitionAtManagementGroupType) PolicySetDefinitionPropertiesResponse {
		return v.Properties
	}).(PolicySetDefinitionPropertiesResponseOutput)
}

// The type of the resource (Microsoft.Authorization/policySetDefinitions).
func (o PolicySetDefinitionAtManagementGroupTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PolicySetDefinitionAtManagementGroupType) string { return v.Type }).(pulumi.StringOutput)
}

// The policy set definition properties.
type PolicySetDefinitionPropertiesResponse struct {
	// The policy set definition description.
	Description *string `pulumi:"description"`
	// The display name of the policy set definition.
	DisplayName *string `pulumi:"displayName"`
	// The policy set definition metadata.
	Metadata map[string]interface{} `pulumi:"metadata"`
	// The policy set definition parameters that can be used in policy definition references.
	Parameters map[string]interface{} `pulumi:"parameters"`
	// An array of policy definition references.
	PolicyDefinitions []PolicyDefinitionReferenceResponse `pulumi:"policyDefinitions"`
	// The type of policy definition. Possible values are NotSpecified, BuiltIn, and Custom.
	PolicyType *string `pulumi:"policyType"`
}

// PolicySetDefinitionPropertiesResponseInput is an input type that accepts PolicySetDefinitionPropertiesResponseArgs and PolicySetDefinitionPropertiesResponseOutput values.
// You can construct a concrete instance of `PolicySetDefinitionPropertiesResponseInput` via:
//
//          PolicySetDefinitionPropertiesResponseArgs{...}
type PolicySetDefinitionPropertiesResponseInput interface {
	pulumi.Input

	ToPolicySetDefinitionPropertiesResponseOutput() PolicySetDefinitionPropertiesResponseOutput
	ToPolicySetDefinitionPropertiesResponseOutputWithContext(context.Context) PolicySetDefinitionPropertiesResponseOutput
}

// The policy set definition properties.
type PolicySetDefinitionPropertiesResponseArgs struct {
	// The policy set definition description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The display name of the policy set definition.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The policy set definition metadata.
	Metadata pulumi.MapInput `pulumi:"metadata"`
	// The policy set definition parameters that can be used in policy definition references.
	Parameters pulumi.MapInput `pulumi:"parameters"`
	// An array of policy definition references.
	PolicyDefinitions PolicyDefinitionReferenceResponseArrayInput `pulumi:"policyDefinitions"`
	// The type of policy definition. Possible values are NotSpecified, BuiltIn, and Custom.
	PolicyType pulumi.StringPtrInput `pulumi:"policyType"`
}

func (PolicySetDefinitionPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySetDefinitionPropertiesResponse)(nil)).Elem()
}

func (i PolicySetDefinitionPropertiesResponseArgs) ToPolicySetDefinitionPropertiesResponseOutput() PolicySetDefinitionPropertiesResponseOutput {
	return i.ToPolicySetDefinitionPropertiesResponseOutputWithContext(context.Background())
}

func (i PolicySetDefinitionPropertiesResponseArgs) ToPolicySetDefinitionPropertiesResponseOutputWithContext(ctx context.Context) PolicySetDefinitionPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySetDefinitionPropertiesResponseOutput)
}

func (i PolicySetDefinitionPropertiesResponseArgs) ToPolicySetDefinitionPropertiesResponsePtrOutput() PolicySetDefinitionPropertiesResponsePtrOutput {
	return i.ToPolicySetDefinitionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i PolicySetDefinitionPropertiesResponseArgs) ToPolicySetDefinitionPropertiesResponsePtrOutputWithContext(ctx context.Context) PolicySetDefinitionPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySetDefinitionPropertiesResponseOutput).ToPolicySetDefinitionPropertiesResponsePtrOutputWithContext(ctx)
}

// PolicySetDefinitionPropertiesResponsePtrInput is an input type that accepts PolicySetDefinitionPropertiesResponseArgs, PolicySetDefinitionPropertiesResponsePtr and PolicySetDefinitionPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `PolicySetDefinitionPropertiesResponsePtrInput` via:
//
//          PolicySetDefinitionPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type PolicySetDefinitionPropertiesResponsePtrInput interface {
	pulumi.Input

	ToPolicySetDefinitionPropertiesResponsePtrOutput() PolicySetDefinitionPropertiesResponsePtrOutput
	ToPolicySetDefinitionPropertiesResponsePtrOutputWithContext(context.Context) PolicySetDefinitionPropertiesResponsePtrOutput
}

type policySetDefinitionPropertiesResponsePtrType PolicySetDefinitionPropertiesResponseArgs

func PolicySetDefinitionPropertiesResponsePtr(v *PolicySetDefinitionPropertiesResponseArgs) PolicySetDefinitionPropertiesResponsePtrInput {
	return (*policySetDefinitionPropertiesResponsePtrType)(v)
}

func (*policySetDefinitionPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicySetDefinitionPropertiesResponse)(nil)).Elem()
}

func (i *policySetDefinitionPropertiesResponsePtrType) ToPolicySetDefinitionPropertiesResponsePtrOutput() PolicySetDefinitionPropertiesResponsePtrOutput {
	return i.ToPolicySetDefinitionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *policySetDefinitionPropertiesResponsePtrType) ToPolicySetDefinitionPropertiesResponsePtrOutputWithContext(ctx context.Context) PolicySetDefinitionPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySetDefinitionPropertiesResponsePtrOutput)
}

// The policy set definition properties.
type PolicySetDefinitionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (PolicySetDefinitionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySetDefinitionPropertiesResponse)(nil)).Elem()
}

func (o PolicySetDefinitionPropertiesResponseOutput) ToPolicySetDefinitionPropertiesResponseOutput() PolicySetDefinitionPropertiesResponseOutput {
	return o
}

func (o PolicySetDefinitionPropertiesResponseOutput) ToPolicySetDefinitionPropertiesResponseOutputWithContext(ctx context.Context) PolicySetDefinitionPropertiesResponseOutput {
	return o
}

func (o PolicySetDefinitionPropertiesResponseOutput) ToPolicySetDefinitionPropertiesResponsePtrOutput() PolicySetDefinitionPropertiesResponsePtrOutput {
	return o.ToPolicySetDefinitionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o PolicySetDefinitionPropertiesResponseOutput) ToPolicySetDefinitionPropertiesResponsePtrOutputWithContext(ctx context.Context) PolicySetDefinitionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v PolicySetDefinitionPropertiesResponse) *PolicySetDefinitionPropertiesResponse {
		return &v
	}).(PolicySetDefinitionPropertiesResponsePtrOutput)
}

// The policy set definition description.
func (o PolicySetDefinitionPropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySetDefinitionPropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The display name of the policy set definition.
func (o PolicySetDefinitionPropertiesResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySetDefinitionPropertiesResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The policy set definition metadata.
func (o PolicySetDefinitionPropertiesResponseOutput) Metadata() pulumi.MapOutput {
	return o.ApplyT(func(v PolicySetDefinitionPropertiesResponse) map[string]interface{} { return v.Metadata }).(pulumi.MapOutput)
}

// The policy set definition parameters that can be used in policy definition references.
func (o PolicySetDefinitionPropertiesResponseOutput) Parameters() pulumi.MapOutput {
	return o.ApplyT(func(v PolicySetDefinitionPropertiesResponse) map[string]interface{} { return v.Parameters }).(pulumi.MapOutput)
}

// An array of policy definition references.
func (o PolicySetDefinitionPropertiesResponseOutput) PolicyDefinitions() PolicyDefinitionReferenceResponseArrayOutput {
	return o.ApplyT(func(v PolicySetDefinitionPropertiesResponse) []PolicyDefinitionReferenceResponse {
		return v.PolicyDefinitions
	}).(PolicyDefinitionReferenceResponseArrayOutput)
}

// The type of policy definition. Possible values are NotSpecified, BuiltIn, and Custom.
func (o PolicySetDefinitionPropertiesResponseOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySetDefinitionPropertiesResponse) *string { return v.PolicyType }).(pulumi.StringPtrOutput)
}

type PolicySetDefinitionPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (PolicySetDefinitionPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicySetDefinitionPropertiesResponse)(nil)).Elem()
}

func (o PolicySetDefinitionPropertiesResponsePtrOutput) ToPolicySetDefinitionPropertiesResponsePtrOutput() PolicySetDefinitionPropertiesResponsePtrOutput {
	return o
}

func (o PolicySetDefinitionPropertiesResponsePtrOutput) ToPolicySetDefinitionPropertiesResponsePtrOutputWithContext(ctx context.Context) PolicySetDefinitionPropertiesResponsePtrOutput {
	return o
}

func (o PolicySetDefinitionPropertiesResponsePtrOutput) Elem() PolicySetDefinitionPropertiesResponseOutput {
	return o.ApplyT(func(v *PolicySetDefinitionPropertiesResponse) PolicySetDefinitionPropertiesResponse { return *v }).(PolicySetDefinitionPropertiesResponseOutput)
}

// The policy set definition description.
func (o PolicySetDefinitionPropertiesResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySetDefinitionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The display name of the policy set definition.
func (o PolicySetDefinitionPropertiesResponsePtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySetDefinitionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// The policy set definition metadata.
func (o PolicySetDefinitionPropertiesResponsePtrOutput) Metadata() pulumi.MapOutput {
	return o.ApplyT(func(v *PolicySetDefinitionPropertiesResponse) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(pulumi.MapOutput)
}

// The policy set definition parameters that can be used in policy definition references.
func (o PolicySetDefinitionPropertiesResponsePtrOutput) Parameters() pulumi.MapOutput {
	return o.ApplyT(func(v *PolicySetDefinitionPropertiesResponse) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.MapOutput)
}

// An array of policy definition references.
func (o PolicySetDefinitionPropertiesResponsePtrOutput) PolicyDefinitions() PolicyDefinitionReferenceResponseArrayOutput {
	return o.ApplyT(func(v *PolicySetDefinitionPropertiesResponse) []PolicyDefinitionReferenceResponse {
		if v == nil {
			return nil
		}
		return v.PolicyDefinitions
	}).(PolicyDefinitionReferenceResponseArrayOutput)
}

// The type of policy definition. Possible values are NotSpecified, BuiltIn, and Custom.
func (o PolicySetDefinitionPropertiesResponsePtrOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySetDefinitionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PolicyType
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(PolicyDefinitionAtManagementGroupTypeOutput{})
	pulumi.RegisterOutputType(PolicyDefinitionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(PolicyDefinitionPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(PolicyDefinitionReferenceOutput{})
	pulumi.RegisterOutputType(PolicyDefinitionReferenceArrayOutput{})
	pulumi.RegisterOutputType(PolicyDefinitionReferenceResponseOutput{})
	pulumi.RegisterOutputType(PolicyDefinitionReferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(PolicySetDefinitionAtManagementGroupTypeOutput{})
	pulumi.RegisterOutputType(PolicySetDefinitionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(PolicySetDefinitionPropertiesResponsePtrOutput{})
}
