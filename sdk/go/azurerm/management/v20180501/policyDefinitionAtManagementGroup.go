// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20180501

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The policy definition.
type PolicyDefinitionAtManagementGroup struct {
	pulumi.CustomResourceState

	// The name of the policy definition.
	Name pulumi.StringOutput `pulumi:"name"`
	// The policy definition properties.
	Properties PolicyDefinitionPropertiesResponseOutput `pulumi:"properties"`
	// The type of the resource (Microsoft.Authorization/policyDefinitions).
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewPolicyDefinitionAtManagementGroup registers a new resource with the given unique name, arguments, and options.
func NewPolicyDefinitionAtManagementGroup(ctx *pulumi.Context,
	name string, args *PolicyDefinitionAtManagementGroupArgs, opts ...pulumi.ResourceOption) (*PolicyDefinitionAtManagementGroup, error) {
	if args == nil || args.ManagementGroupId == nil {
		return nil, errors.New("missing required argument 'ManagementGroupId'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil {
		args = &PolicyDefinitionAtManagementGroupArgs{}
	}
	var resource PolicyDefinitionAtManagementGroup
	err := ctx.RegisterResource("azurerm:management/v20180501:PolicyDefinitionAtManagementGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPolicyDefinitionAtManagementGroup gets an existing PolicyDefinitionAtManagementGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPolicyDefinitionAtManagementGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PolicyDefinitionAtManagementGroupState, opts ...pulumi.ResourceOption) (*PolicyDefinitionAtManagementGroup, error) {
	var resource PolicyDefinitionAtManagementGroup
	err := ctx.ReadResource("azurerm:management/v20180501:PolicyDefinitionAtManagementGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PolicyDefinitionAtManagementGroup resources.
type policyDefinitionAtManagementGroupState struct {
	// The name of the policy definition.
	Name *string `pulumi:"name"`
	// The policy definition properties.
	Properties *PolicyDefinitionPropertiesResponse `pulumi:"properties"`
	// The type of the resource (Microsoft.Authorization/policyDefinitions).
	Type *string `pulumi:"type"`
}

type PolicyDefinitionAtManagementGroupState struct {
	// The name of the policy definition.
	Name pulumi.StringPtrInput
	// The policy definition properties.
	Properties PolicyDefinitionPropertiesResponsePtrInput
	// The type of the resource (Microsoft.Authorization/policyDefinitions).
	Type pulumi.StringPtrInput
}

func (PolicyDefinitionAtManagementGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*policyDefinitionAtManagementGroupState)(nil)).Elem()
}

type policyDefinitionAtManagementGroupArgs struct {
	// The ID of the management group.
	ManagementGroupId string `pulumi:"managementGroupId"`
	// The name of the policy definition to create.
	Name string `pulumi:"name"`
	// The policy definition properties.
	Properties *PolicyDefinitionProperties `pulumi:"properties"`
}

// The set of arguments for constructing a PolicyDefinitionAtManagementGroup resource.
type PolicyDefinitionAtManagementGroupArgs struct {
	// The ID of the management group.
	ManagementGroupId pulumi.StringInput
	// The name of the policy definition to create.
	Name pulumi.StringInput
	// The policy definition properties.
	Properties PolicyDefinitionPropertiesPtrInput
}

func (PolicyDefinitionAtManagementGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*policyDefinitionAtManagementGroupArgs)(nil)).Elem()
}
