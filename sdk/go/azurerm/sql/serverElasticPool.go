// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sql

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Represents a database elastic pool.
type ServerElasticPool struct {
	pulumi.CustomResourceState

	// Kind of elastic pool.  This is metadata used for the Azure portal experience.
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Resource location.
	Location pulumi.StringOutput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The properties representing the resource.
	Properties ElasticPoolPropertiesResponseOutput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewServerElasticPool registers a new resource with the given unique name, arguments, and options.
func NewServerElasticPool(ctx *pulumi.Context,
	name string, args *ServerElasticPoolArgs, opts ...pulumi.ResourceOption) (*ServerElasticPool, error) {
	if args == nil || args.Location == nil {
		return nil, errors.New("missing required argument 'Location'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.ServerName == nil {
		return nil, errors.New("missing required argument 'ServerName'")
	}
	if args == nil {
		args = &ServerElasticPoolArgs{}
	}
	var resource ServerElasticPool
	err := ctx.RegisterResource("azurerm:sql:ServerElasticPool", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServerElasticPool gets an existing ServerElasticPool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServerElasticPool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServerElasticPoolState, opts ...pulumi.ResourceOption) (*ServerElasticPool, error) {
	var resource ServerElasticPool
	err := ctx.ReadResource("azurerm:sql:ServerElasticPool", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServerElasticPool resources.
type serverElasticPoolState struct {
	// Kind of elastic pool.  This is metadata used for the Azure portal experience.
	Kind *string `pulumi:"kind"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name *string `pulumi:"name"`
	// The properties representing the resource.
	Properties *ElasticPoolPropertiesResponse `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type *string `pulumi:"type"`
}

type ServerElasticPoolState struct {
	// Kind of elastic pool.  This is metadata used for the Azure portal experience.
	Kind pulumi.StringPtrInput
	// Resource location.
	Location pulumi.StringPtrInput
	// Resource name.
	Name pulumi.StringPtrInput
	// The properties representing the resource.
	Properties ElasticPoolPropertiesResponsePtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// Resource type.
	Type pulumi.StringPtrInput
}

func (ServerElasticPoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*serverElasticPoolState)(nil)).Elem()
}

type serverElasticPoolArgs struct {
	// Resource location.
	Location string `pulumi:"location"`
	// The name of the elastic pool to be operated on (updated or created).
	Name string `pulumi:"name"`
	// The properties representing the resource.
	Properties *ElasticPoolProperties `pulumi:"properties"`
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the server.
	ServerName string `pulumi:"serverName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a ServerElasticPool resource.
type ServerElasticPoolArgs struct {
	// Resource location.
	Location pulumi.StringInput
	// The name of the elastic pool to be operated on (updated or created).
	Name pulumi.StringInput
	// The properties representing the resource.
	Properties ElasticPoolPropertiesPtrInput
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName pulumi.StringInput
	// The name of the server.
	ServerName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (ServerElasticPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serverElasticPoolArgs)(nil)).Elem()
}
