// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package web

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Hybrid Connection contract. This is used to configure a Hybrid Connection.
type AppServiceHybridConnectionNamespaceRelay struct {
	pulumi.CustomResourceState

	// Kind of resource.
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Resource Name.
	Name pulumi.StringOutput `pulumi:"name"`
	// HybridConnection resource specific properties
	Properties HybridConnectionResponsePropertiesOutput `pulumi:"properties"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewAppServiceHybridConnectionNamespaceRelay registers a new resource with the given unique name, arguments, and options.
func NewAppServiceHybridConnectionNamespaceRelay(ctx *pulumi.Context,
	name string, args *AppServiceHybridConnectionNamespaceRelayArgs, opts ...pulumi.ResourceOption) (*AppServiceHybridConnectionNamespaceRelay, error) {
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.NamespaceName == nil {
		return nil, errors.New("missing required argument 'NamespaceName'")
	}
	if args == nil || args.RelayName == nil {
		return nil, errors.New("missing required argument 'RelayName'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &AppServiceHybridConnectionNamespaceRelayArgs{}
	}
	var resource AppServiceHybridConnectionNamespaceRelay
	err := ctx.RegisterResource("azurerm:web:AppServiceHybridConnectionNamespaceRelay", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppServiceHybridConnectionNamespaceRelay gets an existing AppServiceHybridConnectionNamespaceRelay resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppServiceHybridConnectionNamespaceRelay(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppServiceHybridConnectionNamespaceRelayState, opts ...pulumi.ResourceOption) (*AppServiceHybridConnectionNamespaceRelay, error) {
	var resource AppServiceHybridConnectionNamespaceRelay
	err := ctx.ReadResource("azurerm:web:AppServiceHybridConnectionNamespaceRelay", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppServiceHybridConnectionNamespaceRelay resources.
type appServiceHybridConnectionNamespaceRelayState struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name *string `pulumi:"name"`
	// HybridConnection resource specific properties
	Properties *HybridConnectionResponseProperties `pulumi:"properties"`
	// Resource type.
	Type *string `pulumi:"type"`
}

type AppServiceHybridConnectionNamespaceRelayState struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput
	// Resource Name.
	Name pulumi.StringPtrInput
	// HybridConnection resource specific properties
	Properties HybridConnectionResponsePropertiesPtrInput
	// Resource type.
	Type pulumi.StringPtrInput
}

func (AppServiceHybridConnectionNamespaceRelayState) ElementType() reflect.Type {
	return reflect.TypeOf((*appServiceHybridConnectionNamespaceRelayState)(nil)).Elem()
}

type appServiceHybridConnectionNamespaceRelayArgs struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// The name of the web app.
	Name string `pulumi:"name"`
	// The namespace for this hybrid connection.
	NamespaceName string `pulumi:"namespaceName"`
	// HybridConnection resource specific properties
	Properties *HybridConnectionProperties `pulumi:"properties"`
	// The relay name for this hybrid connection.
	RelayName string `pulumi:"relayName"`
	// Name of the resource group to which the resource belongs.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a AppServiceHybridConnectionNamespaceRelay resource.
type AppServiceHybridConnectionNamespaceRelayArgs struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput
	// The name of the web app.
	Name pulumi.StringInput
	// The namespace for this hybrid connection.
	NamespaceName pulumi.StringInput
	// HybridConnection resource specific properties
	Properties HybridConnectionPropertiesPtrInput
	// The relay name for this hybrid connection.
	RelayName pulumi.StringInput
	// Name of the resource group to which the resource belongs.
	ResourceGroupName pulumi.StringInput
}

func (AppServiceHybridConnectionNamespaceRelayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appServiceHybridConnectionNamespaceRelayArgs)(nil)).Elem()
}
