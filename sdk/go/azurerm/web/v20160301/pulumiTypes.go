// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20160301

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// SSL certificate for an app.
type CertificateType struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Location.
	Location string `pulumi:"location"`
	// Resource Name.
	Name string `pulumi:"name"`
	// Certificate resource specific properties
	Properties CertificateResponseProperties `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// CertificateTypeInput is an input type that accepts CertificateTypeArgs and CertificateTypeOutput values.
// You can construct a concrete instance of `CertificateTypeInput` via:
//
//          CertificateTypeArgs{...}
type CertificateTypeInput interface {
	pulumi.Input

	ToCertificateTypeOutput() CertificateTypeOutput
	ToCertificateTypeOutputWithContext(context.Context) CertificateTypeOutput
}

// SSL certificate for an app.
type CertificateTypeArgs struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Location.
	Location pulumi.StringInput `pulumi:"location"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// Certificate resource specific properties
	Properties CertificateResponsePropertiesInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (CertificateTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateType)(nil)).Elem()
}

func (i CertificateTypeArgs) ToCertificateTypeOutput() CertificateTypeOutput {
	return i.ToCertificateTypeOutputWithContext(context.Background())
}

func (i CertificateTypeArgs) ToCertificateTypeOutputWithContext(ctx context.Context) CertificateTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTypeOutput)
}

// SSL certificate for an app.
type CertificateTypeOutput struct{ *pulumi.OutputState }

func (CertificateTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateType)(nil)).Elem()
}

func (o CertificateTypeOutput) ToCertificateTypeOutput() CertificateTypeOutput {
	return o
}

func (o CertificateTypeOutput) ToCertificateTypeOutputWithContext(ctx context.Context) CertificateTypeOutput {
	return o
}

// Kind of resource.
func (o CertificateTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location.
func (o CertificateTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name.
func (o CertificateTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateType) string { return v.Name }).(pulumi.StringOutput)
}

// Certificate resource specific properties
func (o CertificateTypeOutput) Properties() CertificateResponsePropertiesOutput {
	return o.ApplyT(func(v CertificateType) CertificateResponseProperties { return v.Properties }).(CertificateResponsePropertiesOutput)
}

// Resource tags.
func (o CertificateTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v CertificateType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o CertificateTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateType) string { return v.Type }).(pulumi.StringOutput)
}

// Certificate resource specific properties
type CertificateResponseProperties struct {
	// Raw bytes of .cer file
	CerBlob string `pulumi:"cerBlob"`
	// Certificate expiration date.
	ExpirationDate string `pulumi:"expirationDate"`
	// Friendly name of the certificate.
	FriendlyName string `pulumi:"friendlyName"`
	// Region of the certificate.
	GeoRegion string `pulumi:"geoRegion"`
	// Host names the certificate applies to.
	HostNames []string `pulumi:"hostNames"`
	// Specification for the App Service Environment to use for the certificate.
	HostingEnvironmentProfile HostingEnvironmentProfileResponse `pulumi:"hostingEnvironmentProfile"`
	// Certificate issue Date.
	IssueDate string `pulumi:"issueDate"`
	// Certificate issuer.
	Issuer string `pulumi:"issuer"`
	// Key Vault Csm resource Id.
	KeyVaultId *string `pulumi:"keyVaultId"`
	// Key Vault secret name.
	KeyVaultSecretName *string `pulumi:"keyVaultSecretName"`
	// Status of the Key Vault secret.
	KeyVaultSecretStatus string `pulumi:"keyVaultSecretStatus"`
	// Certificate password.
	Password string `pulumi:"password"`
	// Pfx blob.
	PfxBlob *string `pulumi:"pfxBlob"`
	// Public key hash.
	PublicKeyHash string `pulumi:"publicKeyHash"`
	// Self link.
	SelfLink string `pulumi:"selfLink"`
	// Resource ID of the associated App Service plan, formatted as: "/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}".
	ServerFarmId *string `pulumi:"serverFarmId"`
	// App name.
	SiteName string `pulumi:"siteName"`
	// Subject name of the certificate.
	SubjectName string `pulumi:"subjectName"`
	// Certificate thumbprint.
	Thumbprint string `pulumi:"thumbprint"`
	// Is the certificate valid?.
	Valid bool `pulumi:"valid"`
}

// CertificateResponsePropertiesInput is an input type that accepts CertificateResponsePropertiesArgs and CertificateResponsePropertiesOutput values.
// You can construct a concrete instance of `CertificateResponsePropertiesInput` via:
//
//          CertificateResponsePropertiesArgs{...}
type CertificateResponsePropertiesInput interface {
	pulumi.Input

	ToCertificateResponsePropertiesOutput() CertificateResponsePropertiesOutput
	ToCertificateResponsePropertiesOutputWithContext(context.Context) CertificateResponsePropertiesOutput
}

// Certificate resource specific properties
type CertificateResponsePropertiesArgs struct {
	// Raw bytes of .cer file
	CerBlob pulumi.StringInput `pulumi:"cerBlob"`
	// Certificate expiration date.
	ExpirationDate pulumi.StringInput `pulumi:"expirationDate"`
	// Friendly name of the certificate.
	FriendlyName pulumi.StringInput `pulumi:"friendlyName"`
	// Region of the certificate.
	GeoRegion pulumi.StringInput `pulumi:"geoRegion"`
	// Host names the certificate applies to.
	HostNames pulumi.StringArrayInput `pulumi:"hostNames"`
	// Specification for the App Service Environment to use for the certificate.
	HostingEnvironmentProfile HostingEnvironmentProfileResponseInput `pulumi:"hostingEnvironmentProfile"`
	// Certificate issue Date.
	IssueDate pulumi.StringInput `pulumi:"issueDate"`
	// Certificate issuer.
	Issuer pulumi.StringInput `pulumi:"issuer"`
	// Key Vault Csm resource Id.
	KeyVaultId pulumi.StringPtrInput `pulumi:"keyVaultId"`
	// Key Vault secret name.
	KeyVaultSecretName pulumi.StringPtrInput `pulumi:"keyVaultSecretName"`
	// Status of the Key Vault secret.
	KeyVaultSecretStatus pulumi.StringInput `pulumi:"keyVaultSecretStatus"`
	// Certificate password.
	Password pulumi.StringInput `pulumi:"password"`
	// Pfx blob.
	PfxBlob pulumi.StringPtrInput `pulumi:"pfxBlob"`
	// Public key hash.
	PublicKeyHash pulumi.StringInput `pulumi:"publicKeyHash"`
	// Self link.
	SelfLink pulumi.StringInput `pulumi:"selfLink"`
	// Resource ID of the associated App Service plan, formatted as: "/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}".
	ServerFarmId pulumi.StringPtrInput `pulumi:"serverFarmId"`
	// App name.
	SiteName pulumi.StringInput `pulumi:"siteName"`
	// Subject name of the certificate.
	SubjectName pulumi.StringInput `pulumi:"subjectName"`
	// Certificate thumbprint.
	Thumbprint pulumi.StringInput `pulumi:"thumbprint"`
	// Is the certificate valid?.
	Valid pulumi.BoolInput `pulumi:"valid"`
}

func (CertificateResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateResponseProperties)(nil)).Elem()
}

func (i CertificateResponsePropertiesArgs) ToCertificateResponsePropertiesOutput() CertificateResponsePropertiesOutput {
	return i.ToCertificateResponsePropertiesOutputWithContext(context.Background())
}

func (i CertificateResponsePropertiesArgs) ToCertificateResponsePropertiesOutputWithContext(ctx context.Context) CertificateResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateResponsePropertiesOutput)
}

func (i CertificateResponsePropertiesArgs) ToCertificateResponsePropertiesPtrOutput() CertificateResponsePropertiesPtrOutput {
	return i.ToCertificateResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i CertificateResponsePropertiesArgs) ToCertificateResponsePropertiesPtrOutputWithContext(ctx context.Context) CertificateResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateResponsePropertiesOutput).ToCertificateResponsePropertiesPtrOutputWithContext(ctx)
}

// CertificateResponsePropertiesPtrInput is an input type that accepts CertificateResponsePropertiesArgs, CertificateResponsePropertiesPtr and CertificateResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `CertificateResponsePropertiesPtrInput` via:
//
//          CertificateResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type CertificateResponsePropertiesPtrInput interface {
	pulumi.Input

	ToCertificateResponsePropertiesPtrOutput() CertificateResponsePropertiesPtrOutput
	ToCertificateResponsePropertiesPtrOutputWithContext(context.Context) CertificateResponsePropertiesPtrOutput
}

type certificateResponsePropertiesPtrType CertificateResponsePropertiesArgs

func CertificateResponsePropertiesPtr(v *CertificateResponsePropertiesArgs) CertificateResponsePropertiesPtrInput {
	return (*certificateResponsePropertiesPtrType)(v)
}

func (*certificateResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateResponseProperties)(nil)).Elem()
}

func (i *certificateResponsePropertiesPtrType) ToCertificateResponsePropertiesPtrOutput() CertificateResponsePropertiesPtrOutput {
	return i.ToCertificateResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *certificateResponsePropertiesPtrType) ToCertificateResponsePropertiesPtrOutputWithContext(ctx context.Context) CertificateResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateResponsePropertiesPtrOutput)
}

// Certificate resource specific properties
type CertificateResponsePropertiesOutput struct{ *pulumi.OutputState }

func (CertificateResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateResponseProperties)(nil)).Elem()
}

func (o CertificateResponsePropertiesOutput) ToCertificateResponsePropertiesOutput() CertificateResponsePropertiesOutput {
	return o
}

func (o CertificateResponsePropertiesOutput) ToCertificateResponsePropertiesOutputWithContext(ctx context.Context) CertificateResponsePropertiesOutput {
	return o
}

func (o CertificateResponsePropertiesOutput) ToCertificateResponsePropertiesPtrOutput() CertificateResponsePropertiesPtrOutput {
	return o.ToCertificateResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o CertificateResponsePropertiesOutput) ToCertificateResponsePropertiesPtrOutputWithContext(ctx context.Context) CertificateResponsePropertiesPtrOutput {
	return o.ApplyT(func(v CertificateResponseProperties) *CertificateResponseProperties {
		return &v
	}).(CertificateResponsePropertiesPtrOutput)
}

// Raw bytes of .cer file
func (o CertificateResponsePropertiesOutput) CerBlob() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateResponseProperties) string { return v.CerBlob }).(pulumi.StringOutput)
}

// Certificate expiration date.
func (o CertificateResponsePropertiesOutput) ExpirationDate() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateResponseProperties) string { return v.ExpirationDate }).(pulumi.StringOutput)
}

// Friendly name of the certificate.
func (o CertificateResponsePropertiesOutput) FriendlyName() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateResponseProperties) string { return v.FriendlyName }).(pulumi.StringOutput)
}

// Region of the certificate.
func (o CertificateResponsePropertiesOutput) GeoRegion() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateResponseProperties) string { return v.GeoRegion }).(pulumi.StringOutput)
}

// Host names the certificate applies to.
func (o CertificateResponsePropertiesOutput) HostNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CertificateResponseProperties) []string { return v.HostNames }).(pulumi.StringArrayOutput)
}

// Specification for the App Service Environment to use for the certificate.
func (o CertificateResponsePropertiesOutput) HostingEnvironmentProfile() HostingEnvironmentProfileResponseOutput {
	return o.ApplyT(func(v CertificateResponseProperties) HostingEnvironmentProfileResponse {
		return v.HostingEnvironmentProfile
	}).(HostingEnvironmentProfileResponseOutput)
}

// Certificate issue Date.
func (o CertificateResponsePropertiesOutput) IssueDate() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateResponseProperties) string { return v.IssueDate }).(pulumi.StringOutput)
}

// Certificate issuer.
func (o CertificateResponsePropertiesOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateResponseProperties) string { return v.Issuer }).(pulumi.StringOutput)
}

// Key Vault Csm resource Id.
func (o CertificateResponsePropertiesOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateResponseProperties) *string { return v.KeyVaultId }).(pulumi.StringPtrOutput)
}

// Key Vault secret name.
func (o CertificateResponsePropertiesOutput) KeyVaultSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateResponseProperties) *string { return v.KeyVaultSecretName }).(pulumi.StringPtrOutput)
}

// Status of the Key Vault secret.
func (o CertificateResponsePropertiesOutput) KeyVaultSecretStatus() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateResponseProperties) string { return v.KeyVaultSecretStatus }).(pulumi.StringOutput)
}

// Certificate password.
func (o CertificateResponsePropertiesOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateResponseProperties) string { return v.Password }).(pulumi.StringOutput)
}

// Pfx blob.
func (o CertificateResponsePropertiesOutput) PfxBlob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateResponseProperties) *string { return v.PfxBlob }).(pulumi.StringPtrOutput)
}

// Public key hash.
func (o CertificateResponsePropertiesOutput) PublicKeyHash() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateResponseProperties) string { return v.PublicKeyHash }).(pulumi.StringOutput)
}

// Self link.
func (o CertificateResponsePropertiesOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateResponseProperties) string { return v.SelfLink }).(pulumi.StringOutput)
}

// Resource ID of the associated App Service plan, formatted as: "/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}".
func (o CertificateResponsePropertiesOutput) ServerFarmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateResponseProperties) *string { return v.ServerFarmId }).(pulumi.StringPtrOutput)
}

// App name.
func (o CertificateResponsePropertiesOutput) SiteName() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateResponseProperties) string { return v.SiteName }).(pulumi.StringOutput)
}

// Subject name of the certificate.
func (o CertificateResponsePropertiesOutput) SubjectName() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateResponseProperties) string { return v.SubjectName }).(pulumi.StringOutput)
}

// Certificate thumbprint.
func (o CertificateResponsePropertiesOutput) Thumbprint() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateResponseProperties) string { return v.Thumbprint }).(pulumi.StringOutput)
}

// Is the certificate valid?.
func (o CertificateResponsePropertiesOutput) Valid() pulumi.BoolOutput {
	return o.ApplyT(func(v CertificateResponseProperties) bool { return v.Valid }).(pulumi.BoolOutput)
}

type CertificateResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (CertificateResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateResponseProperties)(nil)).Elem()
}

func (o CertificateResponsePropertiesPtrOutput) ToCertificateResponsePropertiesPtrOutput() CertificateResponsePropertiesPtrOutput {
	return o
}

func (o CertificateResponsePropertiesPtrOutput) ToCertificateResponsePropertiesPtrOutputWithContext(ctx context.Context) CertificateResponsePropertiesPtrOutput {
	return o
}

func (o CertificateResponsePropertiesPtrOutput) Elem() CertificateResponsePropertiesOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) CertificateResponseProperties { return *v }).(CertificateResponsePropertiesOutput)
}

// Raw bytes of .cer file
func (o CertificateResponsePropertiesPtrOutput) CerBlob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.CerBlob
	}).(pulumi.StringPtrOutput)
}

// Certificate expiration date.
func (o CertificateResponsePropertiesPtrOutput) ExpirationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ExpirationDate
	}).(pulumi.StringPtrOutput)
}

// Friendly name of the certificate.
func (o CertificateResponsePropertiesPtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// Region of the certificate.
func (o CertificateResponsePropertiesPtrOutput) GeoRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.GeoRegion
	}).(pulumi.StringPtrOutput)
}

// Host names the certificate applies to.
func (o CertificateResponsePropertiesPtrOutput) HostNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) []string {
		if v == nil {
			return nil
		}
		return v.HostNames
	}).(pulumi.StringArrayOutput)
}

// Specification for the App Service Environment to use for the certificate.
func (o CertificateResponsePropertiesPtrOutput) HostingEnvironmentProfile() HostingEnvironmentProfileResponsePtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *HostingEnvironmentProfileResponse {
		if v == nil {
			return nil
		}
		return &v.HostingEnvironmentProfile
	}).(HostingEnvironmentProfileResponsePtrOutput)
}

// Certificate issue Date.
func (o CertificateResponsePropertiesPtrOutput) IssueDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.IssueDate
	}).(pulumi.StringPtrOutput)
}

// Certificate issuer.
func (o CertificateResponsePropertiesPtrOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Issuer
	}).(pulumi.StringPtrOutput)
}

// Key Vault Csm resource Id.
func (o CertificateResponsePropertiesPtrOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultId
	}).(pulumi.StringPtrOutput)
}

// Key Vault secret name.
func (o CertificateResponsePropertiesPtrOutput) KeyVaultSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultSecretName
	}).(pulumi.StringPtrOutput)
}

// Status of the Key Vault secret.
func (o CertificateResponsePropertiesPtrOutput) KeyVaultSecretStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.KeyVaultSecretStatus
	}).(pulumi.StringPtrOutput)
}

// Certificate password.
func (o CertificateResponsePropertiesPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// Pfx blob.
func (o CertificateResponsePropertiesPtrOutput) PfxBlob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.PfxBlob
	}).(pulumi.StringPtrOutput)
}

// Public key hash.
func (o CertificateResponsePropertiesPtrOutput) PublicKeyHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.PublicKeyHash
	}).(pulumi.StringPtrOutput)
}

// Self link.
func (o CertificateResponsePropertiesPtrOutput) SelfLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.SelfLink
	}).(pulumi.StringPtrOutput)
}

// Resource ID of the associated App Service plan, formatted as: "/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}".
func (o CertificateResponsePropertiesPtrOutput) ServerFarmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.ServerFarmId
	}).(pulumi.StringPtrOutput)
}

// App name.
func (o CertificateResponsePropertiesPtrOutput) SiteName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.SiteName
	}).(pulumi.StringPtrOutput)
}

// Subject name of the certificate.
func (o CertificateResponsePropertiesPtrOutput) SubjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.SubjectName
	}).(pulumi.StringPtrOutput)
}

// Certificate thumbprint.
func (o CertificateResponsePropertiesPtrOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Thumbprint
	}).(pulumi.StringPtrOutput)
}

// Is the certificate valid?.
func (o CertificateResponsePropertiesPtrOutput) Valid() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return &v.Valid
	}).(pulumi.BoolPtrOutput)
}

// Specification for an App Service Environment to use for this resource.
type HostingEnvironmentProfile struct {
	// Resource ID of the App Service Environment.
	Id *string `pulumi:"id"`
}

// HostingEnvironmentProfileInput is an input type that accepts HostingEnvironmentProfileArgs and HostingEnvironmentProfileOutput values.
// You can construct a concrete instance of `HostingEnvironmentProfileInput` via:
//
//          HostingEnvironmentProfileArgs{...}
type HostingEnvironmentProfileInput interface {
	pulumi.Input

	ToHostingEnvironmentProfileOutput() HostingEnvironmentProfileOutput
	ToHostingEnvironmentProfileOutputWithContext(context.Context) HostingEnvironmentProfileOutput
}

// Specification for an App Service Environment to use for this resource.
type HostingEnvironmentProfileArgs struct {
	// Resource ID of the App Service Environment.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (HostingEnvironmentProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingEnvironmentProfile)(nil)).Elem()
}

func (i HostingEnvironmentProfileArgs) ToHostingEnvironmentProfileOutput() HostingEnvironmentProfileOutput {
	return i.ToHostingEnvironmentProfileOutputWithContext(context.Background())
}

func (i HostingEnvironmentProfileArgs) ToHostingEnvironmentProfileOutputWithContext(ctx context.Context) HostingEnvironmentProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingEnvironmentProfileOutput)
}

// Specification for an App Service Environment to use for this resource.
type HostingEnvironmentProfileOutput struct{ *pulumi.OutputState }

func (HostingEnvironmentProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingEnvironmentProfile)(nil)).Elem()
}

func (o HostingEnvironmentProfileOutput) ToHostingEnvironmentProfileOutput() HostingEnvironmentProfileOutput {
	return o
}

func (o HostingEnvironmentProfileOutput) ToHostingEnvironmentProfileOutputWithContext(ctx context.Context) HostingEnvironmentProfileOutput {
	return o
}

// Resource ID of the App Service Environment.
func (o HostingEnvironmentProfileOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProfile) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Specification for an App Service Environment to use for this resource.
type HostingEnvironmentProfileResponse struct {
	// Resource ID of the App Service Environment.
	Id *string `pulumi:"id"`
	// Name of the App Service Environment.
	Name string `pulumi:"name"`
	// Resource type of the App Service Environment.
	Type string `pulumi:"type"`
}

// HostingEnvironmentProfileResponseInput is an input type that accepts HostingEnvironmentProfileResponseArgs and HostingEnvironmentProfileResponseOutput values.
// You can construct a concrete instance of `HostingEnvironmentProfileResponseInput` via:
//
//          HostingEnvironmentProfileResponseArgs{...}
type HostingEnvironmentProfileResponseInput interface {
	pulumi.Input

	ToHostingEnvironmentProfileResponseOutput() HostingEnvironmentProfileResponseOutput
	ToHostingEnvironmentProfileResponseOutputWithContext(context.Context) HostingEnvironmentProfileResponseOutput
}

// Specification for an App Service Environment to use for this resource.
type HostingEnvironmentProfileResponseArgs struct {
	// Resource ID of the App Service Environment.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the App Service Environment.
	Name pulumi.StringInput `pulumi:"name"`
	// Resource type of the App Service Environment.
	Type pulumi.StringInput `pulumi:"type"`
}

func (HostingEnvironmentProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingEnvironmentProfileResponse)(nil)).Elem()
}

func (i HostingEnvironmentProfileResponseArgs) ToHostingEnvironmentProfileResponseOutput() HostingEnvironmentProfileResponseOutput {
	return i.ToHostingEnvironmentProfileResponseOutputWithContext(context.Background())
}

func (i HostingEnvironmentProfileResponseArgs) ToHostingEnvironmentProfileResponseOutputWithContext(ctx context.Context) HostingEnvironmentProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingEnvironmentProfileResponseOutput)
}

func (i HostingEnvironmentProfileResponseArgs) ToHostingEnvironmentProfileResponsePtrOutput() HostingEnvironmentProfileResponsePtrOutput {
	return i.ToHostingEnvironmentProfileResponsePtrOutputWithContext(context.Background())
}

func (i HostingEnvironmentProfileResponseArgs) ToHostingEnvironmentProfileResponsePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingEnvironmentProfileResponseOutput).ToHostingEnvironmentProfileResponsePtrOutputWithContext(ctx)
}

// HostingEnvironmentProfileResponsePtrInput is an input type that accepts HostingEnvironmentProfileResponseArgs, HostingEnvironmentProfileResponsePtr and HostingEnvironmentProfileResponsePtrOutput values.
// You can construct a concrete instance of `HostingEnvironmentProfileResponsePtrInput` via:
//
//          HostingEnvironmentProfileResponseArgs{...}
//
//  or:
//
//          nil
type HostingEnvironmentProfileResponsePtrInput interface {
	pulumi.Input

	ToHostingEnvironmentProfileResponsePtrOutput() HostingEnvironmentProfileResponsePtrOutput
	ToHostingEnvironmentProfileResponsePtrOutputWithContext(context.Context) HostingEnvironmentProfileResponsePtrOutput
}

type hostingEnvironmentProfileResponsePtrType HostingEnvironmentProfileResponseArgs

func HostingEnvironmentProfileResponsePtr(v *HostingEnvironmentProfileResponseArgs) HostingEnvironmentProfileResponsePtrInput {
	return (*hostingEnvironmentProfileResponsePtrType)(v)
}

func (*hostingEnvironmentProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingEnvironmentProfileResponse)(nil)).Elem()
}

func (i *hostingEnvironmentProfileResponsePtrType) ToHostingEnvironmentProfileResponsePtrOutput() HostingEnvironmentProfileResponsePtrOutput {
	return i.ToHostingEnvironmentProfileResponsePtrOutputWithContext(context.Background())
}

func (i *hostingEnvironmentProfileResponsePtrType) ToHostingEnvironmentProfileResponsePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingEnvironmentProfileResponsePtrOutput)
}

// Specification for an App Service Environment to use for this resource.
type HostingEnvironmentProfileResponseOutput struct{ *pulumi.OutputState }

func (HostingEnvironmentProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingEnvironmentProfileResponse)(nil)).Elem()
}

func (o HostingEnvironmentProfileResponseOutput) ToHostingEnvironmentProfileResponseOutput() HostingEnvironmentProfileResponseOutput {
	return o
}

func (o HostingEnvironmentProfileResponseOutput) ToHostingEnvironmentProfileResponseOutputWithContext(ctx context.Context) HostingEnvironmentProfileResponseOutput {
	return o
}

func (o HostingEnvironmentProfileResponseOutput) ToHostingEnvironmentProfileResponsePtrOutput() HostingEnvironmentProfileResponsePtrOutput {
	return o.ToHostingEnvironmentProfileResponsePtrOutputWithContext(context.Background())
}

func (o HostingEnvironmentProfileResponseOutput) ToHostingEnvironmentProfileResponsePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfileResponsePtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProfileResponse) *HostingEnvironmentProfileResponse {
		return &v
	}).(HostingEnvironmentProfileResponsePtrOutput)
}

// Resource ID of the App Service Environment.
func (o HostingEnvironmentProfileResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProfileResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the App Service Environment.
func (o HostingEnvironmentProfileResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v HostingEnvironmentProfileResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Resource type of the App Service Environment.
func (o HostingEnvironmentProfileResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HostingEnvironmentProfileResponse) string { return v.Type }).(pulumi.StringOutput)
}

type HostingEnvironmentProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (HostingEnvironmentProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingEnvironmentProfileResponse)(nil)).Elem()
}

func (o HostingEnvironmentProfileResponsePtrOutput) ToHostingEnvironmentProfileResponsePtrOutput() HostingEnvironmentProfileResponsePtrOutput {
	return o
}

func (o HostingEnvironmentProfileResponsePtrOutput) ToHostingEnvironmentProfileResponsePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfileResponsePtrOutput {
	return o
}

func (o HostingEnvironmentProfileResponsePtrOutput) Elem() HostingEnvironmentProfileResponseOutput {
	return o.ApplyT(func(v *HostingEnvironmentProfileResponse) HostingEnvironmentProfileResponse { return *v }).(HostingEnvironmentProfileResponseOutput)
}

// Resource ID of the App Service Environment.
func (o HostingEnvironmentProfileResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Name of the App Service Environment.
func (o HostingEnvironmentProfileResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Resource type of the App Service Environment.
func (o HostingEnvironmentProfileResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// A domain specific resource identifier.
type IdentifierResponse struct {
	// Resource Id.
	Id string `pulumi:"id"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// Identifier resource specific properties
	Properties *IdentifierResponseProperties `pulumi:"properties"`
	// Resource type.
	Type string `pulumi:"type"`
}

// IdentifierResponseInput is an input type that accepts IdentifierResponseArgs and IdentifierResponseOutput values.
// You can construct a concrete instance of `IdentifierResponseInput` via:
//
//          IdentifierResponseArgs{...}
type IdentifierResponseInput interface {
	pulumi.Input

	ToIdentifierResponseOutput() IdentifierResponseOutput
	ToIdentifierResponseOutputWithContext(context.Context) IdentifierResponseOutput
}

// A domain specific resource identifier.
type IdentifierResponseArgs struct {
	// Resource Id.
	Id pulumi.StringInput `pulumi:"id"`
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// Identifier resource specific properties
	Properties IdentifierResponsePropertiesPtrInput `pulumi:"properties"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (IdentifierResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentifierResponse)(nil)).Elem()
}

func (i IdentifierResponseArgs) ToIdentifierResponseOutput() IdentifierResponseOutput {
	return i.ToIdentifierResponseOutputWithContext(context.Background())
}

func (i IdentifierResponseArgs) ToIdentifierResponseOutputWithContext(ctx context.Context) IdentifierResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentifierResponseOutput)
}

// IdentifierResponseArrayInput is an input type that accepts IdentifierResponseArray and IdentifierResponseArrayOutput values.
// You can construct a concrete instance of `IdentifierResponseArrayInput` via:
//
//          IdentifierResponseArray{ IdentifierResponseArgs{...} }
type IdentifierResponseArrayInput interface {
	pulumi.Input

	ToIdentifierResponseArrayOutput() IdentifierResponseArrayOutput
	ToIdentifierResponseArrayOutputWithContext(context.Context) IdentifierResponseArrayOutput
}

type IdentifierResponseArray []IdentifierResponseInput

func (IdentifierResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentifierResponse)(nil)).Elem()
}

func (i IdentifierResponseArray) ToIdentifierResponseArrayOutput() IdentifierResponseArrayOutput {
	return i.ToIdentifierResponseArrayOutputWithContext(context.Background())
}

func (i IdentifierResponseArray) ToIdentifierResponseArrayOutputWithContext(ctx context.Context) IdentifierResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentifierResponseArrayOutput)
}

// A domain specific resource identifier.
type IdentifierResponseOutput struct{ *pulumi.OutputState }

func (IdentifierResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentifierResponse)(nil)).Elem()
}

func (o IdentifierResponseOutput) ToIdentifierResponseOutput() IdentifierResponseOutput {
	return o
}

func (o IdentifierResponseOutput) ToIdentifierResponseOutputWithContext(ctx context.Context) IdentifierResponseOutput {
	return o
}

// Resource Id.
func (o IdentifierResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v IdentifierResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Kind of resource.
func (o IdentifierResponseOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentifierResponse) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o IdentifierResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IdentifierResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Identifier resource specific properties
func (o IdentifierResponseOutput) Properties() IdentifierResponsePropertiesPtrOutput {
	return o.ApplyT(func(v IdentifierResponse) *IdentifierResponseProperties { return v.Properties }).(IdentifierResponsePropertiesPtrOutput)
}

// Resource type.
func (o IdentifierResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IdentifierResponse) string { return v.Type }).(pulumi.StringOutput)
}

type IdentifierResponseArrayOutput struct{ *pulumi.OutputState }

func (IdentifierResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentifierResponse)(nil)).Elem()
}

func (o IdentifierResponseArrayOutput) ToIdentifierResponseArrayOutput() IdentifierResponseArrayOutput {
	return o
}

func (o IdentifierResponseArrayOutput) ToIdentifierResponseArrayOutputWithContext(ctx context.Context) IdentifierResponseArrayOutput {
	return o
}

func (o IdentifierResponseArrayOutput) Index(i pulumi.IntInput) IdentifierResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentifierResponse {
		return vs[0].([]IdentifierResponse)[vs[1].(int)]
	}).(IdentifierResponseOutput)
}

// Identifier resource specific properties
type IdentifierResponseProperties struct {
	// String representation of the identity.
	Id *string `pulumi:"id"`
}

// IdentifierResponsePropertiesInput is an input type that accepts IdentifierResponsePropertiesArgs and IdentifierResponsePropertiesOutput values.
// You can construct a concrete instance of `IdentifierResponsePropertiesInput` via:
//
//          IdentifierResponsePropertiesArgs{...}
type IdentifierResponsePropertiesInput interface {
	pulumi.Input

	ToIdentifierResponsePropertiesOutput() IdentifierResponsePropertiesOutput
	ToIdentifierResponsePropertiesOutputWithContext(context.Context) IdentifierResponsePropertiesOutput
}

// Identifier resource specific properties
type IdentifierResponsePropertiesArgs struct {
	// String representation of the identity.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (IdentifierResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentifierResponseProperties)(nil)).Elem()
}

func (i IdentifierResponsePropertiesArgs) ToIdentifierResponsePropertiesOutput() IdentifierResponsePropertiesOutput {
	return i.ToIdentifierResponsePropertiesOutputWithContext(context.Background())
}

func (i IdentifierResponsePropertiesArgs) ToIdentifierResponsePropertiesOutputWithContext(ctx context.Context) IdentifierResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentifierResponsePropertiesOutput)
}

func (i IdentifierResponsePropertiesArgs) ToIdentifierResponsePropertiesPtrOutput() IdentifierResponsePropertiesPtrOutput {
	return i.ToIdentifierResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i IdentifierResponsePropertiesArgs) ToIdentifierResponsePropertiesPtrOutputWithContext(ctx context.Context) IdentifierResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentifierResponsePropertiesOutput).ToIdentifierResponsePropertiesPtrOutputWithContext(ctx)
}

// IdentifierResponsePropertiesPtrInput is an input type that accepts IdentifierResponsePropertiesArgs, IdentifierResponsePropertiesPtr and IdentifierResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `IdentifierResponsePropertiesPtrInput` via:
//
//          IdentifierResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type IdentifierResponsePropertiesPtrInput interface {
	pulumi.Input

	ToIdentifierResponsePropertiesPtrOutput() IdentifierResponsePropertiesPtrOutput
	ToIdentifierResponsePropertiesPtrOutputWithContext(context.Context) IdentifierResponsePropertiesPtrOutput
}

type identifierResponsePropertiesPtrType IdentifierResponsePropertiesArgs

func IdentifierResponsePropertiesPtr(v *IdentifierResponsePropertiesArgs) IdentifierResponsePropertiesPtrInput {
	return (*identifierResponsePropertiesPtrType)(v)
}

func (*identifierResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentifierResponseProperties)(nil)).Elem()
}

func (i *identifierResponsePropertiesPtrType) ToIdentifierResponsePropertiesPtrOutput() IdentifierResponsePropertiesPtrOutput {
	return i.ToIdentifierResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *identifierResponsePropertiesPtrType) ToIdentifierResponsePropertiesPtrOutputWithContext(ctx context.Context) IdentifierResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentifierResponsePropertiesPtrOutput)
}

// Identifier resource specific properties
type IdentifierResponsePropertiesOutput struct{ *pulumi.OutputState }

func (IdentifierResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentifierResponseProperties)(nil)).Elem()
}

func (o IdentifierResponsePropertiesOutput) ToIdentifierResponsePropertiesOutput() IdentifierResponsePropertiesOutput {
	return o
}

func (o IdentifierResponsePropertiesOutput) ToIdentifierResponsePropertiesOutputWithContext(ctx context.Context) IdentifierResponsePropertiesOutput {
	return o
}

func (o IdentifierResponsePropertiesOutput) ToIdentifierResponsePropertiesPtrOutput() IdentifierResponsePropertiesPtrOutput {
	return o.ToIdentifierResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o IdentifierResponsePropertiesOutput) ToIdentifierResponsePropertiesPtrOutputWithContext(ctx context.Context) IdentifierResponsePropertiesPtrOutput {
	return o.ApplyT(func(v IdentifierResponseProperties) *IdentifierResponseProperties {
		return &v
	}).(IdentifierResponsePropertiesPtrOutput)
}

// String representation of the identity.
func (o IdentifierResponsePropertiesOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentifierResponseProperties) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type IdentifierResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (IdentifierResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentifierResponseProperties)(nil)).Elem()
}

func (o IdentifierResponsePropertiesPtrOutput) ToIdentifierResponsePropertiesPtrOutput() IdentifierResponsePropertiesPtrOutput {
	return o
}

func (o IdentifierResponsePropertiesPtrOutput) ToIdentifierResponsePropertiesPtrOutputWithContext(ctx context.Context) IdentifierResponsePropertiesPtrOutput {
	return o
}

func (o IdentifierResponsePropertiesPtrOutput) Elem() IdentifierResponsePropertiesOutput {
	return o.ApplyT(func(v *IdentifierResponseProperties) IdentifierResponseProperties { return *v }).(IdentifierResponsePropertiesOutput)
}

// String representation of the identity.
func (o IdentifierResponsePropertiesPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentifierResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(CertificateTypeOutput{})
	pulumi.RegisterOutputType(CertificateResponsePropertiesOutput{})
	pulumi.RegisterOutputType(CertificateResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(HostingEnvironmentProfileOutput{})
	pulumi.RegisterOutputType(HostingEnvironmentProfileResponseOutput{})
	pulumi.RegisterOutputType(HostingEnvironmentProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(IdentifierResponseOutput{})
	pulumi.RegisterOutputType(IdentifierResponseArrayOutput{})
	pulumi.RegisterOutputType(IdentifierResponsePropertiesOutput{})
	pulumi.RegisterOutputType(IdentifierResponsePropertiesPtrOutput{})
}
