// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20190801

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// App Service Environment ARM resource.
type AppServiceEnvironment struct {
	pulumi.CustomResourceState

	// Kind of resource.
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Resource Location.
	Location pulumi.StringOutput `pulumi:"location"`
	// Resource Name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Core resource properties
	Properties AppServiceEnvironmentResponseOutput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewAppServiceEnvironment registers a new resource with the given unique name, arguments, and options.
func NewAppServiceEnvironment(ctx *pulumi.Context,
	name string, args *AppServiceEnvironmentArgs, opts ...pulumi.ResourceOption) (*AppServiceEnvironment, error) {
	if args == nil || args.Location == nil {
		return nil, errors.New("missing required argument 'Location'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.VirtualNetwork == nil {
		return nil, errors.New("missing required argument 'VirtualNetwork'")
	}
	if args == nil || args.WorkerPools == nil {
		return nil, errors.New("missing required argument 'WorkerPools'")
	}
	if args == nil {
		args = &AppServiceEnvironmentArgs{}
	}
	var resource AppServiceEnvironment
	err := ctx.RegisterResource("azurerm:web/v20190801:AppServiceEnvironment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppServiceEnvironment gets an existing AppServiceEnvironment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppServiceEnvironment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppServiceEnvironmentState, opts ...pulumi.ResourceOption) (*AppServiceEnvironment, error) {
	var resource AppServiceEnvironment
	err := ctx.ReadResource("azurerm:web/v20190801:AppServiceEnvironment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppServiceEnvironment resources.
type appServiceEnvironmentState struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Location.
	Location *string `pulumi:"location"`
	// Resource Name.
	Name *string `pulumi:"name"`
	// Core resource properties
	Properties *AppServiceEnvironmentResponse `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type *string `pulumi:"type"`
}

type AppServiceEnvironmentState struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput
	// Resource Location.
	Location pulumi.StringPtrInput
	// Resource Name.
	Name pulumi.StringPtrInput
	// Core resource properties
	Properties AppServiceEnvironmentResponsePtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// Resource type.
	Type pulumi.StringPtrInput
}

func (AppServiceEnvironmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*appServiceEnvironmentState)(nil)).Elem()
}

type appServiceEnvironmentArgs struct {
	// API Management Account associated with the App Service Environment.
	ApiManagementAccountId *string `pulumi:"apiManagementAccountId"`
	// Custom settings for changing the behavior of the App Service Environment.
	ClusterSettings []NameValuePair `pulumi:"clusterSettings"`
	// DNS suffix of the App Service Environment.
	DnsSuffix *string `pulumi:"dnsSuffix"`
	// True/false indicating whether the App Service Environment is suspended. The environment can be suspended e.g. when the management endpoint is no longer available
	// (most likely because NSG blocked the incoming traffic).
	DynamicCacheEnabled *bool `pulumi:"dynamicCacheEnabled"`
	// Scale factor for front-ends.
	FrontEndScaleFactor *int `pulumi:"frontEndScaleFactor"`
	// Flag that displays whether an ASE has linux workers or not
	HasLinuxWorkers *bool `pulumi:"hasLinuxWorkers"`
	// Specifies which endpoints to serve internally in the Virtual Network for the App Service Environment.
	InternalLoadBalancingMode *string `pulumi:"internalLoadBalancingMode"`
	// Number of IP SSL addresses reserved for the App Service Environment.
	IpsslAddressCount *int `pulumi:"ipsslAddressCount"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Location.
	Location string `pulumi:"location"`
	// Number of front-end instances.
	MultiRoleCount *int `pulumi:"multiRoleCount"`
	// Front-end VM size, e.g. "Medium", "Large".
	MultiSize *string `pulumi:"multiSize"`
	// Name of the App Service Environment.
	Name string `pulumi:"name"`
	// Access control list for controlling traffic to the App Service Environment.
	NetworkAccessControlList []NetworkAccessControlEntry `pulumi:"networkAccessControlList"`
	// Name of the resource group to which the resource belongs.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Key Vault ID for ILB App Service Environment default SSL certificate
	SslCertKeyVaultId *string `pulumi:"sslCertKeyVaultId"`
	// Key Vault Secret Name for ILB App Service Environment default SSL certificate
	SslCertKeyVaultSecretName *string `pulumi:"sslCertKeyVaultSecretName"`
	// <code>true</code> if the App Service Environment is suspended; otherwise, <code>false</code>. The environment can be suspended, e.g. when the management endpoint is no longer available
	//  (most likely because NSG blocked the incoming traffic).
	Suspended *bool `pulumi:"suspended"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// User added ip ranges to whitelist on ASE db
	UserWhitelistedIpRanges []string `pulumi:"userWhitelistedIpRanges"`
	// Description of the Virtual Network.
	VirtualNetwork VirtualNetworkProfile `pulumi:"virtualNetwork"`
	// Name of the Virtual Network for the App Service Environment.
	VnetName *string `pulumi:"vnetName"`
	// Resource group of the Virtual Network.
	VnetResourceGroupName *string `pulumi:"vnetResourceGroupName"`
	// Subnet of the Virtual Network.
	VnetSubnetName *string `pulumi:"vnetSubnetName"`
	// Description of worker pools with worker size IDs, VM sizes, and number of workers in each pool.
	WorkerPools []WorkerPool `pulumi:"workerPools"`
}

// The set of arguments for constructing a AppServiceEnvironment resource.
type AppServiceEnvironmentArgs struct {
	// API Management Account associated with the App Service Environment.
	ApiManagementAccountId pulumi.StringPtrInput
	// Custom settings for changing the behavior of the App Service Environment.
	ClusterSettings NameValuePairArrayInput
	// DNS suffix of the App Service Environment.
	DnsSuffix pulumi.StringPtrInput
	// True/false indicating whether the App Service Environment is suspended. The environment can be suspended e.g. when the management endpoint is no longer available
	// (most likely because NSG blocked the incoming traffic).
	DynamicCacheEnabled pulumi.BoolPtrInput
	// Scale factor for front-ends.
	FrontEndScaleFactor pulumi.IntPtrInput
	// Flag that displays whether an ASE has linux workers or not
	HasLinuxWorkers pulumi.BoolPtrInput
	// Specifies which endpoints to serve internally in the Virtual Network for the App Service Environment.
	InternalLoadBalancingMode pulumi.StringPtrInput
	// Number of IP SSL addresses reserved for the App Service Environment.
	IpsslAddressCount pulumi.IntPtrInput
	// Kind of resource.
	Kind pulumi.StringPtrInput
	// Resource Location.
	Location pulumi.StringInput
	// Number of front-end instances.
	MultiRoleCount pulumi.IntPtrInput
	// Front-end VM size, e.g. "Medium", "Large".
	MultiSize pulumi.StringPtrInput
	// Name of the App Service Environment.
	Name pulumi.StringInput
	// Access control list for controlling traffic to the App Service Environment.
	NetworkAccessControlList NetworkAccessControlEntryArrayInput
	// Name of the resource group to which the resource belongs.
	ResourceGroupName pulumi.StringInput
	// Key Vault ID for ILB App Service Environment default SSL certificate
	SslCertKeyVaultId pulumi.StringPtrInput
	// Key Vault Secret Name for ILB App Service Environment default SSL certificate
	SslCertKeyVaultSecretName pulumi.StringPtrInput
	// <code>true</code> if the App Service Environment is suspended; otherwise, <code>false</code>. The environment can be suspended, e.g. when the management endpoint is no longer available
	//  (most likely because NSG blocked the incoming traffic).
	Suspended pulumi.BoolPtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// User added ip ranges to whitelist on ASE db
	UserWhitelistedIpRanges pulumi.StringArrayInput
	// Description of the Virtual Network.
	VirtualNetwork VirtualNetworkProfileInput
	// Name of the Virtual Network for the App Service Environment.
	VnetName pulumi.StringPtrInput
	// Resource group of the Virtual Network.
	VnetResourceGroupName pulumi.StringPtrInput
	// Subnet of the Virtual Network.
	VnetSubnetName pulumi.StringPtrInput
	// Description of worker pools with worker size IDs, VM sizes, and number of workers in each pool.
	WorkerPools WorkerPoolArrayInput
}

func (AppServiceEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appServiceEnvironmentArgs)(nil)).Elem()
}
