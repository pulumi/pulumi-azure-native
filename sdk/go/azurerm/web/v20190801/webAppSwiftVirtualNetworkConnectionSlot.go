// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20190801

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Swift Virtual Network Contract. This is used to enable the new Swift way of doing virtual network integration.
type WebAppSwiftVirtualNetworkConnectionSlot struct {
	pulumi.CustomResourceState

	// Kind of resource.
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Resource Name.
	Name pulumi.StringOutput `pulumi:"name"`
	// SwiftVirtualNetwork resource specific properties
	Properties SwiftVirtualNetworkResponsePropertiesOutput `pulumi:"properties"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewWebAppSwiftVirtualNetworkConnectionSlot registers a new resource with the given unique name, arguments, and options.
func NewWebAppSwiftVirtualNetworkConnectionSlot(ctx *pulumi.Context,
	name string, args *WebAppSwiftVirtualNetworkConnectionSlotArgs, opts ...pulumi.ResourceOption) (*WebAppSwiftVirtualNetworkConnectionSlot, error) {
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &WebAppSwiftVirtualNetworkConnectionSlotArgs{}
	}
	var resource WebAppSwiftVirtualNetworkConnectionSlot
	err := ctx.RegisterResource("azurerm:web/v20190801:WebAppSwiftVirtualNetworkConnectionSlot", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebAppSwiftVirtualNetworkConnectionSlot gets an existing WebAppSwiftVirtualNetworkConnectionSlot resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebAppSwiftVirtualNetworkConnectionSlot(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebAppSwiftVirtualNetworkConnectionSlotState, opts ...pulumi.ResourceOption) (*WebAppSwiftVirtualNetworkConnectionSlot, error) {
	var resource WebAppSwiftVirtualNetworkConnectionSlot
	err := ctx.ReadResource("azurerm:web/v20190801:WebAppSwiftVirtualNetworkConnectionSlot", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebAppSwiftVirtualNetworkConnectionSlot resources.
type webAppSwiftVirtualNetworkConnectionSlotState struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name *string `pulumi:"name"`
	// SwiftVirtualNetwork resource specific properties
	Properties *SwiftVirtualNetworkResponseProperties `pulumi:"properties"`
	// Resource type.
	Type *string `pulumi:"type"`
}

type WebAppSwiftVirtualNetworkConnectionSlotState struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput
	// Resource Name.
	Name pulumi.StringPtrInput
	// SwiftVirtualNetwork resource specific properties
	Properties SwiftVirtualNetworkResponsePropertiesPtrInput
	// Resource type.
	Type pulumi.StringPtrInput
}

func (WebAppSwiftVirtualNetworkConnectionSlotState) ElementType() reflect.Type {
	return reflect.TypeOf((*webAppSwiftVirtualNetworkConnectionSlotState)(nil)).Elem()
}

type webAppSwiftVirtualNetworkConnectionSlotArgs struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Name of the deployment slot. If a slot is not specified, the API will add or update connections for the production slot.
	Name string `pulumi:"name"`
	// Name of the resource group to which the resource belongs.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The Virtual Network subnet's resource ID. This is the subnet that this Web App will join. This subnet must have a delegation to Microsoft.Web/serverFarms defined first.
	SubnetResourceId *string `pulumi:"subnetResourceId"`
	// A flag that specifies if the scale unit this Web App is on supports Swift integration.
	SwiftSupported *bool `pulumi:"swiftSupported"`
}

// The set of arguments for constructing a WebAppSwiftVirtualNetworkConnectionSlot resource.
type WebAppSwiftVirtualNetworkConnectionSlotArgs struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput
	// Name of the deployment slot. If a slot is not specified, the API will add or update connections for the production slot.
	Name pulumi.StringInput
	// Name of the resource group to which the resource belongs.
	ResourceGroupName pulumi.StringInput
	// The Virtual Network subnet's resource ID. This is the subnet that this Web App will join. This subnet must have a delegation to Microsoft.Web/serverFarms defined first.
	SubnetResourceId pulumi.StringPtrInput
	// A flag that specifies if the scale unit this Web App is on supports Swift integration.
	SwiftSupported pulumi.BoolPtrInput
}

func (WebAppSwiftVirtualNetworkConnectionSlotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webAppSwiftVirtualNetworkConnectionSlotArgs)(nil)).Elem()
}
