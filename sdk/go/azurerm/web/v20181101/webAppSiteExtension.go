// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20181101

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Site Extension Information.
type WebAppSiteExtension struct {
	pulumi.CustomResourceState

	// Kind of resource.
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Resource Name.
	Name pulumi.StringOutput `pulumi:"name"`
	// SiteExtensionInfo resource specific properties
	Properties SiteExtensionInfoResponsePropertiesOutput `pulumi:"properties"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewWebAppSiteExtension registers a new resource with the given unique name, arguments, and options.
func NewWebAppSiteExtension(ctx *pulumi.Context,
	name string, args *WebAppSiteExtensionArgs, opts ...pulumi.ResourceOption) (*WebAppSiteExtension, error) {
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &WebAppSiteExtensionArgs{}
	}
	var resource WebAppSiteExtension
	err := ctx.RegisterResource("azurerm:web/v20181101:WebAppSiteExtension", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebAppSiteExtension gets an existing WebAppSiteExtension resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebAppSiteExtension(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebAppSiteExtensionState, opts ...pulumi.ResourceOption) (*WebAppSiteExtension, error) {
	var resource WebAppSiteExtension
	err := ctx.ReadResource("azurerm:web/v20181101:WebAppSiteExtension", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebAppSiteExtension resources.
type webAppSiteExtensionState struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name *string `pulumi:"name"`
	// SiteExtensionInfo resource specific properties
	Properties *SiteExtensionInfoResponseProperties `pulumi:"properties"`
	// Resource type.
	Type *string `pulumi:"type"`
}

type WebAppSiteExtensionState struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput
	// Resource Name.
	Name pulumi.StringPtrInput
	// SiteExtensionInfo resource specific properties
	Properties SiteExtensionInfoResponsePropertiesPtrInput
	// Resource type.
	Type pulumi.StringPtrInput
}

func (WebAppSiteExtensionState) ElementType() reflect.Type {
	return reflect.TypeOf((*webAppSiteExtensionState)(nil)).Elem()
}

type webAppSiteExtensionArgs struct {
	// Site extension name.
	Name string `pulumi:"name"`
	// Name of the resource group to which the resource belongs.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a WebAppSiteExtension resource.
type WebAppSiteExtensionArgs struct {
	// Site extension name.
	Name pulumi.StringInput
	// Name of the resource group to which the resource belongs.
	ResourceGroupName pulumi.StringInput
}

func (WebAppSiteExtensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webAppSiteExtensionArgs)(nil)).Elem()
}
