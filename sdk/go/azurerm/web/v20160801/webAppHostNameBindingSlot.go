// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20160801

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// A hostname binding object.
type WebAppHostNameBindingSlot struct {
	pulumi.CustomResourceState

	// Kind of resource.
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Resource Name.
	Name pulumi.StringOutput `pulumi:"name"`
	// HostNameBinding resource specific properties
	Properties HostNameBindingResponsePropertiesOutput `pulumi:"properties"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewWebAppHostNameBindingSlot registers a new resource with the given unique name, arguments, and options.
func NewWebAppHostNameBindingSlot(ctx *pulumi.Context,
	name string, args *WebAppHostNameBindingSlotArgs, opts ...pulumi.ResourceOption) (*WebAppHostNameBindingSlot, error) {
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.Slot == nil {
		return nil, errors.New("missing required argument 'Slot'")
	}
	if args == nil {
		args = &WebAppHostNameBindingSlotArgs{}
	}
	var resource WebAppHostNameBindingSlot
	err := ctx.RegisterResource("azurerm:web/v20160801:WebAppHostNameBindingSlot", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebAppHostNameBindingSlot gets an existing WebAppHostNameBindingSlot resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebAppHostNameBindingSlot(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebAppHostNameBindingSlotState, opts ...pulumi.ResourceOption) (*WebAppHostNameBindingSlot, error) {
	var resource WebAppHostNameBindingSlot
	err := ctx.ReadResource("azurerm:web/v20160801:WebAppHostNameBindingSlot", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebAppHostNameBindingSlot resources.
type webAppHostNameBindingSlotState struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name *string `pulumi:"name"`
	// HostNameBinding resource specific properties
	Properties *HostNameBindingResponseProperties `pulumi:"properties"`
	// Resource type.
	Type *string `pulumi:"type"`
}

type WebAppHostNameBindingSlotState struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput
	// Resource Name.
	Name pulumi.StringPtrInput
	// HostNameBinding resource specific properties
	Properties HostNameBindingResponsePropertiesPtrInput
	// Resource type.
	Type pulumi.StringPtrInput
}

func (WebAppHostNameBindingSlotState) ElementType() reflect.Type {
	return reflect.TypeOf((*webAppHostNameBindingSlotState)(nil)).Elem()
}

type webAppHostNameBindingSlotArgs struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Hostname in the hostname binding.
	Name string `pulumi:"name"`
	// HostNameBinding resource specific properties
	Properties *HostNameBindingProperties `pulumi:"properties"`
	// Name of the resource group to which the resource belongs.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Name of the deployment slot. If a slot is not specified, the API will create a binding for the production slot.
	Slot string `pulumi:"slot"`
}

// The set of arguments for constructing a WebAppHostNameBindingSlot resource.
type WebAppHostNameBindingSlotArgs struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput
	// Hostname in the hostname binding.
	Name pulumi.StringInput
	// HostNameBinding resource specific properties
	Properties HostNameBindingPropertiesPtrInput
	// Name of the resource group to which the resource belongs.
	ResourceGroupName pulumi.StringInput
	// Name of the deployment slot. If a slot is not specified, the API will create a binding for the production slot.
	Slot pulumi.StringInput
}

func (WebAppHostNameBindingSlotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webAppHostNameBindingSlotArgs)(nil)).Elem()
}
