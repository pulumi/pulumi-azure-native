// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package web

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Site Extension Information.
type WebAppSiteExtensionSlot struct {
	pulumi.CustomResourceState

	// Kind of resource.
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Resource Name.
	Name pulumi.StringOutput `pulumi:"name"`
	// SiteExtensionInfo resource specific properties
	Properties SiteExtensionInfoResponsePropertiesOutput `pulumi:"properties"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewWebAppSiteExtensionSlot registers a new resource with the given unique name, arguments, and options.
func NewWebAppSiteExtensionSlot(ctx *pulumi.Context,
	name string, args *WebAppSiteExtensionSlotArgs, opts ...pulumi.ResourceOption) (*WebAppSiteExtensionSlot, error) {
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.Slot == nil {
		return nil, errors.New("missing required argument 'Slot'")
	}
	if args == nil {
		args = &WebAppSiteExtensionSlotArgs{}
	}
	var resource WebAppSiteExtensionSlot
	err := ctx.RegisterResource("azurerm:web:WebAppSiteExtensionSlot", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebAppSiteExtensionSlot gets an existing WebAppSiteExtensionSlot resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebAppSiteExtensionSlot(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebAppSiteExtensionSlotState, opts ...pulumi.ResourceOption) (*WebAppSiteExtensionSlot, error) {
	var resource WebAppSiteExtensionSlot
	err := ctx.ReadResource("azurerm:web:WebAppSiteExtensionSlot", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebAppSiteExtensionSlot resources.
type webAppSiteExtensionSlotState struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name *string `pulumi:"name"`
	// SiteExtensionInfo resource specific properties
	Properties *SiteExtensionInfoResponseProperties `pulumi:"properties"`
	// Resource type.
	Type *string `pulumi:"type"`
}

type WebAppSiteExtensionSlotState struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput
	// Resource Name.
	Name pulumi.StringPtrInput
	// SiteExtensionInfo resource specific properties
	Properties SiteExtensionInfoResponsePropertiesPtrInput
	// Resource type.
	Type pulumi.StringPtrInput
}

func (WebAppSiteExtensionSlotState) ElementType() reflect.Type {
	return reflect.TypeOf((*webAppSiteExtensionSlotState)(nil)).Elem()
}

type webAppSiteExtensionSlotArgs struct {
	// Site extension name.
	Name string `pulumi:"name"`
	// Name of the resource group to which the resource belongs.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Name of the deployment slot. If a slot is not specified, the API uses the production slot.
	Slot string `pulumi:"slot"`
}

// The set of arguments for constructing a WebAppSiteExtensionSlot resource.
type WebAppSiteExtensionSlotArgs struct {
	// Site extension name.
	Name pulumi.StringInput
	// Name of the resource group to which the resource belongs.
	ResourceGroupName pulumi.StringInput
	// Name of the deployment slot. If a slot is not specified, the API uses the production slot.
	Slot pulumi.StringInput
}

func (WebAppSiteExtensionSlotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webAppSiteExtensionSlotArgs)(nil)).Elem()
}
