// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package web

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// App Service Environment ARM resource.
type HostingEnvironment struct {
	pulumi.CustomResourceState

	// Kind of resource.
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Resource Location.
	Location pulumi.StringOutput `pulumi:"location"`
	// Resource Name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Core resource properties
	Properties AppServiceEnvironmentResponseOutput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewHostingEnvironment registers a new resource with the given unique name, arguments, and options.
func NewHostingEnvironment(ctx *pulumi.Context,
	name string, args *HostingEnvironmentArgs, opts ...pulumi.ResourceOption) (*HostingEnvironment, error) {
	if args == nil || args.Location == nil {
		return nil, errors.New("missing required argument 'Location'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &HostingEnvironmentArgs{}
	}
	var resource HostingEnvironment
	err := ctx.RegisterResource("azurerm:web:HostingEnvironment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHostingEnvironment gets an existing HostingEnvironment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHostingEnvironment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HostingEnvironmentState, opts ...pulumi.ResourceOption) (*HostingEnvironment, error) {
	var resource HostingEnvironment
	err := ctx.ReadResource("azurerm:web:HostingEnvironment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering HostingEnvironment resources.
type hostingEnvironmentState struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Location.
	Location *string `pulumi:"location"`
	// Resource Name.
	Name *string `pulumi:"name"`
	// Core resource properties
	Properties *AppServiceEnvironmentResponse `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type *string `pulumi:"type"`
}

type HostingEnvironmentState struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput
	// Resource Location.
	Location pulumi.StringPtrInput
	// Resource Name.
	Name pulumi.StringPtrInput
	// Core resource properties
	Properties AppServiceEnvironmentResponsePtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// Resource type.
	Type pulumi.StringPtrInput
}

func (HostingEnvironmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*hostingEnvironmentState)(nil)).Elem()
}

type hostingEnvironmentArgs struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Location.
	Location string `pulumi:"location"`
	// Name of the App Service Environment.
	Name string `pulumi:"name"`
	// Core resource properties
	Properties *AppServiceEnvironment `pulumi:"properties"`
	// Name of the resource group to which the resource belongs.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a HostingEnvironment resource.
type HostingEnvironmentArgs struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput
	// Resource Location.
	Location pulumi.StringInput
	// Name of the App Service Environment.
	Name pulumi.StringInput
	// Core resource properties
	Properties AppServiceEnvironmentPtrInput
	// Name of the resource group to which the resource belongs.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (HostingEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*hostingEnvironmentArgs)(nil)).Elem()
}
