// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20180201

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Information about the formal API definition for the app.
type ApiDefinitionInfo struct {
	// The URL of the API definition.
	Url *string `pulumi:"url"`
}

// ApiDefinitionInfoInput is an input type that accepts ApiDefinitionInfoArgs and ApiDefinitionInfoOutput values.
// You can construct a concrete instance of `ApiDefinitionInfoInput` via:
//
//          ApiDefinitionInfoArgs{...}
type ApiDefinitionInfoInput interface {
	pulumi.Input

	ToApiDefinitionInfoOutput() ApiDefinitionInfoOutput
	ToApiDefinitionInfoOutputWithContext(context.Context) ApiDefinitionInfoOutput
}

// Information about the formal API definition for the app.
type ApiDefinitionInfoArgs struct {
	// The URL of the API definition.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (ApiDefinitionInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDefinitionInfo)(nil)).Elem()
}

func (i ApiDefinitionInfoArgs) ToApiDefinitionInfoOutput() ApiDefinitionInfoOutput {
	return i.ToApiDefinitionInfoOutputWithContext(context.Background())
}

func (i ApiDefinitionInfoArgs) ToApiDefinitionInfoOutputWithContext(ctx context.Context) ApiDefinitionInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDefinitionInfoOutput)
}

func (i ApiDefinitionInfoArgs) ToApiDefinitionInfoPtrOutput() ApiDefinitionInfoPtrOutput {
	return i.ToApiDefinitionInfoPtrOutputWithContext(context.Background())
}

func (i ApiDefinitionInfoArgs) ToApiDefinitionInfoPtrOutputWithContext(ctx context.Context) ApiDefinitionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDefinitionInfoOutput).ToApiDefinitionInfoPtrOutputWithContext(ctx)
}

// ApiDefinitionInfoPtrInput is an input type that accepts ApiDefinitionInfoArgs, ApiDefinitionInfoPtr and ApiDefinitionInfoPtrOutput values.
// You can construct a concrete instance of `ApiDefinitionInfoPtrInput` via:
//
//          ApiDefinitionInfoArgs{...}
//
//  or:
//
//          nil
type ApiDefinitionInfoPtrInput interface {
	pulumi.Input

	ToApiDefinitionInfoPtrOutput() ApiDefinitionInfoPtrOutput
	ToApiDefinitionInfoPtrOutputWithContext(context.Context) ApiDefinitionInfoPtrOutput
}

type apiDefinitionInfoPtrType ApiDefinitionInfoArgs

func ApiDefinitionInfoPtr(v *ApiDefinitionInfoArgs) ApiDefinitionInfoPtrInput {
	return (*apiDefinitionInfoPtrType)(v)
}

func (*apiDefinitionInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiDefinitionInfo)(nil)).Elem()
}

func (i *apiDefinitionInfoPtrType) ToApiDefinitionInfoPtrOutput() ApiDefinitionInfoPtrOutput {
	return i.ToApiDefinitionInfoPtrOutputWithContext(context.Background())
}

func (i *apiDefinitionInfoPtrType) ToApiDefinitionInfoPtrOutputWithContext(ctx context.Context) ApiDefinitionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDefinitionInfoPtrOutput)
}

// Information about the formal API definition for the app.
type ApiDefinitionInfoOutput struct{ *pulumi.OutputState }

func (ApiDefinitionInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDefinitionInfo)(nil)).Elem()
}

func (o ApiDefinitionInfoOutput) ToApiDefinitionInfoOutput() ApiDefinitionInfoOutput {
	return o
}

func (o ApiDefinitionInfoOutput) ToApiDefinitionInfoOutputWithContext(ctx context.Context) ApiDefinitionInfoOutput {
	return o
}

func (o ApiDefinitionInfoOutput) ToApiDefinitionInfoPtrOutput() ApiDefinitionInfoPtrOutput {
	return o.ToApiDefinitionInfoPtrOutputWithContext(context.Background())
}

func (o ApiDefinitionInfoOutput) ToApiDefinitionInfoPtrOutputWithContext(ctx context.Context) ApiDefinitionInfoPtrOutput {
	return o.ApplyT(func(v ApiDefinitionInfo) *ApiDefinitionInfo {
		return &v
	}).(ApiDefinitionInfoPtrOutput)
}

// The URL of the API definition.
func (o ApiDefinitionInfoOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiDefinitionInfo) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ApiDefinitionInfoPtrOutput struct{ *pulumi.OutputState }

func (ApiDefinitionInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiDefinitionInfo)(nil)).Elem()
}

func (o ApiDefinitionInfoPtrOutput) ToApiDefinitionInfoPtrOutput() ApiDefinitionInfoPtrOutput {
	return o
}

func (o ApiDefinitionInfoPtrOutput) ToApiDefinitionInfoPtrOutputWithContext(ctx context.Context) ApiDefinitionInfoPtrOutput {
	return o
}

func (o ApiDefinitionInfoPtrOutput) Elem() ApiDefinitionInfoOutput {
	return o.ApplyT(func(v *ApiDefinitionInfo) ApiDefinitionInfo { return *v }).(ApiDefinitionInfoOutput)
}

// The URL of the API definition.
func (o ApiDefinitionInfoPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiDefinitionInfo) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// Information about the formal API definition for the app.
type ApiDefinitionInfoResponse struct {
	// The URL of the API definition.
	Url *string `pulumi:"url"`
}

// ApiDefinitionInfoResponseInput is an input type that accepts ApiDefinitionInfoResponseArgs and ApiDefinitionInfoResponseOutput values.
// You can construct a concrete instance of `ApiDefinitionInfoResponseInput` via:
//
//          ApiDefinitionInfoResponseArgs{...}
type ApiDefinitionInfoResponseInput interface {
	pulumi.Input

	ToApiDefinitionInfoResponseOutput() ApiDefinitionInfoResponseOutput
	ToApiDefinitionInfoResponseOutputWithContext(context.Context) ApiDefinitionInfoResponseOutput
}

// Information about the formal API definition for the app.
type ApiDefinitionInfoResponseArgs struct {
	// The URL of the API definition.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (ApiDefinitionInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDefinitionInfoResponse)(nil)).Elem()
}

func (i ApiDefinitionInfoResponseArgs) ToApiDefinitionInfoResponseOutput() ApiDefinitionInfoResponseOutput {
	return i.ToApiDefinitionInfoResponseOutputWithContext(context.Background())
}

func (i ApiDefinitionInfoResponseArgs) ToApiDefinitionInfoResponseOutputWithContext(ctx context.Context) ApiDefinitionInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDefinitionInfoResponseOutput)
}

func (i ApiDefinitionInfoResponseArgs) ToApiDefinitionInfoResponsePtrOutput() ApiDefinitionInfoResponsePtrOutput {
	return i.ToApiDefinitionInfoResponsePtrOutputWithContext(context.Background())
}

func (i ApiDefinitionInfoResponseArgs) ToApiDefinitionInfoResponsePtrOutputWithContext(ctx context.Context) ApiDefinitionInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDefinitionInfoResponseOutput).ToApiDefinitionInfoResponsePtrOutputWithContext(ctx)
}

// ApiDefinitionInfoResponsePtrInput is an input type that accepts ApiDefinitionInfoResponseArgs, ApiDefinitionInfoResponsePtr and ApiDefinitionInfoResponsePtrOutput values.
// You can construct a concrete instance of `ApiDefinitionInfoResponsePtrInput` via:
//
//          ApiDefinitionInfoResponseArgs{...}
//
//  or:
//
//          nil
type ApiDefinitionInfoResponsePtrInput interface {
	pulumi.Input

	ToApiDefinitionInfoResponsePtrOutput() ApiDefinitionInfoResponsePtrOutput
	ToApiDefinitionInfoResponsePtrOutputWithContext(context.Context) ApiDefinitionInfoResponsePtrOutput
}

type apiDefinitionInfoResponsePtrType ApiDefinitionInfoResponseArgs

func ApiDefinitionInfoResponsePtr(v *ApiDefinitionInfoResponseArgs) ApiDefinitionInfoResponsePtrInput {
	return (*apiDefinitionInfoResponsePtrType)(v)
}

func (*apiDefinitionInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiDefinitionInfoResponse)(nil)).Elem()
}

func (i *apiDefinitionInfoResponsePtrType) ToApiDefinitionInfoResponsePtrOutput() ApiDefinitionInfoResponsePtrOutput {
	return i.ToApiDefinitionInfoResponsePtrOutputWithContext(context.Background())
}

func (i *apiDefinitionInfoResponsePtrType) ToApiDefinitionInfoResponsePtrOutputWithContext(ctx context.Context) ApiDefinitionInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDefinitionInfoResponsePtrOutput)
}

// Information about the formal API definition for the app.
type ApiDefinitionInfoResponseOutput struct{ *pulumi.OutputState }

func (ApiDefinitionInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDefinitionInfoResponse)(nil)).Elem()
}

func (o ApiDefinitionInfoResponseOutput) ToApiDefinitionInfoResponseOutput() ApiDefinitionInfoResponseOutput {
	return o
}

func (o ApiDefinitionInfoResponseOutput) ToApiDefinitionInfoResponseOutputWithContext(ctx context.Context) ApiDefinitionInfoResponseOutput {
	return o
}

func (o ApiDefinitionInfoResponseOutput) ToApiDefinitionInfoResponsePtrOutput() ApiDefinitionInfoResponsePtrOutput {
	return o.ToApiDefinitionInfoResponsePtrOutputWithContext(context.Background())
}

func (o ApiDefinitionInfoResponseOutput) ToApiDefinitionInfoResponsePtrOutputWithContext(ctx context.Context) ApiDefinitionInfoResponsePtrOutput {
	return o.ApplyT(func(v ApiDefinitionInfoResponse) *ApiDefinitionInfoResponse {
		return &v
	}).(ApiDefinitionInfoResponsePtrOutput)
}

// The URL of the API definition.
func (o ApiDefinitionInfoResponseOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiDefinitionInfoResponse) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ApiDefinitionInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiDefinitionInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiDefinitionInfoResponse)(nil)).Elem()
}

func (o ApiDefinitionInfoResponsePtrOutput) ToApiDefinitionInfoResponsePtrOutput() ApiDefinitionInfoResponsePtrOutput {
	return o
}

func (o ApiDefinitionInfoResponsePtrOutput) ToApiDefinitionInfoResponsePtrOutputWithContext(ctx context.Context) ApiDefinitionInfoResponsePtrOutput {
	return o
}

func (o ApiDefinitionInfoResponsePtrOutput) Elem() ApiDefinitionInfoResponseOutput {
	return o.ApplyT(func(v *ApiDefinitionInfoResponse) ApiDefinitionInfoResponse { return *v }).(ApiDefinitionInfoResponseOutput)
}

// The URL of the API definition.
func (o ApiDefinitionInfoResponsePtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiDefinitionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// App Service Environment ARM resource.
type AppServiceEnvironmentType struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Location.
	Location string `pulumi:"location"`
	// Resource Name.
	Name string `pulumi:"name"`
	// Core resource properties
	Properties AppServiceEnvironmentResponse `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// AppServiceEnvironmentTypeInput is an input type that accepts AppServiceEnvironmentTypeArgs and AppServiceEnvironmentTypeOutput values.
// You can construct a concrete instance of `AppServiceEnvironmentTypeInput` via:
//
//          AppServiceEnvironmentTypeArgs{...}
type AppServiceEnvironmentTypeInput interface {
	pulumi.Input

	ToAppServiceEnvironmentTypeOutput() AppServiceEnvironmentTypeOutput
	ToAppServiceEnvironmentTypeOutputWithContext(context.Context) AppServiceEnvironmentTypeOutput
}

// App Service Environment ARM resource.
type AppServiceEnvironmentTypeArgs struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Location.
	Location pulumi.StringInput `pulumi:"location"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// Core resource properties
	Properties AppServiceEnvironmentResponseInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AppServiceEnvironmentTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceEnvironmentType)(nil)).Elem()
}

func (i AppServiceEnvironmentTypeArgs) ToAppServiceEnvironmentTypeOutput() AppServiceEnvironmentTypeOutput {
	return i.ToAppServiceEnvironmentTypeOutputWithContext(context.Background())
}

func (i AppServiceEnvironmentTypeArgs) ToAppServiceEnvironmentTypeOutputWithContext(ctx context.Context) AppServiceEnvironmentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceEnvironmentTypeOutput)
}

// App Service Environment ARM resource.
type AppServiceEnvironmentTypeOutput struct{ *pulumi.OutputState }

func (AppServiceEnvironmentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceEnvironmentType)(nil)).Elem()
}

func (o AppServiceEnvironmentTypeOutput) ToAppServiceEnvironmentTypeOutput() AppServiceEnvironmentTypeOutput {
	return o
}

func (o AppServiceEnvironmentTypeOutput) ToAppServiceEnvironmentTypeOutputWithContext(ctx context.Context) AppServiceEnvironmentTypeOutput {
	return o
}

// Kind of resource.
func (o AppServiceEnvironmentTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceEnvironmentType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location.
func (o AppServiceEnvironmentTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceEnvironmentType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name.
func (o AppServiceEnvironmentTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceEnvironmentType) string { return v.Name }).(pulumi.StringOutput)
}

// Core resource properties
func (o AppServiceEnvironmentTypeOutput) Properties() AppServiceEnvironmentResponseOutput {
	return o.ApplyT(func(v AppServiceEnvironmentType) AppServiceEnvironmentResponse { return v.Properties }).(AppServiceEnvironmentResponseOutput)
}

// Resource tags.
func (o AppServiceEnvironmentTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v AppServiceEnvironmentType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o AppServiceEnvironmentTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceEnvironmentType) string { return v.Type }).(pulumi.StringOutput)
}

// Description of an App Service Environment.
type AppServiceEnvironmentResponse struct {
	// List of comma separated strings describing which VM sizes are allowed for front-ends.
	AllowedMultiSizes string `pulumi:"allowedMultiSizes"`
	// List of comma separated strings describing which VM sizes are allowed for workers.
	AllowedWorkerSizes string `pulumi:"allowedWorkerSizes"`
	// API Management Account associated with the App Service Environment.
	ApiManagementAccountId *string `pulumi:"apiManagementAccountId"`
	// Custom settings for changing the behavior of the App Service Environment.
	ClusterSettings []NameValuePairResponse `pulumi:"clusterSettings"`
	// Edition of the metadata database for the App Service Environment, e.g. "Standard".
	DatabaseEdition string `pulumi:"databaseEdition"`
	// Service objective of the metadata database for the App Service Environment, e.g. "S0".
	DatabaseServiceObjective string `pulumi:"databaseServiceObjective"`
	// Default Scale Factor for FrontEnds.
	DefaultFrontEndScaleFactor int `pulumi:"defaultFrontEndScaleFactor"`
	// DNS suffix of the App Service Environment.
	DnsSuffix *string `pulumi:"dnsSuffix"`
	// True/false indicating whether the App Service Environment is suspended. The environment can be suspended e.g. when the management endpoint is no longer available
	// (most likely because NSG blocked the incoming traffic).
	DynamicCacheEnabled *bool `pulumi:"dynamicCacheEnabled"`
	// Current total, used, and available worker capacities.
	EnvironmentCapacities []StampCapacityResponse `pulumi:"environmentCapacities"`
	// True/false indicating whether the App Service Environment is healthy.
	EnvironmentIsHealthy bool `pulumi:"environmentIsHealthy"`
	// Detailed message about with results of the last check of the App Service Environment.
	EnvironmentStatus string `pulumi:"environmentStatus"`
	// Scale factor for front-ends.
	FrontEndScaleFactor *int `pulumi:"frontEndScaleFactor"`
	// Flag that displays whether an ASE has linux workers or not
	HasLinuxWorkers *bool `pulumi:"hasLinuxWorkers"`
	// Specifies which endpoints to serve internally in the Virtual Network for the App Service Environment.
	InternalLoadBalancingMode *string `pulumi:"internalLoadBalancingMode"`
	// Number of IP SSL addresses reserved for the App Service Environment.
	IpsslAddressCount *int `pulumi:"ipsslAddressCount"`
	// Last deployment action on the App Service Environment.
	LastAction string `pulumi:"lastAction"`
	// Result of the last deployment action on the App Service Environment.
	LastActionResult string `pulumi:"lastActionResult"`
	// Location of the App Service Environment, e.g. "West US".
	Location string `pulumi:"location"`
	// Maximum number of VMs in the App Service Environment.
	MaximumNumberOfMachines int `pulumi:"maximumNumberOfMachines"`
	// Number of front-end instances.
	MultiRoleCount *int `pulumi:"multiRoleCount"`
	// Front-end VM size, e.g. "Medium", "Large".
	MultiSize *string `pulumi:"multiSize"`
	// Name of the App Service Environment.
	Name string `pulumi:"name"`
	// Access control list for controlling traffic to the App Service Environment.
	NetworkAccessControlList []NetworkAccessControlEntryResponse `pulumi:"networkAccessControlList"`
	// Provisioning state of the App Service Environment.
	ProvisioningState string `pulumi:"provisioningState"`
	// Resource group of the App Service Environment.
	ResourceGroup string `pulumi:"resourceGroup"`
	// Key Vault ID for ILB App Service Environment default SSL certificate
	SslCertKeyVaultId *string `pulumi:"sslCertKeyVaultId"`
	// Key Vault Secret Name for ILB App Service Environment default SSL certificate
	SslCertKeyVaultSecretName *string `pulumi:"sslCertKeyVaultSecretName"`
	// Current status of the App Service Environment.
	Status string `pulumi:"status"`
	// Subscription of the App Service Environment.
	SubscriptionId string `pulumi:"subscriptionId"`
	// <code>true</code> if the App Service Environment is suspended; otherwise, <code>false</code>. The environment can be suspended, e.g. when the management endpoint is no longer available
	//  (most likely because NSG blocked the incoming traffic).
	Suspended *bool `pulumi:"suspended"`
	// Number of upgrade domains of the App Service Environment.
	UpgradeDomains int `pulumi:"upgradeDomains"`
	// User added ip ranges to whitelist on ASE db
	UserWhitelistedIpRanges []string `pulumi:"userWhitelistedIpRanges"`
	// Description of IP SSL mapping for the App Service Environment.
	VipMappings []VirtualIPMappingResponse `pulumi:"vipMappings"`
	// Description of the Virtual Network.
	VirtualNetwork VirtualNetworkProfileResponse `pulumi:"virtualNetwork"`
	// Name of the Virtual Network for the App Service Environment.
	VnetName *string `pulumi:"vnetName"`
	// Resource group of the Virtual Network.
	VnetResourceGroupName *string `pulumi:"vnetResourceGroupName"`
	// Subnet of the Virtual Network.
	VnetSubnetName *string `pulumi:"vnetSubnetName"`
	// Description of worker pools with worker size IDs, VM sizes, and number of workers in each pool.
	WorkerPools []WorkerPoolResponse `pulumi:"workerPools"`
}

// AppServiceEnvironmentResponseInput is an input type that accepts AppServiceEnvironmentResponseArgs and AppServiceEnvironmentResponseOutput values.
// You can construct a concrete instance of `AppServiceEnvironmentResponseInput` via:
//
//          AppServiceEnvironmentResponseArgs{...}
type AppServiceEnvironmentResponseInput interface {
	pulumi.Input

	ToAppServiceEnvironmentResponseOutput() AppServiceEnvironmentResponseOutput
	ToAppServiceEnvironmentResponseOutputWithContext(context.Context) AppServiceEnvironmentResponseOutput
}

// Description of an App Service Environment.
type AppServiceEnvironmentResponseArgs struct {
	// List of comma separated strings describing which VM sizes are allowed for front-ends.
	AllowedMultiSizes pulumi.StringInput `pulumi:"allowedMultiSizes"`
	// List of comma separated strings describing which VM sizes are allowed for workers.
	AllowedWorkerSizes pulumi.StringInput `pulumi:"allowedWorkerSizes"`
	// API Management Account associated with the App Service Environment.
	ApiManagementAccountId pulumi.StringPtrInput `pulumi:"apiManagementAccountId"`
	// Custom settings for changing the behavior of the App Service Environment.
	ClusterSettings NameValuePairResponseArrayInput `pulumi:"clusterSettings"`
	// Edition of the metadata database for the App Service Environment, e.g. "Standard".
	DatabaseEdition pulumi.StringInput `pulumi:"databaseEdition"`
	// Service objective of the metadata database for the App Service Environment, e.g. "S0".
	DatabaseServiceObjective pulumi.StringInput `pulumi:"databaseServiceObjective"`
	// Default Scale Factor for FrontEnds.
	DefaultFrontEndScaleFactor pulumi.IntInput `pulumi:"defaultFrontEndScaleFactor"`
	// DNS suffix of the App Service Environment.
	DnsSuffix pulumi.StringPtrInput `pulumi:"dnsSuffix"`
	// True/false indicating whether the App Service Environment is suspended. The environment can be suspended e.g. when the management endpoint is no longer available
	// (most likely because NSG blocked the incoming traffic).
	DynamicCacheEnabled pulumi.BoolPtrInput `pulumi:"dynamicCacheEnabled"`
	// Current total, used, and available worker capacities.
	EnvironmentCapacities StampCapacityResponseArrayInput `pulumi:"environmentCapacities"`
	// True/false indicating whether the App Service Environment is healthy.
	EnvironmentIsHealthy pulumi.BoolInput `pulumi:"environmentIsHealthy"`
	// Detailed message about with results of the last check of the App Service Environment.
	EnvironmentStatus pulumi.StringInput `pulumi:"environmentStatus"`
	// Scale factor for front-ends.
	FrontEndScaleFactor pulumi.IntPtrInput `pulumi:"frontEndScaleFactor"`
	// Flag that displays whether an ASE has linux workers or not
	HasLinuxWorkers pulumi.BoolPtrInput `pulumi:"hasLinuxWorkers"`
	// Specifies which endpoints to serve internally in the Virtual Network for the App Service Environment.
	InternalLoadBalancingMode pulumi.StringPtrInput `pulumi:"internalLoadBalancingMode"`
	// Number of IP SSL addresses reserved for the App Service Environment.
	IpsslAddressCount pulumi.IntPtrInput `pulumi:"ipsslAddressCount"`
	// Last deployment action on the App Service Environment.
	LastAction pulumi.StringInput `pulumi:"lastAction"`
	// Result of the last deployment action on the App Service Environment.
	LastActionResult pulumi.StringInput `pulumi:"lastActionResult"`
	// Location of the App Service Environment, e.g. "West US".
	Location pulumi.StringInput `pulumi:"location"`
	// Maximum number of VMs in the App Service Environment.
	MaximumNumberOfMachines pulumi.IntInput `pulumi:"maximumNumberOfMachines"`
	// Number of front-end instances.
	MultiRoleCount pulumi.IntPtrInput `pulumi:"multiRoleCount"`
	// Front-end VM size, e.g. "Medium", "Large".
	MultiSize pulumi.StringPtrInput `pulumi:"multiSize"`
	// Name of the App Service Environment.
	Name pulumi.StringInput `pulumi:"name"`
	// Access control list for controlling traffic to the App Service Environment.
	NetworkAccessControlList NetworkAccessControlEntryResponseArrayInput `pulumi:"networkAccessControlList"`
	// Provisioning state of the App Service Environment.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Resource group of the App Service Environment.
	ResourceGroup pulumi.StringInput `pulumi:"resourceGroup"`
	// Key Vault ID for ILB App Service Environment default SSL certificate
	SslCertKeyVaultId pulumi.StringPtrInput `pulumi:"sslCertKeyVaultId"`
	// Key Vault Secret Name for ILB App Service Environment default SSL certificate
	SslCertKeyVaultSecretName pulumi.StringPtrInput `pulumi:"sslCertKeyVaultSecretName"`
	// Current status of the App Service Environment.
	Status pulumi.StringInput `pulumi:"status"`
	// Subscription of the App Service Environment.
	SubscriptionId pulumi.StringInput `pulumi:"subscriptionId"`
	// <code>true</code> if the App Service Environment is suspended; otherwise, <code>false</code>. The environment can be suspended, e.g. when the management endpoint is no longer available
	//  (most likely because NSG blocked the incoming traffic).
	Suspended pulumi.BoolPtrInput `pulumi:"suspended"`
	// Number of upgrade domains of the App Service Environment.
	UpgradeDomains pulumi.IntInput `pulumi:"upgradeDomains"`
	// User added ip ranges to whitelist on ASE db
	UserWhitelistedIpRanges pulumi.StringArrayInput `pulumi:"userWhitelistedIpRanges"`
	// Description of IP SSL mapping for the App Service Environment.
	VipMappings VirtualIPMappingResponseArrayInput `pulumi:"vipMappings"`
	// Description of the Virtual Network.
	VirtualNetwork VirtualNetworkProfileResponseInput `pulumi:"virtualNetwork"`
	// Name of the Virtual Network for the App Service Environment.
	VnetName pulumi.StringPtrInput `pulumi:"vnetName"`
	// Resource group of the Virtual Network.
	VnetResourceGroupName pulumi.StringPtrInput `pulumi:"vnetResourceGroupName"`
	// Subnet of the Virtual Network.
	VnetSubnetName pulumi.StringPtrInput `pulumi:"vnetSubnetName"`
	// Description of worker pools with worker size IDs, VM sizes, and number of workers in each pool.
	WorkerPools WorkerPoolResponseArrayInput `pulumi:"workerPools"`
}

func (AppServiceEnvironmentResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceEnvironmentResponse)(nil)).Elem()
}

func (i AppServiceEnvironmentResponseArgs) ToAppServiceEnvironmentResponseOutput() AppServiceEnvironmentResponseOutput {
	return i.ToAppServiceEnvironmentResponseOutputWithContext(context.Background())
}

func (i AppServiceEnvironmentResponseArgs) ToAppServiceEnvironmentResponseOutputWithContext(ctx context.Context) AppServiceEnvironmentResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceEnvironmentResponseOutput)
}

func (i AppServiceEnvironmentResponseArgs) ToAppServiceEnvironmentResponsePtrOutput() AppServiceEnvironmentResponsePtrOutput {
	return i.ToAppServiceEnvironmentResponsePtrOutputWithContext(context.Background())
}

func (i AppServiceEnvironmentResponseArgs) ToAppServiceEnvironmentResponsePtrOutputWithContext(ctx context.Context) AppServiceEnvironmentResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceEnvironmentResponseOutput).ToAppServiceEnvironmentResponsePtrOutputWithContext(ctx)
}

// AppServiceEnvironmentResponsePtrInput is an input type that accepts AppServiceEnvironmentResponseArgs, AppServiceEnvironmentResponsePtr and AppServiceEnvironmentResponsePtrOutput values.
// You can construct a concrete instance of `AppServiceEnvironmentResponsePtrInput` via:
//
//          AppServiceEnvironmentResponseArgs{...}
//
//  or:
//
//          nil
type AppServiceEnvironmentResponsePtrInput interface {
	pulumi.Input

	ToAppServiceEnvironmentResponsePtrOutput() AppServiceEnvironmentResponsePtrOutput
	ToAppServiceEnvironmentResponsePtrOutputWithContext(context.Context) AppServiceEnvironmentResponsePtrOutput
}

type appServiceEnvironmentResponsePtrType AppServiceEnvironmentResponseArgs

func AppServiceEnvironmentResponsePtr(v *AppServiceEnvironmentResponseArgs) AppServiceEnvironmentResponsePtrInput {
	return (*appServiceEnvironmentResponsePtrType)(v)
}

func (*appServiceEnvironmentResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceEnvironmentResponse)(nil)).Elem()
}

func (i *appServiceEnvironmentResponsePtrType) ToAppServiceEnvironmentResponsePtrOutput() AppServiceEnvironmentResponsePtrOutput {
	return i.ToAppServiceEnvironmentResponsePtrOutputWithContext(context.Background())
}

func (i *appServiceEnvironmentResponsePtrType) ToAppServiceEnvironmentResponsePtrOutputWithContext(ctx context.Context) AppServiceEnvironmentResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceEnvironmentResponsePtrOutput)
}

// Description of an App Service Environment.
type AppServiceEnvironmentResponseOutput struct{ *pulumi.OutputState }

func (AppServiceEnvironmentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceEnvironmentResponse)(nil)).Elem()
}

func (o AppServiceEnvironmentResponseOutput) ToAppServiceEnvironmentResponseOutput() AppServiceEnvironmentResponseOutput {
	return o
}

func (o AppServiceEnvironmentResponseOutput) ToAppServiceEnvironmentResponseOutputWithContext(ctx context.Context) AppServiceEnvironmentResponseOutput {
	return o
}

func (o AppServiceEnvironmentResponseOutput) ToAppServiceEnvironmentResponsePtrOutput() AppServiceEnvironmentResponsePtrOutput {
	return o.ToAppServiceEnvironmentResponsePtrOutputWithContext(context.Background())
}

func (o AppServiceEnvironmentResponseOutput) ToAppServiceEnvironmentResponsePtrOutputWithContext(ctx context.Context) AppServiceEnvironmentResponsePtrOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) *AppServiceEnvironmentResponse {
		return &v
	}).(AppServiceEnvironmentResponsePtrOutput)
}

// List of comma separated strings describing which VM sizes are allowed for front-ends.
func (o AppServiceEnvironmentResponseOutput) AllowedMultiSizes() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) string { return v.AllowedMultiSizes }).(pulumi.StringOutput)
}

// List of comma separated strings describing which VM sizes are allowed for workers.
func (o AppServiceEnvironmentResponseOutput) AllowedWorkerSizes() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) string { return v.AllowedWorkerSizes }).(pulumi.StringOutput)
}

// API Management Account associated with the App Service Environment.
func (o AppServiceEnvironmentResponseOutput) ApiManagementAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) *string { return v.ApiManagementAccountId }).(pulumi.StringPtrOutput)
}

// Custom settings for changing the behavior of the App Service Environment.
func (o AppServiceEnvironmentResponseOutput) ClusterSettings() NameValuePairResponseArrayOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) []NameValuePairResponse { return v.ClusterSettings }).(NameValuePairResponseArrayOutput)
}

// Edition of the metadata database for the App Service Environment, e.g. "Standard".
func (o AppServiceEnvironmentResponseOutput) DatabaseEdition() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) string { return v.DatabaseEdition }).(pulumi.StringOutput)
}

// Service objective of the metadata database for the App Service Environment, e.g. "S0".
func (o AppServiceEnvironmentResponseOutput) DatabaseServiceObjective() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) string { return v.DatabaseServiceObjective }).(pulumi.StringOutput)
}

// Default Scale Factor for FrontEnds.
func (o AppServiceEnvironmentResponseOutput) DefaultFrontEndScaleFactor() pulumi.IntOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) int { return v.DefaultFrontEndScaleFactor }).(pulumi.IntOutput)
}

// DNS suffix of the App Service Environment.
func (o AppServiceEnvironmentResponseOutput) DnsSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) *string { return v.DnsSuffix }).(pulumi.StringPtrOutput)
}

// True/false indicating whether the App Service Environment is suspended. The environment can be suspended e.g. when the management endpoint is no longer available
// (most likely because NSG blocked the incoming traffic).
func (o AppServiceEnvironmentResponseOutput) DynamicCacheEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) *bool { return v.DynamicCacheEnabled }).(pulumi.BoolPtrOutput)
}

// Current total, used, and available worker capacities.
func (o AppServiceEnvironmentResponseOutput) EnvironmentCapacities() StampCapacityResponseArrayOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) []StampCapacityResponse { return v.EnvironmentCapacities }).(StampCapacityResponseArrayOutput)
}

// True/false indicating whether the App Service Environment is healthy.
func (o AppServiceEnvironmentResponseOutput) EnvironmentIsHealthy() pulumi.BoolOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) bool { return v.EnvironmentIsHealthy }).(pulumi.BoolOutput)
}

// Detailed message about with results of the last check of the App Service Environment.
func (o AppServiceEnvironmentResponseOutput) EnvironmentStatus() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) string { return v.EnvironmentStatus }).(pulumi.StringOutput)
}

// Scale factor for front-ends.
func (o AppServiceEnvironmentResponseOutput) FrontEndScaleFactor() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) *int { return v.FrontEndScaleFactor }).(pulumi.IntPtrOutput)
}

// Flag that displays whether an ASE has linux workers or not
func (o AppServiceEnvironmentResponseOutput) HasLinuxWorkers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) *bool { return v.HasLinuxWorkers }).(pulumi.BoolPtrOutput)
}

// Specifies which endpoints to serve internally in the Virtual Network for the App Service Environment.
func (o AppServiceEnvironmentResponseOutput) InternalLoadBalancingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) *string { return v.InternalLoadBalancingMode }).(pulumi.StringPtrOutput)
}

// Number of IP SSL addresses reserved for the App Service Environment.
func (o AppServiceEnvironmentResponseOutput) IpsslAddressCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) *int { return v.IpsslAddressCount }).(pulumi.IntPtrOutput)
}

// Last deployment action on the App Service Environment.
func (o AppServiceEnvironmentResponseOutput) LastAction() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) string { return v.LastAction }).(pulumi.StringOutput)
}

// Result of the last deployment action on the App Service Environment.
func (o AppServiceEnvironmentResponseOutput) LastActionResult() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) string { return v.LastActionResult }).(pulumi.StringOutput)
}

// Location of the App Service Environment, e.g. "West US".
func (o AppServiceEnvironmentResponseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) string { return v.Location }).(pulumi.StringOutput)
}

// Maximum number of VMs in the App Service Environment.
func (o AppServiceEnvironmentResponseOutput) MaximumNumberOfMachines() pulumi.IntOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) int { return v.MaximumNumberOfMachines }).(pulumi.IntOutput)
}

// Number of front-end instances.
func (o AppServiceEnvironmentResponseOutput) MultiRoleCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) *int { return v.MultiRoleCount }).(pulumi.IntPtrOutput)
}

// Front-end VM size, e.g. "Medium", "Large".
func (o AppServiceEnvironmentResponseOutput) MultiSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) *string { return v.MultiSize }).(pulumi.StringPtrOutput)
}

// Name of the App Service Environment.
func (o AppServiceEnvironmentResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Access control list for controlling traffic to the App Service Environment.
func (o AppServiceEnvironmentResponseOutput) NetworkAccessControlList() NetworkAccessControlEntryResponseArrayOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) []NetworkAccessControlEntryResponse {
		return v.NetworkAccessControlList
	}).(NetworkAccessControlEntryResponseArrayOutput)
}

// Provisioning state of the App Service Environment.
func (o AppServiceEnvironmentResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Resource group of the App Service Environment.
func (o AppServiceEnvironmentResponseOutput) ResourceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) string { return v.ResourceGroup }).(pulumi.StringOutput)
}

// Key Vault ID for ILB App Service Environment default SSL certificate
func (o AppServiceEnvironmentResponseOutput) SslCertKeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) *string { return v.SslCertKeyVaultId }).(pulumi.StringPtrOutput)
}

// Key Vault Secret Name for ILB App Service Environment default SSL certificate
func (o AppServiceEnvironmentResponseOutput) SslCertKeyVaultSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) *string { return v.SslCertKeyVaultSecretName }).(pulumi.StringPtrOutput)
}

// Current status of the App Service Environment.
func (o AppServiceEnvironmentResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) string { return v.Status }).(pulumi.StringOutput)
}

// Subscription of the App Service Environment.
func (o AppServiceEnvironmentResponseOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

// <code>true</code> if the App Service Environment is suspended; otherwise, <code>false</code>. The environment can be suspended, e.g. when the management endpoint is no longer available
//  (most likely because NSG blocked the incoming traffic).
func (o AppServiceEnvironmentResponseOutput) Suspended() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) *bool { return v.Suspended }).(pulumi.BoolPtrOutput)
}

// Number of upgrade domains of the App Service Environment.
func (o AppServiceEnvironmentResponseOutput) UpgradeDomains() pulumi.IntOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) int { return v.UpgradeDomains }).(pulumi.IntOutput)
}

// User added ip ranges to whitelist on ASE db
func (o AppServiceEnvironmentResponseOutput) UserWhitelistedIpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) []string { return v.UserWhitelistedIpRanges }).(pulumi.StringArrayOutput)
}

// Description of IP SSL mapping for the App Service Environment.
func (o AppServiceEnvironmentResponseOutput) VipMappings() VirtualIPMappingResponseArrayOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) []VirtualIPMappingResponse { return v.VipMappings }).(VirtualIPMappingResponseArrayOutput)
}

// Description of the Virtual Network.
func (o AppServiceEnvironmentResponseOutput) VirtualNetwork() VirtualNetworkProfileResponseOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) VirtualNetworkProfileResponse { return v.VirtualNetwork }).(VirtualNetworkProfileResponseOutput)
}

// Name of the Virtual Network for the App Service Environment.
func (o AppServiceEnvironmentResponseOutput) VnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) *string { return v.VnetName }).(pulumi.StringPtrOutput)
}

// Resource group of the Virtual Network.
func (o AppServiceEnvironmentResponseOutput) VnetResourceGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) *string { return v.VnetResourceGroupName }).(pulumi.StringPtrOutput)
}

// Subnet of the Virtual Network.
func (o AppServiceEnvironmentResponseOutput) VnetSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) *string { return v.VnetSubnetName }).(pulumi.StringPtrOutput)
}

// Description of worker pools with worker size IDs, VM sizes, and number of workers in each pool.
func (o AppServiceEnvironmentResponseOutput) WorkerPools() WorkerPoolResponseArrayOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) []WorkerPoolResponse { return v.WorkerPools }).(WorkerPoolResponseArrayOutput)
}

type AppServiceEnvironmentResponsePtrOutput struct{ *pulumi.OutputState }

func (AppServiceEnvironmentResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceEnvironmentResponse)(nil)).Elem()
}

func (o AppServiceEnvironmentResponsePtrOutput) ToAppServiceEnvironmentResponsePtrOutput() AppServiceEnvironmentResponsePtrOutput {
	return o
}

func (o AppServiceEnvironmentResponsePtrOutput) ToAppServiceEnvironmentResponsePtrOutputWithContext(ctx context.Context) AppServiceEnvironmentResponsePtrOutput {
	return o
}

func (o AppServiceEnvironmentResponsePtrOutput) Elem() AppServiceEnvironmentResponseOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) AppServiceEnvironmentResponse { return *v }).(AppServiceEnvironmentResponseOutput)
}

// List of comma separated strings describing which VM sizes are allowed for front-ends.
func (o AppServiceEnvironmentResponsePtrOutput) AllowedMultiSizes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AllowedMultiSizes
	}).(pulumi.StringPtrOutput)
}

// List of comma separated strings describing which VM sizes are allowed for workers.
func (o AppServiceEnvironmentResponsePtrOutput) AllowedWorkerSizes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AllowedWorkerSizes
	}).(pulumi.StringPtrOutput)
}

// API Management Account associated with the App Service Environment.
func (o AppServiceEnvironmentResponsePtrOutput) ApiManagementAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return v.ApiManagementAccountId
	}).(pulumi.StringPtrOutput)
}

// Custom settings for changing the behavior of the App Service Environment.
func (o AppServiceEnvironmentResponsePtrOutput) ClusterSettings() NameValuePairResponseArrayOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) []NameValuePairResponse {
		if v == nil {
			return nil
		}
		return v.ClusterSettings
	}).(NameValuePairResponseArrayOutput)
}

// Edition of the metadata database for the App Service Environment, e.g. "Standard".
func (o AppServiceEnvironmentResponsePtrOutput) DatabaseEdition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DatabaseEdition
	}).(pulumi.StringPtrOutput)
}

// Service objective of the metadata database for the App Service Environment, e.g. "S0".
func (o AppServiceEnvironmentResponsePtrOutput) DatabaseServiceObjective() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DatabaseServiceObjective
	}).(pulumi.StringPtrOutput)
}

// Default Scale Factor for FrontEnds.
func (o AppServiceEnvironmentResponsePtrOutput) DefaultFrontEndScaleFactor() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *int {
		if v == nil {
			return nil
		}
		return &v.DefaultFrontEndScaleFactor
	}).(pulumi.IntPtrOutput)
}

// DNS suffix of the App Service Environment.
func (o AppServiceEnvironmentResponsePtrOutput) DnsSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return v.DnsSuffix
	}).(pulumi.StringPtrOutput)
}

// True/false indicating whether the App Service Environment is suspended. The environment can be suspended e.g. when the management endpoint is no longer available
// (most likely because NSG blocked the incoming traffic).
func (o AppServiceEnvironmentResponsePtrOutput) DynamicCacheEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *bool {
		if v == nil {
			return nil
		}
		return v.DynamicCacheEnabled
	}).(pulumi.BoolPtrOutput)
}

// Current total, used, and available worker capacities.
func (o AppServiceEnvironmentResponsePtrOutput) EnvironmentCapacities() StampCapacityResponseArrayOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) []StampCapacityResponse {
		if v == nil {
			return nil
		}
		return v.EnvironmentCapacities
	}).(StampCapacityResponseArrayOutput)
}

// True/false indicating whether the App Service Environment is healthy.
func (o AppServiceEnvironmentResponsePtrOutput) EnvironmentIsHealthy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.EnvironmentIsHealthy
	}).(pulumi.BoolPtrOutput)
}

// Detailed message about with results of the last check of the App Service Environment.
func (o AppServiceEnvironmentResponsePtrOutput) EnvironmentStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return &v.EnvironmentStatus
	}).(pulumi.StringPtrOutput)
}

// Scale factor for front-ends.
func (o AppServiceEnvironmentResponsePtrOutput) FrontEndScaleFactor() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *int {
		if v == nil {
			return nil
		}
		return v.FrontEndScaleFactor
	}).(pulumi.IntPtrOutput)
}

// Flag that displays whether an ASE has linux workers or not
func (o AppServiceEnvironmentResponsePtrOutput) HasLinuxWorkers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *bool {
		if v == nil {
			return nil
		}
		return v.HasLinuxWorkers
	}).(pulumi.BoolPtrOutput)
}

// Specifies which endpoints to serve internally in the Virtual Network for the App Service Environment.
func (o AppServiceEnvironmentResponsePtrOutput) InternalLoadBalancingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return v.InternalLoadBalancingMode
	}).(pulumi.StringPtrOutput)
}

// Number of IP SSL addresses reserved for the App Service Environment.
func (o AppServiceEnvironmentResponsePtrOutput) IpsslAddressCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *int {
		if v == nil {
			return nil
		}
		return v.IpsslAddressCount
	}).(pulumi.IntPtrOutput)
}

// Last deployment action on the App Service Environment.
func (o AppServiceEnvironmentResponsePtrOutput) LastAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastAction
	}).(pulumi.StringPtrOutput)
}

// Result of the last deployment action on the App Service Environment.
func (o AppServiceEnvironmentResponsePtrOutput) LastActionResult() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastActionResult
	}).(pulumi.StringPtrOutput)
}

// Location of the App Service Environment, e.g. "West US".
func (o AppServiceEnvironmentResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Location
	}).(pulumi.StringPtrOutput)
}

// Maximum number of VMs in the App Service Environment.
func (o AppServiceEnvironmentResponsePtrOutput) MaximumNumberOfMachines() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *int {
		if v == nil {
			return nil
		}
		return &v.MaximumNumberOfMachines
	}).(pulumi.IntPtrOutput)
}

// Number of front-end instances.
func (o AppServiceEnvironmentResponsePtrOutput) MultiRoleCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *int {
		if v == nil {
			return nil
		}
		return v.MultiRoleCount
	}).(pulumi.IntPtrOutput)
}

// Front-end VM size, e.g. "Medium", "Large".
func (o AppServiceEnvironmentResponsePtrOutput) MultiSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return v.MultiSize
	}).(pulumi.StringPtrOutput)
}

// Name of the App Service Environment.
func (o AppServiceEnvironmentResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Access control list for controlling traffic to the App Service Environment.
func (o AppServiceEnvironmentResponsePtrOutput) NetworkAccessControlList() NetworkAccessControlEntryResponseArrayOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) []NetworkAccessControlEntryResponse {
		if v == nil {
			return nil
		}
		return v.NetworkAccessControlList
	}).(NetworkAccessControlEntryResponseArrayOutput)
}

// Provisioning state of the App Service Environment.
func (o AppServiceEnvironmentResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Resource group of the App Service Environment.
func (o AppServiceEnvironmentResponsePtrOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGroup
	}).(pulumi.StringPtrOutput)
}

// Key Vault ID for ILB App Service Environment default SSL certificate
func (o AppServiceEnvironmentResponsePtrOutput) SslCertKeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return v.SslCertKeyVaultId
	}).(pulumi.StringPtrOutput)
}

// Key Vault Secret Name for ILB App Service Environment default SSL certificate
func (o AppServiceEnvironmentResponsePtrOutput) SslCertKeyVaultSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return v.SslCertKeyVaultSecretName
	}).(pulumi.StringPtrOutput)
}

// Current status of the App Service Environment.
func (o AppServiceEnvironmentResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// Subscription of the App Service Environment.
func (o AppServiceEnvironmentResponsePtrOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SubscriptionId
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> if the App Service Environment is suspended; otherwise, <code>false</code>. The environment can be suspended, e.g. when the management endpoint is no longer available
//  (most likely because NSG blocked the incoming traffic).
func (o AppServiceEnvironmentResponsePtrOutput) Suspended() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Suspended
	}).(pulumi.BoolPtrOutput)
}

// Number of upgrade domains of the App Service Environment.
func (o AppServiceEnvironmentResponsePtrOutput) UpgradeDomains() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *int {
		if v == nil {
			return nil
		}
		return &v.UpgradeDomains
	}).(pulumi.IntPtrOutput)
}

// User added ip ranges to whitelist on ASE db
func (o AppServiceEnvironmentResponsePtrOutput) UserWhitelistedIpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) []string {
		if v == nil {
			return nil
		}
		return v.UserWhitelistedIpRanges
	}).(pulumi.StringArrayOutput)
}

// Description of IP SSL mapping for the App Service Environment.
func (o AppServiceEnvironmentResponsePtrOutput) VipMappings() VirtualIPMappingResponseArrayOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) []VirtualIPMappingResponse {
		if v == nil {
			return nil
		}
		return v.VipMappings
	}).(VirtualIPMappingResponseArrayOutput)
}

// Description of the Virtual Network.
func (o AppServiceEnvironmentResponsePtrOutput) VirtualNetwork() VirtualNetworkProfileResponsePtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *VirtualNetworkProfileResponse {
		if v == nil {
			return nil
		}
		return &v.VirtualNetwork
	}).(VirtualNetworkProfileResponsePtrOutput)
}

// Name of the Virtual Network for the App Service Environment.
func (o AppServiceEnvironmentResponsePtrOutput) VnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return v.VnetName
	}).(pulumi.StringPtrOutput)
}

// Resource group of the Virtual Network.
func (o AppServiceEnvironmentResponsePtrOutput) VnetResourceGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return v.VnetResourceGroupName
	}).(pulumi.StringPtrOutput)
}

// Subnet of the Virtual Network.
func (o AppServiceEnvironmentResponsePtrOutput) VnetSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return v.VnetSubnetName
	}).(pulumi.StringPtrOutput)
}

// Description of worker pools with worker size IDs, VM sizes, and number of workers in each pool.
func (o AppServiceEnvironmentResponsePtrOutput) WorkerPools() WorkerPoolResponseArrayOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) []WorkerPoolResponse {
		if v == nil {
			return nil
		}
		return v.WorkerPools
	}).(WorkerPoolResponseArrayOutput)
}

// App Service plan.
type AppServicePlanType struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Location.
	Location string `pulumi:"location"`
	// Resource Name.
	Name string `pulumi:"name"`
	// AppServicePlan resource specific properties
	Properties AppServicePlanResponseProperties `pulumi:"properties"`
	// Description of a SKU for a scalable resource.
	Sku *SkuDescriptionResponse `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// AppServicePlanTypeInput is an input type that accepts AppServicePlanTypeArgs and AppServicePlanTypeOutput values.
// You can construct a concrete instance of `AppServicePlanTypeInput` via:
//
//          AppServicePlanTypeArgs{...}
type AppServicePlanTypeInput interface {
	pulumi.Input

	ToAppServicePlanTypeOutput() AppServicePlanTypeOutput
	ToAppServicePlanTypeOutputWithContext(context.Context) AppServicePlanTypeOutput
}

// App Service plan.
type AppServicePlanTypeArgs struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Location.
	Location pulumi.StringInput `pulumi:"location"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// AppServicePlan resource specific properties
	Properties AppServicePlanResponsePropertiesInput `pulumi:"properties"`
	// Description of a SKU for a scalable resource.
	Sku SkuDescriptionResponsePtrInput `pulumi:"sku"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AppServicePlanTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServicePlanType)(nil)).Elem()
}

func (i AppServicePlanTypeArgs) ToAppServicePlanTypeOutput() AppServicePlanTypeOutput {
	return i.ToAppServicePlanTypeOutputWithContext(context.Background())
}

func (i AppServicePlanTypeArgs) ToAppServicePlanTypeOutputWithContext(ctx context.Context) AppServicePlanTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServicePlanTypeOutput)
}

// App Service plan.
type AppServicePlanTypeOutput struct{ *pulumi.OutputState }

func (AppServicePlanTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServicePlanType)(nil)).Elem()
}

func (o AppServicePlanTypeOutput) ToAppServicePlanTypeOutput() AppServicePlanTypeOutput {
	return o
}

func (o AppServicePlanTypeOutput) ToAppServicePlanTypeOutputWithContext(ctx context.Context) AppServicePlanTypeOutput {
	return o
}

// Kind of resource.
func (o AppServicePlanTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServicePlanType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location.
func (o AppServicePlanTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v AppServicePlanType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name.
func (o AppServicePlanTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AppServicePlanType) string { return v.Name }).(pulumi.StringOutput)
}

// AppServicePlan resource specific properties
func (o AppServicePlanTypeOutput) Properties() AppServicePlanResponsePropertiesOutput {
	return o.ApplyT(func(v AppServicePlanType) AppServicePlanResponseProperties { return v.Properties }).(AppServicePlanResponsePropertiesOutput)
}

// Description of a SKU for a scalable resource.
func (o AppServicePlanTypeOutput) Sku() SkuDescriptionResponsePtrOutput {
	return o.ApplyT(func(v AppServicePlanType) *SkuDescriptionResponse { return v.Sku }).(SkuDescriptionResponsePtrOutput)
}

// Resource tags.
func (o AppServicePlanTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v AppServicePlanType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o AppServicePlanTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AppServicePlanType) string { return v.Type }).(pulumi.StringOutput)
}

// AppServicePlan resource specific properties
type AppServicePlanResponseProperties struct {
	// The time when the server farm free offer expires.
	FreeOfferExpirationTime *string `pulumi:"freeOfferExpirationTime"`
	// Geographical location for the App Service plan.
	GeoRegion string `pulumi:"geoRegion"`
	// Specification for the App Service Environment to use for the App Service plan.
	HostingEnvironmentProfile *HostingEnvironmentProfileResponse `pulumi:"hostingEnvironmentProfile"`
	// If Hyper-V container app service plan <code>true</code>, <code>false</code> otherwise.
	HyperV *bool `pulumi:"hyperV"`
	// If <code>true</code>, this App Service Plan owns spot instances.
	IsSpot *bool `pulumi:"isSpot"`
	// Obsolete: If Hyper-V container app service plan <code>true</code>, <code>false</code> otherwise.
	IsXenon *bool `pulumi:"isXenon"`
	// Maximum number of total workers allowed for this ElasticScaleEnabled App Service Plan
	MaximumElasticWorkerCount *int `pulumi:"maximumElasticWorkerCount"`
	// Maximum number of instances that can be assigned to this App Service plan.
	MaximumNumberOfWorkers int `pulumi:"maximumNumberOfWorkers"`
	// Number of apps assigned to this App Service plan.
	NumberOfSites int `pulumi:"numberOfSites"`
	// If <code>true</code>, apps assigned to this App Service plan can be scaled independently.
	// If <code>false</code>, apps assigned to this App Service plan will scale to all instances of the plan.
	PerSiteScaling *bool `pulumi:"perSiteScaling"`
	// Provisioning state of the App Service Environment.
	ProvisioningState string `pulumi:"provisioningState"`
	// If Linux app service plan <code>true</code>, <code>false</code> otherwise.
	Reserved *bool `pulumi:"reserved"`
	// Resource group of the App Service plan.
	ResourceGroup string `pulumi:"resourceGroup"`
	// The time when the server farm expires. Valid only if it is a spot server farm.
	SpotExpirationTime *string `pulumi:"spotExpirationTime"`
	// App Service plan status.
	Status string `pulumi:"status"`
	// App Service plan subscription.
	Subscription string `pulumi:"subscription"`
	// Scaling worker count.
	TargetWorkerCount *int `pulumi:"targetWorkerCount"`
	// Scaling worker size ID.
	TargetWorkerSizeId *int `pulumi:"targetWorkerSizeId"`
	// Target worker tier assigned to the App Service plan.
	WorkerTierName *string `pulumi:"workerTierName"`
}

// AppServicePlanResponsePropertiesInput is an input type that accepts AppServicePlanResponsePropertiesArgs and AppServicePlanResponsePropertiesOutput values.
// You can construct a concrete instance of `AppServicePlanResponsePropertiesInput` via:
//
//          AppServicePlanResponsePropertiesArgs{...}
type AppServicePlanResponsePropertiesInput interface {
	pulumi.Input

	ToAppServicePlanResponsePropertiesOutput() AppServicePlanResponsePropertiesOutput
	ToAppServicePlanResponsePropertiesOutputWithContext(context.Context) AppServicePlanResponsePropertiesOutput
}

// AppServicePlan resource specific properties
type AppServicePlanResponsePropertiesArgs struct {
	// The time when the server farm free offer expires.
	FreeOfferExpirationTime pulumi.StringPtrInput `pulumi:"freeOfferExpirationTime"`
	// Geographical location for the App Service plan.
	GeoRegion pulumi.StringInput `pulumi:"geoRegion"`
	// Specification for the App Service Environment to use for the App Service plan.
	HostingEnvironmentProfile HostingEnvironmentProfileResponsePtrInput `pulumi:"hostingEnvironmentProfile"`
	// If Hyper-V container app service plan <code>true</code>, <code>false</code> otherwise.
	HyperV pulumi.BoolPtrInput `pulumi:"hyperV"`
	// If <code>true</code>, this App Service Plan owns spot instances.
	IsSpot pulumi.BoolPtrInput `pulumi:"isSpot"`
	// Obsolete: If Hyper-V container app service plan <code>true</code>, <code>false</code> otherwise.
	IsXenon pulumi.BoolPtrInput `pulumi:"isXenon"`
	// Maximum number of total workers allowed for this ElasticScaleEnabled App Service Plan
	MaximumElasticWorkerCount pulumi.IntPtrInput `pulumi:"maximumElasticWorkerCount"`
	// Maximum number of instances that can be assigned to this App Service plan.
	MaximumNumberOfWorkers pulumi.IntInput `pulumi:"maximumNumberOfWorkers"`
	// Number of apps assigned to this App Service plan.
	NumberOfSites pulumi.IntInput `pulumi:"numberOfSites"`
	// If <code>true</code>, apps assigned to this App Service plan can be scaled independently.
	// If <code>false</code>, apps assigned to this App Service plan will scale to all instances of the plan.
	PerSiteScaling pulumi.BoolPtrInput `pulumi:"perSiteScaling"`
	// Provisioning state of the App Service Environment.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// If Linux app service plan <code>true</code>, <code>false</code> otherwise.
	Reserved pulumi.BoolPtrInput `pulumi:"reserved"`
	// Resource group of the App Service plan.
	ResourceGroup pulumi.StringInput `pulumi:"resourceGroup"`
	// The time when the server farm expires. Valid only if it is a spot server farm.
	SpotExpirationTime pulumi.StringPtrInput `pulumi:"spotExpirationTime"`
	// App Service plan status.
	Status pulumi.StringInput `pulumi:"status"`
	// App Service plan subscription.
	Subscription pulumi.StringInput `pulumi:"subscription"`
	// Scaling worker count.
	TargetWorkerCount pulumi.IntPtrInput `pulumi:"targetWorkerCount"`
	// Scaling worker size ID.
	TargetWorkerSizeId pulumi.IntPtrInput `pulumi:"targetWorkerSizeId"`
	// Target worker tier assigned to the App Service plan.
	WorkerTierName pulumi.StringPtrInput `pulumi:"workerTierName"`
}

func (AppServicePlanResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServicePlanResponseProperties)(nil)).Elem()
}

func (i AppServicePlanResponsePropertiesArgs) ToAppServicePlanResponsePropertiesOutput() AppServicePlanResponsePropertiesOutput {
	return i.ToAppServicePlanResponsePropertiesOutputWithContext(context.Background())
}

func (i AppServicePlanResponsePropertiesArgs) ToAppServicePlanResponsePropertiesOutputWithContext(ctx context.Context) AppServicePlanResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServicePlanResponsePropertiesOutput)
}

func (i AppServicePlanResponsePropertiesArgs) ToAppServicePlanResponsePropertiesPtrOutput() AppServicePlanResponsePropertiesPtrOutput {
	return i.ToAppServicePlanResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i AppServicePlanResponsePropertiesArgs) ToAppServicePlanResponsePropertiesPtrOutputWithContext(ctx context.Context) AppServicePlanResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServicePlanResponsePropertiesOutput).ToAppServicePlanResponsePropertiesPtrOutputWithContext(ctx)
}

// AppServicePlanResponsePropertiesPtrInput is an input type that accepts AppServicePlanResponsePropertiesArgs, AppServicePlanResponsePropertiesPtr and AppServicePlanResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `AppServicePlanResponsePropertiesPtrInput` via:
//
//          AppServicePlanResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type AppServicePlanResponsePropertiesPtrInput interface {
	pulumi.Input

	ToAppServicePlanResponsePropertiesPtrOutput() AppServicePlanResponsePropertiesPtrOutput
	ToAppServicePlanResponsePropertiesPtrOutputWithContext(context.Context) AppServicePlanResponsePropertiesPtrOutput
}

type appServicePlanResponsePropertiesPtrType AppServicePlanResponsePropertiesArgs

func AppServicePlanResponsePropertiesPtr(v *AppServicePlanResponsePropertiesArgs) AppServicePlanResponsePropertiesPtrInput {
	return (*appServicePlanResponsePropertiesPtrType)(v)
}

func (*appServicePlanResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServicePlanResponseProperties)(nil)).Elem()
}

func (i *appServicePlanResponsePropertiesPtrType) ToAppServicePlanResponsePropertiesPtrOutput() AppServicePlanResponsePropertiesPtrOutput {
	return i.ToAppServicePlanResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *appServicePlanResponsePropertiesPtrType) ToAppServicePlanResponsePropertiesPtrOutputWithContext(ctx context.Context) AppServicePlanResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServicePlanResponsePropertiesPtrOutput)
}

// AppServicePlan resource specific properties
type AppServicePlanResponsePropertiesOutput struct{ *pulumi.OutputState }

func (AppServicePlanResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServicePlanResponseProperties)(nil)).Elem()
}

func (o AppServicePlanResponsePropertiesOutput) ToAppServicePlanResponsePropertiesOutput() AppServicePlanResponsePropertiesOutput {
	return o
}

func (o AppServicePlanResponsePropertiesOutput) ToAppServicePlanResponsePropertiesOutputWithContext(ctx context.Context) AppServicePlanResponsePropertiesOutput {
	return o
}

func (o AppServicePlanResponsePropertiesOutput) ToAppServicePlanResponsePropertiesPtrOutput() AppServicePlanResponsePropertiesPtrOutput {
	return o.ToAppServicePlanResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o AppServicePlanResponsePropertiesOutput) ToAppServicePlanResponsePropertiesPtrOutputWithContext(ctx context.Context) AppServicePlanResponsePropertiesPtrOutput {
	return o.ApplyT(func(v AppServicePlanResponseProperties) *AppServicePlanResponseProperties {
		return &v
	}).(AppServicePlanResponsePropertiesPtrOutput)
}

// The time when the server farm free offer expires.
func (o AppServicePlanResponsePropertiesOutput) FreeOfferExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServicePlanResponseProperties) *string { return v.FreeOfferExpirationTime }).(pulumi.StringPtrOutput)
}

// Geographical location for the App Service plan.
func (o AppServicePlanResponsePropertiesOutput) GeoRegion() pulumi.StringOutput {
	return o.ApplyT(func(v AppServicePlanResponseProperties) string { return v.GeoRegion }).(pulumi.StringOutput)
}

// Specification for the App Service Environment to use for the App Service plan.
func (o AppServicePlanResponsePropertiesOutput) HostingEnvironmentProfile() HostingEnvironmentProfileResponsePtrOutput {
	return o.ApplyT(func(v AppServicePlanResponseProperties) *HostingEnvironmentProfileResponse {
		return v.HostingEnvironmentProfile
	}).(HostingEnvironmentProfileResponsePtrOutput)
}

// If Hyper-V container app service plan <code>true</code>, <code>false</code> otherwise.
func (o AppServicePlanResponsePropertiesOutput) HyperV() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppServicePlanResponseProperties) *bool { return v.HyperV }).(pulumi.BoolPtrOutput)
}

// If <code>true</code>, this App Service Plan owns spot instances.
func (o AppServicePlanResponsePropertiesOutput) IsSpot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppServicePlanResponseProperties) *bool { return v.IsSpot }).(pulumi.BoolPtrOutput)
}

// Obsolete: If Hyper-V container app service plan <code>true</code>, <code>false</code> otherwise.
func (o AppServicePlanResponsePropertiesOutput) IsXenon() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppServicePlanResponseProperties) *bool { return v.IsXenon }).(pulumi.BoolPtrOutput)
}

// Maximum number of total workers allowed for this ElasticScaleEnabled App Service Plan
func (o AppServicePlanResponsePropertiesOutput) MaximumElasticWorkerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppServicePlanResponseProperties) *int { return v.MaximumElasticWorkerCount }).(pulumi.IntPtrOutput)
}

// Maximum number of instances that can be assigned to this App Service plan.
func (o AppServicePlanResponsePropertiesOutput) MaximumNumberOfWorkers() pulumi.IntOutput {
	return o.ApplyT(func(v AppServicePlanResponseProperties) int { return v.MaximumNumberOfWorkers }).(pulumi.IntOutput)
}

// Number of apps assigned to this App Service plan.
func (o AppServicePlanResponsePropertiesOutput) NumberOfSites() pulumi.IntOutput {
	return o.ApplyT(func(v AppServicePlanResponseProperties) int { return v.NumberOfSites }).(pulumi.IntOutput)
}

// If <code>true</code>, apps assigned to this App Service plan can be scaled independently.
// If <code>false</code>, apps assigned to this App Service plan will scale to all instances of the plan.
func (o AppServicePlanResponsePropertiesOutput) PerSiteScaling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppServicePlanResponseProperties) *bool { return v.PerSiteScaling }).(pulumi.BoolPtrOutput)
}

// Provisioning state of the App Service Environment.
func (o AppServicePlanResponsePropertiesOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AppServicePlanResponseProperties) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// If Linux app service plan <code>true</code>, <code>false</code> otherwise.
func (o AppServicePlanResponsePropertiesOutput) Reserved() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppServicePlanResponseProperties) *bool { return v.Reserved }).(pulumi.BoolPtrOutput)
}

// Resource group of the App Service plan.
func (o AppServicePlanResponsePropertiesOutput) ResourceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v AppServicePlanResponseProperties) string { return v.ResourceGroup }).(pulumi.StringOutput)
}

// The time when the server farm expires. Valid only if it is a spot server farm.
func (o AppServicePlanResponsePropertiesOutput) SpotExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServicePlanResponseProperties) *string { return v.SpotExpirationTime }).(pulumi.StringPtrOutput)
}

// App Service plan status.
func (o AppServicePlanResponsePropertiesOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v AppServicePlanResponseProperties) string { return v.Status }).(pulumi.StringOutput)
}

// App Service plan subscription.
func (o AppServicePlanResponsePropertiesOutput) Subscription() pulumi.StringOutput {
	return o.ApplyT(func(v AppServicePlanResponseProperties) string { return v.Subscription }).(pulumi.StringOutput)
}

// Scaling worker count.
func (o AppServicePlanResponsePropertiesOutput) TargetWorkerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppServicePlanResponseProperties) *int { return v.TargetWorkerCount }).(pulumi.IntPtrOutput)
}

// Scaling worker size ID.
func (o AppServicePlanResponsePropertiesOutput) TargetWorkerSizeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppServicePlanResponseProperties) *int { return v.TargetWorkerSizeId }).(pulumi.IntPtrOutput)
}

// Target worker tier assigned to the App Service plan.
func (o AppServicePlanResponsePropertiesOutput) WorkerTierName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServicePlanResponseProperties) *string { return v.WorkerTierName }).(pulumi.StringPtrOutput)
}

type AppServicePlanResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (AppServicePlanResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServicePlanResponseProperties)(nil)).Elem()
}

func (o AppServicePlanResponsePropertiesPtrOutput) ToAppServicePlanResponsePropertiesPtrOutput() AppServicePlanResponsePropertiesPtrOutput {
	return o
}

func (o AppServicePlanResponsePropertiesPtrOutput) ToAppServicePlanResponsePropertiesPtrOutputWithContext(ctx context.Context) AppServicePlanResponsePropertiesPtrOutput {
	return o
}

func (o AppServicePlanResponsePropertiesPtrOutput) Elem() AppServicePlanResponsePropertiesOutput {
	return o.ApplyT(func(v *AppServicePlanResponseProperties) AppServicePlanResponseProperties { return *v }).(AppServicePlanResponsePropertiesOutput)
}

// The time when the server farm free offer expires.
func (o AppServicePlanResponsePropertiesPtrOutput) FreeOfferExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServicePlanResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.FreeOfferExpirationTime
	}).(pulumi.StringPtrOutput)
}

// Geographical location for the App Service plan.
func (o AppServicePlanResponsePropertiesPtrOutput) GeoRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServicePlanResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.GeoRegion
	}).(pulumi.StringPtrOutput)
}

// Specification for the App Service Environment to use for the App Service plan.
func (o AppServicePlanResponsePropertiesPtrOutput) HostingEnvironmentProfile() HostingEnvironmentProfileResponsePtrOutput {
	return o.ApplyT(func(v *AppServicePlanResponseProperties) *HostingEnvironmentProfileResponse {
		if v == nil {
			return nil
		}
		return v.HostingEnvironmentProfile
	}).(HostingEnvironmentProfileResponsePtrOutput)
}

// If Hyper-V container app service plan <code>true</code>, <code>false</code> otherwise.
func (o AppServicePlanResponsePropertiesPtrOutput) HyperV() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppServicePlanResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.HyperV
	}).(pulumi.BoolPtrOutput)
}

// If <code>true</code>, this App Service Plan owns spot instances.
func (o AppServicePlanResponsePropertiesPtrOutput) IsSpot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppServicePlanResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsSpot
	}).(pulumi.BoolPtrOutput)
}

// Obsolete: If Hyper-V container app service plan <code>true</code>, <code>false</code> otherwise.
func (o AppServicePlanResponsePropertiesPtrOutput) IsXenon() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppServicePlanResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsXenon
	}).(pulumi.BoolPtrOutput)
}

// Maximum number of total workers allowed for this ElasticScaleEnabled App Service Plan
func (o AppServicePlanResponsePropertiesPtrOutput) MaximumElasticWorkerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppServicePlanResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.MaximumElasticWorkerCount
	}).(pulumi.IntPtrOutput)
}

// Maximum number of instances that can be assigned to this App Service plan.
func (o AppServicePlanResponsePropertiesPtrOutput) MaximumNumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppServicePlanResponseProperties) *int {
		if v == nil {
			return nil
		}
		return &v.MaximumNumberOfWorkers
	}).(pulumi.IntPtrOutput)
}

// Number of apps assigned to this App Service plan.
func (o AppServicePlanResponsePropertiesPtrOutput) NumberOfSites() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppServicePlanResponseProperties) *int {
		if v == nil {
			return nil
		}
		return &v.NumberOfSites
	}).(pulumi.IntPtrOutput)
}

// If <code>true</code>, apps assigned to this App Service plan can be scaled independently.
// If <code>false</code>, apps assigned to this App Service plan will scale to all instances of the plan.
func (o AppServicePlanResponsePropertiesPtrOutput) PerSiteScaling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppServicePlanResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.PerSiteScaling
	}).(pulumi.BoolPtrOutput)
}

// Provisioning state of the App Service Environment.
func (o AppServicePlanResponsePropertiesPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServicePlanResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// If Linux app service plan <code>true</code>, <code>false</code> otherwise.
func (o AppServicePlanResponsePropertiesPtrOutput) Reserved() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppServicePlanResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Reserved
	}).(pulumi.BoolPtrOutput)
}

// Resource group of the App Service plan.
func (o AppServicePlanResponsePropertiesPtrOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServicePlanResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGroup
	}).(pulumi.StringPtrOutput)
}

// The time when the server farm expires. Valid only if it is a spot server farm.
func (o AppServicePlanResponsePropertiesPtrOutput) SpotExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServicePlanResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.SpotExpirationTime
	}).(pulumi.StringPtrOutput)
}

// App Service plan status.
func (o AppServicePlanResponsePropertiesPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServicePlanResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// App Service plan subscription.
func (o AppServicePlanResponsePropertiesPtrOutput) Subscription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServicePlanResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Subscription
	}).(pulumi.StringPtrOutput)
}

// Scaling worker count.
func (o AppServicePlanResponsePropertiesPtrOutput) TargetWorkerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppServicePlanResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.TargetWorkerCount
	}).(pulumi.IntPtrOutput)
}

// Scaling worker size ID.
func (o AppServicePlanResponsePropertiesPtrOutput) TargetWorkerSizeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppServicePlanResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.TargetWorkerSizeId
	}).(pulumi.IntPtrOutput)
}

// Target worker tier assigned to the App Service plan.
func (o AppServicePlanResponsePropertiesPtrOutput) WorkerTierName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServicePlanResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.WorkerTierName
	}).(pulumi.StringPtrOutput)
}

// Virtual Network route contract used to pass routing information for a Virtual Network.
type AppServicePlanRouteForVnetType struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// VnetRoute resource specific properties
	Properties VnetRouteResponseProperties `pulumi:"properties"`
	// Resource type.
	Type string `pulumi:"type"`
}

// AppServicePlanRouteForVnetTypeInput is an input type that accepts AppServicePlanRouteForVnetTypeArgs and AppServicePlanRouteForVnetTypeOutput values.
// You can construct a concrete instance of `AppServicePlanRouteForVnetTypeInput` via:
//
//          AppServicePlanRouteForVnetTypeArgs{...}
type AppServicePlanRouteForVnetTypeInput interface {
	pulumi.Input

	ToAppServicePlanRouteForVnetTypeOutput() AppServicePlanRouteForVnetTypeOutput
	ToAppServicePlanRouteForVnetTypeOutputWithContext(context.Context) AppServicePlanRouteForVnetTypeOutput
}

// Virtual Network route contract used to pass routing information for a Virtual Network.
type AppServicePlanRouteForVnetTypeArgs struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// VnetRoute resource specific properties
	Properties VnetRouteResponsePropertiesInput `pulumi:"properties"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AppServicePlanRouteForVnetTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServicePlanRouteForVnetType)(nil)).Elem()
}

func (i AppServicePlanRouteForVnetTypeArgs) ToAppServicePlanRouteForVnetTypeOutput() AppServicePlanRouteForVnetTypeOutput {
	return i.ToAppServicePlanRouteForVnetTypeOutputWithContext(context.Background())
}

func (i AppServicePlanRouteForVnetTypeArgs) ToAppServicePlanRouteForVnetTypeOutputWithContext(ctx context.Context) AppServicePlanRouteForVnetTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServicePlanRouteForVnetTypeOutput)
}

// Virtual Network route contract used to pass routing information for a Virtual Network.
type AppServicePlanRouteForVnetTypeOutput struct{ *pulumi.OutputState }

func (AppServicePlanRouteForVnetTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServicePlanRouteForVnetType)(nil)).Elem()
}

func (o AppServicePlanRouteForVnetTypeOutput) ToAppServicePlanRouteForVnetTypeOutput() AppServicePlanRouteForVnetTypeOutput {
	return o
}

func (o AppServicePlanRouteForVnetTypeOutput) ToAppServicePlanRouteForVnetTypeOutputWithContext(ctx context.Context) AppServicePlanRouteForVnetTypeOutput {
	return o
}

// Kind of resource.
func (o AppServicePlanRouteForVnetTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServicePlanRouteForVnetType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o AppServicePlanRouteForVnetTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AppServicePlanRouteForVnetType) string { return v.Name }).(pulumi.StringOutput)
}

// VnetRoute resource specific properties
func (o AppServicePlanRouteForVnetTypeOutput) Properties() VnetRouteResponsePropertiesOutput {
	return o.ApplyT(func(v AppServicePlanRouteForVnetType) VnetRouteResponseProperties { return v.Properties }).(VnetRouteResponsePropertiesOutput)
}

// Resource type.
func (o AppServicePlanRouteForVnetTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AppServicePlanRouteForVnetType) string { return v.Type }).(pulumi.StringOutput)
}

// Actions which to take by the auto-heal module when a rule is triggered.
type AutoHealActions struct {
	// Predefined action to be taken.
	ActionType *string `pulumi:"actionType"`
	// Custom action to be taken.
	CustomAction *AutoHealCustomAction `pulumi:"customAction"`
	// Minimum time the process must execute
	// before taking the action
	MinProcessExecutionTime *string `pulumi:"minProcessExecutionTime"`
}

// AutoHealActionsInput is an input type that accepts AutoHealActionsArgs and AutoHealActionsOutput values.
// You can construct a concrete instance of `AutoHealActionsInput` via:
//
//          AutoHealActionsArgs{...}
type AutoHealActionsInput interface {
	pulumi.Input

	ToAutoHealActionsOutput() AutoHealActionsOutput
	ToAutoHealActionsOutputWithContext(context.Context) AutoHealActionsOutput
}

// Actions which to take by the auto-heal module when a rule is triggered.
type AutoHealActionsArgs struct {
	// Predefined action to be taken.
	ActionType pulumi.StringPtrInput `pulumi:"actionType"`
	// Custom action to be taken.
	CustomAction AutoHealCustomActionPtrInput `pulumi:"customAction"`
	// Minimum time the process must execute
	// before taking the action
	MinProcessExecutionTime pulumi.StringPtrInput `pulumi:"minProcessExecutionTime"`
}

func (AutoHealActionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealActions)(nil)).Elem()
}

func (i AutoHealActionsArgs) ToAutoHealActionsOutput() AutoHealActionsOutput {
	return i.ToAutoHealActionsOutputWithContext(context.Background())
}

func (i AutoHealActionsArgs) ToAutoHealActionsOutputWithContext(ctx context.Context) AutoHealActionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealActionsOutput)
}

func (i AutoHealActionsArgs) ToAutoHealActionsPtrOutput() AutoHealActionsPtrOutput {
	return i.ToAutoHealActionsPtrOutputWithContext(context.Background())
}

func (i AutoHealActionsArgs) ToAutoHealActionsPtrOutputWithContext(ctx context.Context) AutoHealActionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealActionsOutput).ToAutoHealActionsPtrOutputWithContext(ctx)
}

// AutoHealActionsPtrInput is an input type that accepts AutoHealActionsArgs, AutoHealActionsPtr and AutoHealActionsPtrOutput values.
// You can construct a concrete instance of `AutoHealActionsPtrInput` via:
//
//          AutoHealActionsArgs{...}
//
//  or:
//
//          nil
type AutoHealActionsPtrInput interface {
	pulumi.Input

	ToAutoHealActionsPtrOutput() AutoHealActionsPtrOutput
	ToAutoHealActionsPtrOutputWithContext(context.Context) AutoHealActionsPtrOutput
}

type autoHealActionsPtrType AutoHealActionsArgs

func AutoHealActionsPtr(v *AutoHealActionsArgs) AutoHealActionsPtrInput {
	return (*autoHealActionsPtrType)(v)
}

func (*autoHealActionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealActions)(nil)).Elem()
}

func (i *autoHealActionsPtrType) ToAutoHealActionsPtrOutput() AutoHealActionsPtrOutput {
	return i.ToAutoHealActionsPtrOutputWithContext(context.Background())
}

func (i *autoHealActionsPtrType) ToAutoHealActionsPtrOutputWithContext(ctx context.Context) AutoHealActionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealActionsPtrOutput)
}

// Actions which to take by the auto-heal module when a rule is triggered.
type AutoHealActionsOutput struct{ *pulumi.OutputState }

func (AutoHealActionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealActions)(nil)).Elem()
}

func (o AutoHealActionsOutput) ToAutoHealActionsOutput() AutoHealActionsOutput {
	return o
}

func (o AutoHealActionsOutput) ToAutoHealActionsOutputWithContext(ctx context.Context) AutoHealActionsOutput {
	return o
}

func (o AutoHealActionsOutput) ToAutoHealActionsPtrOutput() AutoHealActionsPtrOutput {
	return o.ToAutoHealActionsPtrOutputWithContext(context.Background())
}

func (o AutoHealActionsOutput) ToAutoHealActionsPtrOutputWithContext(ctx context.Context) AutoHealActionsPtrOutput {
	return o.ApplyT(func(v AutoHealActions) *AutoHealActions {
		return &v
	}).(AutoHealActionsPtrOutput)
}

// Predefined action to be taken.
func (o AutoHealActionsOutput) ActionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoHealActions) *string { return v.ActionType }).(pulumi.StringPtrOutput)
}

// Custom action to be taken.
func (o AutoHealActionsOutput) CustomAction() AutoHealCustomActionPtrOutput {
	return o.ApplyT(func(v AutoHealActions) *AutoHealCustomAction { return v.CustomAction }).(AutoHealCustomActionPtrOutput)
}

// Minimum time the process must execute
// before taking the action
func (o AutoHealActionsOutput) MinProcessExecutionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoHealActions) *string { return v.MinProcessExecutionTime }).(pulumi.StringPtrOutput)
}

type AutoHealActionsPtrOutput struct{ *pulumi.OutputState }

func (AutoHealActionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealActions)(nil)).Elem()
}

func (o AutoHealActionsPtrOutput) ToAutoHealActionsPtrOutput() AutoHealActionsPtrOutput {
	return o
}

func (o AutoHealActionsPtrOutput) ToAutoHealActionsPtrOutputWithContext(ctx context.Context) AutoHealActionsPtrOutput {
	return o
}

func (o AutoHealActionsPtrOutput) Elem() AutoHealActionsOutput {
	return o.ApplyT(func(v *AutoHealActions) AutoHealActions { return *v }).(AutoHealActionsOutput)
}

// Predefined action to be taken.
func (o AutoHealActionsPtrOutput) ActionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoHealActions) *string {
		if v == nil {
			return nil
		}
		return v.ActionType
	}).(pulumi.StringPtrOutput)
}

// Custom action to be taken.
func (o AutoHealActionsPtrOutput) CustomAction() AutoHealCustomActionPtrOutput {
	return o.ApplyT(func(v *AutoHealActions) *AutoHealCustomAction {
		if v == nil {
			return nil
		}
		return v.CustomAction
	}).(AutoHealCustomActionPtrOutput)
}

// Minimum time the process must execute
// before taking the action
func (o AutoHealActionsPtrOutput) MinProcessExecutionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoHealActions) *string {
		if v == nil {
			return nil
		}
		return v.MinProcessExecutionTime
	}).(pulumi.StringPtrOutput)
}

// Actions which to take by the auto-heal module when a rule is triggered.
type AutoHealActionsResponse struct {
	// Predefined action to be taken.
	ActionType *string `pulumi:"actionType"`
	// Custom action to be taken.
	CustomAction *AutoHealCustomActionResponse `pulumi:"customAction"`
	// Minimum time the process must execute
	// before taking the action
	MinProcessExecutionTime *string `pulumi:"minProcessExecutionTime"`
}

// AutoHealActionsResponseInput is an input type that accepts AutoHealActionsResponseArgs and AutoHealActionsResponseOutput values.
// You can construct a concrete instance of `AutoHealActionsResponseInput` via:
//
//          AutoHealActionsResponseArgs{...}
type AutoHealActionsResponseInput interface {
	pulumi.Input

	ToAutoHealActionsResponseOutput() AutoHealActionsResponseOutput
	ToAutoHealActionsResponseOutputWithContext(context.Context) AutoHealActionsResponseOutput
}

// Actions which to take by the auto-heal module when a rule is triggered.
type AutoHealActionsResponseArgs struct {
	// Predefined action to be taken.
	ActionType pulumi.StringPtrInput `pulumi:"actionType"`
	// Custom action to be taken.
	CustomAction AutoHealCustomActionResponsePtrInput `pulumi:"customAction"`
	// Minimum time the process must execute
	// before taking the action
	MinProcessExecutionTime pulumi.StringPtrInput `pulumi:"minProcessExecutionTime"`
}

func (AutoHealActionsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealActionsResponse)(nil)).Elem()
}

func (i AutoHealActionsResponseArgs) ToAutoHealActionsResponseOutput() AutoHealActionsResponseOutput {
	return i.ToAutoHealActionsResponseOutputWithContext(context.Background())
}

func (i AutoHealActionsResponseArgs) ToAutoHealActionsResponseOutputWithContext(ctx context.Context) AutoHealActionsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealActionsResponseOutput)
}

func (i AutoHealActionsResponseArgs) ToAutoHealActionsResponsePtrOutput() AutoHealActionsResponsePtrOutput {
	return i.ToAutoHealActionsResponsePtrOutputWithContext(context.Background())
}

func (i AutoHealActionsResponseArgs) ToAutoHealActionsResponsePtrOutputWithContext(ctx context.Context) AutoHealActionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealActionsResponseOutput).ToAutoHealActionsResponsePtrOutputWithContext(ctx)
}

// AutoHealActionsResponsePtrInput is an input type that accepts AutoHealActionsResponseArgs, AutoHealActionsResponsePtr and AutoHealActionsResponsePtrOutput values.
// You can construct a concrete instance of `AutoHealActionsResponsePtrInput` via:
//
//          AutoHealActionsResponseArgs{...}
//
//  or:
//
//          nil
type AutoHealActionsResponsePtrInput interface {
	pulumi.Input

	ToAutoHealActionsResponsePtrOutput() AutoHealActionsResponsePtrOutput
	ToAutoHealActionsResponsePtrOutputWithContext(context.Context) AutoHealActionsResponsePtrOutput
}

type autoHealActionsResponsePtrType AutoHealActionsResponseArgs

func AutoHealActionsResponsePtr(v *AutoHealActionsResponseArgs) AutoHealActionsResponsePtrInput {
	return (*autoHealActionsResponsePtrType)(v)
}

func (*autoHealActionsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealActionsResponse)(nil)).Elem()
}

func (i *autoHealActionsResponsePtrType) ToAutoHealActionsResponsePtrOutput() AutoHealActionsResponsePtrOutput {
	return i.ToAutoHealActionsResponsePtrOutputWithContext(context.Background())
}

func (i *autoHealActionsResponsePtrType) ToAutoHealActionsResponsePtrOutputWithContext(ctx context.Context) AutoHealActionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealActionsResponsePtrOutput)
}

// Actions which to take by the auto-heal module when a rule is triggered.
type AutoHealActionsResponseOutput struct{ *pulumi.OutputState }

func (AutoHealActionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealActionsResponse)(nil)).Elem()
}

func (o AutoHealActionsResponseOutput) ToAutoHealActionsResponseOutput() AutoHealActionsResponseOutput {
	return o
}

func (o AutoHealActionsResponseOutput) ToAutoHealActionsResponseOutputWithContext(ctx context.Context) AutoHealActionsResponseOutput {
	return o
}

func (o AutoHealActionsResponseOutput) ToAutoHealActionsResponsePtrOutput() AutoHealActionsResponsePtrOutput {
	return o.ToAutoHealActionsResponsePtrOutputWithContext(context.Background())
}

func (o AutoHealActionsResponseOutput) ToAutoHealActionsResponsePtrOutputWithContext(ctx context.Context) AutoHealActionsResponsePtrOutput {
	return o.ApplyT(func(v AutoHealActionsResponse) *AutoHealActionsResponse {
		return &v
	}).(AutoHealActionsResponsePtrOutput)
}

// Predefined action to be taken.
func (o AutoHealActionsResponseOutput) ActionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoHealActionsResponse) *string { return v.ActionType }).(pulumi.StringPtrOutput)
}

// Custom action to be taken.
func (o AutoHealActionsResponseOutput) CustomAction() AutoHealCustomActionResponsePtrOutput {
	return o.ApplyT(func(v AutoHealActionsResponse) *AutoHealCustomActionResponse { return v.CustomAction }).(AutoHealCustomActionResponsePtrOutput)
}

// Minimum time the process must execute
// before taking the action
func (o AutoHealActionsResponseOutput) MinProcessExecutionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoHealActionsResponse) *string { return v.MinProcessExecutionTime }).(pulumi.StringPtrOutput)
}

type AutoHealActionsResponsePtrOutput struct{ *pulumi.OutputState }

func (AutoHealActionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealActionsResponse)(nil)).Elem()
}

func (o AutoHealActionsResponsePtrOutput) ToAutoHealActionsResponsePtrOutput() AutoHealActionsResponsePtrOutput {
	return o
}

func (o AutoHealActionsResponsePtrOutput) ToAutoHealActionsResponsePtrOutputWithContext(ctx context.Context) AutoHealActionsResponsePtrOutput {
	return o
}

func (o AutoHealActionsResponsePtrOutput) Elem() AutoHealActionsResponseOutput {
	return o.ApplyT(func(v *AutoHealActionsResponse) AutoHealActionsResponse { return *v }).(AutoHealActionsResponseOutput)
}

// Predefined action to be taken.
func (o AutoHealActionsResponsePtrOutput) ActionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoHealActionsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ActionType
	}).(pulumi.StringPtrOutput)
}

// Custom action to be taken.
func (o AutoHealActionsResponsePtrOutput) CustomAction() AutoHealCustomActionResponsePtrOutput {
	return o.ApplyT(func(v *AutoHealActionsResponse) *AutoHealCustomActionResponse {
		if v == nil {
			return nil
		}
		return v.CustomAction
	}).(AutoHealCustomActionResponsePtrOutput)
}

// Minimum time the process must execute
// before taking the action
func (o AutoHealActionsResponsePtrOutput) MinProcessExecutionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoHealActionsResponse) *string {
		if v == nil {
			return nil
		}
		return v.MinProcessExecutionTime
	}).(pulumi.StringPtrOutput)
}

// Custom action to be executed
// when an auto heal rule is triggered.
type AutoHealCustomAction struct {
	// Executable to be run.
	Exe *string `pulumi:"exe"`
	// Parameters for the executable.
	Parameters *string `pulumi:"parameters"`
}

// AutoHealCustomActionInput is an input type that accepts AutoHealCustomActionArgs and AutoHealCustomActionOutput values.
// You can construct a concrete instance of `AutoHealCustomActionInput` via:
//
//          AutoHealCustomActionArgs{...}
type AutoHealCustomActionInput interface {
	pulumi.Input

	ToAutoHealCustomActionOutput() AutoHealCustomActionOutput
	ToAutoHealCustomActionOutputWithContext(context.Context) AutoHealCustomActionOutput
}

// Custom action to be executed
// when an auto heal rule is triggered.
type AutoHealCustomActionArgs struct {
	// Executable to be run.
	Exe pulumi.StringPtrInput `pulumi:"exe"`
	// Parameters for the executable.
	Parameters pulumi.StringPtrInput `pulumi:"parameters"`
}

func (AutoHealCustomActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealCustomAction)(nil)).Elem()
}

func (i AutoHealCustomActionArgs) ToAutoHealCustomActionOutput() AutoHealCustomActionOutput {
	return i.ToAutoHealCustomActionOutputWithContext(context.Background())
}

func (i AutoHealCustomActionArgs) ToAutoHealCustomActionOutputWithContext(ctx context.Context) AutoHealCustomActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealCustomActionOutput)
}

func (i AutoHealCustomActionArgs) ToAutoHealCustomActionPtrOutput() AutoHealCustomActionPtrOutput {
	return i.ToAutoHealCustomActionPtrOutputWithContext(context.Background())
}

func (i AutoHealCustomActionArgs) ToAutoHealCustomActionPtrOutputWithContext(ctx context.Context) AutoHealCustomActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealCustomActionOutput).ToAutoHealCustomActionPtrOutputWithContext(ctx)
}

// AutoHealCustomActionPtrInput is an input type that accepts AutoHealCustomActionArgs, AutoHealCustomActionPtr and AutoHealCustomActionPtrOutput values.
// You can construct a concrete instance of `AutoHealCustomActionPtrInput` via:
//
//          AutoHealCustomActionArgs{...}
//
//  or:
//
//          nil
type AutoHealCustomActionPtrInput interface {
	pulumi.Input

	ToAutoHealCustomActionPtrOutput() AutoHealCustomActionPtrOutput
	ToAutoHealCustomActionPtrOutputWithContext(context.Context) AutoHealCustomActionPtrOutput
}

type autoHealCustomActionPtrType AutoHealCustomActionArgs

func AutoHealCustomActionPtr(v *AutoHealCustomActionArgs) AutoHealCustomActionPtrInput {
	return (*autoHealCustomActionPtrType)(v)
}

func (*autoHealCustomActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealCustomAction)(nil)).Elem()
}

func (i *autoHealCustomActionPtrType) ToAutoHealCustomActionPtrOutput() AutoHealCustomActionPtrOutput {
	return i.ToAutoHealCustomActionPtrOutputWithContext(context.Background())
}

func (i *autoHealCustomActionPtrType) ToAutoHealCustomActionPtrOutputWithContext(ctx context.Context) AutoHealCustomActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealCustomActionPtrOutput)
}

// Custom action to be executed
// when an auto heal rule is triggered.
type AutoHealCustomActionOutput struct{ *pulumi.OutputState }

func (AutoHealCustomActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealCustomAction)(nil)).Elem()
}

func (o AutoHealCustomActionOutput) ToAutoHealCustomActionOutput() AutoHealCustomActionOutput {
	return o
}

func (o AutoHealCustomActionOutput) ToAutoHealCustomActionOutputWithContext(ctx context.Context) AutoHealCustomActionOutput {
	return o
}

func (o AutoHealCustomActionOutput) ToAutoHealCustomActionPtrOutput() AutoHealCustomActionPtrOutput {
	return o.ToAutoHealCustomActionPtrOutputWithContext(context.Background())
}

func (o AutoHealCustomActionOutput) ToAutoHealCustomActionPtrOutputWithContext(ctx context.Context) AutoHealCustomActionPtrOutput {
	return o.ApplyT(func(v AutoHealCustomAction) *AutoHealCustomAction {
		return &v
	}).(AutoHealCustomActionPtrOutput)
}

// Executable to be run.
func (o AutoHealCustomActionOutput) Exe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoHealCustomAction) *string { return v.Exe }).(pulumi.StringPtrOutput)
}

// Parameters for the executable.
func (o AutoHealCustomActionOutput) Parameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoHealCustomAction) *string { return v.Parameters }).(pulumi.StringPtrOutput)
}

type AutoHealCustomActionPtrOutput struct{ *pulumi.OutputState }

func (AutoHealCustomActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealCustomAction)(nil)).Elem()
}

func (o AutoHealCustomActionPtrOutput) ToAutoHealCustomActionPtrOutput() AutoHealCustomActionPtrOutput {
	return o
}

func (o AutoHealCustomActionPtrOutput) ToAutoHealCustomActionPtrOutputWithContext(ctx context.Context) AutoHealCustomActionPtrOutput {
	return o
}

func (o AutoHealCustomActionPtrOutput) Elem() AutoHealCustomActionOutput {
	return o.ApplyT(func(v *AutoHealCustomAction) AutoHealCustomAction { return *v }).(AutoHealCustomActionOutput)
}

// Executable to be run.
func (o AutoHealCustomActionPtrOutput) Exe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoHealCustomAction) *string {
		if v == nil {
			return nil
		}
		return v.Exe
	}).(pulumi.StringPtrOutput)
}

// Parameters for the executable.
func (o AutoHealCustomActionPtrOutput) Parameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoHealCustomAction) *string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringPtrOutput)
}

// Custom action to be executed
// when an auto heal rule is triggered.
type AutoHealCustomActionResponse struct {
	// Executable to be run.
	Exe *string `pulumi:"exe"`
	// Parameters for the executable.
	Parameters *string `pulumi:"parameters"`
}

// AutoHealCustomActionResponseInput is an input type that accepts AutoHealCustomActionResponseArgs and AutoHealCustomActionResponseOutput values.
// You can construct a concrete instance of `AutoHealCustomActionResponseInput` via:
//
//          AutoHealCustomActionResponseArgs{...}
type AutoHealCustomActionResponseInput interface {
	pulumi.Input

	ToAutoHealCustomActionResponseOutput() AutoHealCustomActionResponseOutput
	ToAutoHealCustomActionResponseOutputWithContext(context.Context) AutoHealCustomActionResponseOutput
}

// Custom action to be executed
// when an auto heal rule is triggered.
type AutoHealCustomActionResponseArgs struct {
	// Executable to be run.
	Exe pulumi.StringPtrInput `pulumi:"exe"`
	// Parameters for the executable.
	Parameters pulumi.StringPtrInput `pulumi:"parameters"`
}

func (AutoHealCustomActionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealCustomActionResponse)(nil)).Elem()
}

func (i AutoHealCustomActionResponseArgs) ToAutoHealCustomActionResponseOutput() AutoHealCustomActionResponseOutput {
	return i.ToAutoHealCustomActionResponseOutputWithContext(context.Background())
}

func (i AutoHealCustomActionResponseArgs) ToAutoHealCustomActionResponseOutputWithContext(ctx context.Context) AutoHealCustomActionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealCustomActionResponseOutput)
}

func (i AutoHealCustomActionResponseArgs) ToAutoHealCustomActionResponsePtrOutput() AutoHealCustomActionResponsePtrOutput {
	return i.ToAutoHealCustomActionResponsePtrOutputWithContext(context.Background())
}

func (i AutoHealCustomActionResponseArgs) ToAutoHealCustomActionResponsePtrOutputWithContext(ctx context.Context) AutoHealCustomActionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealCustomActionResponseOutput).ToAutoHealCustomActionResponsePtrOutputWithContext(ctx)
}

// AutoHealCustomActionResponsePtrInput is an input type that accepts AutoHealCustomActionResponseArgs, AutoHealCustomActionResponsePtr and AutoHealCustomActionResponsePtrOutput values.
// You can construct a concrete instance of `AutoHealCustomActionResponsePtrInput` via:
//
//          AutoHealCustomActionResponseArgs{...}
//
//  or:
//
//          nil
type AutoHealCustomActionResponsePtrInput interface {
	pulumi.Input

	ToAutoHealCustomActionResponsePtrOutput() AutoHealCustomActionResponsePtrOutput
	ToAutoHealCustomActionResponsePtrOutputWithContext(context.Context) AutoHealCustomActionResponsePtrOutput
}

type autoHealCustomActionResponsePtrType AutoHealCustomActionResponseArgs

func AutoHealCustomActionResponsePtr(v *AutoHealCustomActionResponseArgs) AutoHealCustomActionResponsePtrInput {
	return (*autoHealCustomActionResponsePtrType)(v)
}

func (*autoHealCustomActionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealCustomActionResponse)(nil)).Elem()
}

func (i *autoHealCustomActionResponsePtrType) ToAutoHealCustomActionResponsePtrOutput() AutoHealCustomActionResponsePtrOutput {
	return i.ToAutoHealCustomActionResponsePtrOutputWithContext(context.Background())
}

func (i *autoHealCustomActionResponsePtrType) ToAutoHealCustomActionResponsePtrOutputWithContext(ctx context.Context) AutoHealCustomActionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealCustomActionResponsePtrOutput)
}

// Custom action to be executed
// when an auto heal rule is triggered.
type AutoHealCustomActionResponseOutput struct{ *pulumi.OutputState }

func (AutoHealCustomActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealCustomActionResponse)(nil)).Elem()
}

func (o AutoHealCustomActionResponseOutput) ToAutoHealCustomActionResponseOutput() AutoHealCustomActionResponseOutput {
	return o
}

func (o AutoHealCustomActionResponseOutput) ToAutoHealCustomActionResponseOutputWithContext(ctx context.Context) AutoHealCustomActionResponseOutput {
	return o
}

func (o AutoHealCustomActionResponseOutput) ToAutoHealCustomActionResponsePtrOutput() AutoHealCustomActionResponsePtrOutput {
	return o.ToAutoHealCustomActionResponsePtrOutputWithContext(context.Background())
}

func (o AutoHealCustomActionResponseOutput) ToAutoHealCustomActionResponsePtrOutputWithContext(ctx context.Context) AutoHealCustomActionResponsePtrOutput {
	return o.ApplyT(func(v AutoHealCustomActionResponse) *AutoHealCustomActionResponse {
		return &v
	}).(AutoHealCustomActionResponsePtrOutput)
}

// Executable to be run.
func (o AutoHealCustomActionResponseOutput) Exe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoHealCustomActionResponse) *string { return v.Exe }).(pulumi.StringPtrOutput)
}

// Parameters for the executable.
func (o AutoHealCustomActionResponseOutput) Parameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoHealCustomActionResponse) *string { return v.Parameters }).(pulumi.StringPtrOutput)
}

type AutoHealCustomActionResponsePtrOutput struct{ *pulumi.OutputState }

func (AutoHealCustomActionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealCustomActionResponse)(nil)).Elem()
}

func (o AutoHealCustomActionResponsePtrOutput) ToAutoHealCustomActionResponsePtrOutput() AutoHealCustomActionResponsePtrOutput {
	return o
}

func (o AutoHealCustomActionResponsePtrOutput) ToAutoHealCustomActionResponsePtrOutputWithContext(ctx context.Context) AutoHealCustomActionResponsePtrOutput {
	return o
}

func (o AutoHealCustomActionResponsePtrOutput) Elem() AutoHealCustomActionResponseOutput {
	return o.ApplyT(func(v *AutoHealCustomActionResponse) AutoHealCustomActionResponse { return *v }).(AutoHealCustomActionResponseOutput)
}

// Executable to be run.
func (o AutoHealCustomActionResponsePtrOutput) Exe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoHealCustomActionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Exe
	}).(pulumi.StringPtrOutput)
}

// Parameters for the executable.
func (o AutoHealCustomActionResponsePtrOutput) Parameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoHealCustomActionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringPtrOutput)
}

// Rules that can be defined for auto-heal.
type AutoHealRules struct {
	// Actions to be executed when a rule is triggered.
	Actions *AutoHealActions `pulumi:"actions"`
	// Conditions that describe when to execute the auto-heal actions.
	Triggers *AutoHealTriggers `pulumi:"triggers"`
}

// AutoHealRulesInput is an input type that accepts AutoHealRulesArgs and AutoHealRulesOutput values.
// You can construct a concrete instance of `AutoHealRulesInput` via:
//
//          AutoHealRulesArgs{...}
type AutoHealRulesInput interface {
	pulumi.Input

	ToAutoHealRulesOutput() AutoHealRulesOutput
	ToAutoHealRulesOutputWithContext(context.Context) AutoHealRulesOutput
}

// Rules that can be defined for auto-heal.
type AutoHealRulesArgs struct {
	// Actions to be executed when a rule is triggered.
	Actions AutoHealActionsPtrInput `pulumi:"actions"`
	// Conditions that describe when to execute the auto-heal actions.
	Triggers AutoHealTriggersPtrInput `pulumi:"triggers"`
}

func (AutoHealRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealRules)(nil)).Elem()
}

func (i AutoHealRulesArgs) ToAutoHealRulesOutput() AutoHealRulesOutput {
	return i.ToAutoHealRulesOutputWithContext(context.Background())
}

func (i AutoHealRulesArgs) ToAutoHealRulesOutputWithContext(ctx context.Context) AutoHealRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealRulesOutput)
}

func (i AutoHealRulesArgs) ToAutoHealRulesPtrOutput() AutoHealRulesPtrOutput {
	return i.ToAutoHealRulesPtrOutputWithContext(context.Background())
}

func (i AutoHealRulesArgs) ToAutoHealRulesPtrOutputWithContext(ctx context.Context) AutoHealRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealRulesOutput).ToAutoHealRulesPtrOutputWithContext(ctx)
}

// AutoHealRulesPtrInput is an input type that accepts AutoHealRulesArgs, AutoHealRulesPtr and AutoHealRulesPtrOutput values.
// You can construct a concrete instance of `AutoHealRulesPtrInput` via:
//
//          AutoHealRulesArgs{...}
//
//  or:
//
//          nil
type AutoHealRulesPtrInput interface {
	pulumi.Input

	ToAutoHealRulesPtrOutput() AutoHealRulesPtrOutput
	ToAutoHealRulesPtrOutputWithContext(context.Context) AutoHealRulesPtrOutput
}

type autoHealRulesPtrType AutoHealRulesArgs

func AutoHealRulesPtr(v *AutoHealRulesArgs) AutoHealRulesPtrInput {
	return (*autoHealRulesPtrType)(v)
}

func (*autoHealRulesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealRules)(nil)).Elem()
}

func (i *autoHealRulesPtrType) ToAutoHealRulesPtrOutput() AutoHealRulesPtrOutput {
	return i.ToAutoHealRulesPtrOutputWithContext(context.Background())
}

func (i *autoHealRulesPtrType) ToAutoHealRulesPtrOutputWithContext(ctx context.Context) AutoHealRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealRulesPtrOutput)
}

// Rules that can be defined for auto-heal.
type AutoHealRulesOutput struct{ *pulumi.OutputState }

func (AutoHealRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealRules)(nil)).Elem()
}

func (o AutoHealRulesOutput) ToAutoHealRulesOutput() AutoHealRulesOutput {
	return o
}

func (o AutoHealRulesOutput) ToAutoHealRulesOutputWithContext(ctx context.Context) AutoHealRulesOutput {
	return o
}

func (o AutoHealRulesOutput) ToAutoHealRulesPtrOutput() AutoHealRulesPtrOutput {
	return o.ToAutoHealRulesPtrOutputWithContext(context.Background())
}

func (o AutoHealRulesOutput) ToAutoHealRulesPtrOutputWithContext(ctx context.Context) AutoHealRulesPtrOutput {
	return o.ApplyT(func(v AutoHealRules) *AutoHealRules {
		return &v
	}).(AutoHealRulesPtrOutput)
}

// Actions to be executed when a rule is triggered.
func (o AutoHealRulesOutput) Actions() AutoHealActionsPtrOutput {
	return o.ApplyT(func(v AutoHealRules) *AutoHealActions { return v.Actions }).(AutoHealActionsPtrOutput)
}

// Conditions that describe when to execute the auto-heal actions.
func (o AutoHealRulesOutput) Triggers() AutoHealTriggersPtrOutput {
	return o.ApplyT(func(v AutoHealRules) *AutoHealTriggers { return v.Triggers }).(AutoHealTriggersPtrOutput)
}

type AutoHealRulesPtrOutput struct{ *pulumi.OutputState }

func (AutoHealRulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealRules)(nil)).Elem()
}

func (o AutoHealRulesPtrOutput) ToAutoHealRulesPtrOutput() AutoHealRulesPtrOutput {
	return o
}

func (o AutoHealRulesPtrOutput) ToAutoHealRulesPtrOutputWithContext(ctx context.Context) AutoHealRulesPtrOutput {
	return o
}

func (o AutoHealRulesPtrOutput) Elem() AutoHealRulesOutput {
	return o.ApplyT(func(v *AutoHealRules) AutoHealRules { return *v }).(AutoHealRulesOutput)
}

// Actions to be executed when a rule is triggered.
func (o AutoHealRulesPtrOutput) Actions() AutoHealActionsPtrOutput {
	return o.ApplyT(func(v *AutoHealRules) *AutoHealActions {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(AutoHealActionsPtrOutput)
}

// Conditions that describe when to execute the auto-heal actions.
func (o AutoHealRulesPtrOutput) Triggers() AutoHealTriggersPtrOutput {
	return o.ApplyT(func(v *AutoHealRules) *AutoHealTriggers {
		if v == nil {
			return nil
		}
		return v.Triggers
	}).(AutoHealTriggersPtrOutput)
}

// Rules that can be defined for auto-heal.
type AutoHealRulesResponse struct {
	// Actions to be executed when a rule is triggered.
	Actions *AutoHealActionsResponse `pulumi:"actions"`
	// Conditions that describe when to execute the auto-heal actions.
	Triggers *AutoHealTriggersResponse `pulumi:"triggers"`
}

// AutoHealRulesResponseInput is an input type that accepts AutoHealRulesResponseArgs and AutoHealRulesResponseOutput values.
// You can construct a concrete instance of `AutoHealRulesResponseInput` via:
//
//          AutoHealRulesResponseArgs{...}
type AutoHealRulesResponseInput interface {
	pulumi.Input

	ToAutoHealRulesResponseOutput() AutoHealRulesResponseOutput
	ToAutoHealRulesResponseOutputWithContext(context.Context) AutoHealRulesResponseOutput
}

// Rules that can be defined for auto-heal.
type AutoHealRulesResponseArgs struct {
	// Actions to be executed when a rule is triggered.
	Actions AutoHealActionsResponsePtrInput `pulumi:"actions"`
	// Conditions that describe when to execute the auto-heal actions.
	Triggers AutoHealTriggersResponsePtrInput `pulumi:"triggers"`
}

func (AutoHealRulesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealRulesResponse)(nil)).Elem()
}

func (i AutoHealRulesResponseArgs) ToAutoHealRulesResponseOutput() AutoHealRulesResponseOutput {
	return i.ToAutoHealRulesResponseOutputWithContext(context.Background())
}

func (i AutoHealRulesResponseArgs) ToAutoHealRulesResponseOutputWithContext(ctx context.Context) AutoHealRulesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealRulesResponseOutput)
}

func (i AutoHealRulesResponseArgs) ToAutoHealRulesResponsePtrOutput() AutoHealRulesResponsePtrOutput {
	return i.ToAutoHealRulesResponsePtrOutputWithContext(context.Background())
}

func (i AutoHealRulesResponseArgs) ToAutoHealRulesResponsePtrOutputWithContext(ctx context.Context) AutoHealRulesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealRulesResponseOutput).ToAutoHealRulesResponsePtrOutputWithContext(ctx)
}

// AutoHealRulesResponsePtrInput is an input type that accepts AutoHealRulesResponseArgs, AutoHealRulesResponsePtr and AutoHealRulesResponsePtrOutput values.
// You can construct a concrete instance of `AutoHealRulesResponsePtrInput` via:
//
//          AutoHealRulesResponseArgs{...}
//
//  or:
//
//          nil
type AutoHealRulesResponsePtrInput interface {
	pulumi.Input

	ToAutoHealRulesResponsePtrOutput() AutoHealRulesResponsePtrOutput
	ToAutoHealRulesResponsePtrOutputWithContext(context.Context) AutoHealRulesResponsePtrOutput
}

type autoHealRulesResponsePtrType AutoHealRulesResponseArgs

func AutoHealRulesResponsePtr(v *AutoHealRulesResponseArgs) AutoHealRulesResponsePtrInput {
	return (*autoHealRulesResponsePtrType)(v)
}

func (*autoHealRulesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealRulesResponse)(nil)).Elem()
}

func (i *autoHealRulesResponsePtrType) ToAutoHealRulesResponsePtrOutput() AutoHealRulesResponsePtrOutput {
	return i.ToAutoHealRulesResponsePtrOutputWithContext(context.Background())
}

func (i *autoHealRulesResponsePtrType) ToAutoHealRulesResponsePtrOutputWithContext(ctx context.Context) AutoHealRulesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealRulesResponsePtrOutput)
}

// Rules that can be defined for auto-heal.
type AutoHealRulesResponseOutput struct{ *pulumi.OutputState }

func (AutoHealRulesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealRulesResponse)(nil)).Elem()
}

func (o AutoHealRulesResponseOutput) ToAutoHealRulesResponseOutput() AutoHealRulesResponseOutput {
	return o
}

func (o AutoHealRulesResponseOutput) ToAutoHealRulesResponseOutputWithContext(ctx context.Context) AutoHealRulesResponseOutput {
	return o
}

func (o AutoHealRulesResponseOutput) ToAutoHealRulesResponsePtrOutput() AutoHealRulesResponsePtrOutput {
	return o.ToAutoHealRulesResponsePtrOutputWithContext(context.Background())
}

func (o AutoHealRulesResponseOutput) ToAutoHealRulesResponsePtrOutputWithContext(ctx context.Context) AutoHealRulesResponsePtrOutput {
	return o.ApplyT(func(v AutoHealRulesResponse) *AutoHealRulesResponse {
		return &v
	}).(AutoHealRulesResponsePtrOutput)
}

// Actions to be executed when a rule is triggered.
func (o AutoHealRulesResponseOutput) Actions() AutoHealActionsResponsePtrOutput {
	return o.ApplyT(func(v AutoHealRulesResponse) *AutoHealActionsResponse { return v.Actions }).(AutoHealActionsResponsePtrOutput)
}

// Conditions that describe when to execute the auto-heal actions.
func (o AutoHealRulesResponseOutput) Triggers() AutoHealTriggersResponsePtrOutput {
	return o.ApplyT(func(v AutoHealRulesResponse) *AutoHealTriggersResponse { return v.Triggers }).(AutoHealTriggersResponsePtrOutput)
}

type AutoHealRulesResponsePtrOutput struct{ *pulumi.OutputState }

func (AutoHealRulesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealRulesResponse)(nil)).Elem()
}

func (o AutoHealRulesResponsePtrOutput) ToAutoHealRulesResponsePtrOutput() AutoHealRulesResponsePtrOutput {
	return o
}

func (o AutoHealRulesResponsePtrOutput) ToAutoHealRulesResponsePtrOutputWithContext(ctx context.Context) AutoHealRulesResponsePtrOutput {
	return o
}

func (o AutoHealRulesResponsePtrOutput) Elem() AutoHealRulesResponseOutput {
	return o.ApplyT(func(v *AutoHealRulesResponse) AutoHealRulesResponse { return *v }).(AutoHealRulesResponseOutput)
}

// Actions to be executed when a rule is triggered.
func (o AutoHealRulesResponsePtrOutput) Actions() AutoHealActionsResponsePtrOutput {
	return o.ApplyT(func(v *AutoHealRulesResponse) *AutoHealActionsResponse {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(AutoHealActionsResponsePtrOutput)
}

// Conditions that describe when to execute the auto-heal actions.
func (o AutoHealRulesResponsePtrOutput) Triggers() AutoHealTriggersResponsePtrOutput {
	return o.ApplyT(func(v *AutoHealRulesResponse) *AutoHealTriggersResponse {
		if v == nil {
			return nil
		}
		return v.Triggers
	}).(AutoHealTriggersResponsePtrOutput)
}

// Triggers for auto-heal.
type AutoHealTriggers struct {
	// A rule based on private bytes.
	PrivateBytesInKB *int `pulumi:"privateBytesInKB"`
	// A rule based on total requests.
	Requests *RequestsBasedTrigger `pulumi:"requests"`
	// A rule based on request execution time.
	SlowRequests *SlowRequestsBasedTrigger `pulumi:"slowRequests"`
	// A rule based on status codes.
	StatusCodes []StatusCodesBasedTrigger `pulumi:"statusCodes"`
}

// AutoHealTriggersInput is an input type that accepts AutoHealTriggersArgs and AutoHealTriggersOutput values.
// You can construct a concrete instance of `AutoHealTriggersInput` via:
//
//          AutoHealTriggersArgs{...}
type AutoHealTriggersInput interface {
	pulumi.Input

	ToAutoHealTriggersOutput() AutoHealTriggersOutput
	ToAutoHealTriggersOutputWithContext(context.Context) AutoHealTriggersOutput
}

// Triggers for auto-heal.
type AutoHealTriggersArgs struct {
	// A rule based on private bytes.
	PrivateBytesInKB pulumi.IntPtrInput `pulumi:"privateBytesInKB"`
	// A rule based on total requests.
	Requests RequestsBasedTriggerPtrInput `pulumi:"requests"`
	// A rule based on request execution time.
	SlowRequests SlowRequestsBasedTriggerPtrInput `pulumi:"slowRequests"`
	// A rule based on status codes.
	StatusCodes StatusCodesBasedTriggerArrayInput `pulumi:"statusCodes"`
}

func (AutoHealTriggersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealTriggers)(nil)).Elem()
}

func (i AutoHealTriggersArgs) ToAutoHealTriggersOutput() AutoHealTriggersOutput {
	return i.ToAutoHealTriggersOutputWithContext(context.Background())
}

func (i AutoHealTriggersArgs) ToAutoHealTriggersOutputWithContext(ctx context.Context) AutoHealTriggersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealTriggersOutput)
}

func (i AutoHealTriggersArgs) ToAutoHealTriggersPtrOutput() AutoHealTriggersPtrOutput {
	return i.ToAutoHealTriggersPtrOutputWithContext(context.Background())
}

func (i AutoHealTriggersArgs) ToAutoHealTriggersPtrOutputWithContext(ctx context.Context) AutoHealTriggersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealTriggersOutput).ToAutoHealTriggersPtrOutputWithContext(ctx)
}

// AutoHealTriggersPtrInput is an input type that accepts AutoHealTriggersArgs, AutoHealTriggersPtr and AutoHealTriggersPtrOutput values.
// You can construct a concrete instance of `AutoHealTriggersPtrInput` via:
//
//          AutoHealTriggersArgs{...}
//
//  or:
//
//          nil
type AutoHealTriggersPtrInput interface {
	pulumi.Input

	ToAutoHealTriggersPtrOutput() AutoHealTriggersPtrOutput
	ToAutoHealTriggersPtrOutputWithContext(context.Context) AutoHealTriggersPtrOutput
}

type autoHealTriggersPtrType AutoHealTriggersArgs

func AutoHealTriggersPtr(v *AutoHealTriggersArgs) AutoHealTriggersPtrInput {
	return (*autoHealTriggersPtrType)(v)
}

func (*autoHealTriggersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealTriggers)(nil)).Elem()
}

func (i *autoHealTriggersPtrType) ToAutoHealTriggersPtrOutput() AutoHealTriggersPtrOutput {
	return i.ToAutoHealTriggersPtrOutputWithContext(context.Background())
}

func (i *autoHealTriggersPtrType) ToAutoHealTriggersPtrOutputWithContext(ctx context.Context) AutoHealTriggersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealTriggersPtrOutput)
}

// Triggers for auto-heal.
type AutoHealTriggersOutput struct{ *pulumi.OutputState }

func (AutoHealTriggersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealTriggers)(nil)).Elem()
}

func (o AutoHealTriggersOutput) ToAutoHealTriggersOutput() AutoHealTriggersOutput {
	return o
}

func (o AutoHealTriggersOutput) ToAutoHealTriggersOutputWithContext(ctx context.Context) AutoHealTriggersOutput {
	return o
}

func (o AutoHealTriggersOutput) ToAutoHealTriggersPtrOutput() AutoHealTriggersPtrOutput {
	return o.ToAutoHealTriggersPtrOutputWithContext(context.Background())
}

func (o AutoHealTriggersOutput) ToAutoHealTriggersPtrOutputWithContext(ctx context.Context) AutoHealTriggersPtrOutput {
	return o.ApplyT(func(v AutoHealTriggers) *AutoHealTriggers {
		return &v
	}).(AutoHealTriggersPtrOutput)
}

// A rule based on private bytes.
func (o AutoHealTriggersOutput) PrivateBytesInKB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoHealTriggers) *int { return v.PrivateBytesInKB }).(pulumi.IntPtrOutput)
}

// A rule based on total requests.
func (o AutoHealTriggersOutput) Requests() RequestsBasedTriggerPtrOutput {
	return o.ApplyT(func(v AutoHealTriggers) *RequestsBasedTrigger { return v.Requests }).(RequestsBasedTriggerPtrOutput)
}

// A rule based on request execution time.
func (o AutoHealTriggersOutput) SlowRequests() SlowRequestsBasedTriggerPtrOutput {
	return o.ApplyT(func(v AutoHealTriggers) *SlowRequestsBasedTrigger { return v.SlowRequests }).(SlowRequestsBasedTriggerPtrOutput)
}

// A rule based on status codes.
func (o AutoHealTriggersOutput) StatusCodes() StatusCodesBasedTriggerArrayOutput {
	return o.ApplyT(func(v AutoHealTriggers) []StatusCodesBasedTrigger { return v.StatusCodes }).(StatusCodesBasedTriggerArrayOutput)
}

type AutoHealTriggersPtrOutput struct{ *pulumi.OutputState }

func (AutoHealTriggersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealTriggers)(nil)).Elem()
}

func (o AutoHealTriggersPtrOutput) ToAutoHealTriggersPtrOutput() AutoHealTriggersPtrOutput {
	return o
}

func (o AutoHealTriggersPtrOutput) ToAutoHealTriggersPtrOutputWithContext(ctx context.Context) AutoHealTriggersPtrOutput {
	return o
}

func (o AutoHealTriggersPtrOutput) Elem() AutoHealTriggersOutput {
	return o.ApplyT(func(v *AutoHealTriggers) AutoHealTriggers { return *v }).(AutoHealTriggersOutput)
}

// A rule based on private bytes.
func (o AutoHealTriggersPtrOutput) PrivateBytesInKB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoHealTriggers) *int {
		if v == nil {
			return nil
		}
		return v.PrivateBytesInKB
	}).(pulumi.IntPtrOutput)
}

// A rule based on total requests.
func (o AutoHealTriggersPtrOutput) Requests() RequestsBasedTriggerPtrOutput {
	return o.ApplyT(func(v *AutoHealTriggers) *RequestsBasedTrigger {
		if v == nil {
			return nil
		}
		return v.Requests
	}).(RequestsBasedTriggerPtrOutput)
}

// A rule based on request execution time.
func (o AutoHealTriggersPtrOutput) SlowRequests() SlowRequestsBasedTriggerPtrOutput {
	return o.ApplyT(func(v *AutoHealTriggers) *SlowRequestsBasedTrigger {
		if v == nil {
			return nil
		}
		return v.SlowRequests
	}).(SlowRequestsBasedTriggerPtrOutput)
}

// A rule based on status codes.
func (o AutoHealTriggersPtrOutput) StatusCodes() StatusCodesBasedTriggerArrayOutput {
	return o.ApplyT(func(v *AutoHealTriggers) []StatusCodesBasedTrigger {
		if v == nil {
			return nil
		}
		return v.StatusCodes
	}).(StatusCodesBasedTriggerArrayOutput)
}

// Triggers for auto-heal.
type AutoHealTriggersResponse struct {
	// A rule based on private bytes.
	PrivateBytesInKB *int `pulumi:"privateBytesInKB"`
	// A rule based on total requests.
	Requests *RequestsBasedTriggerResponse `pulumi:"requests"`
	// A rule based on request execution time.
	SlowRequests *SlowRequestsBasedTriggerResponse `pulumi:"slowRequests"`
	// A rule based on status codes.
	StatusCodes []StatusCodesBasedTriggerResponse `pulumi:"statusCodes"`
}

// AutoHealTriggersResponseInput is an input type that accepts AutoHealTriggersResponseArgs and AutoHealTriggersResponseOutput values.
// You can construct a concrete instance of `AutoHealTriggersResponseInput` via:
//
//          AutoHealTriggersResponseArgs{...}
type AutoHealTriggersResponseInput interface {
	pulumi.Input

	ToAutoHealTriggersResponseOutput() AutoHealTriggersResponseOutput
	ToAutoHealTriggersResponseOutputWithContext(context.Context) AutoHealTriggersResponseOutput
}

// Triggers for auto-heal.
type AutoHealTriggersResponseArgs struct {
	// A rule based on private bytes.
	PrivateBytesInKB pulumi.IntPtrInput `pulumi:"privateBytesInKB"`
	// A rule based on total requests.
	Requests RequestsBasedTriggerResponsePtrInput `pulumi:"requests"`
	// A rule based on request execution time.
	SlowRequests SlowRequestsBasedTriggerResponsePtrInput `pulumi:"slowRequests"`
	// A rule based on status codes.
	StatusCodes StatusCodesBasedTriggerResponseArrayInput `pulumi:"statusCodes"`
}

func (AutoHealTriggersResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealTriggersResponse)(nil)).Elem()
}

func (i AutoHealTriggersResponseArgs) ToAutoHealTriggersResponseOutput() AutoHealTriggersResponseOutput {
	return i.ToAutoHealTriggersResponseOutputWithContext(context.Background())
}

func (i AutoHealTriggersResponseArgs) ToAutoHealTriggersResponseOutputWithContext(ctx context.Context) AutoHealTriggersResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealTriggersResponseOutput)
}

func (i AutoHealTriggersResponseArgs) ToAutoHealTriggersResponsePtrOutput() AutoHealTriggersResponsePtrOutput {
	return i.ToAutoHealTriggersResponsePtrOutputWithContext(context.Background())
}

func (i AutoHealTriggersResponseArgs) ToAutoHealTriggersResponsePtrOutputWithContext(ctx context.Context) AutoHealTriggersResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealTriggersResponseOutput).ToAutoHealTriggersResponsePtrOutputWithContext(ctx)
}

// AutoHealTriggersResponsePtrInput is an input type that accepts AutoHealTriggersResponseArgs, AutoHealTriggersResponsePtr and AutoHealTriggersResponsePtrOutput values.
// You can construct a concrete instance of `AutoHealTriggersResponsePtrInput` via:
//
//          AutoHealTriggersResponseArgs{...}
//
//  or:
//
//          nil
type AutoHealTriggersResponsePtrInput interface {
	pulumi.Input

	ToAutoHealTriggersResponsePtrOutput() AutoHealTriggersResponsePtrOutput
	ToAutoHealTriggersResponsePtrOutputWithContext(context.Context) AutoHealTriggersResponsePtrOutput
}

type autoHealTriggersResponsePtrType AutoHealTriggersResponseArgs

func AutoHealTriggersResponsePtr(v *AutoHealTriggersResponseArgs) AutoHealTriggersResponsePtrInput {
	return (*autoHealTriggersResponsePtrType)(v)
}

func (*autoHealTriggersResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealTriggersResponse)(nil)).Elem()
}

func (i *autoHealTriggersResponsePtrType) ToAutoHealTriggersResponsePtrOutput() AutoHealTriggersResponsePtrOutput {
	return i.ToAutoHealTriggersResponsePtrOutputWithContext(context.Background())
}

func (i *autoHealTriggersResponsePtrType) ToAutoHealTriggersResponsePtrOutputWithContext(ctx context.Context) AutoHealTriggersResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealTriggersResponsePtrOutput)
}

// Triggers for auto-heal.
type AutoHealTriggersResponseOutput struct{ *pulumi.OutputState }

func (AutoHealTriggersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealTriggersResponse)(nil)).Elem()
}

func (o AutoHealTriggersResponseOutput) ToAutoHealTriggersResponseOutput() AutoHealTriggersResponseOutput {
	return o
}

func (o AutoHealTriggersResponseOutput) ToAutoHealTriggersResponseOutputWithContext(ctx context.Context) AutoHealTriggersResponseOutput {
	return o
}

func (o AutoHealTriggersResponseOutput) ToAutoHealTriggersResponsePtrOutput() AutoHealTriggersResponsePtrOutput {
	return o.ToAutoHealTriggersResponsePtrOutputWithContext(context.Background())
}

func (o AutoHealTriggersResponseOutput) ToAutoHealTriggersResponsePtrOutputWithContext(ctx context.Context) AutoHealTriggersResponsePtrOutput {
	return o.ApplyT(func(v AutoHealTriggersResponse) *AutoHealTriggersResponse {
		return &v
	}).(AutoHealTriggersResponsePtrOutput)
}

// A rule based on private bytes.
func (o AutoHealTriggersResponseOutput) PrivateBytesInKB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoHealTriggersResponse) *int { return v.PrivateBytesInKB }).(pulumi.IntPtrOutput)
}

// A rule based on total requests.
func (o AutoHealTriggersResponseOutput) Requests() RequestsBasedTriggerResponsePtrOutput {
	return o.ApplyT(func(v AutoHealTriggersResponse) *RequestsBasedTriggerResponse { return v.Requests }).(RequestsBasedTriggerResponsePtrOutput)
}

// A rule based on request execution time.
func (o AutoHealTriggersResponseOutput) SlowRequests() SlowRequestsBasedTriggerResponsePtrOutput {
	return o.ApplyT(func(v AutoHealTriggersResponse) *SlowRequestsBasedTriggerResponse { return v.SlowRequests }).(SlowRequestsBasedTriggerResponsePtrOutput)
}

// A rule based on status codes.
func (o AutoHealTriggersResponseOutput) StatusCodes() StatusCodesBasedTriggerResponseArrayOutput {
	return o.ApplyT(func(v AutoHealTriggersResponse) []StatusCodesBasedTriggerResponse { return v.StatusCodes }).(StatusCodesBasedTriggerResponseArrayOutput)
}

type AutoHealTriggersResponsePtrOutput struct{ *pulumi.OutputState }

func (AutoHealTriggersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealTriggersResponse)(nil)).Elem()
}

func (o AutoHealTriggersResponsePtrOutput) ToAutoHealTriggersResponsePtrOutput() AutoHealTriggersResponsePtrOutput {
	return o
}

func (o AutoHealTriggersResponsePtrOutput) ToAutoHealTriggersResponsePtrOutputWithContext(ctx context.Context) AutoHealTriggersResponsePtrOutput {
	return o
}

func (o AutoHealTriggersResponsePtrOutput) Elem() AutoHealTriggersResponseOutput {
	return o.ApplyT(func(v *AutoHealTriggersResponse) AutoHealTriggersResponse { return *v }).(AutoHealTriggersResponseOutput)
}

// A rule based on private bytes.
func (o AutoHealTriggersResponsePtrOutput) PrivateBytesInKB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoHealTriggersResponse) *int {
		if v == nil {
			return nil
		}
		return v.PrivateBytesInKB
	}).(pulumi.IntPtrOutput)
}

// A rule based on total requests.
func (o AutoHealTriggersResponsePtrOutput) Requests() RequestsBasedTriggerResponsePtrOutput {
	return o.ApplyT(func(v *AutoHealTriggersResponse) *RequestsBasedTriggerResponse {
		if v == nil {
			return nil
		}
		return v.Requests
	}).(RequestsBasedTriggerResponsePtrOutput)
}

// A rule based on request execution time.
func (o AutoHealTriggersResponsePtrOutput) SlowRequests() SlowRequestsBasedTriggerResponsePtrOutput {
	return o.ApplyT(func(v *AutoHealTriggersResponse) *SlowRequestsBasedTriggerResponse {
		if v == nil {
			return nil
		}
		return v.SlowRequests
	}).(SlowRequestsBasedTriggerResponsePtrOutput)
}

// A rule based on status codes.
func (o AutoHealTriggersResponsePtrOutput) StatusCodes() StatusCodesBasedTriggerResponseArrayOutput {
	return o.ApplyT(func(v *AutoHealTriggersResponse) []StatusCodesBasedTriggerResponse {
		if v == nil {
			return nil
		}
		return v.StatusCodes
	}).(StatusCodesBasedTriggerResponseArrayOutput)
}

// Azure Files or Blob Storage access information value for dictionary storage.
type AzureStorageInfoValue struct {
	// Access key for the storage account.
	AccessKey *string `pulumi:"accessKey"`
	// Name of the storage account.
	AccountName *string `pulumi:"accountName"`
	// Path to mount the storage within the site's runtime environment.
	MountPath *string `pulumi:"mountPath"`
	// Name of the file share (container name, for Blob storage).
	ShareName *string `pulumi:"shareName"`
	// Type of storage.
	Type *string `pulumi:"type"`
}

// AzureStorageInfoValueInput is an input type that accepts AzureStorageInfoValueArgs and AzureStorageInfoValueOutput values.
// You can construct a concrete instance of `AzureStorageInfoValueInput` via:
//
//          AzureStorageInfoValueArgs{...}
type AzureStorageInfoValueInput interface {
	pulumi.Input

	ToAzureStorageInfoValueOutput() AzureStorageInfoValueOutput
	ToAzureStorageInfoValueOutputWithContext(context.Context) AzureStorageInfoValueOutput
}

// Azure Files or Blob Storage access information value for dictionary storage.
type AzureStorageInfoValueArgs struct {
	// Access key for the storage account.
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	// Name of the storage account.
	AccountName pulumi.StringPtrInput `pulumi:"accountName"`
	// Path to mount the storage within the site's runtime environment.
	MountPath pulumi.StringPtrInput `pulumi:"mountPath"`
	// Name of the file share (container name, for Blob storage).
	ShareName pulumi.StringPtrInput `pulumi:"shareName"`
	// Type of storage.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AzureStorageInfoValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStorageInfoValue)(nil)).Elem()
}

func (i AzureStorageInfoValueArgs) ToAzureStorageInfoValueOutput() AzureStorageInfoValueOutput {
	return i.ToAzureStorageInfoValueOutputWithContext(context.Background())
}

func (i AzureStorageInfoValueArgs) ToAzureStorageInfoValueOutputWithContext(ctx context.Context) AzureStorageInfoValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureStorageInfoValueOutput)
}

// AzureStorageInfoValueMapInput is an input type that accepts AzureStorageInfoValueMap and AzureStorageInfoValueMapOutput values.
// You can construct a concrete instance of `AzureStorageInfoValueMapInput` via:
//
//          AzureStorageInfoValueMap{ "key": AzureStorageInfoValueArgs{...} }
type AzureStorageInfoValueMapInput interface {
	pulumi.Input

	ToAzureStorageInfoValueMapOutput() AzureStorageInfoValueMapOutput
	ToAzureStorageInfoValueMapOutputWithContext(context.Context) AzureStorageInfoValueMapOutput
}

type AzureStorageInfoValueMap map[string]AzureStorageInfoValueInput

func (AzureStorageInfoValueMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AzureStorageInfoValue)(nil)).Elem()
}

func (i AzureStorageInfoValueMap) ToAzureStorageInfoValueMapOutput() AzureStorageInfoValueMapOutput {
	return i.ToAzureStorageInfoValueMapOutputWithContext(context.Background())
}

func (i AzureStorageInfoValueMap) ToAzureStorageInfoValueMapOutputWithContext(ctx context.Context) AzureStorageInfoValueMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureStorageInfoValueMapOutput)
}

// Azure Files or Blob Storage access information value for dictionary storage.
type AzureStorageInfoValueOutput struct{ *pulumi.OutputState }

func (AzureStorageInfoValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStorageInfoValue)(nil)).Elem()
}

func (o AzureStorageInfoValueOutput) ToAzureStorageInfoValueOutput() AzureStorageInfoValueOutput {
	return o
}

func (o AzureStorageInfoValueOutput) ToAzureStorageInfoValueOutputWithContext(ctx context.Context) AzureStorageInfoValueOutput {
	return o
}

// Access key for the storage account.
func (o AzureStorageInfoValueOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageInfoValue) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

// Name of the storage account.
func (o AzureStorageInfoValueOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageInfoValue) *string { return v.AccountName }).(pulumi.StringPtrOutput)
}

// Path to mount the storage within the site's runtime environment.
func (o AzureStorageInfoValueOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageInfoValue) *string { return v.MountPath }).(pulumi.StringPtrOutput)
}

// Name of the file share (container name, for Blob storage).
func (o AzureStorageInfoValueOutput) ShareName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageInfoValue) *string { return v.ShareName }).(pulumi.StringPtrOutput)
}

// Type of storage.
func (o AzureStorageInfoValueOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageInfoValue) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AzureStorageInfoValueMapOutput struct{ *pulumi.OutputState }

func (AzureStorageInfoValueMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AzureStorageInfoValue)(nil)).Elem()
}

func (o AzureStorageInfoValueMapOutput) ToAzureStorageInfoValueMapOutput() AzureStorageInfoValueMapOutput {
	return o
}

func (o AzureStorageInfoValueMapOutput) ToAzureStorageInfoValueMapOutputWithContext(ctx context.Context) AzureStorageInfoValueMapOutput {
	return o
}

func (o AzureStorageInfoValueMapOutput) MapIndex(k pulumi.StringInput) AzureStorageInfoValueOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) AzureStorageInfoValue {
		return vs[0].(map[string]AzureStorageInfoValue)[vs[1].(string)]
	}).(AzureStorageInfoValueOutput)
}

// Azure Files or Blob Storage access information value for dictionary storage.
type AzureStorageInfoValueResponse struct {
	// Access key for the storage account.
	AccessKey *string `pulumi:"accessKey"`
	// Name of the storage account.
	AccountName *string `pulumi:"accountName"`
	// Path to mount the storage within the site's runtime environment.
	MountPath *string `pulumi:"mountPath"`
	// Name of the file share (container name, for Blob storage).
	ShareName *string `pulumi:"shareName"`
	// State of the storage account.
	State string `pulumi:"state"`
	// Type of storage.
	Type *string `pulumi:"type"`
}

// AzureStorageInfoValueResponseInput is an input type that accepts AzureStorageInfoValueResponseArgs and AzureStorageInfoValueResponseOutput values.
// You can construct a concrete instance of `AzureStorageInfoValueResponseInput` via:
//
//          AzureStorageInfoValueResponseArgs{...}
type AzureStorageInfoValueResponseInput interface {
	pulumi.Input

	ToAzureStorageInfoValueResponseOutput() AzureStorageInfoValueResponseOutput
	ToAzureStorageInfoValueResponseOutputWithContext(context.Context) AzureStorageInfoValueResponseOutput
}

// Azure Files or Blob Storage access information value for dictionary storage.
type AzureStorageInfoValueResponseArgs struct {
	// Access key for the storage account.
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	// Name of the storage account.
	AccountName pulumi.StringPtrInput `pulumi:"accountName"`
	// Path to mount the storage within the site's runtime environment.
	MountPath pulumi.StringPtrInput `pulumi:"mountPath"`
	// Name of the file share (container name, for Blob storage).
	ShareName pulumi.StringPtrInput `pulumi:"shareName"`
	// State of the storage account.
	State pulumi.StringInput `pulumi:"state"`
	// Type of storage.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AzureStorageInfoValueResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStorageInfoValueResponse)(nil)).Elem()
}

func (i AzureStorageInfoValueResponseArgs) ToAzureStorageInfoValueResponseOutput() AzureStorageInfoValueResponseOutput {
	return i.ToAzureStorageInfoValueResponseOutputWithContext(context.Background())
}

func (i AzureStorageInfoValueResponseArgs) ToAzureStorageInfoValueResponseOutputWithContext(ctx context.Context) AzureStorageInfoValueResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureStorageInfoValueResponseOutput)
}

// AzureStorageInfoValueResponseMapInput is an input type that accepts AzureStorageInfoValueResponseMap and AzureStorageInfoValueResponseMapOutput values.
// You can construct a concrete instance of `AzureStorageInfoValueResponseMapInput` via:
//
//          AzureStorageInfoValueResponseMap{ "key": AzureStorageInfoValueResponseArgs{...} }
type AzureStorageInfoValueResponseMapInput interface {
	pulumi.Input

	ToAzureStorageInfoValueResponseMapOutput() AzureStorageInfoValueResponseMapOutput
	ToAzureStorageInfoValueResponseMapOutputWithContext(context.Context) AzureStorageInfoValueResponseMapOutput
}

type AzureStorageInfoValueResponseMap map[string]AzureStorageInfoValueResponseInput

func (AzureStorageInfoValueResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AzureStorageInfoValueResponse)(nil)).Elem()
}

func (i AzureStorageInfoValueResponseMap) ToAzureStorageInfoValueResponseMapOutput() AzureStorageInfoValueResponseMapOutput {
	return i.ToAzureStorageInfoValueResponseMapOutputWithContext(context.Background())
}

func (i AzureStorageInfoValueResponseMap) ToAzureStorageInfoValueResponseMapOutputWithContext(ctx context.Context) AzureStorageInfoValueResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureStorageInfoValueResponseMapOutput)
}

// Azure Files or Blob Storage access information value for dictionary storage.
type AzureStorageInfoValueResponseOutput struct{ *pulumi.OutputState }

func (AzureStorageInfoValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStorageInfoValueResponse)(nil)).Elem()
}

func (o AzureStorageInfoValueResponseOutput) ToAzureStorageInfoValueResponseOutput() AzureStorageInfoValueResponseOutput {
	return o
}

func (o AzureStorageInfoValueResponseOutput) ToAzureStorageInfoValueResponseOutputWithContext(ctx context.Context) AzureStorageInfoValueResponseOutput {
	return o
}

// Access key for the storage account.
func (o AzureStorageInfoValueResponseOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageInfoValueResponse) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

// Name of the storage account.
func (o AzureStorageInfoValueResponseOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageInfoValueResponse) *string { return v.AccountName }).(pulumi.StringPtrOutput)
}

// Path to mount the storage within the site's runtime environment.
func (o AzureStorageInfoValueResponseOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageInfoValueResponse) *string { return v.MountPath }).(pulumi.StringPtrOutput)
}

// Name of the file share (container name, for Blob storage).
func (o AzureStorageInfoValueResponseOutput) ShareName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageInfoValueResponse) *string { return v.ShareName }).(pulumi.StringPtrOutput)
}

// State of the storage account.
func (o AzureStorageInfoValueResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v AzureStorageInfoValueResponse) string { return v.State }).(pulumi.StringOutput)
}

// Type of storage.
func (o AzureStorageInfoValueResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageInfoValueResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AzureStorageInfoValueResponseMapOutput struct{ *pulumi.OutputState }

func (AzureStorageInfoValueResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AzureStorageInfoValueResponse)(nil)).Elem()
}

func (o AzureStorageInfoValueResponseMapOutput) ToAzureStorageInfoValueResponseMapOutput() AzureStorageInfoValueResponseMapOutput {
	return o
}

func (o AzureStorageInfoValueResponseMapOutput) ToAzureStorageInfoValueResponseMapOutputWithContext(ctx context.Context) AzureStorageInfoValueResponseMapOutput {
	return o
}

func (o AzureStorageInfoValueResponseMapOutput) MapIndex(k pulumi.StringInput) AzureStorageInfoValueResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) AzureStorageInfoValueResponse {
		return vs[0].(map[string]AzureStorageInfoValueResponse)[vs[1].(string)]
	}).(AzureStorageInfoValueResponseOutput)
}

// BackupItem resource specific properties
type BackupItemResponseProperties struct {
	// Name of the blob which contains data for this backup.
	BlobName string `pulumi:"blobName"`
	// Unique correlation identifier. Please use this along with the timestamp while communicating with Azure support.
	CorrelationId string `pulumi:"correlationId"`
	// Timestamp of the backup creation.
	Created string `pulumi:"created"`
	// List of databases included in the backup.
	Databases []DatabaseBackupSettingResponse `pulumi:"databases"`
	// Timestamp when this backup finished.
	FinishedTimeStamp string `pulumi:"finishedTimeStamp"`
	// Id of the backup.
	Id int `pulumi:"id"`
	// Timestamp of a last restore operation which used this backup.
	LastRestoreTimeStamp string `pulumi:"lastRestoreTimeStamp"`
	// Details regarding this backup. Might contain an error message.
	Log string `pulumi:"log"`
	// Name of this backup.
	Name string `pulumi:"name"`
	// True if this backup has been created due to a schedule being triggered.
	Scheduled bool `pulumi:"scheduled"`
	// Size of the backup in bytes.
	SizeInBytes int `pulumi:"sizeInBytes"`
	// Backup status.
	Status string `pulumi:"status"`
	// SAS URL for the storage account container which contains this backup.
	StorageAccountUrl string `pulumi:"storageAccountUrl"`
	// Size of the original web app which has been backed up.
	WebsiteSizeInBytes int `pulumi:"websiteSizeInBytes"`
}

// BackupItemResponsePropertiesInput is an input type that accepts BackupItemResponsePropertiesArgs and BackupItemResponsePropertiesOutput values.
// You can construct a concrete instance of `BackupItemResponsePropertiesInput` via:
//
//          BackupItemResponsePropertiesArgs{...}
type BackupItemResponsePropertiesInput interface {
	pulumi.Input

	ToBackupItemResponsePropertiesOutput() BackupItemResponsePropertiesOutput
	ToBackupItemResponsePropertiesOutputWithContext(context.Context) BackupItemResponsePropertiesOutput
}

// BackupItem resource specific properties
type BackupItemResponsePropertiesArgs struct {
	// Name of the blob which contains data for this backup.
	BlobName pulumi.StringInput `pulumi:"blobName"`
	// Unique correlation identifier. Please use this along with the timestamp while communicating with Azure support.
	CorrelationId pulumi.StringInput `pulumi:"correlationId"`
	// Timestamp of the backup creation.
	Created pulumi.StringInput `pulumi:"created"`
	// List of databases included in the backup.
	Databases DatabaseBackupSettingResponseArrayInput `pulumi:"databases"`
	// Timestamp when this backup finished.
	FinishedTimeStamp pulumi.StringInput `pulumi:"finishedTimeStamp"`
	// Id of the backup.
	Id pulumi.IntInput `pulumi:"id"`
	// Timestamp of a last restore operation which used this backup.
	LastRestoreTimeStamp pulumi.StringInput `pulumi:"lastRestoreTimeStamp"`
	// Details regarding this backup. Might contain an error message.
	Log pulumi.StringInput `pulumi:"log"`
	// Name of this backup.
	Name pulumi.StringInput `pulumi:"name"`
	// True if this backup has been created due to a schedule being triggered.
	Scheduled pulumi.BoolInput `pulumi:"scheduled"`
	// Size of the backup in bytes.
	SizeInBytes pulumi.IntInput `pulumi:"sizeInBytes"`
	// Backup status.
	Status pulumi.StringInput `pulumi:"status"`
	// SAS URL for the storage account container which contains this backup.
	StorageAccountUrl pulumi.StringInput `pulumi:"storageAccountUrl"`
	// Size of the original web app which has been backed up.
	WebsiteSizeInBytes pulumi.IntInput `pulumi:"websiteSizeInBytes"`
}

func (BackupItemResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupItemResponseProperties)(nil)).Elem()
}

func (i BackupItemResponsePropertiesArgs) ToBackupItemResponsePropertiesOutput() BackupItemResponsePropertiesOutput {
	return i.ToBackupItemResponsePropertiesOutputWithContext(context.Background())
}

func (i BackupItemResponsePropertiesArgs) ToBackupItemResponsePropertiesOutputWithContext(ctx context.Context) BackupItemResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupItemResponsePropertiesOutput)
}

// BackupItem resource specific properties
type BackupItemResponsePropertiesOutput struct{ *pulumi.OutputState }

func (BackupItemResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupItemResponseProperties)(nil)).Elem()
}

func (o BackupItemResponsePropertiesOutput) ToBackupItemResponsePropertiesOutput() BackupItemResponsePropertiesOutput {
	return o
}

func (o BackupItemResponsePropertiesOutput) ToBackupItemResponsePropertiesOutputWithContext(ctx context.Context) BackupItemResponsePropertiesOutput {
	return o
}

// Name of the blob which contains data for this backup.
func (o BackupItemResponsePropertiesOutput) BlobName() pulumi.StringOutput {
	return o.ApplyT(func(v BackupItemResponseProperties) string { return v.BlobName }).(pulumi.StringOutput)
}

// Unique correlation identifier. Please use this along with the timestamp while communicating with Azure support.
func (o BackupItemResponsePropertiesOutput) CorrelationId() pulumi.StringOutput {
	return o.ApplyT(func(v BackupItemResponseProperties) string { return v.CorrelationId }).(pulumi.StringOutput)
}

// Timestamp of the backup creation.
func (o BackupItemResponsePropertiesOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v BackupItemResponseProperties) string { return v.Created }).(pulumi.StringOutput)
}

// List of databases included in the backup.
func (o BackupItemResponsePropertiesOutput) Databases() DatabaseBackupSettingResponseArrayOutput {
	return o.ApplyT(func(v BackupItemResponseProperties) []DatabaseBackupSettingResponse { return v.Databases }).(DatabaseBackupSettingResponseArrayOutput)
}

// Timestamp when this backup finished.
func (o BackupItemResponsePropertiesOutput) FinishedTimeStamp() pulumi.StringOutput {
	return o.ApplyT(func(v BackupItemResponseProperties) string { return v.FinishedTimeStamp }).(pulumi.StringOutput)
}

// Id of the backup.
func (o BackupItemResponsePropertiesOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v BackupItemResponseProperties) int { return v.Id }).(pulumi.IntOutput)
}

// Timestamp of a last restore operation which used this backup.
func (o BackupItemResponsePropertiesOutput) LastRestoreTimeStamp() pulumi.StringOutput {
	return o.ApplyT(func(v BackupItemResponseProperties) string { return v.LastRestoreTimeStamp }).(pulumi.StringOutput)
}

// Details regarding this backup. Might contain an error message.
func (o BackupItemResponsePropertiesOutput) Log() pulumi.StringOutput {
	return o.ApplyT(func(v BackupItemResponseProperties) string { return v.Log }).(pulumi.StringOutput)
}

// Name of this backup.
func (o BackupItemResponsePropertiesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BackupItemResponseProperties) string { return v.Name }).(pulumi.StringOutput)
}

// True if this backup has been created due to a schedule being triggered.
func (o BackupItemResponsePropertiesOutput) Scheduled() pulumi.BoolOutput {
	return o.ApplyT(func(v BackupItemResponseProperties) bool { return v.Scheduled }).(pulumi.BoolOutput)
}

// Size of the backup in bytes.
func (o BackupItemResponsePropertiesOutput) SizeInBytes() pulumi.IntOutput {
	return o.ApplyT(func(v BackupItemResponseProperties) int { return v.SizeInBytes }).(pulumi.IntOutput)
}

// Backup status.
func (o BackupItemResponsePropertiesOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v BackupItemResponseProperties) string { return v.Status }).(pulumi.StringOutput)
}

// SAS URL for the storage account container which contains this backup.
func (o BackupItemResponsePropertiesOutput) StorageAccountUrl() pulumi.StringOutput {
	return o.ApplyT(func(v BackupItemResponseProperties) string { return v.StorageAccountUrl }).(pulumi.StringOutput)
}

// Size of the original web app which has been backed up.
func (o BackupItemResponsePropertiesOutput) WebsiteSizeInBytes() pulumi.IntOutput {
	return o.ApplyT(func(v BackupItemResponseProperties) int { return v.WebsiteSizeInBytes }).(pulumi.IntOutput)
}

// BackupRequest resource specific properties
type BackupRequestResponseProperties struct {
	// Name of the backup.
	BackupName *string `pulumi:"backupName"`
	// Schedule for the backup if it is executed periodically.
	BackupSchedule *BackupScheduleResponse `pulumi:"backupSchedule"`
	// Databases included in the backup.
	Databases []DatabaseBackupSettingResponse `pulumi:"databases"`
	// True if the backup schedule is enabled (must be included in that case), false if the backup schedule should be disabled.
	Enabled *bool `pulumi:"enabled"`
	// SAS URL to the container.
	StorageAccountUrl string `pulumi:"storageAccountUrl"`
}

// BackupRequestResponsePropertiesInput is an input type that accepts BackupRequestResponsePropertiesArgs and BackupRequestResponsePropertiesOutput values.
// You can construct a concrete instance of `BackupRequestResponsePropertiesInput` via:
//
//          BackupRequestResponsePropertiesArgs{...}
type BackupRequestResponsePropertiesInput interface {
	pulumi.Input

	ToBackupRequestResponsePropertiesOutput() BackupRequestResponsePropertiesOutput
	ToBackupRequestResponsePropertiesOutputWithContext(context.Context) BackupRequestResponsePropertiesOutput
}

// BackupRequest resource specific properties
type BackupRequestResponsePropertiesArgs struct {
	// Name of the backup.
	BackupName pulumi.StringPtrInput `pulumi:"backupName"`
	// Schedule for the backup if it is executed periodically.
	BackupSchedule BackupScheduleResponsePtrInput `pulumi:"backupSchedule"`
	// Databases included in the backup.
	Databases DatabaseBackupSettingResponseArrayInput `pulumi:"databases"`
	// True if the backup schedule is enabled (must be included in that case), false if the backup schedule should be disabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// SAS URL to the container.
	StorageAccountUrl pulumi.StringInput `pulumi:"storageAccountUrl"`
}

func (BackupRequestResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupRequestResponseProperties)(nil)).Elem()
}

func (i BackupRequestResponsePropertiesArgs) ToBackupRequestResponsePropertiesOutput() BackupRequestResponsePropertiesOutput {
	return i.ToBackupRequestResponsePropertiesOutputWithContext(context.Background())
}

func (i BackupRequestResponsePropertiesArgs) ToBackupRequestResponsePropertiesOutputWithContext(ctx context.Context) BackupRequestResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupRequestResponsePropertiesOutput)
}

// BackupRequest resource specific properties
type BackupRequestResponsePropertiesOutput struct{ *pulumi.OutputState }

func (BackupRequestResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupRequestResponseProperties)(nil)).Elem()
}

func (o BackupRequestResponsePropertiesOutput) ToBackupRequestResponsePropertiesOutput() BackupRequestResponsePropertiesOutput {
	return o
}

func (o BackupRequestResponsePropertiesOutput) ToBackupRequestResponsePropertiesOutputWithContext(ctx context.Context) BackupRequestResponsePropertiesOutput {
	return o
}

// Name of the backup.
func (o BackupRequestResponsePropertiesOutput) BackupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupRequestResponseProperties) *string { return v.BackupName }).(pulumi.StringPtrOutput)
}

// Schedule for the backup if it is executed periodically.
func (o BackupRequestResponsePropertiesOutput) BackupSchedule() BackupScheduleResponsePtrOutput {
	return o.ApplyT(func(v BackupRequestResponseProperties) *BackupScheduleResponse { return v.BackupSchedule }).(BackupScheduleResponsePtrOutput)
}

// Databases included in the backup.
func (o BackupRequestResponsePropertiesOutput) Databases() DatabaseBackupSettingResponseArrayOutput {
	return o.ApplyT(func(v BackupRequestResponseProperties) []DatabaseBackupSettingResponse { return v.Databases }).(DatabaseBackupSettingResponseArrayOutput)
}

// True if the backup schedule is enabled (must be included in that case), false if the backup schedule should be disabled.
func (o BackupRequestResponsePropertiesOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BackupRequestResponseProperties) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// SAS URL to the container.
func (o BackupRequestResponsePropertiesOutput) StorageAccountUrl() pulumi.StringOutput {
	return o.ApplyT(func(v BackupRequestResponseProperties) string { return v.StorageAccountUrl }).(pulumi.StringOutput)
}

// Description of a backup schedule. Describes how often should be the backup performed and what should be the retention policy.
type BackupSchedule struct {
	// How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// The unit of time for how often the backup should be executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)
	FrequencyUnit string `pulumi:"frequencyUnit"`
	// True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.
	KeepAtLeastOneBackup bool `pulumi:"keepAtLeastOneBackup"`
	// After how many days backups should be deleted.
	RetentionPeriodInDays int `pulumi:"retentionPeriodInDays"`
	// When the schedule should start working.
	StartTime *string `pulumi:"startTime"`
}

// BackupScheduleInput is an input type that accepts BackupScheduleArgs and BackupScheduleOutput values.
// You can construct a concrete instance of `BackupScheduleInput` via:
//
//          BackupScheduleArgs{...}
type BackupScheduleInput interface {
	pulumi.Input

	ToBackupScheduleOutput() BackupScheduleOutput
	ToBackupScheduleOutputWithContext(context.Context) BackupScheduleOutput
}

// Description of a backup schedule. Describes how often should be the backup performed and what should be the retention policy.
type BackupScheduleArgs struct {
	// How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// The unit of time for how often the backup should be executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)
	FrequencyUnit pulumi.StringInput `pulumi:"frequencyUnit"`
	// True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.
	KeepAtLeastOneBackup pulumi.BoolInput `pulumi:"keepAtLeastOneBackup"`
	// After how many days backups should be deleted.
	RetentionPeriodInDays pulumi.IntInput `pulumi:"retentionPeriodInDays"`
	// When the schedule should start working.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
}

func (BackupScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupSchedule)(nil)).Elem()
}

func (i BackupScheduleArgs) ToBackupScheduleOutput() BackupScheduleOutput {
	return i.ToBackupScheduleOutputWithContext(context.Background())
}

func (i BackupScheduleArgs) ToBackupScheduleOutputWithContext(ctx context.Context) BackupScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupScheduleOutput)
}

// Description of a backup schedule. Describes how often should be the backup performed and what should be the retention policy.
type BackupScheduleOutput struct{ *pulumi.OutputState }

func (BackupScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupSchedule)(nil)).Elem()
}

func (o BackupScheduleOutput) ToBackupScheduleOutput() BackupScheduleOutput {
	return o
}

func (o BackupScheduleOutput) ToBackupScheduleOutputWithContext(ctx context.Context) BackupScheduleOutput {
	return o
}

// How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)
func (o BackupScheduleOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v BackupSchedule) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// The unit of time for how often the backup should be executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)
func (o BackupScheduleOutput) FrequencyUnit() pulumi.StringOutput {
	return o.ApplyT(func(v BackupSchedule) string { return v.FrequencyUnit }).(pulumi.StringOutput)
}

// True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.
func (o BackupScheduleOutput) KeepAtLeastOneBackup() pulumi.BoolOutput {
	return o.ApplyT(func(v BackupSchedule) bool { return v.KeepAtLeastOneBackup }).(pulumi.BoolOutput)
}

// After how many days backups should be deleted.
func (o BackupScheduleOutput) RetentionPeriodInDays() pulumi.IntOutput {
	return o.ApplyT(func(v BackupSchedule) int { return v.RetentionPeriodInDays }).(pulumi.IntOutput)
}

// When the schedule should start working.
func (o BackupScheduleOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupSchedule) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

// Description of a backup schedule. Describes how often should be the backup performed and what should be the retention policy.
type BackupScheduleResponse struct {
	// How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// The unit of time for how often the backup should be executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)
	FrequencyUnit string `pulumi:"frequencyUnit"`
	// True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.
	KeepAtLeastOneBackup bool `pulumi:"keepAtLeastOneBackup"`
	// Last time when this schedule was triggered.
	LastExecutionTime string `pulumi:"lastExecutionTime"`
	// After how many days backups should be deleted.
	RetentionPeriodInDays int `pulumi:"retentionPeriodInDays"`
	// When the schedule should start working.
	StartTime *string `pulumi:"startTime"`
}

// BackupScheduleResponseInput is an input type that accepts BackupScheduleResponseArgs and BackupScheduleResponseOutput values.
// You can construct a concrete instance of `BackupScheduleResponseInput` via:
//
//          BackupScheduleResponseArgs{...}
type BackupScheduleResponseInput interface {
	pulumi.Input

	ToBackupScheduleResponseOutput() BackupScheduleResponseOutput
	ToBackupScheduleResponseOutputWithContext(context.Context) BackupScheduleResponseOutput
}

// Description of a backup schedule. Describes how often should be the backup performed and what should be the retention policy.
type BackupScheduleResponseArgs struct {
	// How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// The unit of time for how often the backup should be executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)
	FrequencyUnit pulumi.StringInput `pulumi:"frequencyUnit"`
	// True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.
	KeepAtLeastOneBackup pulumi.BoolInput `pulumi:"keepAtLeastOneBackup"`
	// Last time when this schedule was triggered.
	LastExecutionTime pulumi.StringInput `pulumi:"lastExecutionTime"`
	// After how many days backups should be deleted.
	RetentionPeriodInDays pulumi.IntInput `pulumi:"retentionPeriodInDays"`
	// When the schedule should start working.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
}

func (BackupScheduleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupScheduleResponse)(nil)).Elem()
}

func (i BackupScheduleResponseArgs) ToBackupScheduleResponseOutput() BackupScheduleResponseOutput {
	return i.ToBackupScheduleResponseOutputWithContext(context.Background())
}

func (i BackupScheduleResponseArgs) ToBackupScheduleResponseOutputWithContext(ctx context.Context) BackupScheduleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupScheduleResponseOutput)
}

func (i BackupScheduleResponseArgs) ToBackupScheduleResponsePtrOutput() BackupScheduleResponsePtrOutput {
	return i.ToBackupScheduleResponsePtrOutputWithContext(context.Background())
}

func (i BackupScheduleResponseArgs) ToBackupScheduleResponsePtrOutputWithContext(ctx context.Context) BackupScheduleResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupScheduleResponseOutput).ToBackupScheduleResponsePtrOutputWithContext(ctx)
}

// BackupScheduleResponsePtrInput is an input type that accepts BackupScheduleResponseArgs, BackupScheduleResponsePtr and BackupScheduleResponsePtrOutput values.
// You can construct a concrete instance of `BackupScheduleResponsePtrInput` via:
//
//          BackupScheduleResponseArgs{...}
//
//  or:
//
//          nil
type BackupScheduleResponsePtrInput interface {
	pulumi.Input

	ToBackupScheduleResponsePtrOutput() BackupScheduleResponsePtrOutput
	ToBackupScheduleResponsePtrOutputWithContext(context.Context) BackupScheduleResponsePtrOutput
}

type backupScheduleResponsePtrType BackupScheduleResponseArgs

func BackupScheduleResponsePtr(v *BackupScheduleResponseArgs) BackupScheduleResponsePtrInput {
	return (*backupScheduleResponsePtrType)(v)
}

func (*backupScheduleResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupScheduleResponse)(nil)).Elem()
}

func (i *backupScheduleResponsePtrType) ToBackupScheduleResponsePtrOutput() BackupScheduleResponsePtrOutput {
	return i.ToBackupScheduleResponsePtrOutputWithContext(context.Background())
}

func (i *backupScheduleResponsePtrType) ToBackupScheduleResponsePtrOutputWithContext(ctx context.Context) BackupScheduleResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupScheduleResponsePtrOutput)
}

// Description of a backup schedule. Describes how often should be the backup performed and what should be the retention policy.
type BackupScheduleResponseOutput struct{ *pulumi.OutputState }

func (BackupScheduleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupScheduleResponse)(nil)).Elem()
}

func (o BackupScheduleResponseOutput) ToBackupScheduleResponseOutput() BackupScheduleResponseOutput {
	return o
}

func (o BackupScheduleResponseOutput) ToBackupScheduleResponseOutputWithContext(ctx context.Context) BackupScheduleResponseOutput {
	return o
}

func (o BackupScheduleResponseOutput) ToBackupScheduleResponsePtrOutput() BackupScheduleResponsePtrOutput {
	return o.ToBackupScheduleResponsePtrOutputWithContext(context.Background())
}

func (o BackupScheduleResponseOutput) ToBackupScheduleResponsePtrOutputWithContext(ctx context.Context) BackupScheduleResponsePtrOutput {
	return o.ApplyT(func(v BackupScheduleResponse) *BackupScheduleResponse {
		return &v
	}).(BackupScheduleResponsePtrOutput)
}

// How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)
func (o BackupScheduleResponseOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v BackupScheduleResponse) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// The unit of time for how often the backup should be executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)
func (o BackupScheduleResponseOutput) FrequencyUnit() pulumi.StringOutput {
	return o.ApplyT(func(v BackupScheduleResponse) string { return v.FrequencyUnit }).(pulumi.StringOutput)
}

// True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.
func (o BackupScheduleResponseOutput) KeepAtLeastOneBackup() pulumi.BoolOutput {
	return o.ApplyT(func(v BackupScheduleResponse) bool { return v.KeepAtLeastOneBackup }).(pulumi.BoolOutput)
}

// Last time when this schedule was triggered.
func (o BackupScheduleResponseOutput) LastExecutionTime() pulumi.StringOutput {
	return o.ApplyT(func(v BackupScheduleResponse) string { return v.LastExecutionTime }).(pulumi.StringOutput)
}

// After how many days backups should be deleted.
func (o BackupScheduleResponseOutput) RetentionPeriodInDays() pulumi.IntOutput {
	return o.ApplyT(func(v BackupScheduleResponse) int { return v.RetentionPeriodInDays }).(pulumi.IntOutput)
}

// When the schedule should start working.
func (o BackupScheduleResponseOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupScheduleResponse) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type BackupScheduleResponsePtrOutput struct{ *pulumi.OutputState }

func (BackupScheduleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupScheduleResponse)(nil)).Elem()
}

func (o BackupScheduleResponsePtrOutput) ToBackupScheduleResponsePtrOutput() BackupScheduleResponsePtrOutput {
	return o
}

func (o BackupScheduleResponsePtrOutput) ToBackupScheduleResponsePtrOutputWithContext(ctx context.Context) BackupScheduleResponsePtrOutput {
	return o
}

func (o BackupScheduleResponsePtrOutput) Elem() BackupScheduleResponseOutput {
	return o.ApplyT(func(v *BackupScheduleResponse) BackupScheduleResponse { return *v }).(BackupScheduleResponseOutput)
}

// How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)
func (o BackupScheduleResponsePtrOutput) FrequencyInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackupScheduleResponse) *int {
		if v == nil {
			return nil
		}
		return &v.FrequencyInterval
	}).(pulumi.IntPtrOutput)
}

// The unit of time for how often the backup should be executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)
func (o BackupScheduleResponsePtrOutput) FrequencyUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupScheduleResponse) *string {
		if v == nil {
			return nil
		}
		return &v.FrequencyUnit
	}).(pulumi.StringPtrOutput)
}

// True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.
func (o BackupScheduleResponsePtrOutput) KeepAtLeastOneBackup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BackupScheduleResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.KeepAtLeastOneBackup
	}).(pulumi.BoolPtrOutput)
}

// Last time when this schedule was triggered.
func (o BackupScheduleResponsePtrOutput) LastExecutionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupScheduleResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastExecutionTime
	}).(pulumi.StringPtrOutput)
}

// After how many days backups should be deleted.
func (o BackupScheduleResponsePtrOutput) RetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackupScheduleResponse) *int {
		if v == nil {
			return nil
		}
		return &v.RetentionPeriodInDays
	}).(pulumi.IntPtrOutput)
}

// When the schedule should start working.
func (o BackupScheduleResponsePtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupScheduleResponse) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

// Describes the capabilities/features allowed for a specific SKU.
type Capability struct {
	// Name of the SKU capability.
	Name *string `pulumi:"name"`
	// Reason of the SKU capability.
	Reason *string `pulumi:"reason"`
	// Value of the SKU capability.
	Value *string `pulumi:"value"`
}

// CapabilityInput is an input type that accepts CapabilityArgs and CapabilityOutput values.
// You can construct a concrete instance of `CapabilityInput` via:
//
//          CapabilityArgs{...}
type CapabilityInput interface {
	pulumi.Input

	ToCapabilityOutput() CapabilityOutput
	ToCapabilityOutputWithContext(context.Context) CapabilityOutput
}

// Describes the capabilities/features allowed for a specific SKU.
type CapabilityArgs struct {
	// Name of the SKU capability.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Reason of the SKU capability.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// Value of the SKU capability.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (CapabilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Capability)(nil)).Elem()
}

func (i CapabilityArgs) ToCapabilityOutput() CapabilityOutput {
	return i.ToCapabilityOutputWithContext(context.Background())
}

func (i CapabilityArgs) ToCapabilityOutputWithContext(ctx context.Context) CapabilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapabilityOutput)
}

// CapabilityArrayInput is an input type that accepts CapabilityArray and CapabilityArrayOutput values.
// You can construct a concrete instance of `CapabilityArrayInput` via:
//
//          CapabilityArray{ CapabilityArgs{...} }
type CapabilityArrayInput interface {
	pulumi.Input

	ToCapabilityArrayOutput() CapabilityArrayOutput
	ToCapabilityArrayOutputWithContext(context.Context) CapabilityArrayOutput
}

type CapabilityArray []CapabilityInput

func (CapabilityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Capability)(nil)).Elem()
}

func (i CapabilityArray) ToCapabilityArrayOutput() CapabilityArrayOutput {
	return i.ToCapabilityArrayOutputWithContext(context.Background())
}

func (i CapabilityArray) ToCapabilityArrayOutputWithContext(ctx context.Context) CapabilityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapabilityArrayOutput)
}

// Describes the capabilities/features allowed for a specific SKU.
type CapabilityOutput struct{ *pulumi.OutputState }

func (CapabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Capability)(nil)).Elem()
}

func (o CapabilityOutput) ToCapabilityOutput() CapabilityOutput {
	return o
}

func (o CapabilityOutput) ToCapabilityOutputWithContext(ctx context.Context) CapabilityOutput {
	return o
}

// Name of the SKU capability.
func (o CapabilityOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Capability) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Reason of the SKU capability.
func (o CapabilityOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Capability) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// Value of the SKU capability.
func (o CapabilityOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Capability) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type CapabilityArrayOutput struct{ *pulumi.OutputState }

func (CapabilityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Capability)(nil)).Elem()
}

func (o CapabilityArrayOutput) ToCapabilityArrayOutput() CapabilityArrayOutput {
	return o
}

func (o CapabilityArrayOutput) ToCapabilityArrayOutputWithContext(ctx context.Context) CapabilityArrayOutput {
	return o
}

func (o CapabilityArrayOutput) Index(i pulumi.IntInput) CapabilityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Capability {
		return vs[0].([]Capability)[vs[1].(int)]
	}).(CapabilityOutput)
}

// Describes the capabilities/features allowed for a specific SKU.
type CapabilityResponse struct {
	// Name of the SKU capability.
	Name *string `pulumi:"name"`
	// Reason of the SKU capability.
	Reason *string `pulumi:"reason"`
	// Value of the SKU capability.
	Value *string `pulumi:"value"`
}

// CapabilityResponseInput is an input type that accepts CapabilityResponseArgs and CapabilityResponseOutput values.
// You can construct a concrete instance of `CapabilityResponseInput` via:
//
//          CapabilityResponseArgs{...}
type CapabilityResponseInput interface {
	pulumi.Input

	ToCapabilityResponseOutput() CapabilityResponseOutput
	ToCapabilityResponseOutputWithContext(context.Context) CapabilityResponseOutput
}

// Describes the capabilities/features allowed for a specific SKU.
type CapabilityResponseArgs struct {
	// Name of the SKU capability.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Reason of the SKU capability.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// Value of the SKU capability.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (CapabilityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CapabilityResponse)(nil)).Elem()
}

func (i CapabilityResponseArgs) ToCapabilityResponseOutput() CapabilityResponseOutput {
	return i.ToCapabilityResponseOutputWithContext(context.Background())
}

func (i CapabilityResponseArgs) ToCapabilityResponseOutputWithContext(ctx context.Context) CapabilityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapabilityResponseOutput)
}

// CapabilityResponseArrayInput is an input type that accepts CapabilityResponseArray and CapabilityResponseArrayOutput values.
// You can construct a concrete instance of `CapabilityResponseArrayInput` via:
//
//          CapabilityResponseArray{ CapabilityResponseArgs{...} }
type CapabilityResponseArrayInput interface {
	pulumi.Input

	ToCapabilityResponseArrayOutput() CapabilityResponseArrayOutput
	ToCapabilityResponseArrayOutputWithContext(context.Context) CapabilityResponseArrayOutput
}

type CapabilityResponseArray []CapabilityResponseInput

func (CapabilityResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CapabilityResponse)(nil)).Elem()
}

func (i CapabilityResponseArray) ToCapabilityResponseArrayOutput() CapabilityResponseArrayOutput {
	return i.ToCapabilityResponseArrayOutputWithContext(context.Background())
}

func (i CapabilityResponseArray) ToCapabilityResponseArrayOutputWithContext(ctx context.Context) CapabilityResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapabilityResponseArrayOutput)
}

// Describes the capabilities/features allowed for a specific SKU.
type CapabilityResponseOutput struct{ *pulumi.OutputState }

func (CapabilityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CapabilityResponse)(nil)).Elem()
}

func (o CapabilityResponseOutput) ToCapabilityResponseOutput() CapabilityResponseOutput {
	return o
}

func (o CapabilityResponseOutput) ToCapabilityResponseOutputWithContext(ctx context.Context) CapabilityResponseOutput {
	return o
}

// Name of the SKU capability.
func (o CapabilityResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CapabilityResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Reason of the SKU capability.
func (o CapabilityResponseOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CapabilityResponse) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// Value of the SKU capability.
func (o CapabilityResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CapabilityResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type CapabilityResponseArrayOutput struct{ *pulumi.OutputState }

func (CapabilityResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CapabilityResponse)(nil)).Elem()
}

func (o CapabilityResponseArrayOutput) ToCapabilityResponseArrayOutput() CapabilityResponseArrayOutput {
	return o
}

func (o CapabilityResponseArrayOutput) ToCapabilityResponseArrayOutputWithContext(ctx context.Context) CapabilityResponseArrayOutput {
	return o
}

func (o CapabilityResponseArrayOutput) Index(i pulumi.IntInput) CapabilityResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CapabilityResponse {
		return vs[0].([]CapabilityResponse)[vs[1].(int)]
	}).(CapabilityResponseOutput)
}

// SSL certificate for an app.
type CertificateType struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Location.
	Location string `pulumi:"location"`
	// Resource Name.
	Name string `pulumi:"name"`
	// Certificate resource specific properties
	Properties CertificateResponseProperties `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// CertificateTypeInput is an input type that accepts CertificateTypeArgs and CertificateTypeOutput values.
// You can construct a concrete instance of `CertificateTypeInput` via:
//
//          CertificateTypeArgs{...}
type CertificateTypeInput interface {
	pulumi.Input

	ToCertificateTypeOutput() CertificateTypeOutput
	ToCertificateTypeOutputWithContext(context.Context) CertificateTypeOutput
}

// SSL certificate for an app.
type CertificateTypeArgs struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Location.
	Location pulumi.StringInput `pulumi:"location"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// Certificate resource specific properties
	Properties CertificateResponsePropertiesInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (CertificateTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateType)(nil)).Elem()
}

func (i CertificateTypeArgs) ToCertificateTypeOutput() CertificateTypeOutput {
	return i.ToCertificateTypeOutputWithContext(context.Background())
}

func (i CertificateTypeArgs) ToCertificateTypeOutputWithContext(ctx context.Context) CertificateTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTypeOutput)
}

// SSL certificate for an app.
type CertificateTypeOutput struct{ *pulumi.OutputState }

func (CertificateTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateType)(nil)).Elem()
}

func (o CertificateTypeOutput) ToCertificateTypeOutput() CertificateTypeOutput {
	return o
}

func (o CertificateTypeOutput) ToCertificateTypeOutputWithContext(ctx context.Context) CertificateTypeOutput {
	return o
}

// Kind of resource.
func (o CertificateTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location.
func (o CertificateTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name.
func (o CertificateTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateType) string { return v.Name }).(pulumi.StringOutput)
}

// Certificate resource specific properties
func (o CertificateTypeOutput) Properties() CertificateResponsePropertiesOutput {
	return o.ApplyT(func(v CertificateType) CertificateResponseProperties { return v.Properties }).(CertificateResponsePropertiesOutput)
}

// Resource tags.
func (o CertificateTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v CertificateType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o CertificateTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateType) string { return v.Type }).(pulumi.StringOutput)
}

// Certificate resource specific properties
type CertificateResponseProperties struct {
	// Raw bytes of .cer file
	CerBlob string `pulumi:"cerBlob"`
	// Certificate expiration date.
	ExpirationDate string `pulumi:"expirationDate"`
	// Friendly name of the certificate.
	FriendlyName string `pulumi:"friendlyName"`
	// Host names the certificate applies to.
	HostNames []string `pulumi:"hostNames"`
	// Specification for the App Service Environment to use for the certificate.
	HostingEnvironmentProfile HostingEnvironmentProfileResponse `pulumi:"hostingEnvironmentProfile"`
	// Certificate issue Date.
	IssueDate string `pulumi:"issueDate"`
	// Certificate issuer.
	Issuer string `pulumi:"issuer"`
	// Key Vault Csm resource Id.
	KeyVaultId *string `pulumi:"keyVaultId"`
	// Key Vault secret name.
	KeyVaultSecretName *string `pulumi:"keyVaultSecretName"`
	// Status of the Key Vault secret.
	KeyVaultSecretStatus string `pulumi:"keyVaultSecretStatus"`
	// Certificate password.
	Password string `pulumi:"password"`
	// Pfx blob.
	PfxBlob *string `pulumi:"pfxBlob"`
	// Public key hash.
	PublicKeyHash string `pulumi:"publicKeyHash"`
	// Self link.
	SelfLink string `pulumi:"selfLink"`
	// Resource ID of the associated App Service plan, formatted as: "/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}".
	ServerFarmId *string `pulumi:"serverFarmId"`
	// App name.
	SiteName string `pulumi:"siteName"`
	// Subject name of the certificate.
	SubjectName string `pulumi:"subjectName"`
	// Certificate thumbprint.
	Thumbprint string `pulumi:"thumbprint"`
	// Is the certificate valid?.
	Valid bool `pulumi:"valid"`
}

// CertificateResponsePropertiesInput is an input type that accepts CertificateResponsePropertiesArgs and CertificateResponsePropertiesOutput values.
// You can construct a concrete instance of `CertificateResponsePropertiesInput` via:
//
//          CertificateResponsePropertiesArgs{...}
type CertificateResponsePropertiesInput interface {
	pulumi.Input

	ToCertificateResponsePropertiesOutput() CertificateResponsePropertiesOutput
	ToCertificateResponsePropertiesOutputWithContext(context.Context) CertificateResponsePropertiesOutput
}

// Certificate resource specific properties
type CertificateResponsePropertiesArgs struct {
	// Raw bytes of .cer file
	CerBlob pulumi.StringInput `pulumi:"cerBlob"`
	// Certificate expiration date.
	ExpirationDate pulumi.StringInput `pulumi:"expirationDate"`
	// Friendly name of the certificate.
	FriendlyName pulumi.StringInput `pulumi:"friendlyName"`
	// Host names the certificate applies to.
	HostNames pulumi.StringArrayInput `pulumi:"hostNames"`
	// Specification for the App Service Environment to use for the certificate.
	HostingEnvironmentProfile HostingEnvironmentProfileResponseInput `pulumi:"hostingEnvironmentProfile"`
	// Certificate issue Date.
	IssueDate pulumi.StringInput `pulumi:"issueDate"`
	// Certificate issuer.
	Issuer pulumi.StringInput `pulumi:"issuer"`
	// Key Vault Csm resource Id.
	KeyVaultId pulumi.StringPtrInput `pulumi:"keyVaultId"`
	// Key Vault secret name.
	KeyVaultSecretName pulumi.StringPtrInput `pulumi:"keyVaultSecretName"`
	// Status of the Key Vault secret.
	KeyVaultSecretStatus pulumi.StringInput `pulumi:"keyVaultSecretStatus"`
	// Certificate password.
	Password pulumi.StringInput `pulumi:"password"`
	// Pfx blob.
	PfxBlob pulumi.StringPtrInput `pulumi:"pfxBlob"`
	// Public key hash.
	PublicKeyHash pulumi.StringInput `pulumi:"publicKeyHash"`
	// Self link.
	SelfLink pulumi.StringInput `pulumi:"selfLink"`
	// Resource ID of the associated App Service plan, formatted as: "/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}".
	ServerFarmId pulumi.StringPtrInput `pulumi:"serverFarmId"`
	// App name.
	SiteName pulumi.StringInput `pulumi:"siteName"`
	// Subject name of the certificate.
	SubjectName pulumi.StringInput `pulumi:"subjectName"`
	// Certificate thumbprint.
	Thumbprint pulumi.StringInput `pulumi:"thumbprint"`
	// Is the certificate valid?.
	Valid pulumi.BoolInput `pulumi:"valid"`
}

func (CertificateResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateResponseProperties)(nil)).Elem()
}

func (i CertificateResponsePropertiesArgs) ToCertificateResponsePropertiesOutput() CertificateResponsePropertiesOutput {
	return i.ToCertificateResponsePropertiesOutputWithContext(context.Background())
}

func (i CertificateResponsePropertiesArgs) ToCertificateResponsePropertiesOutputWithContext(ctx context.Context) CertificateResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateResponsePropertiesOutput)
}

func (i CertificateResponsePropertiesArgs) ToCertificateResponsePropertiesPtrOutput() CertificateResponsePropertiesPtrOutput {
	return i.ToCertificateResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i CertificateResponsePropertiesArgs) ToCertificateResponsePropertiesPtrOutputWithContext(ctx context.Context) CertificateResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateResponsePropertiesOutput).ToCertificateResponsePropertiesPtrOutputWithContext(ctx)
}

// CertificateResponsePropertiesPtrInput is an input type that accepts CertificateResponsePropertiesArgs, CertificateResponsePropertiesPtr and CertificateResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `CertificateResponsePropertiesPtrInput` via:
//
//          CertificateResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type CertificateResponsePropertiesPtrInput interface {
	pulumi.Input

	ToCertificateResponsePropertiesPtrOutput() CertificateResponsePropertiesPtrOutput
	ToCertificateResponsePropertiesPtrOutputWithContext(context.Context) CertificateResponsePropertiesPtrOutput
}

type certificateResponsePropertiesPtrType CertificateResponsePropertiesArgs

func CertificateResponsePropertiesPtr(v *CertificateResponsePropertiesArgs) CertificateResponsePropertiesPtrInput {
	return (*certificateResponsePropertiesPtrType)(v)
}

func (*certificateResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateResponseProperties)(nil)).Elem()
}

func (i *certificateResponsePropertiesPtrType) ToCertificateResponsePropertiesPtrOutput() CertificateResponsePropertiesPtrOutput {
	return i.ToCertificateResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *certificateResponsePropertiesPtrType) ToCertificateResponsePropertiesPtrOutputWithContext(ctx context.Context) CertificateResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateResponsePropertiesPtrOutput)
}

// Certificate resource specific properties
type CertificateResponsePropertiesOutput struct{ *pulumi.OutputState }

func (CertificateResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateResponseProperties)(nil)).Elem()
}

func (o CertificateResponsePropertiesOutput) ToCertificateResponsePropertiesOutput() CertificateResponsePropertiesOutput {
	return o
}

func (o CertificateResponsePropertiesOutput) ToCertificateResponsePropertiesOutputWithContext(ctx context.Context) CertificateResponsePropertiesOutput {
	return o
}

func (o CertificateResponsePropertiesOutput) ToCertificateResponsePropertiesPtrOutput() CertificateResponsePropertiesPtrOutput {
	return o.ToCertificateResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o CertificateResponsePropertiesOutput) ToCertificateResponsePropertiesPtrOutputWithContext(ctx context.Context) CertificateResponsePropertiesPtrOutput {
	return o.ApplyT(func(v CertificateResponseProperties) *CertificateResponseProperties {
		return &v
	}).(CertificateResponsePropertiesPtrOutput)
}

// Raw bytes of .cer file
func (o CertificateResponsePropertiesOutput) CerBlob() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateResponseProperties) string { return v.CerBlob }).(pulumi.StringOutput)
}

// Certificate expiration date.
func (o CertificateResponsePropertiesOutput) ExpirationDate() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateResponseProperties) string { return v.ExpirationDate }).(pulumi.StringOutput)
}

// Friendly name of the certificate.
func (o CertificateResponsePropertiesOutput) FriendlyName() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateResponseProperties) string { return v.FriendlyName }).(pulumi.StringOutput)
}

// Host names the certificate applies to.
func (o CertificateResponsePropertiesOutput) HostNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CertificateResponseProperties) []string { return v.HostNames }).(pulumi.StringArrayOutput)
}

// Specification for the App Service Environment to use for the certificate.
func (o CertificateResponsePropertiesOutput) HostingEnvironmentProfile() HostingEnvironmentProfileResponseOutput {
	return o.ApplyT(func(v CertificateResponseProperties) HostingEnvironmentProfileResponse {
		return v.HostingEnvironmentProfile
	}).(HostingEnvironmentProfileResponseOutput)
}

// Certificate issue Date.
func (o CertificateResponsePropertiesOutput) IssueDate() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateResponseProperties) string { return v.IssueDate }).(pulumi.StringOutput)
}

// Certificate issuer.
func (o CertificateResponsePropertiesOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateResponseProperties) string { return v.Issuer }).(pulumi.StringOutput)
}

// Key Vault Csm resource Id.
func (o CertificateResponsePropertiesOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateResponseProperties) *string { return v.KeyVaultId }).(pulumi.StringPtrOutput)
}

// Key Vault secret name.
func (o CertificateResponsePropertiesOutput) KeyVaultSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateResponseProperties) *string { return v.KeyVaultSecretName }).(pulumi.StringPtrOutput)
}

// Status of the Key Vault secret.
func (o CertificateResponsePropertiesOutput) KeyVaultSecretStatus() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateResponseProperties) string { return v.KeyVaultSecretStatus }).(pulumi.StringOutput)
}

// Certificate password.
func (o CertificateResponsePropertiesOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateResponseProperties) string { return v.Password }).(pulumi.StringOutput)
}

// Pfx blob.
func (o CertificateResponsePropertiesOutput) PfxBlob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateResponseProperties) *string { return v.PfxBlob }).(pulumi.StringPtrOutput)
}

// Public key hash.
func (o CertificateResponsePropertiesOutput) PublicKeyHash() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateResponseProperties) string { return v.PublicKeyHash }).(pulumi.StringOutput)
}

// Self link.
func (o CertificateResponsePropertiesOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateResponseProperties) string { return v.SelfLink }).(pulumi.StringOutput)
}

// Resource ID of the associated App Service plan, formatted as: "/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}".
func (o CertificateResponsePropertiesOutput) ServerFarmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateResponseProperties) *string { return v.ServerFarmId }).(pulumi.StringPtrOutput)
}

// App name.
func (o CertificateResponsePropertiesOutput) SiteName() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateResponseProperties) string { return v.SiteName }).(pulumi.StringOutput)
}

// Subject name of the certificate.
func (o CertificateResponsePropertiesOutput) SubjectName() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateResponseProperties) string { return v.SubjectName }).(pulumi.StringOutput)
}

// Certificate thumbprint.
func (o CertificateResponsePropertiesOutput) Thumbprint() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateResponseProperties) string { return v.Thumbprint }).(pulumi.StringOutput)
}

// Is the certificate valid?.
func (o CertificateResponsePropertiesOutput) Valid() pulumi.BoolOutput {
	return o.ApplyT(func(v CertificateResponseProperties) bool { return v.Valid }).(pulumi.BoolOutput)
}

type CertificateResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (CertificateResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateResponseProperties)(nil)).Elem()
}

func (o CertificateResponsePropertiesPtrOutput) ToCertificateResponsePropertiesPtrOutput() CertificateResponsePropertiesPtrOutput {
	return o
}

func (o CertificateResponsePropertiesPtrOutput) ToCertificateResponsePropertiesPtrOutputWithContext(ctx context.Context) CertificateResponsePropertiesPtrOutput {
	return o
}

func (o CertificateResponsePropertiesPtrOutput) Elem() CertificateResponsePropertiesOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) CertificateResponseProperties { return *v }).(CertificateResponsePropertiesOutput)
}

// Raw bytes of .cer file
func (o CertificateResponsePropertiesPtrOutput) CerBlob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.CerBlob
	}).(pulumi.StringPtrOutput)
}

// Certificate expiration date.
func (o CertificateResponsePropertiesPtrOutput) ExpirationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ExpirationDate
	}).(pulumi.StringPtrOutput)
}

// Friendly name of the certificate.
func (o CertificateResponsePropertiesPtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// Host names the certificate applies to.
func (o CertificateResponsePropertiesPtrOutput) HostNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) []string {
		if v == nil {
			return nil
		}
		return v.HostNames
	}).(pulumi.StringArrayOutput)
}

// Specification for the App Service Environment to use for the certificate.
func (o CertificateResponsePropertiesPtrOutput) HostingEnvironmentProfile() HostingEnvironmentProfileResponsePtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *HostingEnvironmentProfileResponse {
		if v == nil {
			return nil
		}
		return &v.HostingEnvironmentProfile
	}).(HostingEnvironmentProfileResponsePtrOutput)
}

// Certificate issue Date.
func (o CertificateResponsePropertiesPtrOutput) IssueDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.IssueDate
	}).(pulumi.StringPtrOutput)
}

// Certificate issuer.
func (o CertificateResponsePropertiesPtrOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Issuer
	}).(pulumi.StringPtrOutput)
}

// Key Vault Csm resource Id.
func (o CertificateResponsePropertiesPtrOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultId
	}).(pulumi.StringPtrOutput)
}

// Key Vault secret name.
func (o CertificateResponsePropertiesPtrOutput) KeyVaultSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultSecretName
	}).(pulumi.StringPtrOutput)
}

// Status of the Key Vault secret.
func (o CertificateResponsePropertiesPtrOutput) KeyVaultSecretStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.KeyVaultSecretStatus
	}).(pulumi.StringPtrOutput)
}

// Certificate password.
func (o CertificateResponsePropertiesPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// Pfx blob.
func (o CertificateResponsePropertiesPtrOutput) PfxBlob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.PfxBlob
	}).(pulumi.StringPtrOutput)
}

// Public key hash.
func (o CertificateResponsePropertiesPtrOutput) PublicKeyHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.PublicKeyHash
	}).(pulumi.StringPtrOutput)
}

// Self link.
func (o CertificateResponsePropertiesPtrOutput) SelfLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.SelfLink
	}).(pulumi.StringPtrOutput)
}

// Resource ID of the associated App Service plan, formatted as: "/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}".
func (o CertificateResponsePropertiesPtrOutput) ServerFarmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.ServerFarmId
	}).(pulumi.StringPtrOutput)
}

// App name.
func (o CertificateResponsePropertiesPtrOutput) SiteName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.SiteName
	}).(pulumi.StringPtrOutput)
}

// Subject name of the certificate.
func (o CertificateResponsePropertiesPtrOutput) SubjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.SubjectName
	}).(pulumi.StringPtrOutput)
}

// Certificate thumbprint.
func (o CertificateResponsePropertiesPtrOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Thumbprint
	}).(pulumi.StringPtrOutput)
}

// Is the certificate valid?.
func (o CertificateResponsePropertiesPtrOutput) Valid() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return &v.Valid
	}).(pulumi.BoolPtrOutput)
}

// Information needed for cloning operation.
type CloningInfo struct {
	// Application setting overrides for cloned app. If specified, these settings override the settings cloned
	// from source app. Otherwise, application settings from source app are retained.
	AppSettingsOverrides map[string]string `pulumi:"appSettingsOverrides"`
	// <code>true</code> to clone custom hostnames from source app; otherwise, <code>false</code>.
	CloneCustomHostNames *bool `pulumi:"cloneCustomHostNames"`
	// <code>true</code> to clone source control from source app; otherwise, <code>false</code>.
	CloneSourceControl *bool `pulumi:"cloneSourceControl"`
	// <code>true</code> to configure load balancing for source and destination app.
	ConfigureLoadBalancing *bool `pulumi:"configureLoadBalancing"`
	// Correlation ID of cloning operation. This ID ties multiple cloning operations
	// together to use the same snapshot.
	CorrelationId *string `pulumi:"correlationId"`
	// App Service Environment.
	HostingEnvironment *string `pulumi:"hostingEnvironment"`
	// <code>true</code> to overwrite destination app; otherwise, <code>false</code>.
	Overwrite *bool `pulumi:"overwrite"`
	// ARM resource ID of the source app. App resource ID is of the form
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.
	SourceWebAppId string `pulumi:"sourceWebAppId"`
	// Location of source app ex: West US or North Europe
	SourceWebAppLocation *string `pulumi:"sourceWebAppLocation"`
	// ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource ID is of the form
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
	TrafficManagerProfileId *string `pulumi:"trafficManagerProfileId"`
	// Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does not already exist.
	TrafficManagerProfileName *string `pulumi:"trafficManagerProfileName"`
}

// CloningInfoInput is an input type that accepts CloningInfoArgs and CloningInfoOutput values.
// You can construct a concrete instance of `CloningInfoInput` via:
//
//          CloningInfoArgs{...}
type CloningInfoInput interface {
	pulumi.Input

	ToCloningInfoOutput() CloningInfoOutput
	ToCloningInfoOutputWithContext(context.Context) CloningInfoOutput
}

// Information needed for cloning operation.
type CloningInfoArgs struct {
	// Application setting overrides for cloned app. If specified, these settings override the settings cloned
	// from source app. Otherwise, application settings from source app are retained.
	AppSettingsOverrides pulumi.StringMapInput `pulumi:"appSettingsOverrides"`
	// <code>true</code> to clone custom hostnames from source app; otherwise, <code>false</code>.
	CloneCustomHostNames pulumi.BoolPtrInput `pulumi:"cloneCustomHostNames"`
	// <code>true</code> to clone source control from source app; otherwise, <code>false</code>.
	CloneSourceControl pulumi.BoolPtrInput `pulumi:"cloneSourceControl"`
	// <code>true</code> to configure load balancing for source and destination app.
	ConfigureLoadBalancing pulumi.BoolPtrInput `pulumi:"configureLoadBalancing"`
	// Correlation ID of cloning operation. This ID ties multiple cloning operations
	// together to use the same snapshot.
	CorrelationId pulumi.StringPtrInput `pulumi:"correlationId"`
	// App Service Environment.
	HostingEnvironment pulumi.StringPtrInput `pulumi:"hostingEnvironment"`
	// <code>true</code> to overwrite destination app; otherwise, <code>false</code>.
	Overwrite pulumi.BoolPtrInput `pulumi:"overwrite"`
	// ARM resource ID of the source app. App resource ID is of the form
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.
	SourceWebAppId pulumi.StringInput `pulumi:"sourceWebAppId"`
	// Location of source app ex: West US or North Europe
	SourceWebAppLocation pulumi.StringPtrInput `pulumi:"sourceWebAppLocation"`
	// ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource ID is of the form
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
	TrafficManagerProfileId pulumi.StringPtrInput `pulumi:"trafficManagerProfileId"`
	// Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does not already exist.
	TrafficManagerProfileName pulumi.StringPtrInput `pulumi:"trafficManagerProfileName"`
}

func (CloningInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloningInfo)(nil)).Elem()
}

func (i CloningInfoArgs) ToCloningInfoOutput() CloningInfoOutput {
	return i.ToCloningInfoOutputWithContext(context.Background())
}

func (i CloningInfoArgs) ToCloningInfoOutputWithContext(ctx context.Context) CloningInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloningInfoOutput)
}

func (i CloningInfoArgs) ToCloningInfoPtrOutput() CloningInfoPtrOutput {
	return i.ToCloningInfoPtrOutputWithContext(context.Background())
}

func (i CloningInfoArgs) ToCloningInfoPtrOutputWithContext(ctx context.Context) CloningInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloningInfoOutput).ToCloningInfoPtrOutputWithContext(ctx)
}

// CloningInfoPtrInput is an input type that accepts CloningInfoArgs, CloningInfoPtr and CloningInfoPtrOutput values.
// You can construct a concrete instance of `CloningInfoPtrInput` via:
//
//          CloningInfoArgs{...}
//
//  or:
//
//          nil
type CloningInfoPtrInput interface {
	pulumi.Input

	ToCloningInfoPtrOutput() CloningInfoPtrOutput
	ToCloningInfoPtrOutputWithContext(context.Context) CloningInfoPtrOutput
}

type cloningInfoPtrType CloningInfoArgs

func CloningInfoPtr(v *CloningInfoArgs) CloningInfoPtrInput {
	return (*cloningInfoPtrType)(v)
}

func (*cloningInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloningInfo)(nil)).Elem()
}

func (i *cloningInfoPtrType) ToCloningInfoPtrOutput() CloningInfoPtrOutput {
	return i.ToCloningInfoPtrOutputWithContext(context.Background())
}

func (i *cloningInfoPtrType) ToCloningInfoPtrOutputWithContext(ctx context.Context) CloningInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloningInfoPtrOutput)
}

// Information needed for cloning operation.
type CloningInfoOutput struct{ *pulumi.OutputState }

func (CloningInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloningInfo)(nil)).Elem()
}

func (o CloningInfoOutput) ToCloningInfoOutput() CloningInfoOutput {
	return o
}

func (o CloningInfoOutput) ToCloningInfoOutputWithContext(ctx context.Context) CloningInfoOutput {
	return o
}

func (o CloningInfoOutput) ToCloningInfoPtrOutput() CloningInfoPtrOutput {
	return o.ToCloningInfoPtrOutputWithContext(context.Background())
}

func (o CloningInfoOutput) ToCloningInfoPtrOutputWithContext(ctx context.Context) CloningInfoPtrOutput {
	return o.ApplyT(func(v CloningInfo) *CloningInfo {
		return &v
	}).(CloningInfoPtrOutput)
}

// Application setting overrides for cloned app. If specified, these settings override the settings cloned
// from source app. Otherwise, application settings from source app are retained.
func (o CloningInfoOutput) AppSettingsOverrides() pulumi.StringMapOutput {
	return o.ApplyT(func(v CloningInfo) map[string]string { return v.AppSettingsOverrides }).(pulumi.StringMapOutput)
}

// <code>true</code> to clone custom hostnames from source app; otherwise, <code>false</code>.
func (o CloningInfoOutput) CloneCustomHostNames() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloningInfo) *bool { return v.CloneCustomHostNames }).(pulumi.BoolPtrOutput)
}

// <code>true</code> to clone source control from source app; otherwise, <code>false</code>.
func (o CloningInfoOutput) CloneSourceControl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloningInfo) *bool { return v.CloneSourceControl }).(pulumi.BoolPtrOutput)
}

// <code>true</code> to configure load balancing for source and destination app.
func (o CloningInfoOutput) ConfigureLoadBalancing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloningInfo) *bool { return v.ConfigureLoadBalancing }).(pulumi.BoolPtrOutput)
}

// Correlation ID of cloning operation. This ID ties multiple cloning operations
// together to use the same snapshot.
func (o CloningInfoOutput) CorrelationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfo) *string { return v.CorrelationId }).(pulumi.StringPtrOutput)
}

// App Service Environment.
func (o CloningInfoOutput) HostingEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfo) *string { return v.HostingEnvironment }).(pulumi.StringPtrOutput)
}

// <code>true</code> to overwrite destination app; otherwise, <code>false</code>.
func (o CloningInfoOutput) Overwrite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloningInfo) *bool { return v.Overwrite }).(pulumi.BoolPtrOutput)
}

// ARM resource ID of the source app. App resource ID is of the form
// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and
// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.
func (o CloningInfoOutput) SourceWebAppId() pulumi.StringOutput {
	return o.ApplyT(func(v CloningInfo) string { return v.SourceWebAppId }).(pulumi.StringOutput)
}

// Location of source app ex: West US or North Europe
func (o CloningInfoOutput) SourceWebAppLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfo) *string { return v.SourceWebAppLocation }).(pulumi.StringPtrOutput)
}

// ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource ID is of the form
// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
func (o CloningInfoOutput) TrafficManagerProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfo) *string { return v.TrafficManagerProfileId }).(pulumi.StringPtrOutput)
}

// Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does not already exist.
func (o CloningInfoOutput) TrafficManagerProfileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfo) *string { return v.TrafficManagerProfileName }).(pulumi.StringPtrOutput)
}

type CloningInfoPtrOutput struct{ *pulumi.OutputState }

func (CloningInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloningInfo)(nil)).Elem()
}

func (o CloningInfoPtrOutput) ToCloningInfoPtrOutput() CloningInfoPtrOutput {
	return o
}

func (o CloningInfoPtrOutput) ToCloningInfoPtrOutputWithContext(ctx context.Context) CloningInfoPtrOutput {
	return o
}

func (o CloningInfoPtrOutput) Elem() CloningInfoOutput {
	return o.ApplyT(func(v *CloningInfo) CloningInfo { return *v }).(CloningInfoOutput)
}

// Application setting overrides for cloned app. If specified, these settings override the settings cloned
// from source app. Otherwise, application settings from source app are retained.
func (o CloningInfoPtrOutput) AppSettingsOverrides() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CloningInfo) map[string]string {
		if v == nil {
			return nil
		}
		return v.AppSettingsOverrides
	}).(pulumi.StringMapOutput)
}

// <code>true</code> to clone custom hostnames from source app; otherwise, <code>false</code>.
func (o CloningInfoPtrOutput) CloneCustomHostNames() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *bool {
		if v == nil {
			return nil
		}
		return v.CloneCustomHostNames
	}).(pulumi.BoolPtrOutput)
}

// <code>true</code> to clone source control from source app; otherwise, <code>false</code>.
func (o CloningInfoPtrOutput) CloneSourceControl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *bool {
		if v == nil {
			return nil
		}
		return v.CloneSourceControl
	}).(pulumi.BoolPtrOutput)
}

// <code>true</code> to configure load balancing for source and destination app.
func (o CloningInfoPtrOutput) ConfigureLoadBalancing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *bool {
		if v == nil {
			return nil
		}
		return v.ConfigureLoadBalancing
	}).(pulumi.BoolPtrOutput)
}

// Correlation ID of cloning operation. This ID ties multiple cloning operations
// together to use the same snapshot.
func (o CloningInfoPtrOutput) CorrelationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *string {
		if v == nil {
			return nil
		}
		return v.CorrelationId
	}).(pulumi.StringPtrOutput)
}

// App Service Environment.
func (o CloningInfoPtrOutput) HostingEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *string {
		if v == nil {
			return nil
		}
		return v.HostingEnvironment
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> to overwrite destination app; otherwise, <code>false</code>.
func (o CloningInfoPtrOutput) Overwrite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *bool {
		if v == nil {
			return nil
		}
		return v.Overwrite
	}).(pulumi.BoolPtrOutput)
}

// ARM resource ID of the source app. App resource ID is of the form
// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and
// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.
func (o CloningInfoPtrOutput) SourceWebAppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *string {
		if v == nil {
			return nil
		}
		return &v.SourceWebAppId
	}).(pulumi.StringPtrOutput)
}

// Location of source app ex: West US or North Europe
func (o CloningInfoPtrOutput) SourceWebAppLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *string {
		if v == nil {
			return nil
		}
		return v.SourceWebAppLocation
	}).(pulumi.StringPtrOutput)
}

// ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource ID is of the form
// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
func (o CloningInfoPtrOutput) TrafficManagerProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *string {
		if v == nil {
			return nil
		}
		return v.TrafficManagerProfileId
	}).(pulumi.StringPtrOutput)
}

// Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does not already exist.
func (o CloningInfoPtrOutput) TrafficManagerProfileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *string {
		if v == nil {
			return nil
		}
		return v.TrafficManagerProfileName
	}).(pulumi.StringPtrOutput)
}

// Information needed for cloning operation.
type CloningInfoResponse struct {
	// Application setting overrides for cloned app. If specified, these settings override the settings cloned
	// from source app. Otherwise, application settings from source app are retained.
	AppSettingsOverrides map[string]string `pulumi:"appSettingsOverrides"`
	// <code>true</code> to clone custom hostnames from source app; otherwise, <code>false</code>.
	CloneCustomHostNames *bool `pulumi:"cloneCustomHostNames"`
	// <code>true</code> to clone source control from source app; otherwise, <code>false</code>.
	CloneSourceControl *bool `pulumi:"cloneSourceControl"`
	// <code>true</code> to configure load balancing for source and destination app.
	ConfigureLoadBalancing *bool `pulumi:"configureLoadBalancing"`
	// Correlation ID of cloning operation. This ID ties multiple cloning operations
	// together to use the same snapshot.
	CorrelationId *string `pulumi:"correlationId"`
	// App Service Environment.
	HostingEnvironment *string `pulumi:"hostingEnvironment"`
	// <code>true</code> to overwrite destination app; otherwise, <code>false</code>.
	Overwrite *bool `pulumi:"overwrite"`
	// ARM resource ID of the source app. App resource ID is of the form
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.
	SourceWebAppId string `pulumi:"sourceWebAppId"`
	// Location of source app ex: West US or North Europe
	SourceWebAppLocation *string `pulumi:"sourceWebAppLocation"`
	// ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource ID is of the form
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
	TrafficManagerProfileId *string `pulumi:"trafficManagerProfileId"`
	// Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does not already exist.
	TrafficManagerProfileName *string `pulumi:"trafficManagerProfileName"`
}

// CloningInfoResponseInput is an input type that accepts CloningInfoResponseArgs and CloningInfoResponseOutput values.
// You can construct a concrete instance of `CloningInfoResponseInput` via:
//
//          CloningInfoResponseArgs{...}
type CloningInfoResponseInput interface {
	pulumi.Input

	ToCloningInfoResponseOutput() CloningInfoResponseOutput
	ToCloningInfoResponseOutputWithContext(context.Context) CloningInfoResponseOutput
}

// Information needed for cloning operation.
type CloningInfoResponseArgs struct {
	// Application setting overrides for cloned app. If specified, these settings override the settings cloned
	// from source app. Otherwise, application settings from source app are retained.
	AppSettingsOverrides pulumi.StringMapInput `pulumi:"appSettingsOverrides"`
	// <code>true</code> to clone custom hostnames from source app; otherwise, <code>false</code>.
	CloneCustomHostNames pulumi.BoolPtrInput `pulumi:"cloneCustomHostNames"`
	// <code>true</code> to clone source control from source app; otherwise, <code>false</code>.
	CloneSourceControl pulumi.BoolPtrInput `pulumi:"cloneSourceControl"`
	// <code>true</code> to configure load balancing for source and destination app.
	ConfigureLoadBalancing pulumi.BoolPtrInput `pulumi:"configureLoadBalancing"`
	// Correlation ID of cloning operation. This ID ties multiple cloning operations
	// together to use the same snapshot.
	CorrelationId pulumi.StringPtrInput `pulumi:"correlationId"`
	// App Service Environment.
	HostingEnvironment pulumi.StringPtrInput `pulumi:"hostingEnvironment"`
	// <code>true</code> to overwrite destination app; otherwise, <code>false</code>.
	Overwrite pulumi.BoolPtrInput `pulumi:"overwrite"`
	// ARM resource ID of the source app. App resource ID is of the form
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.
	SourceWebAppId pulumi.StringInput `pulumi:"sourceWebAppId"`
	// Location of source app ex: West US or North Europe
	SourceWebAppLocation pulumi.StringPtrInput `pulumi:"sourceWebAppLocation"`
	// ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource ID is of the form
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
	TrafficManagerProfileId pulumi.StringPtrInput `pulumi:"trafficManagerProfileId"`
	// Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does not already exist.
	TrafficManagerProfileName pulumi.StringPtrInput `pulumi:"trafficManagerProfileName"`
}

func (CloningInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloningInfoResponse)(nil)).Elem()
}

func (i CloningInfoResponseArgs) ToCloningInfoResponseOutput() CloningInfoResponseOutput {
	return i.ToCloningInfoResponseOutputWithContext(context.Background())
}

func (i CloningInfoResponseArgs) ToCloningInfoResponseOutputWithContext(ctx context.Context) CloningInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloningInfoResponseOutput)
}

func (i CloningInfoResponseArgs) ToCloningInfoResponsePtrOutput() CloningInfoResponsePtrOutput {
	return i.ToCloningInfoResponsePtrOutputWithContext(context.Background())
}

func (i CloningInfoResponseArgs) ToCloningInfoResponsePtrOutputWithContext(ctx context.Context) CloningInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloningInfoResponseOutput).ToCloningInfoResponsePtrOutputWithContext(ctx)
}

// CloningInfoResponsePtrInput is an input type that accepts CloningInfoResponseArgs, CloningInfoResponsePtr and CloningInfoResponsePtrOutput values.
// You can construct a concrete instance of `CloningInfoResponsePtrInput` via:
//
//          CloningInfoResponseArgs{...}
//
//  or:
//
//          nil
type CloningInfoResponsePtrInput interface {
	pulumi.Input

	ToCloningInfoResponsePtrOutput() CloningInfoResponsePtrOutput
	ToCloningInfoResponsePtrOutputWithContext(context.Context) CloningInfoResponsePtrOutput
}

type cloningInfoResponsePtrType CloningInfoResponseArgs

func CloningInfoResponsePtr(v *CloningInfoResponseArgs) CloningInfoResponsePtrInput {
	return (*cloningInfoResponsePtrType)(v)
}

func (*cloningInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloningInfoResponse)(nil)).Elem()
}

func (i *cloningInfoResponsePtrType) ToCloningInfoResponsePtrOutput() CloningInfoResponsePtrOutput {
	return i.ToCloningInfoResponsePtrOutputWithContext(context.Background())
}

func (i *cloningInfoResponsePtrType) ToCloningInfoResponsePtrOutputWithContext(ctx context.Context) CloningInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloningInfoResponsePtrOutput)
}

// Information needed for cloning operation.
type CloningInfoResponseOutput struct{ *pulumi.OutputState }

func (CloningInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloningInfoResponse)(nil)).Elem()
}

func (o CloningInfoResponseOutput) ToCloningInfoResponseOutput() CloningInfoResponseOutput {
	return o
}

func (o CloningInfoResponseOutput) ToCloningInfoResponseOutputWithContext(ctx context.Context) CloningInfoResponseOutput {
	return o
}

func (o CloningInfoResponseOutput) ToCloningInfoResponsePtrOutput() CloningInfoResponsePtrOutput {
	return o.ToCloningInfoResponsePtrOutputWithContext(context.Background())
}

func (o CloningInfoResponseOutput) ToCloningInfoResponsePtrOutputWithContext(ctx context.Context) CloningInfoResponsePtrOutput {
	return o.ApplyT(func(v CloningInfoResponse) *CloningInfoResponse {
		return &v
	}).(CloningInfoResponsePtrOutput)
}

// Application setting overrides for cloned app. If specified, these settings override the settings cloned
// from source app. Otherwise, application settings from source app are retained.
func (o CloningInfoResponseOutput) AppSettingsOverrides() pulumi.StringMapOutput {
	return o.ApplyT(func(v CloningInfoResponse) map[string]string { return v.AppSettingsOverrides }).(pulumi.StringMapOutput)
}

// <code>true</code> to clone custom hostnames from source app; otherwise, <code>false</code>.
func (o CloningInfoResponseOutput) CloneCustomHostNames() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloningInfoResponse) *bool { return v.CloneCustomHostNames }).(pulumi.BoolPtrOutput)
}

// <code>true</code> to clone source control from source app; otherwise, <code>false</code>.
func (o CloningInfoResponseOutput) CloneSourceControl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloningInfoResponse) *bool { return v.CloneSourceControl }).(pulumi.BoolPtrOutput)
}

// <code>true</code> to configure load balancing for source and destination app.
func (o CloningInfoResponseOutput) ConfigureLoadBalancing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloningInfoResponse) *bool { return v.ConfigureLoadBalancing }).(pulumi.BoolPtrOutput)
}

// Correlation ID of cloning operation. This ID ties multiple cloning operations
// together to use the same snapshot.
func (o CloningInfoResponseOutput) CorrelationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfoResponse) *string { return v.CorrelationId }).(pulumi.StringPtrOutput)
}

// App Service Environment.
func (o CloningInfoResponseOutput) HostingEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfoResponse) *string { return v.HostingEnvironment }).(pulumi.StringPtrOutput)
}

// <code>true</code> to overwrite destination app; otherwise, <code>false</code>.
func (o CloningInfoResponseOutput) Overwrite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloningInfoResponse) *bool { return v.Overwrite }).(pulumi.BoolPtrOutput)
}

// ARM resource ID of the source app. App resource ID is of the form
// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and
// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.
func (o CloningInfoResponseOutput) SourceWebAppId() pulumi.StringOutput {
	return o.ApplyT(func(v CloningInfoResponse) string { return v.SourceWebAppId }).(pulumi.StringOutput)
}

// Location of source app ex: West US or North Europe
func (o CloningInfoResponseOutput) SourceWebAppLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfoResponse) *string { return v.SourceWebAppLocation }).(pulumi.StringPtrOutput)
}

// ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource ID is of the form
// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
func (o CloningInfoResponseOutput) TrafficManagerProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfoResponse) *string { return v.TrafficManagerProfileId }).(pulumi.StringPtrOutput)
}

// Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does not already exist.
func (o CloningInfoResponseOutput) TrafficManagerProfileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfoResponse) *string { return v.TrafficManagerProfileName }).(pulumi.StringPtrOutput)
}

type CloningInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (CloningInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloningInfoResponse)(nil)).Elem()
}

func (o CloningInfoResponsePtrOutput) ToCloningInfoResponsePtrOutput() CloningInfoResponsePtrOutput {
	return o
}

func (o CloningInfoResponsePtrOutput) ToCloningInfoResponsePtrOutputWithContext(ctx context.Context) CloningInfoResponsePtrOutput {
	return o
}

func (o CloningInfoResponsePtrOutput) Elem() CloningInfoResponseOutput {
	return o.ApplyT(func(v *CloningInfoResponse) CloningInfoResponse { return *v }).(CloningInfoResponseOutput)
}

// Application setting overrides for cloned app. If specified, these settings override the settings cloned
// from source app. Otherwise, application settings from source app are retained.
func (o CloningInfoResponsePtrOutput) AppSettingsOverrides() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CloningInfoResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.AppSettingsOverrides
	}).(pulumi.StringMapOutput)
}

// <code>true</code> to clone custom hostnames from source app; otherwise, <code>false</code>.
func (o CloningInfoResponsePtrOutput) CloneCustomHostNames() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloningInfoResponse) *bool {
		if v == nil {
			return nil
		}
		return v.CloneCustomHostNames
	}).(pulumi.BoolPtrOutput)
}

// <code>true</code> to clone source control from source app; otherwise, <code>false</code>.
func (o CloningInfoResponsePtrOutput) CloneSourceControl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloningInfoResponse) *bool {
		if v == nil {
			return nil
		}
		return v.CloneSourceControl
	}).(pulumi.BoolPtrOutput)
}

// <code>true</code> to configure load balancing for source and destination app.
func (o CloningInfoResponsePtrOutput) ConfigureLoadBalancing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloningInfoResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ConfigureLoadBalancing
	}).(pulumi.BoolPtrOutput)
}

// Correlation ID of cloning operation. This ID ties multiple cloning operations
// together to use the same snapshot.
func (o CloningInfoResponsePtrOutput) CorrelationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.CorrelationId
	}).(pulumi.StringPtrOutput)
}

// App Service Environment.
func (o CloningInfoResponsePtrOutput) HostingEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.HostingEnvironment
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> to overwrite destination app; otherwise, <code>false</code>.
func (o CloningInfoResponsePtrOutput) Overwrite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloningInfoResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Overwrite
	}).(pulumi.BoolPtrOutput)
}

// ARM resource ID of the source app. App resource ID is of the form
// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and
// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.
func (o CloningInfoResponsePtrOutput) SourceWebAppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SourceWebAppId
	}).(pulumi.StringPtrOutput)
}

// Location of source app ex: West US or North Europe
func (o CloningInfoResponsePtrOutput) SourceWebAppLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.SourceWebAppLocation
	}).(pulumi.StringPtrOutput)
}

// ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource ID is of the form
// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
func (o CloningInfoResponsePtrOutput) TrafficManagerProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.TrafficManagerProfileId
	}).(pulumi.StringPtrOutput)
}

// Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does not already exist.
func (o CloningInfoResponsePtrOutput) TrafficManagerProfileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.TrafficManagerProfileName
	}).(pulumi.StringPtrOutput)
}

// Database connection string information.
type ConnStringInfo struct {
	// Connection string value.
	ConnectionString *string `pulumi:"connectionString"`
	// Name of connection string.
	Name *string `pulumi:"name"`
	// Type of database.
	Type *string `pulumi:"type"`
}

// ConnStringInfoInput is an input type that accepts ConnStringInfoArgs and ConnStringInfoOutput values.
// You can construct a concrete instance of `ConnStringInfoInput` via:
//
//          ConnStringInfoArgs{...}
type ConnStringInfoInput interface {
	pulumi.Input

	ToConnStringInfoOutput() ConnStringInfoOutput
	ToConnStringInfoOutputWithContext(context.Context) ConnStringInfoOutput
}

// Database connection string information.
type ConnStringInfoArgs struct {
	// Connection string value.
	ConnectionString pulumi.StringPtrInput `pulumi:"connectionString"`
	// Name of connection string.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Type of database.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ConnStringInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnStringInfo)(nil)).Elem()
}

func (i ConnStringInfoArgs) ToConnStringInfoOutput() ConnStringInfoOutput {
	return i.ToConnStringInfoOutputWithContext(context.Background())
}

func (i ConnStringInfoArgs) ToConnStringInfoOutputWithContext(ctx context.Context) ConnStringInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnStringInfoOutput)
}

// ConnStringInfoArrayInput is an input type that accepts ConnStringInfoArray and ConnStringInfoArrayOutput values.
// You can construct a concrete instance of `ConnStringInfoArrayInput` via:
//
//          ConnStringInfoArray{ ConnStringInfoArgs{...} }
type ConnStringInfoArrayInput interface {
	pulumi.Input

	ToConnStringInfoArrayOutput() ConnStringInfoArrayOutput
	ToConnStringInfoArrayOutputWithContext(context.Context) ConnStringInfoArrayOutput
}

type ConnStringInfoArray []ConnStringInfoInput

func (ConnStringInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnStringInfo)(nil)).Elem()
}

func (i ConnStringInfoArray) ToConnStringInfoArrayOutput() ConnStringInfoArrayOutput {
	return i.ToConnStringInfoArrayOutputWithContext(context.Background())
}

func (i ConnStringInfoArray) ToConnStringInfoArrayOutputWithContext(ctx context.Context) ConnStringInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnStringInfoArrayOutput)
}

// Database connection string information.
type ConnStringInfoOutput struct{ *pulumi.OutputState }

func (ConnStringInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnStringInfo)(nil)).Elem()
}

func (o ConnStringInfoOutput) ToConnStringInfoOutput() ConnStringInfoOutput {
	return o
}

func (o ConnStringInfoOutput) ToConnStringInfoOutputWithContext(ctx context.Context) ConnStringInfoOutput {
	return o
}

// Connection string value.
func (o ConnStringInfoOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnStringInfo) *string { return v.ConnectionString }).(pulumi.StringPtrOutput)
}

// Name of connection string.
func (o ConnStringInfoOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnStringInfo) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Type of database.
func (o ConnStringInfoOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnStringInfo) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ConnStringInfoArrayOutput struct{ *pulumi.OutputState }

func (ConnStringInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnStringInfo)(nil)).Elem()
}

func (o ConnStringInfoArrayOutput) ToConnStringInfoArrayOutput() ConnStringInfoArrayOutput {
	return o
}

func (o ConnStringInfoArrayOutput) ToConnStringInfoArrayOutputWithContext(ctx context.Context) ConnStringInfoArrayOutput {
	return o
}

func (o ConnStringInfoArrayOutput) Index(i pulumi.IntInput) ConnStringInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnStringInfo {
		return vs[0].([]ConnStringInfo)[vs[1].(int)]
	}).(ConnStringInfoOutput)
}

// Database connection string information.
type ConnStringInfoResponse struct {
	// Connection string value.
	ConnectionString *string `pulumi:"connectionString"`
	// Name of connection string.
	Name *string `pulumi:"name"`
	// Type of database.
	Type *string `pulumi:"type"`
}

// ConnStringInfoResponseInput is an input type that accepts ConnStringInfoResponseArgs and ConnStringInfoResponseOutput values.
// You can construct a concrete instance of `ConnStringInfoResponseInput` via:
//
//          ConnStringInfoResponseArgs{...}
type ConnStringInfoResponseInput interface {
	pulumi.Input

	ToConnStringInfoResponseOutput() ConnStringInfoResponseOutput
	ToConnStringInfoResponseOutputWithContext(context.Context) ConnStringInfoResponseOutput
}

// Database connection string information.
type ConnStringInfoResponseArgs struct {
	// Connection string value.
	ConnectionString pulumi.StringPtrInput `pulumi:"connectionString"`
	// Name of connection string.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Type of database.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ConnStringInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnStringInfoResponse)(nil)).Elem()
}

func (i ConnStringInfoResponseArgs) ToConnStringInfoResponseOutput() ConnStringInfoResponseOutput {
	return i.ToConnStringInfoResponseOutputWithContext(context.Background())
}

func (i ConnStringInfoResponseArgs) ToConnStringInfoResponseOutputWithContext(ctx context.Context) ConnStringInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnStringInfoResponseOutput)
}

// ConnStringInfoResponseArrayInput is an input type that accepts ConnStringInfoResponseArray and ConnStringInfoResponseArrayOutput values.
// You can construct a concrete instance of `ConnStringInfoResponseArrayInput` via:
//
//          ConnStringInfoResponseArray{ ConnStringInfoResponseArgs{...} }
type ConnStringInfoResponseArrayInput interface {
	pulumi.Input

	ToConnStringInfoResponseArrayOutput() ConnStringInfoResponseArrayOutput
	ToConnStringInfoResponseArrayOutputWithContext(context.Context) ConnStringInfoResponseArrayOutput
}

type ConnStringInfoResponseArray []ConnStringInfoResponseInput

func (ConnStringInfoResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnStringInfoResponse)(nil)).Elem()
}

func (i ConnStringInfoResponseArray) ToConnStringInfoResponseArrayOutput() ConnStringInfoResponseArrayOutput {
	return i.ToConnStringInfoResponseArrayOutputWithContext(context.Background())
}

func (i ConnStringInfoResponseArray) ToConnStringInfoResponseArrayOutputWithContext(ctx context.Context) ConnStringInfoResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnStringInfoResponseArrayOutput)
}

// Database connection string information.
type ConnStringInfoResponseOutput struct{ *pulumi.OutputState }

func (ConnStringInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnStringInfoResponse)(nil)).Elem()
}

func (o ConnStringInfoResponseOutput) ToConnStringInfoResponseOutput() ConnStringInfoResponseOutput {
	return o
}

func (o ConnStringInfoResponseOutput) ToConnStringInfoResponseOutputWithContext(ctx context.Context) ConnStringInfoResponseOutput {
	return o
}

// Connection string value.
func (o ConnStringInfoResponseOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnStringInfoResponse) *string { return v.ConnectionString }).(pulumi.StringPtrOutput)
}

// Name of connection string.
func (o ConnStringInfoResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnStringInfoResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Type of database.
func (o ConnStringInfoResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnStringInfoResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ConnStringInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnStringInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnStringInfoResponse)(nil)).Elem()
}

func (o ConnStringInfoResponseArrayOutput) ToConnStringInfoResponseArrayOutput() ConnStringInfoResponseArrayOutput {
	return o
}

func (o ConnStringInfoResponseArrayOutput) ToConnStringInfoResponseArrayOutputWithContext(ctx context.Context) ConnStringInfoResponseArrayOutput {
	return o
}

func (o ConnStringInfoResponseArrayOutput) Index(i pulumi.IntInput) ConnStringInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnStringInfoResponse {
		return vs[0].([]ConnStringInfoResponse)[vs[1].(int)]
	}).(ConnStringInfoResponseOutput)
}

// Database connection string value to type pair.
type ConnStringValueTypePairResponse struct {
	// Type of database.
	Type string `pulumi:"type"`
	// Value of pair.
	Value string `pulumi:"value"`
}

// ConnStringValueTypePairResponseInput is an input type that accepts ConnStringValueTypePairResponseArgs and ConnStringValueTypePairResponseOutput values.
// You can construct a concrete instance of `ConnStringValueTypePairResponseInput` via:
//
//          ConnStringValueTypePairResponseArgs{...}
type ConnStringValueTypePairResponseInput interface {
	pulumi.Input

	ToConnStringValueTypePairResponseOutput() ConnStringValueTypePairResponseOutput
	ToConnStringValueTypePairResponseOutputWithContext(context.Context) ConnStringValueTypePairResponseOutput
}

// Database connection string value to type pair.
type ConnStringValueTypePairResponseArgs struct {
	// Type of database.
	Type pulumi.StringInput `pulumi:"type"`
	// Value of pair.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ConnStringValueTypePairResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnStringValueTypePairResponse)(nil)).Elem()
}

func (i ConnStringValueTypePairResponseArgs) ToConnStringValueTypePairResponseOutput() ConnStringValueTypePairResponseOutput {
	return i.ToConnStringValueTypePairResponseOutputWithContext(context.Background())
}

func (i ConnStringValueTypePairResponseArgs) ToConnStringValueTypePairResponseOutputWithContext(ctx context.Context) ConnStringValueTypePairResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnStringValueTypePairResponseOutput)
}

// ConnStringValueTypePairResponseMapInput is an input type that accepts ConnStringValueTypePairResponseMap and ConnStringValueTypePairResponseMapOutput values.
// You can construct a concrete instance of `ConnStringValueTypePairResponseMapInput` via:
//
//          ConnStringValueTypePairResponseMap{ "key": ConnStringValueTypePairResponseArgs{...} }
type ConnStringValueTypePairResponseMapInput interface {
	pulumi.Input

	ToConnStringValueTypePairResponseMapOutput() ConnStringValueTypePairResponseMapOutput
	ToConnStringValueTypePairResponseMapOutputWithContext(context.Context) ConnStringValueTypePairResponseMapOutput
}

type ConnStringValueTypePairResponseMap map[string]ConnStringValueTypePairResponseInput

func (ConnStringValueTypePairResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ConnStringValueTypePairResponse)(nil)).Elem()
}

func (i ConnStringValueTypePairResponseMap) ToConnStringValueTypePairResponseMapOutput() ConnStringValueTypePairResponseMapOutput {
	return i.ToConnStringValueTypePairResponseMapOutputWithContext(context.Background())
}

func (i ConnStringValueTypePairResponseMap) ToConnStringValueTypePairResponseMapOutputWithContext(ctx context.Context) ConnStringValueTypePairResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnStringValueTypePairResponseMapOutput)
}

// Database connection string value to type pair.
type ConnStringValueTypePairResponseOutput struct{ *pulumi.OutputState }

func (ConnStringValueTypePairResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnStringValueTypePairResponse)(nil)).Elem()
}

func (o ConnStringValueTypePairResponseOutput) ToConnStringValueTypePairResponseOutput() ConnStringValueTypePairResponseOutput {
	return o
}

func (o ConnStringValueTypePairResponseOutput) ToConnStringValueTypePairResponseOutputWithContext(ctx context.Context) ConnStringValueTypePairResponseOutput {
	return o
}

// Type of database.
func (o ConnStringValueTypePairResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ConnStringValueTypePairResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Value of pair.
func (o ConnStringValueTypePairResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ConnStringValueTypePairResponse) string { return v.Value }).(pulumi.StringOutput)
}

type ConnStringValueTypePairResponseMapOutput struct{ *pulumi.OutputState }

func (ConnStringValueTypePairResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ConnStringValueTypePairResponse)(nil)).Elem()
}

func (o ConnStringValueTypePairResponseMapOutput) ToConnStringValueTypePairResponseMapOutput() ConnStringValueTypePairResponseMapOutput {
	return o
}

func (o ConnStringValueTypePairResponseMapOutput) ToConnStringValueTypePairResponseMapOutputWithContext(ctx context.Context) ConnStringValueTypePairResponseMapOutput {
	return o
}

func (o ConnStringValueTypePairResponseMapOutput) MapIndex(k pulumi.StringInput) ConnStringValueTypePairResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ConnStringValueTypePairResponse {
		return vs[0].(map[string]ConnStringValueTypePairResponse)[vs[1].(string)]
	}).(ConnStringValueTypePairResponseOutput)
}

// Cross-Origin Resource Sharing (CORS) settings for the app.
type CorsSettings struct {
	// Gets or sets the list of origins that should be allowed to make cross-origin
	// calls (for example: http://example.com:12345). Use "*" to allow all.
	AllowedOrigins []string `pulumi:"allowedOrigins"`
	// Gets or sets whether CORS requests with credentials are allowed. See
	// https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials
	// for more details.
	SupportCredentials *bool `pulumi:"supportCredentials"`
}

// CorsSettingsInput is an input type that accepts CorsSettingsArgs and CorsSettingsOutput values.
// You can construct a concrete instance of `CorsSettingsInput` via:
//
//          CorsSettingsArgs{...}
type CorsSettingsInput interface {
	pulumi.Input

	ToCorsSettingsOutput() CorsSettingsOutput
	ToCorsSettingsOutputWithContext(context.Context) CorsSettingsOutput
}

// Cross-Origin Resource Sharing (CORS) settings for the app.
type CorsSettingsArgs struct {
	// Gets or sets the list of origins that should be allowed to make cross-origin
	// calls (for example: http://example.com:12345). Use "*" to allow all.
	AllowedOrigins pulumi.StringArrayInput `pulumi:"allowedOrigins"`
	// Gets or sets whether CORS requests with credentials are allowed. See
	// https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials
	// for more details.
	SupportCredentials pulumi.BoolPtrInput `pulumi:"supportCredentials"`
}

func (CorsSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsSettings)(nil)).Elem()
}

func (i CorsSettingsArgs) ToCorsSettingsOutput() CorsSettingsOutput {
	return i.ToCorsSettingsOutputWithContext(context.Background())
}

func (i CorsSettingsArgs) ToCorsSettingsOutputWithContext(ctx context.Context) CorsSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsSettingsOutput)
}

func (i CorsSettingsArgs) ToCorsSettingsPtrOutput() CorsSettingsPtrOutput {
	return i.ToCorsSettingsPtrOutputWithContext(context.Background())
}

func (i CorsSettingsArgs) ToCorsSettingsPtrOutputWithContext(ctx context.Context) CorsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsSettingsOutput).ToCorsSettingsPtrOutputWithContext(ctx)
}

// CorsSettingsPtrInput is an input type that accepts CorsSettingsArgs, CorsSettingsPtr and CorsSettingsPtrOutput values.
// You can construct a concrete instance of `CorsSettingsPtrInput` via:
//
//          CorsSettingsArgs{...}
//
//  or:
//
//          nil
type CorsSettingsPtrInput interface {
	pulumi.Input

	ToCorsSettingsPtrOutput() CorsSettingsPtrOutput
	ToCorsSettingsPtrOutputWithContext(context.Context) CorsSettingsPtrOutput
}

type corsSettingsPtrType CorsSettingsArgs

func CorsSettingsPtr(v *CorsSettingsArgs) CorsSettingsPtrInput {
	return (*corsSettingsPtrType)(v)
}

func (*corsSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CorsSettings)(nil)).Elem()
}

func (i *corsSettingsPtrType) ToCorsSettingsPtrOutput() CorsSettingsPtrOutput {
	return i.ToCorsSettingsPtrOutputWithContext(context.Background())
}

func (i *corsSettingsPtrType) ToCorsSettingsPtrOutputWithContext(ctx context.Context) CorsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsSettingsPtrOutput)
}

// Cross-Origin Resource Sharing (CORS) settings for the app.
type CorsSettingsOutput struct{ *pulumi.OutputState }

func (CorsSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsSettings)(nil)).Elem()
}

func (o CorsSettingsOutput) ToCorsSettingsOutput() CorsSettingsOutput {
	return o
}

func (o CorsSettingsOutput) ToCorsSettingsOutputWithContext(ctx context.Context) CorsSettingsOutput {
	return o
}

func (o CorsSettingsOutput) ToCorsSettingsPtrOutput() CorsSettingsPtrOutput {
	return o.ToCorsSettingsPtrOutputWithContext(context.Background())
}

func (o CorsSettingsOutput) ToCorsSettingsPtrOutputWithContext(ctx context.Context) CorsSettingsPtrOutput {
	return o.ApplyT(func(v CorsSettings) *CorsSettings {
		return &v
	}).(CorsSettingsPtrOutput)
}

// Gets or sets the list of origins that should be allowed to make cross-origin
// calls (for example: http://example.com:12345). Use "*" to allow all.
func (o CorsSettingsOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CorsSettings) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

// Gets or sets whether CORS requests with credentials are allowed. See
// https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials
// for more details.
func (o CorsSettingsOutput) SupportCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CorsSettings) *bool { return v.SupportCredentials }).(pulumi.BoolPtrOutput)
}

type CorsSettingsPtrOutput struct{ *pulumi.OutputState }

func (CorsSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CorsSettings)(nil)).Elem()
}

func (o CorsSettingsPtrOutput) ToCorsSettingsPtrOutput() CorsSettingsPtrOutput {
	return o
}

func (o CorsSettingsPtrOutput) ToCorsSettingsPtrOutputWithContext(ctx context.Context) CorsSettingsPtrOutput {
	return o
}

func (o CorsSettingsPtrOutput) Elem() CorsSettingsOutput {
	return o.ApplyT(func(v *CorsSettings) CorsSettings { return *v }).(CorsSettingsOutput)
}

// Gets or sets the list of origins that should be allowed to make cross-origin
// calls (for example: http://example.com:12345). Use "*" to allow all.
func (o CorsSettingsPtrOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CorsSettings) []string {
		if v == nil {
			return nil
		}
		return v.AllowedOrigins
	}).(pulumi.StringArrayOutput)
}

// Gets or sets whether CORS requests with credentials are allowed. See
// https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials
// for more details.
func (o CorsSettingsPtrOutput) SupportCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CorsSettings) *bool {
		if v == nil {
			return nil
		}
		return v.SupportCredentials
	}).(pulumi.BoolPtrOutput)
}

// Cross-Origin Resource Sharing (CORS) settings for the app.
type CorsSettingsResponse struct {
	// Gets or sets the list of origins that should be allowed to make cross-origin
	// calls (for example: http://example.com:12345). Use "*" to allow all.
	AllowedOrigins []string `pulumi:"allowedOrigins"`
	// Gets or sets whether CORS requests with credentials are allowed. See
	// https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials
	// for more details.
	SupportCredentials *bool `pulumi:"supportCredentials"`
}

// CorsSettingsResponseInput is an input type that accepts CorsSettingsResponseArgs and CorsSettingsResponseOutput values.
// You can construct a concrete instance of `CorsSettingsResponseInput` via:
//
//          CorsSettingsResponseArgs{...}
type CorsSettingsResponseInput interface {
	pulumi.Input

	ToCorsSettingsResponseOutput() CorsSettingsResponseOutput
	ToCorsSettingsResponseOutputWithContext(context.Context) CorsSettingsResponseOutput
}

// Cross-Origin Resource Sharing (CORS) settings for the app.
type CorsSettingsResponseArgs struct {
	// Gets or sets the list of origins that should be allowed to make cross-origin
	// calls (for example: http://example.com:12345). Use "*" to allow all.
	AllowedOrigins pulumi.StringArrayInput `pulumi:"allowedOrigins"`
	// Gets or sets whether CORS requests with credentials are allowed. See
	// https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials
	// for more details.
	SupportCredentials pulumi.BoolPtrInput `pulumi:"supportCredentials"`
}

func (CorsSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsSettingsResponse)(nil)).Elem()
}

func (i CorsSettingsResponseArgs) ToCorsSettingsResponseOutput() CorsSettingsResponseOutput {
	return i.ToCorsSettingsResponseOutputWithContext(context.Background())
}

func (i CorsSettingsResponseArgs) ToCorsSettingsResponseOutputWithContext(ctx context.Context) CorsSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsSettingsResponseOutput)
}

func (i CorsSettingsResponseArgs) ToCorsSettingsResponsePtrOutput() CorsSettingsResponsePtrOutput {
	return i.ToCorsSettingsResponsePtrOutputWithContext(context.Background())
}

func (i CorsSettingsResponseArgs) ToCorsSettingsResponsePtrOutputWithContext(ctx context.Context) CorsSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsSettingsResponseOutput).ToCorsSettingsResponsePtrOutputWithContext(ctx)
}

// CorsSettingsResponsePtrInput is an input type that accepts CorsSettingsResponseArgs, CorsSettingsResponsePtr and CorsSettingsResponsePtrOutput values.
// You can construct a concrete instance of `CorsSettingsResponsePtrInput` via:
//
//          CorsSettingsResponseArgs{...}
//
//  or:
//
//          nil
type CorsSettingsResponsePtrInput interface {
	pulumi.Input

	ToCorsSettingsResponsePtrOutput() CorsSettingsResponsePtrOutput
	ToCorsSettingsResponsePtrOutputWithContext(context.Context) CorsSettingsResponsePtrOutput
}

type corsSettingsResponsePtrType CorsSettingsResponseArgs

func CorsSettingsResponsePtr(v *CorsSettingsResponseArgs) CorsSettingsResponsePtrInput {
	return (*corsSettingsResponsePtrType)(v)
}

func (*corsSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CorsSettingsResponse)(nil)).Elem()
}

func (i *corsSettingsResponsePtrType) ToCorsSettingsResponsePtrOutput() CorsSettingsResponsePtrOutput {
	return i.ToCorsSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *corsSettingsResponsePtrType) ToCorsSettingsResponsePtrOutputWithContext(ctx context.Context) CorsSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsSettingsResponsePtrOutput)
}

// Cross-Origin Resource Sharing (CORS) settings for the app.
type CorsSettingsResponseOutput struct{ *pulumi.OutputState }

func (CorsSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsSettingsResponse)(nil)).Elem()
}

func (o CorsSettingsResponseOutput) ToCorsSettingsResponseOutput() CorsSettingsResponseOutput {
	return o
}

func (o CorsSettingsResponseOutput) ToCorsSettingsResponseOutputWithContext(ctx context.Context) CorsSettingsResponseOutput {
	return o
}

func (o CorsSettingsResponseOutput) ToCorsSettingsResponsePtrOutput() CorsSettingsResponsePtrOutput {
	return o.ToCorsSettingsResponsePtrOutputWithContext(context.Background())
}

func (o CorsSettingsResponseOutput) ToCorsSettingsResponsePtrOutputWithContext(ctx context.Context) CorsSettingsResponsePtrOutput {
	return o.ApplyT(func(v CorsSettingsResponse) *CorsSettingsResponse {
		return &v
	}).(CorsSettingsResponsePtrOutput)
}

// Gets or sets the list of origins that should be allowed to make cross-origin
// calls (for example: http://example.com:12345). Use "*" to allow all.
func (o CorsSettingsResponseOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CorsSettingsResponse) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

// Gets or sets whether CORS requests with credentials are allowed. See
// https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials
// for more details.
func (o CorsSettingsResponseOutput) SupportCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CorsSettingsResponse) *bool { return v.SupportCredentials }).(pulumi.BoolPtrOutput)
}

type CorsSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (CorsSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CorsSettingsResponse)(nil)).Elem()
}

func (o CorsSettingsResponsePtrOutput) ToCorsSettingsResponsePtrOutput() CorsSettingsResponsePtrOutput {
	return o
}

func (o CorsSettingsResponsePtrOutput) ToCorsSettingsResponsePtrOutputWithContext(ctx context.Context) CorsSettingsResponsePtrOutput {
	return o
}

func (o CorsSettingsResponsePtrOutput) Elem() CorsSettingsResponseOutput {
	return o.ApplyT(func(v *CorsSettingsResponse) CorsSettingsResponse { return *v }).(CorsSettingsResponseOutput)
}

// Gets or sets the list of origins that should be allowed to make cross-origin
// calls (for example: http://example.com:12345). Use "*" to allow all.
func (o CorsSettingsResponsePtrOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CorsSettingsResponse) []string {
		if v == nil {
			return nil
		}
		return v.AllowedOrigins
	}).(pulumi.StringArrayOutput)
}

// Gets or sets whether CORS requests with credentials are allowed. See
// https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials
// for more details.
func (o CorsSettingsResponsePtrOutput) SupportCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CorsSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.SupportCredentials
	}).(pulumi.BoolPtrOutput)
}

// Database backup settings.
type DatabaseBackupSetting struct {
	// Contains a connection string to a database which is being backed up or restored. If the restore should happen to a new database, the database name inside is the new one.
	ConnectionString *string `pulumi:"connectionString"`
	// Contains a connection string name that is linked to the SiteConfig.ConnectionStrings.
	// This is used during restore with overwrite connection strings options.
	ConnectionStringName *string `pulumi:"connectionStringName"`
	// Database type (e.g. SqlAzure / MySql).
	DatabaseType string  `pulumi:"databaseType"`
	Name         *string `pulumi:"name"`
}

// DatabaseBackupSettingInput is an input type that accepts DatabaseBackupSettingArgs and DatabaseBackupSettingOutput values.
// You can construct a concrete instance of `DatabaseBackupSettingInput` via:
//
//          DatabaseBackupSettingArgs{...}
type DatabaseBackupSettingInput interface {
	pulumi.Input

	ToDatabaseBackupSettingOutput() DatabaseBackupSettingOutput
	ToDatabaseBackupSettingOutputWithContext(context.Context) DatabaseBackupSettingOutput
}

// Database backup settings.
type DatabaseBackupSettingArgs struct {
	// Contains a connection string to a database which is being backed up or restored. If the restore should happen to a new database, the database name inside is the new one.
	ConnectionString pulumi.StringPtrInput `pulumi:"connectionString"`
	// Contains a connection string name that is linked to the SiteConfig.ConnectionStrings.
	// This is used during restore with overwrite connection strings options.
	ConnectionStringName pulumi.StringPtrInput `pulumi:"connectionStringName"`
	// Database type (e.g. SqlAzure / MySql).
	DatabaseType pulumi.StringInput    `pulumi:"databaseType"`
	Name         pulumi.StringPtrInput `pulumi:"name"`
}

func (DatabaseBackupSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseBackupSetting)(nil)).Elem()
}

func (i DatabaseBackupSettingArgs) ToDatabaseBackupSettingOutput() DatabaseBackupSettingOutput {
	return i.ToDatabaseBackupSettingOutputWithContext(context.Background())
}

func (i DatabaseBackupSettingArgs) ToDatabaseBackupSettingOutputWithContext(ctx context.Context) DatabaseBackupSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseBackupSettingOutput)
}

// DatabaseBackupSettingArrayInput is an input type that accepts DatabaseBackupSettingArray and DatabaseBackupSettingArrayOutput values.
// You can construct a concrete instance of `DatabaseBackupSettingArrayInput` via:
//
//          DatabaseBackupSettingArray{ DatabaseBackupSettingArgs{...} }
type DatabaseBackupSettingArrayInput interface {
	pulumi.Input

	ToDatabaseBackupSettingArrayOutput() DatabaseBackupSettingArrayOutput
	ToDatabaseBackupSettingArrayOutputWithContext(context.Context) DatabaseBackupSettingArrayOutput
}

type DatabaseBackupSettingArray []DatabaseBackupSettingInput

func (DatabaseBackupSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseBackupSetting)(nil)).Elem()
}

func (i DatabaseBackupSettingArray) ToDatabaseBackupSettingArrayOutput() DatabaseBackupSettingArrayOutput {
	return i.ToDatabaseBackupSettingArrayOutputWithContext(context.Background())
}

func (i DatabaseBackupSettingArray) ToDatabaseBackupSettingArrayOutputWithContext(ctx context.Context) DatabaseBackupSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseBackupSettingArrayOutput)
}

// Database backup settings.
type DatabaseBackupSettingOutput struct{ *pulumi.OutputState }

func (DatabaseBackupSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseBackupSetting)(nil)).Elem()
}

func (o DatabaseBackupSettingOutput) ToDatabaseBackupSettingOutput() DatabaseBackupSettingOutput {
	return o
}

func (o DatabaseBackupSettingOutput) ToDatabaseBackupSettingOutputWithContext(ctx context.Context) DatabaseBackupSettingOutput {
	return o
}

// Contains a connection string to a database which is being backed up or restored. If the restore should happen to a new database, the database name inside is the new one.
func (o DatabaseBackupSettingOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupSetting) *string { return v.ConnectionString }).(pulumi.StringPtrOutput)
}

// Contains a connection string name that is linked to the SiteConfig.ConnectionStrings.
// This is used during restore with overwrite connection strings options.
func (o DatabaseBackupSettingOutput) ConnectionStringName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupSetting) *string { return v.ConnectionStringName }).(pulumi.StringPtrOutput)
}

// Database type (e.g. SqlAzure / MySql).
func (o DatabaseBackupSettingOutput) DatabaseType() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseBackupSetting) string { return v.DatabaseType }).(pulumi.StringOutput)
}

func (o DatabaseBackupSettingOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupSetting) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type DatabaseBackupSettingArrayOutput struct{ *pulumi.OutputState }

func (DatabaseBackupSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseBackupSetting)(nil)).Elem()
}

func (o DatabaseBackupSettingArrayOutput) ToDatabaseBackupSettingArrayOutput() DatabaseBackupSettingArrayOutput {
	return o
}

func (o DatabaseBackupSettingArrayOutput) ToDatabaseBackupSettingArrayOutputWithContext(ctx context.Context) DatabaseBackupSettingArrayOutput {
	return o
}

func (o DatabaseBackupSettingArrayOutput) Index(i pulumi.IntInput) DatabaseBackupSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseBackupSetting {
		return vs[0].([]DatabaseBackupSetting)[vs[1].(int)]
	}).(DatabaseBackupSettingOutput)
}

// Database backup settings.
type DatabaseBackupSettingResponse struct {
	// Contains a connection string to a database which is being backed up or restored. If the restore should happen to a new database, the database name inside is the new one.
	ConnectionString *string `pulumi:"connectionString"`
	// Contains a connection string name that is linked to the SiteConfig.ConnectionStrings.
	// This is used during restore with overwrite connection strings options.
	ConnectionStringName *string `pulumi:"connectionStringName"`
	// Database type (e.g. SqlAzure / MySql).
	DatabaseType string  `pulumi:"databaseType"`
	Name         *string `pulumi:"name"`
}

// DatabaseBackupSettingResponseInput is an input type that accepts DatabaseBackupSettingResponseArgs and DatabaseBackupSettingResponseOutput values.
// You can construct a concrete instance of `DatabaseBackupSettingResponseInput` via:
//
//          DatabaseBackupSettingResponseArgs{...}
type DatabaseBackupSettingResponseInput interface {
	pulumi.Input

	ToDatabaseBackupSettingResponseOutput() DatabaseBackupSettingResponseOutput
	ToDatabaseBackupSettingResponseOutputWithContext(context.Context) DatabaseBackupSettingResponseOutput
}

// Database backup settings.
type DatabaseBackupSettingResponseArgs struct {
	// Contains a connection string to a database which is being backed up or restored. If the restore should happen to a new database, the database name inside is the new one.
	ConnectionString pulumi.StringPtrInput `pulumi:"connectionString"`
	// Contains a connection string name that is linked to the SiteConfig.ConnectionStrings.
	// This is used during restore with overwrite connection strings options.
	ConnectionStringName pulumi.StringPtrInput `pulumi:"connectionStringName"`
	// Database type (e.g. SqlAzure / MySql).
	DatabaseType pulumi.StringInput    `pulumi:"databaseType"`
	Name         pulumi.StringPtrInput `pulumi:"name"`
}

func (DatabaseBackupSettingResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseBackupSettingResponse)(nil)).Elem()
}

func (i DatabaseBackupSettingResponseArgs) ToDatabaseBackupSettingResponseOutput() DatabaseBackupSettingResponseOutput {
	return i.ToDatabaseBackupSettingResponseOutputWithContext(context.Background())
}

func (i DatabaseBackupSettingResponseArgs) ToDatabaseBackupSettingResponseOutputWithContext(ctx context.Context) DatabaseBackupSettingResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseBackupSettingResponseOutput)
}

// DatabaseBackupSettingResponseArrayInput is an input type that accepts DatabaseBackupSettingResponseArray and DatabaseBackupSettingResponseArrayOutput values.
// You can construct a concrete instance of `DatabaseBackupSettingResponseArrayInput` via:
//
//          DatabaseBackupSettingResponseArray{ DatabaseBackupSettingResponseArgs{...} }
type DatabaseBackupSettingResponseArrayInput interface {
	pulumi.Input

	ToDatabaseBackupSettingResponseArrayOutput() DatabaseBackupSettingResponseArrayOutput
	ToDatabaseBackupSettingResponseArrayOutputWithContext(context.Context) DatabaseBackupSettingResponseArrayOutput
}

type DatabaseBackupSettingResponseArray []DatabaseBackupSettingResponseInput

func (DatabaseBackupSettingResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseBackupSettingResponse)(nil)).Elem()
}

func (i DatabaseBackupSettingResponseArray) ToDatabaseBackupSettingResponseArrayOutput() DatabaseBackupSettingResponseArrayOutput {
	return i.ToDatabaseBackupSettingResponseArrayOutputWithContext(context.Background())
}

func (i DatabaseBackupSettingResponseArray) ToDatabaseBackupSettingResponseArrayOutputWithContext(ctx context.Context) DatabaseBackupSettingResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseBackupSettingResponseArrayOutput)
}

// Database backup settings.
type DatabaseBackupSettingResponseOutput struct{ *pulumi.OutputState }

func (DatabaseBackupSettingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseBackupSettingResponse)(nil)).Elem()
}

func (o DatabaseBackupSettingResponseOutput) ToDatabaseBackupSettingResponseOutput() DatabaseBackupSettingResponseOutput {
	return o
}

func (o DatabaseBackupSettingResponseOutput) ToDatabaseBackupSettingResponseOutputWithContext(ctx context.Context) DatabaseBackupSettingResponseOutput {
	return o
}

// Contains a connection string to a database which is being backed up or restored. If the restore should happen to a new database, the database name inside is the new one.
func (o DatabaseBackupSettingResponseOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupSettingResponse) *string { return v.ConnectionString }).(pulumi.StringPtrOutput)
}

// Contains a connection string name that is linked to the SiteConfig.ConnectionStrings.
// This is used during restore with overwrite connection strings options.
func (o DatabaseBackupSettingResponseOutput) ConnectionStringName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupSettingResponse) *string { return v.ConnectionStringName }).(pulumi.StringPtrOutput)
}

// Database type (e.g. SqlAzure / MySql).
func (o DatabaseBackupSettingResponseOutput) DatabaseType() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseBackupSettingResponse) string { return v.DatabaseType }).(pulumi.StringOutput)
}

func (o DatabaseBackupSettingResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupSettingResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type DatabaseBackupSettingResponseArrayOutput struct{ *pulumi.OutputState }

func (DatabaseBackupSettingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseBackupSettingResponse)(nil)).Elem()
}

func (o DatabaseBackupSettingResponseArrayOutput) ToDatabaseBackupSettingResponseArrayOutput() DatabaseBackupSettingResponseArrayOutput {
	return o
}

func (o DatabaseBackupSettingResponseArrayOutput) ToDatabaseBackupSettingResponseArrayOutputWithContext(ctx context.Context) DatabaseBackupSettingResponseArrayOutput {
	return o
}

func (o DatabaseBackupSettingResponseArrayOutput) Index(i pulumi.IntInput) DatabaseBackupSettingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseBackupSettingResponse {
		return vs[0].([]DatabaseBackupSettingResponse)[vs[1].(int)]
	}).(DatabaseBackupSettingResponseOutput)
}

// Deployment resource specific properties
type DeploymentResponseProperties struct {
	// True if deployment is currently active, false if completed and null if not started.
	Active *bool `pulumi:"active"`
	// Who authored the deployment.
	Author *string `pulumi:"author"`
	// Author email.
	Author_email *string `pulumi:"author_email"`
	// Who performed the deployment.
	Deployer *string `pulumi:"deployer"`
	// Details on deployment.
	Details *string `pulumi:"details"`
	// End time.
	End_time *string `pulumi:"end_time"`
	// Details about deployment status.
	Message *string `pulumi:"message"`
	// Start time.
	Start_time *string `pulumi:"start_time"`
	// Deployment status.
	Status *int `pulumi:"status"`
}

// DeploymentResponsePropertiesInput is an input type that accepts DeploymentResponsePropertiesArgs and DeploymentResponsePropertiesOutput values.
// You can construct a concrete instance of `DeploymentResponsePropertiesInput` via:
//
//          DeploymentResponsePropertiesArgs{...}
type DeploymentResponsePropertiesInput interface {
	pulumi.Input

	ToDeploymentResponsePropertiesOutput() DeploymentResponsePropertiesOutput
	ToDeploymentResponsePropertiesOutputWithContext(context.Context) DeploymentResponsePropertiesOutput
}

// Deployment resource specific properties
type DeploymentResponsePropertiesArgs struct {
	// True if deployment is currently active, false if completed and null if not started.
	Active pulumi.BoolPtrInput `pulumi:"active"`
	// Who authored the deployment.
	Author pulumi.StringPtrInput `pulumi:"author"`
	// Author email.
	Author_email pulumi.StringPtrInput `pulumi:"author_email"`
	// Who performed the deployment.
	Deployer pulumi.StringPtrInput `pulumi:"deployer"`
	// Details on deployment.
	Details pulumi.StringPtrInput `pulumi:"details"`
	// End time.
	End_time pulumi.StringPtrInput `pulumi:"end_time"`
	// Details about deployment status.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Start time.
	Start_time pulumi.StringPtrInput `pulumi:"start_time"`
	// Deployment status.
	Status pulumi.IntPtrInput `pulumi:"status"`
}

func (DeploymentResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentResponseProperties)(nil)).Elem()
}

func (i DeploymentResponsePropertiesArgs) ToDeploymentResponsePropertiesOutput() DeploymentResponsePropertiesOutput {
	return i.ToDeploymentResponsePropertiesOutputWithContext(context.Background())
}

func (i DeploymentResponsePropertiesArgs) ToDeploymentResponsePropertiesOutputWithContext(ctx context.Context) DeploymentResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentResponsePropertiesOutput)
}

func (i DeploymentResponsePropertiesArgs) ToDeploymentResponsePropertiesPtrOutput() DeploymentResponsePropertiesPtrOutput {
	return i.ToDeploymentResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i DeploymentResponsePropertiesArgs) ToDeploymentResponsePropertiesPtrOutputWithContext(ctx context.Context) DeploymentResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentResponsePropertiesOutput).ToDeploymentResponsePropertiesPtrOutputWithContext(ctx)
}

// DeploymentResponsePropertiesPtrInput is an input type that accepts DeploymentResponsePropertiesArgs, DeploymentResponsePropertiesPtr and DeploymentResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `DeploymentResponsePropertiesPtrInput` via:
//
//          DeploymentResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type DeploymentResponsePropertiesPtrInput interface {
	pulumi.Input

	ToDeploymentResponsePropertiesPtrOutput() DeploymentResponsePropertiesPtrOutput
	ToDeploymentResponsePropertiesPtrOutputWithContext(context.Context) DeploymentResponsePropertiesPtrOutput
}

type deploymentResponsePropertiesPtrType DeploymentResponsePropertiesArgs

func DeploymentResponsePropertiesPtr(v *DeploymentResponsePropertiesArgs) DeploymentResponsePropertiesPtrInput {
	return (*deploymentResponsePropertiesPtrType)(v)
}

func (*deploymentResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentResponseProperties)(nil)).Elem()
}

func (i *deploymentResponsePropertiesPtrType) ToDeploymentResponsePropertiesPtrOutput() DeploymentResponsePropertiesPtrOutput {
	return i.ToDeploymentResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *deploymentResponsePropertiesPtrType) ToDeploymentResponsePropertiesPtrOutputWithContext(ctx context.Context) DeploymentResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentResponsePropertiesPtrOutput)
}

// Deployment resource specific properties
type DeploymentResponsePropertiesOutput struct{ *pulumi.OutputState }

func (DeploymentResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentResponseProperties)(nil)).Elem()
}

func (o DeploymentResponsePropertiesOutput) ToDeploymentResponsePropertiesOutput() DeploymentResponsePropertiesOutput {
	return o
}

func (o DeploymentResponsePropertiesOutput) ToDeploymentResponsePropertiesOutputWithContext(ctx context.Context) DeploymentResponsePropertiesOutput {
	return o
}

func (o DeploymentResponsePropertiesOutput) ToDeploymentResponsePropertiesPtrOutput() DeploymentResponsePropertiesPtrOutput {
	return o.ToDeploymentResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o DeploymentResponsePropertiesOutput) ToDeploymentResponsePropertiesPtrOutputWithContext(ctx context.Context) DeploymentResponsePropertiesPtrOutput {
	return o.ApplyT(func(v DeploymentResponseProperties) *DeploymentResponseProperties {
		return &v
	}).(DeploymentResponsePropertiesPtrOutput)
}

// True if deployment is currently active, false if completed and null if not started.
func (o DeploymentResponsePropertiesOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentResponseProperties) *bool { return v.Active }).(pulumi.BoolPtrOutput)
}

// Who authored the deployment.
func (o DeploymentResponsePropertiesOutput) Author() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentResponseProperties) *string { return v.Author }).(pulumi.StringPtrOutput)
}

// Author email.
func (o DeploymentResponsePropertiesOutput) Author_email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentResponseProperties) *string { return v.Author_email }).(pulumi.StringPtrOutput)
}

// Who performed the deployment.
func (o DeploymentResponsePropertiesOutput) Deployer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentResponseProperties) *string { return v.Deployer }).(pulumi.StringPtrOutput)
}

// Details on deployment.
func (o DeploymentResponsePropertiesOutput) Details() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentResponseProperties) *string { return v.Details }).(pulumi.StringPtrOutput)
}

// End time.
func (o DeploymentResponsePropertiesOutput) End_time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentResponseProperties) *string { return v.End_time }).(pulumi.StringPtrOutput)
}

// Details about deployment status.
func (o DeploymentResponsePropertiesOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentResponseProperties) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Start time.
func (o DeploymentResponsePropertiesOutput) Start_time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentResponseProperties) *string { return v.Start_time }).(pulumi.StringPtrOutput)
}

// Deployment status.
func (o DeploymentResponsePropertiesOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentResponseProperties) *int { return v.Status }).(pulumi.IntPtrOutput)
}

type DeploymentResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (DeploymentResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentResponseProperties)(nil)).Elem()
}

func (o DeploymentResponsePropertiesPtrOutput) ToDeploymentResponsePropertiesPtrOutput() DeploymentResponsePropertiesPtrOutput {
	return o
}

func (o DeploymentResponsePropertiesPtrOutput) ToDeploymentResponsePropertiesPtrOutputWithContext(ctx context.Context) DeploymentResponsePropertiesPtrOutput {
	return o
}

func (o DeploymentResponsePropertiesPtrOutput) Elem() DeploymentResponsePropertiesOutput {
	return o.ApplyT(func(v *DeploymentResponseProperties) DeploymentResponseProperties { return *v }).(DeploymentResponsePropertiesOutput)
}

// True if deployment is currently active, false if completed and null if not started.
func (o DeploymentResponsePropertiesPtrOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeploymentResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Active
	}).(pulumi.BoolPtrOutput)
}

// Who authored the deployment.
func (o DeploymentResponsePropertiesPtrOutput) Author() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Author
	}).(pulumi.StringPtrOutput)
}

// Author email.
func (o DeploymentResponsePropertiesPtrOutput) Author_email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Author_email
	}).(pulumi.StringPtrOutput)
}

// Who performed the deployment.
func (o DeploymentResponsePropertiesPtrOutput) Deployer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Deployer
	}).(pulumi.StringPtrOutput)
}

// Details on deployment.
func (o DeploymentResponsePropertiesPtrOutput) Details() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Details
	}).(pulumi.StringPtrOutput)
}

// End time.
func (o DeploymentResponsePropertiesPtrOutput) End_time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.End_time
	}).(pulumi.StringPtrOutput)
}

// Details about deployment status.
func (o DeploymentResponsePropertiesPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Start time.
func (o DeploymentResponsePropertiesPtrOutput) Start_time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Start_time
	}).(pulumi.StringPtrOutput)
}

// Deployment status.
func (o DeploymentResponsePropertiesPtrOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeploymentResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.IntPtrOutput)
}

// Routing rules in production experiments.
type Experiments struct {
	// List of ramp-up rules.
	RampUpRules []RampUpRule `pulumi:"rampUpRules"`
}

// ExperimentsInput is an input type that accepts ExperimentsArgs and ExperimentsOutput values.
// You can construct a concrete instance of `ExperimentsInput` via:
//
//          ExperimentsArgs{...}
type ExperimentsInput interface {
	pulumi.Input

	ToExperimentsOutput() ExperimentsOutput
	ToExperimentsOutputWithContext(context.Context) ExperimentsOutput
}

// Routing rules in production experiments.
type ExperimentsArgs struct {
	// List of ramp-up rules.
	RampUpRules RampUpRuleArrayInput `pulumi:"rampUpRules"`
}

func (ExperimentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Experiments)(nil)).Elem()
}

func (i ExperimentsArgs) ToExperimentsOutput() ExperimentsOutput {
	return i.ToExperimentsOutputWithContext(context.Background())
}

func (i ExperimentsArgs) ToExperimentsOutputWithContext(ctx context.Context) ExperimentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentsOutput)
}

func (i ExperimentsArgs) ToExperimentsPtrOutput() ExperimentsPtrOutput {
	return i.ToExperimentsPtrOutputWithContext(context.Background())
}

func (i ExperimentsArgs) ToExperimentsPtrOutputWithContext(ctx context.Context) ExperimentsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentsOutput).ToExperimentsPtrOutputWithContext(ctx)
}

// ExperimentsPtrInput is an input type that accepts ExperimentsArgs, ExperimentsPtr and ExperimentsPtrOutput values.
// You can construct a concrete instance of `ExperimentsPtrInput` via:
//
//          ExperimentsArgs{...}
//
//  or:
//
//          nil
type ExperimentsPtrInput interface {
	pulumi.Input

	ToExperimentsPtrOutput() ExperimentsPtrOutput
	ToExperimentsPtrOutputWithContext(context.Context) ExperimentsPtrOutput
}

type experimentsPtrType ExperimentsArgs

func ExperimentsPtr(v *ExperimentsArgs) ExperimentsPtrInput {
	return (*experimentsPtrType)(v)
}

func (*experimentsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Experiments)(nil)).Elem()
}

func (i *experimentsPtrType) ToExperimentsPtrOutput() ExperimentsPtrOutput {
	return i.ToExperimentsPtrOutputWithContext(context.Background())
}

func (i *experimentsPtrType) ToExperimentsPtrOutputWithContext(ctx context.Context) ExperimentsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentsPtrOutput)
}

// Routing rules in production experiments.
type ExperimentsOutput struct{ *pulumi.OutputState }

func (ExperimentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Experiments)(nil)).Elem()
}

func (o ExperimentsOutput) ToExperimentsOutput() ExperimentsOutput {
	return o
}

func (o ExperimentsOutput) ToExperimentsOutputWithContext(ctx context.Context) ExperimentsOutput {
	return o
}

func (o ExperimentsOutput) ToExperimentsPtrOutput() ExperimentsPtrOutput {
	return o.ToExperimentsPtrOutputWithContext(context.Background())
}

func (o ExperimentsOutput) ToExperimentsPtrOutputWithContext(ctx context.Context) ExperimentsPtrOutput {
	return o.ApplyT(func(v Experiments) *Experiments {
		return &v
	}).(ExperimentsPtrOutput)
}

// List of ramp-up rules.
func (o ExperimentsOutput) RampUpRules() RampUpRuleArrayOutput {
	return o.ApplyT(func(v Experiments) []RampUpRule { return v.RampUpRules }).(RampUpRuleArrayOutput)
}

type ExperimentsPtrOutput struct{ *pulumi.OutputState }

func (ExperimentsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Experiments)(nil)).Elem()
}

func (o ExperimentsPtrOutput) ToExperimentsPtrOutput() ExperimentsPtrOutput {
	return o
}

func (o ExperimentsPtrOutput) ToExperimentsPtrOutputWithContext(ctx context.Context) ExperimentsPtrOutput {
	return o
}

func (o ExperimentsPtrOutput) Elem() ExperimentsOutput {
	return o.ApplyT(func(v *Experiments) Experiments { return *v }).(ExperimentsOutput)
}

// List of ramp-up rules.
func (o ExperimentsPtrOutput) RampUpRules() RampUpRuleArrayOutput {
	return o.ApplyT(func(v *Experiments) []RampUpRule {
		if v == nil {
			return nil
		}
		return v.RampUpRules
	}).(RampUpRuleArrayOutput)
}

// Routing rules in production experiments.
type ExperimentsResponse struct {
	// List of ramp-up rules.
	RampUpRules []RampUpRuleResponse `pulumi:"rampUpRules"`
}

// ExperimentsResponseInput is an input type that accepts ExperimentsResponseArgs and ExperimentsResponseOutput values.
// You can construct a concrete instance of `ExperimentsResponseInput` via:
//
//          ExperimentsResponseArgs{...}
type ExperimentsResponseInput interface {
	pulumi.Input

	ToExperimentsResponseOutput() ExperimentsResponseOutput
	ToExperimentsResponseOutputWithContext(context.Context) ExperimentsResponseOutput
}

// Routing rules in production experiments.
type ExperimentsResponseArgs struct {
	// List of ramp-up rules.
	RampUpRules RampUpRuleResponseArrayInput `pulumi:"rampUpRules"`
}

func (ExperimentsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExperimentsResponse)(nil)).Elem()
}

func (i ExperimentsResponseArgs) ToExperimentsResponseOutput() ExperimentsResponseOutput {
	return i.ToExperimentsResponseOutputWithContext(context.Background())
}

func (i ExperimentsResponseArgs) ToExperimentsResponseOutputWithContext(ctx context.Context) ExperimentsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentsResponseOutput)
}

func (i ExperimentsResponseArgs) ToExperimentsResponsePtrOutput() ExperimentsResponsePtrOutput {
	return i.ToExperimentsResponsePtrOutputWithContext(context.Background())
}

func (i ExperimentsResponseArgs) ToExperimentsResponsePtrOutputWithContext(ctx context.Context) ExperimentsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentsResponseOutput).ToExperimentsResponsePtrOutputWithContext(ctx)
}

// ExperimentsResponsePtrInput is an input type that accepts ExperimentsResponseArgs, ExperimentsResponsePtr and ExperimentsResponsePtrOutput values.
// You can construct a concrete instance of `ExperimentsResponsePtrInput` via:
//
//          ExperimentsResponseArgs{...}
//
//  or:
//
//          nil
type ExperimentsResponsePtrInput interface {
	pulumi.Input

	ToExperimentsResponsePtrOutput() ExperimentsResponsePtrOutput
	ToExperimentsResponsePtrOutputWithContext(context.Context) ExperimentsResponsePtrOutput
}

type experimentsResponsePtrType ExperimentsResponseArgs

func ExperimentsResponsePtr(v *ExperimentsResponseArgs) ExperimentsResponsePtrInput {
	return (*experimentsResponsePtrType)(v)
}

func (*experimentsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExperimentsResponse)(nil)).Elem()
}

func (i *experimentsResponsePtrType) ToExperimentsResponsePtrOutput() ExperimentsResponsePtrOutput {
	return i.ToExperimentsResponsePtrOutputWithContext(context.Background())
}

func (i *experimentsResponsePtrType) ToExperimentsResponsePtrOutputWithContext(ctx context.Context) ExperimentsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentsResponsePtrOutput)
}

// Routing rules in production experiments.
type ExperimentsResponseOutput struct{ *pulumi.OutputState }

func (ExperimentsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExperimentsResponse)(nil)).Elem()
}

func (o ExperimentsResponseOutput) ToExperimentsResponseOutput() ExperimentsResponseOutput {
	return o
}

func (o ExperimentsResponseOutput) ToExperimentsResponseOutputWithContext(ctx context.Context) ExperimentsResponseOutput {
	return o
}

func (o ExperimentsResponseOutput) ToExperimentsResponsePtrOutput() ExperimentsResponsePtrOutput {
	return o.ToExperimentsResponsePtrOutputWithContext(context.Background())
}

func (o ExperimentsResponseOutput) ToExperimentsResponsePtrOutputWithContext(ctx context.Context) ExperimentsResponsePtrOutput {
	return o.ApplyT(func(v ExperimentsResponse) *ExperimentsResponse {
		return &v
	}).(ExperimentsResponsePtrOutput)
}

// List of ramp-up rules.
func (o ExperimentsResponseOutput) RampUpRules() RampUpRuleResponseArrayOutput {
	return o.ApplyT(func(v ExperimentsResponse) []RampUpRuleResponse { return v.RampUpRules }).(RampUpRuleResponseArrayOutput)
}

type ExperimentsResponsePtrOutput struct{ *pulumi.OutputState }

func (ExperimentsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExperimentsResponse)(nil)).Elem()
}

func (o ExperimentsResponsePtrOutput) ToExperimentsResponsePtrOutput() ExperimentsResponsePtrOutput {
	return o
}

func (o ExperimentsResponsePtrOutput) ToExperimentsResponsePtrOutputWithContext(ctx context.Context) ExperimentsResponsePtrOutput {
	return o
}

func (o ExperimentsResponsePtrOutput) Elem() ExperimentsResponseOutput {
	return o.ApplyT(func(v *ExperimentsResponse) ExperimentsResponse { return *v }).(ExperimentsResponseOutput)
}

// List of ramp-up rules.
func (o ExperimentsResponsePtrOutput) RampUpRules() RampUpRuleResponseArrayOutput {
	return o.ApplyT(func(v *ExperimentsResponse) []RampUpRuleResponse {
		if v == nil {
			return nil
		}
		return v.RampUpRules
	}).(RampUpRuleResponseArrayOutput)
}

// FunctionEnvelope resource specific properties
type FunctionEnvelopeResponseProperties struct {
	// Config information.
	Config map[string]interface{} `pulumi:"config"`
	// Config URI.
	Config_href *string `pulumi:"config_href"`
	// File list.
	Files map[string]string `pulumi:"files"`
	// Function App ID.
	Function_app_id *string `pulumi:"function_app_id"`
	// Function URI.
	Href *string `pulumi:"href"`
	// The invocation URL
	Invoke_url_template *string `pulumi:"invoke_url_template"`
	// Value indicating whether the function is disabled
	IsDisabled *bool `pulumi:"isDisabled"`
	// The function language
	Language *string `pulumi:"language"`
	// Script URI.
	Script_href *string `pulumi:"script_href"`
	// Script root path URI.
	Script_root_path_href *string `pulumi:"script_root_path_href"`
	// Secrets file URI.
	Secrets_file_href *string `pulumi:"secrets_file_href"`
	// Test data used when testing via the Azure Portal.
	Test_data *string `pulumi:"test_data"`
	// Test data URI.
	Test_data_href *string `pulumi:"test_data_href"`
}

// FunctionEnvelopeResponsePropertiesInput is an input type that accepts FunctionEnvelopeResponsePropertiesArgs and FunctionEnvelopeResponsePropertiesOutput values.
// You can construct a concrete instance of `FunctionEnvelopeResponsePropertiesInput` via:
//
//          FunctionEnvelopeResponsePropertiesArgs{...}
type FunctionEnvelopeResponsePropertiesInput interface {
	pulumi.Input

	ToFunctionEnvelopeResponsePropertiesOutput() FunctionEnvelopeResponsePropertiesOutput
	ToFunctionEnvelopeResponsePropertiesOutputWithContext(context.Context) FunctionEnvelopeResponsePropertiesOutput
}

// FunctionEnvelope resource specific properties
type FunctionEnvelopeResponsePropertiesArgs struct {
	// Config information.
	Config pulumi.MapInput `pulumi:"config"`
	// Config URI.
	Config_href pulumi.StringPtrInput `pulumi:"config_href"`
	// File list.
	Files pulumi.StringMapInput `pulumi:"files"`
	// Function App ID.
	Function_app_id pulumi.StringPtrInput `pulumi:"function_app_id"`
	// Function URI.
	Href pulumi.StringPtrInput `pulumi:"href"`
	// The invocation URL
	Invoke_url_template pulumi.StringPtrInput `pulumi:"invoke_url_template"`
	// Value indicating whether the function is disabled
	IsDisabled pulumi.BoolPtrInput `pulumi:"isDisabled"`
	// The function language
	Language pulumi.StringPtrInput `pulumi:"language"`
	// Script URI.
	Script_href pulumi.StringPtrInput `pulumi:"script_href"`
	// Script root path URI.
	Script_root_path_href pulumi.StringPtrInput `pulumi:"script_root_path_href"`
	// Secrets file URI.
	Secrets_file_href pulumi.StringPtrInput `pulumi:"secrets_file_href"`
	// Test data used when testing via the Azure Portal.
	Test_data pulumi.StringPtrInput `pulumi:"test_data"`
	// Test data URI.
	Test_data_href pulumi.StringPtrInput `pulumi:"test_data_href"`
}

func (FunctionEnvelopeResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionEnvelopeResponseProperties)(nil)).Elem()
}

func (i FunctionEnvelopeResponsePropertiesArgs) ToFunctionEnvelopeResponsePropertiesOutput() FunctionEnvelopeResponsePropertiesOutput {
	return i.ToFunctionEnvelopeResponsePropertiesOutputWithContext(context.Background())
}

func (i FunctionEnvelopeResponsePropertiesArgs) ToFunctionEnvelopeResponsePropertiesOutputWithContext(ctx context.Context) FunctionEnvelopeResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEnvelopeResponsePropertiesOutput)
}

func (i FunctionEnvelopeResponsePropertiesArgs) ToFunctionEnvelopeResponsePropertiesPtrOutput() FunctionEnvelopeResponsePropertiesPtrOutput {
	return i.ToFunctionEnvelopeResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i FunctionEnvelopeResponsePropertiesArgs) ToFunctionEnvelopeResponsePropertiesPtrOutputWithContext(ctx context.Context) FunctionEnvelopeResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEnvelopeResponsePropertiesOutput).ToFunctionEnvelopeResponsePropertiesPtrOutputWithContext(ctx)
}

// FunctionEnvelopeResponsePropertiesPtrInput is an input type that accepts FunctionEnvelopeResponsePropertiesArgs, FunctionEnvelopeResponsePropertiesPtr and FunctionEnvelopeResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `FunctionEnvelopeResponsePropertiesPtrInput` via:
//
//          FunctionEnvelopeResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type FunctionEnvelopeResponsePropertiesPtrInput interface {
	pulumi.Input

	ToFunctionEnvelopeResponsePropertiesPtrOutput() FunctionEnvelopeResponsePropertiesPtrOutput
	ToFunctionEnvelopeResponsePropertiesPtrOutputWithContext(context.Context) FunctionEnvelopeResponsePropertiesPtrOutput
}

type functionEnvelopeResponsePropertiesPtrType FunctionEnvelopeResponsePropertiesArgs

func FunctionEnvelopeResponsePropertiesPtr(v *FunctionEnvelopeResponsePropertiesArgs) FunctionEnvelopeResponsePropertiesPtrInput {
	return (*functionEnvelopeResponsePropertiesPtrType)(v)
}

func (*functionEnvelopeResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionEnvelopeResponseProperties)(nil)).Elem()
}

func (i *functionEnvelopeResponsePropertiesPtrType) ToFunctionEnvelopeResponsePropertiesPtrOutput() FunctionEnvelopeResponsePropertiesPtrOutput {
	return i.ToFunctionEnvelopeResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *functionEnvelopeResponsePropertiesPtrType) ToFunctionEnvelopeResponsePropertiesPtrOutputWithContext(ctx context.Context) FunctionEnvelopeResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEnvelopeResponsePropertiesPtrOutput)
}

// FunctionEnvelope resource specific properties
type FunctionEnvelopeResponsePropertiesOutput struct{ *pulumi.OutputState }

func (FunctionEnvelopeResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionEnvelopeResponseProperties)(nil)).Elem()
}

func (o FunctionEnvelopeResponsePropertiesOutput) ToFunctionEnvelopeResponsePropertiesOutput() FunctionEnvelopeResponsePropertiesOutput {
	return o
}

func (o FunctionEnvelopeResponsePropertiesOutput) ToFunctionEnvelopeResponsePropertiesOutputWithContext(ctx context.Context) FunctionEnvelopeResponsePropertiesOutput {
	return o
}

func (o FunctionEnvelopeResponsePropertiesOutput) ToFunctionEnvelopeResponsePropertiesPtrOutput() FunctionEnvelopeResponsePropertiesPtrOutput {
	return o.ToFunctionEnvelopeResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o FunctionEnvelopeResponsePropertiesOutput) ToFunctionEnvelopeResponsePropertiesPtrOutputWithContext(ctx context.Context) FunctionEnvelopeResponsePropertiesPtrOutput {
	return o.ApplyT(func(v FunctionEnvelopeResponseProperties) *FunctionEnvelopeResponseProperties {
		return &v
	}).(FunctionEnvelopeResponsePropertiesPtrOutput)
}

// Config information.
func (o FunctionEnvelopeResponsePropertiesOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v FunctionEnvelopeResponseProperties) map[string]interface{} { return v.Config }).(pulumi.MapOutput)
}

// Config URI.
func (o FunctionEnvelopeResponsePropertiesOutput) Config_href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionEnvelopeResponseProperties) *string { return v.Config_href }).(pulumi.StringPtrOutput)
}

// File list.
func (o FunctionEnvelopeResponsePropertiesOutput) Files() pulumi.StringMapOutput {
	return o.ApplyT(func(v FunctionEnvelopeResponseProperties) map[string]string { return v.Files }).(pulumi.StringMapOutput)
}

// Function App ID.
func (o FunctionEnvelopeResponsePropertiesOutput) Function_app_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionEnvelopeResponseProperties) *string { return v.Function_app_id }).(pulumi.StringPtrOutput)
}

// Function URI.
func (o FunctionEnvelopeResponsePropertiesOutput) Href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionEnvelopeResponseProperties) *string { return v.Href }).(pulumi.StringPtrOutput)
}

// The invocation URL
func (o FunctionEnvelopeResponsePropertiesOutput) Invoke_url_template() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionEnvelopeResponseProperties) *string { return v.Invoke_url_template }).(pulumi.StringPtrOutput)
}

// Value indicating whether the function is disabled
func (o FunctionEnvelopeResponsePropertiesOutput) IsDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FunctionEnvelopeResponseProperties) *bool { return v.IsDisabled }).(pulumi.BoolPtrOutput)
}

// The function language
func (o FunctionEnvelopeResponsePropertiesOutput) Language() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionEnvelopeResponseProperties) *string { return v.Language }).(pulumi.StringPtrOutput)
}

// Script URI.
func (o FunctionEnvelopeResponsePropertiesOutput) Script_href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionEnvelopeResponseProperties) *string { return v.Script_href }).(pulumi.StringPtrOutput)
}

// Script root path URI.
func (o FunctionEnvelopeResponsePropertiesOutput) Script_root_path_href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionEnvelopeResponseProperties) *string { return v.Script_root_path_href }).(pulumi.StringPtrOutput)
}

// Secrets file URI.
func (o FunctionEnvelopeResponsePropertiesOutput) Secrets_file_href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionEnvelopeResponseProperties) *string { return v.Secrets_file_href }).(pulumi.StringPtrOutput)
}

// Test data used when testing via the Azure Portal.
func (o FunctionEnvelopeResponsePropertiesOutput) Test_data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionEnvelopeResponseProperties) *string { return v.Test_data }).(pulumi.StringPtrOutput)
}

// Test data URI.
func (o FunctionEnvelopeResponsePropertiesOutput) Test_data_href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionEnvelopeResponseProperties) *string { return v.Test_data_href }).(pulumi.StringPtrOutput)
}

type FunctionEnvelopeResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (FunctionEnvelopeResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionEnvelopeResponseProperties)(nil)).Elem()
}

func (o FunctionEnvelopeResponsePropertiesPtrOutput) ToFunctionEnvelopeResponsePropertiesPtrOutput() FunctionEnvelopeResponsePropertiesPtrOutput {
	return o
}

func (o FunctionEnvelopeResponsePropertiesPtrOutput) ToFunctionEnvelopeResponsePropertiesPtrOutputWithContext(ctx context.Context) FunctionEnvelopeResponsePropertiesPtrOutput {
	return o
}

func (o FunctionEnvelopeResponsePropertiesPtrOutput) Elem() FunctionEnvelopeResponsePropertiesOutput {
	return o.ApplyT(func(v *FunctionEnvelopeResponseProperties) FunctionEnvelopeResponseProperties { return *v }).(FunctionEnvelopeResponsePropertiesOutput)
}

// Config information.
func (o FunctionEnvelopeResponsePropertiesPtrOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v *FunctionEnvelopeResponseProperties) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Config
	}).(pulumi.MapOutput)
}

// Config URI.
func (o FunctionEnvelopeResponsePropertiesPtrOutput) Config_href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionEnvelopeResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Config_href
	}).(pulumi.StringPtrOutput)
}

// File list.
func (o FunctionEnvelopeResponsePropertiesPtrOutput) Files() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FunctionEnvelopeResponseProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.Files
	}).(pulumi.StringMapOutput)
}

// Function App ID.
func (o FunctionEnvelopeResponsePropertiesPtrOutput) Function_app_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionEnvelopeResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Function_app_id
	}).(pulumi.StringPtrOutput)
}

// Function URI.
func (o FunctionEnvelopeResponsePropertiesPtrOutput) Href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionEnvelopeResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Href
	}).(pulumi.StringPtrOutput)
}

// The invocation URL
func (o FunctionEnvelopeResponsePropertiesPtrOutput) Invoke_url_template() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionEnvelopeResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Invoke_url_template
	}).(pulumi.StringPtrOutput)
}

// Value indicating whether the function is disabled
func (o FunctionEnvelopeResponsePropertiesPtrOutput) IsDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FunctionEnvelopeResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsDisabled
	}).(pulumi.BoolPtrOutput)
}

// The function language
func (o FunctionEnvelopeResponsePropertiesPtrOutput) Language() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionEnvelopeResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Language
	}).(pulumi.StringPtrOutput)
}

// Script URI.
func (o FunctionEnvelopeResponsePropertiesPtrOutput) Script_href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionEnvelopeResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Script_href
	}).(pulumi.StringPtrOutput)
}

// Script root path URI.
func (o FunctionEnvelopeResponsePropertiesPtrOutput) Script_root_path_href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionEnvelopeResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Script_root_path_href
	}).(pulumi.StringPtrOutput)
}

// Secrets file URI.
func (o FunctionEnvelopeResponsePropertiesPtrOutput) Secrets_file_href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionEnvelopeResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Secrets_file_href
	}).(pulumi.StringPtrOutput)
}

// Test data used when testing via the Azure Portal.
func (o FunctionEnvelopeResponsePropertiesPtrOutput) Test_data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionEnvelopeResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Test_data
	}).(pulumi.StringPtrOutput)
}

// Test data URI.
func (o FunctionEnvelopeResponsePropertiesPtrOutput) Test_data_href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionEnvelopeResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Test_data_href
	}).(pulumi.StringPtrOutput)
}

// FunctionSecrets resource specific properties
type FunctionSecretsResponseProperties struct {
	// Secret key.
	Key *string `pulumi:"key"`
	// Trigger URL.
	Trigger_url *string `pulumi:"trigger_url"`
}

// FunctionSecretsResponsePropertiesInput is an input type that accepts FunctionSecretsResponsePropertiesArgs and FunctionSecretsResponsePropertiesOutput values.
// You can construct a concrete instance of `FunctionSecretsResponsePropertiesInput` via:
//
//          FunctionSecretsResponsePropertiesArgs{...}
type FunctionSecretsResponsePropertiesInput interface {
	pulumi.Input

	ToFunctionSecretsResponsePropertiesOutput() FunctionSecretsResponsePropertiesOutput
	ToFunctionSecretsResponsePropertiesOutputWithContext(context.Context) FunctionSecretsResponsePropertiesOutput
}

// FunctionSecrets resource specific properties
type FunctionSecretsResponsePropertiesArgs struct {
	// Secret key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Trigger URL.
	Trigger_url pulumi.StringPtrInput `pulumi:"trigger_url"`
}

func (FunctionSecretsResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionSecretsResponseProperties)(nil)).Elem()
}

func (i FunctionSecretsResponsePropertiesArgs) ToFunctionSecretsResponsePropertiesOutput() FunctionSecretsResponsePropertiesOutput {
	return i.ToFunctionSecretsResponsePropertiesOutputWithContext(context.Background())
}

func (i FunctionSecretsResponsePropertiesArgs) ToFunctionSecretsResponsePropertiesOutputWithContext(ctx context.Context) FunctionSecretsResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionSecretsResponsePropertiesOutput)
}

// FunctionSecrets resource specific properties
type FunctionSecretsResponsePropertiesOutput struct{ *pulumi.OutputState }

func (FunctionSecretsResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionSecretsResponseProperties)(nil)).Elem()
}

func (o FunctionSecretsResponsePropertiesOutput) ToFunctionSecretsResponsePropertiesOutput() FunctionSecretsResponsePropertiesOutput {
	return o
}

func (o FunctionSecretsResponsePropertiesOutput) ToFunctionSecretsResponsePropertiesOutputWithContext(ctx context.Context) FunctionSecretsResponsePropertiesOutput {
	return o
}

// Secret key.
func (o FunctionSecretsResponsePropertiesOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionSecretsResponseProperties) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Trigger URL.
func (o FunctionSecretsResponsePropertiesOutput) Trigger_url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionSecretsResponseProperties) *string { return v.Trigger_url }).(pulumi.StringPtrOutput)
}

// A global distribution definition.
type GeoDistribution struct {
	// Location.
	Location *string `pulumi:"location"`
	// NumberOfWorkers.
	NumberOfWorkers *int `pulumi:"numberOfWorkers"`
}

// GeoDistributionInput is an input type that accepts GeoDistributionArgs and GeoDistributionOutput values.
// You can construct a concrete instance of `GeoDistributionInput` via:
//
//          GeoDistributionArgs{...}
type GeoDistributionInput interface {
	pulumi.Input

	ToGeoDistributionOutput() GeoDistributionOutput
	ToGeoDistributionOutputWithContext(context.Context) GeoDistributionOutput
}

// A global distribution definition.
type GeoDistributionArgs struct {
	// Location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// NumberOfWorkers.
	NumberOfWorkers pulumi.IntPtrInput `pulumi:"numberOfWorkers"`
}

func (GeoDistributionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoDistribution)(nil)).Elem()
}

func (i GeoDistributionArgs) ToGeoDistributionOutput() GeoDistributionOutput {
	return i.ToGeoDistributionOutputWithContext(context.Background())
}

func (i GeoDistributionArgs) ToGeoDistributionOutputWithContext(ctx context.Context) GeoDistributionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeoDistributionOutput)
}

// GeoDistributionArrayInput is an input type that accepts GeoDistributionArray and GeoDistributionArrayOutput values.
// You can construct a concrete instance of `GeoDistributionArrayInput` via:
//
//          GeoDistributionArray{ GeoDistributionArgs{...} }
type GeoDistributionArrayInput interface {
	pulumi.Input

	ToGeoDistributionArrayOutput() GeoDistributionArrayOutput
	ToGeoDistributionArrayOutputWithContext(context.Context) GeoDistributionArrayOutput
}

type GeoDistributionArray []GeoDistributionInput

func (GeoDistributionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GeoDistribution)(nil)).Elem()
}

func (i GeoDistributionArray) ToGeoDistributionArrayOutput() GeoDistributionArrayOutput {
	return i.ToGeoDistributionArrayOutputWithContext(context.Background())
}

func (i GeoDistributionArray) ToGeoDistributionArrayOutputWithContext(ctx context.Context) GeoDistributionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeoDistributionArrayOutput)
}

// A global distribution definition.
type GeoDistributionOutput struct{ *pulumi.OutputState }

func (GeoDistributionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoDistribution)(nil)).Elem()
}

func (o GeoDistributionOutput) ToGeoDistributionOutput() GeoDistributionOutput {
	return o
}

func (o GeoDistributionOutput) ToGeoDistributionOutputWithContext(ctx context.Context) GeoDistributionOutput {
	return o
}

// Location.
func (o GeoDistributionOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GeoDistribution) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// NumberOfWorkers.
func (o GeoDistributionOutput) NumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GeoDistribution) *int { return v.NumberOfWorkers }).(pulumi.IntPtrOutput)
}

type GeoDistributionArrayOutput struct{ *pulumi.OutputState }

func (GeoDistributionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GeoDistribution)(nil)).Elem()
}

func (o GeoDistributionArrayOutput) ToGeoDistributionArrayOutput() GeoDistributionArrayOutput {
	return o
}

func (o GeoDistributionArrayOutput) ToGeoDistributionArrayOutputWithContext(ctx context.Context) GeoDistributionArrayOutput {
	return o
}

func (o GeoDistributionArrayOutput) Index(i pulumi.IntInput) GeoDistributionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GeoDistribution {
		return vs[0].([]GeoDistribution)[vs[1].(int)]
	}).(GeoDistributionOutput)
}

// A global distribution definition.
type GeoDistributionResponse struct {
	// Location.
	Location *string `pulumi:"location"`
	// NumberOfWorkers.
	NumberOfWorkers *int `pulumi:"numberOfWorkers"`
}

// GeoDistributionResponseInput is an input type that accepts GeoDistributionResponseArgs and GeoDistributionResponseOutput values.
// You can construct a concrete instance of `GeoDistributionResponseInput` via:
//
//          GeoDistributionResponseArgs{...}
type GeoDistributionResponseInput interface {
	pulumi.Input

	ToGeoDistributionResponseOutput() GeoDistributionResponseOutput
	ToGeoDistributionResponseOutputWithContext(context.Context) GeoDistributionResponseOutput
}

// A global distribution definition.
type GeoDistributionResponseArgs struct {
	// Location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// NumberOfWorkers.
	NumberOfWorkers pulumi.IntPtrInput `pulumi:"numberOfWorkers"`
}

func (GeoDistributionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoDistributionResponse)(nil)).Elem()
}

func (i GeoDistributionResponseArgs) ToGeoDistributionResponseOutput() GeoDistributionResponseOutput {
	return i.ToGeoDistributionResponseOutputWithContext(context.Background())
}

func (i GeoDistributionResponseArgs) ToGeoDistributionResponseOutputWithContext(ctx context.Context) GeoDistributionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeoDistributionResponseOutput)
}

// GeoDistributionResponseArrayInput is an input type that accepts GeoDistributionResponseArray and GeoDistributionResponseArrayOutput values.
// You can construct a concrete instance of `GeoDistributionResponseArrayInput` via:
//
//          GeoDistributionResponseArray{ GeoDistributionResponseArgs{...} }
type GeoDistributionResponseArrayInput interface {
	pulumi.Input

	ToGeoDistributionResponseArrayOutput() GeoDistributionResponseArrayOutput
	ToGeoDistributionResponseArrayOutputWithContext(context.Context) GeoDistributionResponseArrayOutput
}

type GeoDistributionResponseArray []GeoDistributionResponseInput

func (GeoDistributionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GeoDistributionResponse)(nil)).Elem()
}

func (i GeoDistributionResponseArray) ToGeoDistributionResponseArrayOutput() GeoDistributionResponseArrayOutput {
	return i.ToGeoDistributionResponseArrayOutputWithContext(context.Background())
}

func (i GeoDistributionResponseArray) ToGeoDistributionResponseArrayOutputWithContext(ctx context.Context) GeoDistributionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeoDistributionResponseArrayOutput)
}

// A global distribution definition.
type GeoDistributionResponseOutput struct{ *pulumi.OutputState }

func (GeoDistributionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoDistributionResponse)(nil)).Elem()
}

func (o GeoDistributionResponseOutput) ToGeoDistributionResponseOutput() GeoDistributionResponseOutput {
	return o
}

func (o GeoDistributionResponseOutput) ToGeoDistributionResponseOutputWithContext(ctx context.Context) GeoDistributionResponseOutput {
	return o
}

// Location.
func (o GeoDistributionResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GeoDistributionResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// NumberOfWorkers.
func (o GeoDistributionResponseOutput) NumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GeoDistributionResponse) *int { return v.NumberOfWorkers }).(pulumi.IntPtrOutput)
}

type GeoDistributionResponseArrayOutput struct{ *pulumi.OutputState }

func (GeoDistributionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GeoDistributionResponse)(nil)).Elem()
}

func (o GeoDistributionResponseArrayOutput) ToGeoDistributionResponseArrayOutput() GeoDistributionResponseArrayOutput {
	return o
}

func (o GeoDistributionResponseArrayOutput) ToGeoDistributionResponseArrayOutputWithContext(ctx context.Context) GeoDistributionResponseArrayOutput {
	return o
}

func (o GeoDistributionResponseArrayOutput) Index(i pulumi.IntInput) GeoDistributionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GeoDistributionResponse {
		return vs[0].([]GeoDistributionResponse)[vs[1].(int)]
	}).(GeoDistributionResponseOutput)
}

// The IIS handler mappings used to define which handler processes HTTP requests with certain extension.
// For example, it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.
type HandlerMapping struct {
	// Command-line arguments to be passed to the script processor.
	Arguments *string `pulumi:"arguments"`
	// Requests with this extension will be handled using the specified FastCGI application.
	Extension *string `pulumi:"extension"`
	// The absolute path to the FastCGI application.
	ScriptProcessor *string `pulumi:"scriptProcessor"`
}

// HandlerMappingInput is an input type that accepts HandlerMappingArgs and HandlerMappingOutput values.
// You can construct a concrete instance of `HandlerMappingInput` via:
//
//          HandlerMappingArgs{...}
type HandlerMappingInput interface {
	pulumi.Input

	ToHandlerMappingOutput() HandlerMappingOutput
	ToHandlerMappingOutputWithContext(context.Context) HandlerMappingOutput
}

// The IIS handler mappings used to define which handler processes HTTP requests with certain extension.
// For example, it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.
type HandlerMappingArgs struct {
	// Command-line arguments to be passed to the script processor.
	Arguments pulumi.StringPtrInput `pulumi:"arguments"`
	// Requests with this extension will be handled using the specified FastCGI application.
	Extension pulumi.StringPtrInput `pulumi:"extension"`
	// The absolute path to the FastCGI application.
	ScriptProcessor pulumi.StringPtrInput `pulumi:"scriptProcessor"`
}

func (HandlerMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HandlerMapping)(nil)).Elem()
}

func (i HandlerMappingArgs) ToHandlerMappingOutput() HandlerMappingOutput {
	return i.ToHandlerMappingOutputWithContext(context.Background())
}

func (i HandlerMappingArgs) ToHandlerMappingOutputWithContext(ctx context.Context) HandlerMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HandlerMappingOutput)
}

// HandlerMappingArrayInput is an input type that accepts HandlerMappingArray and HandlerMappingArrayOutput values.
// You can construct a concrete instance of `HandlerMappingArrayInput` via:
//
//          HandlerMappingArray{ HandlerMappingArgs{...} }
type HandlerMappingArrayInput interface {
	pulumi.Input

	ToHandlerMappingArrayOutput() HandlerMappingArrayOutput
	ToHandlerMappingArrayOutputWithContext(context.Context) HandlerMappingArrayOutput
}

type HandlerMappingArray []HandlerMappingInput

func (HandlerMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HandlerMapping)(nil)).Elem()
}

func (i HandlerMappingArray) ToHandlerMappingArrayOutput() HandlerMappingArrayOutput {
	return i.ToHandlerMappingArrayOutputWithContext(context.Background())
}

func (i HandlerMappingArray) ToHandlerMappingArrayOutputWithContext(ctx context.Context) HandlerMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HandlerMappingArrayOutput)
}

// The IIS handler mappings used to define which handler processes HTTP requests with certain extension.
// For example, it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.
type HandlerMappingOutput struct{ *pulumi.OutputState }

func (HandlerMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HandlerMapping)(nil)).Elem()
}

func (o HandlerMappingOutput) ToHandlerMappingOutput() HandlerMappingOutput {
	return o
}

func (o HandlerMappingOutput) ToHandlerMappingOutputWithContext(ctx context.Context) HandlerMappingOutput {
	return o
}

// Command-line arguments to be passed to the script processor.
func (o HandlerMappingOutput) Arguments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HandlerMapping) *string { return v.Arguments }).(pulumi.StringPtrOutput)
}

// Requests with this extension will be handled using the specified FastCGI application.
func (o HandlerMappingOutput) Extension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HandlerMapping) *string { return v.Extension }).(pulumi.StringPtrOutput)
}

// The absolute path to the FastCGI application.
func (o HandlerMappingOutput) ScriptProcessor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HandlerMapping) *string { return v.ScriptProcessor }).(pulumi.StringPtrOutput)
}

type HandlerMappingArrayOutput struct{ *pulumi.OutputState }

func (HandlerMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HandlerMapping)(nil)).Elem()
}

func (o HandlerMappingArrayOutput) ToHandlerMappingArrayOutput() HandlerMappingArrayOutput {
	return o
}

func (o HandlerMappingArrayOutput) ToHandlerMappingArrayOutputWithContext(ctx context.Context) HandlerMappingArrayOutput {
	return o
}

func (o HandlerMappingArrayOutput) Index(i pulumi.IntInput) HandlerMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HandlerMapping {
		return vs[0].([]HandlerMapping)[vs[1].(int)]
	}).(HandlerMappingOutput)
}

// The IIS handler mappings used to define which handler processes HTTP requests with certain extension.
// For example, it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.
type HandlerMappingResponse struct {
	// Command-line arguments to be passed to the script processor.
	Arguments *string `pulumi:"arguments"`
	// Requests with this extension will be handled using the specified FastCGI application.
	Extension *string `pulumi:"extension"`
	// The absolute path to the FastCGI application.
	ScriptProcessor *string `pulumi:"scriptProcessor"`
}

// HandlerMappingResponseInput is an input type that accepts HandlerMappingResponseArgs and HandlerMappingResponseOutput values.
// You can construct a concrete instance of `HandlerMappingResponseInput` via:
//
//          HandlerMappingResponseArgs{...}
type HandlerMappingResponseInput interface {
	pulumi.Input

	ToHandlerMappingResponseOutput() HandlerMappingResponseOutput
	ToHandlerMappingResponseOutputWithContext(context.Context) HandlerMappingResponseOutput
}

// The IIS handler mappings used to define which handler processes HTTP requests with certain extension.
// For example, it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.
type HandlerMappingResponseArgs struct {
	// Command-line arguments to be passed to the script processor.
	Arguments pulumi.StringPtrInput `pulumi:"arguments"`
	// Requests with this extension will be handled using the specified FastCGI application.
	Extension pulumi.StringPtrInput `pulumi:"extension"`
	// The absolute path to the FastCGI application.
	ScriptProcessor pulumi.StringPtrInput `pulumi:"scriptProcessor"`
}

func (HandlerMappingResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HandlerMappingResponse)(nil)).Elem()
}

func (i HandlerMappingResponseArgs) ToHandlerMappingResponseOutput() HandlerMappingResponseOutput {
	return i.ToHandlerMappingResponseOutputWithContext(context.Background())
}

func (i HandlerMappingResponseArgs) ToHandlerMappingResponseOutputWithContext(ctx context.Context) HandlerMappingResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HandlerMappingResponseOutput)
}

// HandlerMappingResponseArrayInput is an input type that accepts HandlerMappingResponseArray and HandlerMappingResponseArrayOutput values.
// You can construct a concrete instance of `HandlerMappingResponseArrayInput` via:
//
//          HandlerMappingResponseArray{ HandlerMappingResponseArgs{...} }
type HandlerMappingResponseArrayInput interface {
	pulumi.Input

	ToHandlerMappingResponseArrayOutput() HandlerMappingResponseArrayOutput
	ToHandlerMappingResponseArrayOutputWithContext(context.Context) HandlerMappingResponseArrayOutput
}

type HandlerMappingResponseArray []HandlerMappingResponseInput

func (HandlerMappingResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HandlerMappingResponse)(nil)).Elem()
}

func (i HandlerMappingResponseArray) ToHandlerMappingResponseArrayOutput() HandlerMappingResponseArrayOutput {
	return i.ToHandlerMappingResponseArrayOutputWithContext(context.Background())
}

func (i HandlerMappingResponseArray) ToHandlerMappingResponseArrayOutputWithContext(ctx context.Context) HandlerMappingResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HandlerMappingResponseArrayOutput)
}

// The IIS handler mappings used to define which handler processes HTTP requests with certain extension.
// For example, it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.
type HandlerMappingResponseOutput struct{ *pulumi.OutputState }

func (HandlerMappingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HandlerMappingResponse)(nil)).Elem()
}

func (o HandlerMappingResponseOutput) ToHandlerMappingResponseOutput() HandlerMappingResponseOutput {
	return o
}

func (o HandlerMappingResponseOutput) ToHandlerMappingResponseOutputWithContext(ctx context.Context) HandlerMappingResponseOutput {
	return o
}

// Command-line arguments to be passed to the script processor.
func (o HandlerMappingResponseOutput) Arguments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HandlerMappingResponse) *string { return v.Arguments }).(pulumi.StringPtrOutput)
}

// Requests with this extension will be handled using the specified FastCGI application.
func (o HandlerMappingResponseOutput) Extension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HandlerMappingResponse) *string { return v.Extension }).(pulumi.StringPtrOutput)
}

// The absolute path to the FastCGI application.
func (o HandlerMappingResponseOutput) ScriptProcessor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HandlerMappingResponse) *string { return v.ScriptProcessor }).(pulumi.StringPtrOutput)
}

type HandlerMappingResponseArrayOutput struct{ *pulumi.OutputState }

func (HandlerMappingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HandlerMappingResponse)(nil)).Elem()
}

func (o HandlerMappingResponseArrayOutput) ToHandlerMappingResponseArrayOutput() HandlerMappingResponseArrayOutput {
	return o
}

func (o HandlerMappingResponseArrayOutput) ToHandlerMappingResponseArrayOutputWithContext(ctx context.Context) HandlerMappingResponseArrayOutput {
	return o
}

func (o HandlerMappingResponseArrayOutput) Index(i pulumi.IntInput) HandlerMappingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HandlerMappingResponse {
		return vs[0].([]HandlerMappingResponse)[vs[1].(int)]
	}).(HandlerMappingResponseOutput)
}

// HostNameBinding resource specific properties
type HostNameBindingResponseProperties struct {
	// Azure resource name.
	AzureResourceName *string `pulumi:"azureResourceName"`
	// Azure resource type.
	AzureResourceType *string `pulumi:"azureResourceType"`
	// Custom DNS record type.
	CustomHostNameDnsRecordType *string `pulumi:"customHostNameDnsRecordType"`
	// Fully qualified ARM domain resource URI.
	DomainId *string `pulumi:"domainId"`
	// Hostname type.
	HostNameType *string `pulumi:"hostNameType"`
	// App Service app name.
	SiteName *string `pulumi:"siteName"`
	// SSL type
	SslState *string `pulumi:"sslState"`
	// SSL certificate thumbprint
	Thumbprint *string `pulumi:"thumbprint"`
	// Virtual IP address assigned to the hostname if IP based SSL is enabled.
	VirtualIP string `pulumi:"virtualIP"`
}

// HostNameBindingResponsePropertiesInput is an input type that accepts HostNameBindingResponsePropertiesArgs and HostNameBindingResponsePropertiesOutput values.
// You can construct a concrete instance of `HostNameBindingResponsePropertiesInput` via:
//
//          HostNameBindingResponsePropertiesArgs{...}
type HostNameBindingResponsePropertiesInput interface {
	pulumi.Input

	ToHostNameBindingResponsePropertiesOutput() HostNameBindingResponsePropertiesOutput
	ToHostNameBindingResponsePropertiesOutputWithContext(context.Context) HostNameBindingResponsePropertiesOutput
}

// HostNameBinding resource specific properties
type HostNameBindingResponsePropertiesArgs struct {
	// Azure resource name.
	AzureResourceName pulumi.StringPtrInput `pulumi:"azureResourceName"`
	// Azure resource type.
	AzureResourceType pulumi.StringPtrInput `pulumi:"azureResourceType"`
	// Custom DNS record type.
	CustomHostNameDnsRecordType pulumi.StringPtrInput `pulumi:"customHostNameDnsRecordType"`
	// Fully qualified ARM domain resource URI.
	DomainId pulumi.StringPtrInput `pulumi:"domainId"`
	// Hostname type.
	HostNameType pulumi.StringPtrInput `pulumi:"hostNameType"`
	// App Service app name.
	SiteName pulumi.StringPtrInput `pulumi:"siteName"`
	// SSL type
	SslState pulumi.StringPtrInput `pulumi:"sslState"`
	// SSL certificate thumbprint
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
	// Virtual IP address assigned to the hostname if IP based SSL is enabled.
	VirtualIP pulumi.StringInput `pulumi:"virtualIP"`
}

func (HostNameBindingResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostNameBindingResponseProperties)(nil)).Elem()
}

func (i HostNameBindingResponsePropertiesArgs) ToHostNameBindingResponsePropertiesOutput() HostNameBindingResponsePropertiesOutput {
	return i.ToHostNameBindingResponsePropertiesOutputWithContext(context.Background())
}

func (i HostNameBindingResponsePropertiesArgs) ToHostNameBindingResponsePropertiesOutputWithContext(ctx context.Context) HostNameBindingResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostNameBindingResponsePropertiesOutput)
}

func (i HostNameBindingResponsePropertiesArgs) ToHostNameBindingResponsePropertiesPtrOutput() HostNameBindingResponsePropertiesPtrOutput {
	return i.ToHostNameBindingResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i HostNameBindingResponsePropertiesArgs) ToHostNameBindingResponsePropertiesPtrOutputWithContext(ctx context.Context) HostNameBindingResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostNameBindingResponsePropertiesOutput).ToHostNameBindingResponsePropertiesPtrOutputWithContext(ctx)
}

// HostNameBindingResponsePropertiesPtrInput is an input type that accepts HostNameBindingResponsePropertiesArgs, HostNameBindingResponsePropertiesPtr and HostNameBindingResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `HostNameBindingResponsePropertiesPtrInput` via:
//
//          HostNameBindingResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type HostNameBindingResponsePropertiesPtrInput interface {
	pulumi.Input

	ToHostNameBindingResponsePropertiesPtrOutput() HostNameBindingResponsePropertiesPtrOutput
	ToHostNameBindingResponsePropertiesPtrOutputWithContext(context.Context) HostNameBindingResponsePropertiesPtrOutput
}

type hostNameBindingResponsePropertiesPtrType HostNameBindingResponsePropertiesArgs

func HostNameBindingResponsePropertiesPtr(v *HostNameBindingResponsePropertiesArgs) HostNameBindingResponsePropertiesPtrInput {
	return (*hostNameBindingResponsePropertiesPtrType)(v)
}

func (*hostNameBindingResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HostNameBindingResponseProperties)(nil)).Elem()
}

func (i *hostNameBindingResponsePropertiesPtrType) ToHostNameBindingResponsePropertiesPtrOutput() HostNameBindingResponsePropertiesPtrOutput {
	return i.ToHostNameBindingResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *hostNameBindingResponsePropertiesPtrType) ToHostNameBindingResponsePropertiesPtrOutputWithContext(ctx context.Context) HostNameBindingResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostNameBindingResponsePropertiesPtrOutput)
}

// HostNameBinding resource specific properties
type HostNameBindingResponsePropertiesOutput struct{ *pulumi.OutputState }

func (HostNameBindingResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostNameBindingResponseProperties)(nil)).Elem()
}

func (o HostNameBindingResponsePropertiesOutput) ToHostNameBindingResponsePropertiesOutput() HostNameBindingResponsePropertiesOutput {
	return o
}

func (o HostNameBindingResponsePropertiesOutput) ToHostNameBindingResponsePropertiesOutputWithContext(ctx context.Context) HostNameBindingResponsePropertiesOutput {
	return o
}

func (o HostNameBindingResponsePropertiesOutput) ToHostNameBindingResponsePropertiesPtrOutput() HostNameBindingResponsePropertiesPtrOutput {
	return o.ToHostNameBindingResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o HostNameBindingResponsePropertiesOutput) ToHostNameBindingResponsePropertiesPtrOutputWithContext(ctx context.Context) HostNameBindingResponsePropertiesPtrOutput {
	return o.ApplyT(func(v HostNameBindingResponseProperties) *HostNameBindingResponseProperties {
		return &v
	}).(HostNameBindingResponsePropertiesPtrOutput)
}

// Azure resource name.
func (o HostNameBindingResponsePropertiesOutput) AzureResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameBindingResponseProperties) *string { return v.AzureResourceName }).(pulumi.StringPtrOutput)
}

// Azure resource type.
func (o HostNameBindingResponsePropertiesOutput) AzureResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameBindingResponseProperties) *string { return v.AzureResourceType }).(pulumi.StringPtrOutput)
}

// Custom DNS record type.
func (o HostNameBindingResponsePropertiesOutput) CustomHostNameDnsRecordType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameBindingResponseProperties) *string { return v.CustomHostNameDnsRecordType }).(pulumi.StringPtrOutput)
}

// Fully qualified ARM domain resource URI.
func (o HostNameBindingResponsePropertiesOutput) DomainId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameBindingResponseProperties) *string { return v.DomainId }).(pulumi.StringPtrOutput)
}

// Hostname type.
func (o HostNameBindingResponsePropertiesOutput) HostNameType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameBindingResponseProperties) *string { return v.HostNameType }).(pulumi.StringPtrOutput)
}

// App Service app name.
func (o HostNameBindingResponsePropertiesOutput) SiteName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameBindingResponseProperties) *string { return v.SiteName }).(pulumi.StringPtrOutput)
}

// SSL type
func (o HostNameBindingResponsePropertiesOutput) SslState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameBindingResponseProperties) *string { return v.SslState }).(pulumi.StringPtrOutput)
}

// SSL certificate thumbprint
func (o HostNameBindingResponsePropertiesOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameBindingResponseProperties) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

// Virtual IP address assigned to the hostname if IP based SSL is enabled.
func (o HostNameBindingResponsePropertiesOutput) VirtualIP() pulumi.StringOutput {
	return o.ApplyT(func(v HostNameBindingResponseProperties) string { return v.VirtualIP }).(pulumi.StringOutput)
}

type HostNameBindingResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (HostNameBindingResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostNameBindingResponseProperties)(nil)).Elem()
}

func (o HostNameBindingResponsePropertiesPtrOutput) ToHostNameBindingResponsePropertiesPtrOutput() HostNameBindingResponsePropertiesPtrOutput {
	return o
}

func (o HostNameBindingResponsePropertiesPtrOutput) ToHostNameBindingResponsePropertiesPtrOutputWithContext(ctx context.Context) HostNameBindingResponsePropertiesPtrOutput {
	return o
}

func (o HostNameBindingResponsePropertiesPtrOutput) Elem() HostNameBindingResponsePropertiesOutput {
	return o.ApplyT(func(v *HostNameBindingResponseProperties) HostNameBindingResponseProperties { return *v }).(HostNameBindingResponsePropertiesOutput)
}

// Azure resource name.
func (o HostNameBindingResponsePropertiesPtrOutput) AzureResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostNameBindingResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.AzureResourceName
	}).(pulumi.StringPtrOutput)
}

// Azure resource type.
func (o HostNameBindingResponsePropertiesPtrOutput) AzureResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostNameBindingResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.AzureResourceType
	}).(pulumi.StringPtrOutput)
}

// Custom DNS record type.
func (o HostNameBindingResponsePropertiesPtrOutput) CustomHostNameDnsRecordType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostNameBindingResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.CustomHostNameDnsRecordType
	}).(pulumi.StringPtrOutput)
}

// Fully qualified ARM domain resource URI.
func (o HostNameBindingResponsePropertiesPtrOutput) DomainId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostNameBindingResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.DomainId
	}).(pulumi.StringPtrOutput)
}

// Hostname type.
func (o HostNameBindingResponsePropertiesPtrOutput) HostNameType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostNameBindingResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.HostNameType
	}).(pulumi.StringPtrOutput)
}

// App Service app name.
func (o HostNameBindingResponsePropertiesPtrOutput) SiteName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostNameBindingResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.SiteName
	}).(pulumi.StringPtrOutput)
}

// SSL type
func (o HostNameBindingResponsePropertiesPtrOutput) SslState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostNameBindingResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.SslState
	}).(pulumi.StringPtrOutput)
}

// SSL certificate thumbprint
func (o HostNameBindingResponsePropertiesPtrOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostNameBindingResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Thumbprint
	}).(pulumi.StringPtrOutput)
}

// Virtual IP address assigned to the hostname if IP based SSL is enabled.
func (o HostNameBindingResponsePropertiesPtrOutput) VirtualIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostNameBindingResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.VirtualIP
	}).(pulumi.StringPtrOutput)
}

// SSL-enabled hostname.
type HostNameSslState struct {
	// Indicates whether the hostname is a standard or repository hostname.
	HostType *string `pulumi:"hostType"`
	// Hostname.
	Name *string `pulumi:"name"`
	// SSL type.
	SslState *string `pulumi:"sslState"`
	// SSL certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
	// Set to <code>true</code> to update existing hostname.
	ToUpdate *bool `pulumi:"toUpdate"`
	// Virtual IP address assigned to the hostname if IP based SSL is enabled.
	VirtualIP *string `pulumi:"virtualIP"`
}

// HostNameSslStateInput is an input type that accepts HostNameSslStateArgs and HostNameSslStateOutput values.
// You can construct a concrete instance of `HostNameSslStateInput` via:
//
//          HostNameSslStateArgs{...}
type HostNameSslStateInput interface {
	pulumi.Input

	ToHostNameSslStateOutput() HostNameSslStateOutput
	ToHostNameSslStateOutputWithContext(context.Context) HostNameSslStateOutput
}

// SSL-enabled hostname.
type HostNameSslStateArgs struct {
	// Indicates whether the hostname is a standard or repository hostname.
	HostType pulumi.StringPtrInput `pulumi:"hostType"`
	// Hostname.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// SSL type.
	SslState pulumi.StringPtrInput `pulumi:"sslState"`
	// SSL certificate thumbprint.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
	// Set to <code>true</code> to update existing hostname.
	ToUpdate pulumi.BoolPtrInput `pulumi:"toUpdate"`
	// Virtual IP address assigned to the hostname if IP based SSL is enabled.
	VirtualIP pulumi.StringPtrInput `pulumi:"virtualIP"`
}

func (HostNameSslStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostNameSslState)(nil)).Elem()
}

func (i HostNameSslStateArgs) ToHostNameSslStateOutput() HostNameSslStateOutput {
	return i.ToHostNameSslStateOutputWithContext(context.Background())
}

func (i HostNameSslStateArgs) ToHostNameSslStateOutputWithContext(ctx context.Context) HostNameSslStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostNameSslStateOutput)
}

// HostNameSslStateArrayInput is an input type that accepts HostNameSslStateArray and HostNameSslStateArrayOutput values.
// You can construct a concrete instance of `HostNameSslStateArrayInput` via:
//
//          HostNameSslStateArray{ HostNameSslStateArgs{...} }
type HostNameSslStateArrayInput interface {
	pulumi.Input

	ToHostNameSslStateArrayOutput() HostNameSslStateArrayOutput
	ToHostNameSslStateArrayOutputWithContext(context.Context) HostNameSslStateArrayOutput
}

type HostNameSslStateArray []HostNameSslStateInput

func (HostNameSslStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostNameSslState)(nil)).Elem()
}

func (i HostNameSslStateArray) ToHostNameSslStateArrayOutput() HostNameSslStateArrayOutput {
	return i.ToHostNameSslStateArrayOutputWithContext(context.Background())
}

func (i HostNameSslStateArray) ToHostNameSslStateArrayOutputWithContext(ctx context.Context) HostNameSslStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostNameSslStateArrayOutput)
}

// SSL-enabled hostname.
type HostNameSslStateOutput struct{ *pulumi.OutputState }

func (HostNameSslStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostNameSslState)(nil)).Elem()
}

func (o HostNameSslStateOutput) ToHostNameSslStateOutput() HostNameSslStateOutput {
	return o
}

func (o HostNameSslStateOutput) ToHostNameSslStateOutputWithContext(ctx context.Context) HostNameSslStateOutput {
	return o
}

// Indicates whether the hostname is a standard or repository hostname.
func (o HostNameSslStateOutput) HostType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslState) *string { return v.HostType }).(pulumi.StringPtrOutput)
}

// Hostname.
func (o HostNameSslStateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslState) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// SSL type.
func (o HostNameSslStateOutput) SslState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslState) *string { return v.SslState }).(pulumi.StringPtrOutput)
}

// SSL certificate thumbprint.
func (o HostNameSslStateOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslState) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

// Set to <code>true</code> to update existing hostname.
func (o HostNameSslStateOutput) ToUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HostNameSslState) *bool { return v.ToUpdate }).(pulumi.BoolPtrOutput)
}

// Virtual IP address assigned to the hostname if IP based SSL is enabled.
func (o HostNameSslStateOutput) VirtualIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslState) *string { return v.VirtualIP }).(pulumi.StringPtrOutput)
}

type HostNameSslStateArrayOutput struct{ *pulumi.OutputState }

func (HostNameSslStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostNameSslState)(nil)).Elem()
}

func (o HostNameSslStateArrayOutput) ToHostNameSslStateArrayOutput() HostNameSslStateArrayOutput {
	return o
}

func (o HostNameSslStateArrayOutput) ToHostNameSslStateArrayOutputWithContext(ctx context.Context) HostNameSslStateArrayOutput {
	return o
}

func (o HostNameSslStateArrayOutput) Index(i pulumi.IntInput) HostNameSslStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostNameSslState {
		return vs[0].([]HostNameSslState)[vs[1].(int)]
	}).(HostNameSslStateOutput)
}

// SSL-enabled hostname.
type HostNameSslStateResponse struct {
	// Indicates whether the hostname is a standard or repository hostname.
	HostType *string `pulumi:"hostType"`
	// Hostname.
	Name *string `pulumi:"name"`
	// SSL type.
	SslState *string `pulumi:"sslState"`
	// SSL certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
	// Set to <code>true</code> to update existing hostname.
	ToUpdate *bool `pulumi:"toUpdate"`
	// Virtual IP address assigned to the hostname if IP based SSL is enabled.
	VirtualIP *string `pulumi:"virtualIP"`
}

// HostNameSslStateResponseInput is an input type that accepts HostNameSslStateResponseArgs and HostNameSslStateResponseOutput values.
// You can construct a concrete instance of `HostNameSslStateResponseInput` via:
//
//          HostNameSslStateResponseArgs{...}
type HostNameSslStateResponseInput interface {
	pulumi.Input

	ToHostNameSslStateResponseOutput() HostNameSslStateResponseOutput
	ToHostNameSslStateResponseOutputWithContext(context.Context) HostNameSslStateResponseOutput
}

// SSL-enabled hostname.
type HostNameSslStateResponseArgs struct {
	// Indicates whether the hostname is a standard or repository hostname.
	HostType pulumi.StringPtrInput `pulumi:"hostType"`
	// Hostname.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// SSL type.
	SslState pulumi.StringPtrInput `pulumi:"sslState"`
	// SSL certificate thumbprint.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
	// Set to <code>true</code> to update existing hostname.
	ToUpdate pulumi.BoolPtrInput `pulumi:"toUpdate"`
	// Virtual IP address assigned to the hostname if IP based SSL is enabled.
	VirtualIP pulumi.StringPtrInput `pulumi:"virtualIP"`
}

func (HostNameSslStateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostNameSslStateResponse)(nil)).Elem()
}

func (i HostNameSslStateResponseArgs) ToHostNameSslStateResponseOutput() HostNameSslStateResponseOutput {
	return i.ToHostNameSslStateResponseOutputWithContext(context.Background())
}

func (i HostNameSslStateResponseArgs) ToHostNameSslStateResponseOutputWithContext(ctx context.Context) HostNameSslStateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostNameSslStateResponseOutput)
}

// HostNameSslStateResponseArrayInput is an input type that accepts HostNameSslStateResponseArray and HostNameSslStateResponseArrayOutput values.
// You can construct a concrete instance of `HostNameSslStateResponseArrayInput` via:
//
//          HostNameSslStateResponseArray{ HostNameSslStateResponseArgs{...} }
type HostNameSslStateResponseArrayInput interface {
	pulumi.Input

	ToHostNameSslStateResponseArrayOutput() HostNameSslStateResponseArrayOutput
	ToHostNameSslStateResponseArrayOutputWithContext(context.Context) HostNameSslStateResponseArrayOutput
}

type HostNameSslStateResponseArray []HostNameSslStateResponseInput

func (HostNameSslStateResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostNameSslStateResponse)(nil)).Elem()
}

func (i HostNameSslStateResponseArray) ToHostNameSslStateResponseArrayOutput() HostNameSslStateResponseArrayOutput {
	return i.ToHostNameSslStateResponseArrayOutputWithContext(context.Background())
}

func (i HostNameSslStateResponseArray) ToHostNameSslStateResponseArrayOutputWithContext(ctx context.Context) HostNameSslStateResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostNameSslStateResponseArrayOutput)
}

// SSL-enabled hostname.
type HostNameSslStateResponseOutput struct{ *pulumi.OutputState }

func (HostNameSslStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostNameSslStateResponse)(nil)).Elem()
}

func (o HostNameSslStateResponseOutput) ToHostNameSslStateResponseOutput() HostNameSslStateResponseOutput {
	return o
}

func (o HostNameSslStateResponseOutput) ToHostNameSslStateResponseOutputWithContext(ctx context.Context) HostNameSslStateResponseOutput {
	return o
}

// Indicates whether the hostname is a standard or repository hostname.
func (o HostNameSslStateResponseOutput) HostType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslStateResponse) *string { return v.HostType }).(pulumi.StringPtrOutput)
}

// Hostname.
func (o HostNameSslStateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslStateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// SSL type.
func (o HostNameSslStateResponseOutput) SslState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslStateResponse) *string { return v.SslState }).(pulumi.StringPtrOutput)
}

// SSL certificate thumbprint.
func (o HostNameSslStateResponseOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslStateResponse) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

// Set to <code>true</code> to update existing hostname.
func (o HostNameSslStateResponseOutput) ToUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HostNameSslStateResponse) *bool { return v.ToUpdate }).(pulumi.BoolPtrOutput)
}

// Virtual IP address assigned to the hostname if IP based SSL is enabled.
func (o HostNameSslStateResponseOutput) VirtualIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslStateResponse) *string { return v.VirtualIP }).(pulumi.StringPtrOutput)
}

type HostNameSslStateResponseArrayOutput struct{ *pulumi.OutputState }

func (HostNameSslStateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostNameSslStateResponse)(nil)).Elem()
}

func (o HostNameSslStateResponseArrayOutput) ToHostNameSslStateResponseArrayOutput() HostNameSslStateResponseArrayOutput {
	return o
}

func (o HostNameSslStateResponseArrayOutput) ToHostNameSslStateResponseArrayOutputWithContext(ctx context.Context) HostNameSslStateResponseArrayOutput {
	return o
}

func (o HostNameSslStateResponseArrayOutput) Index(i pulumi.IntInput) HostNameSslStateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostNameSslStateResponse {
		return vs[0].([]HostNameSslStateResponse)[vs[1].(int)]
	}).(HostNameSslStateResponseOutput)
}

// Specification for an App Service Environment to use for this resource.
type HostingEnvironmentProfile struct {
	// Resource ID of the App Service Environment.
	Id *string `pulumi:"id"`
}

// HostingEnvironmentProfileInput is an input type that accepts HostingEnvironmentProfileArgs and HostingEnvironmentProfileOutput values.
// You can construct a concrete instance of `HostingEnvironmentProfileInput` via:
//
//          HostingEnvironmentProfileArgs{...}
type HostingEnvironmentProfileInput interface {
	pulumi.Input

	ToHostingEnvironmentProfileOutput() HostingEnvironmentProfileOutput
	ToHostingEnvironmentProfileOutputWithContext(context.Context) HostingEnvironmentProfileOutput
}

// Specification for an App Service Environment to use for this resource.
type HostingEnvironmentProfileArgs struct {
	// Resource ID of the App Service Environment.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (HostingEnvironmentProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingEnvironmentProfile)(nil)).Elem()
}

func (i HostingEnvironmentProfileArgs) ToHostingEnvironmentProfileOutput() HostingEnvironmentProfileOutput {
	return i.ToHostingEnvironmentProfileOutputWithContext(context.Background())
}

func (i HostingEnvironmentProfileArgs) ToHostingEnvironmentProfileOutputWithContext(ctx context.Context) HostingEnvironmentProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingEnvironmentProfileOutput)
}

func (i HostingEnvironmentProfileArgs) ToHostingEnvironmentProfilePtrOutput() HostingEnvironmentProfilePtrOutput {
	return i.ToHostingEnvironmentProfilePtrOutputWithContext(context.Background())
}

func (i HostingEnvironmentProfileArgs) ToHostingEnvironmentProfilePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingEnvironmentProfileOutput).ToHostingEnvironmentProfilePtrOutputWithContext(ctx)
}

// HostingEnvironmentProfilePtrInput is an input type that accepts HostingEnvironmentProfileArgs, HostingEnvironmentProfilePtr and HostingEnvironmentProfilePtrOutput values.
// You can construct a concrete instance of `HostingEnvironmentProfilePtrInput` via:
//
//          HostingEnvironmentProfileArgs{...}
//
//  or:
//
//          nil
type HostingEnvironmentProfilePtrInput interface {
	pulumi.Input

	ToHostingEnvironmentProfilePtrOutput() HostingEnvironmentProfilePtrOutput
	ToHostingEnvironmentProfilePtrOutputWithContext(context.Context) HostingEnvironmentProfilePtrOutput
}

type hostingEnvironmentProfilePtrType HostingEnvironmentProfileArgs

func HostingEnvironmentProfilePtr(v *HostingEnvironmentProfileArgs) HostingEnvironmentProfilePtrInput {
	return (*hostingEnvironmentProfilePtrType)(v)
}

func (*hostingEnvironmentProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingEnvironmentProfile)(nil)).Elem()
}

func (i *hostingEnvironmentProfilePtrType) ToHostingEnvironmentProfilePtrOutput() HostingEnvironmentProfilePtrOutput {
	return i.ToHostingEnvironmentProfilePtrOutputWithContext(context.Background())
}

func (i *hostingEnvironmentProfilePtrType) ToHostingEnvironmentProfilePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingEnvironmentProfilePtrOutput)
}

// Specification for an App Service Environment to use for this resource.
type HostingEnvironmentProfileOutput struct{ *pulumi.OutputState }

func (HostingEnvironmentProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingEnvironmentProfile)(nil)).Elem()
}

func (o HostingEnvironmentProfileOutput) ToHostingEnvironmentProfileOutput() HostingEnvironmentProfileOutput {
	return o
}

func (o HostingEnvironmentProfileOutput) ToHostingEnvironmentProfileOutputWithContext(ctx context.Context) HostingEnvironmentProfileOutput {
	return o
}

func (o HostingEnvironmentProfileOutput) ToHostingEnvironmentProfilePtrOutput() HostingEnvironmentProfilePtrOutput {
	return o.ToHostingEnvironmentProfilePtrOutputWithContext(context.Background())
}

func (o HostingEnvironmentProfileOutput) ToHostingEnvironmentProfilePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfilePtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProfile) *HostingEnvironmentProfile {
		return &v
	}).(HostingEnvironmentProfilePtrOutput)
}

// Resource ID of the App Service Environment.
func (o HostingEnvironmentProfileOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProfile) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type HostingEnvironmentProfilePtrOutput struct{ *pulumi.OutputState }

func (HostingEnvironmentProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingEnvironmentProfile)(nil)).Elem()
}

func (o HostingEnvironmentProfilePtrOutput) ToHostingEnvironmentProfilePtrOutput() HostingEnvironmentProfilePtrOutput {
	return o
}

func (o HostingEnvironmentProfilePtrOutput) ToHostingEnvironmentProfilePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfilePtrOutput {
	return o
}

func (o HostingEnvironmentProfilePtrOutput) Elem() HostingEnvironmentProfileOutput {
	return o.ApplyT(func(v *HostingEnvironmentProfile) HostingEnvironmentProfile { return *v }).(HostingEnvironmentProfileOutput)
}

// Resource ID of the App Service Environment.
func (o HostingEnvironmentProfilePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProfile) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Specification for an App Service Environment to use for this resource.
type HostingEnvironmentProfileResponse struct {
	// Resource ID of the App Service Environment.
	Id *string `pulumi:"id"`
	// Name of the App Service Environment.
	Name string `pulumi:"name"`
	// Resource type of the App Service Environment.
	Type string `pulumi:"type"`
}

// HostingEnvironmentProfileResponseInput is an input type that accepts HostingEnvironmentProfileResponseArgs and HostingEnvironmentProfileResponseOutput values.
// You can construct a concrete instance of `HostingEnvironmentProfileResponseInput` via:
//
//          HostingEnvironmentProfileResponseArgs{...}
type HostingEnvironmentProfileResponseInput interface {
	pulumi.Input

	ToHostingEnvironmentProfileResponseOutput() HostingEnvironmentProfileResponseOutput
	ToHostingEnvironmentProfileResponseOutputWithContext(context.Context) HostingEnvironmentProfileResponseOutput
}

// Specification for an App Service Environment to use for this resource.
type HostingEnvironmentProfileResponseArgs struct {
	// Resource ID of the App Service Environment.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the App Service Environment.
	Name pulumi.StringInput `pulumi:"name"`
	// Resource type of the App Service Environment.
	Type pulumi.StringInput `pulumi:"type"`
}

func (HostingEnvironmentProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingEnvironmentProfileResponse)(nil)).Elem()
}

func (i HostingEnvironmentProfileResponseArgs) ToHostingEnvironmentProfileResponseOutput() HostingEnvironmentProfileResponseOutput {
	return i.ToHostingEnvironmentProfileResponseOutputWithContext(context.Background())
}

func (i HostingEnvironmentProfileResponseArgs) ToHostingEnvironmentProfileResponseOutputWithContext(ctx context.Context) HostingEnvironmentProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingEnvironmentProfileResponseOutput)
}

func (i HostingEnvironmentProfileResponseArgs) ToHostingEnvironmentProfileResponsePtrOutput() HostingEnvironmentProfileResponsePtrOutput {
	return i.ToHostingEnvironmentProfileResponsePtrOutputWithContext(context.Background())
}

func (i HostingEnvironmentProfileResponseArgs) ToHostingEnvironmentProfileResponsePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingEnvironmentProfileResponseOutput).ToHostingEnvironmentProfileResponsePtrOutputWithContext(ctx)
}

// HostingEnvironmentProfileResponsePtrInput is an input type that accepts HostingEnvironmentProfileResponseArgs, HostingEnvironmentProfileResponsePtr and HostingEnvironmentProfileResponsePtrOutput values.
// You can construct a concrete instance of `HostingEnvironmentProfileResponsePtrInput` via:
//
//          HostingEnvironmentProfileResponseArgs{...}
//
//  or:
//
//          nil
type HostingEnvironmentProfileResponsePtrInput interface {
	pulumi.Input

	ToHostingEnvironmentProfileResponsePtrOutput() HostingEnvironmentProfileResponsePtrOutput
	ToHostingEnvironmentProfileResponsePtrOutputWithContext(context.Context) HostingEnvironmentProfileResponsePtrOutput
}

type hostingEnvironmentProfileResponsePtrType HostingEnvironmentProfileResponseArgs

func HostingEnvironmentProfileResponsePtr(v *HostingEnvironmentProfileResponseArgs) HostingEnvironmentProfileResponsePtrInput {
	return (*hostingEnvironmentProfileResponsePtrType)(v)
}

func (*hostingEnvironmentProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingEnvironmentProfileResponse)(nil)).Elem()
}

func (i *hostingEnvironmentProfileResponsePtrType) ToHostingEnvironmentProfileResponsePtrOutput() HostingEnvironmentProfileResponsePtrOutput {
	return i.ToHostingEnvironmentProfileResponsePtrOutputWithContext(context.Background())
}

func (i *hostingEnvironmentProfileResponsePtrType) ToHostingEnvironmentProfileResponsePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingEnvironmentProfileResponsePtrOutput)
}

// Specification for an App Service Environment to use for this resource.
type HostingEnvironmentProfileResponseOutput struct{ *pulumi.OutputState }

func (HostingEnvironmentProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingEnvironmentProfileResponse)(nil)).Elem()
}

func (o HostingEnvironmentProfileResponseOutput) ToHostingEnvironmentProfileResponseOutput() HostingEnvironmentProfileResponseOutput {
	return o
}

func (o HostingEnvironmentProfileResponseOutput) ToHostingEnvironmentProfileResponseOutputWithContext(ctx context.Context) HostingEnvironmentProfileResponseOutput {
	return o
}

func (o HostingEnvironmentProfileResponseOutput) ToHostingEnvironmentProfileResponsePtrOutput() HostingEnvironmentProfileResponsePtrOutput {
	return o.ToHostingEnvironmentProfileResponsePtrOutputWithContext(context.Background())
}

func (o HostingEnvironmentProfileResponseOutput) ToHostingEnvironmentProfileResponsePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfileResponsePtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProfileResponse) *HostingEnvironmentProfileResponse {
		return &v
	}).(HostingEnvironmentProfileResponsePtrOutput)
}

// Resource ID of the App Service Environment.
func (o HostingEnvironmentProfileResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProfileResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the App Service Environment.
func (o HostingEnvironmentProfileResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v HostingEnvironmentProfileResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Resource type of the App Service Environment.
func (o HostingEnvironmentProfileResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HostingEnvironmentProfileResponse) string { return v.Type }).(pulumi.StringOutput)
}

type HostingEnvironmentProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (HostingEnvironmentProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingEnvironmentProfileResponse)(nil)).Elem()
}

func (o HostingEnvironmentProfileResponsePtrOutput) ToHostingEnvironmentProfileResponsePtrOutput() HostingEnvironmentProfileResponsePtrOutput {
	return o
}

func (o HostingEnvironmentProfileResponsePtrOutput) ToHostingEnvironmentProfileResponsePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfileResponsePtrOutput {
	return o
}

func (o HostingEnvironmentProfileResponsePtrOutput) Elem() HostingEnvironmentProfileResponseOutput {
	return o.ApplyT(func(v *HostingEnvironmentProfileResponse) HostingEnvironmentProfileResponse { return *v }).(HostingEnvironmentProfileResponseOutput)
}

// Resource ID of the App Service Environment.
func (o HostingEnvironmentProfileResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Name of the App Service Environment.
func (o HostingEnvironmentProfileResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Resource type of the App Service Environment.
func (o HostingEnvironmentProfileResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// HybridConnectionKey resource specific properties
type HybridConnectionKeyResponseProperties struct {
	// The name of the send key.
	SendKeyName string `pulumi:"sendKeyName"`
	// The value of the send key.
	SendKeyValue string `pulumi:"sendKeyValue"`
}

// HybridConnectionKeyResponsePropertiesInput is an input type that accepts HybridConnectionKeyResponsePropertiesArgs and HybridConnectionKeyResponsePropertiesOutput values.
// You can construct a concrete instance of `HybridConnectionKeyResponsePropertiesInput` via:
//
//          HybridConnectionKeyResponsePropertiesArgs{...}
type HybridConnectionKeyResponsePropertiesInput interface {
	pulumi.Input

	ToHybridConnectionKeyResponsePropertiesOutput() HybridConnectionKeyResponsePropertiesOutput
	ToHybridConnectionKeyResponsePropertiesOutputWithContext(context.Context) HybridConnectionKeyResponsePropertiesOutput
}

// HybridConnectionKey resource specific properties
type HybridConnectionKeyResponsePropertiesArgs struct {
	// The name of the send key.
	SendKeyName pulumi.StringInput `pulumi:"sendKeyName"`
	// The value of the send key.
	SendKeyValue pulumi.StringInput `pulumi:"sendKeyValue"`
}

func (HybridConnectionKeyResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HybridConnectionKeyResponseProperties)(nil)).Elem()
}

func (i HybridConnectionKeyResponsePropertiesArgs) ToHybridConnectionKeyResponsePropertiesOutput() HybridConnectionKeyResponsePropertiesOutput {
	return i.ToHybridConnectionKeyResponsePropertiesOutputWithContext(context.Background())
}

func (i HybridConnectionKeyResponsePropertiesArgs) ToHybridConnectionKeyResponsePropertiesOutputWithContext(ctx context.Context) HybridConnectionKeyResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HybridConnectionKeyResponsePropertiesOutput)
}

// HybridConnectionKey resource specific properties
type HybridConnectionKeyResponsePropertiesOutput struct{ *pulumi.OutputState }

func (HybridConnectionKeyResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HybridConnectionKeyResponseProperties)(nil)).Elem()
}

func (o HybridConnectionKeyResponsePropertiesOutput) ToHybridConnectionKeyResponsePropertiesOutput() HybridConnectionKeyResponsePropertiesOutput {
	return o
}

func (o HybridConnectionKeyResponsePropertiesOutput) ToHybridConnectionKeyResponsePropertiesOutputWithContext(ctx context.Context) HybridConnectionKeyResponsePropertiesOutput {
	return o
}

// The name of the send key.
func (o HybridConnectionKeyResponsePropertiesOutput) SendKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v HybridConnectionKeyResponseProperties) string { return v.SendKeyName }).(pulumi.StringOutput)
}

// The value of the send key.
func (o HybridConnectionKeyResponsePropertiesOutput) SendKeyValue() pulumi.StringOutput {
	return o.ApplyT(func(v HybridConnectionKeyResponseProperties) string { return v.SendKeyValue }).(pulumi.StringOutput)
}

// HybridConnection resource specific properties
type HybridConnectionResponseProperties struct {
	// The hostname of the endpoint.
	Hostname *string `pulumi:"hostname"`
	// The port of the endpoint.
	Port *int `pulumi:"port"`
	// The ARM URI to the Service Bus relay.
	RelayArmUri *string `pulumi:"relayArmUri"`
	// The name of the Service Bus relay.
	RelayName *string `pulumi:"relayName"`
	// The name of the Service Bus key which has Send permissions. This is used to authenticate to Service Bus.
	SendKeyName *string `pulumi:"sendKeyName"`
	// The value of the Service Bus key. This is used to authenticate to Service Bus. In ARM this key will not be returned
	// normally, use the POST /listKeys API instead.
	SendKeyValue *string `pulumi:"sendKeyValue"`
	// The name of the Service Bus namespace.
	ServiceBusNamespace *string `pulumi:"serviceBusNamespace"`
	// The suffix for the service bus endpoint. By default this is .servicebus.windows.net
	ServiceBusSuffix *string `pulumi:"serviceBusSuffix"`
}

// HybridConnectionResponsePropertiesInput is an input type that accepts HybridConnectionResponsePropertiesArgs and HybridConnectionResponsePropertiesOutput values.
// You can construct a concrete instance of `HybridConnectionResponsePropertiesInput` via:
//
//          HybridConnectionResponsePropertiesArgs{...}
type HybridConnectionResponsePropertiesInput interface {
	pulumi.Input

	ToHybridConnectionResponsePropertiesOutput() HybridConnectionResponsePropertiesOutput
	ToHybridConnectionResponsePropertiesOutputWithContext(context.Context) HybridConnectionResponsePropertiesOutput
}

// HybridConnection resource specific properties
type HybridConnectionResponsePropertiesArgs struct {
	// The hostname of the endpoint.
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
	// The port of the endpoint.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The ARM URI to the Service Bus relay.
	RelayArmUri pulumi.StringPtrInput `pulumi:"relayArmUri"`
	// The name of the Service Bus relay.
	RelayName pulumi.StringPtrInput `pulumi:"relayName"`
	// The name of the Service Bus key which has Send permissions. This is used to authenticate to Service Bus.
	SendKeyName pulumi.StringPtrInput `pulumi:"sendKeyName"`
	// The value of the Service Bus key. This is used to authenticate to Service Bus. In ARM this key will not be returned
	// normally, use the POST /listKeys API instead.
	SendKeyValue pulumi.StringPtrInput `pulumi:"sendKeyValue"`
	// The name of the Service Bus namespace.
	ServiceBusNamespace pulumi.StringPtrInput `pulumi:"serviceBusNamespace"`
	// The suffix for the service bus endpoint. By default this is .servicebus.windows.net
	ServiceBusSuffix pulumi.StringPtrInput `pulumi:"serviceBusSuffix"`
}

func (HybridConnectionResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HybridConnectionResponseProperties)(nil)).Elem()
}

func (i HybridConnectionResponsePropertiesArgs) ToHybridConnectionResponsePropertiesOutput() HybridConnectionResponsePropertiesOutput {
	return i.ToHybridConnectionResponsePropertiesOutputWithContext(context.Background())
}

func (i HybridConnectionResponsePropertiesArgs) ToHybridConnectionResponsePropertiesOutputWithContext(ctx context.Context) HybridConnectionResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HybridConnectionResponsePropertiesOutput)
}

func (i HybridConnectionResponsePropertiesArgs) ToHybridConnectionResponsePropertiesPtrOutput() HybridConnectionResponsePropertiesPtrOutput {
	return i.ToHybridConnectionResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i HybridConnectionResponsePropertiesArgs) ToHybridConnectionResponsePropertiesPtrOutputWithContext(ctx context.Context) HybridConnectionResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HybridConnectionResponsePropertiesOutput).ToHybridConnectionResponsePropertiesPtrOutputWithContext(ctx)
}

// HybridConnectionResponsePropertiesPtrInput is an input type that accepts HybridConnectionResponsePropertiesArgs, HybridConnectionResponsePropertiesPtr and HybridConnectionResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `HybridConnectionResponsePropertiesPtrInput` via:
//
//          HybridConnectionResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type HybridConnectionResponsePropertiesPtrInput interface {
	pulumi.Input

	ToHybridConnectionResponsePropertiesPtrOutput() HybridConnectionResponsePropertiesPtrOutput
	ToHybridConnectionResponsePropertiesPtrOutputWithContext(context.Context) HybridConnectionResponsePropertiesPtrOutput
}

type hybridConnectionResponsePropertiesPtrType HybridConnectionResponsePropertiesArgs

func HybridConnectionResponsePropertiesPtr(v *HybridConnectionResponsePropertiesArgs) HybridConnectionResponsePropertiesPtrInput {
	return (*hybridConnectionResponsePropertiesPtrType)(v)
}

func (*hybridConnectionResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HybridConnectionResponseProperties)(nil)).Elem()
}

func (i *hybridConnectionResponsePropertiesPtrType) ToHybridConnectionResponsePropertiesPtrOutput() HybridConnectionResponsePropertiesPtrOutput {
	return i.ToHybridConnectionResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *hybridConnectionResponsePropertiesPtrType) ToHybridConnectionResponsePropertiesPtrOutputWithContext(ctx context.Context) HybridConnectionResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HybridConnectionResponsePropertiesPtrOutput)
}

// HybridConnection resource specific properties
type HybridConnectionResponsePropertiesOutput struct{ *pulumi.OutputState }

func (HybridConnectionResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HybridConnectionResponseProperties)(nil)).Elem()
}

func (o HybridConnectionResponsePropertiesOutput) ToHybridConnectionResponsePropertiesOutput() HybridConnectionResponsePropertiesOutput {
	return o
}

func (o HybridConnectionResponsePropertiesOutput) ToHybridConnectionResponsePropertiesOutputWithContext(ctx context.Context) HybridConnectionResponsePropertiesOutput {
	return o
}

func (o HybridConnectionResponsePropertiesOutput) ToHybridConnectionResponsePropertiesPtrOutput() HybridConnectionResponsePropertiesPtrOutput {
	return o.ToHybridConnectionResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o HybridConnectionResponsePropertiesOutput) ToHybridConnectionResponsePropertiesPtrOutputWithContext(ctx context.Context) HybridConnectionResponsePropertiesPtrOutput {
	return o.ApplyT(func(v HybridConnectionResponseProperties) *HybridConnectionResponseProperties {
		return &v
	}).(HybridConnectionResponsePropertiesPtrOutput)
}

// The hostname of the endpoint.
func (o HybridConnectionResponsePropertiesOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HybridConnectionResponseProperties) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

// The port of the endpoint.
func (o HybridConnectionResponsePropertiesOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HybridConnectionResponseProperties) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The ARM URI to the Service Bus relay.
func (o HybridConnectionResponsePropertiesOutput) RelayArmUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HybridConnectionResponseProperties) *string { return v.RelayArmUri }).(pulumi.StringPtrOutput)
}

// The name of the Service Bus relay.
func (o HybridConnectionResponsePropertiesOutput) RelayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HybridConnectionResponseProperties) *string { return v.RelayName }).(pulumi.StringPtrOutput)
}

// The name of the Service Bus key which has Send permissions. This is used to authenticate to Service Bus.
func (o HybridConnectionResponsePropertiesOutput) SendKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HybridConnectionResponseProperties) *string { return v.SendKeyName }).(pulumi.StringPtrOutput)
}

// The value of the Service Bus key. This is used to authenticate to Service Bus. In ARM this key will not be returned
// normally, use the POST /listKeys API instead.
func (o HybridConnectionResponsePropertiesOutput) SendKeyValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HybridConnectionResponseProperties) *string { return v.SendKeyValue }).(pulumi.StringPtrOutput)
}

// The name of the Service Bus namespace.
func (o HybridConnectionResponsePropertiesOutput) ServiceBusNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HybridConnectionResponseProperties) *string { return v.ServiceBusNamespace }).(pulumi.StringPtrOutput)
}

// The suffix for the service bus endpoint. By default this is .servicebus.windows.net
func (o HybridConnectionResponsePropertiesOutput) ServiceBusSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HybridConnectionResponseProperties) *string { return v.ServiceBusSuffix }).(pulumi.StringPtrOutput)
}

type HybridConnectionResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (HybridConnectionResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HybridConnectionResponseProperties)(nil)).Elem()
}

func (o HybridConnectionResponsePropertiesPtrOutput) ToHybridConnectionResponsePropertiesPtrOutput() HybridConnectionResponsePropertiesPtrOutput {
	return o
}

func (o HybridConnectionResponsePropertiesPtrOutput) ToHybridConnectionResponsePropertiesPtrOutputWithContext(ctx context.Context) HybridConnectionResponsePropertiesPtrOutput {
	return o
}

func (o HybridConnectionResponsePropertiesPtrOutput) Elem() HybridConnectionResponsePropertiesOutput {
	return o.ApplyT(func(v *HybridConnectionResponseProperties) HybridConnectionResponseProperties { return *v }).(HybridConnectionResponsePropertiesOutput)
}

// The hostname of the endpoint.
func (o HybridConnectionResponsePropertiesPtrOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HybridConnectionResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Hostname
	}).(pulumi.StringPtrOutput)
}

// The port of the endpoint.
func (o HybridConnectionResponsePropertiesPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HybridConnectionResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// The ARM URI to the Service Bus relay.
func (o HybridConnectionResponsePropertiesPtrOutput) RelayArmUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HybridConnectionResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.RelayArmUri
	}).(pulumi.StringPtrOutput)
}

// The name of the Service Bus relay.
func (o HybridConnectionResponsePropertiesPtrOutput) RelayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HybridConnectionResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.RelayName
	}).(pulumi.StringPtrOutput)
}

// The name of the Service Bus key which has Send permissions. This is used to authenticate to Service Bus.
func (o HybridConnectionResponsePropertiesPtrOutput) SendKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HybridConnectionResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.SendKeyName
	}).(pulumi.StringPtrOutput)
}

// The value of the Service Bus key. This is used to authenticate to Service Bus. In ARM this key will not be returned
// normally, use the POST /listKeys API instead.
func (o HybridConnectionResponsePropertiesPtrOutput) SendKeyValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HybridConnectionResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.SendKeyValue
	}).(pulumi.StringPtrOutput)
}

// The name of the Service Bus namespace.
func (o HybridConnectionResponsePropertiesPtrOutput) ServiceBusNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HybridConnectionResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.ServiceBusNamespace
	}).(pulumi.StringPtrOutput)
}

// The suffix for the service bus endpoint. By default this is .servicebus.windows.net
func (o HybridConnectionResponsePropertiesPtrOutput) ServiceBusSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HybridConnectionResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.ServiceBusSuffix
	}).(pulumi.StringPtrOutput)
}

// A domain specific resource identifier.
type IdentifierResponse struct {
	// Resource Id.
	Id string `pulumi:"id"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// Identifier resource specific properties
	Properties *IdentifierResponseProperties `pulumi:"properties"`
	// Resource type.
	Type string `pulumi:"type"`
}

// IdentifierResponseInput is an input type that accepts IdentifierResponseArgs and IdentifierResponseOutput values.
// You can construct a concrete instance of `IdentifierResponseInput` via:
//
//          IdentifierResponseArgs{...}
type IdentifierResponseInput interface {
	pulumi.Input

	ToIdentifierResponseOutput() IdentifierResponseOutput
	ToIdentifierResponseOutputWithContext(context.Context) IdentifierResponseOutput
}

// A domain specific resource identifier.
type IdentifierResponseArgs struct {
	// Resource Id.
	Id pulumi.StringInput `pulumi:"id"`
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// Identifier resource specific properties
	Properties IdentifierResponsePropertiesPtrInput `pulumi:"properties"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (IdentifierResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentifierResponse)(nil)).Elem()
}

func (i IdentifierResponseArgs) ToIdentifierResponseOutput() IdentifierResponseOutput {
	return i.ToIdentifierResponseOutputWithContext(context.Background())
}

func (i IdentifierResponseArgs) ToIdentifierResponseOutputWithContext(ctx context.Context) IdentifierResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentifierResponseOutput)
}

// IdentifierResponseArrayInput is an input type that accepts IdentifierResponseArray and IdentifierResponseArrayOutput values.
// You can construct a concrete instance of `IdentifierResponseArrayInput` via:
//
//          IdentifierResponseArray{ IdentifierResponseArgs{...} }
type IdentifierResponseArrayInput interface {
	pulumi.Input

	ToIdentifierResponseArrayOutput() IdentifierResponseArrayOutput
	ToIdentifierResponseArrayOutputWithContext(context.Context) IdentifierResponseArrayOutput
}

type IdentifierResponseArray []IdentifierResponseInput

func (IdentifierResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentifierResponse)(nil)).Elem()
}

func (i IdentifierResponseArray) ToIdentifierResponseArrayOutput() IdentifierResponseArrayOutput {
	return i.ToIdentifierResponseArrayOutputWithContext(context.Background())
}

func (i IdentifierResponseArray) ToIdentifierResponseArrayOutputWithContext(ctx context.Context) IdentifierResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentifierResponseArrayOutput)
}

// A domain specific resource identifier.
type IdentifierResponseOutput struct{ *pulumi.OutputState }

func (IdentifierResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentifierResponse)(nil)).Elem()
}

func (o IdentifierResponseOutput) ToIdentifierResponseOutput() IdentifierResponseOutput {
	return o
}

func (o IdentifierResponseOutput) ToIdentifierResponseOutputWithContext(ctx context.Context) IdentifierResponseOutput {
	return o
}

// Resource Id.
func (o IdentifierResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v IdentifierResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Kind of resource.
func (o IdentifierResponseOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentifierResponse) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o IdentifierResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IdentifierResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Identifier resource specific properties
func (o IdentifierResponseOutput) Properties() IdentifierResponsePropertiesPtrOutput {
	return o.ApplyT(func(v IdentifierResponse) *IdentifierResponseProperties { return v.Properties }).(IdentifierResponsePropertiesPtrOutput)
}

// Resource type.
func (o IdentifierResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IdentifierResponse) string { return v.Type }).(pulumi.StringOutput)
}

type IdentifierResponseArrayOutput struct{ *pulumi.OutputState }

func (IdentifierResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentifierResponse)(nil)).Elem()
}

func (o IdentifierResponseArrayOutput) ToIdentifierResponseArrayOutput() IdentifierResponseArrayOutput {
	return o
}

func (o IdentifierResponseArrayOutput) ToIdentifierResponseArrayOutputWithContext(ctx context.Context) IdentifierResponseArrayOutput {
	return o
}

func (o IdentifierResponseArrayOutput) Index(i pulumi.IntInput) IdentifierResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentifierResponse {
		return vs[0].([]IdentifierResponse)[vs[1].(int)]
	}).(IdentifierResponseOutput)
}

// Identifier resource specific properties
type IdentifierResponseProperties struct {
	// String representation of the identity.
	Id *string `pulumi:"id"`
}

// IdentifierResponsePropertiesInput is an input type that accepts IdentifierResponsePropertiesArgs and IdentifierResponsePropertiesOutput values.
// You can construct a concrete instance of `IdentifierResponsePropertiesInput` via:
//
//          IdentifierResponsePropertiesArgs{...}
type IdentifierResponsePropertiesInput interface {
	pulumi.Input

	ToIdentifierResponsePropertiesOutput() IdentifierResponsePropertiesOutput
	ToIdentifierResponsePropertiesOutputWithContext(context.Context) IdentifierResponsePropertiesOutput
}

// Identifier resource specific properties
type IdentifierResponsePropertiesArgs struct {
	// String representation of the identity.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (IdentifierResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentifierResponseProperties)(nil)).Elem()
}

func (i IdentifierResponsePropertiesArgs) ToIdentifierResponsePropertiesOutput() IdentifierResponsePropertiesOutput {
	return i.ToIdentifierResponsePropertiesOutputWithContext(context.Background())
}

func (i IdentifierResponsePropertiesArgs) ToIdentifierResponsePropertiesOutputWithContext(ctx context.Context) IdentifierResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentifierResponsePropertiesOutput)
}

func (i IdentifierResponsePropertiesArgs) ToIdentifierResponsePropertiesPtrOutput() IdentifierResponsePropertiesPtrOutput {
	return i.ToIdentifierResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i IdentifierResponsePropertiesArgs) ToIdentifierResponsePropertiesPtrOutputWithContext(ctx context.Context) IdentifierResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentifierResponsePropertiesOutput).ToIdentifierResponsePropertiesPtrOutputWithContext(ctx)
}

// IdentifierResponsePropertiesPtrInput is an input type that accepts IdentifierResponsePropertiesArgs, IdentifierResponsePropertiesPtr and IdentifierResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `IdentifierResponsePropertiesPtrInput` via:
//
//          IdentifierResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type IdentifierResponsePropertiesPtrInput interface {
	pulumi.Input

	ToIdentifierResponsePropertiesPtrOutput() IdentifierResponsePropertiesPtrOutput
	ToIdentifierResponsePropertiesPtrOutputWithContext(context.Context) IdentifierResponsePropertiesPtrOutput
}

type identifierResponsePropertiesPtrType IdentifierResponsePropertiesArgs

func IdentifierResponsePropertiesPtr(v *IdentifierResponsePropertiesArgs) IdentifierResponsePropertiesPtrInput {
	return (*identifierResponsePropertiesPtrType)(v)
}

func (*identifierResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentifierResponseProperties)(nil)).Elem()
}

func (i *identifierResponsePropertiesPtrType) ToIdentifierResponsePropertiesPtrOutput() IdentifierResponsePropertiesPtrOutput {
	return i.ToIdentifierResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *identifierResponsePropertiesPtrType) ToIdentifierResponsePropertiesPtrOutputWithContext(ctx context.Context) IdentifierResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentifierResponsePropertiesPtrOutput)
}

// Identifier resource specific properties
type IdentifierResponsePropertiesOutput struct{ *pulumi.OutputState }

func (IdentifierResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentifierResponseProperties)(nil)).Elem()
}

func (o IdentifierResponsePropertiesOutput) ToIdentifierResponsePropertiesOutput() IdentifierResponsePropertiesOutput {
	return o
}

func (o IdentifierResponsePropertiesOutput) ToIdentifierResponsePropertiesOutputWithContext(ctx context.Context) IdentifierResponsePropertiesOutput {
	return o
}

func (o IdentifierResponsePropertiesOutput) ToIdentifierResponsePropertiesPtrOutput() IdentifierResponsePropertiesPtrOutput {
	return o.ToIdentifierResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o IdentifierResponsePropertiesOutput) ToIdentifierResponsePropertiesPtrOutputWithContext(ctx context.Context) IdentifierResponsePropertiesPtrOutput {
	return o.ApplyT(func(v IdentifierResponseProperties) *IdentifierResponseProperties {
		return &v
	}).(IdentifierResponsePropertiesPtrOutput)
}

// String representation of the identity.
func (o IdentifierResponsePropertiesOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentifierResponseProperties) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type IdentifierResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (IdentifierResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentifierResponseProperties)(nil)).Elem()
}

func (o IdentifierResponsePropertiesPtrOutput) ToIdentifierResponsePropertiesPtrOutput() IdentifierResponsePropertiesPtrOutput {
	return o
}

func (o IdentifierResponsePropertiesPtrOutput) ToIdentifierResponsePropertiesPtrOutputWithContext(ctx context.Context) IdentifierResponsePropertiesPtrOutput {
	return o
}

func (o IdentifierResponsePropertiesPtrOutput) Elem() IdentifierResponsePropertiesOutput {
	return o.ApplyT(func(v *IdentifierResponseProperties) IdentifierResponseProperties { return *v }).(IdentifierResponsePropertiesOutput)
}

// String representation of the identity.
func (o IdentifierResponsePropertiesPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentifierResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// IP security restriction on an app.
type IpSecurityRestriction struct {
	// Allow or Deny access for this IP range.
	Action *string `pulumi:"action"`
	// IP restriction rule description.
	Description *string `pulumi:"description"`
	// IP address the security restriction is valid for.
	// It can be in form of pure ipv4 address (required SubnetMask property) or
	// CIDR notation such as ipv4/mask (leading bit match). For CIDR,
	// SubnetMask property must not be specified.
	IpAddress *string `pulumi:"ipAddress"`
	// IP restriction rule name.
	Name *string `pulumi:"name"`
	// Priority of IP restriction rule.
	Priority *int `pulumi:"priority"`
	// Subnet mask for the range of IP addresses the restriction is valid for.
	SubnetMask *string `pulumi:"subnetMask"`
	// (internal) Subnet traffic tag
	SubnetTrafficTag *int `pulumi:"subnetTrafficTag"`
	// Defines what this IP filter will be used for. This is to support IP filtering on proxies.
	Tag *string `pulumi:"tag"`
	// Virtual network resource id
	VnetSubnetResourceId *string `pulumi:"vnetSubnetResourceId"`
	// (internal) Vnet traffic tag
	VnetTrafficTag *int `pulumi:"vnetTrafficTag"`
}

// IpSecurityRestrictionInput is an input type that accepts IpSecurityRestrictionArgs and IpSecurityRestrictionOutput values.
// You can construct a concrete instance of `IpSecurityRestrictionInput` via:
//
//          IpSecurityRestrictionArgs{...}
type IpSecurityRestrictionInput interface {
	pulumi.Input

	ToIpSecurityRestrictionOutput() IpSecurityRestrictionOutput
	ToIpSecurityRestrictionOutputWithContext(context.Context) IpSecurityRestrictionOutput
}

// IP security restriction on an app.
type IpSecurityRestrictionArgs struct {
	// Allow or Deny access for this IP range.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// IP restriction rule description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// IP address the security restriction is valid for.
	// It can be in form of pure ipv4 address (required SubnetMask property) or
	// CIDR notation such as ipv4/mask (leading bit match). For CIDR,
	// SubnetMask property must not be specified.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// IP restriction rule name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Priority of IP restriction rule.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Subnet mask for the range of IP addresses the restriction is valid for.
	SubnetMask pulumi.StringPtrInput `pulumi:"subnetMask"`
	// (internal) Subnet traffic tag
	SubnetTrafficTag pulumi.IntPtrInput `pulumi:"subnetTrafficTag"`
	// Defines what this IP filter will be used for. This is to support IP filtering on proxies.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
	// Virtual network resource id
	VnetSubnetResourceId pulumi.StringPtrInput `pulumi:"vnetSubnetResourceId"`
	// (internal) Vnet traffic tag
	VnetTrafficTag pulumi.IntPtrInput `pulumi:"vnetTrafficTag"`
}

func (IpSecurityRestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSecurityRestriction)(nil)).Elem()
}

func (i IpSecurityRestrictionArgs) ToIpSecurityRestrictionOutput() IpSecurityRestrictionOutput {
	return i.ToIpSecurityRestrictionOutputWithContext(context.Background())
}

func (i IpSecurityRestrictionArgs) ToIpSecurityRestrictionOutputWithContext(ctx context.Context) IpSecurityRestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpSecurityRestrictionOutput)
}

// IpSecurityRestrictionArrayInput is an input type that accepts IpSecurityRestrictionArray and IpSecurityRestrictionArrayOutput values.
// You can construct a concrete instance of `IpSecurityRestrictionArrayInput` via:
//
//          IpSecurityRestrictionArray{ IpSecurityRestrictionArgs{...} }
type IpSecurityRestrictionArrayInput interface {
	pulumi.Input

	ToIpSecurityRestrictionArrayOutput() IpSecurityRestrictionArrayOutput
	ToIpSecurityRestrictionArrayOutputWithContext(context.Context) IpSecurityRestrictionArrayOutput
}

type IpSecurityRestrictionArray []IpSecurityRestrictionInput

func (IpSecurityRestrictionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpSecurityRestriction)(nil)).Elem()
}

func (i IpSecurityRestrictionArray) ToIpSecurityRestrictionArrayOutput() IpSecurityRestrictionArrayOutput {
	return i.ToIpSecurityRestrictionArrayOutputWithContext(context.Background())
}

func (i IpSecurityRestrictionArray) ToIpSecurityRestrictionArrayOutputWithContext(ctx context.Context) IpSecurityRestrictionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpSecurityRestrictionArrayOutput)
}

// IP security restriction on an app.
type IpSecurityRestrictionOutput struct{ *pulumi.OutputState }

func (IpSecurityRestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSecurityRestriction)(nil)).Elem()
}

func (o IpSecurityRestrictionOutput) ToIpSecurityRestrictionOutput() IpSecurityRestrictionOutput {
	return o
}

func (o IpSecurityRestrictionOutput) ToIpSecurityRestrictionOutputWithContext(ctx context.Context) IpSecurityRestrictionOutput {
	return o
}

// Allow or Deny access for this IP range.
func (o IpSecurityRestrictionOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestriction) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// IP restriction rule description.
func (o IpSecurityRestrictionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestriction) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// IP address the security restriction is valid for.
// It can be in form of pure ipv4 address (required SubnetMask property) or
// CIDR notation such as ipv4/mask (leading bit match). For CIDR,
// SubnetMask property must not be specified.
func (o IpSecurityRestrictionOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestriction) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// IP restriction rule name.
func (o IpSecurityRestrictionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestriction) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of IP restriction rule.
func (o IpSecurityRestrictionOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpSecurityRestriction) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Subnet mask for the range of IP addresses the restriction is valid for.
func (o IpSecurityRestrictionOutput) SubnetMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestriction) *string { return v.SubnetMask }).(pulumi.StringPtrOutput)
}

// (internal) Subnet traffic tag
func (o IpSecurityRestrictionOutput) SubnetTrafficTag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpSecurityRestriction) *int { return v.SubnetTrafficTag }).(pulumi.IntPtrOutput)
}

// Defines what this IP filter will be used for. This is to support IP filtering on proxies.
func (o IpSecurityRestrictionOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestriction) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

// Virtual network resource id
func (o IpSecurityRestrictionOutput) VnetSubnetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestriction) *string { return v.VnetSubnetResourceId }).(pulumi.StringPtrOutput)
}

// (internal) Vnet traffic tag
func (o IpSecurityRestrictionOutput) VnetTrafficTag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpSecurityRestriction) *int { return v.VnetTrafficTag }).(pulumi.IntPtrOutput)
}

type IpSecurityRestrictionArrayOutput struct{ *pulumi.OutputState }

func (IpSecurityRestrictionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpSecurityRestriction)(nil)).Elem()
}

func (o IpSecurityRestrictionArrayOutput) ToIpSecurityRestrictionArrayOutput() IpSecurityRestrictionArrayOutput {
	return o
}

func (o IpSecurityRestrictionArrayOutput) ToIpSecurityRestrictionArrayOutputWithContext(ctx context.Context) IpSecurityRestrictionArrayOutput {
	return o
}

func (o IpSecurityRestrictionArrayOutput) Index(i pulumi.IntInput) IpSecurityRestrictionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpSecurityRestriction {
		return vs[0].([]IpSecurityRestriction)[vs[1].(int)]
	}).(IpSecurityRestrictionOutput)
}

// IP security restriction on an app.
type IpSecurityRestrictionResponse struct {
	// Allow or Deny access for this IP range.
	Action *string `pulumi:"action"`
	// IP restriction rule description.
	Description *string `pulumi:"description"`
	// IP address the security restriction is valid for.
	// It can be in form of pure ipv4 address (required SubnetMask property) or
	// CIDR notation such as ipv4/mask (leading bit match). For CIDR,
	// SubnetMask property must not be specified.
	IpAddress *string `pulumi:"ipAddress"`
	// IP restriction rule name.
	Name *string `pulumi:"name"`
	// Priority of IP restriction rule.
	Priority *int `pulumi:"priority"`
	// Subnet mask for the range of IP addresses the restriction is valid for.
	SubnetMask *string `pulumi:"subnetMask"`
	// (internal) Subnet traffic tag
	SubnetTrafficTag *int `pulumi:"subnetTrafficTag"`
	// Defines what this IP filter will be used for. This is to support IP filtering on proxies.
	Tag *string `pulumi:"tag"`
	// Virtual network resource id
	VnetSubnetResourceId *string `pulumi:"vnetSubnetResourceId"`
	// (internal) Vnet traffic tag
	VnetTrafficTag *int `pulumi:"vnetTrafficTag"`
}

// IpSecurityRestrictionResponseInput is an input type that accepts IpSecurityRestrictionResponseArgs and IpSecurityRestrictionResponseOutput values.
// You can construct a concrete instance of `IpSecurityRestrictionResponseInput` via:
//
//          IpSecurityRestrictionResponseArgs{...}
type IpSecurityRestrictionResponseInput interface {
	pulumi.Input

	ToIpSecurityRestrictionResponseOutput() IpSecurityRestrictionResponseOutput
	ToIpSecurityRestrictionResponseOutputWithContext(context.Context) IpSecurityRestrictionResponseOutput
}

// IP security restriction on an app.
type IpSecurityRestrictionResponseArgs struct {
	// Allow or Deny access for this IP range.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// IP restriction rule description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// IP address the security restriction is valid for.
	// It can be in form of pure ipv4 address (required SubnetMask property) or
	// CIDR notation such as ipv4/mask (leading bit match). For CIDR,
	// SubnetMask property must not be specified.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// IP restriction rule name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Priority of IP restriction rule.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Subnet mask for the range of IP addresses the restriction is valid for.
	SubnetMask pulumi.StringPtrInput `pulumi:"subnetMask"`
	// (internal) Subnet traffic tag
	SubnetTrafficTag pulumi.IntPtrInput `pulumi:"subnetTrafficTag"`
	// Defines what this IP filter will be used for. This is to support IP filtering on proxies.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
	// Virtual network resource id
	VnetSubnetResourceId pulumi.StringPtrInput `pulumi:"vnetSubnetResourceId"`
	// (internal) Vnet traffic tag
	VnetTrafficTag pulumi.IntPtrInput `pulumi:"vnetTrafficTag"`
}

func (IpSecurityRestrictionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSecurityRestrictionResponse)(nil)).Elem()
}

func (i IpSecurityRestrictionResponseArgs) ToIpSecurityRestrictionResponseOutput() IpSecurityRestrictionResponseOutput {
	return i.ToIpSecurityRestrictionResponseOutputWithContext(context.Background())
}

func (i IpSecurityRestrictionResponseArgs) ToIpSecurityRestrictionResponseOutputWithContext(ctx context.Context) IpSecurityRestrictionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpSecurityRestrictionResponseOutput)
}

// IpSecurityRestrictionResponseArrayInput is an input type that accepts IpSecurityRestrictionResponseArray and IpSecurityRestrictionResponseArrayOutput values.
// You can construct a concrete instance of `IpSecurityRestrictionResponseArrayInput` via:
//
//          IpSecurityRestrictionResponseArray{ IpSecurityRestrictionResponseArgs{...} }
type IpSecurityRestrictionResponseArrayInput interface {
	pulumi.Input

	ToIpSecurityRestrictionResponseArrayOutput() IpSecurityRestrictionResponseArrayOutput
	ToIpSecurityRestrictionResponseArrayOutputWithContext(context.Context) IpSecurityRestrictionResponseArrayOutput
}

type IpSecurityRestrictionResponseArray []IpSecurityRestrictionResponseInput

func (IpSecurityRestrictionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpSecurityRestrictionResponse)(nil)).Elem()
}

func (i IpSecurityRestrictionResponseArray) ToIpSecurityRestrictionResponseArrayOutput() IpSecurityRestrictionResponseArrayOutput {
	return i.ToIpSecurityRestrictionResponseArrayOutputWithContext(context.Background())
}

func (i IpSecurityRestrictionResponseArray) ToIpSecurityRestrictionResponseArrayOutputWithContext(ctx context.Context) IpSecurityRestrictionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpSecurityRestrictionResponseArrayOutput)
}

// IP security restriction on an app.
type IpSecurityRestrictionResponseOutput struct{ *pulumi.OutputState }

func (IpSecurityRestrictionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSecurityRestrictionResponse)(nil)).Elem()
}

func (o IpSecurityRestrictionResponseOutput) ToIpSecurityRestrictionResponseOutput() IpSecurityRestrictionResponseOutput {
	return o
}

func (o IpSecurityRestrictionResponseOutput) ToIpSecurityRestrictionResponseOutputWithContext(ctx context.Context) IpSecurityRestrictionResponseOutput {
	return o
}

// Allow or Deny access for this IP range.
func (o IpSecurityRestrictionResponseOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionResponse) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// IP restriction rule description.
func (o IpSecurityRestrictionResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// IP address the security restriction is valid for.
// It can be in form of pure ipv4 address (required SubnetMask property) or
// CIDR notation such as ipv4/mask (leading bit match). For CIDR,
// SubnetMask property must not be specified.
func (o IpSecurityRestrictionResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// IP restriction rule name.
func (o IpSecurityRestrictionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of IP restriction rule.
func (o IpSecurityRestrictionResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Subnet mask for the range of IP addresses the restriction is valid for.
func (o IpSecurityRestrictionResponseOutput) SubnetMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionResponse) *string { return v.SubnetMask }).(pulumi.StringPtrOutput)
}

// (internal) Subnet traffic tag
func (o IpSecurityRestrictionResponseOutput) SubnetTrafficTag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionResponse) *int { return v.SubnetTrafficTag }).(pulumi.IntPtrOutput)
}

// Defines what this IP filter will be used for. This is to support IP filtering on proxies.
func (o IpSecurityRestrictionResponseOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionResponse) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

// Virtual network resource id
func (o IpSecurityRestrictionResponseOutput) VnetSubnetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionResponse) *string { return v.VnetSubnetResourceId }).(pulumi.StringPtrOutput)
}

// (internal) Vnet traffic tag
func (o IpSecurityRestrictionResponseOutput) VnetTrafficTag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionResponse) *int { return v.VnetTrafficTag }).(pulumi.IntPtrOutput)
}

type IpSecurityRestrictionResponseArrayOutput struct{ *pulumi.OutputState }

func (IpSecurityRestrictionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpSecurityRestrictionResponse)(nil)).Elem()
}

func (o IpSecurityRestrictionResponseArrayOutput) ToIpSecurityRestrictionResponseArrayOutput() IpSecurityRestrictionResponseArrayOutput {
	return o
}

func (o IpSecurityRestrictionResponseArrayOutput) ToIpSecurityRestrictionResponseArrayOutputWithContext(ctx context.Context) IpSecurityRestrictionResponseArrayOutput {
	return o
}

func (o IpSecurityRestrictionResponseArrayOutput) Index(i pulumi.IntInput) IpSecurityRestrictionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpSecurityRestrictionResponse {
		return vs[0].([]IpSecurityRestrictionResponse)[vs[1].(int)]
	}).(IpSecurityRestrictionResponseOutput)
}

// Managed service identity.
type ManagedServiceIdentity struct {
	// Type of managed service identity.
	Type *string `pulumi:"type"`
	// The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
	UserAssignedIdentities map[string]ManagedServiceIdentityProperties `pulumi:"userAssignedIdentities"`
}

// ManagedServiceIdentityInput is an input type that accepts ManagedServiceIdentityArgs and ManagedServiceIdentityOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityInput` via:
//
//          ManagedServiceIdentityArgs{...}
type ManagedServiceIdentityInput interface {
	pulumi.Input

	ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput
	ToManagedServiceIdentityOutputWithContext(context.Context) ManagedServiceIdentityOutput
}

// Managed service identity.
type ManagedServiceIdentityArgs struct {
	// Type of managed service identity.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
	UserAssignedIdentities ManagedServiceIdentityPropertiesMapInput `pulumi:"userAssignedIdentities"`
}

func (ManagedServiceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return i.ToManagedServiceIdentityOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput)
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput).ToManagedServiceIdentityPtrOutputWithContext(ctx)
}

// ManagedServiceIdentityPtrInput is an input type that accepts ManagedServiceIdentityArgs, ManagedServiceIdentityPtr and ManagedServiceIdentityPtrOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityPtrInput` via:
//
//          ManagedServiceIdentityArgs{...}
//
//  or:
//
//          nil
type ManagedServiceIdentityPtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput
	ToManagedServiceIdentityPtrOutputWithContext(context.Context) ManagedServiceIdentityPtrOutput
}

type managedServiceIdentityPtrType ManagedServiceIdentityArgs

func ManagedServiceIdentityPtr(v *ManagedServiceIdentityArgs) ManagedServiceIdentityPtrInput {
	return (*managedServiceIdentityPtrType)(v)
}

func (*managedServiceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityPtrOutput)
}

// Managed service identity.
type ManagedServiceIdentityOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) *ManagedServiceIdentity {
		return &v
	}).(ManagedServiceIdentityPtrOutput)
}

// Type of managed service identity.
func (o ManagedServiceIdentityOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
func (o ManagedServiceIdentityOutput) UserAssignedIdentities() ManagedServiceIdentityPropertiesMapOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) map[string]ManagedServiceIdentityProperties {
		return v.UserAssignedIdentities
	}).(ManagedServiceIdentityPropertiesMapOutput)
}

type ManagedServiceIdentityPtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) Elem() ManagedServiceIdentityOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) ManagedServiceIdentity { return *v }).(ManagedServiceIdentityOutput)
}

// Type of managed service identity.
func (o ManagedServiceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
func (o ManagedServiceIdentityPtrOutput) UserAssignedIdentities() ManagedServiceIdentityPropertiesMapOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) map[string]ManagedServiceIdentityProperties {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(ManagedServiceIdentityPropertiesMapOutput)
}

type ManagedServiceIdentityProperties struct {
}

// ManagedServiceIdentityPropertiesInput is an input type that accepts ManagedServiceIdentityPropertiesArgs and ManagedServiceIdentityPropertiesOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityPropertiesInput` via:
//
//          ManagedServiceIdentityPropertiesArgs{...}
type ManagedServiceIdentityPropertiesInput interface {
	pulumi.Input

	ToManagedServiceIdentityPropertiesOutput() ManagedServiceIdentityPropertiesOutput
	ToManagedServiceIdentityPropertiesOutputWithContext(context.Context) ManagedServiceIdentityPropertiesOutput
}

type ManagedServiceIdentityPropertiesArgs struct {
}

func (ManagedServiceIdentityPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityProperties)(nil)).Elem()
}

func (i ManagedServiceIdentityPropertiesArgs) ToManagedServiceIdentityPropertiesOutput() ManagedServiceIdentityPropertiesOutput {
	return i.ToManagedServiceIdentityPropertiesOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityPropertiesArgs) ToManagedServiceIdentityPropertiesOutputWithContext(ctx context.Context) ManagedServiceIdentityPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityPropertiesOutput)
}

// ManagedServiceIdentityPropertiesMapInput is an input type that accepts ManagedServiceIdentityPropertiesMap and ManagedServiceIdentityPropertiesMapOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityPropertiesMapInput` via:
//
//          ManagedServiceIdentityPropertiesMap{ "key": ManagedServiceIdentityPropertiesArgs{...} }
type ManagedServiceIdentityPropertiesMapInput interface {
	pulumi.Input

	ToManagedServiceIdentityPropertiesMapOutput() ManagedServiceIdentityPropertiesMapOutput
	ToManagedServiceIdentityPropertiesMapOutputWithContext(context.Context) ManagedServiceIdentityPropertiesMapOutput
}

type ManagedServiceIdentityPropertiesMap map[string]ManagedServiceIdentityPropertiesInput

func (ManagedServiceIdentityPropertiesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ManagedServiceIdentityProperties)(nil)).Elem()
}

func (i ManagedServiceIdentityPropertiesMap) ToManagedServiceIdentityPropertiesMapOutput() ManagedServiceIdentityPropertiesMapOutput {
	return i.ToManagedServiceIdentityPropertiesMapOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityPropertiesMap) ToManagedServiceIdentityPropertiesMapOutputWithContext(ctx context.Context) ManagedServiceIdentityPropertiesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityPropertiesMapOutput)
}

type ManagedServiceIdentityPropertiesOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityProperties)(nil)).Elem()
}

func (o ManagedServiceIdentityPropertiesOutput) ToManagedServiceIdentityPropertiesOutput() ManagedServiceIdentityPropertiesOutput {
	return o
}

func (o ManagedServiceIdentityPropertiesOutput) ToManagedServiceIdentityPropertiesOutputWithContext(ctx context.Context) ManagedServiceIdentityPropertiesOutput {
	return o
}

type ManagedServiceIdentityPropertiesMapOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityPropertiesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ManagedServiceIdentityProperties)(nil)).Elem()
}

func (o ManagedServiceIdentityPropertiesMapOutput) ToManagedServiceIdentityPropertiesMapOutput() ManagedServiceIdentityPropertiesMapOutput {
	return o
}

func (o ManagedServiceIdentityPropertiesMapOutput) ToManagedServiceIdentityPropertiesMapOutputWithContext(ctx context.Context) ManagedServiceIdentityPropertiesMapOutput {
	return o
}

func (o ManagedServiceIdentityPropertiesMapOutput) MapIndex(k pulumi.StringInput) ManagedServiceIdentityPropertiesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ManagedServiceIdentityProperties {
		return vs[0].(map[string]ManagedServiceIdentityProperties)[vs[1].(string)]
	}).(ManagedServiceIdentityPropertiesOutput)
}

// Managed service identity.
type ManagedServiceIdentityResponse struct {
	// Principal Id of managed service identity.
	PrincipalId string `pulumi:"principalId"`
	// Tenant of managed service identity.
	TenantId string `pulumi:"tenantId"`
	// Type of managed service identity.
	Type *string `pulumi:"type"`
	// The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
	UserAssignedIdentities map[string]ManagedServiceIdentityResponseProperties `pulumi:"userAssignedIdentities"`
}

// ManagedServiceIdentityResponseInput is an input type that accepts ManagedServiceIdentityResponseArgs and ManagedServiceIdentityResponseOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityResponseInput` via:
//
//          ManagedServiceIdentityResponseArgs{...}
type ManagedServiceIdentityResponseInput interface {
	pulumi.Input

	ToManagedServiceIdentityResponseOutput() ManagedServiceIdentityResponseOutput
	ToManagedServiceIdentityResponseOutputWithContext(context.Context) ManagedServiceIdentityResponseOutput
}

// Managed service identity.
type ManagedServiceIdentityResponseArgs struct {
	// Principal Id of managed service identity.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// Tenant of managed service identity.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// Type of managed service identity.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
	UserAssignedIdentities ManagedServiceIdentityResponsePropertiesMapInput `pulumi:"userAssignedIdentities"`
}

func (ManagedServiceIdentityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityResponse)(nil)).Elem()
}

func (i ManagedServiceIdentityResponseArgs) ToManagedServiceIdentityResponseOutput() ManagedServiceIdentityResponseOutput {
	return i.ToManagedServiceIdentityResponseOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityResponseArgs) ToManagedServiceIdentityResponseOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityResponseOutput)
}

func (i ManagedServiceIdentityResponseArgs) ToManagedServiceIdentityResponsePtrOutput() ManagedServiceIdentityResponsePtrOutput {
	return i.ToManagedServiceIdentityResponsePtrOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityResponseArgs) ToManagedServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityResponseOutput).ToManagedServiceIdentityResponsePtrOutputWithContext(ctx)
}

// ManagedServiceIdentityResponsePtrInput is an input type that accepts ManagedServiceIdentityResponseArgs, ManagedServiceIdentityResponsePtr and ManagedServiceIdentityResponsePtrOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityResponsePtrInput` via:
//
//          ManagedServiceIdentityResponseArgs{...}
//
//  or:
//
//          nil
type ManagedServiceIdentityResponsePtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityResponsePtrOutput() ManagedServiceIdentityResponsePtrOutput
	ToManagedServiceIdentityResponsePtrOutputWithContext(context.Context) ManagedServiceIdentityResponsePtrOutput
}

type managedServiceIdentityResponsePtrType ManagedServiceIdentityResponseArgs

func ManagedServiceIdentityResponsePtr(v *ManagedServiceIdentityResponseArgs) ManagedServiceIdentityResponsePtrInput {
	return (*managedServiceIdentityResponsePtrType)(v)
}

func (*managedServiceIdentityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityResponse)(nil)).Elem()
}

func (i *managedServiceIdentityResponsePtrType) ToManagedServiceIdentityResponsePtrOutput() ManagedServiceIdentityResponsePtrOutput {
	return i.ToManagedServiceIdentityResponsePtrOutputWithContext(context.Background())
}

func (i *managedServiceIdentityResponsePtrType) ToManagedServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityResponsePtrOutput)
}

// Managed service identity.
type ManagedServiceIdentityResponseOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutput() ManagedServiceIdentityResponseOutput {
	return o
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseOutput {
	return o
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponsePtrOutput() ManagedServiceIdentityResponsePtrOutput {
	return o.ToManagedServiceIdentityResponsePtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityResponsePtrOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) *ManagedServiceIdentityResponse {
		return &v
	}).(ManagedServiceIdentityResponsePtrOutput)
}

// Principal Id of managed service identity.
func (o ManagedServiceIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// Tenant of managed service identity.
func (o ManagedServiceIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Type of managed service identity.
func (o ManagedServiceIdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
func (o ManagedServiceIdentityResponseOutput) UserAssignedIdentities() ManagedServiceIdentityResponsePropertiesMapOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) map[string]ManagedServiceIdentityResponseProperties {
		return v.UserAssignedIdentities
	}).(ManagedServiceIdentityResponsePropertiesMapOutput)
}

type ManagedServiceIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutput() ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) Elem() ManagedServiceIdentityResponseOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) ManagedServiceIdentityResponse { return *v }).(ManagedServiceIdentityResponseOutput)
}

// Principal Id of managed service identity.
func (o ManagedServiceIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// Tenant of managed service identity.
func (o ManagedServiceIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Type of managed service identity.
func (o ManagedServiceIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
func (o ManagedServiceIdentityResponsePtrOutput) UserAssignedIdentities() ManagedServiceIdentityResponsePropertiesMapOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) map[string]ManagedServiceIdentityResponseProperties {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(ManagedServiceIdentityResponsePropertiesMapOutput)
}

type ManagedServiceIdentityResponseProperties struct {
	// Client Id of user assigned identity
	ClientId string `pulumi:"clientId"`
	// Principal Id of user assigned identity
	PrincipalId string `pulumi:"principalId"`
}

// ManagedServiceIdentityResponsePropertiesInput is an input type that accepts ManagedServiceIdentityResponsePropertiesArgs and ManagedServiceIdentityResponsePropertiesOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityResponsePropertiesInput` via:
//
//          ManagedServiceIdentityResponsePropertiesArgs{...}
type ManagedServiceIdentityResponsePropertiesInput interface {
	pulumi.Input

	ToManagedServiceIdentityResponsePropertiesOutput() ManagedServiceIdentityResponsePropertiesOutput
	ToManagedServiceIdentityResponsePropertiesOutputWithContext(context.Context) ManagedServiceIdentityResponsePropertiesOutput
}

type ManagedServiceIdentityResponsePropertiesArgs struct {
	// Client Id of user assigned identity
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// Principal Id of user assigned identity
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
}

func (ManagedServiceIdentityResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityResponseProperties)(nil)).Elem()
}

func (i ManagedServiceIdentityResponsePropertiesArgs) ToManagedServiceIdentityResponsePropertiesOutput() ManagedServiceIdentityResponsePropertiesOutput {
	return i.ToManagedServiceIdentityResponsePropertiesOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityResponsePropertiesArgs) ToManagedServiceIdentityResponsePropertiesOutputWithContext(ctx context.Context) ManagedServiceIdentityResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityResponsePropertiesOutput)
}

// ManagedServiceIdentityResponsePropertiesMapInput is an input type that accepts ManagedServiceIdentityResponsePropertiesMap and ManagedServiceIdentityResponsePropertiesMapOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityResponsePropertiesMapInput` via:
//
//          ManagedServiceIdentityResponsePropertiesMap{ "key": ManagedServiceIdentityResponsePropertiesArgs{...} }
type ManagedServiceIdentityResponsePropertiesMapInput interface {
	pulumi.Input

	ToManagedServiceIdentityResponsePropertiesMapOutput() ManagedServiceIdentityResponsePropertiesMapOutput
	ToManagedServiceIdentityResponsePropertiesMapOutputWithContext(context.Context) ManagedServiceIdentityResponsePropertiesMapOutput
}

type ManagedServiceIdentityResponsePropertiesMap map[string]ManagedServiceIdentityResponsePropertiesInput

func (ManagedServiceIdentityResponsePropertiesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ManagedServiceIdentityResponseProperties)(nil)).Elem()
}

func (i ManagedServiceIdentityResponsePropertiesMap) ToManagedServiceIdentityResponsePropertiesMapOutput() ManagedServiceIdentityResponsePropertiesMapOutput {
	return i.ToManagedServiceIdentityResponsePropertiesMapOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityResponsePropertiesMap) ToManagedServiceIdentityResponsePropertiesMapOutputWithContext(ctx context.Context) ManagedServiceIdentityResponsePropertiesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityResponsePropertiesMapOutput)
}

type ManagedServiceIdentityResponsePropertiesOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityResponseProperties)(nil)).Elem()
}

func (o ManagedServiceIdentityResponsePropertiesOutput) ToManagedServiceIdentityResponsePropertiesOutput() ManagedServiceIdentityResponsePropertiesOutput {
	return o
}

func (o ManagedServiceIdentityResponsePropertiesOutput) ToManagedServiceIdentityResponsePropertiesOutputWithContext(ctx context.Context) ManagedServiceIdentityResponsePropertiesOutput {
	return o
}

// Client Id of user assigned identity
func (o ManagedServiceIdentityResponsePropertiesOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponseProperties) string { return v.ClientId }).(pulumi.StringOutput)
}

// Principal Id of user assigned identity
func (o ManagedServiceIdentityResponsePropertiesOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponseProperties) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type ManagedServiceIdentityResponsePropertiesMapOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponsePropertiesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ManagedServiceIdentityResponseProperties)(nil)).Elem()
}

func (o ManagedServiceIdentityResponsePropertiesMapOutput) ToManagedServiceIdentityResponsePropertiesMapOutput() ManagedServiceIdentityResponsePropertiesMapOutput {
	return o
}

func (o ManagedServiceIdentityResponsePropertiesMapOutput) ToManagedServiceIdentityResponsePropertiesMapOutputWithContext(ctx context.Context) ManagedServiceIdentityResponsePropertiesMapOutput {
	return o
}

func (o ManagedServiceIdentityResponsePropertiesMapOutput) MapIndex(k pulumi.StringInput) ManagedServiceIdentityResponsePropertiesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ManagedServiceIdentityResponseProperties {
		return vs[0].(map[string]ManagedServiceIdentityResponseProperties)[vs[1].(string)]
	}).(ManagedServiceIdentityResponsePropertiesOutput)
}

// Name value pair.
type NameValuePair struct {
	// Pair name.
	Name *string `pulumi:"name"`
	// Pair value.
	Value *string `pulumi:"value"`
}

// NameValuePairInput is an input type that accepts NameValuePairArgs and NameValuePairOutput values.
// You can construct a concrete instance of `NameValuePairInput` via:
//
//          NameValuePairArgs{...}
type NameValuePairInput interface {
	pulumi.Input

	ToNameValuePairOutput() NameValuePairOutput
	ToNameValuePairOutputWithContext(context.Context) NameValuePairOutput
}

// Name value pair.
type NameValuePairArgs struct {
	// Pair name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Pair value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NameValuePairArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NameValuePair)(nil)).Elem()
}

func (i NameValuePairArgs) ToNameValuePairOutput() NameValuePairOutput {
	return i.ToNameValuePairOutputWithContext(context.Background())
}

func (i NameValuePairArgs) ToNameValuePairOutputWithContext(ctx context.Context) NameValuePairOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NameValuePairOutput)
}

// NameValuePairArrayInput is an input type that accepts NameValuePairArray and NameValuePairArrayOutput values.
// You can construct a concrete instance of `NameValuePairArrayInput` via:
//
//          NameValuePairArray{ NameValuePairArgs{...} }
type NameValuePairArrayInput interface {
	pulumi.Input

	ToNameValuePairArrayOutput() NameValuePairArrayOutput
	ToNameValuePairArrayOutputWithContext(context.Context) NameValuePairArrayOutput
}

type NameValuePairArray []NameValuePairInput

func (NameValuePairArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NameValuePair)(nil)).Elem()
}

func (i NameValuePairArray) ToNameValuePairArrayOutput() NameValuePairArrayOutput {
	return i.ToNameValuePairArrayOutputWithContext(context.Background())
}

func (i NameValuePairArray) ToNameValuePairArrayOutputWithContext(ctx context.Context) NameValuePairArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NameValuePairArrayOutput)
}

// Name value pair.
type NameValuePairOutput struct{ *pulumi.OutputState }

func (NameValuePairOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NameValuePair)(nil)).Elem()
}

func (o NameValuePairOutput) ToNameValuePairOutput() NameValuePairOutput {
	return o
}

func (o NameValuePairOutput) ToNameValuePairOutputWithContext(ctx context.Context) NameValuePairOutput {
	return o
}

// Pair name.
func (o NameValuePairOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NameValuePair) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Pair value.
func (o NameValuePairOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NameValuePair) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NameValuePairArrayOutput struct{ *pulumi.OutputState }

func (NameValuePairArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NameValuePair)(nil)).Elem()
}

func (o NameValuePairArrayOutput) ToNameValuePairArrayOutput() NameValuePairArrayOutput {
	return o
}

func (o NameValuePairArrayOutput) ToNameValuePairArrayOutputWithContext(ctx context.Context) NameValuePairArrayOutput {
	return o
}

func (o NameValuePairArrayOutput) Index(i pulumi.IntInput) NameValuePairOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NameValuePair {
		return vs[0].([]NameValuePair)[vs[1].(int)]
	}).(NameValuePairOutput)
}

// Name value pair.
type NameValuePairResponse struct {
	// Pair name.
	Name *string `pulumi:"name"`
	// Pair value.
	Value *string `pulumi:"value"`
}

// NameValuePairResponseInput is an input type that accepts NameValuePairResponseArgs and NameValuePairResponseOutput values.
// You can construct a concrete instance of `NameValuePairResponseInput` via:
//
//          NameValuePairResponseArgs{...}
type NameValuePairResponseInput interface {
	pulumi.Input

	ToNameValuePairResponseOutput() NameValuePairResponseOutput
	ToNameValuePairResponseOutputWithContext(context.Context) NameValuePairResponseOutput
}

// Name value pair.
type NameValuePairResponseArgs struct {
	// Pair name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Pair value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NameValuePairResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NameValuePairResponse)(nil)).Elem()
}

func (i NameValuePairResponseArgs) ToNameValuePairResponseOutput() NameValuePairResponseOutput {
	return i.ToNameValuePairResponseOutputWithContext(context.Background())
}

func (i NameValuePairResponseArgs) ToNameValuePairResponseOutputWithContext(ctx context.Context) NameValuePairResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NameValuePairResponseOutput)
}

// NameValuePairResponseArrayInput is an input type that accepts NameValuePairResponseArray and NameValuePairResponseArrayOutput values.
// You can construct a concrete instance of `NameValuePairResponseArrayInput` via:
//
//          NameValuePairResponseArray{ NameValuePairResponseArgs{...} }
type NameValuePairResponseArrayInput interface {
	pulumi.Input

	ToNameValuePairResponseArrayOutput() NameValuePairResponseArrayOutput
	ToNameValuePairResponseArrayOutputWithContext(context.Context) NameValuePairResponseArrayOutput
}

type NameValuePairResponseArray []NameValuePairResponseInput

func (NameValuePairResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NameValuePairResponse)(nil)).Elem()
}

func (i NameValuePairResponseArray) ToNameValuePairResponseArrayOutput() NameValuePairResponseArrayOutput {
	return i.ToNameValuePairResponseArrayOutputWithContext(context.Background())
}

func (i NameValuePairResponseArray) ToNameValuePairResponseArrayOutputWithContext(ctx context.Context) NameValuePairResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NameValuePairResponseArrayOutput)
}

// Name value pair.
type NameValuePairResponseOutput struct{ *pulumi.OutputState }

func (NameValuePairResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NameValuePairResponse)(nil)).Elem()
}

func (o NameValuePairResponseOutput) ToNameValuePairResponseOutput() NameValuePairResponseOutput {
	return o
}

func (o NameValuePairResponseOutput) ToNameValuePairResponseOutputWithContext(ctx context.Context) NameValuePairResponseOutput {
	return o
}

// Pair name.
func (o NameValuePairResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NameValuePairResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Pair value.
func (o NameValuePairResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NameValuePairResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NameValuePairResponseArrayOutput struct{ *pulumi.OutputState }

func (NameValuePairResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NameValuePairResponse)(nil)).Elem()
}

func (o NameValuePairResponseArrayOutput) ToNameValuePairResponseArrayOutput() NameValuePairResponseArrayOutput {
	return o
}

func (o NameValuePairResponseArrayOutput) ToNameValuePairResponseArrayOutputWithContext(ctx context.Context) NameValuePairResponseArrayOutput {
	return o
}

func (o NameValuePairResponseArrayOutput) Index(i pulumi.IntInput) NameValuePairResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NameValuePairResponse {
		return vs[0].([]NameValuePairResponse)[vs[1].(int)]
	}).(NameValuePairResponseOutput)
}

// Network access control entry.
type NetworkAccessControlEntry struct {
	// Action object.
	Action *string `pulumi:"action"`
	// Description of network access control entry.
	Description *string `pulumi:"description"`
	// Order of precedence.
	Order *int `pulumi:"order"`
	// Remote subnet.
	RemoteSubnet *string `pulumi:"remoteSubnet"`
}

// NetworkAccessControlEntryInput is an input type that accepts NetworkAccessControlEntryArgs and NetworkAccessControlEntryOutput values.
// You can construct a concrete instance of `NetworkAccessControlEntryInput` via:
//
//          NetworkAccessControlEntryArgs{...}
type NetworkAccessControlEntryInput interface {
	pulumi.Input

	ToNetworkAccessControlEntryOutput() NetworkAccessControlEntryOutput
	ToNetworkAccessControlEntryOutputWithContext(context.Context) NetworkAccessControlEntryOutput
}

// Network access control entry.
type NetworkAccessControlEntryArgs struct {
	// Action object.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Description of network access control entry.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Order of precedence.
	Order pulumi.IntPtrInput `pulumi:"order"`
	// Remote subnet.
	RemoteSubnet pulumi.StringPtrInput `pulumi:"remoteSubnet"`
}

func (NetworkAccessControlEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAccessControlEntry)(nil)).Elem()
}

func (i NetworkAccessControlEntryArgs) ToNetworkAccessControlEntryOutput() NetworkAccessControlEntryOutput {
	return i.ToNetworkAccessControlEntryOutputWithContext(context.Background())
}

func (i NetworkAccessControlEntryArgs) ToNetworkAccessControlEntryOutputWithContext(ctx context.Context) NetworkAccessControlEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAccessControlEntryOutput)
}

// NetworkAccessControlEntryArrayInput is an input type that accepts NetworkAccessControlEntryArray and NetworkAccessControlEntryArrayOutput values.
// You can construct a concrete instance of `NetworkAccessControlEntryArrayInput` via:
//
//          NetworkAccessControlEntryArray{ NetworkAccessControlEntryArgs{...} }
type NetworkAccessControlEntryArrayInput interface {
	pulumi.Input

	ToNetworkAccessControlEntryArrayOutput() NetworkAccessControlEntryArrayOutput
	ToNetworkAccessControlEntryArrayOutputWithContext(context.Context) NetworkAccessControlEntryArrayOutput
}

type NetworkAccessControlEntryArray []NetworkAccessControlEntryInput

func (NetworkAccessControlEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAccessControlEntry)(nil)).Elem()
}

func (i NetworkAccessControlEntryArray) ToNetworkAccessControlEntryArrayOutput() NetworkAccessControlEntryArrayOutput {
	return i.ToNetworkAccessControlEntryArrayOutputWithContext(context.Background())
}

func (i NetworkAccessControlEntryArray) ToNetworkAccessControlEntryArrayOutputWithContext(ctx context.Context) NetworkAccessControlEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAccessControlEntryArrayOutput)
}

// Network access control entry.
type NetworkAccessControlEntryOutput struct{ *pulumi.OutputState }

func (NetworkAccessControlEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAccessControlEntry)(nil)).Elem()
}

func (o NetworkAccessControlEntryOutput) ToNetworkAccessControlEntryOutput() NetworkAccessControlEntryOutput {
	return o
}

func (o NetworkAccessControlEntryOutput) ToNetworkAccessControlEntryOutputWithContext(ctx context.Context) NetworkAccessControlEntryOutput {
	return o
}

// Action object.
func (o NetworkAccessControlEntryOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAccessControlEntry) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Description of network access control entry.
func (o NetworkAccessControlEntryOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAccessControlEntry) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Order of precedence.
func (o NetworkAccessControlEntryOutput) Order() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkAccessControlEntry) *int { return v.Order }).(pulumi.IntPtrOutput)
}

// Remote subnet.
func (o NetworkAccessControlEntryOutput) RemoteSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAccessControlEntry) *string { return v.RemoteSubnet }).(pulumi.StringPtrOutput)
}

type NetworkAccessControlEntryArrayOutput struct{ *pulumi.OutputState }

func (NetworkAccessControlEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAccessControlEntry)(nil)).Elem()
}

func (o NetworkAccessControlEntryArrayOutput) ToNetworkAccessControlEntryArrayOutput() NetworkAccessControlEntryArrayOutput {
	return o
}

func (o NetworkAccessControlEntryArrayOutput) ToNetworkAccessControlEntryArrayOutputWithContext(ctx context.Context) NetworkAccessControlEntryArrayOutput {
	return o
}

func (o NetworkAccessControlEntryArrayOutput) Index(i pulumi.IntInput) NetworkAccessControlEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAccessControlEntry {
		return vs[0].([]NetworkAccessControlEntry)[vs[1].(int)]
	}).(NetworkAccessControlEntryOutput)
}

// Network access control entry.
type NetworkAccessControlEntryResponse struct {
	// Action object.
	Action *string `pulumi:"action"`
	// Description of network access control entry.
	Description *string `pulumi:"description"`
	// Order of precedence.
	Order *int `pulumi:"order"`
	// Remote subnet.
	RemoteSubnet *string `pulumi:"remoteSubnet"`
}

// NetworkAccessControlEntryResponseInput is an input type that accepts NetworkAccessControlEntryResponseArgs and NetworkAccessControlEntryResponseOutput values.
// You can construct a concrete instance of `NetworkAccessControlEntryResponseInput` via:
//
//          NetworkAccessControlEntryResponseArgs{...}
type NetworkAccessControlEntryResponseInput interface {
	pulumi.Input

	ToNetworkAccessControlEntryResponseOutput() NetworkAccessControlEntryResponseOutput
	ToNetworkAccessControlEntryResponseOutputWithContext(context.Context) NetworkAccessControlEntryResponseOutput
}

// Network access control entry.
type NetworkAccessControlEntryResponseArgs struct {
	// Action object.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Description of network access control entry.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Order of precedence.
	Order pulumi.IntPtrInput `pulumi:"order"`
	// Remote subnet.
	RemoteSubnet pulumi.StringPtrInput `pulumi:"remoteSubnet"`
}

func (NetworkAccessControlEntryResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAccessControlEntryResponse)(nil)).Elem()
}

func (i NetworkAccessControlEntryResponseArgs) ToNetworkAccessControlEntryResponseOutput() NetworkAccessControlEntryResponseOutput {
	return i.ToNetworkAccessControlEntryResponseOutputWithContext(context.Background())
}

func (i NetworkAccessControlEntryResponseArgs) ToNetworkAccessControlEntryResponseOutputWithContext(ctx context.Context) NetworkAccessControlEntryResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAccessControlEntryResponseOutput)
}

// NetworkAccessControlEntryResponseArrayInput is an input type that accepts NetworkAccessControlEntryResponseArray and NetworkAccessControlEntryResponseArrayOutput values.
// You can construct a concrete instance of `NetworkAccessControlEntryResponseArrayInput` via:
//
//          NetworkAccessControlEntryResponseArray{ NetworkAccessControlEntryResponseArgs{...} }
type NetworkAccessControlEntryResponseArrayInput interface {
	pulumi.Input

	ToNetworkAccessControlEntryResponseArrayOutput() NetworkAccessControlEntryResponseArrayOutput
	ToNetworkAccessControlEntryResponseArrayOutputWithContext(context.Context) NetworkAccessControlEntryResponseArrayOutput
}

type NetworkAccessControlEntryResponseArray []NetworkAccessControlEntryResponseInput

func (NetworkAccessControlEntryResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAccessControlEntryResponse)(nil)).Elem()
}

func (i NetworkAccessControlEntryResponseArray) ToNetworkAccessControlEntryResponseArrayOutput() NetworkAccessControlEntryResponseArrayOutput {
	return i.ToNetworkAccessControlEntryResponseArrayOutputWithContext(context.Background())
}

func (i NetworkAccessControlEntryResponseArray) ToNetworkAccessControlEntryResponseArrayOutputWithContext(ctx context.Context) NetworkAccessControlEntryResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAccessControlEntryResponseArrayOutput)
}

// Network access control entry.
type NetworkAccessControlEntryResponseOutput struct{ *pulumi.OutputState }

func (NetworkAccessControlEntryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAccessControlEntryResponse)(nil)).Elem()
}

func (o NetworkAccessControlEntryResponseOutput) ToNetworkAccessControlEntryResponseOutput() NetworkAccessControlEntryResponseOutput {
	return o
}

func (o NetworkAccessControlEntryResponseOutput) ToNetworkAccessControlEntryResponseOutputWithContext(ctx context.Context) NetworkAccessControlEntryResponseOutput {
	return o
}

// Action object.
func (o NetworkAccessControlEntryResponseOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAccessControlEntryResponse) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Description of network access control entry.
func (o NetworkAccessControlEntryResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAccessControlEntryResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Order of precedence.
func (o NetworkAccessControlEntryResponseOutput) Order() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkAccessControlEntryResponse) *int { return v.Order }).(pulumi.IntPtrOutput)
}

// Remote subnet.
func (o NetworkAccessControlEntryResponseOutput) RemoteSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAccessControlEntryResponse) *string { return v.RemoteSubnet }).(pulumi.StringPtrOutput)
}

type NetworkAccessControlEntryResponseArrayOutput struct{ *pulumi.OutputState }

func (NetworkAccessControlEntryResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAccessControlEntryResponse)(nil)).Elem()
}

func (o NetworkAccessControlEntryResponseArrayOutput) ToNetworkAccessControlEntryResponseArrayOutput() NetworkAccessControlEntryResponseArrayOutput {
	return o
}

func (o NetworkAccessControlEntryResponseArrayOutput) ToNetworkAccessControlEntryResponseArrayOutputWithContext(ctx context.Context) NetworkAccessControlEntryResponseArrayOutput {
	return o
}

func (o NetworkAccessControlEntryResponseArrayOutput) Index(i pulumi.IntInput) NetworkAccessControlEntryResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAccessControlEntryResponse {
		return vs[0].([]NetworkAccessControlEntryResponse)[vs[1].(int)]
	}).(NetworkAccessControlEntryResponseOutput)
}

// PremierAddOn resource specific properties
type PremierAddOnResponseProperties struct {
	// Premier add on Marketplace offer.
	MarketplaceOffer *string `pulumi:"marketplaceOffer"`
	// Premier add on Marketplace publisher.
	MarketplacePublisher *string `pulumi:"marketplacePublisher"`
	// Premier add on Product.
	Product *string `pulumi:"product"`
	// Premier add on SKU.
	Sku *string `pulumi:"sku"`
	// Premier add on Vendor.
	Vendor *string `pulumi:"vendor"`
}

// PremierAddOnResponsePropertiesInput is an input type that accepts PremierAddOnResponsePropertiesArgs and PremierAddOnResponsePropertiesOutput values.
// You can construct a concrete instance of `PremierAddOnResponsePropertiesInput` via:
//
//          PremierAddOnResponsePropertiesArgs{...}
type PremierAddOnResponsePropertiesInput interface {
	pulumi.Input

	ToPremierAddOnResponsePropertiesOutput() PremierAddOnResponsePropertiesOutput
	ToPremierAddOnResponsePropertiesOutputWithContext(context.Context) PremierAddOnResponsePropertiesOutput
}

// PremierAddOn resource specific properties
type PremierAddOnResponsePropertiesArgs struct {
	// Premier add on Marketplace offer.
	MarketplaceOffer pulumi.StringPtrInput `pulumi:"marketplaceOffer"`
	// Premier add on Marketplace publisher.
	MarketplacePublisher pulumi.StringPtrInput `pulumi:"marketplacePublisher"`
	// Premier add on Product.
	Product pulumi.StringPtrInput `pulumi:"product"`
	// Premier add on SKU.
	Sku pulumi.StringPtrInput `pulumi:"sku"`
	// Premier add on Vendor.
	Vendor pulumi.StringPtrInput `pulumi:"vendor"`
}

func (PremierAddOnResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PremierAddOnResponseProperties)(nil)).Elem()
}

func (i PremierAddOnResponsePropertiesArgs) ToPremierAddOnResponsePropertiesOutput() PremierAddOnResponsePropertiesOutput {
	return i.ToPremierAddOnResponsePropertiesOutputWithContext(context.Background())
}

func (i PremierAddOnResponsePropertiesArgs) ToPremierAddOnResponsePropertiesOutputWithContext(ctx context.Context) PremierAddOnResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PremierAddOnResponsePropertiesOutput)
}

func (i PremierAddOnResponsePropertiesArgs) ToPremierAddOnResponsePropertiesPtrOutput() PremierAddOnResponsePropertiesPtrOutput {
	return i.ToPremierAddOnResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i PremierAddOnResponsePropertiesArgs) ToPremierAddOnResponsePropertiesPtrOutputWithContext(ctx context.Context) PremierAddOnResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PremierAddOnResponsePropertiesOutput).ToPremierAddOnResponsePropertiesPtrOutputWithContext(ctx)
}

// PremierAddOnResponsePropertiesPtrInput is an input type that accepts PremierAddOnResponsePropertiesArgs, PremierAddOnResponsePropertiesPtr and PremierAddOnResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `PremierAddOnResponsePropertiesPtrInput` via:
//
//          PremierAddOnResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type PremierAddOnResponsePropertiesPtrInput interface {
	pulumi.Input

	ToPremierAddOnResponsePropertiesPtrOutput() PremierAddOnResponsePropertiesPtrOutput
	ToPremierAddOnResponsePropertiesPtrOutputWithContext(context.Context) PremierAddOnResponsePropertiesPtrOutput
}

type premierAddOnResponsePropertiesPtrType PremierAddOnResponsePropertiesArgs

func PremierAddOnResponsePropertiesPtr(v *PremierAddOnResponsePropertiesArgs) PremierAddOnResponsePropertiesPtrInput {
	return (*premierAddOnResponsePropertiesPtrType)(v)
}

func (*premierAddOnResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PremierAddOnResponseProperties)(nil)).Elem()
}

func (i *premierAddOnResponsePropertiesPtrType) ToPremierAddOnResponsePropertiesPtrOutput() PremierAddOnResponsePropertiesPtrOutput {
	return i.ToPremierAddOnResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *premierAddOnResponsePropertiesPtrType) ToPremierAddOnResponsePropertiesPtrOutputWithContext(ctx context.Context) PremierAddOnResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PremierAddOnResponsePropertiesPtrOutput)
}

// PremierAddOn resource specific properties
type PremierAddOnResponsePropertiesOutput struct{ *pulumi.OutputState }

func (PremierAddOnResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PremierAddOnResponseProperties)(nil)).Elem()
}

func (o PremierAddOnResponsePropertiesOutput) ToPremierAddOnResponsePropertiesOutput() PremierAddOnResponsePropertiesOutput {
	return o
}

func (o PremierAddOnResponsePropertiesOutput) ToPremierAddOnResponsePropertiesOutputWithContext(ctx context.Context) PremierAddOnResponsePropertiesOutput {
	return o
}

func (o PremierAddOnResponsePropertiesOutput) ToPremierAddOnResponsePropertiesPtrOutput() PremierAddOnResponsePropertiesPtrOutput {
	return o.ToPremierAddOnResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o PremierAddOnResponsePropertiesOutput) ToPremierAddOnResponsePropertiesPtrOutputWithContext(ctx context.Context) PremierAddOnResponsePropertiesPtrOutput {
	return o.ApplyT(func(v PremierAddOnResponseProperties) *PremierAddOnResponseProperties {
		return &v
	}).(PremierAddOnResponsePropertiesPtrOutput)
}

// Premier add on Marketplace offer.
func (o PremierAddOnResponsePropertiesOutput) MarketplaceOffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PremierAddOnResponseProperties) *string { return v.MarketplaceOffer }).(pulumi.StringPtrOutput)
}

// Premier add on Marketplace publisher.
func (o PremierAddOnResponsePropertiesOutput) MarketplacePublisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PremierAddOnResponseProperties) *string { return v.MarketplacePublisher }).(pulumi.StringPtrOutput)
}

// Premier add on Product.
func (o PremierAddOnResponsePropertiesOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PremierAddOnResponseProperties) *string { return v.Product }).(pulumi.StringPtrOutput)
}

// Premier add on SKU.
func (o PremierAddOnResponsePropertiesOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PremierAddOnResponseProperties) *string { return v.Sku }).(pulumi.StringPtrOutput)
}

// Premier add on Vendor.
func (o PremierAddOnResponsePropertiesOutput) Vendor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PremierAddOnResponseProperties) *string { return v.Vendor }).(pulumi.StringPtrOutput)
}

type PremierAddOnResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (PremierAddOnResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PremierAddOnResponseProperties)(nil)).Elem()
}

func (o PremierAddOnResponsePropertiesPtrOutput) ToPremierAddOnResponsePropertiesPtrOutput() PremierAddOnResponsePropertiesPtrOutput {
	return o
}

func (o PremierAddOnResponsePropertiesPtrOutput) ToPremierAddOnResponsePropertiesPtrOutputWithContext(ctx context.Context) PremierAddOnResponsePropertiesPtrOutput {
	return o
}

func (o PremierAddOnResponsePropertiesPtrOutput) Elem() PremierAddOnResponsePropertiesOutput {
	return o.ApplyT(func(v *PremierAddOnResponseProperties) PremierAddOnResponseProperties { return *v }).(PremierAddOnResponsePropertiesOutput)
}

// Premier add on Marketplace offer.
func (o PremierAddOnResponsePropertiesPtrOutput) MarketplaceOffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PremierAddOnResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.MarketplaceOffer
	}).(pulumi.StringPtrOutput)
}

// Premier add on Marketplace publisher.
func (o PremierAddOnResponsePropertiesPtrOutput) MarketplacePublisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PremierAddOnResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.MarketplacePublisher
	}).(pulumi.StringPtrOutput)
}

// Premier add on Product.
func (o PremierAddOnResponsePropertiesPtrOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PremierAddOnResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Product
	}).(pulumi.StringPtrOutput)
}

// Premier add on SKU.
func (o PremierAddOnResponsePropertiesPtrOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PremierAddOnResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(pulumi.StringPtrOutput)
}

// Premier add on Vendor.
func (o PremierAddOnResponsePropertiesPtrOutput) Vendor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PremierAddOnResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Vendor
	}).(pulumi.StringPtrOutput)
}

// PublicCertificate resource specific properties
type PublicCertificateResponseProperties struct {
	// Public Certificate byte array
	Blob *string `pulumi:"blob"`
	// Public Certificate Location
	PublicCertificateLocation *string `pulumi:"publicCertificateLocation"`
	// Certificate Thumbprint
	Thumbprint string `pulumi:"thumbprint"`
}

// PublicCertificateResponsePropertiesInput is an input type that accepts PublicCertificateResponsePropertiesArgs and PublicCertificateResponsePropertiesOutput values.
// You can construct a concrete instance of `PublicCertificateResponsePropertiesInput` via:
//
//          PublicCertificateResponsePropertiesArgs{...}
type PublicCertificateResponsePropertiesInput interface {
	pulumi.Input

	ToPublicCertificateResponsePropertiesOutput() PublicCertificateResponsePropertiesOutput
	ToPublicCertificateResponsePropertiesOutputWithContext(context.Context) PublicCertificateResponsePropertiesOutput
}

// PublicCertificate resource specific properties
type PublicCertificateResponsePropertiesArgs struct {
	// Public Certificate byte array
	Blob pulumi.StringPtrInput `pulumi:"blob"`
	// Public Certificate Location
	PublicCertificateLocation pulumi.StringPtrInput `pulumi:"publicCertificateLocation"`
	// Certificate Thumbprint
	Thumbprint pulumi.StringInput `pulumi:"thumbprint"`
}

func (PublicCertificateResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicCertificateResponseProperties)(nil)).Elem()
}

func (i PublicCertificateResponsePropertiesArgs) ToPublicCertificateResponsePropertiesOutput() PublicCertificateResponsePropertiesOutput {
	return i.ToPublicCertificateResponsePropertiesOutputWithContext(context.Background())
}

func (i PublicCertificateResponsePropertiesArgs) ToPublicCertificateResponsePropertiesOutputWithContext(ctx context.Context) PublicCertificateResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicCertificateResponsePropertiesOutput)
}

func (i PublicCertificateResponsePropertiesArgs) ToPublicCertificateResponsePropertiesPtrOutput() PublicCertificateResponsePropertiesPtrOutput {
	return i.ToPublicCertificateResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i PublicCertificateResponsePropertiesArgs) ToPublicCertificateResponsePropertiesPtrOutputWithContext(ctx context.Context) PublicCertificateResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicCertificateResponsePropertiesOutput).ToPublicCertificateResponsePropertiesPtrOutputWithContext(ctx)
}

// PublicCertificateResponsePropertiesPtrInput is an input type that accepts PublicCertificateResponsePropertiesArgs, PublicCertificateResponsePropertiesPtr and PublicCertificateResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `PublicCertificateResponsePropertiesPtrInput` via:
//
//          PublicCertificateResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type PublicCertificateResponsePropertiesPtrInput interface {
	pulumi.Input

	ToPublicCertificateResponsePropertiesPtrOutput() PublicCertificateResponsePropertiesPtrOutput
	ToPublicCertificateResponsePropertiesPtrOutputWithContext(context.Context) PublicCertificateResponsePropertiesPtrOutput
}

type publicCertificateResponsePropertiesPtrType PublicCertificateResponsePropertiesArgs

func PublicCertificateResponsePropertiesPtr(v *PublicCertificateResponsePropertiesArgs) PublicCertificateResponsePropertiesPtrInput {
	return (*publicCertificateResponsePropertiesPtrType)(v)
}

func (*publicCertificateResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicCertificateResponseProperties)(nil)).Elem()
}

func (i *publicCertificateResponsePropertiesPtrType) ToPublicCertificateResponsePropertiesPtrOutput() PublicCertificateResponsePropertiesPtrOutput {
	return i.ToPublicCertificateResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *publicCertificateResponsePropertiesPtrType) ToPublicCertificateResponsePropertiesPtrOutputWithContext(ctx context.Context) PublicCertificateResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicCertificateResponsePropertiesPtrOutput)
}

// PublicCertificate resource specific properties
type PublicCertificateResponsePropertiesOutput struct{ *pulumi.OutputState }

func (PublicCertificateResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicCertificateResponseProperties)(nil)).Elem()
}

func (o PublicCertificateResponsePropertiesOutput) ToPublicCertificateResponsePropertiesOutput() PublicCertificateResponsePropertiesOutput {
	return o
}

func (o PublicCertificateResponsePropertiesOutput) ToPublicCertificateResponsePropertiesOutputWithContext(ctx context.Context) PublicCertificateResponsePropertiesOutput {
	return o
}

func (o PublicCertificateResponsePropertiesOutput) ToPublicCertificateResponsePropertiesPtrOutput() PublicCertificateResponsePropertiesPtrOutput {
	return o.ToPublicCertificateResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o PublicCertificateResponsePropertiesOutput) ToPublicCertificateResponsePropertiesPtrOutputWithContext(ctx context.Context) PublicCertificateResponsePropertiesPtrOutput {
	return o.ApplyT(func(v PublicCertificateResponseProperties) *PublicCertificateResponseProperties {
		return &v
	}).(PublicCertificateResponsePropertiesPtrOutput)
}

// Public Certificate byte array
func (o PublicCertificateResponsePropertiesOutput) Blob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicCertificateResponseProperties) *string { return v.Blob }).(pulumi.StringPtrOutput)
}

// Public Certificate Location
func (o PublicCertificateResponsePropertiesOutput) PublicCertificateLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicCertificateResponseProperties) *string { return v.PublicCertificateLocation }).(pulumi.StringPtrOutput)
}

// Certificate Thumbprint
func (o PublicCertificateResponsePropertiesOutput) Thumbprint() pulumi.StringOutput {
	return o.ApplyT(func(v PublicCertificateResponseProperties) string { return v.Thumbprint }).(pulumi.StringOutput)
}

type PublicCertificateResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (PublicCertificateResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicCertificateResponseProperties)(nil)).Elem()
}

func (o PublicCertificateResponsePropertiesPtrOutput) ToPublicCertificateResponsePropertiesPtrOutput() PublicCertificateResponsePropertiesPtrOutput {
	return o
}

func (o PublicCertificateResponsePropertiesPtrOutput) ToPublicCertificateResponsePropertiesPtrOutputWithContext(ctx context.Context) PublicCertificateResponsePropertiesPtrOutput {
	return o
}

func (o PublicCertificateResponsePropertiesPtrOutput) Elem() PublicCertificateResponsePropertiesOutput {
	return o.ApplyT(func(v *PublicCertificateResponseProperties) PublicCertificateResponseProperties { return *v }).(PublicCertificateResponsePropertiesOutput)
}

// Public Certificate byte array
func (o PublicCertificateResponsePropertiesPtrOutput) Blob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicCertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Blob
	}).(pulumi.StringPtrOutput)
}

// Public Certificate Location
func (o PublicCertificateResponsePropertiesPtrOutput) PublicCertificateLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicCertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCertificateLocation
	}).(pulumi.StringPtrOutput)
}

// Certificate Thumbprint
func (o PublicCertificateResponsePropertiesPtrOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicCertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Thumbprint
	}).(pulumi.StringPtrOutput)
}

// Push settings for the App.
type PushSettings struct {
	// Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.
	DynamicTagsJson *string `pulumi:"dynamicTagsJson"`
	// Gets or sets a flag indicating whether the Push endpoint is enabled.
	IsPushEnabled bool `pulumi:"isPushEnabled"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.
	TagWhitelistJson *string `pulumi:"tagWhitelistJson"`
	// Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.
	// Tags can consist of alphanumeric characters and the following:
	// '_', '@', '#', '.', ':', '-'.
	// Validation should be performed at the PushRequestHandler.
	TagsRequiringAuth *string `pulumi:"tagsRequiringAuth"`
}

// PushSettingsInput is an input type that accepts PushSettingsArgs and PushSettingsOutput values.
// You can construct a concrete instance of `PushSettingsInput` via:
//
//          PushSettingsArgs{...}
type PushSettingsInput interface {
	pulumi.Input

	ToPushSettingsOutput() PushSettingsOutput
	ToPushSettingsOutputWithContext(context.Context) PushSettingsOutput
}

// Push settings for the App.
type PushSettingsArgs struct {
	// Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.
	DynamicTagsJson pulumi.StringPtrInput `pulumi:"dynamicTagsJson"`
	// Gets or sets a flag indicating whether the Push endpoint is enabled.
	IsPushEnabled pulumi.BoolInput `pulumi:"isPushEnabled"`
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.
	TagWhitelistJson pulumi.StringPtrInput `pulumi:"tagWhitelistJson"`
	// Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.
	// Tags can consist of alphanumeric characters and the following:
	// '_', '@', '#', '.', ':', '-'.
	// Validation should be performed at the PushRequestHandler.
	TagsRequiringAuth pulumi.StringPtrInput `pulumi:"tagsRequiringAuth"`
}

func (PushSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSettings)(nil)).Elem()
}

func (i PushSettingsArgs) ToPushSettingsOutput() PushSettingsOutput {
	return i.ToPushSettingsOutputWithContext(context.Background())
}

func (i PushSettingsArgs) ToPushSettingsOutputWithContext(ctx context.Context) PushSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSettingsOutput)
}

func (i PushSettingsArgs) ToPushSettingsPtrOutput() PushSettingsPtrOutput {
	return i.ToPushSettingsPtrOutputWithContext(context.Background())
}

func (i PushSettingsArgs) ToPushSettingsPtrOutputWithContext(ctx context.Context) PushSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSettingsOutput).ToPushSettingsPtrOutputWithContext(ctx)
}

// PushSettingsPtrInput is an input type that accepts PushSettingsArgs, PushSettingsPtr and PushSettingsPtrOutput values.
// You can construct a concrete instance of `PushSettingsPtrInput` via:
//
//          PushSettingsArgs{...}
//
//  or:
//
//          nil
type PushSettingsPtrInput interface {
	pulumi.Input

	ToPushSettingsPtrOutput() PushSettingsPtrOutput
	ToPushSettingsPtrOutputWithContext(context.Context) PushSettingsPtrOutput
}

type pushSettingsPtrType PushSettingsArgs

func PushSettingsPtr(v *PushSettingsArgs) PushSettingsPtrInput {
	return (*pushSettingsPtrType)(v)
}

func (*pushSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PushSettings)(nil)).Elem()
}

func (i *pushSettingsPtrType) ToPushSettingsPtrOutput() PushSettingsPtrOutput {
	return i.ToPushSettingsPtrOutputWithContext(context.Background())
}

func (i *pushSettingsPtrType) ToPushSettingsPtrOutputWithContext(ctx context.Context) PushSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSettingsPtrOutput)
}

// Push settings for the App.
type PushSettingsOutput struct{ *pulumi.OutputState }

func (PushSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSettings)(nil)).Elem()
}

func (o PushSettingsOutput) ToPushSettingsOutput() PushSettingsOutput {
	return o
}

func (o PushSettingsOutput) ToPushSettingsOutputWithContext(ctx context.Context) PushSettingsOutput {
	return o
}

func (o PushSettingsOutput) ToPushSettingsPtrOutput() PushSettingsPtrOutput {
	return o.ToPushSettingsPtrOutputWithContext(context.Background())
}

func (o PushSettingsOutput) ToPushSettingsPtrOutputWithContext(ctx context.Context) PushSettingsPtrOutput {
	return o.ApplyT(func(v PushSettings) *PushSettings {
		return &v
	}).(PushSettingsPtrOutput)
}

// Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.
func (o PushSettingsOutput) DynamicTagsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSettings) *string { return v.DynamicTagsJson }).(pulumi.StringPtrOutput)
}

// Gets or sets a flag indicating whether the Push endpoint is enabled.
func (o PushSettingsOutput) IsPushEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v PushSettings) bool { return v.IsPushEnabled }).(pulumi.BoolOutput)
}

// Kind of resource.
func (o PushSettingsOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSettings) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.
func (o PushSettingsOutput) TagWhitelistJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSettings) *string { return v.TagWhitelistJson }).(pulumi.StringPtrOutput)
}

// Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.
// Tags can consist of alphanumeric characters and the following:
// '_', '@', '#', '.', ':', '-'.
// Validation should be performed at the PushRequestHandler.
func (o PushSettingsOutput) TagsRequiringAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSettings) *string { return v.TagsRequiringAuth }).(pulumi.StringPtrOutput)
}

type PushSettingsPtrOutput struct{ *pulumi.OutputState }

func (PushSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PushSettings)(nil)).Elem()
}

func (o PushSettingsPtrOutput) ToPushSettingsPtrOutput() PushSettingsPtrOutput {
	return o
}

func (o PushSettingsPtrOutput) ToPushSettingsPtrOutputWithContext(ctx context.Context) PushSettingsPtrOutput {
	return o
}

func (o PushSettingsPtrOutput) Elem() PushSettingsOutput {
	return o.ApplyT(func(v *PushSettings) PushSettings { return *v }).(PushSettingsOutput)
}

// Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.
func (o PushSettingsPtrOutput) DynamicTagsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettings) *string {
		if v == nil {
			return nil
		}
		return v.DynamicTagsJson
	}).(pulumi.StringPtrOutput)
}

// Gets or sets a flag indicating whether the Push endpoint is enabled.
func (o PushSettingsPtrOutput) IsPushEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PushSettings) *bool {
		if v == nil {
			return nil
		}
		return &v.IsPushEnabled
	}).(pulumi.BoolPtrOutput)
}

// Kind of resource.
func (o PushSettingsPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettings) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.
func (o PushSettingsPtrOutput) TagWhitelistJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettings) *string {
		if v == nil {
			return nil
		}
		return v.TagWhitelistJson
	}).(pulumi.StringPtrOutput)
}

// Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.
// Tags can consist of alphanumeric characters and the following:
// '_', '@', '#', '.', ':', '-'.
// Validation should be performed at the PushRequestHandler.
func (o PushSettingsPtrOutput) TagsRequiringAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettings) *string {
		if v == nil {
			return nil
		}
		return v.TagsRequiringAuth
	}).(pulumi.StringPtrOutput)
}

// Push settings for the App.
type PushSettingsResponse struct {
	// Resource Id.
	Id string `pulumi:"id"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// PushSettings resource specific properties
	Properties *PushSettingsResponseProperties `pulumi:"properties"`
	// Resource type.
	Type string `pulumi:"type"`
}

// PushSettingsResponseInput is an input type that accepts PushSettingsResponseArgs and PushSettingsResponseOutput values.
// You can construct a concrete instance of `PushSettingsResponseInput` via:
//
//          PushSettingsResponseArgs{...}
type PushSettingsResponseInput interface {
	pulumi.Input

	ToPushSettingsResponseOutput() PushSettingsResponseOutput
	ToPushSettingsResponseOutputWithContext(context.Context) PushSettingsResponseOutput
}

// Push settings for the App.
type PushSettingsResponseArgs struct {
	// Resource Id.
	Id pulumi.StringInput `pulumi:"id"`
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// PushSettings resource specific properties
	Properties PushSettingsResponsePropertiesPtrInput `pulumi:"properties"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PushSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSettingsResponse)(nil)).Elem()
}

func (i PushSettingsResponseArgs) ToPushSettingsResponseOutput() PushSettingsResponseOutput {
	return i.ToPushSettingsResponseOutputWithContext(context.Background())
}

func (i PushSettingsResponseArgs) ToPushSettingsResponseOutputWithContext(ctx context.Context) PushSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSettingsResponseOutput)
}

func (i PushSettingsResponseArgs) ToPushSettingsResponsePtrOutput() PushSettingsResponsePtrOutput {
	return i.ToPushSettingsResponsePtrOutputWithContext(context.Background())
}

func (i PushSettingsResponseArgs) ToPushSettingsResponsePtrOutputWithContext(ctx context.Context) PushSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSettingsResponseOutput).ToPushSettingsResponsePtrOutputWithContext(ctx)
}

// PushSettingsResponsePtrInput is an input type that accepts PushSettingsResponseArgs, PushSettingsResponsePtr and PushSettingsResponsePtrOutput values.
// You can construct a concrete instance of `PushSettingsResponsePtrInput` via:
//
//          PushSettingsResponseArgs{...}
//
//  or:
//
//          nil
type PushSettingsResponsePtrInput interface {
	pulumi.Input

	ToPushSettingsResponsePtrOutput() PushSettingsResponsePtrOutput
	ToPushSettingsResponsePtrOutputWithContext(context.Context) PushSettingsResponsePtrOutput
}

type pushSettingsResponsePtrType PushSettingsResponseArgs

func PushSettingsResponsePtr(v *PushSettingsResponseArgs) PushSettingsResponsePtrInput {
	return (*pushSettingsResponsePtrType)(v)
}

func (*pushSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PushSettingsResponse)(nil)).Elem()
}

func (i *pushSettingsResponsePtrType) ToPushSettingsResponsePtrOutput() PushSettingsResponsePtrOutput {
	return i.ToPushSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *pushSettingsResponsePtrType) ToPushSettingsResponsePtrOutputWithContext(ctx context.Context) PushSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSettingsResponsePtrOutput)
}

// Push settings for the App.
type PushSettingsResponseOutput struct{ *pulumi.OutputState }

func (PushSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSettingsResponse)(nil)).Elem()
}

func (o PushSettingsResponseOutput) ToPushSettingsResponseOutput() PushSettingsResponseOutput {
	return o
}

func (o PushSettingsResponseOutput) ToPushSettingsResponseOutputWithContext(ctx context.Context) PushSettingsResponseOutput {
	return o
}

func (o PushSettingsResponseOutput) ToPushSettingsResponsePtrOutput() PushSettingsResponsePtrOutput {
	return o.ToPushSettingsResponsePtrOutputWithContext(context.Background())
}

func (o PushSettingsResponseOutput) ToPushSettingsResponsePtrOutputWithContext(ctx context.Context) PushSettingsResponsePtrOutput {
	return o.ApplyT(func(v PushSettingsResponse) *PushSettingsResponse {
		return &v
	}).(PushSettingsResponsePtrOutput)
}

// Resource Id.
func (o PushSettingsResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PushSettingsResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Kind of resource.
func (o PushSettingsResponseOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSettingsResponse) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o PushSettingsResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PushSettingsResponse) string { return v.Name }).(pulumi.StringOutput)
}

// PushSettings resource specific properties
func (o PushSettingsResponseOutput) Properties() PushSettingsResponsePropertiesPtrOutput {
	return o.ApplyT(func(v PushSettingsResponse) *PushSettingsResponseProperties { return v.Properties }).(PushSettingsResponsePropertiesPtrOutput)
}

// Resource type.
func (o PushSettingsResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PushSettingsResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PushSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (PushSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PushSettingsResponse)(nil)).Elem()
}

func (o PushSettingsResponsePtrOutput) ToPushSettingsResponsePtrOutput() PushSettingsResponsePtrOutput {
	return o
}

func (o PushSettingsResponsePtrOutput) ToPushSettingsResponsePtrOutputWithContext(ctx context.Context) PushSettingsResponsePtrOutput {
	return o
}

func (o PushSettingsResponsePtrOutput) Elem() PushSettingsResponseOutput {
	return o.ApplyT(func(v *PushSettingsResponse) PushSettingsResponse { return *v }).(PushSettingsResponseOutput)
}

// Resource Id.
func (o PushSettingsResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Kind of resource.
func (o PushSettingsResponsePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o PushSettingsResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// PushSettings resource specific properties
func (o PushSettingsResponsePtrOutput) Properties() PushSettingsResponsePropertiesPtrOutput {
	return o.ApplyT(func(v *PushSettingsResponse) *PushSettingsResponseProperties {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(PushSettingsResponsePropertiesPtrOutput)
}

// Resource type.
func (o PushSettingsResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// PushSettings resource specific properties
type PushSettingsResponseProperties struct {
	// Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.
	DynamicTagsJson *string `pulumi:"dynamicTagsJson"`
	// Gets or sets a flag indicating whether the Push endpoint is enabled.
	IsPushEnabled bool `pulumi:"isPushEnabled"`
	// Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.
	TagWhitelistJson *string `pulumi:"tagWhitelistJson"`
	// Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.
	// Tags can consist of alphanumeric characters and the following:
	// '_', '@', '#', '.', ':', '-'.
	// Validation should be performed at the PushRequestHandler.
	TagsRequiringAuth *string `pulumi:"tagsRequiringAuth"`
}

// PushSettingsResponsePropertiesInput is an input type that accepts PushSettingsResponsePropertiesArgs and PushSettingsResponsePropertiesOutput values.
// You can construct a concrete instance of `PushSettingsResponsePropertiesInput` via:
//
//          PushSettingsResponsePropertiesArgs{...}
type PushSettingsResponsePropertiesInput interface {
	pulumi.Input

	ToPushSettingsResponsePropertiesOutput() PushSettingsResponsePropertiesOutput
	ToPushSettingsResponsePropertiesOutputWithContext(context.Context) PushSettingsResponsePropertiesOutput
}

// PushSettings resource specific properties
type PushSettingsResponsePropertiesArgs struct {
	// Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.
	DynamicTagsJson pulumi.StringPtrInput `pulumi:"dynamicTagsJson"`
	// Gets or sets a flag indicating whether the Push endpoint is enabled.
	IsPushEnabled pulumi.BoolInput `pulumi:"isPushEnabled"`
	// Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.
	TagWhitelistJson pulumi.StringPtrInput `pulumi:"tagWhitelistJson"`
	// Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.
	// Tags can consist of alphanumeric characters and the following:
	// '_', '@', '#', '.', ':', '-'.
	// Validation should be performed at the PushRequestHandler.
	TagsRequiringAuth pulumi.StringPtrInput `pulumi:"tagsRequiringAuth"`
}

func (PushSettingsResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSettingsResponseProperties)(nil)).Elem()
}

func (i PushSettingsResponsePropertiesArgs) ToPushSettingsResponsePropertiesOutput() PushSettingsResponsePropertiesOutput {
	return i.ToPushSettingsResponsePropertiesOutputWithContext(context.Background())
}

func (i PushSettingsResponsePropertiesArgs) ToPushSettingsResponsePropertiesOutputWithContext(ctx context.Context) PushSettingsResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSettingsResponsePropertiesOutput)
}

func (i PushSettingsResponsePropertiesArgs) ToPushSettingsResponsePropertiesPtrOutput() PushSettingsResponsePropertiesPtrOutput {
	return i.ToPushSettingsResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i PushSettingsResponsePropertiesArgs) ToPushSettingsResponsePropertiesPtrOutputWithContext(ctx context.Context) PushSettingsResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSettingsResponsePropertiesOutput).ToPushSettingsResponsePropertiesPtrOutputWithContext(ctx)
}

// PushSettingsResponsePropertiesPtrInput is an input type that accepts PushSettingsResponsePropertiesArgs, PushSettingsResponsePropertiesPtr and PushSettingsResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `PushSettingsResponsePropertiesPtrInput` via:
//
//          PushSettingsResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type PushSettingsResponsePropertiesPtrInput interface {
	pulumi.Input

	ToPushSettingsResponsePropertiesPtrOutput() PushSettingsResponsePropertiesPtrOutput
	ToPushSettingsResponsePropertiesPtrOutputWithContext(context.Context) PushSettingsResponsePropertiesPtrOutput
}

type pushSettingsResponsePropertiesPtrType PushSettingsResponsePropertiesArgs

func PushSettingsResponsePropertiesPtr(v *PushSettingsResponsePropertiesArgs) PushSettingsResponsePropertiesPtrInput {
	return (*pushSettingsResponsePropertiesPtrType)(v)
}

func (*pushSettingsResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PushSettingsResponseProperties)(nil)).Elem()
}

func (i *pushSettingsResponsePropertiesPtrType) ToPushSettingsResponsePropertiesPtrOutput() PushSettingsResponsePropertiesPtrOutput {
	return i.ToPushSettingsResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *pushSettingsResponsePropertiesPtrType) ToPushSettingsResponsePropertiesPtrOutputWithContext(ctx context.Context) PushSettingsResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSettingsResponsePropertiesPtrOutput)
}

// PushSettings resource specific properties
type PushSettingsResponsePropertiesOutput struct{ *pulumi.OutputState }

func (PushSettingsResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSettingsResponseProperties)(nil)).Elem()
}

func (o PushSettingsResponsePropertiesOutput) ToPushSettingsResponsePropertiesOutput() PushSettingsResponsePropertiesOutput {
	return o
}

func (o PushSettingsResponsePropertiesOutput) ToPushSettingsResponsePropertiesOutputWithContext(ctx context.Context) PushSettingsResponsePropertiesOutput {
	return o
}

func (o PushSettingsResponsePropertiesOutput) ToPushSettingsResponsePropertiesPtrOutput() PushSettingsResponsePropertiesPtrOutput {
	return o.ToPushSettingsResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o PushSettingsResponsePropertiesOutput) ToPushSettingsResponsePropertiesPtrOutputWithContext(ctx context.Context) PushSettingsResponsePropertiesPtrOutput {
	return o.ApplyT(func(v PushSettingsResponseProperties) *PushSettingsResponseProperties {
		return &v
	}).(PushSettingsResponsePropertiesPtrOutput)
}

// Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.
func (o PushSettingsResponsePropertiesOutput) DynamicTagsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSettingsResponseProperties) *string { return v.DynamicTagsJson }).(pulumi.StringPtrOutput)
}

// Gets or sets a flag indicating whether the Push endpoint is enabled.
func (o PushSettingsResponsePropertiesOutput) IsPushEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v PushSettingsResponseProperties) bool { return v.IsPushEnabled }).(pulumi.BoolOutput)
}

// Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.
func (o PushSettingsResponsePropertiesOutput) TagWhitelistJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSettingsResponseProperties) *string { return v.TagWhitelistJson }).(pulumi.StringPtrOutput)
}

// Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.
// Tags can consist of alphanumeric characters and the following:
// '_', '@', '#', '.', ':', '-'.
// Validation should be performed at the PushRequestHandler.
func (o PushSettingsResponsePropertiesOutput) TagsRequiringAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSettingsResponseProperties) *string { return v.TagsRequiringAuth }).(pulumi.StringPtrOutput)
}

type PushSettingsResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (PushSettingsResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PushSettingsResponseProperties)(nil)).Elem()
}

func (o PushSettingsResponsePropertiesPtrOutput) ToPushSettingsResponsePropertiesPtrOutput() PushSettingsResponsePropertiesPtrOutput {
	return o
}

func (o PushSettingsResponsePropertiesPtrOutput) ToPushSettingsResponsePropertiesPtrOutputWithContext(ctx context.Context) PushSettingsResponsePropertiesPtrOutput {
	return o
}

func (o PushSettingsResponsePropertiesPtrOutput) Elem() PushSettingsResponsePropertiesOutput {
	return o.ApplyT(func(v *PushSettingsResponseProperties) PushSettingsResponseProperties { return *v }).(PushSettingsResponsePropertiesOutput)
}

// Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.
func (o PushSettingsResponsePropertiesPtrOutput) DynamicTagsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettingsResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.DynamicTagsJson
	}).(pulumi.StringPtrOutput)
}

// Gets or sets a flag indicating whether the Push endpoint is enabled.
func (o PushSettingsResponsePropertiesPtrOutput) IsPushEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PushSettingsResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return &v.IsPushEnabled
	}).(pulumi.BoolPtrOutput)
}

// Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.
func (o PushSettingsResponsePropertiesPtrOutput) TagWhitelistJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettingsResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.TagWhitelistJson
	}).(pulumi.StringPtrOutput)
}

// Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.
// Tags can consist of alphanumeric characters and the following:
// '_', '@', '#', '.', ':', '-'.
// Validation should be performed at the PushRequestHandler.
func (o PushSettingsResponsePropertiesPtrOutput) TagsRequiringAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettingsResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.TagsRequiringAuth
	}).(pulumi.StringPtrOutput)
}

// Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to gradually change routing % based on performance.
type RampUpRule struct {
	// Hostname of a slot to which the traffic will be redirected if decided to. E.g. myapp-stage.azurewebsites.net.
	ActionHostName *string `pulumi:"actionHostName"`
	// Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified. See TiPCallback site extension for the scaffold and contracts.
	// https://www.siteextensions.net/packages/TiPCallback/
	ChangeDecisionCallbackUrl *string `pulumi:"changeDecisionCallbackUrl"`
	// Specifies interval in minutes to reevaluate ReroutePercentage.
	ChangeIntervalInMinutes *int `pulumi:"changeIntervalInMinutes"`
	// In auto ramp up scenario this is the step to add/remove from <code>ReroutePercentage</code> until it reaches
	// <code>MinReroutePercentage</code> or <code>MaxReroutePercentage</code>. Site metrics are checked every N minutes specified in <code>ChangeIntervalInMinutes</code>.
	// Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified in <code>ChangeDecisionCallbackUrl</code>.
	ChangeStep *float64 `pulumi:"changeStep"`
	// Specifies upper boundary below which ReroutePercentage will stay.
	MaxReroutePercentage *float64 `pulumi:"maxReroutePercentage"`
	// Specifies lower boundary above which ReroutePercentage will stay.
	MinReroutePercentage *float64 `pulumi:"minReroutePercentage"`
	// Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.
	Name *string `pulumi:"name"`
	// Percentage of the traffic which will be redirected to <code>ActionHostName</code>.
	ReroutePercentage *float64 `pulumi:"reroutePercentage"`
}

// RampUpRuleInput is an input type that accepts RampUpRuleArgs and RampUpRuleOutput values.
// You can construct a concrete instance of `RampUpRuleInput` via:
//
//          RampUpRuleArgs{...}
type RampUpRuleInput interface {
	pulumi.Input

	ToRampUpRuleOutput() RampUpRuleOutput
	ToRampUpRuleOutputWithContext(context.Context) RampUpRuleOutput
}

// Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to gradually change routing % based on performance.
type RampUpRuleArgs struct {
	// Hostname of a slot to which the traffic will be redirected if decided to. E.g. myapp-stage.azurewebsites.net.
	ActionHostName pulumi.StringPtrInput `pulumi:"actionHostName"`
	// Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified. See TiPCallback site extension for the scaffold and contracts.
	// https://www.siteextensions.net/packages/TiPCallback/
	ChangeDecisionCallbackUrl pulumi.StringPtrInput `pulumi:"changeDecisionCallbackUrl"`
	// Specifies interval in minutes to reevaluate ReroutePercentage.
	ChangeIntervalInMinutes pulumi.IntPtrInput `pulumi:"changeIntervalInMinutes"`
	// In auto ramp up scenario this is the step to add/remove from <code>ReroutePercentage</code> until it reaches
	// <code>MinReroutePercentage</code> or <code>MaxReroutePercentage</code>. Site metrics are checked every N minutes specified in <code>ChangeIntervalInMinutes</code>.
	// Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified in <code>ChangeDecisionCallbackUrl</code>.
	ChangeStep pulumi.Float64PtrInput `pulumi:"changeStep"`
	// Specifies upper boundary below which ReroutePercentage will stay.
	MaxReroutePercentage pulumi.Float64PtrInput `pulumi:"maxReroutePercentage"`
	// Specifies lower boundary above which ReroutePercentage will stay.
	MinReroutePercentage pulumi.Float64PtrInput `pulumi:"minReroutePercentage"`
	// Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Percentage of the traffic which will be redirected to <code>ActionHostName</code>.
	ReroutePercentage pulumi.Float64PtrInput `pulumi:"reroutePercentage"`
}

func (RampUpRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RampUpRule)(nil)).Elem()
}

func (i RampUpRuleArgs) ToRampUpRuleOutput() RampUpRuleOutput {
	return i.ToRampUpRuleOutputWithContext(context.Background())
}

func (i RampUpRuleArgs) ToRampUpRuleOutputWithContext(ctx context.Context) RampUpRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RampUpRuleOutput)
}

// RampUpRuleArrayInput is an input type that accepts RampUpRuleArray and RampUpRuleArrayOutput values.
// You can construct a concrete instance of `RampUpRuleArrayInput` via:
//
//          RampUpRuleArray{ RampUpRuleArgs{...} }
type RampUpRuleArrayInput interface {
	pulumi.Input

	ToRampUpRuleArrayOutput() RampUpRuleArrayOutput
	ToRampUpRuleArrayOutputWithContext(context.Context) RampUpRuleArrayOutput
}

type RampUpRuleArray []RampUpRuleInput

func (RampUpRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RampUpRule)(nil)).Elem()
}

func (i RampUpRuleArray) ToRampUpRuleArrayOutput() RampUpRuleArrayOutput {
	return i.ToRampUpRuleArrayOutputWithContext(context.Background())
}

func (i RampUpRuleArray) ToRampUpRuleArrayOutputWithContext(ctx context.Context) RampUpRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RampUpRuleArrayOutput)
}

// Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to gradually change routing % based on performance.
type RampUpRuleOutput struct{ *pulumi.OutputState }

func (RampUpRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RampUpRule)(nil)).Elem()
}

func (o RampUpRuleOutput) ToRampUpRuleOutput() RampUpRuleOutput {
	return o
}

func (o RampUpRuleOutput) ToRampUpRuleOutputWithContext(ctx context.Context) RampUpRuleOutput {
	return o
}

// Hostname of a slot to which the traffic will be redirected if decided to. E.g. myapp-stage.azurewebsites.net.
func (o RampUpRuleOutput) ActionHostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RampUpRule) *string { return v.ActionHostName }).(pulumi.StringPtrOutput)
}

// Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified. See TiPCallback site extension for the scaffold and contracts.
// https://www.siteextensions.net/packages/TiPCallback/
func (o RampUpRuleOutput) ChangeDecisionCallbackUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RampUpRule) *string { return v.ChangeDecisionCallbackUrl }).(pulumi.StringPtrOutput)
}

// Specifies interval in minutes to reevaluate ReroutePercentage.
func (o RampUpRuleOutput) ChangeIntervalInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RampUpRule) *int { return v.ChangeIntervalInMinutes }).(pulumi.IntPtrOutput)
}

// In auto ramp up scenario this is the step to add/remove from <code>ReroutePercentage</code> until it reaches
// <code>MinReroutePercentage</code> or <code>MaxReroutePercentage</code>. Site metrics are checked every N minutes specified in <code>ChangeIntervalInMinutes</code>.
// Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified in <code>ChangeDecisionCallbackUrl</code>.
func (o RampUpRuleOutput) ChangeStep() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RampUpRule) *float64 { return v.ChangeStep }).(pulumi.Float64PtrOutput)
}

// Specifies upper boundary below which ReroutePercentage will stay.
func (o RampUpRuleOutput) MaxReroutePercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RampUpRule) *float64 { return v.MaxReroutePercentage }).(pulumi.Float64PtrOutput)
}

// Specifies lower boundary above which ReroutePercentage will stay.
func (o RampUpRuleOutput) MinReroutePercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RampUpRule) *float64 { return v.MinReroutePercentage }).(pulumi.Float64PtrOutput)
}

// Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.
func (o RampUpRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RampUpRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Percentage of the traffic which will be redirected to <code>ActionHostName</code>.
func (o RampUpRuleOutput) ReroutePercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RampUpRule) *float64 { return v.ReroutePercentage }).(pulumi.Float64PtrOutput)
}

type RampUpRuleArrayOutput struct{ *pulumi.OutputState }

func (RampUpRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RampUpRule)(nil)).Elem()
}

func (o RampUpRuleArrayOutput) ToRampUpRuleArrayOutput() RampUpRuleArrayOutput {
	return o
}

func (o RampUpRuleArrayOutput) ToRampUpRuleArrayOutputWithContext(ctx context.Context) RampUpRuleArrayOutput {
	return o
}

func (o RampUpRuleArrayOutput) Index(i pulumi.IntInput) RampUpRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RampUpRule {
		return vs[0].([]RampUpRule)[vs[1].(int)]
	}).(RampUpRuleOutput)
}

// Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to gradually change routing % based on performance.
type RampUpRuleResponse struct {
	// Hostname of a slot to which the traffic will be redirected if decided to. E.g. myapp-stage.azurewebsites.net.
	ActionHostName *string `pulumi:"actionHostName"`
	// Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified. See TiPCallback site extension for the scaffold and contracts.
	// https://www.siteextensions.net/packages/TiPCallback/
	ChangeDecisionCallbackUrl *string `pulumi:"changeDecisionCallbackUrl"`
	// Specifies interval in minutes to reevaluate ReroutePercentage.
	ChangeIntervalInMinutes *int `pulumi:"changeIntervalInMinutes"`
	// In auto ramp up scenario this is the step to add/remove from <code>ReroutePercentage</code> until it reaches
	// <code>MinReroutePercentage</code> or <code>MaxReroutePercentage</code>. Site metrics are checked every N minutes specified in <code>ChangeIntervalInMinutes</code>.
	// Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified in <code>ChangeDecisionCallbackUrl</code>.
	ChangeStep *float64 `pulumi:"changeStep"`
	// Specifies upper boundary below which ReroutePercentage will stay.
	MaxReroutePercentage *float64 `pulumi:"maxReroutePercentage"`
	// Specifies lower boundary above which ReroutePercentage will stay.
	MinReroutePercentage *float64 `pulumi:"minReroutePercentage"`
	// Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.
	Name *string `pulumi:"name"`
	// Percentage of the traffic which will be redirected to <code>ActionHostName</code>.
	ReroutePercentage *float64 `pulumi:"reroutePercentage"`
}

// RampUpRuleResponseInput is an input type that accepts RampUpRuleResponseArgs and RampUpRuleResponseOutput values.
// You can construct a concrete instance of `RampUpRuleResponseInput` via:
//
//          RampUpRuleResponseArgs{...}
type RampUpRuleResponseInput interface {
	pulumi.Input

	ToRampUpRuleResponseOutput() RampUpRuleResponseOutput
	ToRampUpRuleResponseOutputWithContext(context.Context) RampUpRuleResponseOutput
}

// Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to gradually change routing % based on performance.
type RampUpRuleResponseArgs struct {
	// Hostname of a slot to which the traffic will be redirected if decided to. E.g. myapp-stage.azurewebsites.net.
	ActionHostName pulumi.StringPtrInput `pulumi:"actionHostName"`
	// Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified. See TiPCallback site extension for the scaffold and contracts.
	// https://www.siteextensions.net/packages/TiPCallback/
	ChangeDecisionCallbackUrl pulumi.StringPtrInput `pulumi:"changeDecisionCallbackUrl"`
	// Specifies interval in minutes to reevaluate ReroutePercentage.
	ChangeIntervalInMinutes pulumi.IntPtrInput `pulumi:"changeIntervalInMinutes"`
	// In auto ramp up scenario this is the step to add/remove from <code>ReroutePercentage</code> until it reaches
	// <code>MinReroutePercentage</code> or <code>MaxReroutePercentage</code>. Site metrics are checked every N minutes specified in <code>ChangeIntervalInMinutes</code>.
	// Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified in <code>ChangeDecisionCallbackUrl</code>.
	ChangeStep pulumi.Float64PtrInput `pulumi:"changeStep"`
	// Specifies upper boundary below which ReroutePercentage will stay.
	MaxReroutePercentage pulumi.Float64PtrInput `pulumi:"maxReroutePercentage"`
	// Specifies lower boundary above which ReroutePercentage will stay.
	MinReroutePercentage pulumi.Float64PtrInput `pulumi:"minReroutePercentage"`
	// Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Percentage of the traffic which will be redirected to <code>ActionHostName</code>.
	ReroutePercentage pulumi.Float64PtrInput `pulumi:"reroutePercentage"`
}

func (RampUpRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RampUpRuleResponse)(nil)).Elem()
}

func (i RampUpRuleResponseArgs) ToRampUpRuleResponseOutput() RampUpRuleResponseOutput {
	return i.ToRampUpRuleResponseOutputWithContext(context.Background())
}

func (i RampUpRuleResponseArgs) ToRampUpRuleResponseOutputWithContext(ctx context.Context) RampUpRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RampUpRuleResponseOutput)
}

// RampUpRuleResponseArrayInput is an input type that accepts RampUpRuleResponseArray and RampUpRuleResponseArrayOutput values.
// You can construct a concrete instance of `RampUpRuleResponseArrayInput` via:
//
//          RampUpRuleResponseArray{ RampUpRuleResponseArgs{...} }
type RampUpRuleResponseArrayInput interface {
	pulumi.Input

	ToRampUpRuleResponseArrayOutput() RampUpRuleResponseArrayOutput
	ToRampUpRuleResponseArrayOutputWithContext(context.Context) RampUpRuleResponseArrayOutput
}

type RampUpRuleResponseArray []RampUpRuleResponseInput

func (RampUpRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RampUpRuleResponse)(nil)).Elem()
}

func (i RampUpRuleResponseArray) ToRampUpRuleResponseArrayOutput() RampUpRuleResponseArrayOutput {
	return i.ToRampUpRuleResponseArrayOutputWithContext(context.Background())
}

func (i RampUpRuleResponseArray) ToRampUpRuleResponseArrayOutputWithContext(ctx context.Context) RampUpRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RampUpRuleResponseArrayOutput)
}

// Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to gradually change routing % based on performance.
type RampUpRuleResponseOutput struct{ *pulumi.OutputState }

func (RampUpRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RampUpRuleResponse)(nil)).Elem()
}

func (o RampUpRuleResponseOutput) ToRampUpRuleResponseOutput() RampUpRuleResponseOutput {
	return o
}

func (o RampUpRuleResponseOutput) ToRampUpRuleResponseOutputWithContext(ctx context.Context) RampUpRuleResponseOutput {
	return o
}

// Hostname of a slot to which the traffic will be redirected if decided to. E.g. myapp-stage.azurewebsites.net.
func (o RampUpRuleResponseOutput) ActionHostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RampUpRuleResponse) *string { return v.ActionHostName }).(pulumi.StringPtrOutput)
}

// Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified. See TiPCallback site extension for the scaffold and contracts.
// https://www.siteextensions.net/packages/TiPCallback/
func (o RampUpRuleResponseOutput) ChangeDecisionCallbackUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RampUpRuleResponse) *string { return v.ChangeDecisionCallbackUrl }).(pulumi.StringPtrOutput)
}

// Specifies interval in minutes to reevaluate ReroutePercentage.
func (o RampUpRuleResponseOutput) ChangeIntervalInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RampUpRuleResponse) *int { return v.ChangeIntervalInMinutes }).(pulumi.IntPtrOutput)
}

// In auto ramp up scenario this is the step to add/remove from <code>ReroutePercentage</code> until it reaches
// <code>MinReroutePercentage</code> or <code>MaxReroutePercentage</code>. Site metrics are checked every N minutes specified in <code>ChangeIntervalInMinutes</code>.
// Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified in <code>ChangeDecisionCallbackUrl</code>.
func (o RampUpRuleResponseOutput) ChangeStep() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RampUpRuleResponse) *float64 { return v.ChangeStep }).(pulumi.Float64PtrOutput)
}

// Specifies upper boundary below which ReroutePercentage will stay.
func (o RampUpRuleResponseOutput) MaxReroutePercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RampUpRuleResponse) *float64 { return v.MaxReroutePercentage }).(pulumi.Float64PtrOutput)
}

// Specifies lower boundary above which ReroutePercentage will stay.
func (o RampUpRuleResponseOutput) MinReroutePercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RampUpRuleResponse) *float64 { return v.MinReroutePercentage }).(pulumi.Float64PtrOutput)
}

// Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.
func (o RampUpRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RampUpRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Percentage of the traffic which will be redirected to <code>ActionHostName</code>.
func (o RampUpRuleResponseOutput) ReroutePercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RampUpRuleResponse) *float64 { return v.ReroutePercentage }).(pulumi.Float64PtrOutput)
}

type RampUpRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (RampUpRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RampUpRuleResponse)(nil)).Elem()
}

func (o RampUpRuleResponseArrayOutput) ToRampUpRuleResponseArrayOutput() RampUpRuleResponseArrayOutput {
	return o
}

func (o RampUpRuleResponseArrayOutput) ToRampUpRuleResponseArrayOutputWithContext(ctx context.Context) RampUpRuleResponseArrayOutput {
	return o
}

func (o RampUpRuleResponseArrayOutput) Index(i pulumi.IntInput) RampUpRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RampUpRuleResponse {
		return vs[0].([]RampUpRuleResponse)[vs[1].(int)]
	}).(RampUpRuleResponseOutput)
}

// RelayServiceConnectionEntity resource specific properties
type RelayServiceConnectionEntityResponseProperties struct {
	BiztalkUri               *string `pulumi:"biztalkUri"`
	EntityConnectionString   *string `pulumi:"entityConnectionString"`
	EntityName               *string `pulumi:"entityName"`
	Hostname                 *string `pulumi:"hostname"`
	Port                     *int    `pulumi:"port"`
	ResourceConnectionString *string `pulumi:"resourceConnectionString"`
	ResourceType             *string `pulumi:"resourceType"`
}

// RelayServiceConnectionEntityResponsePropertiesInput is an input type that accepts RelayServiceConnectionEntityResponsePropertiesArgs and RelayServiceConnectionEntityResponsePropertiesOutput values.
// You can construct a concrete instance of `RelayServiceConnectionEntityResponsePropertiesInput` via:
//
//          RelayServiceConnectionEntityResponsePropertiesArgs{...}
type RelayServiceConnectionEntityResponsePropertiesInput interface {
	pulumi.Input

	ToRelayServiceConnectionEntityResponsePropertiesOutput() RelayServiceConnectionEntityResponsePropertiesOutput
	ToRelayServiceConnectionEntityResponsePropertiesOutputWithContext(context.Context) RelayServiceConnectionEntityResponsePropertiesOutput
}

// RelayServiceConnectionEntity resource specific properties
type RelayServiceConnectionEntityResponsePropertiesArgs struct {
	BiztalkUri               pulumi.StringPtrInput `pulumi:"biztalkUri"`
	EntityConnectionString   pulumi.StringPtrInput `pulumi:"entityConnectionString"`
	EntityName               pulumi.StringPtrInput `pulumi:"entityName"`
	Hostname                 pulumi.StringPtrInput `pulumi:"hostname"`
	Port                     pulumi.IntPtrInput    `pulumi:"port"`
	ResourceConnectionString pulumi.StringPtrInput `pulumi:"resourceConnectionString"`
	ResourceType             pulumi.StringPtrInput `pulumi:"resourceType"`
}

func (RelayServiceConnectionEntityResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RelayServiceConnectionEntityResponseProperties)(nil)).Elem()
}

func (i RelayServiceConnectionEntityResponsePropertiesArgs) ToRelayServiceConnectionEntityResponsePropertiesOutput() RelayServiceConnectionEntityResponsePropertiesOutput {
	return i.ToRelayServiceConnectionEntityResponsePropertiesOutputWithContext(context.Background())
}

func (i RelayServiceConnectionEntityResponsePropertiesArgs) ToRelayServiceConnectionEntityResponsePropertiesOutputWithContext(ctx context.Context) RelayServiceConnectionEntityResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RelayServiceConnectionEntityResponsePropertiesOutput)
}

func (i RelayServiceConnectionEntityResponsePropertiesArgs) ToRelayServiceConnectionEntityResponsePropertiesPtrOutput() RelayServiceConnectionEntityResponsePropertiesPtrOutput {
	return i.ToRelayServiceConnectionEntityResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i RelayServiceConnectionEntityResponsePropertiesArgs) ToRelayServiceConnectionEntityResponsePropertiesPtrOutputWithContext(ctx context.Context) RelayServiceConnectionEntityResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RelayServiceConnectionEntityResponsePropertiesOutput).ToRelayServiceConnectionEntityResponsePropertiesPtrOutputWithContext(ctx)
}

// RelayServiceConnectionEntityResponsePropertiesPtrInput is an input type that accepts RelayServiceConnectionEntityResponsePropertiesArgs, RelayServiceConnectionEntityResponsePropertiesPtr and RelayServiceConnectionEntityResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `RelayServiceConnectionEntityResponsePropertiesPtrInput` via:
//
//          RelayServiceConnectionEntityResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type RelayServiceConnectionEntityResponsePropertiesPtrInput interface {
	pulumi.Input

	ToRelayServiceConnectionEntityResponsePropertiesPtrOutput() RelayServiceConnectionEntityResponsePropertiesPtrOutput
	ToRelayServiceConnectionEntityResponsePropertiesPtrOutputWithContext(context.Context) RelayServiceConnectionEntityResponsePropertiesPtrOutput
}

type relayServiceConnectionEntityResponsePropertiesPtrType RelayServiceConnectionEntityResponsePropertiesArgs

func RelayServiceConnectionEntityResponsePropertiesPtr(v *RelayServiceConnectionEntityResponsePropertiesArgs) RelayServiceConnectionEntityResponsePropertiesPtrInput {
	return (*relayServiceConnectionEntityResponsePropertiesPtrType)(v)
}

func (*relayServiceConnectionEntityResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RelayServiceConnectionEntityResponseProperties)(nil)).Elem()
}

func (i *relayServiceConnectionEntityResponsePropertiesPtrType) ToRelayServiceConnectionEntityResponsePropertiesPtrOutput() RelayServiceConnectionEntityResponsePropertiesPtrOutput {
	return i.ToRelayServiceConnectionEntityResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *relayServiceConnectionEntityResponsePropertiesPtrType) ToRelayServiceConnectionEntityResponsePropertiesPtrOutputWithContext(ctx context.Context) RelayServiceConnectionEntityResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RelayServiceConnectionEntityResponsePropertiesPtrOutput)
}

// RelayServiceConnectionEntity resource specific properties
type RelayServiceConnectionEntityResponsePropertiesOutput struct{ *pulumi.OutputState }

func (RelayServiceConnectionEntityResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RelayServiceConnectionEntityResponseProperties)(nil)).Elem()
}

func (o RelayServiceConnectionEntityResponsePropertiesOutput) ToRelayServiceConnectionEntityResponsePropertiesOutput() RelayServiceConnectionEntityResponsePropertiesOutput {
	return o
}

func (o RelayServiceConnectionEntityResponsePropertiesOutput) ToRelayServiceConnectionEntityResponsePropertiesOutputWithContext(ctx context.Context) RelayServiceConnectionEntityResponsePropertiesOutput {
	return o
}

func (o RelayServiceConnectionEntityResponsePropertiesOutput) ToRelayServiceConnectionEntityResponsePropertiesPtrOutput() RelayServiceConnectionEntityResponsePropertiesPtrOutput {
	return o.ToRelayServiceConnectionEntityResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o RelayServiceConnectionEntityResponsePropertiesOutput) ToRelayServiceConnectionEntityResponsePropertiesPtrOutputWithContext(ctx context.Context) RelayServiceConnectionEntityResponsePropertiesPtrOutput {
	return o.ApplyT(func(v RelayServiceConnectionEntityResponseProperties) *RelayServiceConnectionEntityResponseProperties {
		return &v
	}).(RelayServiceConnectionEntityResponsePropertiesPtrOutput)
}
func (o RelayServiceConnectionEntityResponsePropertiesOutput) BiztalkUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RelayServiceConnectionEntityResponseProperties) *string { return v.BiztalkUri }).(pulumi.StringPtrOutput)
}

func (o RelayServiceConnectionEntityResponsePropertiesOutput) EntityConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RelayServiceConnectionEntityResponseProperties) *string { return v.EntityConnectionString }).(pulumi.StringPtrOutput)
}

func (o RelayServiceConnectionEntityResponsePropertiesOutput) EntityName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RelayServiceConnectionEntityResponseProperties) *string { return v.EntityName }).(pulumi.StringPtrOutput)
}

func (o RelayServiceConnectionEntityResponsePropertiesOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RelayServiceConnectionEntityResponseProperties) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

func (o RelayServiceConnectionEntityResponsePropertiesOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RelayServiceConnectionEntityResponseProperties) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o RelayServiceConnectionEntityResponsePropertiesOutput) ResourceConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RelayServiceConnectionEntityResponseProperties) *string { return v.ResourceConnectionString }).(pulumi.StringPtrOutput)
}

func (o RelayServiceConnectionEntityResponsePropertiesOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RelayServiceConnectionEntityResponseProperties) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

type RelayServiceConnectionEntityResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (RelayServiceConnectionEntityResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RelayServiceConnectionEntityResponseProperties)(nil)).Elem()
}

func (o RelayServiceConnectionEntityResponsePropertiesPtrOutput) ToRelayServiceConnectionEntityResponsePropertiesPtrOutput() RelayServiceConnectionEntityResponsePropertiesPtrOutput {
	return o
}

func (o RelayServiceConnectionEntityResponsePropertiesPtrOutput) ToRelayServiceConnectionEntityResponsePropertiesPtrOutputWithContext(ctx context.Context) RelayServiceConnectionEntityResponsePropertiesPtrOutput {
	return o
}

func (o RelayServiceConnectionEntityResponsePropertiesPtrOutput) Elem() RelayServiceConnectionEntityResponsePropertiesOutput {
	return o.ApplyT(func(v *RelayServiceConnectionEntityResponseProperties) RelayServiceConnectionEntityResponseProperties {
		return *v
	}).(RelayServiceConnectionEntityResponsePropertiesOutput)
}

func (o RelayServiceConnectionEntityResponsePropertiesPtrOutput) BiztalkUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RelayServiceConnectionEntityResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.BiztalkUri
	}).(pulumi.StringPtrOutput)
}

func (o RelayServiceConnectionEntityResponsePropertiesPtrOutput) EntityConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RelayServiceConnectionEntityResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.EntityConnectionString
	}).(pulumi.StringPtrOutput)
}

func (o RelayServiceConnectionEntityResponsePropertiesPtrOutput) EntityName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RelayServiceConnectionEntityResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.EntityName
	}).(pulumi.StringPtrOutput)
}

func (o RelayServiceConnectionEntityResponsePropertiesPtrOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RelayServiceConnectionEntityResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Hostname
	}).(pulumi.StringPtrOutput)
}

func (o RelayServiceConnectionEntityResponsePropertiesPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RelayServiceConnectionEntityResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

func (o RelayServiceConnectionEntityResponsePropertiesPtrOutput) ResourceConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RelayServiceConnectionEntityResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.ResourceConnectionString
	}).(pulumi.StringPtrOutput)
}

func (o RelayServiceConnectionEntityResponsePropertiesPtrOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RelayServiceConnectionEntityResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.ResourceType
	}).(pulumi.StringPtrOutput)
}

// Trigger based on total requests.
type RequestsBasedTrigger struct {
	// Request Count.
	Count *int `pulumi:"count"`
	// Time interval.
	TimeInterval *string `pulumi:"timeInterval"`
}

// RequestsBasedTriggerInput is an input type that accepts RequestsBasedTriggerArgs and RequestsBasedTriggerOutput values.
// You can construct a concrete instance of `RequestsBasedTriggerInput` via:
//
//          RequestsBasedTriggerArgs{...}
type RequestsBasedTriggerInput interface {
	pulumi.Input

	ToRequestsBasedTriggerOutput() RequestsBasedTriggerOutput
	ToRequestsBasedTriggerOutputWithContext(context.Context) RequestsBasedTriggerOutput
}

// Trigger based on total requests.
type RequestsBasedTriggerArgs struct {
	// Request Count.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// Time interval.
	TimeInterval pulumi.StringPtrInput `pulumi:"timeInterval"`
}

func (RequestsBasedTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestsBasedTrigger)(nil)).Elem()
}

func (i RequestsBasedTriggerArgs) ToRequestsBasedTriggerOutput() RequestsBasedTriggerOutput {
	return i.ToRequestsBasedTriggerOutputWithContext(context.Background())
}

func (i RequestsBasedTriggerArgs) ToRequestsBasedTriggerOutputWithContext(ctx context.Context) RequestsBasedTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestsBasedTriggerOutput)
}

func (i RequestsBasedTriggerArgs) ToRequestsBasedTriggerPtrOutput() RequestsBasedTriggerPtrOutput {
	return i.ToRequestsBasedTriggerPtrOutputWithContext(context.Background())
}

func (i RequestsBasedTriggerArgs) ToRequestsBasedTriggerPtrOutputWithContext(ctx context.Context) RequestsBasedTriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestsBasedTriggerOutput).ToRequestsBasedTriggerPtrOutputWithContext(ctx)
}

// RequestsBasedTriggerPtrInput is an input type that accepts RequestsBasedTriggerArgs, RequestsBasedTriggerPtr and RequestsBasedTriggerPtrOutput values.
// You can construct a concrete instance of `RequestsBasedTriggerPtrInput` via:
//
//          RequestsBasedTriggerArgs{...}
//
//  or:
//
//          nil
type RequestsBasedTriggerPtrInput interface {
	pulumi.Input

	ToRequestsBasedTriggerPtrOutput() RequestsBasedTriggerPtrOutput
	ToRequestsBasedTriggerPtrOutputWithContext(context.Context) RequestsBasedTriggerPtrOutput
}

type requestsBasedTriggerPtrType RequestsBasedTriggerArgs

func RequestsBasedTriggerPtr(v *RequestsBasedTriggerArgs) RequestsBasedTriggerPtrInput {
	return (*requestsBasedTriggerPtrType)(v)
}

func (*requestsBasedTriggerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestsBasedTrigger)(nil)).Elem()
}

func (i *requestsBasedTriggerPtrType) ToRequestsBasedTriggerPtrOutput() RequestsBasedTriggerPtrOutput {
	return i.ToRequestsBasedTriggerPtrOutputWithContext(context.Background())
}

func (i *requestsBasedTriggerPtrType) ToRequestsBasedTriggerPtrOutputWithContext(ctx context.Context) RequestsBasedTriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestsBasedTriggerPtrOutput)
}

// Trigger based on total requests.
type RequestsBasedTriggerOutput struct{ *pulumi.OutputState }

func (RequestsBasedTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestsBasedTrigger)(nil)).Elem()
}

func (o RequestsBasedTriggerOutput) ToRequestsBasedTriggerOutput() RequestsBasedTriggerOutput {
	return o
}

func (o RequestsBasedTriggerOutput) ToRequestsBasedTriggerOutputWithContext(ctx context.Context) RequestsBasedTriggerOutput {
	return o
}

func (o RequestsBasedTriggerOutput) ToRequestsBasedTriggerPtrOutput() RequestsBasedTriggerPtrOutput {
	return o.ToRequestsBasedTriggerPtrOutputWithContext(context.Background())
}

func (o RequestsBasedTriggerOutput) ToRequestsBasedTriggerPtrOutputWithContext(ctx context.Context) RequestsBasedTriggerPtrOutput {
	return o.ApplyT(func(v RequestsBasedTrigger) *RequestsBasedTrigger {
		return &v
	}).(RequestsBasedTriggerPtrOutput)
}

// Request Count.
func (o RequestsBasedTriggerOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RequestsBasedTrigger) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Time interval.
func (o RequestsBasedTriggerOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestsBasedTrigger) *string { return v.TimeInterval }).(pulumi.StringPtrOutput)
}

type RequestsBasedTriggerPtrOutput struct{ *pulumi.OutputState }

func (RequestsBasedTriggerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestsBasedTrigger)(nil)).Elem()
}

func (o RequestsBasedTriggerPtrOutput) ToRequestsBasedTriggerPtrOutput() RequestsBasedTriggerPtrOutput {
	return o
}

func (o RequestsBasedTriggerPtrOutput) ToRequestsBasedTriggerPtrOutputWithContext(ctx context.Context) RequestsBasedTriggerPtrOutput {
	return o
}

func (o RequestsBasedTriggerPtrOutput) Elem() RequestsBasedTriggerOutput {
	return o.ApplyT(func(v *RequestsBasedTrigger) RequestsBasedTrigger { return *v }).(RequestsBasedTriggerOutput)
}

// Request Count.
func (o RequestsBasedTriggerPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RequestsBasedTrigger) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Time interval.
func (o RequestsBasedTriggerPtrOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestsBasedTrigger) *string {
		if v == nil {
			return nil
		}
		return v.TimeInterval
	}).(pulumi.StringPtrOutput)
}

// Trigger based on total requests.
type RequestsBasedTriggerResponse struct {
	// Request Count.
	Count *int `pulumi:"count"`
	// Time interval.
	TimeInterval *string `pulumi:"timeInterval"`
}

// RequestsBasedTriggerResponseInput is an input type that accepts RequestsBasedTriggerResponseArgs and RequestsBasedTriggerResponseOutput values.
// You can construct a concrete instance of `RequestsBasedTriggerResponseInput` via:
//
//          RequestsBasedTriggerResponseArgs{...}
type RequestsBasedTriggerResponseInput interface {
	pulumi.Input

	ToRequestsBasedTriggerResponseOutput() RequestsBasedTriggerResponseOutput
	ToRequestsBasedTriggerResponseOutputWithContext(context.Context) RequestsBasedTriggerResponseOutput
}

// Trigger based on total requests.
type RequestsBasedTriggerResponseArgs struct {
	// Request Count.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// Time interval.
	TimeInterval pulumi.StringPtrInput `pulumi:"timeInterval"`
}

func (RequestsBasedTriggerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestsBasedTriggerResponse)(nil)).Elem()
}

func (i RequestsBasedTriggerResponseArgs) ToRequestsBasedTriggerResponseOutput() RequestsBasedTriggerResponseOutput {
	return i.ToRequestsBasedTriggerResponseOutputWithContext(context.Background())
}

func (i RequestsBasedTriggerResponseArgs) ToRequestsBasedTriggerResponseOutputWithContext(ctx context.Context) RequestsBasedTriggerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestsBasedTriggerResponseOutput)
}

func (i RequestsBasedTriggerResponseArgs) ToRequestsBasedTriggerResponsePtrOutput() RequestsBasedTriggerResponsePtrOutput {
	return i.ToRequestsBasedTriggerResponsePtrOutputWithContext(context.Background())
}

func (i RequestsBasedTriggerResponseArgs) ToRequestsBasedTriggerResponsePtrOutputWithContext(ctx context.Context) RequestsBasedTriggerResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestsBasedTriggerResponseOutput).ToRequestsBasedTriggerResponsePtrOutputWithContext(ctx)
}

// RequestsBasedTriggerResponsePtrInput is an input type that accepts RequestsBasedTriggerResponseArgs, RequestsBasedTriggerResponsePtr and RequestsBasedTriggerResponsePtrOutput values.
// You can construct a concrete instance of `RequestsBasedTriggerResponsePtrInput` via:
//
//          RequestsBasedTriggerResponseArgs{...}
//
//  or:
//
//          nil
type RequestsBasedTriggerResponsePtrInput interface {
	pulumi.Input

	ToRequestsBasedTriggerResponsePtrOutput() RequestsBasedTriggerResponsePtrOutput
	ToRequestsBasedTriggerResponsePtrOutputWithContext(context.Context) RequestsBasedTriggerResponsePtrOutput
}

type requestsBasedTriggerResponsePtrType RequestsBasedTriggerResponseArgs

func RequestsBasedTriggerResponsePtr(v *RequestsBasedTriggerResponseArgs) RequestsBasedTriggerResponsePtrInput {
	return (*requestsBasedTriggerResponsePtrType)(v)
}

func (*requestsBasedTriggerResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestsBasedTriggerResponse)(nil)).Elem()
}

func (i *requestsBasedTriggerResponsePtrType) ToRequestsBasedTriggerResponsePtrOutput() RequestsBasedTriggerResponsePtrOutput {
	return i.ToRequestsBasedTriggerResponsePtrOutputWithContext(context.Background())
}

func (i *requestsBasedTriggerResponsePtrType) ToRequestsBasedTriggerResponsePtrOutputWithContext(ctx context.Context) RequestsBasedTriggerResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestsBasedTriggerResponsePtrOutput)
}

// Trigger based on total requests.
type RequestsBasedTriggerResponseOutput struct{ *pulumi.OutputState }

func (RequestsBasedTriggerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestsBasedTriggerResponse)(nil)).Elem()
}

func (o RequestsBasedTriggerResponseOutput) ToRequestsBasedTriggerResponseOutput() RequestsBasedTriggerResponseOutput {
	return o
}

func (o RequestsBasedTriggerResponseOutput) ToRequestsBasedTriggerResponseOutputWithContext(ctx context.Context) RequestsBasedTriggerResponseOutput {
	return o
}

func (o RequestsBasedTriggerResponseOutput) ToRequestsBasedTriggerResponsePtrOutput() RequestsBasedTriggerResponsePtrOutput {
	return o.ToRequestsBasedTriggerResponsePtrOutputWithContext(context.Background())
}

func (o RequestsBasedTriggerResponseOutput) ToRequestsBasedTriggerResponsePtrOutputWithContext(ctx context.Context) RequestsBasedTriggerResponsePtrOutput {
	return o.ApplyT(func(v RequestsBasedTriggerResponse) *RequestsBasedTriggerResponse {
		return &v
	}).(RequestsBasedTriggerResponsePtrOutput)
}

// Request Count.
func (o RequestsBasedTriggerResponseOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RequestsBasedTriggerResponse) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Time interval.
func (o RequestsBasedTriggerResponseOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestsBasedTriggerResponse) *string { return v.TimeInterval }).(pulumi.StringPtrOutput)
}

type RequestsBasedTriggerResponsePtrOutput struct{ *pulumi.OutputState }

func (RequestsBasedTriggerResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestsBasedTriggerResponse)(nil)).Elem()
}

func (o RequestsBasedTriggerResponsePtrOutput) ToRequestsBasedTriggerResponsePtrOutput() RequestsBasedTriggerResponsePtrOutput {
	return o
}

func (o RequestsBasedTriggerResponsePtrOutput) ToRequestsBasedTriggerResponsePtrOutputWithContext(ctx context.Context) RequestsBasedTriggerResponsePtrOutput {
	return o
}

func (o RequestsBasedTriggerResponsePtrOutput) Elem() RequestsBasedTriggerResponseOutput {
	return o.ApplyT(func(v *RequestsBasedTriggerResponse) RequestsBasedTriggerResponse { return *v }).(RequestsBasedTriggerResponseOutput)
}

// Request Count.
func (o RequestsBasedTriggerResponsePtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RequestsBasedTriggerResponse) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Time interval.
func (o RequestsBasedTriggerResponsePtrOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestsBasedTriggerResponse) *string {
		if v == nil {
			return nil
		}
		return v.TimeInterval
	}).(pulumi.StringPtrOutput)
}

// SiteAuthSettings resource specific properties
type SiteAuthSettingsResponseProperties struct {
	// Login parameters to send to the OpenID Connect authorization endpoint when
	// a user logs in. Each parameter must be in the form "key=value".
	AdditionalLoginParams []string `pulumi:"additionalLoginParams"`
	// Allowed audience values to consider when validating JWTs issued by
	// Azure Active Directory. Note that the <code>ClientID</code> value is always considered an
	// allowed audience, regardless of this setting.
	AllowedAudiences []string `pulumi:"allowedAudiences"`
	// External URLs that can be redirected to as part of logging in or logging out of the app. Note that the query string part of the URL is ignored.
	// This is an advanced setting typically only needed by Windows Store application backends.
	// Note that URLs within the current domain are always implicitly allowed.
	AllowedExternalRedirectUrls []string `pulumi:"allowedExternalRedirectUrls"`
	// The Client ID of this relying party application, known as the client_id.
	// This setting is required for enabling OpenID Connection authentication with Azure Active Directory or
	// other 3rd party OpenID Connect providers.
	// More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html
	ClientId *string `pulumi:"clientId"`
	// The Client Secret of this relying party application (in Azure Active Directory, this is also referred to as the Key).
	// This setting is optional. If no client secret is configured, the OpenID Connect implicit auth flow is used to authenticate end users.
	// Otherwise, the OpenID Connect Authorization Code Flow is used to authenticate end users.
	// More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html
	ClientSecret *string `pulumi:"clientSecret"`
	// An alternative to the client secret, that is the thumbprint of a certificate used for signing purposes. This property acts as
	// a replacement for the Client Secret. It is also optional.
	ClientSecretCertificateThumbprint *string `pulumi:"clientSecretCertificateThumbprint"`
	// The default authentication provider to use when multiple providers are configured.
	// This setting is only needed if multiple providers are configured and the unauthenticated client
	// action is set to "RedirectToLoginPage".
	DefaultProvider *string `pulumi:"defaultProvider"`
	// <code>true</code> if the Authentication / Authorization feature is enabled for the current app; otherwise, <code>false</code>.
	Enabled *bool `pulumi:"enabled"`
	// The App ID of the Facebook app used for login.
	// This setting is required for enabling Facebook Login.
	// Facebook Login documentation: https://developers.facebook.com/docs/facebook-login
	FacebookAppId *string `pulumi:"facebookAppId"`
	// The App Secret of the Facebook app used for Facebook Login.
	// This setting is required for enabling Facebook Login.
	// Facebook Login documentation: https://developers.facebook.com/docs/facebook-login
	FacebookAppSecret *string `pulumi:"facebookAppSecret"`
	// The OAuth 2.0 scopes that will be requested as part of Facebook Login authentication.
	// This setting is optional.
	// Facebook Login documentation: https://developers.facebook.com/docs/facebook-login
	FacebookOAuthScopes []string `pulumi:"facebookOAuthScopes"`
	// The OpenID Connect Client ID for the Google web application.
	// This setting is required for enabling Google Sign-In.
	// Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/
	GoogleClientId *string `pulumi:"googleClientId"`
	// The client secret associated with the Google web application.
	// This setting is required for enabling Google Sign-In.
	// Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/
	GoogleClientSecret *string `pulumi:"googleClientSecret"`
	// The OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication.
	// This setting is optional. If not specified, "openid", "profile", and "email" are used as default scopes.
	// Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/
	GoogleOAuthScopes []string `pulumi:"googleOAuthScopes"`
	// The OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.
	// When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.
	// This URI is a case-sensitive identifier for the token issuer.
	// More information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html
	Issuer *string `pulumi:"issuer"`
	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// This setting is required for enabling Microsoft Account authentication.
	// Microsoft Account OAuth documentation: https://dev.onedrive.com/auth/msa_oauth.htm
	MicrosoftAccountClientId *string `pulumi:"microsoftAccountClientId"`
	// The OAuth 2.0 client secret that was created for the app used for authentication.
	// This setting is required for enabling Microsoft Account authentication.
	// Microsoft Account OAuth documentation: https://dev.onedrive.com/auth/msa_oauth.htm
	MicrosoftAccountClientSecret *string `pulumi:"microsoftAccountClientSecret"`
	// The OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication.
	// This setting is optional. If not specified, "wl.basic" is used as the default scope.
	// Microsoft Account Scopes and permissions documentation: https://msdn.microsoft.com/en-us/library/dn631845.aspx
	MicrosoftAccountOAuthScopes []string `pulumi:"microsoftAccountOAuthScopes"`
	// The RuntimeVersion of the Authentication / Authorization feature in use for the current app.
	// The setting in this value can control the behavior of certain features in the Authentication / Authorization module.
	RuntimeVersion *string `pulumi:"runtimeVersion"`
	// The number of hours after session token expiration that a session token can be used to
	// call the token refresh API. The default is 72 hours.
	TokenRefreshExtensionHours *float64 `pulumi:"tokenRefreshExtensionHours"`
	// <code>true</code> to durably store platform-specific security tokens that are obtained during login flows; otherwise, <code>false</code>.
	//  The default is <code>false</code>.
	TokenStoreEnabled *bool `pulumi:"tokenStoreEnabled"`
	// The OAuth 1.0a consumer key of the Twitter application used for sign-in.
	// This setting is required for enabling Twitter Sign-In.
	// Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
	TwitterConsumerKey *string `pulumi:"twitterConsumerKey"`
	// The OAuth 1.0a consumer secret of the Twitter application used for sign-in.
	// This setting is required for enabling Twitter Sign-In.
	// Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
	TwitterConsumerSecret *string `pulumi:"twitterConsumerSecret"`
	// The action to take when an unauthenticated client attempts to access the app.
	UnauthenticatedClientAction *string `pulumi:"unauthenticatedClientAction"`
	// Gets a value indicating whether the issuer should be a valid HTTPS url and be validated as such.
	ValidateIssuer *bool `pulumi:"validateIssuer"`
}

// SiteAuthSettingsResponsePropertiesInput is an input type that accepts SiteAuthSettingsResponsePropertiesArgs and SiteAuthSettingsResponsePropertiesOutput values.
// You can construct a concrete instance of `SiteAuthSettingsResponsePropertiesInput` via:
//
//          SiteAuthSettingsResponsePropertiesArgs{...}
type SiteAuthSettingsResponsePropertiesInput interface {
	pulumi.Input

	ToSiteAuthSettingsResponsePropertiesOutput() SiteAuthSettingsResponsePropertiesOutput
	ToSiteAuthSettingsResponsePropertiesOutputWithContext(context.Context) SiteAuthSettingsResponsePropertiesOutput
}

// SiteAuthSettings resource specific properties
type SiteAuthSettingsResponsePropertiesArgs struct {
	// Login parameters to send to the OpenID Connect authorization endpoint when
	// a user logs in. Each parameter must be in the form "key=value".
	AdditionalLoginParams pulumi.StringArrayInput `pulumi:"additionalLoginParams"`
	// Allowed audience values to consider when validating JWTs issued by
	// Azure Active Directory. Note that the <code>ClientID</code> value is always considered an
	// allowed audience, regardless of this setting.
	AllowedAudiences pulumi.StringArrayInput `pulumi:"allowedAudiences"`
	// External URLs that can be redirected to as part of logging in or logging out of the app. Note that the query string part of the URL is ignored.
	// This is an advanced setting typically only needed by Windows Store application backends.
	// Note that URLs within the current domain are always implicitly allowed.
	AllowedExternalRedirectUrls pulumi.StringArrayInput `pulumi:"allowedExternalRedirectUrls"`
	// The Client ID of this relying party application, known as the client_id.
	// This setting is required for enabling OpenID Connection authentication with Azure Active Directory or
	// other 3rd party OpenID Connect providers.
	// More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// The Client Secret of this relying party application (in Azure Active Directory, this is also referred to as the Key).
	// This setting is optional. If no client secret is configured, the OpenID Connect implicit auth flow is used to authenticate end users.
	// Otherwise, the OpenID Connect Authorization Code Flow is used to authenticate end users.
	// More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	// An alternative to the client secret, that is the thumbprint of a certificate used for signing purposes. This property acts as
	// a replacement for the Client Secret. It is also optional.
	ClientSecretCertificateThumbprint pulumi.StringPtrInput `pulumi:"clientSecretCertificateThumbprint"`
	// The default authentication provider to use when multiple providers are configured.
	// This setting is only needed if multiple providers are configured and the unauthenticated client
	// action is set to "RedirectToLoginPage".
	DefaultProvider pulumi.StringPtrInput `pulumi:"defaultProvider"`
	// <code>true</code> if the Authentication / Authorization feature is enabled for the current app; otherwise, <code>false</code>.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The App ID of the Facebook app used for login.
	// This setting is required for enabling Facebook Login.
	// Facebook Login documentation: https://developers.facebook.com/docs/facebook-login
	FacebookAppId pulumi.StringPtrInput `pulumi:"facebookAppId"`
	// The App Secret of the Facebook app used for Facebook Login.
	// This setting is required for enabling Facebook Login.
	// Facebook Login documentation: https://developers.facebook.com/docs/facebook-login
	FacebookAppSecret pulumi.StringPtrInput `pulumi:"facebookAppSecret"`
	// The OAuth 2.0 scopes that will be requested as part of Facebook Login authentication.
	// This setting is optional.
	// Facebook Login documentation: https://developers.facebook.com/docs/facebook-login
	FacebookOAuthScopes pulumi.StringArrayInput `pulumi:"facebookOAuthScopes"`
	// The OpenID Connect Client ID for the Google web application.
	// This setting is required for enabling Google Sign-In.
	// Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/
	GoogleClientId pulumi.StringPtrInput `pulumi:"googleClientId"`
	// The client secret associated with the Google web application.
	// This setting is required for enabling Google Sign-In.
	// Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/
	GoogleClientSecret pulumi.StringPtrInput `pulumi:"googleClientSecret"`
	// The OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication.
	// This setting is optional. If not specified, "openid", "profile", and "email" are used as default scopes.
	// Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/
	GoogleOAuthScopes pulumi.StringArrayInput `pulumi:"googleOAuthScopes"`
	// The OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.
	// When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.
	// This URI is a case-sensitive identifier for the token issuer.
	// More information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html
	Issuer pulumi.StringPtrInput `pulumi:"issuer"`
	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// This setting is required for enabling Microsoft Account authentication.
	// Microsoft Account OAuth documentation: https://dev.onedrive.com/auth/msa_oauth.htm
	MicrosoftAccountClientId pulumi.StringPtrInput `pulumi:"microsoftAccountClientId"`
	// The OAuth 2.0 client secret that was created for the app used for authentication.
	// This setting is required for enabling Microsoft Account authentication.
	// Microsoft Account OAuth documentation: https://dev.onedrive.com/auth/msa_oauth.htm
	MicrosoftAccountClientSecret pulumi.StringPtrInput `pulumi:"microsoftAccountClientSecret"`
	// The OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication.
	// This setting is optional. If not specified, "wl.basic" is used as the default scope.
	// Microsoft Account Scopes and permissions documentation: https://msdn.microsoft.com/en-us/library/dn631845.aspx
	MicrosoftAccountOAuthScopes pulumi.StringArrayInput `pulumi:"microsoftAccountOAuthScopes"`
	// The RuntimeVersion of the Authentication / Authorization feature in use for the current app.
	// The setting in this value can control the behavior of certain features in the Authentication / Authorization module.
	RuntimeVersion pulumi.StringPtrInput `pulumi:"runtimeVersion"`
	// The number of hours after session token expiration that a session token can be used to
	// call the token refresh API. The default is 72 hours.
	TokenRefreshExtensionHours pulumi.Float64PtrInput `pulumi:"tokenRefreshExtensionHours"`
	// <code>true</code> to durably store platform-specific security tokens that are obtained during login flows; otherwise, <code>false</code>.
	//  The default is <code>false</code>.
	TokenStoreEnabled pulumi.BoolPtrInput `pulumi:"tokenStoreEnabled"`
	// The OAuth 1.0a consumer key of the Twitter application used for sign-in.
	// This setting is required for enabling Twitter Sign-In.
	// Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
	TwitterConsumerKey pulumi.StringPtrInput `pulumi:"twitterConsumerKey"`
	// The OAuth 1.0a consumer secret of the Twitter application used for sign-in.
	// This setting is required for enabling Twitter Sign-In.
	// Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
	TwitterConsumerSecret pulumi.StringPtrInput `pulumi:"twitterConsumerSecret"`
	// The action to take when an unauthenticated client attempts to access the app.
	UnauthenticatedClientAction pulumi.StringPtrInput `pulumi:"unauthenticatedClientAction"`
	// Gets a value indicating whether the issuer should be a valid HTTPS url and be validated as such.
	ValidateIssuer pulumi.BoolPtrInput `pulumi:"validateIssuer"`
}

func (SiteAuthSettingsResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteAuthSettingsResponseProperties)(nil)).Elem()
}

func (i SiteAuthSettingsResponsePropertiesArgs) ToSiteAuthSettingsResponsePropertiesOutput() SiteAuthSettingsResponsePropertiesOutput {
	return i.ToSiteAuthSettingsResponsePropertiesOutputWithContext(context.Background())
}

func (i SiteAuthSettingsResponsePropertiesArgs) ToSiteAuthSettingsResponsePropertiesOutputWithContext(ctx context.Context) SiteAuthSettingsResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteAuthSettingsResponsePropertiesOutput)
}

// SiteAuthSettings resource specific properties
type SiteAuthSettingsResponsePropertiesOutput struct{ *pulumi.OutputState }

func (SiteAuthSettingsResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteAuthSettingsResponseProperties)(nil)).Elem()
}

func (o SiteAuthSettingsResponsePropertiesOutput) ToSiteAuthSettingsResponsePropertiesOutput() SiteAuthSettingsResponsePropertiesOutput {
	return o
}

func (o SiteAuthSettingsResponsePropertiesOutput) ToSiteAuthSettingsResponsePropertiesOutputWithContext(ctx context.Context) SiteAuthSettingsResponsePropertiesOutput {
	return o
}

// Login parameters to send to the OpenID Connect authorization endpoint when
// a user logs in. Each parameter must be in the form "key=value".
func (o SiteAuthSettingsResponsePropertiesOutput) AdditionalLoginParams() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SiteAuthSettingsResponseProperties) []string { return v.AdditionalLoginParams }).(pulumi.StringArrayOutput)
}

// Allowed audience values to consider when validating JWTs issued by
// Azure Active Directory. Note that the <code>ClientID</code> value is always considered an
// allowed audience, regardless of this setting.
func (o SiteAuthSettingsResponsePropertiesOutput) AllowedAudiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SiteAuthSettingsResponseProperties) []string { return v.AllowedAudiences }).(pulumi.StringArrayOutput)
}

// External URLs that can be redirected to as part of logging in or logging out of the app. Note that the query string part of the URL is ignored.
// This is an advanced setting typically only needed by Windows Store application backends.
// Note that URLs within the current domain are always implicitly allowed.
func (o SiteAuthSettingsResponsePropertiesOutput) AllowedExternalRedirectUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SiteAuthSettingsResponseProperties) []string { return v.AllowedExternalRedirectUrls }).(pulumi.StringArrayOutput)
}

// The Client ID of this relying party application, known as the client_id.
// This setting is required for enabling OpenID Connection authentication with Azure Active Directory or
// other 3rd party OpenID Connect providers.
// More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html
func (o SiteAuthSettingsResponsePropertiesOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteAuthSettingsResponseProperties) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The Client Secret of this relying party application (in Azure Active Directory, this is also referred to as the Key).
// This setting is optional. If no client secret is configured, the OpenID Connect implicit auth flow is used to authenticate end users.
// Otherwise, the OpenID Connect Authorization Code Flow is used to authenticate end users.
// More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html
func (o SiteAuthSettingsResponsePropertiesOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteAuthSettingsResponseProperties) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// An alternative to the client secret, that is the thumbprint of a certificate used for signing purposes. This property acts as
// a replacement for the Client Secret. It is also optional.
func (o SiteAuthSettingsResponsePropertiesOutput) ClientSecretCertificateThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteAuthSettingsResponseProperties) *string { return v.ClientSecretCertificateThumbprint }).(pulumi.StringPtrOutput)
}

// The default authentication provider to use when multiple providers are configured.
// This setting is only needed if multiple providers are configured and the unauthenticated client
// action is set to "RedirectToLoginPage".
func (o SiteAuthSettingsResponsePropertiesOutput) DefaultProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteAuthSettingsResponseProperties) *string { return v.DefaultProvider }).(pulumi.StringPtrOutput)
}

// <code>true</code> if the Authentication / Authorization feature is enabled for the current app; otherwise, <code>false</code>.
func (o SiteAuthSettingsResponsePropertiesOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteAuthSettingsResponseProperties) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The App ID of the Facebook app used for login.
// This setting is required for enabling Facebook Login.
// Facebook Login documentation: https://developers.facebook.com/docs/facebook-login
func (o SiteAuthSettingsResponsePropertiesOutput) FacebookAppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteAuthSettingsResponseProperties) *string { return v.FacebookAppId }).(pulumi.StringPtrOutput)
}

// The App Secret of the Facebook app used for Facebook Login.
// This setting is required for enabling Facebook Login.
// Facebook Login documentation: https://developers.facebook.com/docs/facebook-login
func (o SiteAuthSettingsResponsePropertiesOutput) FacebookAppSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteAuthSettingsResponseProperties) *string { return v.FacebookAppSecret }).(pulumi.StringPtrOutput)
}

// The OAuth 2.0 scopes that will be requested as part of Facebook Login authentication.
// This setting is optional.
// Facebook Login documentation: https://developers.facebook.com/docs/facebook-login
func (o SiteAuthSettingsResponsePropertiesOutput) FacebookOAuthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SiteAuthSettingsResponseProperties) []string { return v.FacebookOAuthScopes }).(pulumi.StringArrayOutput)
}

// The OpenID Connect Client ID for the Google web application.
// This setting is required for enabling Google Sign-In.
// Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/
func (o SiteAuthSettingsResponsePropertiesOutput) GoogleClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteAuthSettingsResponseProperties) *string { return v.GoogleClientId }).(pulumi.StringPtrOutput)
}

// The client secret associated with the Google web application.
// This setting is required for enabling Google Sign-In.
// Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/
func (o SiteAuthSettingsResponsePropertiesOutput) GoogleClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteAuthSettingsResponseProperties) *string { return v.GoogleClientSecret }).(pulumi.StringPtrOutput)
}

// The OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication.
// This setting is optional. If not specified, "openid", "profile", and "email" are used as default scopes.
// Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/
func (o SiteAuthSettingsResponsePropertiesOutput) GoogleOAuthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SiteAuthSettingsResponseProperties) []string { return v.GoogleOAuthScopes }).(pulumi.StringArrayOutput)
}

// The OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.
// When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.
// This URI is a case-sensitive identifier for the token issuer.
// More information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html
func (o SiteAuthSettingsResponsePropertiesOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteAuthSettingsResponseProperties) *string { return v.Issuer }).(pulumi.StringPtrOutput)
}

// The OAuth 2.0 client ID that was created for the app used for authentication.
// This setting is required for enabling Microsoft Account authentication.
// Microsoft Account OAuth documentation: https://dev.onedrive.com/auth/msa_oauth.htm
func (o SiteAuthSettingsResponsePropertiesOutput) MicrosoftAccountClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteAuthSettingsResponseProperties) *string { return v.MicrosoftAccountClientId }).(pulumi.StringPtrOutput)
}

// The OAuth 2.0 client secret that was created for the app used for authentication.
// This setting is required for enabling Microsoft Account authentication.
// Microsoft Account OAuth documentation: https://dev.onedrive.com/auth/msa_oauth.htm
func (o SiteAuthSettingsResponsePropertiesOutput) MicrosoftAccountClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteAuthSettingsResponseProperties) *string { return v.MicrosoftAccountClientSecret }).(pulumi.StringPtrOutput)
}

// The OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication.
// This setting is optional. If not specified, "wl.basic" is used as the default scope.
// Microsoft Account Scopes and permissions documentation: https://msdn.microsoft.com/en-us/library/dn631845.aspx
func (o SiteAuthSettingsResponsePropertiesOutput) MicrosoftAccountOAuthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SiteAuthSettingsResponseProperties) []string { return v.MicrosoftAccountOAuthScopes }).(pulumi.StringArrayOutput)
}

// The RuntimeVersion of the Authentication / Authorization feature in use for the current app.
// The setting in this value can control the behavior of certain features in the Authentication / Authorization module.
func (o SiteAuthSettingsResponsePropertiesOutput) RuntimeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteAuthSettingsResponseProperties) *string { return v.RuntimeVersion }).(pulumi.StringPtrOutput)
}

// The number of hours after session token expiration that a session token can be used to
// call the token refresh API. The default is 72 hours.
func (o SiteAuthSettingsResponsePropertiesOutput) TokenRefreshExtensionHours() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SiteAuthSettingsResponseProperties) *float64 { return v.TokenRefreshExtensionHours }).(pulumi.Float64PtrOutput)
}

// <code>true</code> to durably store platform-specific security tokens that are obtained during login flows; otherwise, <code>false</code>.
//  The default is <code>false</code>.
func (o SiteAuthSettingsResponsePropertiesOutput) TokenStoreEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteAuthSettingsResponseProperties) *bool { return v.TokenStoreEnabled }).(pulumi.BoolPtrOutput)
}

// The OAuth 1.0a consumer key of the Twitter application used for sign-in.
// This setting is required for enabling Twitter Sign-In.
// Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
func (o SiteAuthSettingsResponsePropertiesOutput) TwitterConsumerKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteAuthSettingsResponseProperties) *string { return v.TwitterConsumerKey }).(pulumi.StringPtrOutput)
}

// The OAuth 1.0a consumer secret of the Twitter application used for sign-in.
// This setting is required for enabling Twitter Sign-In.
// Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
func (o SiteAuthSettingsResponsePropertiesOutput) TwitterConsumerSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteAuthSettingsResponseProperties) *string { return v.TwitterConsumerSecret }).(pulumi.StringPtrOutput)
}

// The action to take when an unauthenticated client attempts to access the app.
func (o SiteAuthSettingsResponsePropertiesOutput) UnauthenticatedClientAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteAuthSettingsResponseProperties) *string { return v.UnauthenticatedClientAction }).(pulumi.StringPtrOutput)
}

// Gets a value indicating whether the issuer should be a valid HTTPS url and be validated as such.
func (o SiteAuthSettingsResponsePropertiesOutput) ValidateIssuer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteAuthSettingsResponseProperties) *bool { return v.ValidateIssuer }).(pulumi.BoolPtrOutput)
}

// Configuration of an App Service app.
type SiteConfig struct {
	// <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
	AlwaysOn *bool `pulumi:"alwaysOn"`
	// Information about the formal API definition for the app.
	ApiDefinition *ApiDefinitionInfo `pulumi:"apiDefinition"`
	// App command line to launch.
	AppCommandLine *string `pulumi:"appCommandLine"`
	// Application settings.
	AppSettings []NameValuePair `pulumi:"appSettings"`
	// <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
	AutoHealEnabled *bool `pulumi:"autoHealEnabled"`
	// Auto Heal rules.
	AutoHealRules *AutoHealRules `pulumi:"autoHealRules"`
	// Auto-swap slot name.
	AutoSwapSlotName *string `pulumi:"autoSwapSlotName"`
	// User-provided Azure storage accounts.
	AzureStorageAccounts map[string]AzureStorageInfoValue `pulumi:"azureStorageAccounts"`
	// Connection strings.
	ConnectionStrings []ConnStringInfo `pulumi:"connectionStrings"`
	// Cross-Origin Resource Sharing (CORS) settings.
	Cors *CorsSettings `pulumi:"cors"`
	// Default documents.
	DefaultDocuments []string `pulumi:"defaultDocuments"`
	// <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
	DetailedErrorLoggingEnabled *bool `pulumi:"detailedErrorLoggingEnabled"`
	// Document root.
	DocumentRoot *string `pulumi:"documentRoot"`
	// This is work around for polymorphic types.
	Experiments *Experiments `pulumi:"experiments"`
	// State of FTP / FTPS service
	FtpsState *string `pulumi:"ftpsState"`
	// Handler mappings.
	HandlerMappings []HandlerMapping `pulumi:"handlerMappings"`
	// Http20Enabled: configures a web site to allow clients to connect over http2.0
	Http20Enabled *bool `pulumi:"http20Enabled"`
	// <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
	HttpLoggingEnabled *bool `pulumi:"httpLoggingEnabled"`
	// IP security restrictions for main.
	IpSecurityRestrictions []IpSecurityRestriction `pulumi:"ipSecurityRestrictions"`
	// Java container.
	JavaContainer *string `pulumi:"javaContainer"`
	// Java container version.
	JavaContainerVersion *string `pulumi:"javaContainerVersion"`
	// Java version.
	JavaVersion *string `pulumi:"javaVersion"`
	// Site limits.
	Limits *SiteLimits `pulumi:"limits"`
	// Linux App Framework and version
	LinuxFxVersion *string `pulumi:"linuxFxVersion"`
	// Site load balancing.
	LoadBalancing *string `pulumi:"loadBalancing"`
	// <code>true</code> to enable local MySQL; otherwise, <code>false</code>.
	LocalMySqlEnabled *bool `pulumi:"localMySqlEnabled"`
	// HTTP logs directory size limit.
	LogsDirectorySizeLimit *int `pulumi:"logsDirectorySizeLimit"`
	// Managed pipeline mode.
	ManagedPipelineMode *string `pulumi:"managedPipelineMode"`
	// Managed Service Identity Id
	ManagedServiceIdentityId *int `pulumi:"managedServiceIdentityId"`
	// MinTlsVersion: configures the minimum version of TLS required for SSL requests
	MinTlsVersion *string `pulumi:"minTlsVersion"`
	// .NET Framework version.
	NetFrameworkVersion *string `pulumi:"netFrameworkVersion"`
	// Version of Node.js.
	NodeVersion *string `pulumi:"nodeVersion"`
	// Number of workers.
	NumberOfWorkers *int `pulumi:"numberOfWorkers"`
	// Version of PHP.
	PhpVersion *string `pulumi:"phpVersion"`
	// Publishing user name.
	PublishingUsername *string `pulumi:"publishingUsername"`
	// Push endpoint settings.
	Push *PushSettings `pulumi:"push"`
	// Version of Python.
	PythonVersion *string `pulumi:"pythonVersion"`
	// <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
	RemoteDebuggingEnabled *bool `pulumi:"remoteDebuggingEnabled"`
	// Remote debugging version.
	RemoteDebuggingVersion *string `pulumi:"remoteDebuggingVersion"`
	// <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
	RequestTracingEnabled *bool `pulumi:"requestTracingEnabled"`
	// Request tracing expiration time.
	RequestTracingExpirationTime *string `pulumi:"requestTracingExpirationTime"`
	// Number of reserved instances.
	// This setting only applies to the Consumption Plan
	ReservedInstanceCount *int `pulumi:"reservedInstanceCount"`
	// IP security restrictions for scm.
	ScmIpSecurityRestrictions []IpSecurityRestriction `pulumi:"scmIpSecurityRestrictions"`
	// IP security restrictions for scm to use main.
	ScmIpSecurityRestrictionsUseMain *bool `pulumi:"scmIpSecurityRestrictionsUseMain"`
	// SCM type.
	ScmType *string `pulumi:"scmType"`
	// Tracing options.
	TracingOptions *string `pulumi:"tracingOptions"`
	// <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
	Use32BitWorkerProcess *bool `pulumi:"use32BitWorkerProcess"`
	// Virtual applications.
	VirtualApplications []VirtualApplication `pulumi:"virtualApplications"`
	// Virtual Network name.
	VnetName *string `pulumi:"vnetName"`
	// <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
	WebSocketsEnabled *bool `pulumi:"webSocketsEnabled"`
	// Xenon App Framework and version
	WindowsFxVersion *string `pulumi:"windowsFxVersion"`
	// Explicit Managed Service Identity Id
	XManagedServiceIdentityId *int `pulumi:"xManagedServiceIdentityId"`
}

// SiteConfigInput is an input type that accepts SiteConfigArgs and SiteConfigOutput values.
// You can construct a concrete instance of `SiteConfigInput` via:
//
//          SiteConfigArgs{...}
type SiteConfigInput interface {
	pulumi.Input

	ToSiteConfigOutput() SiteConfigOutput
	ToSiteConfigOutputWithContext(context.Context) SiteConfigOutput
}

// Configuration of an App Service app.
type SiteConfigArgs struct {
	// <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
	AlwaysOn pulumi.BoolPtrInput `pulumi:"alwaysOn"`
	// Information about the formal API definition for the app.
	ApiDefinition ApiDefinitionInfoPtrInput `pulumi:"apiDefinition"`
	// App command line to launch.
	AppCommandLine pulumi.StringPtrInput `pulumi:"appCommandLine"`
	// Application settings.
	AppSettings NameValuePairArrayInput `pulumi:"appSettings"`
	// <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
	AutoHealEnabled pulumi.BoolPtrInput `pulumi:"autoHealEnabled"`
	// Auto Heal rules.
	AutoHealRules AutoHealRulesPtrInput `pulumi:"autoHealRules"`
	// Auto-swap slot name.
	AutoSwapSlotName pulumi.StringPtrInput `pulumi:"autoSwapSlotName"`
	// User-provided Azure storage accounts.
	AzureStorageAccounts AzureStorageInfoValueMapInput `pulumi:"azureStorageAccounts"`
	// Connection strings.
	ConnectionStrings ConnStringInfoArrayInput `pulumi:"connectionStrings"`
	// Cross-Origin Resource Sharing (CORS) settings.
	Cors CorsSettingsPtrInput `pulumi:"cors"`
	// Default documents.
	DefaultDocuments pulumi.StringArrayInput `pulumi:"defaultDocuments"`
	// <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
	DetailedErrorLoggingEnabled pulumi.BoolPtrInput `pulumi:"detailedErrorLoggingEnabled"`
	// Document root.
	DocumentRoot pulumi.StringPtrInput `pulumi:"documentRoot"`
	// This is work around for polymorphic types.
	Experiments ExperimentsPtrInput `pulumi:"experiments"`
	// State of FTP / FTPS service
	FtpsState pulumi.StringPtrInput `pulumi:"ftpsState"`
	// Handler mappings.
	HandlerMappings HandlerMappingArrayInput `pulumi:"handlerMappings"`
	// Http20Enabled: configures a web site to allow clients to connect over http2.0
	Http20Enabled pulumi.BoolPtrInput `pulumi:"http20Enabled"`
	// <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
	HttpLoggingEnabled pulumi.BoolPtrInput `pulumi:"httpLoggingEnabled"`
	// IP security restrictions for main.
	IpSecurityRestrictions IpSecurityRestrictionArrayInput `pulumi:"ipSecurityRestrictions"`
	// Java container.
	JavaContainer pulumi.StringPtrInput `pulumi:"javaContainer"`
	// Java container version.
	JavaContainerVersion pulumi.StringPtrInput `pulumi:"javaContainerVersion"`
	// Java version.
	JavaVersion pulumi.StringPtrInput `pulumi:"javaVersion"`
	// Site limits.
	Limits SiteLimitsPtrInput `pulumi:"limits"`
	// Linux App Framework and version
	LinuxFxVersion pulumi.StringPtrInput `pulumi:"linuxFxVersion"`
	// Site load balancing.
	LoadBalancing pulumi.StringPtrInput `pulumi:"loadBalancing"`
	// <code>true</code> to enable local MySQL; otherwise, <code>false</code>.
	LocalMySqlEnabled pulumi.BoolPtrInput `pulumi:"localMySqlEnabled"`
	// HTTP logs directory size limit.
	LogsDirectorySizeLimit pulumi.IntPtrInput `pulumi:"logsDirectorySizeLimit"`
	// Managed pipeline mode.
	ManagedPipelineMode pulumi.StringPtrInput `pulumi:"managedPipelineMode"`
	// Managed Service Identity Id
	ManagedServiceIdentityId pulumi.IntPtrInput `pulumi:"managedServiceIdentityId"`
	// MinTlsVersion: configures the minimum version of TLS required for SSL requests
	MinTlsVersion pulumi.StringPtrInput `pulumi:"minTlsVersion"`
	// .NET Framework version.
	NetFrameworkVersion pulumi.StringPtrInput `pulumi:"netFrameworkVersion"`
	// Version of Node.js.
	NodeVersion pulumi.StringPtrInput `pulumi:"nodeVersion"`
	// Number of workers.
	NumberOfWorkers pulumi.IntPtrInput `pulumi:"numberOfWorkers"`
	// Version of PHP.
	PhpVersion pulumi.StringPtrInput `pulumi:"phpVersion"`
	// Publishing user name.
	PublishingUsername pulumi.StringPtrInput `pulumi:"publishingUsername"`
	// Push endpoint settings.
	Push PushSettingsPtrInput `pulumi:"push"`
	// Version of Python.
	PythonVersion pulumi.StringPtrInput `pulumi:"pythonVersion"`
	// <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
	RemoteDebuggingEnabled pulumi.BoolPtrInput `pulumi:"remoteDebuggingEnabled"`
	// Remote debugging version.
	RemoteDebuggingVersion pulumi.StringPtrInput `pulumi:"remoteDebuggingVersion"`
	// <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
	RequestTracingEnabled pulumi.BoolPtrInput `pulumi:"requestTracingEnabled"`
	// Request tracing expiration time.
	RequestTracingExpirationTime pulumi.StringPtrInput `pulumi:"requestTracingExpirationTime"`
	// Number of reserved instances.
	// This setting only applies to the Consumption Plan
	ReservedInstanceCount pulumi.IntPtrInput `pulumi:"reservedInstanceCount"`
	// IP security restrictions for scm.
	ScmIpSecurityRestrictions IpSecurityRestrictionArrayInput `pulumi:"scmIpSecurityRestrictions"`
	// IP security restrictions for scm to use main.
	ScmIpSecurityRestrictionsUseMain pulumi.BoolPtrInput `pulumi:"scmIpSecurityRestrictionsUseMain"`
	// SCM type.
	ScmType pulumi.StringPtrInput `pulumi:"scmType"`
	// Tracing options.
	TracingOptions pulumi.StringPtrInput `pulumi:"tracingOptions"`
	// <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
	Use32BitWorkerProcess pulumi.BoolPtrInput `pulumi:"use32BitWorkerProcess"`
	// Virtual applications.
	VirtualApplications VirtualApplicationArrayInput `pulumi:"virtualApplications"`
	// Virtual Network name.
	VnetName pulumi.StringPtrInput `pulumi:"vnetName"`
	// <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
	WebSocketsEnabled pulumi.BoolPtrInput `pulumi:"webSocketsEnabled"`
	// Xenon App Framework and version
	WindowsFxVersion pulumi.StringPtrInput `pulumi:"windowsFxVersion"`
	// Explicit Managed Service Identity Id
	XManagedServiceIdentityId pulumi.IntPtrInput `pulumi:"xManagedServiceIdentityId"`
}

func (SiteConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteConfig)(nil)).Elem()
}

func (i SiteConfigArgs) ToSiteConfigOutput() SiteConfigOutput {
	return i.ToSiteConfigOutputWithContext(context.Background())
}

func (i SiteConfigArgs) ToSiteConfigOutputWithContext(ctx context.Context) SiteConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteConfigOutput)
}

func (i SiteConfigArgs) ToSiteConfigPtrOutput() SiteConfigPtrOutput {
	return i.ToSiteConfigPtrOutputWithContext(context.Background())
}

func (i SiteConfigArgs) ToSiteConfigPtrOutputWithContext(ctx context.Context) SiteConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteConfigOutput).ToSiteConfigPtrOutputWithContext(ctx)
}

// SiteConfigPtrInput is an input type that accepts SiteConfigArgs, SiteConfigPtr and SiteConfigPtrOutput values.
// You can construct a concrete instance of `SiteConfigPtrInput` via:
//
//          SiteConfigArgs{...}
//
//  or:
//
//          nil
type SiteConfigPtrInput interface {
	pulumi.Input

	ToSiteConfigPtrOutput() SiteConfigPtrOutput
	ToSiteConfigPtrOutputWithContext(context.Context) SiteConfigPtrOutput
}

type siteConfigPtrType SiteConfigArgs

func SiteConfigPtr(v *SiteConfigArgs) SiteConfigPtrInput {
	return (*siteConfigPtrType)(v)
}

func (*siteConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteConfig)(nil)).Elem()
}

func (i *siteConfigPtrType) ToSiteConfigPtrOutput() SiteConfigPtrOutput {
	return i.ToSiteConfigPtrOutputWithContext(context.Background())
}

func (i *siteConfigPtrType) ToSiteConfigPtrOutputWithContext(ctx context.Context) SiteConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteConfigPtrOutput)
}

// Configuration of an App Service app.
type SiteConfigOutput struct{ *pulumi.OutputState }

func (SiteConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteConfig)(nil)).Elem()
}

func (o SiteConfigOutput) ToSiteConfigOutput() SiteConfigOutput {
	return o
}

func (o SiteConfigOutput) ToSiteConfigOutputWithContext(ctx context.Context) SiteConfigOutput {
	return o
}

func (o SiteConfigOutput) ToSiteConfigPtrOutput() SiteConfigPtrOutput {
	return o.ToSiteConfigPtrOutputWithContext(context.Background())
}

func (o SiteConfigOutput) ToSiteConfigPtrOutputWithContext(ctx context.Context) SiteConfigPtrOutput {
	return o.ApplyT(func(v SiteConfig) *SiteConfig {
		return &v
	}).(SiteConfigPtrOutput)
}

// <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
func (o SiteConfigOutput) AlwaysOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.AlwaysOn }).(pulumi.BoolPtrOutput)
}

// Information about the formal API definition for the app.
func (o SiteConfigOutput) ApiDefinition() ApiDefinitionInfoPtrOutput {
	return o.ApplyT(func(v SiteConfig) *ApiDefinitionInfo { return v.ApiDefinition }).(ApiDefinitionInfoPtrOutput)
}

// App command line to launch.
func (o SiteConfigOutput) AppCommandLine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.AppCommandLine }).(pulumi.StringPtrOutput)
}

// Application settings.
func (o SiteConfigOutput) AppSettings() NameValuePairArrayOutput {
	return o.ApplyT(func(v SiteConfig) []NameValuePair { return v.AppSettings }).(NameValuePairArrayOutput)
}

// <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
func (o SiteConfigOutput) AutoHealEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.AutoHealEnabled }).(pulumi.BoolPtrOutput)
}

// Auto Heal rules.
func (o SiteConfigOutput) AutoHealRules() AutoHealRulesPtrOutput {
	return o.ApplyT(func(v SiteConfig) *AutoHealRules { return v.AutoHealRules }).(AutoHealRulesPtrOutput)
}

// Auto-swap slot name.
func (o SiteConfigOutput) AutoSwapSlotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.AutoSwapSlotName }).(pulumi.StringPtrOutput)
}

// User-provided Azure storage accounts.
func (o SiteConfigOutput) AzureStorageAccounts() AzureStorageInfoValueMapOutput {
	return o.ApplyT(func(v SiteConfig) map[string]AzureStorageInfoValue { return v.AzureStorageAccounts }).(AzureStorageInfoValueMapOutput)
}

// Connection strings.
func (o SiteConfigOutput) ConnectionStrings() ConnStringInfoArrayOutput {
	return o.ApplyT(func(v SiteConfig) []ConnStringInfo { return v.ConnectionStrings }).(ConnStringInfoArrayOutput)
}

// Cross-Origin Resource Sharing (CORS) settings.
func (o SiteConfigOutput) Cors() CorsSettingsPtrOutput {
	return o.ApplyT(func(v SiteConfig) *CorsSettings { return v.Cors }).(CorsSettingsPtrOutput)
}

// Default documents.
func (o SiteConfigOutput) DefaultDocuments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SiteConfig) []string { return v.DefaultDocuments }).(pulumi.StringArrayOutput)
}

// <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
func (o SiteConfigOutput) DetailedErrorLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.DetailedErrorLoggingEnabled }).(pulumi.BoolPtrOutput)
}

// Document root.
func (o SiteConfigOutput) DocumentRoot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.DocumentRoot }).(pulumi.StringPtrOutput)
}

// This is work around for polymorphic types.
func (o SiteConfigOutput) Experiments() ExperimentsPtrOutput {
	return o.ApplyT(func(v SiteConfig) *Experiments { return v.Experiments }).(ExperimentsPtrOutput)
}

// State of FTP / FTPS service
func (o SiteConfigOutput) FtpsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.FtpsState }).(pulumi.StringPtrOutput)
}

// Handler mappings.
func (o SiteConfigOutput) HandlerMappings() HandlerMappingArrayOutput {
	return o.ApplyT(func(v SiteConfig) []HandlerMapping { return v.HandlerMappings }).(HandlerMappingArrayOutput)
}

// Http20Enabled: configures a web site to allow clients to connect over http2.0
func (o SiteConfigOutput) Http20Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.Http20Enabled }).(pulumi.BoolPtrOutput)
}

// <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
func (o SiteConfigOutput) HttpLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.HttpLoggingEnabled }).(pulumi.BoolPtrOutput)
}

// IP security restrictions for main.
func (o SiteConfigOutput) IpSecurityRestrictions() IpSecurityRestrictionArrayOutput {
	return o.ApplyT(func(v SiteConfig) []IpSecurityRestriction { return v.IpSecurityRestrictions }).(IpSecurityRestrictionArrayOutput)
}

// Java container.
func (o SiteConfigOutput) JavaContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.JavaContainer }).(pulumi.StringPtrOutput)
}

// Java container version.
func (o SiteConfigOutput) JavaContainerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.JavaContainerVersion }).(pulumi.StringPtrOutput)
}

// Java version.
func (o SiteConfigOutput) JavaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.JavaVersion }).(pulumi.StringPtrOutput)
}

// Site limits.
func (o SiteConfigOutput) Limits() SiteLimitsPtrOutput {
	return o.ApplyT(func(v SiteConfig) *SiteLimits { return v.Limits }).(SiteLimitsPtrOutput)
}

// Linux App Framework and version
func (o SiteConfigOutput) LinuxFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.LinuxFxVersion }).(pulumi.StringPtrOutput)
}

// Site load balancing.
func (o SiteConfigOutput) LoadBalancing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.LoadBalancing }).(pulumi.StringPtrOutput)
}

// <code>true</code> to enable local MySQL; otherwise, <code>false</code>.
func (o SiteConfigOutput) LocalMySqlEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.LocalMySqlEnabled }).(pulumi.BoolPtrOutput)
}

// HTTP logs directory size limit.
func (o SiteConfigOutput) LogsDirectorySizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfig) *int { return v.LogsDirectorySizeLimit }).(pulumi.IntPtrOutput)
}

// Managed pipeline mode.
func (o SiteConfigOutput) ManagedPipelineMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.ManagedPipelineMode }).(pulumi.StringPtrOutput)
}

// Managed Service Identity Id
func (o SiteConfigOutput) ManagedServiceIdentityId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfig) *int { return v.ManagedServiceIdentityId }).(pulumi.IntPtrOutput)
}

// MinTlsVersion: configures the minimum version of TLS required for SSL requests
func (o SiteConfigOutput) MinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.MinTlsVersion }).(pulumi.StringPtrOutput)
}

// .NET Framework version.
func (o SiteConfigOutput) NetFrameworkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.NetFrameworkVersion }).(pulumi.StringPtrOutput)
}

// Version of Node.js.
func (o SiteConfigOutput) NodeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.NodeVersion }).(pulumi.StringPtrOutput)
}

// Number of workers.
func (o SiteConfigOutput) NumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfig) *int { return v.NumberOfWorkers }).(pulumi.IntPtrOutput)
}

// Version of PHP.
func (o SiteConfigOutput) PhpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.PhpVersion }).(pulumi.StringPtrOutput)
}

// Publishing user name.
func (o SiteConfigOutput) PublishingUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.PublishingUsername }).(pulumi.StringPtrOutput)
}

// Push endpoint settings.
func (o SiteConfigOutput) Push() PushSettingsPtrOutput {
	return o.ApplyT(func(v SiteConfig) *PushSettings { return v.Push }).(PushSettingsPtrOutput)
}

// Version of Python.
func (o SiteConfigOutput) PythonVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.PythonVersion }).(pulumi.StringPtrOutput)
}

// <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
func (o SiteConfigOutput) RemoteDebuggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.RemoteDebuggingEnabled }).(pulumi.BoolPtrOutput)
}

// Remote debugging version.
func (o SiteConfigOutput) RemoteDebuggingVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.RemoteDebuggingVersion }).(pulumi.StringPtrOutput)
}

// <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
func (o SiteConfigOutput) RequestTracingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.RequestTracingEnabled }).(pulumi.BoolPtrOutput)
}

// Request tracing expiration time.
func (o SiteConfigOutput) RequestTracingExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.RequestTracingExpirationTime }).(pulumi.StringPtrOutput)
}

// Number of reserved instances.
// This setting only applies to the Consumption Plan
func (o SiteConfigOutput) ReservedInstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfig) *int { return v.ReservedInstanceCount }).(pulumi.IntPtrOutput)
}

// IP security restrictions for scm.
func (o SiteConfigOutput) ScmIpSecurityRestrictions() IpSecurityRestrictionArrayOutput {
	return o.ApplyT(func(v SiteConfig) []IpSecurityRestriction { return v.ScmIpSecurityRestrictions }).(IpSecurityRestrictionArrayOutput)
}

// IP security restrictions for scm to use main.
func (o SiteConfigOutput) ScmIpSecurityRestrictionsUseMain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.ScmIpSecurityRestrictionsUseMain }).(pulumi.BoolPtrOutput)
}

// SCM type.
func (o SiteConfigOutput) ScmType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.ScmType }).(pulumi.StringPtrOutput)
}

// Tracing options.
func (o SiteConfigOutput) TracingOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.TracingOptions }).(pulumi.StringPtrOutput)
}

// <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
func (o SiteConfigOutput) Use32BitWorkerProcess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.Use32BitWorkerProcess }).(pulumi.BoolPtrOutput)
}

// Virtual applications.
func (o SiteConfigOutput) VirtualApplications() VirtualApplicationArrayOutput {
	return o.ApplyT(func(v SiteConfig) []VirtualApplication { return v.VirtualApplications }).(VirtualApplicationArrayOutput)
}

// Virtual Network name.
func (o SiteConfigOutput) VnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.VnetName }).(pulumi.StringPtrOutput)
}

// <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
func (o SiteConfigOutput) WebSocketsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.WebSocketsEnabled }).(pulumi.BoolPtrOutput)
}

// Xenon App Framework and version
func (o SiteConfigOutput) WindowsFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.WindowsFxVersion }).(pulumi.StringPtrOutput)
}

// Explicit Managed Service Identity Id
func (o SiteConfigOutput) XManagedServiceIdentityId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfig) *int { return v.XManagedServiceIdentityId }).(pulumi.IntPtrOutput)
}

type SiteConfigPtrOutput struct{ *pulumi.OutputState }

func (SiteConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteConfig)(nil)).Elem()
}

func (o SiteConfigPtrOutput) ToSiteConfigPtrOutput() SiteConfigPtrOutput {
	return o
}

func (o SiteConfigPtrOutput) ToSiteConfigPtrOutputWithContext(ctx context.Context) SiteConfigPtrOutput {
	return o
}

func (o SiteConfigPtrOutput) Elem() SiteConfigOutput {
	return o.ApplyT(func(v *SiteConfig) SiteConfig { return *v }).(SiteConfigOutput)
}

// <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
func (o SiteConfigPtrOutput) AlwaysOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.AlwaysOn
	}).(pulumi.BoolPtrOutput)
}

// Information about the formal API definition for the app.
func (o SiteConfigPtrOutput) ApiDefinition() ApiDefinitionInfoPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *ApiDefinitionInfo {
		if v == nil {
			return nil
		}
		return v.ApiDefinition
	}).(ApiDefinitionInfoPtrOutput)
}

// App command line to launch.
func (o SiteConfigPtrOutput) AppCommandLine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.AppCommandLine
	}).(pulumi.StringPtrOutput)
}

// Application settings.
func (o SiteConfigPtrOutput) AppSettings() NameValuePairArrayOutput {
	return o.ApplyT(func(v *SiteConfig) []NameValuePair {
		if v == nil {
			return nil
		}
		return v.AppSettings
	}).(NameValuePairArrayOutput)
}

// <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
func (o SiteConfigPtrOutput) AutoHealEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.AutoHealEnabled
	}).(pulumi.BoolPtrOutput)
}

// Auto Heal rules.
func (o SiteConfigPtrOutput) AutoHealRules() AutoHealRulesPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *AutoHealRules {
		if v == nil {
			return nil
		}
		return v.AutoHealRules
	}).(AutoHealRulesPtrOutput)
}

// Auto-swap slot name.
func (o SiteConfigPtrOutput) AutoSwapSlotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.AutoSwapSlotName
	}).(pulumi.StringPtrOutput)
}

// User-provided Azure storage accounts.
func (o SiteConfigPtrOutput) AzureStorageAccounts() AzureStorageInfoValueMapOutput {
	return o.ApplyT(func(v *SiteConfig) map[string]AzureStorageInfoValue {
		if v == nil {
			return nil
		}
		return v.AzureStorageAccounts
	}).(AzureStorageInfoValueMapOutput)
}

// Connection strings.
func (o SiteConfigPtrOutput) ConnectionStrings() ConnStringInfoArrayOutput {
	return o.ApplyT(func(v *SiteConfig) []ConnStringInfo {
		if v == nil {
			return nil
		}
		return v.ConnectionStrings
	}).(ConnStringInfoArrayOutput)
}

// Cross-Origin Resource Sharing (CORS) settings.
func (o SiteConfigPtrOutput) Cors() CorsSettingsPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *CorsSettings {
		if v == nil {
			return nil
		}
		return v.Cors
	}).(CorsSettingsPtrOutput)
}

// Default documents.
func (o SiteConfigPtrOutput) DefaultDocuments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SiteConfig) []string {
		if v == nil {
			return nil
		}
		return v.DefaultDocuments
	}).(pulumi.StringArrayOutput)
}

// <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
func (o SiteConfigPtrOutput) DetailedErrorLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.DetailedErrorLoggingEnabled
	}).(pulumi.BoolPtrOutput)
}

// Document root.
func (o SiteConfigPtrOutput) DocumentRoot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.DocumentRoot
	}).(pulumi.StringPtrOutput)
}

// This is work around for polymorphic types.
func (o SiteConfigPtrOutput) Experiments() ExperimentsPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *Experiments {
		if v == nil {
			return nil
		}
		return v.Experiments
	}).(ExperimentsPtrOutput)
}

// State of FTP / FTPS service
func (o SiteConfigPtrOutput) FtpsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.FtpsState
	}).(pulumi.StringPtrOutput)
}

// Handler mappings.
func (o SiteConfigPtrOutput) HandlerMappings() HandlerMappingArrayOutput {
	return o.ApplyT(func(v *SiteConfig) []HandlerMapping {
		if v == nil {
			return nil
		}
		return v.HandlerMappings
	}).(HandlerMappingArrayOutput)
}

// Http20Enabled: configures a web site to allow clients to connect over http2.0
func (o SiteConfigPtrOutput) Http20Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Http20Enabled
	}).(pulumi.BoolPtrOutput)
}

// <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
func (o SiteConfigPtrOutput) HttpLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.HttpLoggingEnabled
	}).(pulumi.BoolPtrOutput)
}

// IP security restrictions for main.
func (o SiteConfigPtrOutput) IpSecurityRestrictions() IpSecurityRestrictionArrayOutput {
	return o.ApplyT(func(v *SiteConfig) []IpSecurityRestriction {
		if v == nil {
			return nil
		}
		return v.IpSecurityRestrictions
	}).(IpSecurityRestrictionArrayOutput)
}

// Java container.
func (o SiteConfigPtrOutput) JavaContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.JavaContainer
	}).(pulumi.StringPtrOutput)
}

// Java container version.
func (o SiteConfigPtrOutput) JavaContainerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.JavaContainerVersion
	}).(pulumi.StringPtrOutput)
}

// Java version.
func (o SiteConfigPtrOutput) JavaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.JavaVersion
	}).(pulumi.StringPtrOutput)
}

// Site limits.
func (o SiteConfigPtrOutput) Limits() SiteLimitsPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *SiteLimits {
		if v == nil {
			return nil
		}
		return v.Limits
	}).(SiteLimitsPtrOutput)
}

// Linux App Framework and version
func (o SiteConfigPtrOutput) LinuxFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.LinuxFxVersion
	}).(pulumi.StringPtrOutput)
}

// Site load balancing.
func (o SiteConfigPtrOutput) LoadBalancing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.LoadBalancing
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> to enable local MySQL; otherwise, <code>false</code>.
func (o SiteConfigPtrOutput) LocalMySqlEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.LocalMySqlEnabled
	}).(pulumi.BoolPtrOutput)
}

// HTTP logs directory size limit.
func (o SiteConfigPtrOutput) LogsDirectorySizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *int {
		if v == nil {
			return nil
		}
		return v.LogsDirectorySizeLimit
	}).(pulumi.IntPtrOutput)
}

// Managed pipeline mode.
func (o SiteConfigPtrOutput) ManagedPipelineMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.ManagedPipelineMode
	}).(pulumi.StringPtrOutput)
}

// Managed Service Identity Id
func (o SiteConfigPtrOutput) ManagedServiceIdentityId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *int {
		if v == nil {
			return nil
		}
		return v.ManagedServiceIdentityId
	}).(pulumi.IntPtrOutput)
}

// MinTlsVersion: configures the minimum version of TLS required for SSL requests
func (o SiteConfigPtrOutput) MinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.MinTlsVersion
	}).(pulumi.StringPtrOutput)
}

// .NET Framework version.
func (o SiteConfigPtrOutput) NetFrameworkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.NetFrameworkVersion
	}).(pulumi.StringPtrOutput)
}

// Version of Node.js.
func (o SiteConfigPtrOutput) NodeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.NodeVersion
	}).(pulumi.StringPtrOutput)
}

// Number of workers.
func (o SiteConfigPtrOutput) NumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfWorkers
	}).(pulumi.IntPtrOutput)
}

// Version of PHP.
func (o SiteConfigPtrOutput) PhpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.PhpVersion
	}).(pulumi.StringPtrOutput)
}

// Publishing user name.
func (o SiteConfigPtrOutput) PublishingUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.PublishingUsername
	}).(pulumi.StringPtrOutput)
}

// Push endpoint settings.
func (o SiteConfigPtrOutput) Push() PushSettingsPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *PushSettings {
		if v == nil {
			return nil
		}
		return v.Push
	}).(PushSettingsPtrOutput)
}

// Version of Python.
func (o SiteConfigPtrOutput) PythonVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.PythonVersion
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
func (o SiteConfigPtrOutput) RemoteDebuggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.RemoteDebuggingEnabled
	}).(pulumi.BoolPtrOutput)
}

// Remote debugging version.
func (o SiteConfigPtrOutput) RemoteDebuggingVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.RemoteDebuggingVersion
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
func (o SiteConfigPtrOutput) RequestTracingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.RequestTracingEnabled
	}).(pulumi.BoolPtrOutput)
}

// Request tracing expiration time.
func (o SiteConfigPtrOutput) RequestTracingExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.RequestTracingExpirationTime
	}).(pulumi.StringPtrOutput)
}

// Number of reserved instances.
// This setting only applies to the Consumption Plan
func (o SiteConfigPtrOutput) ReservedInstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *int {
		if v == nil {
			return nil
		}
		return v.ReservedInstanceCount
	}).(pulumi.IntPtrOutput)
}

// IP security restrictions for scm.
func (o SiteConfigPtrOutput) ScmIpSecurityRestrictions() IpSecurityRestrictionArrayOutput {
	return o.ApplyT(func(v *SiteConfig) []IpSecurityRestriction {
		if v == nil {
			return nil
		}
		return v.ScmIpSecurityRestrictions
	}).(IpSecurityRestrictionArrayOutput)
}

// IP security restrictions for scm to use main.
func (o SiteConfigPtrOutput) ScmIpSecurityRestrictionsUseMain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.ScmIpSecurityRestrictionsUseMain
	}).(pulumi.BoolPtrOutput)
}

// SCM type.
func (o SiteConfigPtrOutput) ScmType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.ScmType
	}).(pulumi.StringPtrOutput)
}

// Tracing options.
func (o SiteConfigPtrOutput) TracingOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.TracingOptions
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
func (o SiteConfigPtrOutput) Use32BitWorkerProcess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Use32BitWorkerProcess
	}).(pulumi.BoolPtrOutput)
}

// Virtual applications.
func (o SiteConfigPtrOutput) VirtualApplications() VirtualApplicationArrayOutput {
	return o.ApplyT(func(v *SiteConfig) []VirtualApplication {
		if v == nil {
			return nil
		}
		return v.VirtualApplications
	}).(VirtualApplicationArrayOutput)
}

// Virtual Network name.
func (o SiteConfigPtrOutput) VnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.VnetName
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
func (o SiteConfigPtrOutput) WebSocketsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.WebSocketsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Xenon App Framework and version
func (o SiteConfigPtrOutput) WindowsFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.WindowsFxVersion
	}).(pulumi.StringPtrOutput)
}

// Explicit Managed Service Identity Id
func (o SiteConfigPtrOutput) XManagedServiceIdentityId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *int {
		if v == nil {
			return nil
		}
		return v.XManagedServiceIdentityId
	}).(pulumi.IntPtrOutput)
}

// Configuration of an App Service app.
type SiteConfigResponse struct {
	// <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
	AlwaysOn *bool `pulumi:"alwaysOn"`
	// Information about the formal API definition for the app.
	ApiDefinition *ApiDefinitionInfoResponse `pulumi:"apiDefinition"`
	// App command line to launch.
	AppCommandLine *string `pulumi:"appCommandLine"`
	// Application settings.
	AppSettings []NameValuePairResponse `pulumi:"appSettings"`
	// <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
	AutoHealEnabled *bool `pulumi:"autoHealEnabled"`
	// Auto Heal rules.
	AutoHealRules *AutoHealRulesResponse `pulumi:"autoHealRules"`
	// Auto-swap slot name.
	AutoSwapSlotName *string `pulumi:"autoSwapSlotName"`
	// User-provided Azure storage accounts.
	AzureStorageAccounts map[string]AzureStorageInfoValueResponse `pulumi:"azureStorageAccounts"`
	// Connection strings.
	ConnectionStrings []ConnStringInfoResponse `pulumi:"connectionStrings"`
	// Cross-Origin Resource Sharing (CORS) settings.
	Cors *CorsSettingsResponse `pulumi:"cors"`
	// Default documents.
	DefaultDocuments []string `pulumi:"defaultDocuments"`
	// <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
	DetailedErrorLoggingEnabled *bool `pulumi:"detailedErrorLoggingEnabled"`
	// Document root.
	DocumentRoot *string `pulumi:"documentRoot"`
	// This is work around for polymorphic types.
	Experiments *ExperimentsResponse `pulumi:"experiments"`
	// State of FTP / FTPS service
	FtpsState *string `pulumi:"ftpsState"`
	// Handler mappings.
	HandlerMappings []HandlerMappingResponse `pulumi:"handlerMappings"`
	// Http20Enabled: configures a web site to allow clients to connect over http2.0
	Http20Enabled *bool `pulumi:"http20Enabled"`
	// <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
	HttpLoggingEnabled *bool `pulumi:"httpLoggingEnabled"`
	// IP security restrictions for main.
	IpSecurityRestrictions []IpSecurityRestrictionResponse `pulumi:"ipSecurityRestrictions"`
	// Java container.
	JavaContainer *string `pulumi:"javaContainer"`
	// Java container version.
	JavaContainerVersion *string `pulumi:"javaContainerVersion"`
	// Java version.
	JavaVersion *string `pulumi:"javaVersion"`
	// Site limits.
	Limits *SiteLimitsResponse `pulumi:"limits"`
	// Linux App Framework and version
	LinuxFxVersion *string `pulumi:"linuxFxVersion"`
	// Site load balancing.
	LoadBalancing *string `pulumi:"loadBalancing"`
	// <code>true</code> to enable local MySQL; otherwise, <code>false</code>.
	LocalMySqlEnabled *bool `pulumi:"localMySqlEnabled"`
	// HTTP logs directory size limit.
	LogsDirectorySizeLimit *int `pulumi:"logsDirectorySizeLimit"`
	// Site MachineKey.
	MachineKey SiteMachineKeyResponse `pulumi:"machineKey"`
	// Managed pipeline mode.
	ManagedPipelineMode *string `pulumi:"managedPipelineMode"`
	// Managed Service Identity Id
	ManagedServiceIdentityId *int `pulumi:"managedServiceIdentityId"`
	// MinTlsVersion: configures the minimum version of TLS required for SSL requests
	MinTlsVersion *string `pulumi:"minTlsVersion"`
	// .NET Framework version.
	NetFrameworkVersion *string `pulumi:"netFrameworkVersion"`
	// Version of Node.js.
	NodeVersion *string `pulumi:"nodeVersion"`
	// Number of workers.
	NumberOfWorkers *int `pulumi:"numberOfWorkers"`
	// Version of PHP.
	PhpVersion *string `pulumi:"phpVersion"`
	// Publishing user name.
	PublishingUsername *string `pulumi:"publishingUsername"`
	// Push endpoint settings.
	Push *PushSettingsResponse `pulumi:"push"`
	// Version of Python.
	PythonVersion *string `pulumi:"pythonVersion"`
	// <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
	RemoteDebuggingEnabled *bool `pulumi:"remoteDebuggingEnabled"`
	// Remote debugging version.
	RemoteDebuggingVersion *string `pulumi:"remoteDebuggingVersion"`
	// <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
	RequestTracingEnabled *bool `pulumi:"requestTracingEnabled"`
	// Request tracing expiration time.
	RequestTracingExpirationTime *string `pulumi:"requestTracingExpirationTime"`
	// Number of reserved instances.
	// This setting only applies to the Consumption Plan
	ReservedInstanceCount *int `pulumi:"reservedInstanceCount"`
	// IP security restrictions for scm.
	ScmIpSecurityRestrictions []IpSecurityRestrictionResponse `pulumi:"scmIpSecurityRestrictions"`
	// IP security restrictions for scm to use main.
	ScmIpSecurityRestrictionsUseMain *bool `pulumi:"scmIpSecurityRestrictionsUseMain"`
	// SCM type.
	ScmType *string `pulumi:"scmType"`
	// Tracing options.
	TracingOptions *string `pulumi:"tracingOptions"`
	// <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
	Use32BitWorkerProcess *bool `pulumi:"use32BitWorkerProcess"`
	// Virtual applications.
	VirtualApplications []VirtualApplicationResponse `pulumi:"virtualApplications"`
	// Virtual Network name.
	VnetName *string `pulumi:"vnetName"`
	// <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
	WebSocketsEnabled *bool `pulumi:"webSocketsEnabled"`
	// Xenon App Framework and version
	WindowsFxVersion *string `pulumi:"windowsFxVersion"`
	// Explicit Managed Service Identity Id
	XManagedServiceIdentityId *int `pulumi:"xManagedServiceIdentityId"`
}

// SiteConfigResponseInput is an input type that accepts SiteConfigResponseArgs and SiteConfigResponseOutput values.
// You can construct a concrete instance of `SiteConfigResponseInput` via:
//
//          SiteConfigResponseArgs{...}
type SiteConfigResponseInput interface {
	pulumi.Input

	ToSiteConfigResponseOutput() SiteConfigResponseOutput
	ToSiteConfigResponseOutputWithContext(context.Context) SiteConfigResponseOutput
}

// Configuration of an App Service app.
type SiteConfigResponseArgs struct {
	// <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
	AlwaysOn pulumi.BoolPtrInput `pulumi:"alwaysOn"`
	// Information about the formal API definition for the app.
	ApiDefinition ApiDefinitionInfoResponsePtrInput `pulumi:"apiDefinition"`
	// App command line to launch.
	AppCommandLine pulumi.StringPtrInput `pulumi:"appCommandLine"`
	// Application settings.
	AppSettings NameValuePairResponseArrayInput `pulumi:"appSettings"`
	// <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
	AutoHealEnabled pulumi.BoolPtrInput `pulumi:"autoHealEnabled"`
	// Auto Heal rules.
	AutoHealRules AutoHealRulesResponsePtrInput `pulumi:"autoHealRules"`
	// Auto-swap slot name.
	AutoSwapSlotName pulumi.StringPtrInput `pulumi:"autoSwapSlotName"`
	// User-provided Azure storage accounts.
	AzureStorageAccounts AzureStorageInfoValueResponseMapInput `pulumi:"azureStorageAccounts"`
	// Connection strings.
	ConnectionStrings ConnStringInfoResponseArrayInput `pulumi:"connectionStrings"`
	// Cross-Origin Resource Sharing (CORS) settings.
	Cors CorsSettingsResponsePtrInput `pulumi:"cors"`
	// Default documents.
	DefaultDocuments pulumi.StringArrayInput `pulumi:"defaultDocuments"`
	// <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
	DetailedErrorLoggingEnabled pulumi.BoolPtrInput `pulumi:"detailedErrorLoggingEnabled"`
	// Document root.
	DocumentRoot pulumi.StringPtrInput `pulumi:"documentRoot"`
	// This is work around for polymorphic types.
	Experiments ExperimentsResponsePtrInput `pulumi:"experiments"`
	// State of FTP / FTPS service
	FtpsState pulumi.StringPtrInput `pulumi:"ftpsState"`
	// Handler mappings.
	HandlerMappings HandlerMappingResponseArrayInput `pulumi:"handlerMappings"`
	// Http20Enabled: configures a web site to allow clients to connect over http2.0
	Http20Enabled pulumi.BoolPtrInput `pulumi:"http20Enabled"`
	// <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
	HttpLoggingEnabled pulumi.BoolPtrInput `pulumi:"httpLoggingEnabled"`
	// IP security restrictions for main.
	IpSecurityRestrictions IpSecurityRestrictionResponseArrayInput `pulumi:"ipSecurityRestrictions"`
	// Java container.
	JavaContainer pulumi.StringPtrInput `pulumi:"javaContainer"`
	// Java container version.
	JavaContainerVersion pulumi.StringPtrInput `pulumi:"javaContainerVersion"`
	// Java version.
	JavaVersion pulumi.StringPtrInput `pulumi:"javaVersion"`
	// Site limits.
	Limits SiteLimitsResponsePtrInput `pulumi:"limits"`
	// Linux App Framework and version
	LinuxFxVersion pulumi.StringPtrInput `pulumi:"linuxFxVersion"`
	// Site load balancing.
	LoadBalancing pulumi.StringPtrInput `pulumi:"loadBalancing"`
	// <code>true</code> to enable local MySQL; otherwise, <code>false</code>.
	LocalMySqlEnabled pulumi.BoolPtrInput `pulumi:"localMySqlEnabled"`
	// HTTP logs directory size limit.
	LogsDirectorySizeLimit pulumi.IntPtrInput `pulumi:"logsDirectorySizeLimit"`
	// Site MachineKey.
	MachineKey SiteMachineKeyResponseInput `pulumi:"machineKey"`
	// Managed pipeline mode.
	ManagedPipelineMode pulumi.StringPtrInput `pulumi:"managedPipelineMode"`
	// Managed Service Identity Id
	ManagedServiceIdentityId pulumi.IntPtrInput `pulumi:"managedServiceIdentityId"`
	// MinTlsVersion: configures the minimum version of TLS required for SSL requests
	MinTlsVersion pulumi.StringPtrInput `pulumi:"minTlsVersion"`
	// .NET Framework version.
	NetFrameworkVersion pulumi.StringPtrInput `pulumi:"netFrameworkVersion"`
	// Version of Node.js.
	NodeVersion pulumi.StringPtrInput `pulumi:"nodeVersion"`
	// Number of workers.
	NumberOfWorkers pulumi.IntPtrInput `pulumi:"numberOfWorkers"`
	// Version of PHP.
	PhpVersion pulumi.StringPtrInput `pulumi:"phpVersion"`
	// Publishing user name.
	PublishingUsername pulumi.StringPtrInput `pulumi:"publishingUsername"`
	// Push endpoint settings.
	Push PushSettingsResponsePtrInput `pulumi:"push"`
	// Version of Python.
	PythonVersion pulumi.StringPtrInput `pulumi:"pythonVersion"`
	// <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
	RemoteDebuggingEnabled pulumi.BoolPtrInput `pulumi:"remoteDebuggingEnabled"`
	// Remote debugging version.
	RemoteDebuggingVersion pulumi.StringPtrInput `pulumi:"remoteDebuggingVersion"`
	// <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
	RequestTracingEnabled pulumi.BoolPtrInput `pulumi:"requestTracingEnabled"`
	// Request tracing expiration time.
	RequestTracingExpirationTime pulumi.StringPtrInput `pulumi:"requestTracingExpirationTime"`
	// Number of reserved instances.
	// This setting only applies to the Consumption Plan
	ReservedInstanceCount pulumi.IntPtrInput `pulumi:"reservedInstanceCount"`
	// IP security restrictions for scm.
	ScmIpSecurityRestrictions IpSecurityRestrictionResponseArrayInput `pulumi:"scmIpSecurityRestrictions"`
	// IP security restrictions for scm to use main.
	ScmIpSecurityRestrictionsUseMain pulumi.BoolPtrInput `pulumi:"scmIpSecurityRestrictionsUseMain"`
	// SCM type.
	ScmType pulumi.StringPtrInput `pulumi:"scmType"`
	// Tracing options.
	TracingOptions pulumi.StringPtrInput `pulumi:"tracingOptions"`
	// <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
	Use32BitWorkerProcess pulumi.BoolPtrInput `pulumi:"use32BitWorkerProcess"`
	// Virtual applications.
	VirtualApplications VirtualApplicationResponseArrayInput `pulumi:"virtualApplications"`
	// Virtual Network name.
	VnetName pulumi.StringPtrInput `pulumi:"vnetName"`
	// <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
	WebSocketsEnabled pulumi.BoolPtrInput `pulumi:"webSocketsEnabled"`
	// Xenon App Framework and version
	WindowsFxVersion pulumi.StringPtrInput `pulumi:"windowsFxVersion"`
	// Explicit Managed Service Identity Id
	XManagedServiceIdentityId pulumi.IntPtrInput `pulumi:"xManagedServiceIdentityId"`
}

func (SiteConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteConfigResponse)(nil)).Elem()
}

func (i SiteConfigResponseArgs) ToSiteConfigResponseOutput() SiteConfigResponseOutput {
	return i.ToSiteConfigResponseOutputWithContext(context.Background())
}

func (i SiteConfigResponseArgs) ToSiteConfigResponseOutputWithContext(ctx context.Context) SiteConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteConfigResponseOutput)
}

func (i SiteConfigResponseArgs) ToSiteConfigResponsePtrOutput() SiteConfigResponsePtrOutput {
	return i.ToSiteConfigResponsePtrOutputWithContext(context.Background())
}

func (i SiteConfigResponseArgs) ToSiteConfigResponsePtrOutputWithContext(ctx context.Context) SiteConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteConfigResponseOutput).ToSiteConfigResponsePtrOutputWithContext(ctx)
}

// SiteConfigResponsePtrInput is an input type that accepts SiteConfigResponseArgs, SiteConfigResponsePtr and SiteConfigResponsePtrOutput values.
// You can construct a concrete instance of `SiteConfigResponsePtrInput` via:
//
//          SiteConfigResponseArgs{...}
//
//  or:
//
//          nil
type SiteConfigResponsePtrInput interface {
	pulumi.Input

	ToSiteConfigResponsePtrOutput() SiteConfigResponsePtrOutput
	ToSiteConfigResponsePtrOutputWithContext(context.Context) SiteConfigResponsePtrOutput
}

type siteConfigResponsePtrType SiteConfigResponseArgs

func SiteConfigResponsePtr(v *SiteConfigResponseArgs) SiteConfigResponsePtrInput {
	return (*siteConfigResponsePtrType)(v)
}

func (*siteConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteConfigResponse)(nil)).Elem()
}

func (i *siteConfigResponsePtrType) ToSiteConfigResponsePtrOutput() SiteConfigResponsePtrOutput {
	return i.ToSiteConfigResponsePtrOutputWithContext(context.Background())
}

func (i *siteConfigResponsePtrType) ToSiteConfigResponsePtrOutputWithContext(ctx context.Context) SiteConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteConfigResponsePtrOutput)
}

// Configuration of an App Service app.
type SiteConfigResponseOutput struct{ *pulumi.OutputState }

func (SiteConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteConfigResponse)(nil)).Elem()
}

func (o SiteConfigResponseOutput) ToSiteConfigResponseOutput() SiteConfigResponseOutput {
	return o
}

func (o SiteConfigResponseOutput) ToSiteConfigResponseOutputWithContext(ctx context.Context) SiteConfigResponseOutput {
	return o
}

func (o SiteConfigResponseOutput) ToSiteConfigResponsePtrOutput() SiteConfigResponsePtrOutput {
	return o.ToSiteConfigResponsePtrOutputWithContext(context.Background())
}

func (o SiteConfigResponseOutput) ToSiteConfigResponsePtrOutputWithContext(ctx context.Context) SiteConfigResponsePtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *SiteConfigResponse {
		return &v
	}).(SiteConfigResponsePtrOutput)
}

// <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponseOutput) AlwaysOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.AlwaysOn }).(pulumi.BoolPtrOutput)
}

// Information about the formal API definition for the app.
func (o SiteConfigResponseOutput) ApiDefinition() ApiDefinitionInfoResponsePtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *ApiDefinitionInfoResponse { return v.ApiDefinition }).(ApiDefinitionInfoResponsePtrOutput)
}

// App command line to launch.
func (o SiteConfigResponseOutput) AppCommandLine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.AppCommandLine }).(pulumi.StringPtrOutput)
}

// Application settings.
func (o SiteConfigResponseOutput) AppSettings() NameValuePairResponseArrayOutput {
	return o.ApplyT(func(v SiteConfigResponse) []NameValuePairResponse { return v.AppSettings }).(NameValuePairResponseArrayOutput)
}

// <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponseOutput) AutoHealEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.AutoHealEnabled }).(pulumi.BoolPtrOutput)
}

// Auto Heal rules.
func (o SiteConfigResponseOutput) AutoHealRules() AutoHealRulesResponsePtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *AutoHealRulesResponse { return v.AutoHealRules }).(AutoHealRulesResponsePtrOutput)
}

// Auto-swap slot name.
func (o SiteConfigResponseOutput) AutoSwapSlotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.AutoSwapSlotName }).(pulumi.StringPtrOutput)
}

// User-provided Azure storage accounts.
func (o SiteConfigResponseOutput) AzureStorageAccounts() AzureStorageInfoValueResponseMapOutput {
	return o.ApplyT(func(v SiteConfigResponse) map[string]AzureStorageInfoValueResponse { return v.AzureStorageAccounts }).(AzureStorageInfoValueResponseMapOutput)
}

// Connection strings.
func (o SiteConfigResponseOutput) ConnectionStrings() ConnStringInfoResponseArrayOutput {
	return o.ApplyT(func(v SiteConfigResponse) []ConnStringInfoResponse { return v.ConnectionStrings }).(ConnStringInfoResponseArrayOutput)
}

// Cross-Origin Resource Sharing (CORS) settings.
func (o SiteConfigResponseOutput) Cors() CorsSettingsResponsePtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *CorsSettingsResponse { return v.Cors }).(CorsSettingsResponsePtrOutput)
}

// Default documents.
func (o SiteConfigResponseOutput) DefaultDocuments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SiteConfigResponse) []string { return v.DefaultDocuments }).(pulumi.StringArrayOutput)
}

// <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponseOutput) DetailedErrorLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.DetailedErrorLoggingEnabled }).(pulumi.BoolPtrOutput)
}

// Document root.
func (o SiteConfigResponseOutput) DocumentRoot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.DocumentRoot }).(pulumi.StringPtrOutput)
}

// This is work around for polymorphic types.
func (o SiteConfigResponseOutput) Experiments() ExperimentsResponsePtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *ExperimentsResponse { return v.Experiments }).(ExperimentsResponsePtrOutput)
}

// State of FTP / FTPS service
func (o SiteConfigResponseOutput) FtpsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.FtpsState }).(pulumi.StringPtrOutput)
}

// Handler mappings.
func (o SiteConfigResponseOutput) HandlerMappings() HandlerMappingResponseArrayOutput {
	return o.ApplyT(func(v SiteConfigResponse) []HandlerMappingResponse { return v.HandlerMappings }).(HandlerMappingResponseArrayOutput)
}

// Http20Enabled: configures a web site to allow clients to connect over http2.0
func (o SiteConfigResponseOutput) Http20Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.Http20Enabled }).(pulumi.BoolPtrOutput)
}

// <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponseOutput) HttpLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.HttpLoggingEnabled }).(pulumi.BoolPtrOutput)
}

// IP security restrictions for main.
func (o SiteConfigResponseOutput) IpSecurityRestrictions() IpSecurityRestrictionResponseArrayOutput {
	return o.ApplyT(func(v SiteConfigResponse) []IpSecurityRestrictionResponse { return v.IpSecurityRestrictions }).(IpSecurityRestrictionResponseArrayOutput)
}

// Java container.
func (o SiteConfigResponseOutput) JavaContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.JavaContainer }).(pulumi.StringPtrOutput)
}

// Java container version.
func (o SiteConfigResponseOutput) JavaContainerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.JavaContainerVersion }).(pulumi.StringPtrOutput)
}

// Java version.
func (o SiteConfigResponseOutput) JavaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.JavaVersion }).(pulumi.StringPtrOutput)
}

// Site limits.
func (o SiteConfigResponseOutput) Limits() SiteLimitsResponsePtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *SiteLimitsResponse { return v.Limits }).(SiteLimitsResponsePtrOutput)
}

// Linux App Framework and version
func (o SiteConfigResponseOutput) LinuxFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.LinuxFxVersion }).(pulumi.StringPtrOutput)
}

// Site load balancing.
func (o SiteConfigResponseOutput) LoadBalancing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.LoadBalancing }).(pulumi.StringPtrOutput)
}

// <code>true</code> to enable local MySQL; otherwise, <code>false</code>.
func (o SiteConfigResponseOutput) LocalMySqlEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.LocalMySqlEnabled }).(pulumi.BoolPtrOutput)
}

// HTTP logs directory size limit.
func (o SiteConfigResponseOutput) LogsDirectorySizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *int { return v.LogsDirectorySizeLimit }).(pulumi.IntPtrOutput)
}

// Site MachineKey.
func (o SiteConfigResponseOutput) MachineKey() SiteMachineKeyResponseOutput {
	return o.ApplyT(func(v SiteConfigResponse) SiteMachineKeyResponse { return v.MachineKey }).(SiteMachineKeyResponseOutput)
}

// Managed pipeline mode.
func (o SiteConfigResponseOutput) ManagedPipelineMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.ManagedPipelineMode }).(pulumi.StringPtrOutput)
}

// Managed Service Identity Id
func (o SiteConfigResponseOutput) ManagedServiceIdentityId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *int { return v.ManagedServiceIdentityId }).(pulumi.IntPtrOutput)
}

// MinTlsVersion: configures the minimum version of TLS required for SSL requests
func (o SiteConfigResponseOutput) MinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.MinTlsVersion }).(pulumi.StringPtrOutput)
}

// .NET Framework version.
func (o SiteConfigResponseOutput) NetFrameworkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.NetFrameworkVersion }).(pulumi.StringPtrOutput)
}

// Version of Node.js.
func (o SiteConfigResponseOutput) NodeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.NodeVersion }).(pulumi.StringPtrOutput)
}

// Number of workers.
func (o SiteConfigResponseOutput) NumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *int { return v.NumberOfWorkers }).(pulumi.IntPtrOutput)
}

// Version of PHP.
func (o SiteConfigResponseOutput) PhpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.PhpVersion }).(pulumi.StringPtrOutput)
}

// Publishing user name.
func (o SiteConfigResponseOutput) PublishingUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.PublishingUsername }).(pulumi.StringPtrOutput)
}

// Push endpoint settings.
func (o SiteConfigResponseOutput) Push() PushSettingsResponsePtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *PushSettingsResponse { return v.Push }).(PushSettingsResponsePtrOutput)
}

// Version of Python.
func (o SiteConfigResponseOutput) PythonVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.PythonVersion }).(pulumi.StringPtrOutput)
}

// <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponseOutput) RemoteDebuggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.RemoteDebuggingEnabled }).(pulumi.BoolPtrOutput)
}

// Remote debugging version.
func (o SiteConfigResponseOutput) RemoteDebuggingVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.RemoteDebuggingVersion }).(pulumi.StringPtrOutput)
}

// <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponseOutput) RequestTracingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.RequestTracingEnabled }).(pulumi.BoolPtrOutput)
}

// Request tracing expiration time.
func (o SiteConfigResponseOutput) RequestTracingExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.RequestTracingExpirationTime }).(pulumi.StringPtrOutput)
}

// Number of reserved instances.
// This setting only applies to the Consumption Plan
func (o SiteConfigResponseOutput) ReservedInstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *int { return v.ReservedInstanceCount }).(pulumi.IntPtrOutput)
}

// IP security restrictions for scm.
func (o SiteConfigResponseOutput) ScmIpSecurityRestrictions() IpSecurityRestrictionResponseArrayOutput {
	return o.ApplyT(func(v SiteConfigResponse) []IpSecurityRestrictionResponse { return v.ScmIpSecurityRestrictions }).(IpSecurityRestrictionResponseArrayOutput)
}

// IP security restrictions for scm to use main.
func (o SiteConfigResponseOutput) ScmIpSecurityRestrictionsUseMain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.ScmIpSecurityRestrictionsUseMain }).(pulumi.BoolPtrOutput)
}

// SCM type.
func (o SiteConfigResponseOutput) ScmType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.ScmType }).(pulumi.StringPtrOutput)
}

// Tracing options.
func (o SiteConfigResponseOutput) TracingOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.TracingOptions }).(pulumi.StringPtrOutput)
}

// <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
func (o SiteConfigResponseOutput) Use32BitWorkerProcess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.Use32BitWorkerProcess }).(pulumi.BoolPtrOutput)
}

// Virtual applications.
func (o SiteConfigResponseOutput) VirtualApplications() VirtualApplicationResponseArrayOutput {
	return o.ApplyT(func(v SiteConfigResponse) []VirtualApplicationResponse { return v.VirtualApplications }).(VirtualApplicationResponseArrayOutput)
}

// Virtual Network name.
func (o SiteConfigResponseOutput) VnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.VnetName }).(pulumi.StringPtrOutput)
}

// <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponseOutput) WebSocketsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.WebSocketsEnabled }).(pulumi.BoolPtrOutput)
}

// Xenon App Framework and version
func (o SiteConfigResponseOutput) WindowsFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.WindowsFxVersion }).(pulumi.StringPtrOutput)
}

// Explicit Managed Service Identity Id
func (o SiteConfigResponseOutput) XManagedServiceIdentityId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *int { return v.XManagedServiceIdentityId }).(pulumi.IntPtrOutput)
}

type SiteConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (SiteConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteConfigResponse)(nil)).Elem()
}

func (o SiteConfigResponsePtrOutput) ToSiteConfigResponsePtrOutput() SiteConfigResponsePtrOutput {
	return o
}

func (o SiteConfigResponsePtrOutput) ToSiteConfigResponsePtrOutputWithContext(ctx context.Context) SiteConfigResponsePtrOutput {
	return o
}

func (o SiteConfigResponsePtrOutput) Elem() SiteConfigResponseOutput {
	return o.ApplyT(func(v *SiteConfigResponse) SiteConfigResponse { return *v }).(SiteConfigResponseOutput)
}

// <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponsePtrOutput) AlwaysOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AlwaysOn
	}).(pulumi.BoolPtrOutput)
}

// Information about the formal API definition for the app.
func (o SiteConfigResponsePtrOutput) ApiDefinition() ApiDefinitionInfoResponsePtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *ApiDefinitionInfoResponse {
		if v == nil {
			return nil
		}
		return v.ApiDefinition
	}).(ApiDefinitionInfoResponsePtrOutput)
}

// App command line to launch.
func (o SiteConfigResponsePtrOutput) AppCommandLine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.AppCommandLine
	}).(pulumi.StringPtrOutput)
}

// Application settings.
func (o SiteConfigResponsePtrOutput) AppSettings() NameValuePairResponseArrayOutput {
	return o.ApplyT(func(v *SiteConfigResponse) []NameValuePairResponse {
		if v == nil {
			return nil
		}
		return v.AppSettings
	}).(NameValuePairResponseArrayOutput)
}

// <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponsePtrOutput) AutoHealEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AutoHealEnabled
	}).(pulumi.BoolPtrOutput)
}

// Auto Heal rules.
func (o SiteConfigResponsePtrOutput) AutoHealRules() AutoHealRulesResponsePtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *AutoHealRulesResponse {
		if v == nil {
			return nil
		}
		return v.AutoHealRules
	}).(AutoHealRulesResponsePtrOutput)
}

// Auto-swap slot name.
func (o SiteConfigResponsePtrOutput) AutoSwapSlotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.AutoSwapSlotName
	}).(pulumi.StringPtrOutput)
}

// User-provided Azure storage accounts.
func (o SiteConfigResponsePtrOutput) AzureStorageAccounts() AzureStorageInfoValueResponseMapOutput {
	return o.ApplyT(func(v *SiteConfigResponse) map[string]AzureStorageInfoValueResponse {
		if v == nil {
			return nil
		}
		return v.AzureStorageAccounts
	}).(AzureStorageInfoValueResponseMapOutput)
}

// Connection strings.
func (o SiteConfigResponsePtrOutput) ConnectionStrings() ConnStringInfoResponseArrayOutput {
	return o.ApplyT(func(v *SiteConfigResponse) []ConnStringInfoResponse {
		if v == nil {
			return nil
		}
		return v.ConnectionStrings
	}).(ConnStringInfoResponseArrayOutput)
}

// Cross-Origin Resource Sharing (CORS) settings.
func (o SiteConfigResponsePtrOutput) Cors() CorsSettingsResponsePtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *CorsSettingsResponse {
		if v == nil {
			return nil
		}
		return v.Cors
	}).(CorsSettingsResponsePtrOutput)
}

// Default documents.
func (o SiteConfigResponsePtrOutput) DefaultDocuments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SiteConfigResponse) []string {
		if v == nil {
			return nil
		}
		return v.DefaultDocuments
	}).(pulumi.StringArrayOutput)
}

// <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponsePtrOutput) DetailedErrorLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.DetailedErrorLoggingEnabled
	}).(pulumi.BoolPtrOutput)
}

// Document root.
func (o SiteConfigResponsePtrOutput) DocumentRoot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.DocumentRoot
	}).(pulumi.StringPtrOutput)
}

// This is work around for polymorphic types.
func (o SiteConfigResponsePtrOutput) Experiments() ExperimentsResponsePtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *ExperimentsResponse {
		if v == nil {
			return nil
		}
		return v.Experiments
	}).(ExperimentsResponsePtrOutput)
}

// State of FTP / FTPS service
func (o SiteConfigResponsePtrOutput) FtpsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.FtpsState
	}).(pulumi.StringPtrOutput)
}

// Handler mappings.
func (o SiteConfigResponsePtrOutput) HandlerMappings() HandlerMappingResponseArrayOutput {
	return o.ApplyT(func(v *SiteConfigResponse) []HandlerMappingResponse {
		if v == nil {
			return nil
		}
		return v.HandlerMappings
	}).(HandlerMappingResponseArrayOutput)
}

// Http20Enabled: configures a web site to allow clients to connect over http2.0
func (o SiteConfigResponsePtrOutput) Http20Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Http20Enabled
	}).(pulumi.BoolPtrOutput)
}

// <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponsePtrOutput) HttpLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.HttpLoggingEnabled
	}).(pulumi.BoolPtrOutput)
}

// IP security restrictions for main.
func (o SiteConfigResponsePtrOutput) IpSecurityRestrictions() IpSecurityRestrictionResponseArrayOutput {
	return o.ApplyT(func(v *SiteConfigResponse) []IpSecurityRestrictionResponse {
		if v == nil {
			return nil
		}
		return v.IpSecurityRestrictions
	}).(IpSecurityRestrictionResponseArrayOutput)
}

// Java container.
func (o SiteConfigResponsePtrOutput) JavaContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.JavaContainer
	}).(pulumi.StringPtrOutput)
}

// Java container version.
func (o SiteConfigResponsePtrOutput) JavaContainerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.JavaContainerVersion
	}).(pulumi.StringPtrOutput)
}

// Java version.
func (o SiteConfigResponsePtrOutput) JavaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.JavaVersion
	}).(pulumi.StringPtrOutput)
}

// Site limits.
func (o SiteConfigResponsePtrOutput) Limits() SiteLimitsResponsePtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *SiteLimitsResponse {
		if v == nil {
			return nil
		}
		return v.Limits
	}).(SiteLimitsResponsePtrOutput)
}

// Linux App Framework and version
func (o SiteConfigResponsePtrOutput) LinuxFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.LinuxFxVersion
	}).(pulumi.StringPtrOutput)
}

// Site load balancing.
func (o SiteConfigResponsePtrOutput) LoadBalancing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.LoadBalancing
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> to enable local MySQL; otherwise, <code>false</code>.
func (o SiteConfigResponsePtrOutput) LocalMySqlEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.LocalMySqlEnabled
	}).(pulumi.BoolPtrOutput)
}

// HTTP logs directory size limit.
func (o SiteConfigResponsePtrOutput) LogsDirectorySizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.LogsDirectorySizeLimit
	}).(pulumi.IntPtrOutput)
}

// Site MachineKey.
func (o SiteConfigResponsePtrOutput) MachineKey() SiteMachineKeyResponsePtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *SiteMachineKeyResponse {
		if v == nil {
			return nil
		}
		return &v.MachineKey
	}).(SiteMachineKeyResponsePtrOutput)
}

// Managed pipeline mode.
func (o SiteConfigResponsePtrOutput) ManagedPipelineMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.ManagedPipelineMode
	}).(pulumi.StringPtrOutput)
}

// Managed Service Identity Id
func (o SiteConfigResponsePtrOutput) ManagedServiceIdentityId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.ManagedServiceIdentityId
	}).(pulumi.IntPtrOutput)
}

// MinTlsVersion: configures the minimum version of TLS required for SSL requests
func (o SiteConfigResponsePtrOutput) MinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.MinTlsVersion
	}).(pulumi.StringPtrOutput)
}

// .NET Framework version.
func (o SiteConfigResponsePtrOutput) NetFrameworkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.NetFrameworkVersion
	}).(pulumi.StringPtrOutput)
}

// Version of Node.js.
func (o SiteConfigResponsePtrOutput) NodeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.NodeVersion
	}).(pulumi.StringPtrOutput)
}

// Number of workers.
func (o SiteConfigResponsePtrOutput) NumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfWorkers
	}).(pulumi.IntPtrOutput)
}

// Version of PHP.
func (o SiteConfigResponsePtrOutput) PhpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.PhpVersion
	}).(pulumi.StringPtrOutput)
}

// Publishing user name.
func (o SiteConfigResponsePtrOutput) PublishingUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.PublishingUsername
	}).(pulumi.StringPtrOutput)
}

// Push endpoint settings.
func (o SiteConfigResponsePtrOutput) Push() PushSettingsResponsePtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *PushSettingsResponse {
		if v == nil {
			return nil
		}
		return v.Push
	}).(PushSettingsResponsePtrOutput)
}

// Version of Python.
func (o SiteConfigResponsePtrOutput) PythonVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.PythonVersion
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponsePtrOutput) RemoteDebuggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.RemoteDebuggingEnabled
	}).(pulumi.BoolPtrOutput)
}

// Remote debugging version.
func (o SiteConfigResponsePtrOutput) RemoteDebuggingVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.RemoteDebuggingVersion
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponsePtrOutput) RequestTracingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.RequestTracingEnabled
	}).(pulumi.BoolPtrOutput)
}

// Request tracing expiration time.
func (o SiteConfigResponsePtrOutput) RequestTracingExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.RequestTracingExpirationTime
	}).(pulumi.StringPtrOutput)
}

// Number of reserved instances.
// This setting only applies to the Consumption Plan
func (o SiteConfigResponsePtrOutput) ReservedInstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.ReservedInstanceCount
	}).(pulumi.IntPtrOutput)
}

// IP security restrictions for scm.
func (o SiteConfigResponsePtrOutput) ScmIpSecurityRestrictions() IpSecurityRestrictionResponseArrayOutput {
	return o.ApplyT(func(v *SiteConfigResponse) []IpSecurityRestrictionResponse {
		if v == nil {
			return nil
		}
		return v.ScmIpSecurityRestrictions
	}).(IpSecurityRestrictionResponseArrayOutput)
}

// IP security restrictions for scm to use main.
func (o SiteConfigResponsePtrOutput) ScmIpSecurityRestrictionsUseMain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ScmIpSecurityRestrictionsUseMain
	}).(pulumi.BoolPtrOutput)
}

// SCM type.
func (o SiteConfigResponsePtrOutput) ScmType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.ScmType
	}).(pulumi.StringPtrOutput)
}

// Tracing options.
func (o SiteConfigResponsePtrOutput) TracingOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.TracingOptions
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
func (o SiteConfigResponsePtrOutput) Use32BitWorkerProcess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Use32BitWorkerProcess
	}).(pulumi.BoolPtrOutput)
}

// Virtual applications.
func (o SiteConfigResponsePtrOutput) VirtualApplications() VirtualApplicationResponseArrayOutput {
	return o.ApplyT(func(v *SiteConfigResponse) []VirtualApplicationResponse {
		if v == nil {
			return nil
		}
		return v.VirtualApplications
	}).(VirtualApplicationResponseArrayOutput)
}

// Virtual Network name.
func (o SiteConfigResponsePtrOutput) VnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.VnetName
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponsePtrOutput) WebSocketsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.WebSocketsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Xenon App Framework and version
func (o SiteConfigResponsePtrOutput) WindowsFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.WindowsFxVersion
	}).(pulumi.StringPtrOutput)
}

// Explicit Managed Service Identity Id
func (o SiteConfigResponsePtrOutput) XManagedServiceIdentityId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.XManagedServiceIdentityId
	}).(pulumi.IntPtrOutput)
}

// SiteExtensionInfo resource specific properties
type SiteExtensionInfoResponseProperties struct {
	// List of authors.
	Authors []string `pulumi:"authors"`
	// Site Extension comment.
	Comment *string `pulumi:"comment"`
	// Detailed description.
	Description *string `pulumi:"description"`
	// Count of downloads.
	Download_count *int `pulumi:"download_count"`
	// Site extension ID.
	Extension_id *string `pulumi:"extension_id"`
	// Site extension type.
	Extension_type *string `pulumi:"extension_type"`
	// Extension URL.
	Extension_url *string `pulumi:"extension_url"`
	// Feed URL.
	Feed_url *string `pulumi:"feed_url"`
	// Icon URL.
	Icon_url *string `pulumi:"icon_url"`
	// Installed timestamp.
	Installed_date_time *string `pulumi:"installed_date_time"`
	// Installer command line parameters.
	Installer_command_line_params *string `pulumi:"installer_command_line_params"`
	// License URL.
	License_url *string `pulumi:"license_url"`
	// <code>true</code> if the local version is the latest version; <code>false</code> otherwise.
	Local_is_latest_version *bool `pulumi:"local_is_latest_version"`
	// Local path.
	Local_path *string `pulumi:"local_path"`
	// Project URL.
	Project_url *string `pulumi:"project_url"`
	// Provisioning state.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Published timestamp.
	Published_date_time *string `pulumi:"published_date_time"`
	// Summary description.
	Summary *string `pulumi:"summary"`
	Title   *string `pulumi:"title"`
	// Version information.
	Version *string `pulumi:"version"`
}

// SiteExtensionInfoResponsePropertiesInput is an input type that accepts SiteExtensionInfoResponsePropertiesArgs and SiteExtensionInfoResponsePropertiesOutput values.
// You can construct a concrete instance of `SiteExtensionInfoResponsePropertiesInput` via:
//
//          SiteExtensionInfoResponsePropertiesArgs{...}
type SiteExtensionInfoResponsePropertiesInput interface {
	pulumi.Input

	ToSiteExtensionInfoResponsePropertiesOutput() SiteExtensionInfoResponsePropertiesOutput
	ToSiteExtensionInfoResponsePropertiesOutputWithContext(context.Context) SiteExtensionInfoResponsePropertiesOutput
}

// SiteExtensionInfo resource specific properties
type SiteExtensionInfoResponsePropertiesArgs struct {
	// List of authors.
	Authors pulumi.StringArrayInput `pulumi:"authors"`
	// Site Extension comment.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// Detailed description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Count of downloads.
	Download_count pulumi.IntPtrInput `pulumi:"download_count"`
	// Site extension ID.
	Extension_id pulumi.StringPtrInput `pulumi:"extension_id"`
	// Site extension type.
	Extension_type pulumi.StringPtrInput `pulumi:"extension_type"`
	// Extension URL.
	Extension_url pulumi.StringPtrInput `pulumi:"extension_url"`
	// Feed URL.
	Feed_url pulumi.StringPtrInput `pulumi:"feed_url"`
	// Icon URL.
	Icon_url pulumi.StringPtrInput `pulumi:"icon_url"`
	// Installed timestamp.
	Installed_date_time pulumi.StringPtrInput `pulumi:"installed_date_time"`
	// Installer command line parameters.
	Installer_command_line_params pulumi.StringPtrInput `pulumi:"installer_command_line_params"`
	// License URL.
	License_url pulumi.StringPtrInput `pulumi:"license_url"`
	// <code>true</code> if the local version is the latest version; <code>false</code> otherwise.
	Local_is_latest_version pulumi.BoolPtrInput `pulumi:"local_is_latest_version"`
	// Local path.
	Local_path pulumi.StringPtrInput `pulumi:"local_path"`
	// Project URL.
	Project_url pulumi.StringPtrInput `pulumi:"project_url"`
	// Provisioning state.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Published timestamp.
	Published_date_time pulumi.StringPtrInput `pulumi:"published_date_time"`
	// Summary description.
	Summary pulumi.StringPtrInput `pulumi:"summary"`
	Title   pulumi.StringPtrInput `pulumi:"title"`
	// Version information.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (SiteExtensionInfoResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteExtensionInfoResponseProperties)(nil)).Elem()
}

func (i SiteExtensionInfoResponsePropertiesArgs) ToSiteExtensionInfoResponsePropertiesOutput() SiteExtensionInfoResponsePropertiesOutput {
	return i.ToSiteExtensionInfoResponsePropertiesOutputWithContext(context.Background())
}

func (i SiteExtensionInfoResponsePropertiesArgs) ToSiteExtensionInfoResponsePropertiesOutputWithContext(ctx context.Context) SiteExtensionInfoResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteExtensionInfoResponsePropertiesOutput)
}

func (i SiteExtensionInfoResponsePropertiesArgs) ToSiteExtensionInfoResponsePropertiesPtrOutput() SiteExtensionInfoResponsePropertiesPtrOutput {
	return i.ToSiteExtensionInfoResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i SiteExtensionInfoResponsePropertiesArgs) ToSiteExtensionInfoResponsePropertiesPtrOutputWithContext(ctx context.Context) SiteExtensionInfoResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteExtensionInfoResponsePropertiesOutput).ToSiteExtensionInfoResponsePropertiesPtrOutputWithContext(ctx)
}

// SiteExtensionInfoResponsePropertiesPtrInput is an input type that accepts SiteExtensionInfoResponsePropertiesArgs, SiteExtensionInfoResponsePropertiesPtr and SiteExtensionInfoResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `SiteExtensionInfoResponsePropertiesPtrInput` via:
//
//          SiteExtensionInfoResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type SiteExtensionInfoResponsePropertiesPtrInput interface {
	pulumi.Input

	ToSiteExtensionInfoResponsePropertiesPtrOutput() SiteExtensionInfoResponsePropertiesPtrOutput
	ToSiteExtensionInfoResponsePropertiesPtrOutputWithContext(context.Context) SiteExtensionInfoResponsePropertiesPtrOutput
}

type siteExtensionInfoResponsePropertiesPtrType SiteExtensionInfoResponsePropertiesArgs

func SiteExtensionInfoResponsePropertiesPtr(v *SiteExtensionInfoResponsePropertiesArgs) SiteExtensionInfoResponsePropertiesPtrInput {
	return (*siteExtensionInfoResponsePropertiesPtrType)(v)
}

func (*siteExtensionInfoResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteExtensionInfoResponseProperties)(nil)).Elem()
}

func (i *siteExtensionInfoResponsePropertiesPtrType) ToSiteExtensionInfoResponsePropertiesPtrOutput() SiteExtensionInfoResponsePropertiesPtrOutput {
	return i.ToSiteExtensionInfoResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *siteExtensionInfoResponsePropertiesPtrType) ToSiteExtensionInfoResponsePropertiesPtrOutputWithContext(ctx context.Context) SiteExtensionInfoResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteExtensionInfoResponsePropertiesPtrOutput)
}

// SiteExtensionInfo resource specific properties
type SiteExtensionInfoResponsePropertiesOutput struct{ *pulumi.OutputState }

func (SiteExtensionInfoResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteExtensionInfoResponseProperties)(nil)).Elem()
}

func (o SiteExtensionInfoResponsePropertiesOutput) ToSiteExtensionInfoResponsePropertiesOutput() SiteExtensionInfoResponsePropertiesOutput {
	return o
}

func (o SiteExtensionInfoResponsePropertiesOutput) ToSiteExtensionInfoResponsePropertiesOutputWithContext(ctx context.Context) SiteExtensionInfoResponsePropertiesOutput {
	return o
}

func (o SiteExtensionInfoResponsePropertiesOutput) ToSiteExtensionInfoResponsePropertiesPtrOutput() SiteExtensionInfoResponsePropertiesPtrOutput {
	return o.ToSiteExtensionInfoResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o SiteExtensionInfoResponsePropertiesOutput) ToSiteExtensionInfoResponsePropertiesPtrOutputWithContext(ctx context.Context) SiteExtensionInfoResponsePropertiesPtrOutput {
	return o.ApplyT(func(v SiteExtensionInfoResponseProperties) *SiteExtensionInfoResponseProperties {
		return &v
	}).(SiteExtensionInfoResponsePropertiesPtrOutput)
}

// List of authors.
func (o SiteExtensionInfoResponsePropertiesOutput) Authors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SiteExtensionInfoResponseProperties) []string { return v.Authors }).(pulumi.StringArrayOutput)
}

// Site Extension comment.
func (o SiteExtensionInfoResponsePropertiesOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteExtensionInfoResponseProperties) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// Detailed description.
func (o SiteExtensionInfoResponsePropertiesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteExtensionInfoResponseProperties) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Count of downloads.
func (o SiteExtensionInfoResponsePropertiesOutput) Download_count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteExtensionInfoResponseProperties) *int { return v.Download_count }).(pulumi.IntPtrOutput)
}

// Site extension ID.
func (o SiteExtensionInfoResponsePropertiesOutput) Extension_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteExtensionInfoResponseProperties) *string { return v.Extension_id }).(pulumi.StringPtrOutput)
}

// Site extension type.
func (o SiteExtensionInfoResponsePropertiesOutput) Extension_type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteExtensionInfoResponseProperties) *string { return v.Extension_type }).(pulumi.StringPtrOutput)
}

// Extension URL.
func (o SiteExtensionInfoResponsePropertiesOutput) Extension_url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteExtensionInfoResponseProperties) *string { return v.Extension_url }).(pulumi.StringPtrOutput)
}

// Feed URL.
func (o SiteExtensionInfoResponsePropertiesOutput) Feed_url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteExtensionInfoResponseProperties) *string { return v.Feed_url }).(pulumi.StringPtrOutput)
}

// Icon URL.
func (o SiteExtensionInfoResponsePropertiesOutput) Icon_url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteExtensionInfoResponseProperties) *string { return v.Icon_url }).(pulumi.StringPtrOutput)
}

// Installed timestamp.
func (o SiteExtensionInfoResponsePropertiesOutput) Installed_date_time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteExtensionInfoResponseProperties) *string { return v.Installed_date_time }).(pulumi.StringPtrOutput)
}

// Installer command line parameters.
func (o SiteExtensionInfoResponsePropertiesOutput) Installer_command_line_params() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteExtensionInfoResponseProperties) *string { return v.Installer_command_line_params }).(pulumi.StringPtrOutput)
}

// License URL.
func (o SiteExtensionInfoResponsePropertiesOutput) License_url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteExtensionInfoResponseProperties) *string { return v.License_url }).(pulumi.StringPtrOutput)
}

// <code>true</code> if the local version is the latest version; <code>false</code> otherwise.
func (o SiteExtensionInfoResponsePropertiesOutput) Local_is_latest_version() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteExtensionInfoResponseProperties) *bool { return v.Local_is_latest_version }).(pulumi.BoolPtrOutput)
}

// Local path.
func (o SiteExtensionInfoResponsePropertiesOutput) Local_path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteExtensionInfoResponseProperties) *string { return v.Local_path }).(pulumi.StringPtrOutput)
}

// Project URL.
func (o SiteExtensionInfoResponsePropertiesOutput) Project_url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteExtensionInfoResponseProperties) *string { return v.Project_url }).(pulumi.StringPtrOutput)
}

// Provisioning state.
func (o SiteExtensionInfoResponsePropertiesOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteExtensionInfoResponseProperties) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Published timestamp.
func (o SiteExtensionInfoResponsePropertiesOutput) Published_date_time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteExtensionInfoResponseProperties) *string { return v.Published_date_time }).(pulumi.StringPtrOutput)
}

// Summary description.
func (o SiteExtensionInfoResponsePropertiesOutput) Summary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteExtensionInfoResponseProperties) *string { return v.Summary }).(pulumi.StringPtrOutput)
}

func (o SiteExtensionInfoResponsePropertiesOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteExtensionInfoResponseProperties) *string { return v.Title }).(pulumi.StringPtrOutput)
}

// Version information.
func (o SiteExtensionInfoResponsePropertiesOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteExtensionInfoResponseProperties) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type SiteExtensionInfoResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (SiteExtensionInfoResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteExtensionInfoResponseProperties)(nil)).Elem()
}

func (o SiteExtensionInfoResponsePropertiesPtrOutput) ToSiteExtensionInfoResponsePropertiesPtrOutput() SiteExtensionInfoResponsePropertiesPtrOutput {
	return o
}

func (o SiteExtensionInfoResponsePropertiesPtrOutput) ToSiteExtensionInfoResponsePropertiesPtrOutputWithContext(ctx context.Context) SiteExtensionInfoResponsePropertiesPtrOutput {
	return o
}

func (o SiteExtensionInfoResponsePropertiesPtrOutput) Elem() SiteExtensionInfoResponsePropertiesOutput {
	return o.ApplyT(func(v *SiteExtensionInfoResponseProperties) SiteExtensionInfoResponseProperties { return *v }).(SiteExtensionInfoResponsePropertiesOutput)
}

// List of authors.
func (o SiteExtensionInfoResponsePropertiesPtrOutput) Authors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SiteExtensionInfoResponseProperties) []string {
		if v == nil {
			return nil
		}
		return v.Authors
	}).(pulumi.StringArrayOutput)
}

// Site Extension comment.
func (o SiteExtensionInfoResponsePropertiesPtrOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteExtensionInfoResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Comment
	}).(pulumi.StringPtrOutput)
}

// Detailed description.
func (o SiteExtensionInfoResponsePropertiesPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteExtensionInfoResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Count of downloads.
func (o SiteExtensionInfoResponsePropertiesPtrOutput) Download_count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteExtensionInfoResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.Download_count
	}).(pulumi.IntPtrOutput)
}

// Site extension ID.
func (o SiteExtensionInfoResponsePropertiesPtrOutput) Extension_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteExtensionInfoResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Extension_id
	}).(pulumi.StringPtrOutput)
}

// Site extension type.
func (o SiteExtensionInfoResponsePropertiesPtrOutput) Extension_type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteExtensionInfoResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Extension_type
	}).(pulumi.StringPtrOutput)
}

// Extension URL.
func (o SiteExtensionInfoResponsePropertiesPtrOutput) Extension_url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteExtensionInfoResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Extension_url
	}).(pulumi.StringPtrOutput)
}

// Feed URL.
func (o SiteExtensionInfoResponsePropertiesPtrOutput) Feed_url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteExtensionInfoResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Feed_url
	}).(pulumi.StringPtrOutput)
}

// Icon URL.
func (o SiteExtensionInfoResponsePropertiesPtrOutput) Icon_url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteExtensionInfoResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Icon_url
	}).(pulumi.StringPtrOutput)
}

// Installed timestamp.
func (o SiteExtensionInfoResponsePropertiesPtrOutput) Installed_date_time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteExtensionInfoResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Installed_date_time
	}).(pulumi.StringPtrOutput)
}

// Installer command line parameters.
func (o SiteExtensionInfoResponsePropertiesPtrOutput) Installer_command_line_params() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteExtensionInfoResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Installer_command_line_params
	}).(pulumi.StringPtrOutput)
}

// License URL.
func (o SiteExtensionInfoResponsePropertiesPtrOutput) License_url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteExtensionInfoResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.License_url
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> if the local version is the latest version; <code>false</code> otherwise.
func (o SiteExtensionInfoResponsePropertiesPtrOutput) Local_is_latest_version() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteExtensionInfoResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Local_is_latest_version
	}).(pulumi.BoolPtrOutput)
}

// Local path.
func (o SiteExtensionInfoResponsePropertiesPtrOutput) Local_path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteExtensionInfoResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Local_path
	}).(pulumi.StringPtrOutput)
}

// Project URL.
func (o SiteExtensionInfoResponsePropertiesPtrOutput) Project_url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteExtensionInfoResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Project_url
	}).(pulumi.StringPtrOutput)
}

// Provisioning state.
func (o SiteExtensionInfoResponsePropertiesPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteExtensionInfoResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Published timestamp.
func (o SiteExtensionInfoResponsePropertiesPtrOutput) Published_date_time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteExtensionInfoResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Published_date_time
	}).(pulumi.StringPtrOutput)
}

// Summary description.
func (o SiteExtensionInfoResponsePropertiesPtrOutput) Summary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteExtensionInfoResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Summary
	}).(pulumi.StringPtrOutput)
}

func (o SiteExtensionInfoResponsePropertiesPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteExtensionInfoResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

// Version information.
func (o SiteExtensionInfoResponsePropertiesPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteExtensionInfoResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Metric limits set on an app.
type SiteLimits struct {
	// Maximum allowed disk size usage in MB.
	MaxDiskSizeInMb *int `pulumi:"maxDiskSizeInMb"`
	// Maximum allowed memory usage in MB.
	MaxMemoryInMb *int `pulumi:"maxMemoryInMb"`
	// Maximum allowed CPU usage percentage.
	MaxPercentageCpu *float64 `pulumi:"maxPercentageCpu"`
}

// SiteLimitsInput is an input type that accepts SiteLimitsArgs and SiteLimitsOutput values.
// You can construct a concrete instance of `SiteLimitsInput` via:
//
//          SiteLimitsArgs{...}
type SiteLimitsInput interface {
	pulumi.Input

	ToSiteLimitsOutput() SiteLimitsOutput
	ToSiteLimitsOutputWithContext(context.Context) SiteLimitsOutput
}

// Metric limits set on an app.
type SiteLimitsArgs struct {
	// Maximum allowed disk size usage in MB.
	MaxDiskSizeInMb pulumi.IntPtrInput `pulumi:"maxDiskSizeInMb"`
	// Maximum allowed memory usage in MB.
	MaxMemoryInMb pulumi.IntPtrInput `pulumi:"maxMemoryInMb"`
	// Maximum allowed CPU usage percentage.
	MaxPercentageCpu pulumi.Float64PtrInput `pulumi:"maxPercentageCpu"`
}

func (SiteLimitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteLimits)(nil)).Elem()
}

func (i SiteLimitsArgs) ToSiteLimitsOutput() SiteLimitsOutput {
	return i.ToSiteLimitsOutputWithContext(context.Background())
}

func (i SiteLimitsArgs) ToSiteLimitsOutputWithContext(ctx context.Context) SiteLimitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteLimitsOutput)
}

func (i SiteLimitsArgs) ToSiteLimitsPtrOutput() SiteLimitsPtrOutput {
	return i.ToSiteLimitsPtrOutputWithContext(context.Background())
}

func (i SiteLimitsArgs) ToSiteLimitsPtrOutputWithContext(ctx context.Context) SiteLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteLimitsOutput).ToSiteLimitsPtrOutputWithContext(ctx)
}

// SiteLimitsPtrInput is an input type that accepts SiteLimitsArgs, SiteLimitsPtr and SiteLimitsPtrOutput values.
// You can construct a concrete instance of `SiteLimitsPtrInput` via:
//
//          SiteLimitsArgs{...}
//
//  or:
//
//          nil
type SiteLimitsPtrInput interface {
	pulumi.Input

	ToSiteLimitsPtrOutput() SiteLimitsPtrOutput
	ToSiteLimitsPtrOutputWithContext(context.Context) SiteLimitsPtrOutput
}

type siteLimitsPtrType SiteLimitsArgs

func SiteLimitsPtr(v *SiteLimitsArgs) SiteLimitsPtrInput {
	return (*siteLimitsPtrType)(v)
}

func (*siteLimitsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteLimits)(nil)).Elem()
}

func (i *siteLimitsPtrType) ToSiteLimitsPtrOutput() SiteLimitsPtrOutput {
	return i.ToSiteLimitsPtrOutputWithContext(context.Background())
}

func (i *siteLimitsPtrType) ToSiteLimitsPtrOutputWithContext(ctx context.Context) SiteLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteLimitsPtrOutput)
}

// Metric limits set on an app.
type SiteLimitsOutput struct{ *pulumi.OutputState }

func (SiteLimitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteLimits)(nil)).Elem()
}

func (o SiteLimitsOutput) ToSiteLimitsOutput() SiteLimitsOutput {
	return o
}

func (o SiteLimitsOutput) ToSiteLimitsOutputWithContext(ctx context.Context) SiteLimitsOutput {
	return o
}

func (o SiteLimitsOutput) ToSiteLimitsPtrOutput() SiteLimitsPtrOutput {
	return o.ToSiteLimitsPtrOutputWithContext(context.Background())
}

func (o SiteLimitsOutput) ToSiteLimitsPtrOutputWithContext(ctx context.Context) SiteLimitsPtrOutput {
	return o.ApplyT(func(v SiteLimits) *SiteLimits {
		return &v
	}).(SiteLimitsPtrOutput)
}

// Maximum allowed disk size usage in MB.
func (o SiteLimitsOutput) MaxDiskSizeInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteLimits) *int { return v.MaxDiskSizeInMb }).(pulumi.IntPtrOutput)
}

// Maximum allowed memory usage in MB.
func (o SiteLimitsOutput) MaxMemoryInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteLimits) *int { return v.MaxMemoryInMb }).(pulumi.IntPtrOutput)
}

// Maximum allowed CPU usage percentage.
func (o SiteLimitsOutput) MaxPercentageCpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SiteLimits) *float64 { return v.MaxPercentageCpu }).(pulumi.Float64PtrOutput)
}

type SiteLimitsPtrOutput struct{ *pulumi.OutputState }

func (SiteLimitsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteLimits)(nil)).Elem()
}

func (o SiteLimitsPtrOutput) ToSiteLimitsPtrOutput() SiteLimitsPtrOutput {
	return o
}

func (o SiteLimitsPtrOutput) ToSiteLimitsPtrOutputWithContext(ctx context.Context) SiteLimitsPtrOutput {
	return o
}

func (o SiteLimitsPtrOutput) Elem() SiteLimitsOutput {
	return o.ApplyT(func(v *SiteLimits) SiteLimits { return *v }).(SiteLimitsOutput)
}

// Maximum allowed disk size usage in MB.
func (o SiteLimitsPtrOutput) MaxDiskSizeInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteLimits) *int {
		if v == nil {
			return nil
		}
		return v.MaxDiskSizeInMb
	}).(pulumi.IntPtrOutput)
}

// Maximum allowed memory usage in MB.
func (o SiteLimitsPtrOutput) MaxMemoryInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteLimits) *int {
		if v == nil {
			return nil
		}
		return v.MaxMemoryInMb
	}).(pulumi.IntPtrOutput)
}

// Maximum allowed CPU usage percentage.
func (o SiteLimitsPtrOutput) MaxPercentageCpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SiteLimits) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxPercentageCpu
	}).(pulumi.Float64PtrOutput)
}

// Metric limits set on an app.
type SiteLimitsResponse struct {
	// Maximum allowed disk size usage in MB.
	MaxDiskSizeInMb *int `pulumi:"maxDiskSizeInMb"`
	// Maximum allowed memory usage in MB.
	MaxMemoryInMb *int `pulumi:"maxMemoryInMb"`
	// Maximum allowed CPU usage percentage.
	MaxPercentageCpu *float64 `pulumi:"maxPercentageCpu"`
}

// SiteLimitsResponseInput is an input type that accepts SiteLimitsResponseArgs and SiteLimitsResponseOutput values.
// You can construct a concrete instance of `SiteLimitsResponseInput` via:
//
//          SiteLimitsResponseArgs{...}
type SiteLimitsResponseInput interface {
	pulumi.Input

	ToSiteLimitsResponseOutput() SiteLimitsResponseOutput
	ToSiteLimitsResponseOutputWithContext(context.Context) SiteLimitsResponseOutput
}

// Metric limits set on an app.
type SiteLimitsResponseArgs struct {
	// Maximum allowed disk size usage in MB.
	MaxDiskSizeInMb pulumi.IntPtrInput `pulumi:"maxDiskSizeInMb"`
	// Maximum allowed memory usage in MB.
	MaxMemoryInMb pulumi.IntPtrInput `pulumi:"maxMemoryInMb"`
	// Maximum allowed CPU usage percentage.
	MaxPercentageCpu pulumi.Float64PtrInput `pulumi:"maxPercentageCpu"`
}

func (SiteLimitsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteLimitsResponse)(nil)).Elem()
}

func (i SiteLimitsResponseArgs) ToSiteLimitsResponseOutput() SiteLimitsResponseOutput {
	return i.ToSiteLimitsResponseOutputWithContext(context.Background())
}

func (i SiteLimitsResponseArgs) ToSiteLimitsResponseOutputWithContext(ctx context.Context) SiteLimitsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteLimitsResponseOutput)
}

func (i SiteLimitsResponseArgs) ToSiteLimitsResponsePtrOutput() SiteLimitsResponsePtrOutput {
	return i.ToSiteLimitsResponsePtrOutputWithContext(context.Background())
}

func (i SiteLimitsResponseArgs) ToSiteLimitsResponsePtrOutputWithContext(ctx context.Context) SiteLimitsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteLimitsResponseOutput).ToSiteLimitsResponsePtrOutputWithContext(ctx)
}

// SiteLimitsResponsePtrInput is an input type that accepts SiteLimitsResponseArgs, SiteLimitsResponsePtr and SiteLimitsResponsePtrOutput values.
// You can construct a concrete instance of `SiteLimitsResponsePtrInput` via:
//
//          SiteLimitsResponseArgs{...}
//
//  or:
//
//          nil
type SiteLimitsResponsePtrInput interface {
	pulumi.Input

	ToSiteLimitsResponsePtrOutput() SiteLimitsResponsePtrOutput
	ToSiteLimitsResponsePtrOutputWithContext(context.Context) SiteLimitsResponsePtrOutput
}

type siteLimitsResponsePtrType SiteLimitsResponseArgs

func SiteLimitsResponsePtr(v *SiteLimitsResponseArgs) SiteLimitsResponsePtrInput {
	return (*siteLimitsResponsePtrType)(v)
}

func (*siteLimitsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteLimitsResponse)(nil)).Elem()
}

func (i *siteLimitsResponsePtrType) ToSiteLimitsResponsePtrOutput() SiteLimitsResponsePtrOutput {
	return i.ToSiteLimitsResponsePtrOutputWithContext(context.Background())
}

func (i *siteLimitsResponsePtrType) ToSiteLimitsResponsePtrOutputWithContext(ctx context.Context) SiteLimitsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteLimitsResponsePtrOutput)
}

// Metric limits set on an app.
type SiteLimitsResponseOutput struct{ *pulumi.OutputState }

func (SiteLimitsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteLimitsResponse)(nil)).Elem()
}

func (o SiteLimitsResponseOutput) ToSiteLimitsResponseOutput() SiteLimitsResponseOutput {
	return o
}

func (o SiteLimitsResponseOutput) ToSiteLimitsResponseOutputWithContext(ctx context.Context) SiteLimitsResponseOutput {
	return o
}

func (o SiteLimitsResponseOutput) ToSiteLimitsResponsePtrOutput() SiteLimitsResponsePtrOutput {
	return o.ToSiteLimitsResponsePtrOutputWithContext(context.Background())
}

func (o SiteLimitsResponseOutput) ToSiteLimitsResponsePtrOutputWithContext(ctx context.Context) SiteLimitsResponsePtrOutput {
	return o.ApplyT(func(v SiteLimitsResponse) *SiteLimitsResponse {
		return &v
	}).(SiteLimitsResponsePtrOutput)
}

// Maximum allowed disk size usage in MB.
func (o SiteLimitsResponseOutput) MaxDiskSizeInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteLimitsResponse) *int { return v.MaxDiskSizeInMb }).(pulumi.IntPtrOutput)
}

// Maximum allowed memory usage in MB.
func (o SiteLimitsResponseOutput) MaxMemoryInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteLimitsResponse) *int { return v.MaxMemoryInMb }).(pulumi.IntPtrOutput)
}

// Maximum allowed CPU usage percentage.
func (o SiteLimitsResponseOutput) MaxPercentageCpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SiteLimitsResponse) *float64 { return v.MaxPercentageCpu }).(pulumi.Float64PtrOutput)
}

type SiteLimitsResponsePtrOutput struct{ *pulumi.OutputState }

func (SiteLimitsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteLimitsResponse)(nil)).Elem()
}

func (o SiteLimitsResponsePtrOutput) ToSiteLimitsResponsePtrOutput() SiteLimitsResponsePtrOutput {
	return o
}

func (o SiteLimitsResponsePtrOutput) ToSiteLimitsResponsePtrOutputWithContext(ctx context.Context) SiteLimitsResponsePtrOutput {
	return o
}

func (o SiteLimitsResponsePtrOutput) Elem() SiteLimitsResponseOutput {
	return o.ApplyT(func(v *SiteLimitsResponse) SiteLimitsResponse { return *v }).(SiteLimitsResponseOutput)
}

// Maximum allowed disk size usage in MB.
func (o SiteLimitsResponsePtrOutput) MaxDiskSizeInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteLimitsResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxDiskSizeInMb
	}).(pulumi.IntPtrOutput)
}

// Maximum allowed memory usage in MB.
func (o SiteLimitsResponsePtrOutput) MaxMemoryInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteLimitsResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxMemoryInMb
	}).(pulumi.IntPtrOutput)
}

// Maximum allowed CPU usage percentage.
func (o SiteLimitsResponsePtrOutput) MaxPercentageCpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SiteLimitsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxPercentageCpu
	}).(pulumi.Float64PtrOutput)
}

// MachineKey of an app.
type SiteMachineKey struct {
	// Algorithm used for decryption.
	Decryption *string `pulumi:"decryption"`
	// Decryption key.
	DecryptionKey *string `pulumi:"decryptionKey"`
	// MachineKey validation.
	Validation *string `pulumi:"validation"`
	// Validation key.
	ValidationKey *string `pulumi:"validationKey"`
}

// SiteMachineKeyInput is an input type that accepts SiteMachineKeyArgs and SiteMachineKeyOutput values.
// You can construct a concrete instance of `SiteMachineKeyInput` via:
//
//          SiteMachineKeyArgs{...}
type SiteMachineKeyInput interface {
	pulumi.Input

	ToSiteMachineKeyOutput() SiteMachineKeyOutput
	ToSiteMachineKeyOutputWithContext(context.Context) SiteMachineKeyOutput
}

// MachineKey of an app.
type SiteMachineKeyArgs struct {
	// Algorithm used for decryption.
	Decryption pulumi.StringPtrInput `pulumi:"decryption"`
	// Decryption key.
	DecryptionKey pulumi.StringPtrInput `pulumi:"decryptionKey"`
	// MachineKey validation.
	Validation pulumi.StringPtrInput `pulumi:"validation"`
	// Validation key.
	ValidationKey pulumi.StringPtrInput `pulumi:"validationKey"`
}

func (SiteMachineKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteMachineKey)(nil)).Elem()
}

func (i SiteMachineKeyArgs) ToSiteMachineKeyOutput() SiteMachineKeyOutput {
	return i.ToSiteMachineKeyOutputWithContext(context.Background())
}

func (i SiteMachineKeyArgs) ToSiteMachineKeyOutputWithContext(ctx context.Context) SiteMachineKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteMachineKeyOutput)
}

// MachineKey of an app.
type SiteMachineKeyOutput struct{ *pulumi.OutputState }

func (SiteMachineKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteMachineKey)(nil)).Elem()
}

func (o SiteMachineKeyOutput) ToSiteMachineKeyOutput() SiteMachineKeyOutput {
	return o
}

func (o SiteMachineKeyOutput) ToSiteMachineKeyOutputWithContext(ctx context.Context) SiteMachineKeyOutput {
	return o
}

// Algorithm used for decryption.
func (o SiteMachineKeyOutput) Decryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteMachineKey) *string { return v.Decryption }).(pulumi.StringPtrOutput)
}

// Decryption key.
func (o SiteMachineKeyOutput) DecryptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteMachineKey) *string { return v.DecryptionKey }).(pulumi.StringPtrOutput)
}

// MachineKey validation.
func (o SiteMachineKeyOutput) Validation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteMachineKey) *string { return v.Validation }).(pulumi.StringPtrOutput)
}

// Validation key.
func (o SiteMachineKeyOutput) ValidationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteMachineKey) *string { return v.ValidationKey }).(pulumi.StringPtrOutput)
}

// MachineKey of an app.
type SiteMachineKeyResponse struct {
	// Algorithm used for decryption.
	Decryption *string `pulumi:"decryption"`
	// Decryption key.
	DecryptionKey *string `pulumi:"decryptionKey"`
	// MachineKey validation.
	Validation *string `pulumi:"validation"`
	// Validation key.
	ValidationKey *string `pulumi:"validationKey"`
}

// SiteMachineKeyResponseInput is an input type that accepts SiteMachineKeyResponseArgs and SiteMachineKeyResponseOutput values.
// You can construct a concrete instance of `SiteMachineKeyResponseInput` via:
//
//          SiteMachineKeyResponseArgs{...}
type SiteMachineKeyResponseInput interface {
	pulumi.Input

	ToSiteMachineKeyResponseOutput() SiteMachineKeyResponseOutput
	ToSiteMachineKeyResponseOutputWithContext(context.Context) SiteMachineKeyResponseOutput
}

// MachineKey of an app.
type SiteMachineKeyResponseArgs struct {
	// Algorithm used for decryption.
	Decryption pulumi.StringPtrInput `pulumi:"decryption"`
	// Decryption key.
	DecryptionKey pulumi.StringPtrInput `pulumi:"decryptionKey"`
	// MachineKey validation.
	Validation pulumi.StringPtrInput `pulumi:"validation"`
	// Validation key.
	ValidationKey pulumi.StringPtrInput `pulumi:"validationKey"`
}

func (SiteMachineKeyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteMachineKeyResponse)(nil)).Elem()
}

func (i SiteMachineKeyResponseArgs) ToSiteMachineKeyResponseOutput() SiteMachineKeyResponseOutput {
	return i.ToSiteMachineKeyResponseOutputWithContext(context.Background())
}

func (i SiteMachineKeyResponseArgs) ToSiteMachineKeyResponseOutputWithContext(ctx context.Context) SiteMachineKeyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteMachineKeyResponseOutput)
}

func (i SiteMachineKeyResponseArgs) ToSiteMachineKeyResponsePtrOutput() SiteMachineKeyResponsePtrOutput {
	return i.ToSiteMachineKeyResponsePtrOutputWithContext(context.Background())
}

func (i SiteMachineKeyResponseArgs) ToSiteMachineKeyResponsePtrOutputWithContext(ctx context.Context) SiteMachineKeyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteMachineKeyResponseOutput).ToSiteMachineKeyResponsePtrOutputWithContext(ctx)
}

// SiteMachineKeyResponsePtrInput is an input type that accepts SiteMachineKeyResponseArgs, SiteMachineKeyResponsePtr and SiteMachineKeyResponsePtrOutput values.
// You can construct a concrete instance of `SiteMachineKeyResponsePtrInput` via:
//
//          SiteMachineKeyResponseArgs{...}
//
//  or:
//
//          nil
type SiteMachineKeyResponsePtrInput interface {
	pulumi.Input

	ToSiteMachineKeyResponsePtrOutput() SiteMachineKeyResponsePtrOutput
	ToSiteMachineKeyResponsePtrOutputWithContext(context.Context) SiteMachineKeyResponsePtrOutput
}

type siteMachineKeyResponsePtrType SiteMachineKeyResponseArgs

func SiteMachineKeyResponsePtr(v *SiteMachineKeyResponseArgs) SiteMachineKeyResponsePtrInput {
	return (*siteMachineKeyResponsePtrType)(v)
}

func (*siteMachineKeyResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteMachineKeyResponse)(nil)).Elem()
}

func (i *siteMachineKeyResponsePtrType) ToSiteMachineKeyResponsePtrOutput() SiteMachineKeyResponsePtrOutput {
	return i.ToSiteMachineKeyResponsePtrOutputWithContext(context.Background())
}

func (i *siteMachineKeyResponsePtrType) ToSiteMachineKeyResponsePtrOutputWithContext(ctx context.Context) SiteMachineKeyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteMachineKeyResponsePtrOutput)
}

// MachineKey of an app.
type SiteMachineKeyResponseOutput struct{ *pulumi.OutputState }

func (SiteMachineKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteMachineKeyResponse)(nil)).Elem()
}

func (o SiteMachineKeyResponseOutput) ToSiteMachineKeyResponseOutput() SiteMachineKeyResponseOutput {
	return o
}

func (o SiteMachineKeyResponseOutput) ToSiteMachineKeyResponseOutputWithContext(ctx context.Context) SiteMachineKeyResponseOutput {
	return o
}

func (o SiteMachineKeyResponseOutput) ToSiteMachineKeyResponsePtrOutput() SiteMachineKeyResponsePtrOutput {
	return o.ToSiteMachineKeyResponsePtrOutputWithContext(context.Background())
}

func (o SiteMachineKeyResponseOutput) ToSiteMachineKeyResponsePtrOutputWithContext(ctx context.Context) SiteMachineKeyResponsePtrOutput {
	return o.ApplyT(func(v SiteMachineKeyResponse) *SiteMachineKeyResponse {
		return &v
	}).(SiteMachineKeyResponsePtrOutput)
}

// Algorithm used for decryption.
func (o SiteMachineKeyResponseOutput) Decryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteMachineKeyResponse) *string { return v.Decryption }).(pulumi.StringPtrOutput)
}

// Decryption key.
func (o SiteMachineKeyResponseOutput) DecryptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteMachineKeyResponse) *string { return v.DecryptionKey }).(pulumi.StringPtrOutput)
}

// MachineKey validation.
func (o SiteMachineKeyResponseOutput) Validation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteMachineKeyResponse) *string { return v.Validation }).(pulumi.StringPtrOutput)
}

// Validation key.
func (o SiteMachineKeyResponseOutput) ValidationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteMachineKeyResponse) *string { return v.ValidationKey }).(pulumi.StringPtrOutput)
}

type SiteMachineKeyResponsePtrOutput struct{ *pulumi.OutputState }

func (SiteMachineKeyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteMachineKeyResponse)(nil)).Elem()
}

func (o SiteMachineKeyResponsePtrOutput) ToSiteMachineKeyResponsePtrOutput() SiteMachineKeyResponsePtrOutput {
	return o
}

func (o SiteMachineKeyResponsePtrOutput) ToSiteMachineKeyResponsePtrOutputWithContext(ctx context.Context) SiteMachineKeyResponsePtrOutput {
	return o
}

func (o SiteMachineKeyResponsePtrOutput) Elem() SiteMachineKeyResponseOutput {
	return o.ApplyT(func(v *SiteMachineKeyResponse) SiteMachineKeyResponse { return *v }).(SiteMachineKeyResponseOutput)
}

// Algorithm used for decryption.
func (o SiteMachineKeyResponsePtrOutput) Decryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteMachineKeyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Decryption
	}).(pulumi.StringPtrOutput)
}

// Decryption key.
func (o SiteMachineKeyResponsePtrOutput) DecryptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteMachineKeyResponse) *string {
		if v == nil {
			return nil
		}
		return v.DecryptionKey
	}).(pulumi.StringPtrOutput)
}

// MachineKey validation.
func (o SiteMachineKeyResponsePtrOutput) Validation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteMachineKeyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Validation
	}).(pulumi.StringPtrOutput)
}

// Validation key.
func (o SiteMachineKeyResponsePtrOutput) ValidationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteMachineKeyResponse) *string {
		if v == nil {
			return nil
		}
		return v.ValidationKey
	}).(pulumi.StringPtrOutput)
}

// Site resource specific properties
type SiteResponseProperties struct {
	// Management information availability state for the app.
	AvailabilityState string `pulumi:"availabilityState"`
	// <code>true</code> to enable client affinity; <code>false</code> to stop sending session affinity cookies, which route client requests in the same session to the same instance. Default is <code>true</code>.
	ClientAffinityEnabled *bool `pulumi:"clientAffinityEnabled"`
	// <code>true</code> to enable client certificate authentication (TLS mutual authentication); otherwise, <code>false</code>. Default is <code>false</code>.
	ClientCertEnabled *bool `pulumi:"clientCertEnabled"`
	// client certificate authentication comma-separated exclusion paths
	ClientCertExclusionPaths *string `pulumi:"clientCertExclusionPaths"`
	// If specified during app creation, the app is cloned from a source app.
	CloningInfo *CloningInfoResponse `pulumi:"cloningInfo"`
	// Size of the function container.
	ContainerSize *int `pulumi:"containerSize"`
	// Maximum allowed daily memory-time quota (applicable on dynamic apps only).
	DailyMemoryTimeQuota *int `pulumi:"dailyMemoryTimeQuota"`
	// Default hostname of the app. Read-only.
	DefaultHostName string `pulumi:"defaultHostName"`
	// <code>true</code> if the app is enabled; otherwise, <code>false</code>. Setting this value to false disables the app (takes the app offline).
	Enabled *bool `pulumi:"enabled"`
	// Enabled hostnames for the app.Hostnames need to be assigned (see HostNames) AND enabled. Otherwise,
	// the app is not served on those hostnames.
	EnabledHostNames []string `pulumi:"enabledHostNames"`
	// GeoDistributions for this site
	GeoDistributions []GeoDistributionResponse `pulumi:"geoDistributions"`
	// Hostname SSL states are used to manage the SSL bindings for app's hostnames.
	HostNameSslStates []HostNameSslStateResponse `pulumi:"hostNameSslStates"`
	// Hostnames associated with the app.
	HostNames []string `pulumi:"hostNames"`
	// <code>true</code> to disable the public hostnames of the app; otherwise, <code>false</code>.
	//  If <code>true</code>, the app is only accessible via API management process.
	HostNamesDisabled *bool `pulumi:"hostNamesDisabled"`
	// App Service Environment to use for the app.
	HostingEnvironmentProfile *HostingEnvironmentProfileResponse `pulumi:"hostingEnvironmentProfile"`
	// HttpsOnly: configures a web site to accept only https requests. Issues redirect for
	// http requests
	HttpsOnly *bool `pulumi:"httpsOnly"`
	// Hyper-V sandbox.
	HyperV *bool `pulumi:"hyperV"`
	// Specifies an operation id if this site has a pending operation.
	InProgressOperationId string `pulumi:"inProgressOperationId"`
	// <code>true</code> if the app is a default container; otherwise, <code>false</code>.
	IsDefaultContainer bool `pulumi:"isDefaultContainer"`
	// Obsolete: Hyper-V sandbox.
	IsXenon *bool `pulumi:"isXenon"`
	// Last time the app was modified, in UTC. Read-only.
	LastModifiedTimeUtc string `pulumi:"lastModifiedTimeUtc"`
	// Maximum number of workers.
	// This only applies to Functions container.
	MaxNumberOfWorkers int `pulumi:"maxNumberOfWorkers"`
	// List of IP addresses that the app uses for outbound connections (e.g. database access). Includes VIPs from tenants that site can be hosted with current settings. Read-only.
	OutboundIpAddresses string `pulumi:"outboundIpAddresses"`
	// List of IP addresses that the app uses for outbound connections (e.g. database access). Includes VIPs from all tenants. Read-only.
	PossibleOutboundIpAddresses string `pulumi:"possibleOutboundIpAddresses"`
	// Site redundancy mode
	RedundancyMode *string `pulumi:"redundancyMode"`
	// Name of the repository site.
	RepositorySiteName string `pulumi:"repositorySiteName"`
	// <code>true</code> if reserved; otherwise, <code>false</code>.
	Reserved *bool `pulumi:"reserved"`
	// Name of the resource group the app belongs to. Read-only.
	ResourceGroup string `pulumi:"resourceGroup"`
	// <code>true</code> to stop SCM (KUDU) site when the app is stopped; otherwise, <code>false</code>. The default is <code>false</code>.
	ScmSiteAlsoStopped *bool `pulumi:"scmSiteAlsoStopped"`
	// Resource ID of the associated App Service plan, formatted as: "/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}".
	ServerFarmId *string `pulumi:"serverFarmId"`
	// Configuration of the app.
	SiteConfig *SiteConfigResponse `pulumi:"siteConfig"`
	// Status of the last deployment slot swap operation.
	SlotSwapStatus SlotSwapStatusResponse `pulumi:"slotSwapStatus"`
	// Current state of the app.
	State string `pulumi:"state"`
	// App suspended till in case memory-time quota is exceeded.
	SuspendedTill string `pulumi:"suspendedTill"`
	// Specifies which deployment slot this app will swap into. Read-only.
	TargetSwapSlot string `pulumi:"targetSwapSlot"`
	// Azure Traffic Manager hostnames associated with the app. Read-only.
	TrafficManagerHostNames []string `pulumi:"trafficManagerHostNames"`
	// State indicating whether the app has exceeded its quota usage. Read-only.
	UsageState string `pulumi:"usageState"`
}

// SiteResponsePropertiesInput is an input type that accepts SiteResponsePropertiesArgs and SiteResponsePropertiesOutput values.
// You can construct a concrete instance of `SiteResponsePropertiesInput` via:
//
//          SiteResponsePropertiesArgs{...}
type SiteResponsePropertiesInput interface {
	pulumi.Input

	ToSiteResponsePropertiesOutput() SiteResponsePropertiesOutput
	ToSiteResponsePropertiesOutputWithContext(context.Context) SiteResponsePropertiesOutput
}

// Site resource specific properties
type SiteResponsePropertiesArgs struct {
	// Management information availability state for the app.
	AvailabilityState pulumi.StringInput `pulumi:"availabilityState"`
	// <code>true</code> to enable client affinity; <code>false</code> to stop sending session affinity cookies, which route client requests in the same session to the same instance. Default is <code>true</code>.
	ClientAffinityEnabled pulumi.BoolPtrInput `pulumi:"clientAffinityEnabled"`
	// <code>true</code> to enable client certificate authentication (TLS mutual authentication); otherwise, <code>false</code>. Default is <code>false</code>.
	ClientCertEnabled pulumi.BoolPtrInput `pulumi:"clientCertEnabled"`
	// client certificate authentication comma-separated exclusion paths
	ClientCertExclusionPaths pulumi.StringPtrInput `pulumi:"clientCertExclusionPaths"`
	// If specified during app creation, the app is cloned from a source app.
	CloningInfo CloningInfoResponsePtrInput `pulumi:"cloningInfo"`
	// Size of the function container.
	ContainerSize pulumi.IntPtrInput `pulumi:"containerSize"`
	// Maximum allowed daily memory-time quota (applicable on dynamic apps only).
	DailyMemoryTimeQuota pulumi.IntPtrInput `pulumi:"dailyMemoryTimeQuota"`
	// Default hostname of the app. Read-only.
	DefaultHostName pulumi.StringInput `pulumi:"defaultHostName"`
	// <code>true</code> if the app is enabled; otherwise, <code>false</code>. Setting this value to false disables the app (takes the app offline).
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Enabled hostnames for the app.Hostnames need to be assigned (see HostNames) AND enabled. Otherwise,
	// the app is not served on those hostnames.
	EnabledHostNames pulumi.StringArrayInput `pulumi:"enabledHostNames"`
	// GeoDistributions for this site
	GeoDistributions GeoDistributionResponseArrayInput `pulumi:"geoDistributions"`
	// Hostname SSL states are used to manage the SSL bindings for app's hostnames.
	HostNameSslStates HostNameSslStateResponseArrayInput `pulumi:"hostNameSslStates"`
	// Hostnames associated with the app.
	HostNames pulumi.StringArrayInput `pulumi:"hostNames"`
	// <code>true</code> to disable the public hostnames of the app; otherwise, <code>false</code>.
	//  If <code>true</code>, the app is only accessible via API management process.
	HostNamesDisabled pulumi.BoolPtrInput `pulumi:"hostNamesDisabled"`
	// App Service Environment to use for the app.
	HostingEnvironmentProfile HostingEnvironmentProfileResponsePtrInput `pulumi:"hostingEnvironmentProfile"`
	// HttpsOnly: configures a web site to accept only https requests. Issues redirect for
	// http requests
	HttpsOnly pulumi.BoolPtrInput `pulumi:"httpsOnly"`
	// Hyper-V sandbox.
	HyperV pulumi.BoolPtrInput `pulumi:"hyperV"`
	// Specifies an operation id if this site has a pending operation.
	InProgressOperationId pulumi.StringInput `pulumi:"inProgressOperationId"`
	// <code>true</code> if the app is a default container; otherwise, <code>false</code>.
	IsDefaultContainer pulumi.BoolInput `pulumi:"isDefaultContainer"`
	// Obsolete: Hyper-V sandbox.
	IsXenon pulumi.BoolPtrInput `pulumi:"isXenon"`
	// Last time the app was modified, in UTC. Read-only.
	LastModifiedTimeUtc pulumi.StringInput `pulumi:"lastModifiedTimeUtc"`
	// Maximum number of workers.
	// This only applies to Functions container.
	MaxNumberOfWorkers pulumi.IntInput `pulumi:"maxNumberOfWorkers"`
	// List of IP addresses that the app uses for outbound connections (e.g. database access). Includes VIPs from tenants that site can be hosted with current settings. Read-only.
	OutboundIpAddresses pulumi.StringInput `pulumi:"outboundIpAddresses"`
	// List of IP addresses that the app uses for outbound connections (e.g. database access). Includes VIPs from all tenants. Read-only.
	PossibleOutboundIpAddresses pulumi.StringInput `pulumi:"possibleOutboundIpAddresses"`
	// Site redundancy mode
	RedundancyMode pulumi.StringPtrInput `pulumi:"redundancyMode"`
	// Name of the repository site.
	RepositorySiteName pulumi.StringInput `pulumi:"repositorySiteName"`
	// <code>true</code> if reserved; otherwise, <code>false</code>.
	Reserved pulumi.BoolPtrInput `pulumi:"reserved"`
	// Name of the resource group the app belongs to. Read-only.
	ResourceGroup pulumi.StringInput `pulumi:"resourceGroup"`
	// <code>true</code> to stop SCM (KUDU) site when the app is stopped; otherwise, <code>false</code>. The default is <code>false</code>.
	ScmSiteAlsoStopped pulumi.BoolPtrInput `pulumi:"scmSiteAlsoStopped"`
	// Resource ID of the associated App Service plan, formatted as: "/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}".
	ServerFarmId pulumi.StringPtrInput `pulumi:"serverFarmId"`
	// Configuration of the app.
	SiteConfig SiteConfigResponsePtrInput `pulumi:"siteConfig"`
	// Status of the last deployment slot swap operation.
	SlotSwapStatus SlotSwapStatusResponseInput `pulumi:"slotSwapStatus"`
	// Current state of the app.
	State pulumi.StringInput `pulumi:"state"`
	// App suspended till in case memory-time quota is exceeded.
	SuspendedTill pulumi.StringInput `pulumi:"suspendedTill"`
	// Specifies which deployment slot this app will swap into. Read-only.
	TargetSwapSlot pulumi.StringInput `pulumi:"targetSwapSlot"`
	// Azure Traffic Manager hostnames associated with the app. Read-only.
	TrafficManagerHostNames pulumi.StringArrayInput `pulumi:"trafficManagerHostNames"`
	// State indicating whether the app has exceeded its quota usage. Read-only.
	UsageState pulumi.StringInput `pulumi:"usageState"`
}

func (SiteResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteResponseProperties)(nil)).Elem()
}

func (i SiteResponsePropertiesArgs) ToSiteResponsePropertiesOutput() SiteResponsePropertiesOutput {
	return i.ToSiteResponsePropertiesOutputWithContext(context.Background())
}

func (i SiteResponsePropertiesArgs) ToSiteResponsePropertiesOutputWithContext(ctx context.Context) SiteResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteResponsePropertiesOutput)
}

func (i SiteResponsePropertiesArgs) ToSiteResponsePropertiesPtrOutput() SiteResponsePropertiesPtrOutput {
	return i.ToSiteResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i SiteResponsePropertiesArgs) ToSiteResponsePropertiesPtrOutputWithContext(ctx context.Context) SiteResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteResponsePropertiesOutput).ToSiteResponsePropertiesPtrOutputWithContext(ctx)
}

// SiteResponsePropertiesPtrInput is an input type that accepts SiteResponsePropertiesArgs, SiteResponsePropertiesPtr and SiteResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `SiteResponsePropertiesPtrInput` via:
//
//          SiteResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type SiteResponsePropertiesPtrInput interface {
	pulumi.Input

	ToSiteResponsePropertiesPtrOutput() SiteResponsePropertiesPtrOutput
	ToSiteResponsePropertiesPtrOutputWithContext(context.Context) SiteResponsePropertiesPtrOutput
}

type siteResponsePropertiesPtrType SiteResponsePropertiesArgs

func SiteResponsePropertiesPtr(v *SiteResponsePropertiesArgs) SiteResponsePropertiesPtrInput {
	return (*siteResponsePropertiesPtrType)(v)
}

func (*siteResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteResponseProperties)(nil)).Elem()
}

func (i *siteResponsePropertiesPtrType) ToSiteResponsePropertiesPtrOutput() SiteResponsePropertiesPtrOutput {
	return i.ToSiteResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *siteResponsePropertiesPtrType) ToSiteResponsePropertiesPtrOutputWithContext(ctx context.Context) SiteResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteResponsePropertiesPtrOutput)
}

// Site resource specific properties
type SiteResponsePropertiesOutput struct{ *pulumi.OutputState }

func (SiteResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteResponseProperties)(nil)).Elem()
}

func (o SiteResponsePropertiesOutput) ToSiteResponsePropertiesOutput() SiteResponsePropertiesOutput {
	return o
}

func (o SiteResponsePropertiesOutput) ToSiteResponsePropertiesOutputWithContext(ctx context.Context) SiteResponsePropertiesOutput {
	return o
}

func (o SiteResponsePropertiesOutput) ToSiteResponsePropertiesPtrOutput() SiteResponsePropertiesPtrOutput {
	return o.ToSiteResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o SiteResponsePropertiesOutput) ToSiteResponsePropertiesPtrOutputWithContext(ctx context.Context) SiteResponsePropertiesPtrOutput {
	return o.ApplyT(func(v SiteResponseProperties) *SiteResponseProperties {
		return &v
	}).(SiteResponsePropertiesPtrOutput)
}

// Management information availability state for the app.
func (o SiteResponsePropertiesOutput) AvailabilityState() pulumi.StringOutput {
	return o.ApplyT(func(v SiteResponseProperties) string { return v.AvailabilityState }).(pulumi.StringOutput)
}

// <code>true</code> to enable client affinity; <code>false</code> to stop sending session affinity cookies, which route client requests in the same session to the same instance. Default is <code>true</code>.
func (o SiteResponsePropertiesOutput) ClientAffinityEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteResponseProperties) *bool { return v.ClientAffinityEnabled }).(pulumi.BoolPtrOutput)
}

// <code>true</code> to enable client certificate authentication (TLS mutual authentication); otherwise, <code>false</code>. Default is <code>false</code>.
func (o SiteResponsePropertiesOutput) ClientCertEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteResponseProperties) *bool { return v.ClientCertEnabled }).(pulumi.BoolPtrOutput)
}

// client certificate authentication comma-separated exclusion paths
func (o SiteResponsePropertiesOutput) ClientCertExclusionPaths() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteResponseProperties) *string { return v.ClientCertExclusionPaths }).(pulumi.StringPtrOutput)
}

// If specified during app creation, the app is cloned from a source app.
func (o SiteResponsePropertiesOutput) CloningInfo() CloningInfoResponsePtrOutput {
	return o.ApplyT(func(v SiteResponseProperties) *CloningInfoResponse { return v.CloningInfo }).(CloningInfoResponsePtrOutput)
}

// Size of the function container.
func (o SiteResponsePropertiesOutput) ContainerSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteResponseProperties) *int { return v.ContainerSize }).(pulumi.IntPtrOutput)
}

// Maximum allowed daily memory-time quota (applicable on dynamic apps only).
func (o SiteResponsePropertiesOutput) DailyMemoryTimeQuota() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteResponseProperties) *int { return v.DailyMemoryTimeQuota }).(pulumi.IntPtrOutput)
}

// Default hostname of the app. Read-only.
func (o SiteResponsePropertiesOutput) DefaultHostName() pulumi.StringOutput {
	return o.ApplyT(func(v SiteResponseProperties) string { return v.DefaultHostName }).(pulumi.StringOutput)
}

// <code>true</code> if the app is enabled; otherwise, <code>false</code>. Setting this value to false disables the app (takes the app offline).
func (o SiteResponsePropertiesOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteResponseProperties) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Enabled hostnames for the app.Hostnames need to be assigned (see HostNames) AND enabled. Otherwise,
// the app is not served on those hostnames.
func (o SiteResponsePropertiesOutput) EnabledHostNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SiteResponseProperties) []string { return v.EnabledHostNames }).(pulumi.StringArrayOutput)
}

// GeoDistributions for this site
func (o SiteResponsePropertiesOutput) GeoDistributions() GeoDistributionResponseArrayOutput {
	return o.ApplyT(func(v SiteResponseProperties) []GeoDistributionResponse { return v.GeoDistributions }).(GeoDistributionResponseArrayOutput)
}

// Hostname SSL states are used to manage the SSL bindings for app's hostnames.
func (o SiteResponsePropertiesOutput) HostNameSslStates() HostNameSslStateResponseArrayOutput {
	return o.ApplyT(func(v SiteResponseProperties) []HostNameSslStateResponse { return v.HostNameSslStates }).(HostNameSslStateResponseArrayOutput)
}

// Hostnames associated with the app.
func (o SiteResponsePropertiesOutput) HostNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SiteResponseProperties) []string { return v.HostNames }).(pulumi.StringArrayOutput)
}

// <code>true</code> to disable the public hostnames of the app; otherwise, <code>false</code>.
//  If <code>true</code>, the app is only accessible via API management process.
func (o SiteResponsePropertiesOutput) HostNamesDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteResponseProperties) *bool { return v.HostNamesDisabled }).(pulumi.BoolPtrOutput)
}

// App Service Environment to use for the app.
func (o SiteResponsePropertiesOutput) HostingEnvironmentProfile() HostingEnvironmentProfileResponsePtrOutput {
	return o.ApplyT(func(v SiteResponseProperties) *HostingEnvironmentProfileResponse { return v.HostingEnvironmentProfile }).(HostingEnvironmentProfileResponsePtrOutput)
}

// HttpsOnly: configures a web site to accept only https requests. Issues redirect for
// http requests
func (o SiteResponsePropertiesOutput) HttpsOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteResponseProperties) *bool { return v.HttpsOnly }).(pulumi.BoolPtrOutput)
}

// Hyper-V sandbox.
func (o SiteResponsePropertiesOutput) HyperV() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteResponseProperties) *bool { return v.HyperV }).(pulumi.BoolPtrOutput)
}

// Specifies an operation id if this site has a pending operation.
func (o SiteResponsePropertiesOutput) InProgressOperationId() pulumi.StringOutput {
	return o.ApplyT(func(v SiteResponseProperties) string { return v.InProgressOperationId }).(pulumi.StringOutput)
}

// <code>true</code> if the app is a default container; otherwise, <code>false</code>.
func (o SiteResponsePropertiesOutput) IsDefaultContainer() pulumi.BoolOutput {
	return o.ApplyT(func(v SiteResponseProperties) bool { return v.IsDefaultContainer }).(pulumi.BoolOutput)
}

// Obsolete: Hyper-V sandbox.
func (o SiteResponsePropertiesOutput) IsXenon() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteResponseProperties) *bool { return v.IsXenon }).(pulumi.BoolPtrOutput)
}

// Last time the app was modified, in UTC. Read-only.
func (o SiteResponsePropertiesOutput) LastModifiedTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v SiteResponseProperties) string { return v.LastModifiedTimeUtc }).(pulumi.StringOutput)
}

// Maximum number of workers.
// This only applies to Functions container.
func (o SiteResponsePropertiesOutput) MaxNumberOfWorkers() pulumi.IntOutput {
	return o.ApplyT(func(v SiteResponseProperties) int { return v.MaxNumberOfWorkers }).(pulumi.IntOutput)
}

// List of IP addresses that the app uses for outbound connections (e.g. database access). Includes VIPs from tenants that site can be hosted with current settings. Read-only.
func (o SiteResponsePropertiesOutput) OutboundIpAddresses() pulumi.StringOutput {
	return o.ApplyT(func(v SiteResponseProperties) string { return v.OutboundIpAddresses }).(pulumi.StringOutput)
}

// List of IP addresses that the app uses for outbound connections (e.g. database access). Includes VIPs from all tenants. Read-only.
func (o SiteResponsePropertiesOutput) PossibleOutboundIpAddresses() pulumi.StringOutput {
	return o.ApplyT(func(v SiteResponseProperties) string { return v.PossibleOutboundIpAddresses }).(pulumi.StringOutput)
}

// Site redundancy mode
func (o SiteResponsePropertiesOutput) RedundancyMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteResponseProperties) *string { return v.RedundancyMode }).(pulumi.StringPtrOutput)
}

// Name of the repository site.
func (o SiteResponsePropertiesOutput) RepositorySiteName() pulumi.StringOutput {
	return o.ApplyT(func(v SiteResponseProperties) string { return v.RepositorySiteName }).(pulumi.StringOutput)
}

// <code>true</code> if reserved; otherwise, <code>false</code>.
func (o SiteResponsePropertiesOutput) Reserved() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteResponseProperties) *bool { return v.Reserved }).(pulumi.BoolPtrOutput)
}

// Name of the resource group the app belongs to. Read-only.
func (o SiteResponsePropertiesOutput) ResourceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v SiteResponseProperties) string { return v.ResourceGroup }).(pulumi.StringOutput)
}

// <code>true</code> to stop SCM (KUDU) site when the app is stopped; otherwise, <code>false</code>. The default is <code>false</code>.
func (o SiteResponsePropertiesOutput) ScmSiteAlsoStopped() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteResponseProperties) *bool { return v.ScmSiteAlsoStopped }).(pulumi.BoolPtrOutput)
}

// Resource ID of the associated App Service plan, formatted as: "/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}".
func (o SiteResponsePropertiesOutput) ServerFarmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteResponseProperties) *string { return v.ServerFarmId }).(pulumi.StringPtrOutput)
}

// Configuration of the app.
func (o SiteResponsePropertiesOutput) SiteConfig() SiteConfigResponsePtrOutput {
	return o.ApplyT(func(v SiteResponseProperties) *SiteConfigResponse { return v.SiteConfig }).(SiteConfigResponsePtrOutput)
}

// Status of the last deployment slot swap operation.
func (o SiteResponsePropertiesOutput) SlotSwapStatus() SlotSwapStatusResponseOutput {
	return o.ApplyT(func(v SiteResponseProperties) SlotSwapStatusResponse { return v.SlotSwapStatus }).(SlotSwapStatusResponseOutput)
}

// Current state of the app.
func (o SiteResponsePropertiesOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v SiteResponseProperties) string { return v.State }).(pulumi.StringOutput)
}

// App suspended till in case memory-time quota is exceeded.
func (o SiteResponsePropertiesOutput) SuspendedTill() pulumi.StringOutput {
	return o.ApplyT(func(v SiteResponseProperties) string { return v.SuspendedTill }).(pulumi.StringOutput)
}

// Specifies which deployment slot this app will swap into. Read-only.
func (o SiteResponsePropertiesOutput) TargetSwapSlot() pulumi.StringOutput {
	return o.ApplyT(func(v SiteResponseProperties) string { return v.TargetSwapSlot }).(pulumi.StringOutput)
}

// Azure Traffic Manager hostnames associated with the app. Read-only.
func (o SiteResponsePropertiesOutput) TrafficManagerHostNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SiteResponseProperties) []string { return v.TrafficManagerHostNames }).(pulumi.StringArrayOutput)
}

// State indicating whether the app has exceeded its quota usage. Read-only.
func (o SiteResponsePropertiesOutput) UsageState() pulumi.StringOutput {
	return o.ApplyT(func(v SiteResponseProperties) string { return v.UsageState }).(pulumi.StringOutput)
}

type SiteResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (SiteResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteResponseProperties)(nil)).Elem()
}

func (o SiteResponsePropertiesPtrOutput) ToSiteResponsePropertiesPtrOutput() SiteResponsePropertiesPtrOutput {
	return o
}

func (o SiteResponsePropertiesPtrOutput) ToSiteResponsePropertiesPtrOutputWithContext(ctx context.Context) SiteResponsePropertiesPtrOutput {
	return o
}

func (o SiteResponsePropertiesPtrOutput) Elem() SiteResponsePropertiesOutput {
	return o.ApplyT(func(v *SiteResponseProperties) SiteResponseProperties { return *v }).(SiteResponsePropertiesOutput)
}

// Management information availability state for the app.
func (o SiteResponsePropertiesPtrOutput) AvailabilityState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.AvailabilityState
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> to enable client affinity; <code>false</code> to stop sending session affinity cookies, which route client requests in the same session to the same instance. Default is <code>true</code>.
func (o SiteResponsePropertiesPtrOutput) ClientAffinityEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.ClientAffinityEnabled
	}).(pulumi.BoolPtrOutput)
}

// <code>true</code> to enable client certificate authentication (TLS mutual authentication); otherwise, <code>false</code>. Default is <code>false</code>.
func (o SiteResponsePropertiesPtrOutput) ClientCertEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.ClientCertEnabled
	}).(pulumi.BoolPtrOutput)
}

// client certificate authentication comma-separated exclusion paths
func (o SiteResponsePropertiesPtrOutput) ClientCertExclusionPaths() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertExclusionPaths
	}).(pulumi.StringPtrOutput)
}

// If specified during app creation, the app is cloned from a source app.
func (o SiteResponsePropertiesPtrOutput) CloningInfo() CloningInfoResponsePtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *CloningInfoResponse {
		if v == nil {
			return nil
		}
		return v.CloningInfo
	}).(CloningInfoResponsePtrOutput)
}

// Size of the function container.
func (o SiteResponsePropertiesPtrOutput) ContainerSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.ContainerSize
	}).(pulumi.IntPtrOutput)
}

// Maximum allowed daily memory-time quota (applicable on dynamic apps only).
func (o SiteResponsePropertiesPtrOutput) DailyMemoryTimeQuota() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.DailyMemoryTimeQuota
	}).(pulumi.IntPtrOutput)
}

// Default hostname of the app. Read-only.
func (o SiteResponsePropertiesPtrOutput) DefaultHostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.DefaultHostName
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> if the app is enabled; otherwise, <code>false</code>. Setting this value to false disables the app (takes the app offline).
func (o SiteResponsePropertiesPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Enabled hostnames for the app.Hostnames need to be assigned (see HostNames) AND enabled. Otherwise,
// the app is not served on those hostnames.
func (o SiteResponsePropertiesPtrOutput) EnabledHostNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SiteResponseProperties) []string {
		if v == nil {
			return nil
		}
		return v.EnabledHostNames
	}).(pulumi.StringArrayOutput)
}

// GeoDistributions for this site
func (o SiteResponsePropertiesPtrOutput) GeoDistributions() GeoDistributionResponseArrayOutput {
	return o.ApplyT(func(v *SiteResponseProperties) []GeoDistributionResponse {
		if v == nil {
			return nil
		}
		return v.GeoDistributions
	}).(GeoDistributionResponseArrayOutput)
}

// Hostname SSL states are used to manage the SSL bindings for app's hostnames.
func (o SiteResponsePropertiesPtrOutput) HostNameSslStates() HostNameSslStateResponseArrayOutput {
	return o.ApplyT(func(v *SiteResponseProperties) []HostNameSslStateResponse {
		if v == nil {
			return nil
		}
		return v.HostNameSslStates
	}).(HostNameSslStateResponseArrayOutput)
}

// Hostnames associated with the app.
func (o SiteResponsePropertiesPtrOutput) HostNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SiteResponseProperties) []string {
		if v == nil {
			return nil
		}
		return v.HostNames
	}).(pulumi.StringArrayOutput)
}

// <code>true</code> to disable the public hostnames of the app; otherwise, <code>false</code>.
//  If <code>true</code>, the app is only accessible via API management process.
func (o SiteResponsePropertiesPtrOutput) HostNamesDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.HostNamesDisabled
	}).(pulumi.BoolPtrOutput)
}

// App Service Environment to use for the app.
func (o SiteResponsePropertiesPtrOutput) HostingEnvironmentProfile() HostingEnvironmentProfileResponsePtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *HostingEnvironmentProfileResponse {
		if v == nil {
			return nil
		}
		return v.HostingEnvironmentProfile
	}).(HostingEnvironmentProfileResponsePtrOutput)
}

// HttpsOnly: configures a web site to accept only https requests. Issues redirect for
// http requests
func (o SiteResponsePropertiesPtrOutput) HttpsOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.HttpsOnly
	}).(pulumi.BoolPtrOutput)
}

// Hyper-V sandbox.
func (o SiteResponsePropertiesPtrOutput) HyperV() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.HyperV
	}).(pulumi.BoolPtrOutput)
}

// Specifies an operation id if this site has a pending operation.
func (o SiteResponsePropertiesPtrOutput) InProgressOperationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.InProgressOperationId
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> if the app is a default container; otherwise, <code>false</code>.
func (o SiteResponsePropertiesPtrOutput) IsDefaultContainer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return &v.IsDefaultContainer
	}).(pulumi.BoolPtrOutput)
}

// Obsolete: Hyper-V sandbox.
func (o SiteResponsePropertiesPtrOutput) IsXenon() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsXenon
	}).(pulumi.BoolPtrOutput)
}

// Last time the app was modified, in UTC. Read-only.
func (o SiteResponsePropertiesPtrOutput) LastModifiedTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.LastModifiedTimeUtc
	}).(pulumi.StringPtrOutput)
}

// Maximum number of workers.
// This only applies to Functions container.
func (o SiteResponsePropertiesPtrOutput) MaxNumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *int {
		if v == nil {
			return nil
		}
		return &v.MaxNumberOfWorkers
	}).(pulumi.IntPtrOutput)
}

// List of IP addresses that the app uses for outbound connections (e.g. database access). Includes VIPs from tenants that site can be hosted with current settings. Read-only.
func (o SiteResponsePropertiesPtrOutput) OutboundIpAddresses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.OutboundIpAddresses
	}).(pulumi.StringPtrOutput)
}

// List of IP addresses that the app uses for outbound connections (e.g. database access). Includes VIPs from all tenants. Read-only.
func (o SiteResponsePropertiesPtrOutput) PossibleOutboundIpAddresses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.PossibleOutboundIpAddresses
	}).(pulumi.StringPtrOutput)
}

// Site redundancy mode
func (o SiteResponsePropertiesPtrOutput) RedundancyMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.RedundancyMode
	}).(pulumi.StringPtrOutput)
}

// Name of the repository site.
func (o SiteResponsePropertiesPtrOutput) RepositorySiteName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.RepositorySiteName
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> if reserved; otherwise, <code>false</code>.
func (o SiteResponsePropertiesPtrOutput) Reserved() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Reserved
	}).(pulumi.BoolPtrOutput)
}

// Name of the resource group the app belongs to. Read-only.
func (o SiteResponsePropertiesPtrOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGroup
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> to stop SCM (KUDU) site when the app is stopped; otherwise, <code>false</code>. The default is <code>false</code>.
func (o SiteResponsePropertiesPtrOutput) ScmSiteAlsoStopped() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.ScmSiteAlsoStopped
	}).(pulumi.BoolPtrOutput)
}

// Resource ID of the associated App Service plan, formatted as: "/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}".
func (o SiteResponsePropertiesPtrOutput) ServerFarmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.ServerFarmId
	}).(pulumi.StringPtrOutput)
}

// Configuration of the app.
func (o SiteResponsePropertiesPtrOutput) SiteConfig() SiteConfigResponsePtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *SiteConfigResponse {
		if v == nil {
			return nil
		}
		return v.SiteConfig
	}).(SiteConfigResponsePtrOutput)
}

// Status of the last deployment slot swap operation.
func (o SiteResponsePropertiesPtrOutput) SlotSwapStatus() SlotSwapStatusResponsePtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *SlotSwapStatusResponse {
		if v == nil {
			return nil
		}
		return &v.SlotSwapStatus
	}).(SlotSwapStatusResponsePtrOutput)
}

// Current state of the app.
func (o SiteResponsePropertiesPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.State
	}).(pulumi.StringPtrOutput)
}

// App suspended till in case memory-time quota is exceeded.
func (o SiteResponsePropertiesPtrOutput) SuspendedTill() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.SuspendedTill
	}).(pulumi.StringPtrOutput)
}

// Specifies which deployment slot this app will swap into. Read-only.
func (o SiteResponsePropertiesPtrOutput) TargetSwapSlot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.TargetSwapSlot
	}).(pulumi.StringPtrOutput)
}

// Azure Traffic Manager hostnames associated with the app. Read-only.
func (o SiteResponsePropertiesPtrOutput) TrafficManagerHostNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SiteResponseProperties) []string {
		if v == nil {
			return nil
		}
		return v.TrafficManagerHostNames
	}).(pulumi.StringArrayOutput)
}

// State indicating whether the app has exceeded its quota usage. Read-only.
func (o SiteResponsePropertiesPtrOutput) UsageState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.UsageState
	}).(pulumi.StringPtrOutput)
}

// SiteSourceControl resource specific properties
type SiteSourceControlResponseProperties struct {
	// Name of branch to use for deployment.
	Branch *string `pulumi:"branch"`
	// <code>true</code> to enable deployment rollback; otherwise, <code>false</code>.
	DeploymentRollbackEnabled *bool `pulumi:"deploymentRollbackEnabled"`
	// <code>true</code> to limit to manual integration; <code>false</code> to enable continuous integration (which configures webhooks into online repos like GitHub).
	IsManualIntegration *bool `pulumi:"isManualIntegration"`
	// <code>true</code> for a Mercurial repository; <code>false</code> for a Git repository.
	IsMercurial *bool `pulumi:"isMercurial"`
	// Repository or source control URL.
	RepoUrl *string `pulumi:"repoUrl"`
}

// SiteSourceControlResponsePropertiesInput is an input type that accepts SiteSourceControlResponsePropertiesArgs and SiteSourceControlResponsePropertiesOutput values.
// You can construct a concrete instance of `SiteSourceControlResponsePropertiesInput` via:
//
//          SiteSourceControlResponsePropertiesArgs{...}
type SiteSourceControlResponsePropertiesInput interface {
	pulumi.Input

	ToSiteSourceControlResponsePropertiesOutput() SiteSourceControlResponsePropertiesOutput
	ToSiteSourceControlResponsePropertiesOutputWithContext(context.Context) SiteSourceControlResponsePropertiesOutput
}

// SiteSourceControl resource specific properties
type SiteSourceControlResponsePropertiesArgs struct {
	// Name of branch to use for deployment.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// <code>true</code> to enable deployment rollback; otherwise, <code>false</code>.
	DeploymentRollbackEnabled pulumi.BoolPtrInput `pulumi:"deploymentRollbackEnabled"`
	// <code>true</code> to limit to manual integration; <code>false</code> to enable continuous integration (which configures webhooks into online repos like GitHub).
	IsManualIntegration pulumi.BoolPtrInput `pulumi:"isManualIntegration"`
	// <code>true</code> for a Mercurial repository; <code>false</code> for a Git repository.
	IsMercurial pulumi.BoolPtrInput `pulumi:"isMercurial"`
	// Repository or source control URL.
	RepoUrl pulumi.StringPtrInput `pulumi:"repoUrl"`
}

func (SiteSourceControlResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteSourceControlResponseProperties)(nil)).Elem()
}

func (i SiteSourceControlResponsePropertiesArgs) ToSiteSourceControlResponsePropertiesOutput() SiteSourceControlResponsePropertiesOutput {
	return i.ToSiteSourceControlResponsePropertiesOutputWithContext(context.Background())
}

func (i SiteSourceControlResponsePropertiesArgs) ToSiteSourceControlResponsePropertiesOutputWithContext(ctx context.Context) SiteSourceControlResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteSourceControlResponsePropertiesOutput)
}

func (i SiteSourceControlResponsePropertiesArgs) ToSiteSourceControlResponsePropertiesPtrOutput() SiteSourceControlResponsePropertiesPtrOutput {
	return i.ToSiteSourceControlResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i SiteSourceControlResponsePropertiesArgs) ToSiteSourceControlResponsePropertiesPtrOutputWithContext(ctx context.Context) SiteSourceControlResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteSourceControlResponsePropertiesOutput).ToSiteSourceControlResponsePropertiesPtrOutputWithContext(ctx)
}

// SiteSourceControlResponsePropertiesPtrInput is an input type that accepts SiteSourceControlResponsePropertiesArgs, SiteSourceControlResponsePropertiesPtr and SiteSourceControlResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `SiteSourceControlResponsePropertiesPtrInput` via:
//
//          SiteSourceControlResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type SiteSourceControlResponsePropertiesPtrInput interface {
	pulumi.Input

	ToSiteSourceControlResponsePropertiesPtrOutput() SiteSourceControlResponsePropertiesPtrOutput
	ToSiteSourceControlResponsePropertiesPtrOutputWithContext(context.Context) SiteSourceControlResponsePropertiesPtrOutput
}

type siteSourceControlResponsePropertiesPtrType SiteSourceControlResponsePropertiesArgs

func SiteSourceControlResponsePropertiesPtr(v *SiteSourceControlResponsePropertiesArgs) SiteSourceControlResponsePropertiesPtrInput {
	return (*siteSourceControlResponsePropertiesPtrType)(v)
}

func (*siteSourceControlResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteSourceControlResponseProperties)(nil)).Elem()
}

func (i *siteSourceControlResponsePropertiesPtrType) ToSiteSourceControlResponsePropertiesPtrOutput() SiteSourceControlResponsePropertiesPtrOutput {
	return i.ToSiteSourceControlResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *siteSourceControlResponsePropertiesPtrType) ToSiteSourceControlResponsePropertiesPtrOutputWithContext(ctx context.Context) SiteSourceControlResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteSourceControlResponsePropertiesPtrOutput)
}

// SiteSourceControl resource specific properties
type SiteSourceControlResponsePropertiesOutput struct{ *pulumi.OutputState }

func (SiteSourceControlResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteSourceControlResponseProperties)(nil)).Elem()
}

func (o SiteSourceControlResponsePropertiesOutput) ToSiteSourceControlResponsePropertiesOutput() SiteSourceControlResponsePropertiesOutput {
	return o
}

func (o SiteSourceControlResponsePropertiesOutput) ToSiteSourceControlResponsePropertiesOutputWithContext(ctx context.Context) SiteSourceControlResponsePropertiesOutput {
	return o
}

func (o SiteSourceControlResponsePropertiesOutput) ToSiteSourceControlResponsePropertiesPtrOutput() SiteSourceControlResponsePropertiesPtrOutput {
	return o.ToSiteSourceControlResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o SiteSourceControlResponsePropertiesOutput) ToSiteSourceControlResponsePropertiesPtrOutputWithContext(ctx context.Context) SiteSourceControlResponsePropertiesPtrOutput {
	return o.ApplyT(func(v SiteSourceControlResponseProperties) *SiteSourceControlResponseProperties {
		return &v
	}).(SiteSourceControlResponsePropertiesPtrOutput)
}

// Name of branch to use for deployment.
func (o SiteSourceControlResponsePropertiesOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteSourceControlResponseProperties) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// <code>true</code> to enable deployment rollback; otherwise, <code>false</code>.
func (o SiteSourceControlResponsePropertiesOutput) DeploymentRollbackEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteSourceControlResponseProperties) *bool { return v.DeploymentRollbackEnabled }).(pulumi.BoolPtrOutput)
}

// <code>true</code> to limit to manual integration; <code>false</code> to enable continuous integration (which configures webhooks into online repos like GitHub).
func (o SiteSourceControlResponsePropertiesOutput) IsManualIntegration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteSourceControlResponseProperties) *bool { return v.IsManualIntegration }).(pulumi.BoolPtrOutput)
}

// <code>true</code> for a Mercurial repository; <code>false</code> for a Git repository.
func (o SiteSourceControlResponsePropertiesOutput) IsMercurial() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteSourceControlResponseProperties) *bool { return v.IsMercurial }).(pulumi.BoolPtrOutput)
}

// Repository or source control URL.
func (o SiteSourceControlResponsePropertiesOutput) RepoUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteSourceControlResponseProperties) *string { return v.RepoUrl }).(pulumi.StringPtrOutput)
}

type SiteSourceControlResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (SiteSourceControlResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteSourceControlResponseProperties)(nil)).Elem()
}

func (o SiteSourceControlResponsePropertiesPtrOutput) ToSiteSourceControlResponsePropertiesPtrOutput() SiteSourceControlResponsePropertiesPtrOutput {
	return o
}

func (o SiteSourceControlResponsePropertiesPtrOutput) ToSiteSourceControlResponsePropertiesPtrOutputWithContext(ctx context.Context) SiteSourceControlResponsePropertiesPtrOutput {
	return o
}

func (o SiteSourceControlResponsePropertiesPtrOutput) Elem() SiteSourceControlResponsePropertiesOutput {
	return o.ApplyT(func(v *SiteSourceControlResponseProperties) SiteSourceControlResponseProperties { return *v }).(SiteSourceControlResponsePropertiesOutput)
}

// Name of branch to use for deployment.
func (o SiteSourceControlResponsePropertiesPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteSourceControlResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> to enable deployment rollback; otherwise, <code>false</code>.
func (o SiteSourceControlResponsePropertiesPtrOutput) DeploymentRollbackEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteSourceControlResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.DeploymentRollbackEnabled
	}).(pulumi.BoolPtrOutput)
}

// <code>true</code> to limit to manual integration; <code>false</code> to enable continuous integration (which configures webhooks into online repos like GitHub).
func (o SiteSourceControlResponsePropertiesPtrOutput) IsManualIntegration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteSourceControlResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsManualIntegration
	}).(pulumi.BoolPtrOutput)
}

// <code>true</code> for a Mercurial repository; <code>false</code> for a Git repository.
func (o SiteSourceControlResponsePropertiesPtrOutput) IsMercurial() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteSourceControlResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsMercurial
	}).(pulumi.BoolPtrOutput)
}

// Repository or source control URL.
func (o SiteSourceControlResponsePropertiesPtrOutput) RepoUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteSourceControlResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.RepoUrl
	}).(pulumi.StringPtrOutput)
}

// Description of the App Service plan scale options.
type SkuCapacity struct {
	// Default number of workers for this App Service plan SKU.
	Default *int `pulumi:"default"`
	// Maximum number of workers for this App Service plan SKU.
	Maximum *int `pulumi:"maximum"`
	// Minimum number of workers for this App Service plan SKU.
	Minimum *int `pulumi:"minimum"`
	// Available scale configurations for an App Service plan.
	ScaleType *string `pulumi:"scaleType"`
}

// SkuCapacityInput is an input type that accepts SkuCapacityArgs and SkuCapacityOutput values.
// You can construct a concrete instance of `SkuCapacityInput` via:
//
//          SkuCapacityArgs{...}
type SkuCapacityInput interface {
	pulumi.Input

	ToSkuCapacityOutput() SkuCapacityOutput
	ToSkuCapacityOutputWithContext(context.Context) SkuCapacityOutput
}

// Description of the App Service plan scale options.
type SkuCapacityArgs struct {
	// Default number of workers for this App Service plan SKU.
	Default pulumi.IntPtrInput `pulumi:"default"`
	// Maximum number of workers for this App Service plan SKU.
	Maximum pulumi.IntPtrInput `pulumi:"maximum"`
	// Minimum number of workers for this App Service plan SKU.
	Minimum pulumi.IntPtrInput `pulumi:"minimum"`
	// Available scale configurations for an App Service plan.
	ScaleType pulumi.StringPtrInput `pulumi:"scaleType"`
}

func (SkuCapacityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuCapacity)(nil)).Elem()
}

func (i SkuCapacityArgs) ToSkuCapacityOutput() SkuCapacityOutput {
	return i.ToSkuCapacityOutputWithContext(context.Background())
}

func (i SkuCapacityArgs) ToSkuCapacityOutputWithContext(ctx context.Context) SkuCapacityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuCapacityOutput)
}

func (i SkuCapacityArgs) ToSkuCapacityPtrOutput() SkuCapacityPtrOutput {
	return i.ToSkuCapacityPtrOutputWithContext(context.Background())
}

func (i SkuCapacityArgs) ToSkuCapacityPtrOutputWithContext(ctx context.Context) SkuCapacityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuCapacityOutput).ToSkuCapacityPtrOutputWithContext(ctx)
}

// SkuCapacityPtrInput is an input type that accepts SkuCapacityArgs, SkuCapacityPtr and SkuCapacityPtrOutput values.
// You can construct a concrete instance of `SkuCapacityPtrInput` via:
//
//          SkuCapacityArgs{...}
//
//  or:
//
//          nil
type SkuCapacityPtrInput interface {
	pulumi.Input

	ToSkuCapacityPtrOutput() SkuCapacityPtrOutput
	ToSkuCapacityPtrOutputWithContext(context.Context) SkuCapacityPtrOutput
}

type skuCapacityPtrType SkuCapacityArgs

func SkuCapacityPtr(v *SkuCapacityArgs) SkuCapacityPtrInput {
	return (*skuCapacityPtrType)(v)
}

func (*skuCapacityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuCapacity)(nil)).Elem()
}

func (i *skuCapacityPtrType) ToSkuCapacityPtrOutput() SkuCapacityPtrOutput {
	return i.ToSkuCapacityPtrOutputWithContext(context.Background())
}

func (i *skuCapacityPtrType) ToSkuCapacityPtrOutputWithContext(ctx context.Context) SkuCapacityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuCapacityPtrOutput)
}

// Description of the App Service plan scale options.
type SkuCapacityOutput struct{ *pulumi.OutputState }

func (SkuCapacityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuCapacity)(nil)).Elem()
}

func (o SkuCapacityOutput) ToSkuCapacityOutput() SkuCapacityOutput {
	return o
}

func (o SkuCapacityOutput) ToSkuCapacityOutputWithContext(ctx context.Context) SkuCapacityOutput {
	return o
}

func (o SkuCapacityOutput) ToSkuCapacityPtrOutput() SkuCapacityPtrOutput {
	return o.ToSkuCapacityPtrOutputWithContext(context.Background())
}

func (o SkuCapacityOutput) ToSkuCapacityPtrOutputWithContext(ctx context.Context) SkuCapacityPtrOutput {
	return o.ApplyT(func(v SkuCapacity) *SkuCapacity {
		return &v
	}).(SkuCapacityPtrOutput)
}

// Default number of workers for this App Service plan SKU.
func (o SkuCapacityOutput) Default() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuCapacity) *int { return v.Default }).(pulumi.IntPtrOutput)
}

// Maximum number of workers for this App Service plan SKU.
func (o SkuCapacityOutput) Maximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuCapacity) *int { return v.Maximum }).(pulumi.IntPtrOutput)
}

// Minimum number of workers for this App Service plan SKU.
func (o SkuCapacityOutput) Minimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuCapacity) *int { return v.Minimum }).(pulumi.IntPtrOutput)
}

// Available scale configurations for an App Service plan.
func (o SkuCapacityOutput) ScaleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuCapacity) *string { return v.ScaleType }).(pulumi.StringPtrOutput)
}

type SkuCapacityPtrOutput struct{ *pulumi.OutputState }

func (SkuCapacityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuCapacity)(nil)).Elem()
}

func (o SkuCapacityPtrOutput) ToSkuCapacityPtrOutput() SkuCapacityPtrOutput {
	return o
}

func (o SkuCapacityPtrOutput) ToSkuCapacityPtrOutputWithContext(ctx context.Context) SkuCapacityPtrOutput {
	return o
}

func (o SkuCapacityPtrOutput) Elem() SkuCapacityOutput {
	return o.ApplyT(func(v *SkuCapacity) SkuCapacity { return *v }).(SkuCapacityOutput)
}

// Default number of workers for this App Service plan SKU.
func (o SkuCapacityPtrOutput) Default() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuCapacity) *int {
		if v == nil {
			return nil
		}
		return v.Default
	}).(pulumi.IntPtrOutput)
}

// Maximum number of workers for this App Service plan SKU.
func (o SkuCapacityPtrOutput) Maximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuCapacity) *int {
		if v == nil {
			return nil
		}
		return v.Maximum
	}).(pulumi.IntPtrOutput)
}

// Minimum number of workers for this App Service plan SKU.
func (o SkuCapacityPtrOutput) Minimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuCapacity) *int {
		if v == nil {
			return nil
		}
		return v.Minimum
	}).(pulumi.IntPtrOutput)
}

// Available scale configurations for an App Service plan.
func (o SkuCapacityPtrOutput) ScaleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuCapacity) *string {
		if v == nil {
			return nil
		}
		return v.ScaleType
	}).(pulumi.StringPtrOutput)
}

// Description of the App Service plan scale options.
type SkuCapacityResponse struct {
	// Default number of workers for this App Service plan SKU.
	Default *int `pulumi:"default"`
	// Maximum number of workers for this App Service plan SKU.
	Maximum *int `pulumi:"maximum"`
	// Minimum number of workers for this App Service plan SKU.
	Minimum *int `pulumi:"minimum"`
	// Available scale configurations for an App Service plan.
	ScaleType *string `pulumi:"scaleType"`
}

// SkuCapacityResponseInput is an input type that accepts SkuCapacityResponseArgs and SkuCapacityResponseOutput values.
// You can construct a concrete instance of `SkuCapacityResponseInput` via:
//
//          SkuCapacityResponseArgs{...}
type SkuCapacityResponseInput interface {
	pulumi.Input

	ToSkuCapacityResponseOutput() SkuCapacityResponseOutput
	ToSkuCapacityResponseOutputWithContext(context.Context) SkuCapacityResponseOutput
}

// Description of the App Service plan scale options.
type SkuCapacityResponseArgs struct {
	// Default number of workers for this App Service plan SKU.
	Default pulumi.IntPtrInput `pulumi:"default"`
	// Maximum number of workers for this App Service plan SKU.
	Maximum pulumi.IntPtrInput `pulumi:"maximum"`
	// Minimum number of workers for this App Service plan SKU.
	Minimum pulumi.IntPtrInput `pulumi:"minimum"`
	// Available scale configurations for an App Service plan.
	ScaleType pulumi.StringPtrInput `pulumi:"scaleType"`
}

func (SkuCapacityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuCapacityResponse)(nil)).Elem()
}

func (i SkuCapacityResponseArgs) ToSkuCapacityResponseOutput() SkuCapacityResponseOutput {
	return i.ToSkuCapacityResponseOutputWithContext(context.Background())
}

func (i SkuCapacityResponseArgs) ToSkuCapacityResponseOutputWithContext(ctx context.Context) SkuCapacityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuCapacityResponseOutput)
}

func (i SkuCapacityResponseArgs) ToSkuCapacityResponsePtrOutput() SkuCapacityResponsePtrOutput {
	return i.ToSkuCapacityResponsePtrOutputWithContext(context.Background())
}

func (i SkuCapacityResponseArgs) ToSkuCapacityResponsePtrOutputWithContext(ctx context.Context) SkuCapacityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuCapacityResponseOutput).ToSkuCapacityResponsePtrOutputWithContext(ctx)
}

// SkuCapacityResponsePtrInput is an input type that accepts SkuCapacityResponseArgs, SkuCapacityResponsePtr and SkuCapacityResponsePtrOutput values.
// You can construct a concrete instance of `SkuCapacityResponsePtrInput` via:
//
//          SkuCapacityResponseArgs{...}
//
//  or:
//
//          nil
type SkuCapacityResponsePtrInput interface {
	pulumi.Input

	ToSkuCapacityResponsePtrOutput() SkuCapacityResponsePtrOutput
	ToSkuCapacityResponsePtrOutputWithContext(context.Context) SkuCapacityResponsePtrOutput
}

type skuCapacityResponsePtrType SkuCapacityResponseArgs

func SkuCapacityResponsePtr(v *SkuCapacityResponseArgs) SkuCapacityResponsePtrInput {
	return (*skuCapacityResponsePtrType)(v)
}

func (*skuCapacityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuCapacityResponse)(nil)).Elem()
}

func (i *skuCapacityResponsePtrType) ToSkuCapacityResponsePtrOutput() SkuCapacityResponsePtrOutput {
	return i.ToSkuCapacityResponsePtrOutputWithContext(context.Background())
}

func (i *skuCapacityResponsePtrType) ToSkuCapacityResponsePtrOutputWithContext(ctx context.Context) SkuCapacityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuCapacityResponsePtrOutput)
}

// Description of the App Service plan scale options.
type SkuCapacityResponseOutput struct{ *pulumi.OutputState }

func (SkuCapacityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuCapacityResponse)(nil)).Elem()
}

func (o SkuCapacityResponseOutput) ToSkuCapacityResponseOutput() SkuCapacityResponseOutput {
	return o
}

func (o SkuCapacityResponseOutput) ToSkuCapacityResponseOutputWithContext(ctx context.Context) SkuCapacityResponseOutput {
	return o
}

func (o SkuCapacityResponseOutput) ToSkuCapacityResponsePtrOutput() SkuCapacityResponsePtrOutput {
	return o.ToSkuCapacityResponsePtrOutputWithContext(context.Background())
}

func (o SkuCapacityResponseOutput) ToSkuCapacityResponsePtrOutputWithContext(ctx context.Context) SkuCapacityResponsePtrOutput {
	return o.ApplyT(func(v SkuCapacityResponse) *SkuCapacityResponse {
		return &v
	}).(SkuCapacityResponsePtrOutput)
}

// Default number of workers for this App Service plan SKU.
func (o SkuCapacityResponseOutput) Default() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuCapacityResponse) *int { return v.Default }).(pulumi.IntPtrOutput)
}

// Maximum number of workers for this App Service plan SKU.
func (o SkuCapacityResponseOutput) Maximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuCapacityResponse) *int { return v.Maximum }).(pulumi.IntPtrOutput)
}

// Minimum number of workers for this App Service plan SKU.
func (o SkuCapacityResponseOutput) Minimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuCapacityResponse) *int { return v.Minimum }).(pulumi.IntPtrOutput)
}

// Available scale configurations for an App Service plan.
func (o SkuCapacityResponseOutput) ScaleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuCapacityResponse) *string { return v.ScaleType }).(pulumi.StringPtrOutput)
}

type SkuCapacityResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuCapacityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuCapacityResponse)(nil)).Elem()
}

func (o SkuCapacityResponsePtrOutput) ToSkuCapacityResponsePtrOutput() SkuCapacityResponsePtrOutput {
	return o
}

func (o SkuCapacityResponsePtrOutput) ToSkuCapacityResponsePtrOutputWithContext(ctx context.Context) SkuCapacityResponsePtrOutput {
	return o
}

func (o SkuCapacityResponsePtrOutput) Elem() SkuCapacityResponseOutput {
	return o.ApplyT(func(v *SkuCapacityResponse) SkuCapacityResponse { return *v }).(SkuCapacityResponseOutput)
}

// Default number of workers for this App Service plan SKU.
func (o SkuCapacityResponsePtrOutput) Default() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuCapacityResponse) *int {
		if v == nil {
			return nil
		}
		return v.Default
	}).(pulumi.IntPtrOutput)
}

// Maximum number of workers for this App Service plan SKU.
func (o SkuCapacityResponsePtrOutput) Maximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuCapacityResponse) *int {
		if v == nil {
			return nil
		}
		return v.Maximum
	}).(pulumi.IntPtrOutput)
}

// Minimum number of workers for this App Service plan SKU.
func (o SkuCapacityResponsePtrOutput) Minimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuCapacityResponse) *int {
		if v == nil {
			return nil
		}
		return v.Minimum
	}).(pulumi.IntPtrOutput)
}

// Available scale configurations for an App Service plan.
func (o SkuCapacityResponsePtrOutput) ScaleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuCapacityResponse) *string {
		if v == nil {
			return nil
		}
		return v.ScaleType
	}).(pulumi.StringPtrOutput)
}

// Description of a SKU for a scalable resource.
type SkuDescription struct {
	// Capabilities of the SKU, e.g., is traffic manager enabled?
	Capabilities []Capability `pulumi:"capabilities"`
	// Current number of instances assigned to the resource.
	Capacity *int `pulumi:"capacity"`
	// Family code of the resource SKU.
	Family *string `pulumi:"family"`
	// Locations of the SKU.
	Locations []string `pulumi:"locations"`
	// Name of the resource SKU.
	Name *string `pulumi:"name"`
	// Size specifier of the resource SKU.
	Size *string `pulumi:"size"`
	// Min, max, and default scale values of the SKU.
	SkuCapacity *SkuCapacity `pulumi:"skuCapacity"`
	// Service tier of the resource SKU.
	Tier *string `pulumi:"tier"`
}

// SkuDescriptionInput is an input type that accepts SkuDescriptionArgs and SkuDescriptionOutput values.
// You can construct a concrete instance of `SkuDescriptionInput` via:
//
//          SkuDescriptionArgs{...}
type SkuDescriptionInput interface {
	pulumi.Input

	ToSkuDescriptionOutput() SkuDescriptionOutput
	ToSkuDescriptionOutputWithContext(context.Context) SkuDescriptionOutput
}

// Description of a SKU for a scalable resource.
type SkuDescriptionArgs struct {
	// Capabilities of the SKU, e.g., is traffic manager enabled?
	Capabilities CapabilityArrayInput `pulumi:"capabilities"`
	// Current number of instances assigned to the resource.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Family code of the resource SKU.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// Locations of the SKU.
	Locations pulumi.StringArrayInput `pulumi:"locations"`
	// Name of the resource SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Size specifier of the resource SKU.
	Size pulumi.StringPtrInput `pulumi:"size"`
	// Min, max, and default scale values of the SKU.
	SkuCapacity SkuCapacityPtrInput `pulumi:"skuCapacity"`
	// Service tier of the resource SKU.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuDescriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuDescription)(nil)).Elem()
}

func (i SkuDescriptionArgs) ToSkuDescriptionOutput() SkuDescriptionOutput {
	return i.ToSkuDescriptionOutputWithContext(context.Background())
}

func (i SkuDescriptionArgs) ToSkuDescriptionOutputWithContext(ctx context.Context) SkuDescriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuDescriptionOutput)
}

func (i SkuDescriptionArgs) ToSkuDescriptionPtrOutput() SkuDescriptionPtrOutput {
	return i.ToSkuDescriptionPtrOutputWithContext(context.Background())
}

func (i SkuDescriptionArgs) ToSkuDescriptionPtrOutputWithContext(ctx context.Context) SkuDescriptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuDescriptionOutput).ToSkuDescriptionPtrOutputWithContext(ctx)
}

// SkuDescriptionPtrInput is an input type that accepts SkuDescriptionArgs, SkuDescriptionPtr and SkuDescriptionPtrOutput values.
// You can construct a concrete instance of `SkuDescriptionPtrInput` via:
//
//          SkuDescriptionArgs{...}
//
//  or:
//
//          nil
type SkuDescriptionPtrInput interface {
	pulumi.Input

	ToSkuDescriptionPtrOutput() SkuDescriptionPtrOutput
	ToSkuDescriptionPtrOutputWithContext(context.Context) SkuDescriptionPtrOutput
}

type skuDescriptionPtrType SkuDescriptionArgs

func SkuDescriptionPtr(v *SkuDescriptionArgs) SkuDescriptionPtrInput {
	return (*skuDescriptionPtrType)(v)
}

func (*skuDescriptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuDescription)(nil)).Elem()
}

func (i *skuDescriptionPtrType) ToSkuDescriptionPtrOutput() SkuDescriptionPtrOutput {
	return i.ToSkuDescriptionPtrOutputWithContext(context.Background())
}

func (i *skuDescriptionPtrType) ToSkuDescriptionPtrOutputWithContext(ctx context.Context) SkuDescriptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuDescriptionPtrOutput)
}

// Description of a SKU for a scalable resource.
type SkuDescriptionOutput struct{ *pulumi.OutputState }

func (SkuDescriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuDescription)(nil)).Elem()
}

func (o SkuDescriptionOutput) ToSkuDescriptionOutput() SkuDescriptionOutput {
	return o
}

func (o SkuDescriptionOutput) ToSkuDescriptionOutputWithContext(ctx context.Context) SkuDescriptionOutput {
	return o
}

func (o SkuDescriptionOutput) ToSkuDescriptionPtrOutput() SkuDescriptionPtrOutput {
	return o.ToSkuDescriptionPtrOutputWithContext(context.Background())
}

func (o SkuDescriptionOutput) ToSkuDescriptionPtrOutputWithContext(ctx context.Context) SkuDescriptionPtrOutput {
	return o.ApplyT(func(v SkuDescription) *SkuDescription {
		return &v
	}).(SkuDescriptionPtrOutput)
}

// Capabilities of the SKU, e.g., is traffic manager enabled?
func (o SkuDescriptionOutput) Capabilities() CapabilityArrayOutput {
	return o.ApplyT(func(v SkuDescription) []Capability { return v.Capabilities }).(CapabilityArrayOutput)
}

// Current number of instances assigned to the resource.
func (o SkuDescriptionOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuDescription) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Family code of the resource SKU.
func (o SkuDescriptionOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescription) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// Locations of the SKU.
func (o SkuDescriptionOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SkuDescription) []string { return v.Locations }).(pulumi.StringArrayOutput)
}

// Name of the resource SKU.
func (o SkuDescriptionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescription) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Size specifier of the resource SKU.
func (o SkuDescriptionOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescription) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// Min, max, and default scale values of the SKU.
func (o SkuDescriptionOutput) SkuCapacity() SkuCapacityPtrOutput {
	return o.ApplyT(func(v SkuDescription) *SkuCapacity { return v.SkuCapacity }).(SkuCapacityPtrOutput)
}

// Service tier of the resource SKU.
func (o SkuDescriptionOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescription) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuDescriptionPtrOutput struct{ *pulumi.OutputState }

func (SkuDescriptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuDescription)(nil)).Elem()
}

func (o SkuDescriptionPtrOutput) ToSkuDescriptionPtrOutput() SkuDescriptionPtrOutput {
	return o
}

func (o SkuDescriptionPtrOutput) ToSkuDescriptionPtrOutputWithContext(ctx context.Context) SkuDescriptionPtrOutput {
	return o
}

func (o SkuDescriptionPtrOutput) Elem() SkuDescriptionOutput {
	return o.ApplyT(func(v *SkuDescription) SkuDescription { return *v }).(SkuDescriptionOutput)
}

// Capabilities of the SKU, e.g., is traffic manager enabled?
func (o SkuDescriptionPtrOutput) Capabilities() CapabilityArrayOutput {
	return o.ApplyT(func(v *SkuDescription) []Capability {
		if v == nil {
			return nil
		}
		return v.Capabilities
	}).(CapabilityArrayOutput)
}

// Current number of instances assigned to the resource.
func (o SkuDescriptionPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuDescription) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Family code of the resource SKU.
func (o SkuDescriptionPtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescription) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// Locations of the SKU.
func (o SkuDescriptionPtrOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SkuDescription) []string {
		if v == nil {
			return nil
		}
		return v.Locations
	}).(pulumi.StringArrayOutput)
}

// Name of the resource SKU.
func (o SkuDescriptionPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescription) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Size specifier of the resource SKU.
func (o SkuDescriptionPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescription) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// Min, max, and default scale values of the SKU.
func (o SkuDescriptionPtrOutput) SkuCapacity() SkuCapacityPtrOutput {
	return o.ApplyT(func(v *SkuDescription) *SkuCapacity {
		if v == nil {
			return nil
		}
		return v.SkuCapacity
	}).(SkuCapacityPtrOutput)
}

// Service tier of the resource SKU.
func (o SkuDescriptionPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescription) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Description of a SKU for a scalable resource.
type SkuDescriptionResponse struct {
	// Capabilities of the SKU, e.g., is traffic manager enabled?
	Capabilities []CapabilityResponse `pulumi:"capabilities"`
	// Current number of instances assigned to the resource.
	Capacity *int `pulumi:"capacity"`
	// Family code of the resource SKU.
	Family *string `pulumi:"family"`
	// Locations of the SKU.
	Locations []string `pulumi:"locations"`
	// Name of the resource SKU.
	Name *string `pulumi:"name"`
	// Size specifier of the resource SKU.
	Size *string `pulumi:"size"`
	// Min, max, and default scale values of the SKU.
	SkuCapacity *SkuCapacityResponse `pulumi:"skuCapacity"`
	// Service tier of the resource SKU.
	Tier *string `pulumi:"tier"`
}

// SkuDescriptionResponseInput is an input type that accepts SkuDescriptionResponseArgs and SkuDescriptionResponseOutput values.
// You can construct a concrete instance of `SkuDescriptionResponseInput` via:
//
//          SkuDescriptionResponseArgs{...}
type SkuDescriptionResponseInput interface {
	pulumi.Input

	ToSkuDescriptionResponseOutput() SkuDescriptionResponseOutput
	ToSkuDescriptionResponseOutputWithContext(context.Context) SkuDescriptionResponseOutput
}

// Description of a SKU for a scalable resource.
type SkuDescriptionResponseArgs struct {
	// Capabilities of the SKU, e.g., is traffic manager enabled?
	Capabilities CapabilityResponseArrayInput `pulumi:"capabilities"`
	// Current number of instances assigned to the resource.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Family code of the resource SKU.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// Locations of the SKU.
	Locations pulumi.StringArrayInput `pulumi:"locations"`
	// Name of the resource SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Size specifier of the resource SKU.
	Size pulumi.StringPtrInput `pulumi:"size"`
	// Min, max, and default scale values of the SKU.
	SkuCapacity SkuCapacityResponsePtrInput `pulumi:"skuCapacity"`
	// Service tier of the resource SKU.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuDescriptionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuDescriptionResponse)(nil)).Elem()
}

func (i SkuDescriptionResponseArgs) ToSkuDescriptionResponseOutput() SkuDescriptionResponseOutput {
	return i.ToSkuDescriptionResponseOutputWithContext(context.Background())
}

func (i SkuDescriptionResponseArgs) ToSkuDescriptionResponseOutputWithContext(ctx context.Context) SkuDescriptionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuDescriptionResponseOutput)
}

func (i SkuDescriptionResponseArgs) ToSkuDescriptionResponsePtrOutput() SkuDescriptionResponsePtrOutput {
	return i.ToSkuDescriptionResponsePtrOutputWithContext(context.Background())
}

func (i SkuDescriptionResponseArgs) ToSkuDescriptionResponsePtrOutputWithContext(ctx context.Context) SkuDescriptionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuDescriptionResponseOutput).ToSkuDescriptionResponsePtrOutputWithContext(ctx)
}

// SkuDescriptionResponsePtrInput is an input type that accepts SkuDescriptionResponseArgs, SkuDescriptionResponsePtr and SkuDescriptionResponsePtrOutput values.
// You can construct a concrete instance of `SkuDescriptionResponsePtrInput` via:
//
//          SkuDescriptionResponseArgs{...}
//
//  or:
//
//          nil
type SkuDescriptionResponsePtrInput interface {
	pulumi.Input

	ToSkuDescriptionResponsePtrOutput() SkuDescriptionResponsePtrOutput
	ToSkuDescriptionResponsePtrOutputWithContext(context.Context) SkuDescriptionResponsePtrOutput
}

type skuDescriptionResponsePtrType SkuDescriptionResponseArgs

func SkuDescriptionResponsePtr(v *SkuDescriptionResponseArgs) SkuDescriptionResponsePtrInput {
	return (*skuDescriptionResponsePtrType)(v)
}

func (*skuDescriptionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuDescriptionResponse)(nil)).Elem()
}

func (i *skuDescriptionResponsePtrType) ToSkuDescriptionResponsePtrOutput() SkuDescriptionResponsePtrOutput {
	return i.ToSkuDescriptionResponsePtrOutputWithContext(context.Background())
}

func (i *skuDescriptionResponsePtrType) ToSkuDescriptionResponsePtrOutputWithContext(ctx context.Context) SkuDescriptionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuDescriptionResponsePtrOutput)
}

// Description of a SKU for a scalable resource.
type SkuDescriptionResponseOutput struct{ *pulumi.OutputState }

func (SkuDescriptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuDescriptionResponse)(nil)).Elem()
}

func (o SkuDescriptionResponseOutput) ToSkuDescriptionResponseOutput() SkuDescriptionResponseOutput {
	return o
}

func (o SkuDescriptionResponseOutput) ToSkuDescriptionResponseOutputWithContext(ctx context.Context) SkuDescriptionResponseOutput {
	return o
}

func (o SkuDescriptionResponseOutput) ToSkuDescriptionResponsePtrOutput() SkuDescriptionResponsePtrOutput {
	return o.ToSkuDescriptionResponsePtrOutputWithContext(context.Background())
}

func (o SkuDescriptionResponseOutput) ToSkuDescriptionResponsePtrOutputWithContext(ctx context.Context) SkuDescriptionResponsePtrOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) *SkuDescriptionResponse {
		return &v
	}).(SkuDescriptionResponsePtrOutput)
}

// Capabilities of the SKU, e.g., is traffic manager enabled?
func (o SkuDescriptionResponseOutput) Capabilities() CapabilityResponseArrayOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) []CapabilityResponse { return v.Capabilities }).(CapabilityResponseArrayOutput)
}

// Current number of instances assigned to the resource.
func (o SkuDescriptionResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Family code of the resource SKU.
func (o SkuDescriptionResponseOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// Locations of the SKU.
func (o SkuDescriptionResponseOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) []string { return v.Locations }).(pulumi.StringArrayOutput)
}

// Name of the resource SKU.
func (o SkuDescriptionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Size specifier of the resource SKU.
func (o SkuDescriptionResponseOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// Min, max, and default scale values of the SKU.
func (o SkuDescriptionResponseOutput) SkuCapacity() SkuCapacityResponsePtrOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) *SkuCapacityResponse { return v.SkuCapacity }).(SkuCapacityResponsePtrOutput)
}

// Service tier of the resource SKU.
func (o SkuDescriptionResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuDescriptionResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuDescriptionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuDescriptionResponse)(nil)).Elem()
}

func (o SkuDescriptionResponsePtrOutput) ToSkuDescriptionResponsePtrOutput() SkuDescriptionResponsePtrOutput {
	return o
}

func (o SkuDescriptionResponsePtrOutput) ToSkuDescriptionResponsePtrOutputWithContext(ctx context.Context) SkuDescriptionResponsePtrOutput {
	return o
}

func (o SkuDescriptionResponsePtrOutput) Elem() SkuDescriptionResponseOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) SkuDescriptionResponse { return *v }).(SkuDescriptionResponseOutput)
}

// Capabilities of the SKU, e.g., is traffic manager enabled?
func (o SkuDescriptionResponsePtrOutput) Capabilities() CapabilityResponseArrayOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) []CapabilityResponse {
		if v == nil {
			return nil
		}
		return v.Capabilities
	}).(CapabilityResponseArrayOutput)
}

// Current number of instances assigned to the resource.
func (o SkuDescriptionResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Family code of the resource SKU.
func (o SkuDescriptionResponsePtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// Locations of the SKU.
func (o SkuDescriptionResponsePtrOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) []string {
		if v == nil {
			return nil
		}
		return v.Locations
	}).(pulumi.StringArrayOutput)
}

// Name of the resource SKU.
func (o SkuDescriptionResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Size specifier of the resource SKU.
func (o SkuDescriptionResponsePtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// Min, max, and default scale values of the SKU.
func (o SkuDescriptionResponsePtrOutput) SkuCapacity() SkuCapacityResponsePtrOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) *SkuCapacityResponse {
		if v == nil {
			return nil
		}
		return v.SkuCapacity
	}).(SkuCapacityResponsePtrOutput)
}

// Service tier of the resource SKU.
func (o SkuDescriptionResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// The status of the last successful slot swap operation.
type SlotSwapStatus struct {
}

// SlotSwapStatusInput is an input type that accepts SlotSwapStatusArgs and SlotSwapStatusOutput values.
// You can construct a concrete instance of `SlotSwapStatusInput` via:
//
//          SlotSwapStatusArgs{...}
type SlotSwapStatusInput interface {
	pulumi.Input

	ToSlotSwapStatusOutput() SlotSwapStatusOutput
	ToSlotSwapStatusOutputWithContext(context.Context) SlotSwapStatusOutput
}

// The status of the last successful slot swap operation.
type SlotSwapStatusArgs struct {
}

func (SlotSwapStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotSwapStatus)(nil)).Elem()
}

func (i SlotSwapStatusArgs) ToSlotSwapStatusOutput() SlotSwapStatusOutput {
	return i.ToSlotSwapStatusOutputWithContext(context.Background())
}

func (i SlotSwapStatusArgs) ToSlotSwapStatusOutputWithContext(ctx context.Context) SlotSwapStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotSwapStatusOutput)
}

// The status of the last successful slot swap operation.
type SlotSwapStatusOutput struct{ *pulumi.OutputState }

func (SlotSwapStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotSwapStatus)(nil)).Elem()
}

func (o SlotSwapStatusOutput) ToSlotSwapStatusOutput() SlotSwapStatusOutput {
	return o
}

func (o SlotSwapStatusOutput) ToSlotSwapStatusOutputWithContext(ctx context.Context) SlotSwapStatusOutput {
	return o
}

// The status of the last successful slot swap operation.
type SlotSwapStatusResponse struct {
	// The destination slot of the last swap operation.
	DestinationSlotName string `pulumi:"destinationSlotName"`
	// The source slot of the last swap operation.
	SourceSlotName string `pulumi:"sourceSlotName"`
	// The time the last successful slot swap completed.
	TimestampUtc string `pulumi:"timestampUtc"`
}

// SlotSwapStatusResponseInput is an input type that accepts SlotSwapStatusResponseArgs and SlotSwapStatusResponseOutput values.
// You can construct a concrete instance of `SlotSwapStatusResponseInput` via:
//
//          SlotSwapStatusResponseArgs{...}
type SlotSwapStatusResponseInput interface {
	pulumi.Input

	ToSlotSwapStatusResponseOutput() SlotSwapStatusResponseOutput
	ToSlotSwapStatusResponseOutputWithContext(context.Context) SlotSwapStatusResponseOutput
}

// The status of the last successful slot swap operation.
type SlotSwapStatusResponseArgs struct {
	// The destination slot of the last swap operation.
	DestinationSlotName pulumi.StringInput `pulumi:"destinationSlotName"`
	// The source slot of the last swap operation.
	SourceSlotName pulumi.StringInput `pulumi:"sourceSlotName"`
	// The time the last successful slot swap completed.
	TimestampUtc pulumi.StringInput `pulumi:"timestampUtc"`
}

func (SlotSwapStatusResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotSwapStatusResponse)(nil)).Elem()
}

func (i SlotSwapStatusResponseArgs) ToSlotSwapStatusResponseOutput() SlotSwapStatusResponseOutput {
	return i.ToSlotSwapStatusResponseOutputWithContext(context.Background())
}

func (i SlotSwapStatusResponseArgs) ToSlotSwapStatusResponseOutputWithContext(ctx context.Context) SlotSwapStatusResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotSwapStatusResponseOutput)
}

func (i SlotSwapStatusResponseArgs) ToSlotSwapStatusResponsePtrOutput() SlotSwapStatusResponsePtrOutput {
	return i.ToSlotSwapStatusResponsePtrOutputWithContext(context.Background())
}

func (i SlotSwapStatusResponseArgs) ToSlotSwapStatusResponsePtrOutputWithContext(ctx context.Context) SlotSwapStatusResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotSwapStatusResponseOutput).ToSlotSwapStatusResponsePtrOutputWithContext(ctx)
}

// SlotSwapStatusResponsePtrInput is an input type that accepts SlotSwapStatusResponseArgs, SlotSwapStatusResponsePtr and SlotSwapStatusResponsePtrOutput values.
// You can construct a concrete instance of `SlotSwapStatusResponsePtrInput` via:
//
//          SlotSwapStatusResponseArgs{...}
//
//  or:
//
//          nil
type SlotSwapStatusResponsePtrInput interface {
	pulumi.Input

	ToSlotSwapStatusResponsePtrOutput() SlotSwapStatusResponsePtrOutput
	ToSlotSwapStatusResponsePtrOutputWithContext(context.Context) SlotSwapStatusResponsePtrOutput
}

type slotSwapStatusResponsePtrType SlotSwapStatusResponseArgs

func SlotSwapStatusResponsePtr(v *SlotSwapStatusResponseArgs) SlotSwapStatusResponsePtrInput {
	return (*slotSwapStatusResponsePtrType)(v)
}

func (*slotSwapStatusResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SlotSwapStatusResponse)(nil)).Elem()
}

func (i *slotSwapStatusResponsePtrType) ToSlotSwapStatusResponsePtrOutput() SlotSwapStatusResponsePtrOutput {
	return i.ToSlotSwapStatusResponsePtrOutputWithContext(context.Background())
}

func (i *slotSwapStatusResponsePtrType) ToSlotSwapStatusResponsePtrOutputWithContext(ctx context.Context) SlotSwapStatusResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotSwapStatusResponsePtrOutput)
}

// The status of the last successful slot swap operation.
type SlotSwapStatusResponseOutput struct{ *pulumi.OutputState }

func (SlotSwapStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotSwapStatusResponse)(nil)).Elem()
}

func (o SlotSwapStatusResponseOutput) ToSlotSwapStatusResponseOutput() SlotSwapStatusResponseOutput {
	return o
}

func (o SlotSwapStatusResponseOutput) ToSlotSwapStatusResponseOutputWithContext(ctx context.Context) SlotSwapStatusResponseOutput {
	return o
}

func (o SlotSwapStatusResponseOutput) ToSlotSwapStatusResponsePtrOutput() SlotSwapStatusResponsePtrOutput {
	return o.ToSlotSwapStatusResponsePtrOutputWithContext(context.Background())
}

func (o SlotSwapStatusResponseOutput) ToSlotSwapStatusResponsePtrOutputWithContext(ctx context.Context) SlotSwapStatusResponsePtrOutput {
	return o.ApplyT(func(v SlotSwapStatusResponse) *SlotSwapStatusResponse {
		return &v
	}).(SlotSwapStatusResponsePtrOutput)
}

// The destination slot of the last swap operation.
func (o SlotSwapStatusResponseOutput) DestinationSlotName() pulumi.StringOutput {
	return o.ApplyT(func(v SlotSwapStatusResponse) string { return v.DestinationSlotName }).(pulumi.StringOutput)
}

// The source slot of the last swap operation.
func (o SlotSwapStatusResponseOutput) SourceSlotName() pulumi.StringOutput {
	return o.ApplyT(func(v SlotSwapStatusResponse) string { return v.SourceSlotName }).(pulumi.StringOutput)
}

// The time the last successful slot swap completed.
func (o SlotSwapStatusResponseOutput) TimestampUtc() pulumi.StringOutput {
	return o.ApplyT(func(v SlotSwapStatusResponse) string { return v.TimestampUtc }).(pulumi.StringOutput)
}

type SlotSwapStatusResponsePtrOutput struct{ *pulumi.OutputState }

func (SlotSwapStatusResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SlotSwapStatusResponse)(nil)).Elem()
}

func (o SlotSwapStatusResponsePtrOutput) ToSlotSwapStatusResponsePtrOutput() SlotSwapStatusResponsePtrOutput {
	return o
}

func (o SlotSwapStatusResponsePtrOutput) ToSlotSwapStatusResponsePtrOutputWithContext(ctx context.Context) SlotSwapStatusResponsePtrOutput {
	return o
}

func (o SlotSwapStatusResponsePtrOutput) Elem() SlotSwapStatusResponseOutput {
	return o.ApplyT(func(v *SlotSwapStatusResponse) SlotSwapStatusResponse { return *v }).(SlotSwapStatusResponseOutput)
}

// The destination slot of the last swap operation.
func (o SlotSwapStatusResponsePtrOutput) DestinationSlotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotSwapStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DestinationSlotName
	}).(pulumi.StringPtrOutput)
}

// The source slot of the last swap operation.
func (o SlotSwapStatusResponsePtrOutput) SourceSlotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotSwapStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SourceSlotName
	}).(pulumi.StringPtrOutput)
}

// The time the last successful slot swap completed.
func (o SlotSwapStatusResponsePtrOutput) TimestampUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotSwapStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TimestampUtc
	}).(pulumi.StringPtrOutput)
}

// Trigger based on request execution time.
type SlowRequestsBasedTrigger struct {
	// Request Count.
	Count *int `pulumi:"count"`
	// Time interval.
	TimeInterval *string `pulumi:"timeInterval"`
	// Time taken.
	TimeTaken *string `pulumi:"timeTaken"`
}

// SlowRequestsBasedTriggerInput is an input type that accepts SlowRequestsBasedTriggerArgs and SlowRequestsBasedTriggerOutput values.
// You can construct a concrete instance of `SlowRequestsBasedTriggerInput` via:
//
//          SlowRequestsBasedTriggerArgs{...}
type SlowRequestsBasedTriggerInput interface {
	pulumi.Input

	ToSlowRequestsBasedTriggerOutput() SlowRequestsBasedTriggerOutput
	ToSlowRequestsBasedTriggerOutputWithContext(context.Context) SlowRequestsBasedTriggerOutput
}

// Trigger based on request execution time.
type SlowRequestsBasedTriggerArgs struct {
	// Request Count.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// Time interval.
	TimeInterval pulumi.StringPtrInput `pulumi:"timeInterval"`
	// Time taken.
	TimeTaken pulumi.StringPtrInput `pulumi:"timeTaken"`
}

func (SlowRequestsBasedTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SlowRequestsBasedTrigger)(nil)).Elem()
}

func (i SlowRequestsBasedTriggerArgs) ToSlowRequestsBasedTriggerOutput() SlowRequestsBasedTriggerOutput {
	return i.ToSlowRequestsBasedTriggerOutputWithContext(context.Background())
}

func (i SlowRequestsBasedTriggerArgs) ToSlowRequestsBasedTriggerOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlowRequestsBasedTriggerOutput)
}

func (i SlowRequestsBasedTriggerArgs) ToSlowRequestsBasedTriggerPtrOutput() SlowRequestsBasedTriggerPtrOutput {
	return i.ToSlowRequestsBasedTriggerPtrOutputWithContext(context.Background())
}

func (i SlowRequestsBasedTriggerArgs) ToSlowRequestsBasedTriggerPtrOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlowRequestsBasedTriggerOutput).ToSlowRequestsBasedTriggerPtrOutputWithContext(ctx)
}

// SlowRequestsBasedTriggerPtrInput is an input type that accepts SlowRequestsBasedTriggerArgs, SlowRequestsBasedTriggerPtr and SlowRequestsBasedTriggerPtrOutput values.
// You can construct a concrete instance of `SlowRequestsBasedTriggerPtrInput` via:
//
//          SlowRequestsBasedTriggerArgs{...}
//
//  or:
//
//          nil
type SlowRequestsBasedTriggerPtrInput interface {
	pulumi.Input

	ToSlowRequestsBasedTriggerPtrOutput() SlowRequestsBasedTriggerPtrOutput
	ToSlowRequestsBasedTriggerPtrOutputWithContext(context.Context) SlowRequestsBasedTriggerPtrOutput
}

type slowRequestsBasedTriggerPtrType SlowRequestsBasedTriggerArgs

func SlowRequestsBasedTriggerPtr(v *SlowRequestsBasedTriggerArgs) SlowRequestsBasedTriggerPtrInput {
	return (*slowRequestsBasedTriggerPtrType)(v)
}

func (*slowRequestsBasedTriggerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SlowRequestsBasedTrigger)(nil)).Elem()
}

func (i *slowRequestsBasedTriggerPtrType) ToSlowRequestsBasedTriggerPtrOutput() SlowRequestsBasedTriggerPtrOutput {
	return i.ToSlowRequestsBasedTriggerPtrOutputWithContext(context.Background())
}

func (i *slowRequestsBasedTriggerPtrType) ToSlowRequestsBasedTriggerPtrOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlowRequestsBasedTriggerPtrOutput)
}

// Trigger based on request execution time.
type SlowRequestsBasedTriggerOutput struct{ *pulumi.OutputState }

func (SlowRequestsBasedTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlowRequestsBasedTrigger)(nil)).Elem()
}

func (o SlowRequestsBasedTriggerOutput) ToSlowRequestsBasedTriggerOutput() SlowRequestsBasedTriggerOutput {
	return o
}

func (o SlowRequestsBasedTriggerOutput) ToSlowRequestsBasedTriggerOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerOutput {
	return o
}

func (o SlowRequestsBasedTriggerOutput) ToSlowRequestsBasedTriggerPtrOutput() SlowRequestsBasedTriggerPtrOutput {
	return o.ToSlowRequestsBasedTriggerPtrOutputWithContext(context.Background())
}

func (o SlowRequestsBasedTriggerOutput) ToSlowRequestsBasedTriggerPtrOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerPtrOutput {
	return o.ApplyT(func(v SlowRequestsBasedTrigger) *SlowRequestsBasedTrigger {
		return &v
	}).(SlowRequestsBasedTriggerPtrOutput)
}

// Request Count.
func (o SlowRequestsBasedTriggerOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SlowRequestsBasedTrigger) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Time interval.
func (o SlowRequestsBasedTriggerOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlowRequestsBasedTrigger) *string { return v.TimeInterval }).(pulumi.StringPtrOutput)
}

// Time taken.
func (o SlowRequestsBasedTriggerOutput) TimeTaken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlowRequestsBasedTrigger) *string { return v.TimeTaken }).(pulumi.StringPtrOutput)
}

type SlowRequestsBasedTriggerPtrOutput struct{ *pulumi.OutputState }

func (SlowRequestsBasedTriggerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SlowRequestsBasedTrigger)(nil)).Elem()
}

func (o SlowRequestsBasedTriggerPtrOutput) ToSlowRequestsBasedTriggerPtrOutput() SlowRequestsBasedTriggerPtrOutput {
	return o
}

func (o SlowRequestsBasedTriggerPtrOutput) ToSlowRequestsBasedTriggerPtrOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerPtrOutput {
	return o
}

func (o SlowRequestsBasedTriggerPtrOutput) Elem() SlowRequestsBasedTriggerOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTrigger) SlowRequestsBasedTrigger { return *v }).(SlowRequestsBasedTriggerOutput)
}

// Request Count.
func (o SlowRequestsBasedTriggerPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTrigger) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Time interval.
func (o SlowRequestsBasedTriggerPtrOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTrigger) *string {
		if v == nil {
			return nil
		}
		return v.TimeInterval
	}).(pulumi.StringPtrOutput)
}

// Time taken.
func (o SlowRequestsBasedTriggerPtrOutput) TimeTaken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTrigger) *string {
		if v == nil {
			return nil
		}
		return v.TimeTaken
	}).(pulumi.StringPtrOutput)
}

// Trigger based on request execution time.
type SlowRequestsBasedTriggerResponse struct {
	// Request Count.
	Count *int `pulumi:"count"`
	// Time interval.
	TimeInterval *string `pulumi:"timeInterval"`
	// Time taken.
	TimeTaken *string `pulumi:"timeTaken"`
}

// SlowRequestsBasedTriggerResponseInput is an input type that accepts SlowRequestsBasedTriggerResponseArgs and SlowRequestsBasedTriggerResponseOutput values.
// You can construct a concrete instance of `SlowRequestsBasedTriggerResponseInput` via:
//
//          SlowRequestsBasedTriggerResponseArgs{...}
type SlowRequestsBasedTriggerResponseInput interface {
	pulumi.Input

	ToSlowRequestsBasedTriggerResponseOutput() SlowRequestsBasedTriggerResponseOutput
	ToSlowRequestsBasedTriggerResponseOutputWithContext(context.Context) SlowRequestsBasedTriggerResponseOutput
}

// Trigger based on request execution time.
type SlowRequestsBasedTriggerResponseArgs struct {
	// Request Count.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// Time interval.
	TimeInterval pulumi.StringPtrInput `pulumi:"timeInterval"`
	// Time taken.
	TimeTaken pulumi.StringPtrInput `pulumi:"timeTaken"`
}

func (SlowRequestsBasedTriggerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SlowRequestsBasedTriggerResponse)(nil)).Elem()
}

func (i SlowRequestsBasedTriggerResponseArgs) ToSlowRequestsBasedTriggerResponseOutput() SlowRequestsBasedTriggerResponseOutput {
	return i.ToSlowRequestsBasedTriggerResponseOutputWithContext(context.Background())
}

func (i SlowRequestsBasedTriggerResponseArgs) ToSlowRequestsBasedTriggerResponseOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlowRequestsBasedTriggerResponseOutput)
}

func (i SlowRequestsBasedTriggerResponseArgs) ToSlowRequestsBasedTriggerResponsePtrOutput() SlowRequestsBasedTriggerResponsePtrOutput {
	return i.ToSlowRequestsBasedTriggerResponsePtrOutputWithContext(context.Background())
}

func (i SlowRequestsBasedTriggerResponseArgs) ToSlowRequestsBasedTriggerResponsePtrOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlowRequestsBasedTriggerResponseOutput).ToSlowRequestsBasedTriggerResponsePtrOutputWithContext(ctx)
}

// SlowRequestsBasedTriggerResponsePtrInput is an input type that accepts SlowRequestsBasedTriggerResponseArgs, SlowRequestsBasedTriggerResponsePtr and SlowRequestsBasedTriggerResponsePtrOutput values.
// You can construct a concrete instance of `SlowRequestsBasedTriggerResponsePtrInput` via:
//
//          SlowRequestsBasedTriggerResponseArgs{...}
//
//  or:
//
//          nil
type SlowRequestsBasedTriggerResponsePtrInput interface {
	pulumi.Input

	ToSlowRequestsBasedTriggerResponsePtrOutput() SlowRequestsBasedTriggerResponsePtrOutput
	ToSlowRequestsBasedTriggerResponsePtrOutputWithContext(context.Context) SlowRequestsBasedTriggerResponsePtrOutput
}

type slowRequestsBasedTriggerResponsePtrType SlowRequestsBasedTriggerResponseArgs

func SlowRequestsBasedTriggerResponsePtr(v *SlowRequestsBasedTriggerResponseArgs) SlowRequestsBasedTriggerResponsePtrInput {
	return (*slowRequestsBasedTriggerResponsePtrType)(v)
}

func (*slowRequestsBasedTriggerResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SlowRequestsBasedTriggerResponse)(nil)).Elem()
}

func (i *slowRequestsBasedTriggerResponsePtrType) ToSlowRequestsBasedTriggerResponsePtrOutput() SlowRequestsBasedTriggerResponsePtrOutput {
	return i.ToSlowRequestsBasedTriggerResponsePtrOutputWithContext(context.Background())
}

func (i *slowRequestsBasedTriggerResponsePtrType) ToSlowRequestsBasedTriggerResponsePtrOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlowRequestsBasedTriggerResponsePtrOutput)
}

// Trigger based on request execution time.
type SlowRequestsBasedTriggerResponseOutput struct{ *pulumi.OutputState }

func (SlowRequestsBasedTriggerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlowRequestsBasedTriggerResponse)(nil)).Elem()
}

func (o SlowRequestsBasedTriggerResponseOutput) ToSlowRequestsBasedTriggerResponseOutput() SlowRequestsBasedTriggerResponseOutput {
	return o
}

func (o SlowRequestsBasedTriggerResponseOutput) ToSlowRequestsBasedTriggerResponseOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerResponseOutput {
	return o
}

func (o SlowRequestsBasedTriggerResponseOutput) ToSlowRequestsBasedTriggerResponsePtrOutput() SlowRequestsBasedTriggerResponsePtrOutput {
	return o.ToSlowRequestsBasedTriggerResponsePtrOutputWithContext(context.Background())
}

func (o SlowRequestsBasedTriggerResponseOutput) ToSlowRequestsBasedTriggerResponsePtrOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerResponsePtrOutput {
	return o.ApplyT(func(v SlowRequestsBasedTriggerResponse) *SlowRequestsBasedTriggerResponse {
		return &v
	}).(SlowRequestsBasedTriggerResponsePtrOutput)
}

// Request Count.
func (o SlowRequestsBasedTriggerResponseOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SlowRequestsBasedTriggerResponse) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Time interval.
func (o SlowRequestsBasedTriggerResponseOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlowRequestsBasedTriggerResponse) *string { return v.TimeInterval }).(pulumi.StringPtrOutput)
}

// Time taken.
func (o SlowRequestsBasedTriggerResponseOutput) TimeTaken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlowRequestsBasedTriggerResponse) *string { return v.TimeTaken }).(pulumi.StringPtrOutput)
}

type SlowRequestsBasedTriggerResponsePtrOutput struct{ *pulumi.OutputState }

func (SlowRequestsBasedTriggerResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SlowRequestsBasedTriggerResponse)(nil)).Elem()
}

func (o SlowRequestsBasedTriggerResponsePtrOutput) ToSlowRequestsBasedTriggerResponsePtrOutput() SlowRequestsBasedTriggerResponsePtrOutput {
	return o
}

func (o SlowRequestsBasedTriggerResponsePtrOutput) ToSlowRequestsBasedTriggerResponsePtrOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerResponsePtrOutput {
	return o
}

func (o SlowRequestsBasedTriggerResponsePtrOutput) Elem() SlowRequestsBasedTriggerResponseOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTriggerResponse) SlowRequestsBasedTriggerResponse { return *v }).(SlowRequestsBasedTriggerResponseOutput)
}

// Request Count.
func (o SlowRequestsBasedTriggerResponsePtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTriggerResponse) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Time interval.
func (o SlowRequestsBasedTriggerResponsePtrOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTriggerResponse) *string {
		if v == nil {
			return nil
		}
		return v.TimeInterval
	}).(pulumi.StringPtrOutput)
}

// Time taken.
func (o SlowRequestsBasedTriggerResponsePtrOutput) TimeTaken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTriggerResponse) *string {
		if v == nil {
			return nil
		}
		return v.TimeTaken
	}).(pulumi.StringPtrOutput)
}

// Stamp capacity information.
type StampCapacity struct {
	// Available capacity (# of machines, bytes of storage etc...).
	AvailableCapacity *int `pulumi:"availableCapacity"`
	// Shared/dedicated workers.
	ComputeMode *string `pulumi:"computeMode"`
	// If <code>true</code>, it includes basic apps.
	// Basic apps are not used for capacity allocation.
	ExcludeFromCapacityAllocation *bool `pulumi:"excludeFromCapacityAllocation"`
	// <code>true</code> if capacity is applicable for all apps; otherwise, <code>false</code>.
	IsApplicableForAllComputeModes *bool `pulumi:"isApplicableForAllComputeModes"`
	// Is this a linux stamp capacity
	IsLinux *bool `pulumi:"isLinux"`
	// Name of the stamp.
	Name *string `pulumi:"name"`
	// Shared or Dedicated.
	SiteMode *string `pulumi:"siteMode"`
	// Total capacity (# of machines, bytes of storage etc...).
	TotalCapacity *int `pulumi:"totalCapacity"`
	// Name of the unit.
	Unit *string `pulumi:"unit"`
	// Size of the machines.
	WorkerSize *string `pulumi:"workerSize"`
	// Size ID of machines:
	// 0 - Small
	// 1 - Medium
	// 2 - Large
	WorkerSizeId *int `pulumi:"workerSizeId"`
}

// StampCapacityInput is an input type that accepts StampCapacityArgs and StampCapacityOutput values.
// You can construct a concrete instance of `StampCapacityInput` via:
//
//          StampCapacityArgs{...}
type StampCapacityInput interface {
	pulumi.Input

	ToStampCapacityOutput() StampCapacityOutput
	ToStampCapacityOutputWithContext(context.Context) StampCapacityOutput
}

// Stamp capacity information.
type StampCapacityArgs struct {
	// Available capacity (# of machines, bytes of storage etc...).
	AvailableCapacity pulumi.IntPtrInput `pulumi:"availableCapacity"`
	// Shared/dedicated workers.
	ComputeMode pulumi.StringPtrInput `pulumi:"computeMode"`
	// If <code>true</code>, it includes basic apps.
	// Basic apps are not used for capacity allocation.
	ExcludeFromCapacityAllocation pulumi.BoolPtrInput `pulumi:"excludeFromCapacityAllocation"`
	// <code>true</code> if capacity is applicable for all apps; otherwise, <code>false</code>.
	IsApplicableForAllComputeModes pulumi.BoolPtrInput `pulumi:"isApplicableForAllComputeModes"`
	// Is this a linux stamp capacity
	IsLinux pulumi.BoolPtrInput `pulumi:"isLinux"`
	// Name of the stamp.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Shared or Dedicated.
	SiteMode pulumi.StringPtrInput `pulumi:"siteMode"`
	// Total capacity (# of machines, bytes of storage etc...).
	TotalCapacity pulumi.IntPtrInput `pulumi:"totalCapacity"`
	// Name of the unit.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
	// Size of the machines.
	WorkerSize pulumi.StringPtrInput `pulumi:"workerSize"`
	// Size ID of machines:
	// 0 - Small
	// 1 - Medium
	// 2 - Large
	WorkerSizeId pulumi.IntPtrInput `pulumi:"workerSizeId"`
}

func (StampCapacityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StampCapacity)(nil)).Elem()
}

func (i StampCapacityArgs) ToStampCapacityOutput() StampCapacityOutput {
	return i.ToStampCapacityOutputWithContext(context.Background())
}

func (i StampCapacityArgs) ToStampCapacityOutputWithContext(ctx context.Context) StampCapacityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StampCapacityOutput)
}

// Stamp capacity information.
type StampCapacityOutput struct{ *pulumi.OutputState }

func (StampCapacityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StampCapacity)(nil)).Elem()
}

func (o StampCapacityOutput) ToStampCapacityOutput() StampCapacityOutput {
	return o
}

func (o StampCapacityOutput) ToStampCapacityOutputWithContext(ctx context.Context) StampCapacityOutput {
	return o
}

// Available capacity (# of machines, bytes of storage etc...).
func (o StampCapacityOutput) AvailableCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StampCapacity) *int { return v.AvailableCapacity }).(pulumi.IntPtrOutput)
}

// Shared/dedicated workers.
func (o StampCapacityOutput) ComputeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StampCapacity) *string { return v.ComputeMode }).(pulumi.StringPtrOutput)
}

// If <code>true</code>, it includes basic apps.
// Basic apps are not used for capacity allocation.
func (o StampCapacityOutput) ExcludeFromCapacityAllocation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StampCapacity) *bool { return v.ExcludeFromCapacityAllocation }).(pulumi.BoolPtrOutput)
}

// <code>true</code> if capacity is applicable for all apps; otherwise, <code>false</code>.
func (o StampCapacityOutput) IsApplicableForAllComputeModes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StampCapacity) *bool { return v.IsApplicableForAllComputeModes }).(pulumi.BoolPtrOutput)
}

// Is this a linux stamp capacity
func (o StampCapacityOutput) IsLinux() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StampCapacity) *bool { return v.IsLinux }).(pulumi.BoolPtrOutput)
}

// Name of the stamp.
func (o StampCapacityOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StampCapacity) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Shared or Dedicated.
func (o StampCapacityOutput) SiteMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StampCapacity) *string { return v.SiteMode }).(pulumi.StringPtrOutput)
}

// Total capacity (# of machines, bytes of storage etc...).
func (o StampCapacityOutput) TotalCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StampCapacity) *int { return v.TotalCapacity }).(pulumi.IntPtrOutput)
}

// Name of the unit.
func (o StampCapacityOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StampCapacity) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

// Size of the machines.
func (o StampCapacityOutput) WorkerSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StampCapacity) *string { return v.WorkerSize }).(pulumi.StringPtrOutput)
}

// Size ID of machines:
// 0 - Small
// 1 - Medium
// 2 - Large
func (o StampCapacityOutput) WorkerSizeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StampCapacity) *int { return v.WorkerSizeId }).(pulumi.IntPtrOutput)
}

// Stamp capacity information.
type StampCapacityResponse struct {
	// Available capacity (# of machines, bytes of storage etc...).
	AvailableCapacity *int `pulumi:"availableCapacity"`
	// Shared/dedicated workers.
	ComputeMode *string `pulumi:"computeMode"`
	// If <code>true</code>, it includes basic apps.
	// Basic apps are not used for capacity allocation.
	ExcludeFromCapacityAllocation *bool `pulumi:"excludeFromCapacityAllocation"`
	// <code>true</code> if capacity is applicable for all apps; otherwise, <code>false</code>.
	IsApplicableForAllComputeModes *bool `pulumi:"isApplicableForAllComputeModes"`
	// Is this a linux stamp capacity
	IsLinux *bool `pulumi:"isLinux"`
	// Name of the stamp.
	Name *string `pulumi:"name"`
	// Shared or Dedicated.
	SiteMode *string `pulumi:"siteMode"`
	// Total capacity (# of machines, bytes of storage etc...).
	TotalCapacity *int `pulumi:"totalCapacity"`
	// Name of the unit.
	Unit *string `pulumi:"unit"`
	// Size of the machines.
	WorkerSize *string `pulumi:"workerSize"`
	// Size ID of machines:
	// 0 - Small
	// 1 - Medium
	// 2 - Large
	WorkerSizeId *int `pulumi:"workerSizeId"`
}

// StampCapacityResponseInput is an input type that accepts StampCapacityResponseArgs and StampCapacityResponseOutput values.
// You can construct a concrete instance of `StampCapacityResponseInput` via:
//
//          StampCapacityResponseArgs{...}
type StampCapacityResponseInput interface {
	pulumi.Input

	ToStampCapacityResponseOutput() StampCapacityResponseOutput
	ToStampCapacityResponseOutputWithContext(context.Context) StampCapacityResponseOutput
}

// Stamp capacity information.
type StampCapacityResponseArgs struct {
	// Available capacity (# of machines, bytes of storage etc...).
	AvailableCapacity pulumi.IntPtrInput `pulumi:"availableCapacity"`
	// Shared/dedicated workers.
	ComputeMode pulumi.StringPtrInput `pulumi:"computeMode"`
	// If <code>true</code>, it includes basic apps.
	// Basic apps are not used for capacity allocation.
	ExcludeFromCapacityAllocation pulumi.BoolPtrInput `pulumi:"excludeFromCapacityAllocation"`
	// <code>true</code> if capacity is applicable for all apps; otherwise, <code>false</code>.
	IsApplicableForAllComputeModes pulumi.BoolPtrInput `pulumi:"isApplicableForAllComputeModes"`
	// Is this a linux stamp capacity
	IsLinux pulumi.BoolPtrInput `pulumi:"isLinux"`
	// Name of the stamp.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Shared or Dedicated.
	SiteMode pulumi.StringPtrInput `pulumi:"siteMode"`
	// Total capacity (# of machines, bytes of storage etc...).
	TotalCapacity pulumi.IntPtrInput `pulumi:"totalCapacity"`
	// Name of the unit.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
	// Size of the machines.
	WorkerSize pulumi.StringPtrInput `pulumi:"workerSize"`
	// Size ID of machines:
	// 0 - Small
	// 1 - Medium
	// 2 - Large
	WorkerSizeId pulumi.IntPtrInput `pulumi:"workerSizeId"`
}

func (StampCapacityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StampCapacityResponse)(nil)).Elem()
}

func (i StampCapacityResponseArgs) ToStampCapacityResponseOutput() StampCapacityResponseOutput {
	return i.ToStampCapacityResponseOutputWithContext(context.Background())
}

func (i StampCapacityResponseArgs) ToStampCapacityResponseOutputWithContext(ctx context.Context) StampCapacityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StampCapacityResponseOutput)
}

// StampCapacityResponseArrayInput is an input type that accepts StampCapacityResponseArray and StampCapacityResponseArrayOutput values.
// You can construct a concrete instance of `StampCapacityResponseArrayInput` via:
//
//          StampCapacityResponseArray{ StampCapacityResponseArgs{...} }
type StampCapacityResponseArrayInput interface {
	pulumi.Input

	ToStampCapacityResponseArrayOutput() StampCapacityResponseArrayOutput
	ToStampCapacityResponseArrayOutputWithContext(context.Context) StampCapacityResponseArrayOutput
}

type StampCapacityResponseArray []StampCapacityResponseInput

func (StampCapacityResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StampCapacityResponse)(nil)).Elem()
}

func (i StampCapacityResponseArray) ToStampCapacityResponseArrayOutput() StampCapacityResponseArrayOutput {
	return i.ToStampCapacityResponseArrayOutputWithContext(context.Background())
}

func (i StampCapacityResponseArray) ToStampCapacityResponseArrayOutputWithContext(ctx context.Context) StampCapacityResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StampCapacityResponseArrayOutput)
}

// Stamp capacity information.
type StampCapacityResponseOutput struct{ *pulumi.OutputState }

func (StampCapacityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StampCapacityResponse)(nil)).Elem()
}

func (o StampCapacityResponseOutput) ToStampCapacityResponseOutput() StampCapacityResponseOutput {
	return o
}

func (o StampCapacityResponseOutput) ToStampCapacityResponseOutputWithContext(ctx context.Context) StampCapacityResponseOutput {
	return o
}

// Available capacity (# of machines, bytes of storage etc...).
func (o StampCapacityResponseOutput) AvailableCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *int { return v.AvailableCapacity }).(pulumi.IntPtrOutput)
}

// Shared/dedicated workers.
func (o StampCapacityResponseOutput) ComputeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *string { return v.ComputeMode }).(pulumi.StringPtrOutput)
}

// If <code>true</code>, it includes basic apps.
// Basic apps are not used for capacity allocation.
func (o StampCapacityResponseOutput) ExcludeFromCapacityAllocation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *bool { return v.ExcludeFromCapacityAllocation }).(pulumi.BoolPtrOutput)
}

// <code>true</code> if capacity is applicable for all apps; otherwise, <code>false</code>.
func (o StampCapacityResponseOutput) IsApplicableForAllComputeModes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *bool { return v.IsApplicableForAllComputeModes }).(pulumi.BoolPtrOutput)
}

// Is this a linux stamp capacity
func (o StampCapacityResponseOutput) IsLinux() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *bool { return v.IsLinux }).(pulumi.BoolPtrOutput)
}

// Name of the stamp.
func (o StampCapacityResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Shared or Dedicated.
func (o StampCapacityResponseOutput) SiteMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *string { return v.SiteMode }).(pulumi.StringPtrOutput)
}

// Total capacity (# of machines, bytes of storage etc...).
func (o StampCapacityResponseOutput) TotalCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *int { return v.TotalCapacity }).(pulumi.IntPtrOutput)
}

// Name of the unit.
func (o StampCapacityResponseOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

// Size of the machines.
func (o StampCapacityResponseOutput) WorkerSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *string { return v.WorkerSize }).(pulumi.StringPtrOutput)
}

// Size ID of machines:
// 0 - Small
// 1 - Medium
// 2 - Large
func (o StampCapacityResponseOutput) WorkerSizeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *int { return v.WorkerSizeId }).(pulumi.IntPtrOutput)
}

type StampCapacityResponseArrayOutput struct{ *pulumi.OutputState }

func (StampCapacityResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StampCapacityResponse)(nil)).Elem()
}

func (o StampCapacityResponseArrayOutput) ToStampCapacityResponseArrayOutput() StampCapacityResponseArrayOutput {
	return o
}

func (o StampCapacityResponseArrayOutput) ToStampCapacityResponseArrayOutputWithContext(ctx context.Context) StampCapacityResponseArrayOutput {
	return o
}

func (o StampCapacityResponseArrayOutput) Index(i pulumi.IntInput) StampCapacityResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StampCapacityResponse {
		return vs[0].([]StampCapacityResponse)[vs[1].(int)]
	}).(StampCapacityResponseOutput)
}

// Trigger based on status code.
type StatusCodesBasedTrigger struct {
	// Request Count.
	Count *int `pulumi:"count"`
	// HTTP status code.
	Status *int `pulumi:"status"`
	// Request Sub Status.
	SubStatus *int `pulumi:"subStatus"`
	// Time interval.
	TimeInterval *string `pulumi:"timeInterval"`
	// Win32 error code.
	Win32Status *int `pulumi:"win32Status"`
}

// StatusCodesBasedTriggerInput is an input type that accepts StatusCodesBasedTriggerArgs and StatusCodesBasedTriggerOutput values.
// You can construct a concrete instance of `StatusCodesBasedTriggerInput` via:
//
//          StatusCodesBasedTriggerArgs{...}
type StatusCodesBasedTriggerInput interface {
	pulumi.Input

	ToStatusCodesBasedTriggerOutput() StatusCodesBasedTriggerOutput
	ToStatusCodesBasedTriggerOutputWithContext(context.Context) StatusCodesBasedTriggerOutput
}

// Trigger based on status code.
type StatusCodesBasedTriggerArgs struct {
	// Request Count.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// HTTP status code.
	Status pulumi.IntPtrInput `pulumi:"status"`
	// Request Sub Status.
	SubStatus pulumi.IntPtrInput `pulumi:"subStatus"`
	// Time interval.
	TimeInterval pulumi.StringPtrInput `pulumi:"timeInterval"`
	// Win32 error code.
	Win32Status pulumi.IntPtrInput `pulumi:"win32Status"`
}

func (StatusCodesBasedTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusCodesBasedTrigger)(nil)).Elem()
}

func (i StatusCodesBasedTriggerArgs) ToStatusCodesBasedTriggerOutput() StatusCodesBasedTriggerOutput {
	return i.ToStatusCodesBasedTriggerOutputWithContext(context.Background())
}

func (i StatusCodesBasedTriggerArgs) ToStatusCodesBasedTriggerOutputWithContext(ctx context.Context) StatusCodesBasedTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusCodesBasedTriggerOutput)
}

// StatusCodesBasedTriggerArrayInput is an input type that accepts StatusCodesBasedTriggerArray and StatusCodesBasedTriggerArrayOutput values.
// You can construct a concrete instance of `StatusCodesBasedTriggerArrayInput` via:
//
//          StatusCodesBasedTriggerArray{ StatusCodesBasedTriggerArgs{...} }
type StatusCodesBasedTriggerArrayInput interface {
	pulumi.Input

	ToStatusCodesBasedTriggerArrayOutput() StatusCodesBasedTriggerArrayOutput
	ToStatusCodesBasedTriggerArrayOutputWithContext(context.Context) StatusCodesBasedTriggerArrayOutput
}

type StatusCodesBasedTriggerArray []StatusCodesBasedTriggerInput

func (StatusCodesBasedTriggerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StatusCodesBasedTrigger)(nil)).Elem()
}

func (i StatusCodesBasedTriggerArray) ToStatusCodesBasedTriggerArrayOutput() StatusCodesBasedTriggerArrayOutput {
	return i.ToStatusCodesBasedTriggerArrayOutputWithContext(context.Background())
}

func (i StatusCodesBasedTriggerArray) ToStatusCodesBasedTriggerArrayOutputWithContext(ctx context.Context) StatusCodesBasedTriggerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusCodesBasedTriggerArrayOutput)
}

// Trigger based on status code.
type StatusCodesBasedTriggerOutput struct{ *pulumi.OutputState }

func (StatusCodesBasedTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusCodesBasedTrigger)(nil)).Elem()
}

func (o StatusCodesBasedTriggerOutput) ToStatusCodesBasedTriggerOutput() StatusCodesBasedTriggerOutput {
	return o
}

func (o StatusCodesBasedTriggerOutput) ToStatusCodesBasedTriggerOutputWithContext(ctx context.Context) StatusCodesBasedTriggerOutput {
	return o
}

// Request Count.
func (o StatusCodesBasedTriggerOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTrigger) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// HTTP status code.
func (o StatusCodesBasedTriggerOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTrigger) *int { return v.Status }).(pulumi.IntPtrOutput)
}

// Request Sub Status.
func (o StatusCodesBasedTriggerOutput) SubStatus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTrigger) *int { return v.SubStatus }).(pulumi.IntPtrOutput)
}

// Time interval.
func (o StatusCodesBasedTriggerOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTrigger) *string { return v.TimeInterval }).(pulumi.StringPtrOutput)
}

// Win32 error code.
func (o StatusCodesBasedTriggerOutput) Win32Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTrigger) *int { return v.Win32Status }).(pulumi.IntPtrOutput)
}

type StatusCodesBasedTriggerArrayOutput struct{ *pulumi.OutputState }

func (StatusCodesBasedTriggerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StatusCodesBasedTrigger)(nil)).Elem()
}

func (o StatusCodesBasedTriggerArrayOutput) ToStatusCodesBasedTriggerArrayOutput() StatusCodesBasedTriggerArrayOutput {
	return o
}

func (o StatusCodesBasedTriggerArrayOutput) ToStatusCodesBasedTriggerArrayOutputWithContext(ctx context.Context) StatusCodesBasedTriggerArrayOutput {
	return o
}

func (o StatusCodesBasedTriggerArrayOutput) Index(i pulumi.IntInput) StatusCodesBasedTriggerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StatusCodesBasedTrigger {
		return vs[0].([]StatusCodesBasedTrigger)[vs[1].(int)]
	}).(StatusCodesBasedTriggerOutput)
}

// Trigger based on status code.
type StatusCodesBasedTriggerResponse struct {
	// Request Count.
	Count *int `pulumi:"count"`
	// HTTP status code.
	Status *int `pulumi:"status"`
	// Request Sub Status.
	SubStatus *int `pulumi:"subStatus"`
	// Time interval.
	TimeInterval *string `pulumi:"timeInterval"`
	// Win32 error code.
	Win32Status *int `pulumi:"win32Status"`
}

// StatusCodesBasedTriggerResponseInput is an input type that accepts StatusCodesBasedTriggerResponseArgs and StatusCodesBasedTriggerResponseOutput values.
// You can construct a concrete instance of `StatusCodesBasedTriggerResponseInput` via:
//
//          StatusCodesBasedTriggerResponseArgs{...}
type StatusCodesBasedTriggerResponseInput interface {
	pulumi.Input

	ToStatusCodesBasedTriggerResponseOutput() StatusCodesBasedTriggerResponseOutput
	ToStatusCodesBasedTriggerResponseOutputWithContext(context.Context) StatusCodesBasedTriggerResponseOutput
}

// Trigger based on status code.
type StatusCodesBasedTriggerResponseArgs struct {
	// Request Count.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// HTTP status code.
	Status pulumi.IntPtrInput `pulumi:"status"`
	// Request Sub Status.
	SubStatus pulumi.IntPtrInput `pulumi:"subStatus"`
	// Time interval.
	TimeInterval pulumi.StringPtrInput `pulumi:"timeInterval"`
	// Win32 error code.
	Win32Status pulumi.IntPtrInput `pulumi:"win32Status"`
}

func (StatusCodesBasedTriggerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusCodesBasedTriggerResponse)(nil)).Elem()
}

func (i StatusCodesBasedTriggerResponseArgs) ToStatusCodesBasedTriggerResponseOutput() StatusCodesBasedTriggerResponseOutput {
	return i.ToStatusCodesBasedTriggerResponseOutputWithContext(context.Background())
}

func (i StatusCodesBasedTriggerResponseArgs) ToStatusCodesBasedTriggerResponseOutputWithContext(ctx context.Context) StatusCodesBasedTriggerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusCodesBasedTriggerResponseOutput)
}

// StatusCodesBasedTriggerResponseArrayInput is an input type that accepts StatusCodesBasedTriggerResponseArray and StatusCodesBasedTriggerResponseArrayOutput values.
// You can construct a concrete instance of `StatusCodesBasedTriggerResponseArrayInput` via:
//
//          StatusCodesBasedTriggerResponseArray{ StatusCodesBasedTriggerResponseArgs{...} }
type StatusCodesBasedTriggerResponseArrayInput interface {
	pulumi.Input

	ToStatusCodesBasedTriggerResponseArrayOutput() StatusCodesBasedTriggerResponseArrayOutput
	ToStatusCodesBasedTriggerResponseArrayOutputWithContext(context.Context) StatusCodesBasedTriggerResponseArrayOutput
}

type StatusCodesBasedTriggerResponseArray []StatusCodesBasedTriggerResponseInput

func (StatusCodesBasedTriggerResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StatusCodesBasedTriggerResponse)(nil)).Elem()
}

func (i StatusCodesBasedTriggerResponseArray) ToStatusCodesBasedTriggerResponseArrayOutput() StatusCodesBasedTriggerResponseArrayOutput {
	return i.ToStatusCodesBasedTriggerResponseArrayOutputWithContext(context.Background())
}

func (i StatusCodesBasedTriggerResponseArray) ToStatusCodesBasedTriggerResponseArrayOutputWithContext(ctx context.Context) StatusCodesBasedTriggerResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusCodesBasedTriggerResponseArrayOutput)
}

// Trigger based on status code.
type StatusCodesBasedTriggerResponseOutput struct{ *pulumi.OutputState }

func (StatusCodesBasedTriggerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusCodesBasedTriggerResponse)(nil)).Elem()
}

func (o StatusCodesBasedTriggerResponseOutput) ToStatusCodesBasedTriggerResponseOutput() StatusCodesBasedTriggerResponseOutput {
	return o
}

func (o StatusCodesBasedTriggerResponseOutput) ToStatusCodesBasedTriggerResponseOutputWithContext(ctx context.Context) StatusCodesBasedTriggerResponseOutput {
	return o
}

// Request Count.
func (o StatusCodesBasedTriggerResponseOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTriggerResponse) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// HTTP status code.
func (o StatusCodesBasedTriggerResponseOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTriggerResponse) *int { return v.Status }).(pulumi.IntPtrOutput)
}

// Request Sub Status.
func (o StatusCodesBasedTriggerResponseOutput) SubStatus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTriggerResponse) *int { return v.SubStatus }).(pulumi.IntPtrOutput)
}

// Time interval.
func (o StatusCodesBasedTriggerResponseOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTriggerResponse) *string { return v.TimeInterval }).(pulumi.StringPtrOutput)
}

// Win32 error code.
func (o StatusCodesBasedTriggerResponseOutput) Win32Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTriggerResponse) *int { return v.Win32Status }).(pulumi.IntPtrOutput)
}

type StatusCodesBasedTriggerResponseArrayOutput struct{ *pulumi.OutputState }

func (StatusCodesBasedTriggerResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StatusCodesBasedTriggerResponse)(nil)).Elem()
}

func (o StatusCodesBasedTriggerResponseArrayOutput) ToStatusCodesBasedTriggerResponseArrayOutput() StatusCodesBasedTriggerResponseArrayOutput {
	return o
}

func (o StatusCodesBasedTriggerResponseArrayOutput) ToStatusCodesBasedTriggerResponseArrayOutputWithContext(ctx context.Context) StatusCodesBasedTriggerResponseArrayOutput {
	return o
}

func (o StatusCodesBasedTriggerResponseArrayOutput) Index(i pulumi.IntInput) StatusCodesBasedTriggerResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StatusCodesBasedTriggerResponse {
		return vs[0].([]StatusCodesBasedTriggerResponse)[vs[1].(int)]
	}).(StatusCodesBasedTriggerResponseOutput)
}

// SwiftVirtualNetwork resource specific properties
type SwiftVirtualNetworkResponseProperties struct {
	// The Virtual Network subnet's resource ID. This is the subnet that this Web App will join. This subnet must have a delegation to Microsoft.Web/serverFarms defined first.
	SubnetResourceId *string `pulumi:"subnetResourceId"`
	// A flag that specifies if the scale unit this Web App is on supports Swift integration.
	SwiftSupported *bool `pulumi:"swiftSupported"`
}

// SwiftVirtualNetworkResponsePropertiesInput is an input type that accepts SwiftVirtualNetworkResponsePropertiesArgs and SwiftVirtualNetworkResponsePropertiesOutput values.
// You can construct a concrete instance of `SwiftVirtualNetworkResponsePropertiesInput` via:
//
//          SwiftVirtualNetworkResponsePropertiesArgs{...}
type SwiftVirtualNetworkResponsePropertiesInput interface {
	pulumi.Input

	ToSwiftVirtualNetworkResponsePropertiesOutput() SwiftVirtualNetworkResponsePropertiesOutput
	ToSwiftVirtualNetworkResponsePropertiesOutputWithContext(context.Context) SwiftVirtualNetworkResponsePropertiesOutput
}

// SwiftVirtualNetwork resource specific properties
type SwiftVirtualNetworkResponsePropertiesArgs struct {
	// The Virtual Network subnet's resource ID. This is the subnet that this Web App will join. This subnet must have a delegation to Microsoft.Web/serverFarms defined first.
	SubnetResourceId pulumi.StringPtrInput `pulumi:"subnetResourceId"`
	// A flag that specifies if the scale unit this Web App is on supports Swift integration.
	SwiftSupported pulumi.BoolPtrInput `pulumi:"swiftSupported"`
}

func (SwiftVirtualNetworkResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwiftVirtualNetworkResponseProperties)(nil)).Elem()
}

func (i SwiftVirtualNetworkResponsePropertiesArgs) ToSwiftVirtualNetworkResponsePropertiesOutput() SwiftVirtualNetworkResponsePropertiesOutput {
	return i.ToSwiftVirtualNetworkResponsePropertiesOutputWithContext(context.Background())
}

func (i SwiftVirtualNetworkResponsePropertiesArgs) ToSwiftVirtualNetworkResponsePropertiesOutputWithContext(ctx context.Context) SwiftVirtualNetworkResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwiftVirtualNetworkResponsePropertiesOutput)
}

func (i SwiftVirtualNetworkResponsePropertiesArgs) ToSwiftVirtualNetworkResponsePropertiesPtrOutput() SwiftVirtualNetworkResponsePropertiesPtrOutput {
	return i.ToSwiftVirtualNetworkResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i SwiftVirtualNetworkResponsePropertiesArgs) ToSwiftVirtualNetworkResponsePropertiesPtrOutputWithContext(ctx context.Context) SwiftVirtualNetworkResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwiftVirtualNetworkResponsePropertiesOutput).ToSwiftVirtualNetworkResponsePropertiesPtrOutputWithContext(ctx)
}

// SwiftVirtualNetworkResponsePropertiesPtrInput is an input type that accepts SwiftVirtualNetworkResponsePropertiesArgs, SwiftVirtualNetworkResponsePropertiesPtr and SwiftVirtualNetworkResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `SwiftVirtualNetworkResponsePropertiesPtrInput` via:
//
//          SwiftVirtualNetworkResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type SwiftVirtualNetworkResponsePropertiesPtrInput interface {
	pulumi.Input

	ToSwiftVirtualNetworkResponsePropertiesPtrOutput() SwiftVirtualNetworkResponsePropertiesPtrOutput
	ToSwiftVirtualNetworkResponsePropertiesPtrOutputWithContext(context.Context) SwiftVirtualNetworkResponsePropertiesPtrOutput
}

type swiftVirtualNetworkResponsePropertiesPtrType SwiftVirtualNetworkResponsePropertiesArgs

func SwiftVirtualNetworkResponsePropertiesPtr(v *SwiftVirtualNetworkResponsePropertiesArgs) SwiftVirtualNetworkResponsePropertiesPtrInput {
	return (*swiftVirtualNetworkResponsePropertiesPtrType)(v)
}

func (*swiftVirtualNetworkResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwiftVirtualNetworkResponseProperties)(nil)).Elem()
}

func (i *swiftVirtualNetworkResponsePropertiesPtrType) ToSwiftVirtualNetworkResponsePropertiesPtrOutput() SwiftVirtualNetworkResponsePropertiesPtrOutput {
	return i.ToSwiftVirtualNetworkResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *swiftVirtualNetworkResponsePropertiesPtrType) ToSwiftVirtualNetworkResponsePropertiesPtrOutputWithContext(ctx context.Context) SwiftVirtualNetworkResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwiftVirtualNetworkResponsePropertiesPtrOutput)
}

// SwiftVirtualNetwork resource specific properties
type SwiftVirtualNetworkResponsePropertiesOutput struct{ *pulumi.OutputState }

func (SwiftVirtualNetworkResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwiftVirtualNetworkResponseProperties)(nil)).Elem()
}

func (o SwiftVirtualNetworkResponsePropertiesOutput) ToSwiftVirtualNetworkResponsePropertiesOutput() SwiftVirtualNetworkResponsePropertiesOutput {
	return o
}

func (o SwiftVirtualNetworkResponsePropertiesOutput) ToSwiftVirtualNetworkResponsePropertiesOutputWithContext(ctx context.Context) SwiftVirtualNetworkResponsePropertiesOutput {
	return o
}

func (o SwiftVirtualNetworkResponsePropertiesOutput) ToSwiftVirtualNetworkResponsePropertiesPtrOutput() SwiftVirtualNetworkResponsePropertiesPtrOutput {
	return o.ToSwiftVirtualNetworkResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o SwiftVirtualNetworkResponsePropertiesOutput) ToSwiftVirtualNetworkResponsePropertiesPtrOutputWithContext(ctx context.Context) SwiftVirtualNetworkResponsePropertiesPtrOutput {
	return o.ApplyT(func(v SwiftVirtualNetworkResponseProperties) *SwiftVirtualNetworkResponseProperties {
		return &v
	}).(SwiftVirtualNetworkResponsePropertiesPtrOutput)
}

// The Virtual Network subnet's resource ID. This is the subnet that this Web App will join. This subnet must have a delegation to Microsoft.Web/serverFarms defined first.
func (o SwiftVirtualNetworkResponsePropertiesOutput) SubnetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwiftVirtualNetworkResponseProperties) *string { return v.SubnetResourceId }).(pulumi.StringPtrOutput)
}

// A flag that specifies if the scale unit this Web App is on supports Swift integration.
func (o SwiftVirtualNetworkResponsePropertiesOutput) SwiftSupported() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwiftVirtualNetworkResponseProperties) *bool { return v.SwiftSupported }).(pulumi.BoolPtrOutput)
}

type SwiftVirtualNetworkResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (SwiftVirtualNetworkResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwiftVirtualNetworkResponseProperties)(nil)).Elem()
}

func (o SwiftVirtualNetworkResponsePropertiesPtrOutput) ToSwiftVirtualNetworkResponsePropertiesPtrOutput() SwiftVirtualNetworkResponsePropertiesPtrOutput {
	return o
}

func (o SwiftVirtualNetworkResponsePropertiesPtrOutput) ToSwiftVirtualNetworkResponsePropertiesPtrOutputWithContext(ctx context.Context) SwiftVirtualNetworkResponsePropertiesPtrOutput {
	return o
}

func (o SwiftVirtualNetworkResponsePropertiesPtrOutput) Elem() SwiftVirtualNetworkResponsePropertiesOutput {
	return o.ApplyT(func(v *SwiftVirtualNetworkResponseProperties) SwiftVirtualNetworkResponseProperties { return *v }).(SwiftVirtualNetworkResponsePropertiesOutput)
}

// The Virtual Network subnet's resource ID. This is the subnet that this Web App will join. This subnet must have a delegation to Microsoft.Web/serverFarms defined first.
func (o SwiftVirtualNetworkResponsePropertiesPtrOutput) SubnetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwiftVirtualNetworkResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.SubnetResourceId
	}).(pulumi.StringPtrOutput)
}

// A flag that specifies if the scale unit this Web App is on supports Swift integration.
func (o SwiftVirtualNetworkResponsePropertiesPtrOutput) SwiftSupported() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SwiftVirtualNetworkResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.SwiftSupported
	}).(pulumi.BoolPtrOutput)
}

// User resource specific properties
type UserResponseProperties struct {
	// Password used for publishing.
	PublishingPassword *string `pulumi:"publishingPassword"`
	// Password hash used for publishing.
	PublishingPasswordHash *string `pulumi:"publishingPasswordHash"`
	// Password hash salt used for publishing.
	PublishingPasswordHashSalt *string `pulumi:"publishingPasswordHashSalt"`
	// Username used for publishing.
	PublishingUserName string `pulumi:"publishingUserName"`
	// Url of SCM site.
	ScmUri *string `pulumi:"scmUri"`
}

// UserResponsePropertiesInput is an input type that accepts UserResponsePropertiesArgs and UserResponsePropertiesOutput values.
// You can construct a concrete instance of `UserResponsePropertiesInput` via:
//
//          UserResponsePropertiesArgs{...}
type UserResponsePropertiesInput interface {
	pulumi.Input

	ToUserResponsePropertiesOutput() UserResponsePropertiesOutput
	ToUserResponsePropertiesOutputWithContext(context.Context) UserResponsePropertiesOutput
}

// User resource specific properties
type UserResponsePropertiesArgs struct {
	// Password used for publishing.
	PublishingPassword pulumi.StringPtrInput `pulumi:"publishingPassword"`
	// Password hash used for publishing.
	PublishingPasswordHash pulumi.StringPtrInput `pulumi:"publishingPasswordHash"`
	// Password hash salt used for publishing.
	PublishingPasswordHashSalt pulumi.StringPtrInput `pulumi:"publishingPasswordHashSalt"`
	// Username used for publishing.
	PublishingUserName pulumi.StringInput `pulumi:"publishingUserName"`
	// Url of SCM site.
	ScmUri pulumi.StringPtrInput `pulumi:"scmUri"`
}

func (UserResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserResponseProperties)(nil)).Elem()
}

func (i UserResponsePropertiesArgs) ToUserResponsePropertiesOutput() UserResponsePropertiesOutput {
	return i.ToUserResponsePropertiesOutputWithContext(context.Background())
}

func (i UserResponsePropertiesArgs) ToUserResponsePropertiesOutputWithContext(ctx context.Context) UserResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserResponsePropertiesOutput)
}

// User resource specific properties
type UserResponsePropertiesOutput struct{ *pulumi.OutputState }

func (UserResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserResponseProperties)(nil)).Elem()
}

func (o UserResponsePropertiesOutput) ToUserResponsePropertiesOutput() UserResponsePropertiesOutput {
	return o
}

func (o UserResponsePropertiesOutput) ToUserResponsePropertiesOutputWithContext(ctx context.Context) UserResponsePropertiesOutput {
	return o
}

// Password used for publishing.
func (o UserResponsePropertiesOutput) PublishingPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserResponseProperties) *string { return v.PublishingPassword }).(pulumi.StringPtrOutput)
}

// Password hash used for publishing.
func (o UserResponsePropertiesOutput) PublishingPasswordHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserResponseProperties) *string { return v.PublishingPasswordHash }).(pulumi.StringPtrOutput)
}

// Password hash salt used for publishing.
func (o UserResponsePropertiesOutput) PublishingPasswordHashSalt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserResponseProperties) *string { return v.PublishingPasswordHashSalt }).(pulumi.StringPtrOutput)
}

// Username used for publishing.
func (o UserResponsePropertiesOutput) PublishingUserName() pulumi.StringOutput {
	return o.ApplyT(func(v UserResponseProperties) string { return v.PublishingUserName }).(pulumi.StringOutput)
}

// Url of SCM site.
func (o UserResponsePropertiesOutput) ScmUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserResponseProperties) *string { return v.ScmUri }).(pulumi.StringPtrOutput)
}

// Virtual application in an app.
type VirtualApplication struct {
	// Physical path.
	PhysicalPath *string `pulumi:"physicalPath"`
	// <code>true</code> if preloading is enabled; otherwise, <code>false</code>.
	PreloadEnabled *bool `pulumi:"preloadEnabled"`
	// Virtual directories for virtual application.
	VirtualDirectories []VirtualDirectory `pulumi:"virtualDirectories"`
	// Virtual path.
	VirtualPath *string `pulumi:"virtualPath"`
}

// VirtualApplicationInput is an input type that accepts VirtualApplicationArgs and VirtualApplicationOutput values.
// You can construct a concrete instance of `VirtualApplicationInput` via:
//
//          VirtualApplicationArgs{...}
type VirtualApplicationInput interface {
	pulumi.Input

	ToVirtualApplicationOutput() VirtualApplicationOutput
	ToVirtualApplicationOutputWithContext(context.Context) VirtualApplicationOutput
}

// Virtual application in an app.
type VirtualApplicationArgs struct {
	// Physical path.
	PhysicalPath pulumi.StringPtrInput `pulumi:"physicalPath"`
	// <code>true</code> if preloading is enabled; otherwise, <code>false</code>.
	PreloadEnabled pulumi.BoolPtrInput `pulumi:"preloadEnabled"`
	// Virtual directories for virtual application.
	VirtualDirectories VirtualDirectoryArrayInput `pulumi:"virtualDirectories"`
	// Virtual path.
	VirtualPath pulumi.StringPtrInput `pulumi:"virtualPath"`
}

func (VirtualApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplication)(nil)).Elem()
}

func (i VirtualApplicationArgs) ToVirtualApplicationOutput() VirtualApplicationOutput {
	return i.ToVirtualApplicationOutputWithContext(context.Background())
}

func (i VirtualApplicationArgs) ToVirtualApplicationOutputWithContext(ctx context.Context) VirtualApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplicationOutput)
}

// VirtualApplicationArrayInput is an input type that accepts VirtualApplicationArray and VirtualApplicationArrayOutput values.
// You can construct a concrete instance of `VirtualApplicationArrayInput` via:
//
//          VirtualApplicationArray{ VirtualApplicationArgs{...} }
type VirtualApplicationArrayInput interface {
	pulumi.Input

	ToVirtualApplicationArrayOutput() VirtualApplicationArrayOutput
	ToVirtualApplicationArrayOutputWithContext(context.Context) VirtualApplicationArrayOutput
}

type VirtualApplicationArray []VirtualApplicationInput

func (VirtualApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualApplication)(nil)).Elem()
}

func (i VirtualApplicationArray) ToVirtualApplicationArrayOutput() VirtualApplicationArrayOutput {
	return i.ToVirtualApplicationArrayOutputWithContext(context.Background())
}

func (i VirtualApplicationArray) ToVirtualApplicationArrayOutputWithContext(ctx context.Context) VirtualApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplicationArrayOutput)
}

// Virtual application in an app.
type VirtualApplicationOutput struct{ *pulumi.OutputState }

func (VirtualApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplication)(nil)).Elem()
}

func (o VirtualApplicationOutput) ToVirtualApplicationOutput() VirtualApplicationOutput {
	return o
}

func (o VirtualApplicationOutput) ToVirtualApplicationOutputWithContext(ctx context.Context) VirtualApplicationOutput {
	return o
}

// Physical path.
func (o VirtualApplicationOutput) PhysicalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplication) *string { return v.PhysicalPath }).(pulumi.StringPtrOutput)
}

// <code>true</code> if preloading is enabled; otherwise, <code>false</code>.
func (o VirtualApplicationOutput) PreloadEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualApplication) *bool { return v.PreloadEnabled }).(pulumi.BoolPtrOutput)
}

// Virtual directories for virtual application.
func (o VirtualApplicationOutput) VirtualDirectories() VirtualDirectoryArrayOutput {
	return o.ApplyT(func(v VirtualApplication) []VirtualDirectory { return v.VirtualDirectories }).(VirtualDirectoryArrayOutput)
}

// Virtual path.
func (o VirtualApplicationOutput) VirtualPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplication) *string { return v.VirtualPath }).(pulumi.StringPtrOutput)
}

type VirtualApplicationArrayOutput struct{ *pulumi.OutputState }

func (VirtualApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualApplication)(nil)).Elem()
}

func (o VirtualApplicationArrayOutput) ToVirtualApplicationArrayOutput() VirtualApplicationArrayOutput {
	return o
}

func (o VirtualApplicationArrayOutput) ToVirtualApplicationArrayOutputWithContext(ctx context.Context) VirtualApplicationArrayOutput {
	return o
}

func (o VirtualApplicationArrayOutput) Index(i pulumi.IntInput) VirtualApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualApplication {
		return vs[0].([]VirtualApplication)[vs[1].(int)]
	}).(VirtualApplicationOutput)
}

// Virtual application in an app.
type VirtualApplicationResponse struct {
	// Physical path.
	PhysicalPath *string `pulumi:"physicalPath"`
	// <code>true</code> if preloading is enabled; otherwise, <code>false</code>.
	PreloadEnabled *bool `pulumi:"preloadEnabled"`
	// Virtual directories for virtual application.
	VirtualDirectories []VirtualDirectoryResponse `pulumi:"virtualDirectories"`
	// Virtual path.
	VirtualPath *string `pulumi:"virtualPath"`
}

// VirtualApplicationResponseInput is an input type that accepts VirtualApplicationResponseArgs and VirtualApplicationResponseOutput values.
// You can construct a concrete instance of `VirtualApplicationResponseInput` via:
//
//          VirtualApplicationResponseArgs{...}
type VirtualApplicationResponseInput interface {
	pulumi.Input

	ToVirtualApplicationResponseOutput() VirtualApplicationResponseOutput
	ToVirtualApplicationResponseOutputWithContext(context.Context) VirtualApplicationResponseOutput
}

// Virtual application in an app.
type VirtualApplicationResponseArgs struct {
	// Physical path.
	PhysicalPath pulumi.StringPtrInput `pulumi:"physicalPath"`
	// <code>true</code> if preloading is enabled; otherwise, <code>false</code>.
	PreloadEnabled pulumi.BoolPtrInput `pulumi:"preloadEnabled"`
	// Virtual directories for virtual application.
	VirtualDirectories VirtualDirectoryResponseArrayInput `pulumi:"virtualDirectories"`
	// Virtual path.
	VirtualPath pulumi.StringPtrInput `pulumi:"virtualPath"`
}

func (VirtualApplicationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplicationResponse)(nil)).Elem()
}

func (i VirtualApplicationResponseArgs) ToVirtualApplicationResponseOutput() VirtualApplicationResponseOutput {
	return i.ToVirtualApplicationResponseOutputWithContext(context.Background())
}

func (i VirtualApplicationResponseArgs) ToVirtualApplicationResponseOutputWithContext(ctx context.Context) VirtualApplicationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplicationResponseOutput)
}

// VirtualApplicationResponseArrayInput is an input type that accepts VirtualApplicationResponseArray and VirtualApplicationResponseArrayOutput values.
// You can construct a concrete instance of `VirtualApplicationResponseArrayInput` via:
//
//          VirtualApplicationResponseArray{ VirtualApplicationResponseArgs{...} }
type VirtualApplicationResponseArrayInput interface {
	pulumi.Input

	ToVirtualApplicationResponseArrayOutput() VirtualApplicationResponseArrayOutput
	ToVirtualApplicationResponseArrayOutputWithContext(context.Context) VirtualApplicationResponseArrayOutput
}

type VirtualApplicationResponseArray []VirtualApplicationResponseInput

func (VirtualApplicationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualApplicationResponse)(nil)).Elem()
}

func (i VirtualApplicationResponseArray) ToVirtualApplicationResponseArrayOutput() VirtualApplicationResponseArrayOutput {
	return i.ToVirtualApplicationResponseArrayOutputWithContext(context.Background())
}

func (i VirtualApplicationResponseArray) ToVirtualApplicationResponseArrayOutputWithContext(ctx context.Context) VirtualApplicationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplicationResponseArrayOutput)
}

// Virtual application in an app.
type VirtualApplicationResponseOutput struct{ *pulumi.OutputState }

func (VirtualApplicationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplicationResponse)(nil)).Elem()
}

func (o VirtualApplicationResponseOutput) ToVirtualApplicationResponseOutput() VirtualApplicationResponseOutput {
	return o
}

func (o VirtualApplicationResponseOutput) ToVirtualApplicationResponseOutputWithContext(ctx context.Context) VirtualApplicationResponseOutput {
	return o
}

// Physical path.
func (o VirtualApplicationResponseOutput) PhysicalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplicationResponse) *string { return v.PhysicalPath }).(pulumi.StringPtrOutput)
}

// <code>true</code> if preloading is enabled; otherwise, <code>false</code>.
func (o VirtualApplicationResponseOutput) PreloadEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualApplicationResponse) *bool { return v.PreloadEnabled }).(pulumi.BoolPtrOutput)
}

// Virtual directories for virtual application.
func (o VirtualApplicationResponseOutput) VirtualDirectories() VirtualDirectoryResponseArrayOutput {
	return o.ApplyT(func(v VirtualApplicationResponse) []VirtualDirectoryResponse { return v.VirtualDirectories }).(VirtualDirectoryResponseArrayOutput)
}

// Virtual path.
func (o VirtualApplicationResponseOutput) VirtualPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplicationResponse) *string { return v.VirtualPath }).(pulumi.StringPtrOutput)
}

type VirtualApplicationResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualApplicationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualApplicationResponse)(nil)).Elem()
}

func (o VirtualApplicationResponseArrayOutput) ToVirtualApplicationResponseArrayOutput() VirtualApplicationResponseArrayOutput {
	return o
}

func (o VirtualApplicationResponseArrayOutput) ToVirtualApplicationResponseArrayOutputWithContext(ctx context.Context) VirtualApplicationResponseArrayOutput {
	return o
}

func (o VirtualApplicationResponseArrayOutput) Index(i pulumi.IntInput) VirtualApplicationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualApplicationResponse {
		return vs[0].([]VirtualApplicationResponse)[vs[1].(int)]
	}).(VirtualApplicationResponseOutput)
}

// Directory for virtual application.
type VirtualDirectory struct {
	// Physical path.
	PhysicalPath *string `pulumi:"physicalPath"`
	// Path to virtual application.
	VirtualPath *string `pulumi:"virtualPath"`
}

// VirtualDirectoryInput is an input type that accepts VirtualDirectoryArgs and VirtualDirectoryOutput values.
// You can construct a concrete instance of `VirtualDirectoryInput` via:
//
//          VirtualDirectoryArgs{...}
type VirtualDirectoryInput interface {
	pulumi.Input

	ToVirtualDirectoryOutput() VirtualDirectoryOutput
	ToVirtualDirectoryOutputWithContext(context.Context) VirtualDirectoryOutput
}

// Directory for virtual application.
type VirtualDirectoryArgs struct {
	// Physical path.
	PhysicalPath pulumi.StringPtrInput `pulumi:"physicalPath"`
	// Path to virtual application.
	VirtualPath pulumi.StringPtrInput `pulumi:"virtualPath"`
}

func (VirtualDirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualDirectory)(nil)).Elem()
}

func (i VirtualDirectoryArgs) ToVirtualDirectoryOutput() VirtualDirectoryOutput {
	return i.ToVirtualDirectoryOutputWithContext(context.Background())
}

func (i VirtualDirectoryArgs) ToVirtualDirectoryOutputWithContext(ctx context.Context) VirtualDirectoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualDirectoryOutput)
}

// VirtualDirectoryArrayInput is an input type that accepts VirtualDirectoryArray and VirtualDirectoryArrayOutput values.
// You can construct a concrete instance of `VirtualDirectoryArrayInput` via:
//
//          VirtualDirectoryArray{ VirtualDirectoryArgs{...} }
type VirtualDirectoryArrayInput interface {
	pulumi.Input

	ToVirtualDirectoryArrayOutput() VirtualDirectoryArrayOutput
	ToVirtualDirectoryArrayOutputWithContext(context.Context) VirtualDirectoryArrayOutput
}

type VirtualDirectoryArray []VirtualDirectoryInput

func (VirtualDirectoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualDirectory)(nil)).Elem()
}

func (i VirtualDirectoryArray) ToVirtualDirectoryArrayOutput() VirtualDirectoryArrayOutput {
	return i.ToVirtualDirectoryArrayOutputWithContext(context.Background())
}

func (i VirtualDirectoryArray) ToVirtualDirectoryArrayOutputWithContext(ctx context.Context) VirtualDirectoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualDirectoryArrayOutput)
}

// Directory for virtual application.
type VirtualDirectoryOutput struct{ *pulumi.OutputState }

func (VirtualDirectoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualDirectory)(nil)).Elem()
}

func (o VirtualDirectoryOutput) ToVirtualDirectoryOutput() VirtualDirectoryOutput {
	return o
}

func (o VirtualDirectoryOutput) ToVirtualDirectoryOutputWithContext(ctx context.Context) VirtualDirectoryOutput {
	return o
}

// Physical path.
func (o VirtualDirectoryOutput) PhysicalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualDirectory) *string { return v.PhysicalPath }).(pulumi.StringPtrOutput)
}

// Path to virtual application.
func (o VirtualDirectoryOutput) VirtualPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualDirectory) *string { return v.VirtualPath }).(pulumi.StringPtrOutput)
}

type VirtualDirectoryArrayOutput struct{ *pulumi.OutputState }

func (VirtualDirectoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualDirectory)(nil)).Elem()
}

func (o VirtualDirectoryArrayOutput) ToVirtualDirectoryArrayOutput() VirtualDirectoryArrayOutput {
	return o
}

func (o VirtualDirectoryArrayOutput) ToVirtualDirectoryArrayOutputWithContext(ctx context.Context) VirtualDirectoryArrayOutput {
	return o
}

func (o VirtualDirectoryArrayOutput) Index(i pulumi.IntInput) VirtualDirectoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualDirectory {
		return vs[0].([]VirtualDirectory)[vs[1].(int)]
	}).(VirtualDirectoryOutput)
}

// Directory for virtual application.
type VirtualDirectoryResponse struct {
	// Physical path.
	PhysicalPath *string `pulumi:"physicalPath"`
	// Path to virtual application.
	VirtualPath *string `pulumi:"virtualPath"`
}

// VirtualDirectoryResponseInput is an input type that accepts VirtualDirectoryResponseArgs and VirtualDirectoryResponseOutput values.
// You can construct a concrete instance of `VirtualDirectoryResponseInput` via:
//
//          VirtualDirectoryResponseArgs{...}
type VirtualDirectoryResponseInput interface {
	pulumi.Input

	ToVirtualDirectoryResponseOutput() VirtualDirectoryResponseOutput
	ToVirtualDirectoryResponseOutputWithContext(context.Context) VirtualDirectoryResponseOutput
}

// Directory for virtual application.
type VirtualDirectoryResponseArgs struct {
	// Physical path.
	PhysicalPath pulumi.StringPtrInput `pulumi:"physicalPath"`
	// Path to virtual application.
	VirtualPath pulumi.StringPtrInput `pulumi:"virtualPath"`
}

func (VirtualDirectoryResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualDirectoryResponse)(nil)).Elem()
}

func (i VirtualDirectoryResponseArgs) ToVirtualDirectoryResponseOutput() VirtualDirectoryResponseOutput {
	return i.ToVirtualDirectoryResponseOutputWithContext(context.Background())
}

func (i VirtualDirectoryResponseArgs) ToVirtualDirectoryResponseOutputWithContext(ctx context.Context) VirtualDirectoryResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualDirectoryResponseOutput)
}

// VirtualDirectoryResponseArrayInput is an input type that accepts VirtualDirectoryResponseArray and VirtualDirectoryResponseArrayOutput values.
// You can construct a concrete instance of `VirtualDirectoryResponseArrayInput` via:
//
//          VirtualDirectoryResponseArray{ VirtualDirectoryResponseArgs{...} }
type VirtualDirectoryResponseArrayInput interface {
	pulumi.Input

	ToVirtualDirectoryResponseArrayOutput() VirtualDirectoryResponseArrayOutput
	ToVirtualDirectoryResponseArrayOutputWithContext(context.Context) VirtualDirectoryResponseArrayOutput
}

type VirtualDirectoryResponseArray []VirtualDirectoryResponseInput

func (VirtualDirectoryResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualDirectoryResponse)(nil)).Elem()
}

func (i VirtualDirectoryResponseArray) ToVirtualDirectoryResponseArrayOutput() VirtualDirectoryResponseArrayOutput {
	return i.ToVirtualDirectoryResponseArrayOutputWithContext(context.Background())
}

func (i VirtualDirectoryResponseArray) ToVirtualDirectoryResponseArrayOutputWithContext(ctx context.Context) VirtualDirectoryResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualDirectoryResponseArrayOutput)
}

// Directory for virtual application.
type VirtualDirectoryResponseOutput struct{ *pulumi.OutputState }

func (VirtualDirectoryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualDirectoryResponse)(nil)).Elem()
}

func (o VirtualDirectoryResponseOutput) ToVirtualDirectoryResponseOutput() VirtualDirectoryResponseOutput {
	return o
}

func (o VirtualDirectoryResponseOutput) ToVirtualDirectoryResponseOutputWithContext(ctx context.Context) VirtualDirectoryResponseOutput {
	return o
}

// Physical path.
func (o VirtualDirectoryResponseOutput) PhysicalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualDirectoryResponse) *string { return v.PhysicalPath }).(pulumi.StringPtrOutput)
}

// Path to virtual application.
func (o VirtualDirectoryResponseOutput) VirtualPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualDirectoryResponse) *string { return v.VirtualPath }).(pulumi.StringPtrOutput)
}

type VirtualDirectoryResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualDirectoryResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualDirectoryResponse)(nil)).Elem()
}

func (o VirtualDirectoryResponseArrayOutput) ToVirtualDirectoryResponseArrayOutput() VirtualDirectoryResponseArrayOutput {
	return o
}

func (o VirtualDirectoryResponseArrayOutput) ToVirtualDirectoryResponseArrayOutputWithContext(ctx context.Context) VirtualDirectoryResponseArrayOutput {
	return o
}

func (o VirtualDirectoryResponseArrayOutput) Index(i pulumi.IntInput) VirtualDirectoryResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualDirectoryResponse {
		return vs[0].([]VirtualDirectoryResponse)[vs[1].(int)]
	}).(VirtualDirectoryResponseOutput)
}

// Virtual IP mapping.
type VirtualIPMapping struct {
	// Is virtual IP mapping in use.
	InUse *bool `pulumi:"inUse"`
	// Internal HTTP port.
	InternalHttpPort *int `pulumi:"internalHttpPort"`
	// Internal HTTPS port.
	InternalHttpsPort *int `pulumi:"internalHttpsPort"`
	// Virtual IP address.
	VirtualIP *string `pulumi:"virtualIP"`
}

// VirtualIPMappingInput is an input type that accepts VirtualIPMappingArgs and VirtualIPMappingOutput values.
// You can construct a concrete instance of `VirtualIPMappingInput` via:
//
//          VirtualIPMappingArgs{...}
type VirtualIPMappingInput interface {
	pulumi.Input

	ToVirtualIPMappingOutput() VirtualIPMappingOutput
	ToVirtualIPMappingOutputWithContext(context.Context) VirtualIPMappingOutput
}

// Virtual IP mapping.
type VirtualIPMappingArgs struct {
	// Is virtual IP mapping in use.
	InUse pulumi.BoolPtrInput `pulumi:"inUse"`
	// Internal HTTP port.
	InternalHttpPort pulumi.IntPtrInput `pulumi:"internalHttpPort"`
	// Internal HTTPS port.
	InternalHttpsPort pulumi.IntPtrInput `pulumi:"internalHttpsPort"`
	// Virtual IP address.
	VirtualIP pulumi.StringPtrInput `pulumi:"virtualIP"`
}

func (VirtualIPMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualIPMapping)(nil)).Elem()
}

func (i VirtualIPMappingArgs) ToVirtualIPMappingOutput() VirtualIPMappingOutput {
	return i.ToVirtualIPMappingOutputWithContext(context.Background())
}

func (i VirtualIPMappingArgs) ToVirtualIPMappingOutputWithContext(ctx context.Context) VirtualIPMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualIPMappingOutput)
}

// Virtual IP mapping.
type VirtualIPMappingOutput struct{ *pulumi.OutputState }

func (VirtualIPMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualIPMapping)(nil)).Elem()
}

func (o VirtualIPMappingOutput) ToVirtualIPMappingOutput() VirtualIPMappingOutput {
	return o
}

func (o VirtualIPMappingOutput) ToVirtualIPMappingOutputWithContext(ctx context.Context) VirtualIPMappingOutput {
	return o
}

// Is virtual IP mapping in use.
func (o VirtualIPMappingOutput) InUse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualIPMapping) *bool { return v.InUse }).(pulumi.BoolPtrOutput)
}

// Internal HTTP port.
func (o VirtualIPMappingOutput) InternalHttpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualIPMapping) *int { return v.InternalHttpPort }).(pulumi.IntPtrOutput)
}

// Internal HTTPS port.
func (o VirtualIPMappingOutput) InternalHttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualIPMapping) *int { return v.InternalHttpsPort }).(pulumi.IntPtrOutput)
}

// Virtual IP address.
func (o VirtualIPMappingOutput) VirtualIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualIPMapping) *string { return v.VirtualIP }).(pulumi.StringPtrOutput)
}

// Virtual IP mapping.
type VirtualIPMappingResponse struct {
	// Is virtual IP mapping in use.
	InUse *bool `pulumi:"inUse"`
	// Internal HTTP port.
	InternalHttpPort *int `pulumi:"internalHttpPort"`
	// Internal HTTPS port.
	InternalHttpsPort *int `pulumi:"internalHttpsPort"`
	// Virtual IP address.
	VirtualIP *string `pulumi:"virtualIP"`
}

// VirtualIPMappingResponseInput is an input type that accepts VirtualIPMappingResponseArgs and VirtualIPMappingResponseOutput values.
// You can construct a concrete instance of `VirtualIPMappingResponseInput` via:
//
//          VirtualIPMappingResponseArgs{...}
type VirtualIPMappingResponseInput interface {
	pulumi.Input

	ToVirtualIPMappingResponseOutput() VirtualIPMappingResponseOutput
	ToVirtualIPMappingResponseOutputWithContext(context.Context) VirtualIPMappingResponseOutput
}

// Virtual IP mapping.
type VirtualIPMappingResponseArgs struct {
	// Is virtual IP mapping in use.
	InUse pulumi.BoolPtrInput `pulumi:"inUse"`
	// Internal HTTP port.
	InternalHttpPort pulumi.IntPtrInput `pulumi:"internalHttpPort"`
	// Internal HTTPS port.
	InternalHttpsPort pulumi.IntPtrInput `pulumi:"internalHttpsPort"`
	// Virtual IP address.
	VirtualIP pulumi.StringPtrInput `pulumi:"virtualIP"`
}

func (VirtualIPMappingResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualIPMappingResponse)(nil)).Elem()
}

func (i VirtualIPMappingResponseArgs) ToVirtualIPMappingResponseOutput() VirtualIPMappingResponseOutput {
	return i.ToVirtualIPMappingResponseOutputWithContext(context.Background())
}

func (i VirtualIPMappingResponseArgs) ToVirtualIPMappingResponseOutputWithContext(ctx context.Context) VirtualIPMappingResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualIPMappingResponseOutput)
}

// VirtualIPMappingResponseArrayInput is an input type that accepts VirtualIPMappingResponseArray and VirtualIPMappingResponseArrayOutput values.
// You can construct a concrete instance of `VirtualIPMappingResponseArrayInput` via:
//
//          VirtualIPMappingResponseArray{ VirtualIPMappingResponseArgs{...} }
type VirtualIPMappingResponseArrayInput interface {
	pulumi.Input

	ToVirtualIPMappingResponseArrayOutput() VirtualIPMappingResponseArrayOutput
	ToVirtualIPMappingResponseArrayOutputWithContext(context.Context) VirtualIPMappingResponseArrayOutput
}

type VirtualIPMappingResponseArray []VirtualIPMappingResponseInput

func (VirtualIPMappingResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualIPMappingResponse)(nil)).Elem()
}

func (i VirtualIPMappingResponseArray) ToVirtualIPMappingResponseArrayOutput() VirtualIPMappingResponseArrayOutput {
	return i.ToVirtualIPMappingResponseArrayOutputWithContext(context.Background())
}

func (i VirtualIPMappingResponseArray) ToVirtualIPMappingResponseArrayOutputWithContext(ctx context.Context) VirtualIPMappingResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualIPMappingResponseArrayOutput)
}

// Virtual IP mapping.
type VirtualIPMappingResponseOutput struct{ *pulumi.OutputState }

func (VirtualIPMappingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualIPMappingResponse)(nil)).Elem()
}

func (o VirtualIPMappingResponseOutput) ToVirtualIPMappingResponseOutput() VirtualIPMappingResponseOutput {
	return o
}

func (o VirtualIPMappingResponseOutput) ToVirtualIPMappingResponseOutputWithContext(ctx context.Context) VirtualIPMappingResponseOutput {
	return o
}

// Is virtual IP mapping in use.
func (o VirtualIPMappingResponseOutput) InUse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualIPMappingResponse) *bool { return v.InUse }).(pulumi.BoolPtrOutput)
}

// Internal HTTP port.
func (o VirtualIPMappingResponseOutput) InternalHttpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualIPMappingResponse) *int { return v.InternalHttpPort }).(pulumi.IntPtrOutput)
}

// Internal HTTPS port.
func (o VirtualIPMappingResponseOutput) InternalHttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualIPMappingResponse) *int { return v.InternalHttpsPort }).(pulumi.IntPtrOutput)
}

// Virtual IP address.
func (o VirtualIPMappingResponseOutput) VirtualIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualIPMappingResponse) *string { return v.VirtualIP }).(pulumi.StringPtrOutput)
}

type VirtualIPMappingResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualIPMappingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualIPMappingResponse)(nil)).Elem()
}

func (o VirtualIPMappingResponseArrayOutput) ToVirtualIPMappingResponseArrayOutput() VirtualIPMappingResponseArrayOutput {
	return o
}

func (o VirtualIPMappingResponseArrayOutput) ToVirtualIPMappingResponseArrayOutputWithContext(ctx context.Context) VirtualIPMappingResponseArrayOutput {
	return o
}

func (o VirtualIPMappingResponseArrayOutput) Index(i pulumi.IntInput) VirtualIPMappingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualIPMappingResponse {
		return vs[0].([]VirtualIPMappingResponse)[vs[1].(int)]
	}).(VirtualIPMappingResponseOutput)
}

// Specification for using a Virtual Network.
type VirtualNetworkProfile struct {
	// Resource id of the Virtual Network.
	Id *string `pulumi:"id"`
	// Subnet within the Virtual Network.
	Subnet *string `pulumi:"subnet"`
}

// VirtualNetworkProfileInput is an input type that accepts VirtualNetworkProfileArgs and VirtualNetworkProfileOutput values.
// You can construct a concrete instance of `VirtualNetworkProfileInput` via:
//
//          VirtualNetworkProfileArgs{...}
type VirtualNetworkProfileInput interface {
	pulumi.Input

	ToVirtualNetworkProfileOutput() VirtualNetworkProfileOutput
	ToVirtualNetworkProfileOutputWithContext(context.Context) VirtualNetworkProfileOutput
}

// Specification for using a Virtual Network.
type VirtualNetworkProfileArgs struct {
	// Resource id of the Virtual Network.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Subnet within the Virtual Network.
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
}

func (VirtualNetworkProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkProfile)(nil)).Elem()
}

func (i VirtualNetworkProfileArgs) ToVirtualNetworkProfileOutput() VirtualNetworkProfileOutput {
	return i.ToVirtualNetworkProfileOutputWithContext(context.Background())
}

func (i VirtualNetworkProfileArgs) ToVirtualNetworkProfileOutputWithContext(ctx context.Context) VirtualNetworkProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkProfileOutput)
}

func (i VirtualNetworkProfileArgs) ToVirtualNetworkProfilePtrOutput() VirtualNetworkProfilePtrOutput {
	return i.ToVirtualNetworkProfilePtrOutputWithContext(context.Background())
}

func (i VirtualNetworkProfileArgs) ToVirtualNetworkProfilePtrOutputWithContext(ctx context.Context) VirtualNetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkProfileOutput).ToVirtualNetworkProfilePtrOutputWithContext(ctx)
}

// VirtualNetworkProfilePtrInput is an input type that accepts VirtualNetworkProfileArgs, VirtualNetworkProfilePtr and VirtualNetworkProfilePtrOutput values.
// You can construct a concrete instance of `VirtualNetworkProfilePtrInput` via:
//
//          VirtualNetworkProfileArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkProfilePtrInput interface {
	pulumi.Input

	ToVirtualNetworkProfilePtrOutput() VirtualNetworkProfilePtrOutput
	ToVirtualNetworkProfilePtrOutputWithContext(context.Context) VirtualNetworkProfilePtrOutput
}

type virtualNetworkProfilePtrType VirtualNetworkProfileArgs

func VirtualNetworkProfilePtr(v *VirtualNetworkProfileArgs) VirtualNetworkProfilePtrInput {
	return (*virtualNetworkProfilePtrType)(v)
}

func (*virtualNetworkProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkProfile)(nil)).Elem()
}

func (i *virtualNetworkProfilePtrType) ToVirtualNetworkProfilePtrOutput() VirtualNetworkProfilePtrOutput {
	return i.ToVirtualNetworkProfilePtrOutputWithContext(context.Background())
}

func (i *virtualNetworkProfilePtrType) ToVirtualNetworkProfilePtrOutputWithContext(ctx context.Context) VirtualNetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkProfilePtrOutput)
}

// Specification for using a Virtual Network.
type VirtualNetworkProfileOutput struct{ *pulumi.OutputState }

func (VirtualNetworkProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkProfile)(nil)).Elem()
}

func (o VirtualNetworkProfileOutput) ToVirtualNetworkProfileOutput() VirtualNetworkProfileOutput {
	return o
}

func (o VirtualNetworkProfileOutput) ToVirtualNetworkProfileOutputWithContext(ctx context.Context) VirtualNetworkProfileOutput {
	return o
}

func (o VirtualNetworkProfileOutput) ToVirtualNetworkProfilePtrOutput() VirtualNetworkProfilePtrOutput {
	return o.ToVirtualNetworkProfilePtrOutputWithContext(context.Background())
}

func (o VirtualNetworkProfileOutput) ToVirtualNetworkProfilePtrOutputWithContext(ctx context.Context) VirtualNetworkProfilePtrOutput {
	return o.ApplyT(func(v VirtualNetworkProfile) *VirtualNetworkProfile {
		return &v
	}).(VirtualNetworkProfilePtrOutput)
}

// Resource id of the Virtual Network.
func (o VirtualNetworkProfileOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkProfile) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Subnet within the Virtual Network.
func (o VirtualNetworkProfileOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkProfile) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

type VirtualNetworkProfilePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkProfile)(nil)).Elem()
}

func (o VirtualNetworkProfilePtrOutput) ToVirtualNetworkProfilePtrOutput() VirtualNetworkProfilePtrOutput {
	return o
}

func (o VirtualNetworkProfilePtrOutput) ToVirtualNetworkProfilePtrOutputWithContext(ctx context.Context) VirtualNetworkProfilePtrOutput {
	return o
}

func (o VirtualNetworkProfilePtrOutput) Elem() VirtualNetworkProfileOutput {
	return o.ApplyT(func(v *VirtualNetworkProfile) VirtualNetworkProfile { return *v }).(VirtualNetworkProfileOutput)
}

// Resource id of the Virtual Network.
func (o VirtualNetworkProfilePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Subnet within the Virtual Network.
func (o VirtualNetworkProfilePtrOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(pulumi.StringPtrOutput)
}

// Specification for using a Virtual Network.
type VirtualNetworkProfileResponse struct {
	// Resource id of the Virtual Network.
	Id *string `pulumi:"id"`
	// Name of the Virtual Network (read-only).
	Name string `pulumi:"name"`
	// Subnet within the Virtual Network.
	Subnet *string `pulumi:"subnet"`
	// Resource type of the Virtual Network (read-only).
	Type string `pulumi:"type"`
}

// VirtualNetworkProfileResponseInput is an input type that accepts VirtualNetworkProfileResponseArgs and VirtualNetworkProfileResponseOutput values.
// You can construct a concrete instance of `VirtualNetworkProfileResponseInput` via:
//
//          VirtualNetworkProfileResponseArgs{...}
type VirtualNetworkProfileResponseInput interface {
	pulumi.Input

	ToVirtualNetworkProfileResponseOutput() VirtualNetworkProfileResponseOutput
	ToVirtualNetworkProfileResponseOutputWithContext(context.Context) VirtualNetworkProfileResponseOutput
}

// Specification for using a Virtual Network.
type VirtualNetworkProfileResponseArgs struct {
	// Resource id of the Virtual Network.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the Virtual Network (read-only).
	Name pulumi.StringInput `pulumi:"name"`
	// Subnet within the Virtual Network.
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
	// Resource type of the Virtual Network (read-only).
	Type pulumi.StringInput `pulumi:"type"`
}

func (VirtualNetworkProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkProfileResponse)(nil)).Elem()
}

func (i VirtualNetworkProfileResponseArgs) ToVirtualNetworkProfileResponseOutput() VirtualNetworkProfileResponseOutput {
	return i.ToVirtualNetworkProfileResponseOutputWithContext(context.Background())
}

func (i VirtualNetworkProfileResponseArgs) ToVirtualNetworkProfileResponseOutputWithContext(ctx context.Context) VirtualNetworkProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkProfileResponseOutput)
}

func (i VirtualNetworkProfileResponseArgs) ToVirtualNetworkProfileResponsePtrOutput() VirtualNetworkProfileResponsePtrOutput {
	return i.ToVirtualNetworkProfileResponsePtrOutputWithContext(context.Background())
}

func (i VirtualNetworkProfileResponseArgs) ToVirtualNetworkProfileResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkProfileResponseOutput).ToVirtualNetworkProfileResponsePtrOutputWithContext(ctx)
}

// VirtualNetworkProfileResponsePtrInput is an input type that accepts VirtualNetworkProfileResponseArgs, VirtualNetworkProfileResponsePtr and VirtualNetworkProfileResponsePtrOutput values.
// You can construct a concrete instance of `VirtualNetworkProfileResponsePtrInput` via:
//
//          VirtualNetworkProfileResponseArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkProfileResponsePtrInput interface {
	pulumi.Input

	ToVirtualNetworkProfileResponsePtrOutput() VirtualNetworkProfileResponsePtrOutput
	ToVirtualNetworkProfileResponsePtrOutputWithContext(context.Context) VirtualNetworkProfileResponsePtrOutput
}

type virtualNetworkProfileResponsePtrType VirtualNetworkProfileResponseArgs

func VirtualNetworkProfileResponsePtr(v *VirtualNetworkProfileResponseArgs) VirtualNetworkProfileResponsePtrInput {
	return (*virtualNetworkProfileResponsePtrType)(v)
}

func (*virtualNetworkProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkProfileResponse)(nil)).Elem()
}

func (i *virtualNetworkProfileResponsePtrType) ToVirtualNetworkProfileResponsePtrOutput() VirtualNetworkProfileResponsePtrOutput {
	return i.ToVirtualNetworkProfileResponsePtrOutputWithContext(context.Background())
}

func (i *virtualNetworkProfileResponsePtrType) ToVirtualNetworkProfileResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkProfileResponsePtrOutput)
}

// Specification for using a Virtual Network.
type VirtualNetworkProfileResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkProfileResponse)(nil)).Elem()
}

func (o VirtualNetworkProfileResponseOutput) ToVirtualNetworkProfileResponseOutput() VirtualNetworkProfileResponseOutput {
	return o
}

func (o VirtualNetworkProfileResponseOutput) ToVirtualNetworkProfileResponseOutputWithContext(ctx context.Context) VirtualNetworkProfileResponseOutput {
	return o
}

func (o VirtualNetworkProfileResponseOutput) ToVirtualNetworkProfileResponsePtrOutput() VirtualNetworkProfileResponsePtrOutput {
	return o.ToVirtualNetworkProfileResponsePtrOutputWithContext(context.Background())
}

func (o VirtualNetworkProfileResponseOutput) ToVirtualNetworkProfileResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkProfileResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkProfileResponse) *VirtualNetworkProfileResponse {
		return &v
	}).(VirtualNetworkProfileResponsePtrOutput)
}

// Resource id of the Virtual Network.
func (o VirtualNetworkProfileResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkProfileResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the Virtual Network (read-only).
func (o VirtualNetworkProfileResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkProfileResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Subnet within the Virtual Network.
func (o VirtualNetworkProfileResponseOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkProfileResponse) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

// Resource type of the Virtual Network (read-only).
func (o VirtualNetworkProfileResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkProfileResponse) string { return v.Type }).(pulumi.StringOutput)
}

type VirtualNetworkProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkProfileResponse)(nil)).Elem()
}

func (o VirtualNetworkProfileResponsePtrOutput) ToVirtualNetworkProfileResponsePtrOutput() VirtualNetworkProfileResponsePtrOutput {
	return o
}

func (o VirtualNetworkProfileResponsePtrOutput) ToVirtualNetworkProfileResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkProfileResponsePtrOutput {
	return o
}

func (o VirtualNetworkProfileResponsePtrOutput) Elem() VirtualNetworkProfileResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkProfileResponse) VirtualNetworkProfileResponse { return *v }).(VirtualNetworkProfileResponseOutput)
}

// Resource id of the Virtual Network.
func (o VirtualNetworkProfileResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Name of the Virtual Network (read-only).
func (o VirtualNetworkProfileResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Subnet within the Virtual Network.
func (o VirtualNetworkProfileResponsePtrOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(pulumi.StringPtrOutput)
}

// Resource type of the Virtual Network (read-only).
func (o VirtualNetworkProfileResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// VnetInfo resource specific properties
type VnetInfoResponseProperties struct {
	// A certificate file (.cer) blob containing the public key of the private key used to authenticate a
	// Point-To-Site VPN connection.
	CertBlob *string `pulumi:"certBlob"`
	// The client certificate thumbprint.
	CertThumbprint string `pulumi:"certThumbprint"`
	// DNS servers to be used by this Virtual Network. This should be a comma-separated list of IP addresses.
	DnsServers *string `pulumi:"dnsServers"`
	// Flag that is used to denote if this is VNET injection
	IsSwift *bool `pulumi:"isSwift"`
	// <code>true</code> if a resync is required; otherwise, <code>false</code>.
	ResyncRequired bool `pulumi:"resyncRequired"`
	// The routes that this Virtual Network connection uses.
	Routes []VnetRouteResponse `pulumi:"routes"`
	// The Virtual Network's resource ID.
	VnetResourceId *string `pulumi:"vnetResourceId"`
}

// VnetInfoResponsePropertiesInput is an input type that accepts VnetInfoResponsePropertiesArgs and VnetInfoResponsePropertiesOutput values.
// You can construct a concrete instance of `VnetInfoResponsePropertiesInput` via:
//
//          VnetInfoResponsePropertiesArgs{...}
type VnetInfoResponsePropertiesInput interface {
	pulumi.Input

	ToVnetInfoResponsePropertiesOutput() VnetInfoResponsePropertiesOutput
	ToVnetInfoResponsePropertiesOutputWithContext(context.Context) VnetInfoResponsePropertiesOutput
}

// VnetInfo resource specific properties
type VnetInfoResponsePropertiesArgs struct {
	// A certificate file (.cer) blob containing the public key of the private key used to authenticate a
	// Point-To-Site VPN connection.
	CertBlob pulumi.StringPtrInput `pulumi:"certBlob"`
	// The client certificate thumbprint.
	CertThumbprint pulumi.StringInput `pulumi:"certThumbprint"`
	// DNS servers to be used by this Virtual Network. This should be a comma-separated list of IP addresses.
	DnsServers pulumi.StringPtrInput `pulumi:"dnsServers"`
	// Flag that is used to denote if this is VNET injection
	IsSwift pulumi.BoolPtrInput `pulumi:"isSwift"`
	// <code>true</code> if a resync is required; otherwise, <code>false</code>.
	ResyncRequired pulumi.BoolInput `pulumi:"resyncRequired"`
	// The routes that this Virtual Network connection uses.
	Routes VnetRouteResponseArrayInput `pulumi:"routes"`
	// The Virtual Network's resource ID.
	VnetResourceId pulumi.StringPtrInput `pulumi:"vnetResourceId"`
}

func (VnetInfoResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VnetInfoResponseProperties)(nil)).Elem()
}

func (i VnetInfoResponsePropertiesArgs) ToVnetInfoResponsePropertiesOutput() VnetInfoResponsePropertiesOutput {
	return i.ToVnetInfoResponsePropertiesOutputWithContext(context.Background())
}

func (i VnetInfoResponsePropertiesArgs) ToVnetInfoResponsePropertiesOutputWithContext(ctx context.Context) VnetInfoResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetInfoResponsePropertiesOutput)
}

func (i VnetInfoResponsePropertiesArgs) ToVnetInfoResponsePropertiesPtrOutput() VnetInfoResponsePropertiesPtrOutput {
	return i.ToVnetInfoResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i VnetInfoResponsePropertiesArgs) ToVnetInfoResponsePropertiesPtrOutputWithContext(ctx context.Context) VnetInfoResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetInfoResponsePropertiesOutput).ToVnetInfoResponsePropertiesPtrOutputWithContext(ctx)
}

// VnetInfoResponsePropertiesPtrInput is an input type that accepts VnetInfoResponsePropertiesArgs, VnetInfoResponsePropertiesPtr and VnetInfoResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `VnetInfoResponsePropertiesPtrInput` via:
//
//          VnetInfoResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type VnetInfoResponsePropertiesPtrInput interface {
	pulumi.Input

	ToVnetInfoResponsePropertiesPtrOutput() VnetInfoResponsePropertiesPtrOutput
	ToVnetInfoResponsePropertiesPtrOutputWithContext(context.Context) VnetInfoResponsePropertiesPtrOutput
}

type vnetInfoResponsePropertiesPtrType VnetInfoResponsePropertiesArgs

func VnetInfoResponsePropertiesPtr(v *VnetInfoResponsePropertiesArgs) VnetInfoResponsePropertiesPtrInput {
	return (*vnetInfoResponsePropertiesPtrType)(v)
}

func (*vnetInfoResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VnetInfoResponseProperties)(nil)).Elem()
}

func (i *vnetInfoResponsePropertiesPtrType) ToVnetInfoResponsePropertiesPtrOutput() VnetInfoResponsePropertiesPtrOutput {
	return i.ToVnetInfoResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *vnetInfoResponsePropertiesPtrType) ToVnetInfoResponsePropertiesPtrOutputWithContext(ctx context.Context) VnetInfoResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetInfoResponsePropertiesPtrOutput)
}

// VnetInfo resource specific properties
type VnetInfoResponsePropertiesOutput struct{ *pulumi.OutputState }

func (VnetInfoResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VnetInfoResponseProperties)(nil)).Elem()
}

func (o VnetInfoResponsePropertiesOutput) ToVnetInfoResponsePropertiesOutput() VnetInfoResponsePropertiesOutput {
	return o
}

func (o VnetInfoResponsePropertiesOutput) ToVnetInfoResponsePropertiesOutputWithContext(ctx context.Context) VnetInfoResponsePropertiesOutput {
	return o
}

func (o VnetInfoResponsePropertiesOutput) ToVnetInfoResponsePropertiesPtrOutput() VnetInfoResponsePropertiesPtrOutput {
	return o.ToVnetInfoResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o VnetInfoResponsePropertiesOutput) ToVnetInfoResponsePropertiesPtrOutputWithContext(ctx context.Context) VnetInfoResponsePropertiesPtrOutput {
	return o.ApplyT(func(v VnetInfoResponseProperties) *VnetInfoResponseProperties {
		return &v
	}).(VnetInfoResponsePropertiesPtrOutput)
}

// A certificate file (.cer) blob containing the public key of the private key used to authenticate a
// Point-To-Site VPN connection.
func (o VnetInfoResponsePropertiesOutput) CertBlob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetInfoResponseProperties) *string { return v.CertBlob }).(pulumi.StringPtrOutput)
}

// The client certificate thumbprint.
func (o VnetInfoResponsePropertiesOutput) CertThumbprint() pulumi.StringOutput {
	return o.ApplyT(func(v VnetInfoResponseProperties) string { return v.CertThumbprint }).(pulumi.StringOutput)
}

// DNS servers to be used by this Virtual Network. This should be a comma-separated list of IP addresses.
func (o VnetInfoResponsePropertiesOutput) DnsServers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetInfoResponseProperties) *string { return v.DnsServers }).(pulumi.StringPtrOutput)
}

// Flag that is used to denote if this is VNET injection
func (o VnetInfoResponsePropertiesOutput) IsSwift() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VnetInfoResponseProperties) *bool { return v.IsSwift }).(pulumi.BoolPtrOutput)
}

// <code>true</code> if a resync is required; otherwise, <code>false</code>.
func (o VnetInfoResponsePropertiesOutput) ResyncRequired() pulumi.BoolOutput {
	return o.ApplyT(func(v VnetInfoResponseProperties) bool { return v.ResyncRequired }).(pulumi.BoolOutput)
}

// The routes that this Virtual Network connection uses.
func (o VnetInfoResponsePropertiesOutput) Routes() VnetRouteResponseArrayOutput {
	return o.ApplyT(func(v VnetInfoResponseProperties) []VnetRouteResponse { return v.Routes }).(VnetRouteResponseArrayOutput)
}

// The Virtual Network's resource ID.
func (o VnetInfoResponsePropertiesOutput) VnetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetInfoResponseProperties) *string { return v.VnetResourceId }).(pulumi.StringPtrOutput)
}

type VnetInfoResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (VnetInfoResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VnetInfoResponseProperties)(nil)).Elem()
}

func (o VnetInfoResponsePropertiesPtrOutput) ToVnetInfoResponsePropertiesPtrOutput() VnetInfoResponsePropertiesPtrOutput {
	return o
}

func (o VnetInfoResponsePropertiesPtrOutput) ToVnetInfoResponsePropertiesPtrOutputWithContext(ctx context.Context) VnetInfoResponsePropertiesPtrOutput {
	return o
}

func (o VnetInfoResponsePropertiesPtrOutput) Elem() VnetInfoResponsePropertiesOutput {
	return o.ApplyT(func(v *VnetInfoResponseProperties) VnetInfoResponseProperties { return *v }).(VnetInfoResponsePropertiesOutput)
}

// A certificate file (.cer) blob containing the public key of the private key used to authenticate a
// Point-To-Site VPN connection.
func (o VnetInfoResponsePropertiesPtrOutput) CertBlob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VnetInfoResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.CertBlob
	}).(pulumi.StringPtrOutput)
}

// The client certificate thumbprint.
func (o VnetInfoResponsePropertiesPtrOutput) CertThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VnetInfoResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.CertThumbprint
	}).(pulumi.StringPtrOutput)
}

// DNS servers to be used by this Virtual Network. This should be a comma-separated list of IP addresses.
func (o VnetInfoResponsePropertiesPtrOutput) DnsServers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VnetInfoResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.DnsServers
	}).(pulumi.StringPtrOutput)
}

// Flag that is used to denote if this is VNET injection
func (o VnetInfoResponsePropertiesPtrOutput) IsSwift() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VnetInfoResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsSwift
	}).(pulumi.BoolPtrOutput)
}

// <code>true</code> if a resync is required; otherwise, <code>false</code>.
func (o VnetInfoResponsePropertiesPtrOutput) ResyncRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VnetInfoResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return &v.ResyncRequired
	}).(pulumi.BoolPtrOutput)
}

// The routes that this Virtual Network connection uses.
func (o VnetInfoResponsePropertiesPtrOutput) Routes() VnetRouteResponseArrayOutput {
	return o.ApplyT(func(v *VnetInfoResponseProperties) []VnetRouteResponse {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(VnetRouteResponseArrayOutput)
}

// The Virtual Network's resource ID.
func (o VnetInfoResponsePropertiesPtrOutput) VnetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VnetInfoResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.VnetResourceId
	}).(pulumi.StringPtrOutput)
}

// Virtual Network route contract used to pass routing information for a Virtual Network.
type VnetRoute struct {
	// The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.
	EndAddress *string `pulumi:"endAddress"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// The type of route this is:
	// DEFAULT - By default, every app has routes to the local address ranges specified by RFC1918
	// INHERITED - Routes inherited from the real Virtual Network routes
	// STATIC - Static route set on the app only
	//
	// These values will be used for syncing an app's routes with those from a Virtual Network.
	RouteType *string `pulumi:"routeType"`
	// The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.
	StartAddress *string `pulumi:"startAddress"`
}

// VnetRouteInput is an input type that accepts VnetRouteArgs and VnetRouteOutput values.
// You can construct a concrete instance of `VnetRouteInput` via:
//
//          VnetRouteArgs{...}
type VnetRouteInput interface {
	pulumi.Input

	ToVnetRouteOutput() VnetRouteOutput
	ToVnetRouteOutputWithContext(context.Context) VnetRouteOutput
}

// Virtual Network route contract used to pass routing information for a Virtual Network.
type VnetRouteArgs struct {
	// The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.
	EndAddress pulumi.StringPtrInput `pulumi:"endAddress"`
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The type of route this is:
	// DEFAULT - By default, every app has routes to the local address ranges specified by RFC1918
	// INHERITED - Routes inherited from the real Virtual Network routes
	// STATIC - Static route set on the app only
	//
	// These values will be used for syncing an app's routes with those from a Virtual Network.
	RouteType pulumi.StringPtrInput `pulumi:"routeType"`
	// The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.
	StartAddress pulumi.StringPtrInput `pulumi:"startAddress"`
}

func (VnetRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VnetRoute)(nil)).Elem()
}

func (i VnetRouteArgs) ToVnetRouteOutput() VnetRouteOutput {
	return i.ToVnetRouteOutputWithContext(context.Background())
}

func (i VnetRouteArgs) ToVnetRouteOutputWithContext(ctx context.Context) VnetRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetRouteOutput)
}

// Virtual Network route contract used to pass routing information for a Virtual Network.
type VnetRouteOutput struct{ *pulumi.OutputState }

func (VnetRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VnetRoute)(nil)).Elem()
}

func (o VnetRouteOutput) ToVnetRouteOutput() VnetRouteOutput {
	return o
}

func (o VnetRouteOutput) ToVnetRouteOutputWithContext(ctx context.Context) VnetRouteOutput {
	return o
}

// The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.
func (o VnetRouteOutput) EndAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetRoute) *string { return v.EndAddress }).(pulumi.StringPtrOutput)
}

// Kind of resource.
func (o VnetRouteOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetRoute) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The type of route this is:
// DEFAULT - By default, every app has routes to the local address ranges specified by RFC1918
// INHERITED - Routes inherited from the real Virtual Network routes
// STATIC - Static route set on the app only
//
// These values will be used for syncing an app's routes with those from a Virtual Network.
func (o VnetRouteOutput) RouteType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetRoute) *string { return v.RouteType }).(pulumi.StringPtrOutput)
}

// The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.
func (o VnetRouteOutput) StartAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetRoute) *string { return v.StartAddress }).(pulumi.StringPtrOutput)
}

// Virtual Network route contract used to pass routing information for a Virtual Network.
type VnetRouteResponse struct {
	// Resource Id.
	Id string `pulumi:"id"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// VnetRoute resource specific properties
	Properties *VnetRouteResponseProperties `pulumi:"properties"`
	// Resource type.
	Type string `pulumi:"type"`
}

// VnetRouteResponseInput is an input type that accepts VnetRouteResponseArgs and VnetRouteResponseOutput values.
// You can construct a concrete instance of `VnetRouteResponseInput` via:
//
//          VnetRouteResponseArgs{...}
type VnetRouteResponseInput interface {
	pulumi.Input

	ToVnetRouteResponseOutput() VnetRouteResponseOutput
	ToVnetRouteResponseOutputWithContext(context.Context) VnetRouteResponseOutput
}

// Virtual Network route contract used to pass routing information for a Virtual Network.
type VnetRouteResponseArgs struct {
	// Resource Id.
	Id pulumi.StringInput `pulumi:"id"`
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// VnetRoute resource specific properties
	Properties VnetRouteResponsePropertiesPtrInput `pulumi:"properties"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (VnetRouteResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VnetRouteResponse)(nil)).Elem()
}

func (i VnetRouteResponseArgs) ToVnetRouteResponseOutput() VnetRouteResponseOutput {
	return i.ToVnetRouteResponseOutputWithContext(context.Background())
}

func (i VnetRouteResponseArgs) ToVnetRouteResponseOutputWithContext(ctx context.Context) VnetRouteResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetRouteResponseOutput)
}

// VnetRouteResponseArrayInput is an input type that accepts VnetRouteResponseArray and VnetRouteResponseArrayOutput values.
// You can construct a concrete instance of `VnetRouteResponseArrayInput` via:
//
//          VnetRouteResponseArray{ VnetRouteResponseArgs{...} }
type VnetRouteResponseArrayInput interface {
	pulumi.Input

	ToVnetRouteResponseArrayOutput() VnetRouteResponseArrayOutput
	ToVnetRouteResponseArrayOutputWithContext(context.Context) VnetRouteResponseArrayOutput
}

type VnetRouteResponseArray []VnetRouteResponseInput

func (VnetRouteResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VnetRouteResponse)(nil)).Elem()
}

func (i VnetRouteResponseArray) ToVnetRouteResponseArrayOutput() VnetRouteResponseArrayOutput {
	return i.ToVnetRouteResponseArrayOutputWithContext(context.Background())
}

func (i VnetRouteResponseArray) ToVnetRouteResponseArrayOutputWithContext(ctx context.Context) VnetRouteResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetRouteResponseArrayOutput)
}

// Virtual Network route contract used to pass routing information for a Virtual Network.
type VnetRouteResponseOutput struct{ *pulumi.OutputState }

func (VnetRouteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VnetRouteResponse)(nil)).Elem()
}

func (o VnetRouteResponseOutput) ToVnetRouteResponseOutput() VnetRouteResponseOutput {
	return o
}

func (o VnetRouteResponseOutput) ToVnetRouteResponseOutputWithContext(ctx context.Context) VnetRouteResponseOutput {
	return o
}

// Resource Id.
func (o VnetRouteResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v VnetRouteResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Kind of resource.
func (o VnetRouteResponseOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetRouteResponse) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o VnetRouteResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VnetRouteResponse) string { return v.Name }).(pulumi.StringOutput)
}

// VnetRoute resource specific properties
func (o VnetRouteResponseOutput) Properties() VnetRouteResponsePropertiesPtrOutput {
	return o.ApplyT(func(v VnetRouteResponse) *VnetRouteResponseProperties { return v.Properties }).(VnetRouteResponsePropertiesPtrOutput)
}

// Resource type.
func (o VnetRouteResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VnetRouteResponse) string { return v.Type }).(pulumi.StringOutput)
}

type VnetRouteResponseArrayOutput struct{ *pulumi.OutputState }

func (VnetRouteResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VnetRouteResponse)(nil)).Elem()
}

func (o VnetRouteResponseArrayOutput) ToVnetRouteResponseArrayOutput() VnetRouteResponseArrayOutput {
	return o
}

func (o VnetRouteResponseArrayOutput) ToVnetRouteResponseArrayOutputWithContext(ctx context.Context) VnetRouteResponseArrayOutput {
	return o
}

func (o VnetRouteResponseArrayOutput) Index(i pulumi.IntInput) VnetRouteResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VnetRouteResponse {
		return vs[0].([]VnetRouteResponse)[vs[1].(int)]
	}).(VnetRouteResponseOutput)
}

// VnetRoute resource specific properties
type VnetRouteResponseProperties struct {
	// The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.
	EndAddress *string `pulumi:"endAddress"`
	// The type of route this is:
	// DEFAULT - By default, every app has routes to the local address ranges specified by RFC1918
	// INHERITED - Routes inherited from the real Virtual Network routes
	// STATIC - Static route set on the app only
	//
	// These values will be used for syncing an app's routes with those from a Virtual Network.
	RouteType *string `pulumi:"routeType"`
	// The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.
	StartAddress *string `pulumi:"startAddress"`
}

// VnetRouteResponsePropertiesInput is an input type that accepts VnetRouteResponsePropertiesArgs and VnetRouteResponsePropertiesOutput values.
// You can construct a concrete instance of `VnetRouteResponsePropertiesInput` via:
//
//          VnetRouteResponsePropertiesArgs{...}
type VnetRouteResponsePropertiesInput interface {
	pulumi.Input

	ToVnetRouteResponsePropertiesOutput() VnetRouteResponsePropertiesOutput
	ToVnetRouteResponsePropertiesOutputWithContext(context.Context) VnetRouteResponsePropertiesOutput
}

// VnetRoute resource specific properties
type VnetRouteResponsePropertiesArgs struct {
	// The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.
	EndAddress pulumi.StringPtrInput `pulumi:"endAddress"`
	// The type of route this is:
	// DEFAULT - By default, every app has routes to the local address ranges specified by RFC1918
	// INHERITED - Routes inherited from the real Virtual Network routes
	// STATIC - Static route set on the app only
	//
	// These values will be used for syncing an app's routes with those from a Virtual Network.
	RouteType pulumi.StringPtrInput `pulumi:"routeType"`
	// The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.
	StartAddress pulumi.StringPtrInput `pulumi:"startAddress"`
}

func (VnetRouteResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VnetRouteResponseProperties)(nil)).Elem()
}

func (i VnetRouteResponsePropertiesArgs) ToVnetRouteResponsePropertiesOutput() VnetRouteResponsePropertiesOutput {
	return i.ToVnetRouteResponsePropertiesOutputWithContext(context.Background())
}

func (i VnetRouteResponsePropertiesArgs) ToVnetRouteResponsePropertiesOutputWithContext(ctx context.Context) VnetRouteResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetRouteResponsePropertiesOutput)
}

func (i VnetRouteResponsePropertiesArgs) ToVnetRouteResponsePropertiesPtrOutput() VnetRouteResponsePropertiesPtrOutput {
	return i.ToVnetRouteResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i VnetRouteResponsePropertiesArgs) ToVnetRouteResponsePropertiesPtrOutputWithContext(ctx context.Context) VnetRouteResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetRouteResponsePropertiesOutput).ToVnetRouteResponsePropertiesPtrOutputWithContext(ctx)
}

// VnetRouteResponsePropertiesPtrInput is an input type that accepts VnetRouteResponsePropertiesArgs, VnetRouteResponsePropertiesPtr and VnetRouteResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `VnetRouteResponsePropertiesPtrInput` via:
//
//          VnetRouteResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type VnetRouteResponsePropertiesPtrInput interface {
	pulumi.Input

	ToVnetRouteResponsePropertiesPtrOutput() VnetRouteResponsePropertiesPtrOutput
	ToVnetRouteResponsePropertiesPtrOutputWithContext(context.Context) VnetRouteResponsePropertiesPtrOutput
}

type vnetRouteResponsePropertiesPtrType VnetRouteResponsePropertiesArgs

func VnetRouteResponsePropertiesPtr(v *VnetRouteResponsePropertiesArgs) VnetRouteResponsePropertiesPtrInput {
	return (*vnetRouteResponsePropertiesPtrType)(v)
}

func (*vnetRouteResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VnetRouteResponseProperties)(nil)).Elem()
}

func (i *vnetRouteResponsePropertiesPtrType) ToVnetRouteResponsePropertiesPtrOutput() VnetRouteResponsePropertiesPtrOutput {
	return i.ToVnetRouteResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *vnetRouteResponsePropertiesPtrType) ToVnetRouteResponsePropertiesPtrOutputWithContext(ctx context.Context) VnetRouteResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetRouteResponsePropertiesPtrOutput)
}

// VnetRoute resource specific properties
type VnetRouteResponsePropertiesOutput struct{ *pulumi.OutputState }

func (VnetRouteResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VnetRouteResponseProperties)(nil)).Elem()
}

func (o VnetRouteResponsePropertiesOutput) ToVnetRouteResponsePropertiesOutput() VnetRouteResponsePropertiesOutput {
	return o
}

func (o VnetRouteResponsePropertiesOutput) ToVnetRouteResponsePropertiesOutputWithContext(ctx context.Context) VnetRouteResponsePropertiesOutput {
	return o
}

func (o VnetRouteResponsePropertiesOutput) ToVnetRouteResponsePropertiesPtrOutput() VnetRouteResponsePropertiesPtrOutput {
	return o.ToVnetRouteResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o VnetRouteResponsePropertiesOutput) ToVnetRouteResponsePropertiesPtrOutputWithContext(ctx context.Context) VnetRouteResponsePropertiesPtrOutput {
	return o.ApplyT(func(v VnetRouteResponseProperties) *VnetRouteResponseProperties {
		return &v
	}).(VnetRouteResponsePropertiesPtrOutput)
}

// The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.
func (o VnetRouteResponsePropertiesOutput) EndAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetRouteResponseProperties) *string { return v.EndAddress }).(pulumi.StringPtrOutput)
}

// The type of route this is:
// DEFAULT - By default, every app has routes to the local address ranges specified by RFC1918
// INHERITED - Routes inherited from the real Virtual Network routes
// STATIC - Static route set on the app only
//
// These values will be used for syncing an app's routes with those from a Virtual Network.
func (o VnetRouteResponsePropertiesOutput) RouteType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetRouteResponseProperties) *string { return v.RouteType }).(pulumi.StringPtrOutput)
}

// The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.
func (o VnetRouteResponsePropertiesOutput) StartAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetRouteResponseProperties) *string { return v.StartAddress }).(pulumi.StringPtrOutput)
}

type VnetRouteResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (VnetRouteResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VnetRouteResponseProperties)(nil)).Elem()
}

func (o VnetRouteResponsePropertiesPtrOutput) ToVnetRouteResponsePropertiesPtrOutput() VnetRouteResponsePropertiesPtrOutput {
	return o
}

func (o VnetRouteResponsePropertiesPtrOutput) ToVnetRouteResponsePropertiesPtrOutputWithContext(ctx context.Context) VnetRouteResponsePropertiesPtrOutput {
	return o
}

func (o VnetRouteResponsePropertiesPtrOutput) Elem() VnetRouteResponsePropertiesOutput {
	return o.ApplyT(func(v *VnetRouteResponseProperties) VnetRouteResponseProperties { return *v }).(VnetRouteResponsePropertiesOutput)
}

// The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.
func (o VnetRouteResponsePropertiesPtrOutput) EndAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VnetRouteResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.EndAddress
	}).(pulumi.StringPtrOutput)
}

// The type of route this is:
// DEFAULT - By default, every app has routes to the local address ranges specified by RFC1918
// INHERITED - Routes inherited from the real Virtual Network routes
// STATIC - Static route set on the app only
//
// These values will be used for syncing an app's routes with those from a Virtual Network.
func (o VnetRouteResponsePropertiesPtrOutput) RouteType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VnetRouteResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.RouteType
	}).(pulumi.StringPtrOutput)
}

// The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.
func (o VnetRouteResponsePropertiesPtrOutput) StartAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VnetRouteResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.StartAddress
	}).(pulumi.StringPtrOutput)
}

// A web app, a mobile app backend, or an API app.
type WebAppType struct {
	// Managed service identity.
	Identity *ManagedServiceIdentityResponse `pulumi:"identity"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Location.
	Location string `pulumi:"location"`
	// Resource Name.
	Name string `pulumi:"name"`
	// Site resource specific properties
	Properties SiteResponseProperties `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// WebAppTypeInput is an input type that accepts WebAppTypeArgs and WebAppTypeOutput values.
// You can construct a concrete instance of `WebAppTypeInput` via:
//
//          WebAppTypeArgs{...}
type WebAppTypeInput interface {
	pulumi.Input

	ToWebAppTypeOutput() WebAppTypeOutput
	ToWebAppTypeOutputWithContext(context.Context) WebAppTypeOutput
}

// A web app, a mobile app backend, or an API app.
type WebAppTypeArgs struct {
	// Managed service identity.
	Identity ManagedServiceIdentityResponsePtrInput `pulumi:"identity"`
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Location.
	Location pulumi.StringInput `pulumi:"location"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// Site resource specific properties
	Properties SiteResponsePropertiesInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebAppTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppType)(nil)).Elem()
}

func (i WebAppTypeArgs) ToWebAppTypeOutput() WebAppTypeOutput {
	return i.ToWebAppTypeOutputWithContext(context.Background())
}

func (i WebAppTypeArgs) ToWebAppTypeOutputWithContext(ctx context.Context) WebAppTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppTypeOutput)
}

// A web app, a mobile app backend, or an API app.
type WebAppTypeOutput struct{ *pulumi.OutputState }

func (WebAppTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppType)(nil)).Elem()
}

func (o WebAppTypeOutput) ToWebAppTypeOutput() WebAppTypeOutput {
	return o
}

func (o WebAppTypeOutput) ToWebAppTypeOutputWithContext(ctx context.Context) WebAppTypeOutput {
	return o
}

// Managed service identity.
func (o WebAppTypeOutput) Identity() ManagedServiceIdentityResponsePtrOutput {
	return o.ApplyT(func(v WebAppType) *ManagedServiceIdentityResponse { return v.Identity }).(ManagedServiceIdentityResponsePtrOutput)
}

// Kind of resource.
func (o WebAppTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebAppType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location.
func (o WebAppTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name.
func (o WebAppTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppType) string { return v.Name }).(pulumi.StringOutput)
}

// Site resource specific properties
func (o WebAppTypeOutput) Properties() SiteResponsePropertiesOutput {
	return o.ApplyT(func(v WebAppType) SiteResponseProperties { return v.Properties }).(SiteResponsePropertiesOutput)
}

// Resource tags.
func (o WebAppTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v WebAppType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o WebAppTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppType) string { return v.Type }).(pulumi.StringOutput)
}

// User credentials used for publishing activity.
type WebAppDeploymentType struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// Deployment resource specific properties
	Properties DeploymentResponseProperties `pulumi:"properties"`
	// Resource type.
	Type string `pulumi:"type"`
}

// WebAppDeploymentTypeInput is an input type that accepts WebAppDeploymentTypeArgs and WebAppDeploymentTypeOutput values.
// You can construct a concrete instance of `WebAppDeploymentTypeInput` via:
//
//          WebAppDeploymentTypeArgs{...}
type WebAppDeploymentTypeInput interface {
	pulumi.Input

	ToWebAppDeploymentTypeOutput() WebAppDeploymentTypeOutput
	ToWebAppDeploymentTypeOutputWithContext(context.Context) WebAppDeploymentTypeOutput
}

// User credentials used for publishing activity.
type WebAppDeploymentTypeArgs struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// Deployment resource specific properties
	Properties DeploymentResponsePropertiesInput `pulumi:"properties"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebAppDeploymentTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppDeploymentType)(nil)).Elem()
}

func (i WebAppDeploymentTypeArgs) ToWebAppDeploymentTypeOutput() WebAppDeploymentTypeOutput {
	return i.ToWebAppDeploymentTypeOutputWithContext(context.Background())
}

func (i WebAppDeploymentTypeArgs) ToWebAppDeploymentTypeOutputWithContext(ctx context.Context) WebAppDeploymentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppDeploymentTypeOutput)
}

// User credentials used for publishing activity.
type WebAppDeploymentTypeOutput struct{ *pulumi.OutputState }

func (WebAppDeploymentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppDeploymentType)(nil)).Elem()
}

func (o WebAppDeploymentTypeOutput) ToWebAppDeploymentTypeOutput() WebAppDeploymentTypeOutput {
	return o
}

func (o WebAppDeploymentTypeOutput) ToWebAppDeploymentTypeOutputWithContext(ctx context.Context) WebAppDeploymentTypeOutput {
	return o
}

// Kind of resource.
func (o WebAppDeploymentTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebAppDeploymentType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o WebAppDeploymentTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppDeploymentType) string { return v.Name }).(pulumi.StringOutput)
}

// Deployment resource specific properties
func (o WebAppDeploymentTypeOutput) Properties() DeploymentResponsePropertiesOutput {
	return o.ApplyT(func(v WebAppDeploymentType) DeploymentResponseProperties { return v.Properties }).(DeploymentResponsePropertiesOutput)
}

// Resource type.
func (o WebAppDeploymentTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppDeploymentType) string { return v.Type }).(pulumi.StringOutput)
}

// User credentials used for publishing activity.
type WebAppDeploymentSlotType struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// Deployment resource specific properties
	Properties DeploymentResponseProperties `pulumi:"properties"`
	// Resource type.
	Type string `pulumi:"type"`
}

// WebAppDeploymentSlotTypeInput is an input type that accepts WebAppDeploymentSlotTypeArgs and WebAppDeploymentSlotTypeOutput values.
// You can construct a concrete instance of `WebAppDeploymentSlotTypeInput` via:
//
//          WebAppDeploymentSlotTypeArgs{...}
type WebAppDeploymentSlotTypeInput interface {
	pulumi.Input

	ToWebAppDeploymentSlotTypeOutput() WebAppDeploymentSlotTypeOutput
	ToWebAppDeploymentSlotTypeOutputWithContext(context.Context) WebAppDeploymentSlotTypeOutput
}

// User credentials used for publishing activity.
type WebAppDeploymentSlotTypeArgs struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// Deployment resource specific properties
	Properties DeploymentResponsePropertiesInput `pulumi:"properties"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebAppDeploymentSlotTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppDeploymentSlotType)(nil)).Elem()
}

func (i WebAppDeploymentSlotTypeArgs) ToWebAppDeploymentSlotTypeOutput() WebAppDeploymentSlotTypeOutput {
	return i.ToWebAppDeploymentSlotTypeOutputWithContext(context.Background())
}

func (i WebAppDeploymentSlotTypeArgs) ToWebAppDeploymentSlotTypeOutputWithContext(ctx context.Context) WebAppDeploymentSlotTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppDeploymentSlotTypeOutput)
}

// User credentials used for publishing activity.
type WebAppDeploymentSlotTypeOutput struct{ *pulumi.OutputState }

func (WebAppDeploymentSlotTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppDeploymentSlotType)(nil)).Elem()
}

func (o WebAppDeploymentSlotTypeOutput) ToWebAppDeploymentSlotTypeOutput() WebAppDeploymentSlotTypeOutput {
	return o
}

func (o WebAppDeploymentSlotTypeOutput) ToWebAppDeploymentSlotTypeOutputWithContext(ctx context.Context) WebAppDeploymentSlotTypeOutput {
	return o
}

// Kind of resource.
func (o WebAppDeploymentSlotTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebAppDeploymentSlotType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o WebAppDeploymentSlotTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppDeploymentSlotType) string { return v.Name }).(pulumi.StringOutput)
}

// Deployment resource specific properties
func (o WebAppDeploymentSlotTypeOutput) Properties() DeploymentResponsePropertiesOutput {
	return o.ApplyT(func(v WebAppDeploymentSlotType) DeploymentResponseProperties { return v.Properties }).(DeploymentResponsePropertiesOutput)
}

// Resource type.
func (o WebAppDeploymentSlotTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppDeploymentSlotType) string { return v.Type }).(pulumi.StringOutput)
}

// A domain specific resource identifier.
type WebAppDomainOwnershipIdentifierType struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// Identifier resource specific properties
	Properties IdentifierResponseProperties `pulumi:"properties"`
	// Resource type.
	Type string `pulumi:"type"`
}

// WebAppDomainOwnershipIdentifierTypeInput is an input type that accepts WebAppDomainOwnershipIdentifierTypeArgs and WebAppDomainOwnershipIdentifierTypeOutput values.
// You can construct a concrete instance of `WebAppDomainOwnershipIdentifierTypeInput` via:
//
//          WebAppDomainOwnershipIdentifierTypeArgs{...}
type WebAppDomainOwnershipIdentifierTypeInput interface {
	pulumi.Input

	ToWebAppDomainOwnershipIdentifierTypeOutput() WebAppDomainOwnershipIdentifierTypeOutput
	ToWebAppDomainOwnershipIdentifierTypeOutputWithContext(context.Context) WebAppDomainOwnershipIdentifierTypeOutput
}

// A domain specific resource identifier.
type WebAppDomainOwnershipIdentifierTypeArgs struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// Identifier resource specific properties
	Properties IdentifierResponsePropertiesInput `pulumi:"properties"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebAppDomainOwnershipIdentifierTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppDomainOwnershipIdentifierType)(nil)).Elem()
}

func (i WebAppDomainOwnershipIdentifierTypeArgs) ToWebAppDomainOwnershipIdentifierTypeOutput() WebAppDomainOwnershipIdentifierTypeOutput {
	return i.ToWebAppDomainOwnershipIdentifierTypeOutputWithContext(context.Background())
}

func (i WebAppDomainOwnershipIdentifierTypeArgs) ToWebAppDomainOwnershipIdentifierTypeOutputWithContext(ctx context.Context) WebAppDomainOwnershipIdentifierTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppDomainOwnershipIdentifierTypeOutput)
}

// A domain specific resource identifier.
type WebAppDomainOwnershipIdentifierTypeOutput struct{ *pulumi.OutputState }

func (WebAppDomainOwnershipIdentifierTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppDomainOwnershipIdentifierType)(nil)).Elem()
}

func (o WebAppDomainOwnershipIdentifierTypeOutput) ToWebAppDomainOwnershipIdentifierTypeOutput() WebAppDomainOwnershipIdentifierTypeOutput {
	return o
}

func (o WebAppDomainOwnershipIdentifierTypeOutput) ToWebAppDomainOwnershipIdentifierTypeOutputWithContext(ctx context.Context) WebAppDomainOwnershipIdentifierTypeOutput {
	return o
}

// Kind of resource.
func (o WebAppDomainOwnershipIdentifierTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebAppDomainOwnershipIdentifierType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o WebAppDomainOwnershipIdentifierTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppDomainOwnershipIdentifierType) string { return v.Name }).(pulumi.StringOutput)
}

// Identifier resource specific properties
func (o WebAppDomainOwnershipIdentifierTypeOutput) Properties() IdentifierResponsePropertiesOutput {
	return o.ApplyT(func(v WebAppDomainOwnershipIdentifierType) IdentifierResponseProperties { return v.Properties }).(IdentifierResponsePropertiesOutput)
}

// Resource type.
func (o WebAppDomainOwnershipIdentifierTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppDomainOwnershipIdentifierType) string { return v.Type }).(pulumi.StringOutput)
}

// A domain specific resource identifier.
type WebAppDomainOwnershipIdentifierSlotType struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// Identifier resource specific properties
	Properties IdentifierResponseProperties `pulumi:"properties"`
	// Resource type.
	Type string `pulumi:"type"`
}

// WebAppDomainOwnershipIdentifierSlotTypeInput is an input type that accepts WebAppDomainOwnershipIdentifierSlotTypeArgs and WebAppDomainOwnershipIdentifierSlotTypeOutput values.
// You can construct a concrete instance of `WebAppDomainOwnershipIdentifierSlotTypeInput` via:
//
//          WebAppDomainOwnershipIdentifierSlotTypeArgs{...}
type WebAppDomainOwnershipIdentifierSlotTypeInput interface {
	pulumi.Input

	ToWebAppDomainOwnershipIdentifierSlotTypeOutput() WebAppDomainOwnershipIdentifierSlotTypeOutput
	ToWebAppDomainOwnershipIdentifierSlotTypeOutputWithContext(context.Context) WebAppDomainOwnershipIdentifierSlotTypeOutput
}

// A domain specific resource identifier.
type WebAppDomainOwnershipIdentifierSlotTypeArgs struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// Identifier resource specific properties
	Properties IdentifierResponsePropertiesInput `pulumi:"properties"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebAppDomainOwnershipIdentifierSlotTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppDomainOwnershipIdentifierSlotType)(nil)).Elem()
}

func (i WebAppDomainOwnershipIdentifierSlotTypeArgs) ToWebAppDomainOwnershipIdentifierSlotTypeOutput() WebAppDomainOwnershipIdentifierSlotTypeOutput {
	return i.ToWebAppDomainOwnershipIdentifierSlotTypeOutputWithContext(context.Background())
}

func (i WebAppDomainOwnershipIdentifierSlotTypeArgs) ToWebAppDomainOwnershipIdentifierSlotTypeOutputWithContext(ctx context.Context) WebAppDomainOwnershipIdentifierSlotTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppDomainOwnershipIdentifierSlotTypeOutput)
}

// A domain specific resource identifier.
type WebAppDomainOwnershipIdentifierSlotTypeOutput struct{ *pulumi.OutputState }

func (WebAppDomainOwnershipIdentifierSlotTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppDomainOwnershipIdentifierSlotType)(nil)).Elem()
}

func (o WebAppDomainOwnershipIdentifierSlotTypeOutput) ToWebAppDomainOwnershipIdentifierSlotTypeOutput() WebAppDomainOwnershipIdentifierSlotTypeOutput {
	return o
}

func (o WebAppDomainOwnershipIdentifierSlotTypeOutput) ToWebAppDomainOwnershipIdentifierSlotTypeOutputWithContext(ctx context.Context) WebAppDomainOwnershipIdentifierSlotTypeOutput {
	return o
}

// Kind of resource.
func (o WebAppDomainOwnershipIdentifierSlotTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebAppDomainOwnershipIdentifierSlotType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o WebAppDomainOwnershipIdentifierSlotTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppDomainOwnershipIdentifierSlotType) string { return v.Name }).(pulumi.StringOutput)
}

// Identifier resource specific properties
func (o WebAppDomainOwnershipIdentifierSlotTypeOutput) Properties() IdentifierResponsePropertiesOutput {
	return o.ApplyT(func(v WebAppDomainOwnershipIdentifierSlotType) IdentifierResponseProperties { return v.Properties }).(IdentifierResponsePropertiesOutput)
}

// Resource type.
func (o WebAppDomainOwnershipIdentifierSlotTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppDomainOwnershipIdentifierSlotType) string { return v.Type }).(pulumi.StringOutput)
}

// Function information.
type WebAppFunctionType struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// FunctionEnvelope resource specific properties
	Properties FunctionEnvelopeResponseProperties `pulumi:"properties"`
	// Resource type.
	Type string `pulumi:"type"`
}

// WebAppFunctionTypeInput is an input type that accepts WebAppFunctionTypeArgs and WebAppFunctionTypeOutput values.
// You can construct a concrete instance of `WebAppFunctionTypeInput` via:
//
//          WebAppFunctionTypeArgs{...}
type WebAppFunctionTypeInput interface {
	pulumi.Input

	ToWebAppFunctionTypeOutput() WebAppFunctionTypeOutput
	ToWebAppFunctionTypeOutputWithContext(context.Context) WebAppFunctionTypeOutput
}

// Function information.
type WebAppFunctionTypeArgs struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// FunctionEnvelope resource specific properties
	Properties FunctionEnvelopeResponsePropertiesInput `pulumi:"properties"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebAppFunctionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppFunctionType)(nil)).Elem()
}

func (i WebAppFunctionTypeArgs) ToWebAppFunctionTypeOutput() WebAppFunctionTypeOutput {
	return i.ToWebAppFunctionTypeOutputWithContext(context.Background())
}

func (i WebAppFunctionTypeArgs) ToWebAppFunctionTypeOutputWithContext(ctx context.Context) WebAppFunctionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppFunctionTypeOutput)
}

// Function information.
type WebAppFunctionTypeOutput struct{ *pulumi.OutputState }

func (WebAppFunctionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppFunctionType)(nil)).Elem()
}

func (o WebAppFunctionTypeOutput) ToWebAppFunctionTypeOutput() WebAppFunctionTypeOutput {
	return o
}

func (o WebAppFunctionTypeOutput) ToWebAppFunctionTypeOutputWithContext(ctx context.Context) WebAppFunctionTypeOutput {
	return o
}

// Kind of resource.
func (o WebAppFunctionTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebAppFunctionType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o WebAppFunctionTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppFunctionType) string { return v.Name }).(pulumi.StringOutput)
}

// FunctionEnvelope resource specific properties
func (o WebAppFunctionTypeOutput) Properties() FunctionEnvelopeResponsePropertiesOutput {
	return o.ApplyT(func(v WebAppFunctionType) FunctionEnvelopeResponseProperties { return v.Properties }).(FunctionEnvelopeResponsePropertiesOutput)
}

// Resource type.
func (o WebAppFunctionTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppFunctionType) string { return v.Type }).(pulumi.StringOutput)
}

// A hostname binding object.
type WebAppHostNameBindingType struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// HostNameBinding resource specific properties
	Properties HostNameBindingResponseProperties `pulumi:"properties"`
	// Resource type.
	Type string `pulumi:"type"`
}

// WebAppHostNameBindingTypeInput is an input type that accepts WebAppHostNameBindingTypeArgs and WebAppHostNameBindingTypeOutput values.
// You can construct a concrete instance of `WebAppHostNameBindingTypeInput` via:
//
//          WebAppHostNameBindingTypeArgs{...}
type WebAppHostNameBindingTypeInput interface {
	pulumi.Input

	ToWebAppHostNameBindingTypeOutput() WebAppHostNameBindingTypeOutput
	ToWebAppHostNameBindingTypeOutputWithContext(context.Context) WebAppHostNameBindingTypeOutput
}

// A hostname binding object.
type WebAppHostNameBindingTypeArgs struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// HostNameBinding resource specific properties
	Properties HostNameBindingResponsePropertiesInput `pulumi:"properties"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebAppHostNameBindingTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppHostNameBindingType)(nil)).Elem()
}

func (i WebAppHostNameBindingTypeArgs) ToWebAppHostNameBindingTypeOutput() WebAppHostNameBindingTypeOutput {
	return i.ToWebAppHostNameBindingTypeOutputWithContext(context.Background())
}

func (i WebAppHostNameBindingTypeArgs) ToWebAppHostNameBindingTypeOutputWithContext(ctx context.Context) WebAppHostNameBindingTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppHostNameBindingTypeOutput)
}

// A hostname binding object.
type WebAppHostNameBindingTypeOutput struct{ *pulumi.OutputState }

func (WebAppHostNameBindingTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppHostNameBindingType)(nil)).Elem()
}

func (o WebAppHostNameBindingTypeOutput) ToWebAppHostNameBindingTypeOutput() WebAppHostNameBindingTypeOutput {
	return o
}

func (o WebAppHostNameBindingTypeOutput) ToWebAppHostNameBindingTypeOutputWithContext(ctx context.Context) WebAppHostNameBindingTypeOutput {
	return o
}

// Kind of resource.
func (o WebAppHostNameBindingTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebAppHostNameBindingType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o WebAppHostNameBindingTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppHostNameBindingType) string { return v.Name }).(pulumi.StringOutput)
}

// HostNameBinding resource specific properties
func (o WebAppHostNameBindingTypeOutput) Properties() HostNameBindingResponsePropertiesOutput {
	return o.ApplyT(func(v WebAppHostNameBindingType) HostNameBindingResponseProperties { return v.Properties }).(HostNameBindingResponsePropertiesOutput)
}

// Resource type.
func (o WebAppHostNameBindingTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppHostNameBindingType) string { return v.Type }).(pulumi.StringOutput)
}

// A hostname binding object.
type WebAppHostNameBindingSlotType struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// HostNameBinding resource specific properties
	Properties HostNameBindingResponseProperties `pulumi:"properties"`
	// Resource type.
	Type string `pulumi:"type"`
}

// WebAppHostNameBindingSlotTypeInput is an input type that accepts WebAppHostNameBindingSlotTypeArgs and WebAppHostNameBindingSlotTypeOutput values.
// You can construct a concrete instance of `WebAppHostNameBindingSlotTypeInput` via:
//
//          WebAppHostNameBindingSlotTypeArgs{...}
type WebAppHostNameBindingSlotTypeInput interface {
	pulumi.Input

	ToWebAppHostNameBindingSlotTypeOutput() WebAppHostNameBindingSlotTypeOutput
	ToWebAppHostNameBindingSlotTypeOutputWithContext(context.Context) WebAppHostNameBindingSlotTypeOutput
}

// A hostname binding object.
type WebAppHostNameBindingSlotTypeArgs struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// HostNameBinding resource specific properties
	Properties HostNameBindingResponsePropertiesInput `pulumi:"properties"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebAppHostNameBindingSlotTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppHostNameBindingSlotType)(nil)).Elem()
}

func (i WebAppHostNameBindingSlotTypeArgs) ToWebAppHostNameBindingSlotTypeOutput() WebAppHostNameBindingSlotTypeOutput {
	return i.ToWebAppHostNameBindingSlotTypeOutputWithContext(context.Background())
}

func (i WebAppHostNameBindingSlotTypeArgs) ToWebAppHostNameBindingSlotTypeOutputWithContext(ctx context.Context) WebAppHostNameBindingSlotTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppHostNameBindingSlotTypeOutput)
}

// A hostname binding object.
type WebAppHostNameBindingSlotTypeOutput struct{ *pulumi.OutputState }

func (WebAppHostNameBindingSlotTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppHostNameBindingSlotType)(nil)).Elem()
}

func (o WebAppHostNameBindingSlotTypeOutput) ToWebAppHostNameBindingSlotTypeOutput() WebAppHostNameBindingSlotTypeOutput {
	return o
}

func (o WebAppHostNameBindingSlotTypeOutput) ToWebAppHostNameBindingSlotTypeOutputWithContext(ctx context.Context) WebAppHostNameBindingSlotTypeOutput {
	return o
}

// Kind of resource.
func (o WebAppHostNameBindingSlotTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebAppHostNameBindingSlotType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o WebAppHostNameBindingSlotTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppHostNameBindingSlotType) string { return v.Name }).(pulumi.StringOutput)
}

// HostNameBinding resource specific properties
func (o WebAppHostNameBindingSlotTypeOutput) Properties() HostNameBindingResponsePropertiesOutput {
	return o.ApplyT(func(v WebAppHostNameBindingSlotType) HostNameBindingResponseProperties { return v.Properties }).(HostNameBindingResponsePropertiesOutput)
}

// Resource type.
func (o WebAppHostNameBindingSlotTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppHostNameBindingSlotType) string { return v.Type }).(pulumi.StringOutput)
}

// Hybrid Connection contract. This is used to configure a Hybrid Connection.
type WebAppHybridConnectionType struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// HybridConnection resource specific properties
	Properties HybridConnectionResponseProperties `pulumi:"properties"`
	// Resource type.
	Type string `pulumi:"type"`
}

// WebAppHybridConnectionTypeInput is an input type that accepts WebAppHybridConnectionTypeArgs and WebAppHybridConnectionTypeOutput values.
// You can construct a concrete instance of `WebAppHybridConnectionTypeInput` via:
//
//          WebAppHybridConnectionTypeArgs{...}
type WebAppHybridConnectionTypeInput interface {
	pulumi.Input

	ToWebAppHybridConnectionTypeOutput() WebAppHybridConnectionTypeOutput
	ToWebAppHybridConnectionTypeOutputWithContext(context.Context) WebAppHybridConnectionTypeOutput
}

// Hybrid Connection contract. This is used to configure a Hybrid Connection.
type WebAppHybridConnectionTypeArgs struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// HybridConnection resource specific properties
	Properties HybridConnectionResponsePropertiesInput `pulumi:"properties"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebAppHybridConnectionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppHybridConnectionType)(nil)).Elem()
}

func (i WebAppHybridConnectionTypeArgs) ToWebAppHybridConnectionTypeOutput() WebAppHybridConnectionTypeOutput {
	return i.ToWebAppHybridConnectionTypeOutputWithContext(context.Background())
}

func (i WebAppHybridConnectionTypeArgs) ToWebAppHybridConnectionTypeOutputWithContext(ctx context.Context) WebAppHybridConnectionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppHybridConnectionTypeOutput)
}

// Hybrid Connection contract. This is used to configure a Hybrid Connection.
type WebAppHybridConnectionTypeOutput struct{ *pulumi.OutputState }

func (WebAppHybridConnectionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppHybridConnectionType)(nil)).Elem()
}

func (o WebAppHybridConnectionTypeOutput) ToWebAppHybridConnectionTypeOutput() WebAppHybridConnectionTypeOutput {
	return o
}

func (o WebAppHybridConnectionTypeOutput) ToWebAppHybridConnectionTypeOutputWithContext(ctx context.Context) WebAppHybridConnectionTypeOutput {
	return o
}

// Kind of resource.
func (o WebAppHybridConnectionTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebAppHybridConnectionType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o WebAppHybridConnectionTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppHybridConnectionType) string { return v.Name }).(pulumi.StringOutput)
}

// HybridConnection resource specific properties
func (o WebAppHybridConnectionTypeOutput) Properties() HybridConnectionResponsePropertiesOutput {
	return o.ApplyT(func(v WebAppHybridConnectionType) HybridConnectionResponseProperties { return v.Properties }).(HybridConnectionResponsePropertiesOutput)
}

// Resource type.
func (o WebAppHybridConnectionTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppHybridConnectionType) string { return v.Type }).(pulumi.StringOutput)
}

// Hybrid Connection contract. This is used to configure a Hybrid Connection.
type WebAppHybridConnectionSlotType struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// HybridConnection resource specific properties
	Properties HybridConnectionResponseProperties `pulumi:"properties"`
	// Resource type.
	Type string `pulumi:"type"`
}

// WebAppHybridConnectionSlotTypeInput is an input type that accepts WebAppHybridConnectionSlotTypeArgs and WebAppHybridConnectionSlotTypeOutput values.
// You can construct a concrete instance of `WebAppHybridConnectionSlotTypeInput` via:
//
//          WebAppHybridConnectionSlotTypeArgs{...}
type WebAppHybridConnectionSlotTypeInput interface {
	pulumi.Input

	ToWebAppHybridConnectionSlotTypeOutput() WebAppHybridConnectionSlotTypeOutput
	ToWebAppHybridConnectionSlotTypeOutputWithContext(context.Context) WebAppHybridConnectionSlotTypeOutput
}

// Hybrid Connection contract. This is used to configure a Hybrid Connection.
type WebAppHybridConnectionSlotTypeArgs struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// HybridConnection resource specific properties
	Properties HybridConnectionResponsePropertiesInput `pulumi:"properties"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebAppHybridConnectionSlotTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppHybridConnectionSlotType)(nil)).Elem()
}

func (i WebAppHybridConnectionSlotTypeArgs) ToWebAppHybridConnectionSlotTypeOutput() WebAppHybridConnectionSlotTypeOutput {
	return i.ToWebAppHybridConnectionSlotTypeOutputWithContext(context.Background())
}

func (i WebAppHybridConnectionSlotTypeArgs) ToWebAppHybridConnectionSlotTypeOutputWithContext(ctx context.Context) WebAppHybridConnectionSlotTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppHybridConnectionSlotTypeOutput)
}

// Hybrid Connection contract. This is used to configure a Hybrid Connection.
type WebAppHybridConnectionSlotTypeOutput struct{ *pulumi.OutputState }

func (WebAppHybridConnectionSlotTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppHybridConnectionSlotType)(nil)).Elem()
}

func (o WebAppHybridConnectionSlotTypeOutput) ToWebAppHybridConnectionSlotTypeOutput() WebAppHybridConnectionSlotTypeOutput {
	return o
}

func (o WebAppHybridConnectionSlotTypeOutput) ToWebAppHybridConnectionSlotTypeOutputWithContext(ctx context.Context) WebAppHybridConnectionSlotTypeOutput {
	return o
}

// Kind of resource.
func (o WebAppHybridConnectionSlotTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebAppHybridConnectionSlotType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o WebAppHybridConnectionSlotTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppHybridConnectionSlotType) string { return v.Name }).(pulumi.StringOutput)
}

// HybridConnection resource specific properties
func (o WebAppHybridConnectionSlotTypeOutput) Properties() HybridConnectionResponsePropertiesOutput {
	return o.ApplyT(func(v WebAppHybridConnectionSlotType) HybridConnectionResponseProperties { return v.Properties }).(HybridConnectionResponsePropertiesOutput)
}

// Resource type.
func (o WebAppHybridConnectionSlotTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppHybridConnectionSlotType) string { return v.Type }).(pulumi.StringOutput)
}

// Function information.
type WebAppInstanceFunctionSlotType struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// FunctionEnvelope resource specific properties
	Properties FunctionEnvelopeResponseProperties `pulumi:"properties"`
	// Resource type.
	Type string `pulumi:"type"`
}

// WebAppInstanceFunctionSlotTypeInput is an input type that accepts WebAppInstanceFunctionSlotTypeArgs and WebAppInstanceFunctionSlotTypeOutput values.
// You can construct a concrete instance of `WebAppInstanceFunctionSlotTypeInput` via:
//
//          WebAppInstanceFunctionSlotTypeArgs{...}
type WebAppInstanceFunctionSlotTypeInput interface {
	pulumi.Input

	ToWebAppInstanceFunctionSlotTypeOutput() WebAppInstanceFunctionSlotTypeOutput
	ToWebAppInstanceFunctionSlotTypeOutputWithContext(context.Context) WebAppInstanceFunctionSlotTypeOutput
}

// Function information.
type WebAppInstanceFunctionSlotTypeArgs struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// FunctionEnvelope resource specific properties
	Properties FunctionEnvelopeResponsePropertiesInput `pulumi:"properties"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebAppInstanceFunctionSlotTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppInstanceFunctionSlotType)(nil)).Elem()
}

func (i WebAppInstanceFunctionSlotTypeArgs) ToWebAppInstanceFunctionSlotTypeOutput() WebAppInstanceFunctionSlotTypeOutput {
	return i.ToWebAppInstanceFunctionSlotTypeOutputWithContext(context.Background())
}

func (i WebAppInstanceFunctionSlotTypeArgs) ToWebAppInstanceFunctionSlotTypeOutputWithContext(ctx context.Context) WebAppInstanceFunctionSlotTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppInstanceFunctionSlotTypeOutput)
}

// Function information.
type WebAppInstanceFunctionSlotTypeOutput struct{ *pulumi.OutputState }

func (WebAppInstanceFunctionSlotTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppInstanceFunctionSlotType)(nil)).Elem()
}

func (o WebAppInstanceFunctionSlotTypeOutput) ToWebAppInstanceFunctionSlotTypeOutput() WebAppInstanceFunctionSlotTypeOutput {
	return o
}

func (o WebAppInstanceFunctionSlotTypeOutput) ToWebAppInstanceFunctionSlotTypeOutputWithContext(ctx context.Context) WebAppInstanceFunctionSlotTypeOutput {
	return o
}

// Kind of resource.
func (o WebAppInstanceFunctionSlotTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebAppInstanceFunctionSlotType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o WebAppInstanceFunctionSlotTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppInstanceFunctionSlotType) string { return v.Name }).(pulumi.StringOutput)
}

// FunctionEnvelope resource specific properties
func (o WebAppInstanceFunctionSlotTypeOutput) Properties() FunctionEnvelopeResponsePropertiesOutput {
	return o.ApplyT(func(v WebAppInstanceFunctionSlotType) FunctionEnvelopeResponseProperties { return v.Properties }).(FunctionEnvelopeResponsePropertiesOutput)
}

// Resource type.
func (o WebAppInstanceFunctionSlotTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppInstanceFunctionSlotType) string { return v.Type }).(pulumi.StringOutput)
}

// Premier add-on.
type WebAppPremierAddOnType struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Location.
	Location string `pulumi:"location"`
	// Resource Name.
	Name string `pulumi:"name"`
	// PremierAddOn resource specific properties
	Properties PremierAddOnResponseProperties `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// WebAppPremierAddOnTypeInput is an input type that accepts WebAppPremierAddOnTypeArgs and WebAppPremierAddOnTypeOutput values.
// You can construct a concrete instance of `WebAppPremierAddOnTypeInput` via:
//
//          WebAppPremierAddOnTypeArgs{...}
type WebAppPremierAddOnTypeInput interface {
	pulumi.Input

	ToWebAppPremierAddOnTypeOutput() WebAppPremierAddOnTypeOutput
	ToWebAppPremierAddOnTypeOutputWithContext(context.Context) WebAppPremierAddOnTypeOutput
}

// Premier add-on.
type WebAppPremierAddOnTypeArgs struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Location.
	Location pulumi.StringInput `pulumi:"location"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// PremierAddOn resource specific properties
	Properties PremierAddOnResponsePropertiesInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebAppPremierAddOnTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppPremierAddOnType)(nil)).Elem()
}

func (i WebAppPremierAddOnTypeArgs) ToWebAppPremierAddOnTypeOutput() WebAppPremierAddOnTypeOutput {
	return i.ToWebAppPremierAddOnTypeOutputWithContext(context.Background())
}

func (i WebAppPremierAddOnTypeArgs) ToWebAppPremierAddOnTypeOutputWithContext(ctx context.Context) WebAppPremierAddOnTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppPremierAddOnTypeOutput)
}

// Premier add-on.
type WebAppPremierAddOnTypeOutput struct{ *pulumi.OutputState }

func (WebAppPremierAddOnTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppPremierAddOnType)(nil)).Elem()
}

func (o WebAppPremierAddOnTypeOutput) ToWebAppPremierAddOnTypeOutput() WebAppPremierAddOnTypeOutput {
	return o
}

func (o WebAppPremierAddOnTypeOutput) ToWebAppPremierAddOnTypeOutputWithContext(ctx context.Context) WebAppPremierAddOnTypeOutput {
	return o
}

// Kind of resource.
func (o WebAppPremierAddOnTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebAppPremierAddOnType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location.
func (o WebAppPremierAddOnTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppPremierAddOnType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name.
func (o WebAppPremierAddOnTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppPremierAddOnType) string { return v.Name }).(pulumi.StringOutput)
}

// PremierAddOn resource specific properties
func (o WebAppPremierAddOnTypeOutput) Properties() PremierAddOnResponsePropertiesOutput {
	return o.ApplyT(func(v WebAppPremierAddOnType) PremierAddOnResponseProperties { return v.Properties }).(PremierAddOnResponsePropertiesOutput)
}

// Resource tags.
func (o WebAppPremierAddOnTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v WebAppPremierAddOnType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o WebAppPremierAddOnTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppPremierAddOnType) string { return v.Type }).(pulumi.StringOutput)
}

// Premier add-on.
type WebAppPremierAddOnSlotType struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Location.
	Location string `pulumi:"location"`
	// Resource Name.
	Name string `pulumi:"name"`
	// PremierAddOn resource specific properties
	Properties PremierAddOnResponseProperties `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// WebAppPremierAddOnSlotTypeInput is an input type that accepts WebAppPremierAddOnSlotTypeArgs and WebAppPremierAddOnSlotTypeOutput values.
// You can construct a concrete instance of `WebAppPremierAddOnSlotTypeInput` via:
//
//          WebAppPremierAddOnSlotTypeArgs{...}
type WebAppPremierAddOnSlotTypeInput interface {
	pulumi.Input

	ToWebAppPremierAddOnSlotTypeOutput() WebAppPremierAddOnSlotTypeOutput
	ToWebAppPremierAddOnSlotTypeOutputWithContext(context.Context) WebAppPremierAddOnSlotTypeOutput
}

// Premier add-on.
type WebAppPremierAddOnSlotTypeArgs struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Location.
	Location pulumi.StringInput `pulumi:"location"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// PremierAddOn resource specific properties
	Properties PremierAddOnResponsePropertiesInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebAppPremierAddOnSlotTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppPremierAddOnSlotType)(nil)).Elem()
}

func (i WebAppPremierAddOnSlotTypeArgs) ToWebAppPremierAddOnSlotTypeOutput() WebAppPremierAddOnSlotTypeOutput {
	return i.ToWebAppPremierAddOnSlotTypeOutputWithContext(context.Background())
}

func (i WebAppPremierAddOnSlotTypeArgs) ToWebAppPremierAddOnSlotTypeOutputWithContext(ctx context.Context) WebAppPremierAddOnSlotTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppPremierAddOnSlotTypeOutput)
}

// Premier add-on.
type WebAppPremierAddOnSlotTypeOutput struct{ *pulumi.OutputState }

func (WebAppPremierAddOnSlotTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppPremierAddOnSlotType)(nil)).Elem()
}

func (o WebAppPremierAddOnSlotTypeOutput) ToWebAppPremierAddOnSlotTypeOutput() WebAppPremierAddOnSlotTypeOutput {
	return o
}

func (o WebAppPremierAddOnSlotTypeOutput) ToWebAppPremierAddOnSlotTypeOutputWithContext(ctx context.Context) WebAppPremierAddOnSlotTypeOutput {
	return o
}

// Kind of resource.
func (o WebAppPremierAddOnSlotTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebAppPremierAddOnSlotType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location.
func (o WebAppPremierAddOnSlotTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppPremierAddOnSlotType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name.
func (o WebAppPremierAddOnSlotTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppPremierAddOnSlotType) string { return v.Name }).(pulumi.StringOutput)
}

// PremierAddOn resource specific properties
func (o WebAppPremierAddOnSlotTypeOutput) Properties() PremierAddOnResponsePropertiesOutput {
	return o.ApplyT(func(v WebAppPremierAddOnSlotType) PremierAddOnResponseProperties { return v.Properties }).(PremierAddOnResponsePropertiesOutput)
}

// Resource tags.
func (o WebAppPremierAddOnSlotTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v WebAppPremierAddOnSlotType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o WebAppPremierAddOnSlotTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppPremierAddOnSlotType) string { return v.Type }).(pulumi.StringOutput)
}

// Public certificate object
type WebAppPublicCertificateType struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// PublicCertificate resource specific properties
	Properties PublicCertificateResponseProperties `pulumi:"properties"`
	// Resource type.
	Type string `pulumi:"type"`
}

// WebAppPublicCertificateTypeInput is an input type that accepts WebAppPublicCertificateTypeArgs and WebAppPublicCertificateTypeOutput values.
// You can construct a concrete instance of `WebAppPublicCertificateTypeInput` via:
//
//          WebAppPublicCertificateTypeArgs{...}
type WebAppPublicCertificateTypeInput interface {
	pulumi.Input

	ToWebAppPublicCertificateTypeOutput() WebAppPublicCertificateTypeOutput
	ToWebAppPublicCertificateTypeOutputWithContext(context.Context) WebAppPublicCertificateTypeOutput
}

// Public certificate object
type WebAppPublicCertificateTypeArgs struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// PublicCertificate resource specific properties
	Properties PublicCertificateResponsePropertiesInput `pulumi:"properties"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebAppPublicCertificateTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppPublicCertificateType)(nil)).Elem()
}

func (i WebAppPublicCertificateTypeArgs) ToWebAppPublicCertificateTypeOutput() WebAppPublicCertificateTypeOutput {
	return i.ToWebAppPublicCertificateTypeOutputWithContext(context.Background())
}

func (i WebAppPublicCertificateTypeArgs) ToWebAppPublicCertificateTypeOutputWithContext(ctx context.Context) WebAppPublicCertificateTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppPublicCertificateTypeOutput)
}

// Public certificate object
type WebAppPublicCertificateTypeOutput struct{ *pulumi.OutputState }

func (WebAppPublicCertificateTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppPublicCertificateType)(nil)).Elem()
}

func (o WebAppPublicCertificateTypeOutput) ToWebAppPublicCertificateTypeOutput() WebAppPublicCertificateTypeOutput {
	return o
}

func (o WebAppPublicCertificateTypeOutput) ToWebAppPublicCertificateTypeOutputWithContext(ctx context.Context) WebAppPublicCertificateTypeOutput {
	return o
}

// Kind of resource.
func (o WebAppPublicCertificateTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebAppPublicCertificateType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o WebAppPublicCertificateTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppPublicCertificateType) string { return v.Name }).(pulumi.StringOutput)
}

// PublicCertificate resource specific properties
func (o WebAppPublicCertificateTypeOutput) Properties() PublicCertificateResponsePropertiesOutput {
	return o.ApplyT(func(v WebAppPublicCertificateType) PublicCertificateResponseProperties { return v.Properties }).(PublicCertificateResponsePropertiesOutput)
}

// Resource type.
func (o WebAppPublicCertificateTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppPublicCertificateType) string { return v.Type }).(pulumi.StringOutput)
}

// Public certificate object
type WebAppPublicCertificateSlotType struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// PublicCertificate resource specific properties
	Properties PublicCertificateResponseProperties `pulumi:"properties"`
	// Resource type.
	Type string `pulumi:"type"`
}

// WebAppPublicCertificateSlotTypeInput is an input type that accepts WebAppPublicCertificateSlotTypeArgs and WebAppPublicCertificateSlotTypeOutput values.
// You can construct a concrete instance of `WebAppPublicCertificateSlotTypeInput` via:
//
//          WebAppPublicCertificateSlotTypeArgs{...}
type WebAppPublicCertificateSlotTypeInput interface {
	pulumi.Input

	ToWebAppPublicCertificateSlotTypeOutput() WebAppPublicCertificateSlotTypeOutput
	ToWebAppPublicCertificateSlotTypeOutputWithContext(context.Context) WebAppPublicCertificateSlotTypeOutput
}

// Public certificate object
type WebAppPublicCertificateSlotTypeArgs struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// PublicCertificate resource specific properties
	Properties PublicCertificateResponsePropertiesInput `pulumi:"properties"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebAppPublicCertificateSlotTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppPublicCertificateSlotType)(nil)).Elem()
}

func (i WebAppPublicCertificateSlotTypeArgs) ToWebAppPublicCertificateSlotTypeOutput() WebAppPublicCertificateSlotTypeOutput {
	return i.ToWebAppPublicCertificateSlotTypeOutputWithContext(context.Background())
}

func (i WebAppPublicCertificateSlotTypeArgs) ToWebAppPublicCertificateSlotTypeOutputWithContext(ctx context.Context) WebAppPublicCertificateSlotTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppPublicCertificateSlotTypeOutput)
}

// Public certificate object
type WebAppPublicCertificateSlotTypeOutput struct{ *pulumi.OutputState }

func (WebAppPublicCertificateSlotTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppPublicCertificateSlotType)(nil)).Elem()
}

func (o WebAppPublicCertificateSlotTypeOutput) ToWebAppPublicCertificateSlotTypeOutput() WebAppPublicCertificateSlotTypeOutput {
	return o
}

func (o WebAppPublicCertificateSlotTypeOutput) ToWebAppPublicCertificateSlotTypeOutputWithContext(ctx context.Context) WebAppPublicCertificateSlotTypeOutput {
	return o
}

// Kind of resource.
func (o WebAppPublicCertificateSlotTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebAppPublicCertificateSlotType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o WebAppPublicCertificateSlotTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppPublicCertificateSlotType) string { return v.Name }).(pulumi.StringOutput)
}

// PublicCertificate resource specific properties
func (o WebAppPublicCertificateSlotTypeOutput) Properties() PublicCertificateResponsePropertiesOutput {
	return o.ApplyT(func(v WebAppPublicCertificateSlotType) PublicCertificateResponseProperties { return v.Properties }).(PublicCertificateResponsePropertiesOutput)
}

// Resource type.
func (o WebAppPublicCertificateSlotTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppPublicCertificateSlotType) string { return v.Type }).(pulumi.StringOutput)
}

// Hybrid Connection for an App Service app.
type WebAppRelayServiceConnectionType struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// RelayServiceConnectionEntity resource specific properties
	Properties RelayServiceConnectionEntityResponseProperties `pulumi:"properties"`
	// Resource type.
	Type string `pulumi:"type"`
}

// WebAppRelayServiceConnectionTypeInput is an input type that accepts WebAppRelayServiceConnectionTypeArgs and WebAppRelayServiceConnectionTypeOutput values.
// You can construct a concrete instance of `WebAppRelayServiceConnectionTypeInput` via:
//
//          WebAppRelayServiceConnectionTypeArgs{...}
type WebAppRelayServiceConnectionTypeInput interface {
	pulumi.Input

	ToWebAppRelayServiceConnectionTypeOutput() WebAppRelayServiceConnectionTypeOutput
	ToWebAppRelayServiceConnectionTypeOutputWithContext(context.Context) WebAppRelayServiceConnectionTypeOutput
}

// Hybrid Connection for an App Service app.
type WebAppRelayServiceConnectionTypeArgs struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// RelayServiceConnectionEntity resource specific properties
	Properties RelayServiceConnectionEntityResponsePropertiesInput `pulumi:"properties"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebAppRelayServiceConnectionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppRelayServiceConnectionType)(nil)).Elem()
}

func (i WebAppRelayServiceConnectionTypeArgs) ToWebAppRelayServiceConnectionTypeOutput() WebAppRelayServiceConnectionTypeOutput {
	return i.ToWebAppRelayServiceConnectionTypeOutputWithContext(context.Background())
}

func (i WebAppRelayServiceConnectionTypeArgs) ToWebAppRelayServiceConnectionTypeOutputWithContext(ctx context.Context) WebAppRelayServiceConnectionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppRelayServiceConnectionTypeOutput)
}

// Hybrid Connection for an App Service app.
type WebAppRelayServiceConnectionTypeOutput struct{ *pulumi.OutputState }

func (WebAppRelayServiceConnectionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppRelayServiceConnectionType)(nil)).Elem()
}

func (o WebAppRelayServiceConnectionTypeOutput) ToWebAppRelayServiceConnectionTypeOutput() WebAppRelayServiceConnectionTypeOutput {
	return o
}

func (o WebAppRelayServiceConnectionTypeOutput) ToWebAppRelayServiceConnectionTypeOutputWithContext(ctx context.Context) WebAppRelayServiceConnectionTypeOutput {
	return o
}

// Kind of resource.
func (o WebAppRelayServiceConnectionTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebAppRelayServiceConnectionType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o WebAppRelayServiceConnectionTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppRelayServiceConnectionType) string { return v.Name }).(pulumi.StringOutput)
}

// RelayServiceConnectionEntity resource specific properties
func (o WebAppRelayServiceConnectionTypeOutput) Properties() RelayServiceConnectionEntityResponsePropertiesOutput {
	return o.ApplyT(func(v WebAppRelayServiceConnectionType) RelayServiceConnectionEntityResponseProperties {
		return v.Properties
	}).(RelayServiceConnectionEntityResponsePropertiesOutput)
}

// Resource type.
func (o WebAppRelayServiceConnectionTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppRelayServiceConnectionType) string { return v.Type }).(pulumi.StringOutput)
}

// Hybrid Connection for an App Service app.
type WebAppRelayServiceConnectionSlotType struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// RelayServiceConnectionEntity resource specific properties
	Properties RelayServiceConnectionEntityResponseProperties `pulumi:"properties"`
	// Resource type.
	Type string `pulumi:"type"`
}

// WebAppRelayServiceConnectionSlotTypeInput is an input type that accepts WebAppRelayServiceConnectionSlotTypeArgs and WebAppRelayServiceConnectionSlotTypeOutput values.
// You can construct a concrete instance of `WebAppRelayServiceConnectionSlotTypeInput` via:
//
//          WebAppRelayServiceConnectionSlotTypeArgs{...}
type WebAppRelayServiceConnectionSlotTypeInput interface {
	pulumi.Input

	ToWebAppRelayServiceConnectionSlotTypeOutput() WebAppRelayServiceConnectionSlotTypeOutput
	ToWebAppRelayServiceConnectionSlotTypeOutputWithContext(context.Context) WebAppRelayServiceConnectionSlotTypeOutput
}

// Hybrid Connection for an App Service app.
type WebAppRelayServiceConnectionSlotTypeArgs struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// RelayServiceConnectionEntity resource specific properties
	Properties RelayServiceConnectionEntityResponsePropertiesInput `pulumi:"properties"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebAppRelayServiceConnectionSlotTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppRelayServiceConnectionSlotType)(nil)).Elem()
}

func (i WebAppRelayServiceConnectionSlotTypeArgs) ToWebAppRelayServiceConnectionSlotTypeOutput() WebAppRelayServiceConnectionSlotTypeOutput {
	return i.ToWebAppRelayServiceConnectionSlotTypeOutputWithContext(context.Background())
}

func (i WebAppRelayServiceConnectionSlotTypeArgs) ToWebAppRelayServiceConnectionSlotTypeOutputWithContext(ctx context.Context) WebAppRelayServiceConnectionSlotTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppRelayServiceConnectionSlotTypeOutput)
}

// Hybrid Connection for an App Service app.
type WebAppRelayServiceConnectionSlotTypeOutput struct{ *pulumi.OutputState }

func (WebAppRelayServiceConnectionSlotTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppRelayServiceConnectionSlotType)(nil)).Elem()
}

func (o WebAppRelayServiceConnectionSlotTypeOutput) ToWebAppRelayServiceConnectionSlotTypeOutput() WebAppRelayServiceConnectionSlotTypeOutput {
	return o
}

func (o WebAppRelayServiceConnectionSlotTypeOutput) ToWebAppRelayServiceConnectionSlotTypeOutputWithContext(ctx context.Context) WebAppRelayServiceConnectionSlotTypeOutput {
	return o
}

// Kind of resource.
func (o WebAppRelayServiceConnectionSlotTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebAppRelayServiceConnectionSlotType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o WebAppRelayServiceConnectionSlotTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppRelayServiceConnectionSlotType) string { return v.Name }).(pulumi.StringOutput)
}

// RelayServiceConnectionEntity resource specific properties
func (o WebAppRelayServiceConnectionSlotTypeOutput) Properties() RelayServiceConnectionEntityResponsePropertiesOutput {
	return o.ApplyT(func(v WebAppRelayServiceConnectionSlotType) RelayServiceConnectionEntityResponseProperties {
		return v.Properties
	}).(RelayServiceConnectionEntityResponsePropertiesOutput)
}

// Resource type.
func (o WebAppRelayServiceConnectionSlotTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppRelayServiceConnectionSlotType) string { return v.Type }).(pulumi.StringOutput)
}

// Site Extension Information.
type WebAppSiteExtensionType struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// SiteExtensionInfo resource specific properties
	Properties SiteExtensionInfoResponseProperties `pulumi:"properties"`
	// Resource type.
	Type string `pulumi:"type"`
}

// WebAppSiteExtensionTypeInput is an input type that accepts WebAppSiteExtensionTypeArgs and WebAppSiteExtensionTypeOutput values.
// You can construct a concrete instance of `WebAppSiteExtensionTypeInput` via:
//
//          WebAppSiteExtensionTypeArgs{...}
type WebAppSiteExtensionTypeInput interface {
	pulumi.Input

	ToWebAppSiteExtensionTypeOutput() WebAppSiteExtensionTypeOutput
	ToWebAppSiteExtensionTypeOutputWithContext(context.Context) WebAppSiteExtensionTypeOutput
}

// Site Extension Information.
type WebAppSiteExtensionTypeArgs struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// SiteExtensionInfo resource specific properties
	Properties SiteExtensionInfoResponsePropertiesInput `pulumi:"properties"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebAppSiteExtensionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppSiteExtensionType)(nil)).Elem()
}

func (i WebAppSiteExtensionTypeArgs) ToWebAppSiteExtensionTypeOutput() WebAppSiteExtensionTypeOutput {
	return i.ToWebAppSiteExtensionTypeOutputWithContext(context.Background())
}

func (i WebAppSiteExtensionTypeArgs) ToWebAppSiteExtensionTypeOutputWithContext(ctx context.Context) WebAppSiteExtensionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppSiteExtensionTypeOutput)
}

// Site Extension Information.
type WebAppSiteExtensionTypeOutput struct{ *pulumi.OutputState }

func (WebAppSiteExtensionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppSiteExtensionType)(nil)).Elem()
}

func (o WebAppSiteExtensionTypeOutput) ToWebAppSiteExtensionTypeOutput() WebAppSiteExtensionTypeOutput {
	return o
}

func (o WebAppSiteExtensionTypeOutput) ToWebAppSiteExtensionTypeOutputWithContext(ctx context.Context) WebAppSiteExtensionTypeOutput {
	return o
}

// Kind of resource.
func (o WebAppSiteExtensionTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebAppSiteExtensionType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o WebAppSiteExtensionTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppSiteExtensionType) string { return v.Name }).(pulumi.StringOutput)
}

// SiteExtensionInfo resource specific properties
func (o WebAppSiteExtensionTypeOutput) Properties() SiteExtensionInfoResponsePropertiesOutput {
	return o.ApplyT(func(v WebAppSiteExtensionType) SiteExtensionInfoResponseProperties { return v.Properties }).(SiteExtensionInfoResponsePropertiesOutput)
}

// Resource type.
func (o WebAppSiteExtensionTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppSiteExtensionType) string { return v.Type }).(pulumi.StringOutput)
}

// Site Extension Information.
type WebAppSiteExtensionSlotType struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// SiteExtensionInfo resource specific properties
	Properties SiteExtensionInfoResponseProperties `pulumi:"properties"`
	// Resource type.
	Type string `pulumi:"type"`
}

// WebAppSiteExtensionSlotTypeInput is an input type that accepts WebAppSiteExtensionSlotTypeArgs and WebAppSiteExtensionSlotTypeOutput values.
// You can construct a concrete instance of `WebAppSiteExtensionSlotTypeInput` via:
//
//          WebAppSiteExtensionSlotTypeArgs{...}
type WebAppSiteExtensionSlotTypeInput interface {
	pulumi.Input

	ToWebAppSiteExtensionSlotTypeOutput() WebAppSiteExtensionSlotTypeOutput
	ToWebAppSiteExtensionSlotTypeOutputWithContext(context.Context) WebAppSiteExtensionSlotTypeOutput
}

// Site Extension Information.
type WebAppSiteExtensionSlotTypeArgs struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// SiteExtensionInfo resource specific properties
	Properties SiteExtensionInfoResponsePropertiesInput `pulumi:"properties"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebAppSiteExtensionSlotTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppSiteExtensionSlotType)(nil)).Elem()
}

func (i WebAppSiteExtensionSlotTypeArgs) ToWebAppSiteExtensionSlotTypeOutput() WebAppSiteExtensionSlotTypeOutput {
	return i.ToWebAppSiteExtensionSlotTypeOutputWithContext(context.Background())
}

func (i WebAppSiteExtensionSlotTypeArgs) ToWebAppSiteExtensionSlotTypeOutputWithContext(ctx context.Context) WebAppSiteExtensionSlotTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppSiteExtensionSlotTypeOutput)
}

// Site Extension Information.
type WebAppSiteExtensionSlotTypeOutput struct{ *pulumi.OutputState }

func (WebAppSiteExtensionSlotTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppSiteExtensionSlotType)(nil)).Elem()
}

func (o WebAppSiteExtensionSlotTypeOutput) ToWebAppSiteExtensionSlotTypeOutput() WebAppSiteExtensionSlotTypeOutput {
	return o
}

func (o WebAppSiteExtensionSlotTypeOutput) ToWebAppSiteExtensionSlotTypeOutputWithContext(ctx context.Context) WebAppSiteExtensionSlotTypeOutput {
	return o
}

// Kind of resource.
func (o WebAppSiteExtensionSlotTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebAppSiteExtensionSlotType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o WebAppSiteExtensionSlotTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppSiteExtensionSlotType) string { return v.Name }).(pulumi.StringOutput)
}

// SiteExtensionInfo resource specific properties
func (o WebAppSiteExtensionSlotTypeOutput) Properties() SiteExtensionInfoResponsePropertiesOutput {
	return o.ApplyT(func(v WebAppSiteExtensionSlotType) SiteExtensionInfoResponseProperties { return v.Properties }).(SiteExtensionInfoResponsePropertiesOutput)
}

// Resource type.
func (o WebAppSiteExtensionSlotTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppSiteExtensionSlotType) string { return v.Type }).(pulumi.StringOutput)
}

// A web app, a mobile app backend, or an API app.
type WebAppSlotType struct {
	// Managed service identity.
	Identity *ManagedServiceIdentityResponse `pulumi:"identity"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Location.
	Location string `pulumi:"location"`
	// Resource Name.
	Name string `pulumi:"name"`
	// Site resource specific properties
	Properties SiteResponseProperties `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// WebAppSlotTypeInput is an input type that accepts WebAppSlotTypeArgs and WebAppSlotTypeOutput values.
// You can construct a concrete instance of `WebAppSlotTypeInput` via:
//
//          WebAppSlotTypeArgs{...}
type WebAppSlotTypeInput interface {
	pulumi.Input

	ToWebAppSlotTypeOutput() WebAppSlotTypeOutput
	ToWebAppSlotTypeOutputWithContext(context.Context) WebAppSlotTypeOutput
}

// A web app, a mobile app backend, or an API app.
type WebAppSlotTypeArgs struct {
	// Managed service identity.
	Identity ManagedServiceIdentityResponsePtrInput `pulumi:"identity"`
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Location.
	Location pulumi.StringInput `pulumi:"location"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// Site resource specific properties
	Properties SiteResponsePropertiesInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebAppSlotTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppSlotType)(nil)).Elem()
}

func (i WebAppSlotTypeArgs) ToWebAppSlotTypeOutput() WebAppSlotTypeOutput {
	return i.ToWebAppSlotTypeOutputWithContext(context.Background())
}

func (i WebAppSlotTypeArgs) ToWebAppSlotTypeOutputWithContext(ctx context.Context) WebAppSlotTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppSlotTypeOutput)
}

// A web app, a mobile app backend, or an API app.
type WebAppSlotTypeOutput struct{ *pulumi.OutputState }

func (WebAppSlotTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppSlotType)(nil)).Elem()
}

func (o WebAppSlotTypeOutput) ToWebAppSlotTypeOutput() WebAppSlotTypeOutput {
	return o
}

func (o WebAppSlotTypeOutput) ToWebAppSlotTypeOutputWithContext(ctx context.Context) WebAppSlotTypeOutput {
	return o
}

// Managed service identity.
func (o WebAppSlotTypeOutput) Identity() ManagedServiceIdentityResponsePtrOutput {
	return o.ApplyT(func(v WebAppSlotType) *ManagedServiceIdentityResponse { return v.Identity }).(ManagedServiceIdentityResponsePtrOutput)
}

// Kind of resource.
func (o WebAppSlotTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebAppSlotType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location.
func (o WebAppSlotTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppSlotType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name.
func (o WebAppSlotTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppSlotType) string { return v.Name }).(pulumi.StringOutput)
}

// Site resource specific properties
func (o WebAppSlotTypeOutput) Properties() SiteResponsePropertiesOutput {
	return o.ApplyT(func(v WebAppSlotType) SiteResponseProperties { return v.Properties }).(SiteResponsePropertiesOutput)
}

// Resource tags.
func (o WebAppSlotTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v WebAppSlotType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o WebAppSlotTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppSlotType) string { return v.Type }).(pulumi.StringOutput)
}

// Source control configuration for an app.
type WebAppSourceControlType struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// SiteSourceControl resource specific properties
	Properties SiteSourceControlResponseProperties `pulumi:"properties"`
	// Resource type.
	Type string `pulumi:"type"`
}

// WebAppSourceControlTypeInput is an input type that accepts WebAppSourceControlTypeArgs and WebAppSourceControlTypeOutput values.
// You can construct a concrete instance of `WebAppSourceControlTypeInput` via:
//
//          WebAppSourceControlTypeArgs{...}
type WebAppSourceControlTypeInput interface {
	pulumi.Input

	ToWebAppSourceControlTypeOutput() WebAppSourceControlTypeOutput
	ToWebAppSourceControlTypeOutputWithContext(context.Context) WebAppSourceControlTypeOutput
}

// Source control configuration for an app.
type WebAppSourceControlTypeArgs struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// SiteSourceControl resource specific properties
	Properties SiteSourceControlResponsePropertiesInput `pulumi:"properties"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebAppSourceControlTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppSourceControlType)(nil)).Elem()
}

func (i WebAppSourceControlTypeArgs) ToWebAppSourceControlTypeOutput() WebAppSourceControlTypeOutput {
	return i.ToWebAppSourceControlTypeOutputWithContext(context.Background())
}

func (i WebAppSourceControlTypeArgs) ToWebAppSourceControlTypeOutputWithContext(ctx context.Context) WebAppSourceControlTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppSourceControlTypeOutput)
}

// Source control configuration for an app.
type WebAppSourceControlTypeOutput struct{ *pulumi.OutputState }

func (WebAppSourceControlTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppSourceControlType)(nil)).Elem()
}

func (o WebAppSourceControlTypeOutput) ToWebAppSourceControlTypeOutput() WebAppSourceControlTypeOutput {
	return o
}

func (o WebAppSourceControlTypeOutput) ToWebAppSourceControlTypeOutputWithContext(ctx context.Context) WebAppSourceControlTypeOutput {
	return o
}

// Kind of resource.
func (o WebAppSourceControlTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebAppSourceControlType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o WebAppSourceControlTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppSourceControlType) string { return v.Name }).(pulumi.StringOutput)
}

// SiteSourceControl resource specific properties
func (o WebAppSourceControlTypeOutput) Properties() SiteSourceControlResponsePropertiesOutput {
	return o.ApplyT(func(v WebAppSourceControlType) SiteSourceControlResponseProperties { return v.Properties }).(SiteSourceControlResponsePropertiesOutput)
}

// Resource type.
func (o WebAppSourceControlTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppSourceControlType) string { return v.Type }).(pulumi.StringOutput)
}

// Source control configuration for an app.
type WebAppSourceControlSlotType struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// SiteSourceControl resource specific properties
	Properties SiteSourceControlResponseProperties `pulumi:"properties"`
	// Resource type.
	Type string `pulumi:"type"`
}

// WebAppSourceControlSlotTypeInput is an input type that accepts WebAppSourceControlSlotTypeArgs and WebAppSourceControlSlotTypeOutput values.
// You can construct a concrete instance of `WebAppSourceControlSlotTypeInput` via:
//
//          WebAppSourceControlSlotTypeArgs{...}
type WebAppSourceControlSlotTypeInput interface {
	pulumi.Input

	ToWebAppSourceControlSlotTypeOutput() WebAppSourceControlSlotTypeOutput
	ToWebAppSourceControlSlotTypeOutputWithContext(context.Context) WebAppSourceControlSlotTypeOutput
}

// Source control configuration for an app.
type WebAppSourceControlSlotTypeArgs struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// SiteSourceControl resource specific properties
	Properties SiteSourceControlResponsePropertiesInput `pulumi:"properties"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebAppSourceControlSlotTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppSourceControlSlotType)(nil)).Elem()
}

func (i WebAppSourceControlSlotTypeArgs) ToWebAppSourceControlSlotTypeOutput() WebAppSourceControlSlotTypeOutput {
	return i.ToWebAppSourceControlSlotTypeOutputWithContext(context.Background())
}

func (i WebAppSourceControlSlotTypeArgs) ToWebAppSourceControlSlotTypeOutputWithContext(ctx context.Context) WebAppSourceControlSlotTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppSourceControlSlotTypeOutput)
}

// Source control configuration for an app.
type WebAppSourceControlSlotTypeOutput struct{ *pulumi.OutputState }

func (WebAppSourceControlSlotTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppSourceControlSlotType)(nil)).Elem()
}

func (o WebAppSourceControlSlotTypeOutput) ToWebAppSourceControlSlotTypeOutput() WebAppSourceControlSlotTypeOutput {
	return o
}

func (o WebAppSourceControlSlotTypeOutput) ToWebAppSourceControlSlotTypeOutputWithContext(ctx context.Context) WebAppSourceControlSlotTypeOutput {
	return o
}

// Kind of resource.
func (o WebAppSourceControlSlotTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebAppSourceControlSlotType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o WebAppSourceControlSlotTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppSourceControlSlotType) string { return v.Name }).(pulumi.StringOutput)
}

// SiteSourceControl resource specific properties
func (o WebAppSourceControlSlotTypeOutput) Properties() SiteSourceControlResponsePropertiesOutput {
	return o.ApplyT(func(v WebAppSourceControlSlotType) SiteSourceControlResponseProperties { return v.Properties }).(SiteSourceControlResponsePropertiesOutput)
}

// Resource type.
func (o WebAppSourceControlSlotTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppSourceControlSlotType) string { return v.Type }).(pulumi.StringOutput)
}

// Swift Virtual Network Contract. This is used to enable the new Swift way of doing virtual network integration.
type WebAppSwiftVirtualNetworkConnectionType struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// SwiftVirtualNetwork resource specific properties
	Properties SwiftVirtualNetworkResponseProperties `pulumi:"properties"`
	// Resource type.
	Type string `pulumi:"type"`
}

// WebAppSwiftVirtualNetworkConnectionTypeInput is an input type that accepts WebAppSwiftVirtualNetworkConnectionTypeArgs and WebAppSwiftVirtualNetworkConnectionTypeOutput values.
// You can construct a concrete instance of `WebAppSwiftVirtualNetworkConnectionTypeInput` via:
//
//          WebAppSwiftVirtualNetworkConnectionTypeArgs{...}
type WebAppSwiftVirtualNetworkConnectionTypeInput interface {
	pulumi.Input

	ToWebAppSwiftVirtualNetworkConnectionTypeOutput() WebAppSwiftVirtualNetworkConnectionTypeOutput
	ToWebAppSwiftVirtualNetworkConnectionTypeOutputWithContext(context.Context) WebAppSwiftVirtualNetworkConnectionTypeOutput
}

// Swift Virtual Network Contract. This is used to enable the new Swift way of doing virtual network integration.
type WebAppSwiftVirtualNetworkConnectionTypeArgs struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// SwiftVirtualNetwork resource specific properties
	Properties SwiftVirtualNetworkResponsePropertiesInput `pulumi:"properties"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebAppSwiftVirtualNetworkConnectionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppSwiftVirtualNetworkConnectionType)(nil)).Elem()
}

func (i WebAppSwiftVirtualNetworkConnectionTypeArgs) ToWebAppSwiftVirtualNetworkConnectionTypeOutput() WebAppSwiftVirtualNetworkConnectionTypeOutput {
	return i.ToWebAppSwiftVirtualNetworkConnectionTypeOutputWithContext(context.Background())
}

func (i WebAppSwiftVirtualNetworkConnectionTypeArgs) ToWebAppSwiftVirtualNetworkConnectionTypeOutputWithContext(ctx context.Context) WebAppSwiftVirtualNetworkConnectionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppSwiftVirtualNetworkConnectionTypeOutput)
}

// Swift Virtual Network Contract. This is used to enable the new Swift way of doing virtual network integration.
type WebAppSwiftVirtualNetworkConnectionTypeOutput struct{ *pulumi.OutputState }

func (WebAppSwiftVirtualNetworkConnectionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppSwiftVirtualNetworkConnectionType)(nil)).Elem()
}

func (o WebAppSwiftVirtualNetworkConnectionTypeOutput) ToWebAppSwiftVirtualNetworkConnectionTypeOutput() WebAppSwiftVirtualNetworkConnectionTypeOutput {
	return o
}

func (o WebAppSwiftVirtualNetworkConnectionTypeOutput) ToWebAppSwiftVirtualNetworkConnectionTypeOutputWithContext(ctx context.Context) WebAppSwiftVirtualNetworkConnectionTypeOutput {
	return o
}

// Kind of resource.
func (o WebAppSwiftVirtualNetworkConnectionTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebAppSwiftVirtualNetworkConnectionType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o WebAppSwiftVirtualNetworkConnectionTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppSwiftVirtualNetworkConnectionType) string { return v.Name }).(pulumi.StringOutput)
}

// SwiftVirtualNetwork resource specific properties
func (o WebAppSwiftVirtualNetworkConnectionTypeOutput) Properties() SwiftVirtualNetworkResponsePropertiesOutput {
	return o.ApplyT(func(v WebAppSwiftVirtualNetworkConnectionType) SwiftVirtualNetworkResponseProperties {
		return v.Properties
	}).(SwiftVirtualNetworkResponsePropertiesOutput)
}

// Resource type.
func (o WebAppSwiftVirtualNetworkConnectionTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppSwiftVirtualNetworkConnectionType) string { return v.Type }).(pulumi.StringOutput)
}

// Swift Virtual Network Contract. This is used to enable the new Swift way of doing virtual network integration.
type WebAppSwiftVirtualNetworkConnectionSlotType struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// SwiftVirtualNetwork resource specific properties
	Properties SwiftVirtualNetworkResponseProperties `pulumi:"properties"`
	// Resource type.
	Type string `pulumi:"type"`
}

// WebAppSwiftVirtualNetworkConnectionSlotTypeInput is an input type that accepts WebAppSwiftVirtualNetworkConnectionSlotTypeArgs and WebAppSwiftVirtualNetworkConnectionSlotTypeOutput values.
// You can construct a concrete instance of `WebAppSwiftVirtualNetworkConnectionSlotTypeInput` via:
//
//          WebAppSwiftVirtualNetworkConnectionSlotTypeArgs{...}
type WebAppSwiftVirtualNetworkConnectionSlotTypeInput interface {
	pulumi.Input

	ToWebAppSwiftVirtualNetworkConnectionSlotTypeOutput() WebAppSwiftVirtualNetworkConnectionSlotTypeOutput
	ToWebAppSwiftVirtualNetworkConnectionSlotTypeOutputWithContext(context.Context) WebAppSwiftVirtualNetworkConnectionSlotTypeOutput
}

// Swift Virtual Network Contract. This is used to enable the new Swift way of doing virtual network integration.
type WebAppSwiftVirtualNetworkConnectionSlotTypeArgs struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// SwiftVirtualNetwork resource specific properties
	Properties SwiftVirtualNetworkResponsePropertiesInput `pulumi:"properties"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebAppSwiftVirtualNetworkConnectionSlotTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppSwiftVirtualNetworkConnectionSlotType)(nil)).Elem()
}

func (i WebAppSwiftVirtualNetworkConnectionSlotTypeArgs) ToWebAppSwiftVirtualNetworkConnectionSlotTypeOutput() WebAppSwiftVirtualNetworkConnectionSlotTypeOutput {
	return i.ToWebAppSwiftVirtualNetworkConnectionSlotTypeOutputWithContext(context.Background())
}

func (i WebAppSwiftVirtualNetworkConnectionSlotTypeArgs) ToWebAppSwiftVirtualNetworkConnectionSlotTypeOutputWithContext(ctx context.Context) WebAppSwiftVirtualNetworkConnectionSlotTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppSwiftVirtualNetworkConnectionSlotTypeOutput)
}

// Swift Virtual Network Contract. This is used to enable the new Swift way of doing virtual network integration.
type WebAppSwiftVirtualNetworkConnectionSlotTypeOutput struct{ *pulumi.OutputState }

func (WebAppSwiftVirtualNetworkConnectionSlotTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppSwiftVirtualNetworkConnectionSlotType)(nil)).Elem()
}

func (o WebAppSwiftVirtualNetworkConnectionSlotTypeOutput) ToWebAppSwiftVirtualNetworkConnectionSlotTypeOutput() WebAppSwiftVirtualNetworkConnectionSlotTypeOutput {
	return o
}

func (o WebAppSwiftVirtualNetworkConnectionSlotTypeOutput) ToWebAppSwiftVirtualNetworkConnectionSlotTypeOutputWithContext(ctx context.Context) WebAppSwiftVirtualNetworkConnectionSlotTypeOutput {
	return o
}

// Kind of resource.
func (o WebAppSwiftVirtualNetworkConnectionSlotTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebAppSwiftVirtualNetworkConnectionSlotType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o WebAppSwiftVirtualNetworkConnectionSlotTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppSwiftVirtualNetworkConnectionSlotType) string { return v.Name }).(pulumi.StringOutput)
}

// SwiftVirtualNetwork resource specific properties
func (o WebAppSwiftVirtualNetworkConnectionSlotTypeOutput) Properties() SwiftVirtualNetworkResponsePropertiesOutput {
	return o.ApplyT(func(v WebAppSwiftVirtualNetworkConnectionSlotType) SwiftVirtualNetworkResponseProperties {
		return v.Properties
	}).(SwiftVirtualNetworkResponsePropertiesOutput)
}

// Resource type.
func (o WebAppSwiftVirtualNetworkConnectionSlotTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppSwiftVirtualNetworkConnectionSlotType) string { return v.Type }).(pulumi.StringOutput)
}

// Virtual Network information contract.
type WebAppVnetConnectionType struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// VnetInfo resource specific properties
	Properties VnetInfoResponseProperties `pulumi:"properties"`
	// Resource type.
	Type string `pulumi:"type"`
}

// WebAppVnetConnectionTypeInput is an input type that accepts WebAppVnetConnectionTypeArgs and WebAppVnetConnectionTypeOutput values.
// You can construct a concrete instance of `WebAppVnetConnectionTypeInput` via:
//
//          WebAppVnetConnectionTypeArgs{...}
type WebAppVnetConnectionTypeInput interface {
	pulumi.Input

	ToWebAppVnetConnectionTypeOutput() WebAppVnetConnectionTypeOutput
	ToWebAppVnetConnectionTypeOutputWithContext(context.Context) WebAppVnetConnectionTypeOutput
}

// Virtual Network information contract.
type WebAppVnetConnectionTypeArgs struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// VnetInfo resource specific properties
	Properties VnetInfoResponsePropertiesInput `pulumi:"properties"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebAppVnetConnectionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppVnetConnectionType)(nil)).Elem()
}

func (i WebAppVnetConnectionTypeArgs) ToWebAppVnetConnectionTypeOutput() WebAppVnetConnectionTypeOutput {
	return i.ToWebAppVnetConnectionTypeOutputWithContext(context.Background())
}

func (i WebAppVnetConnectionTypeArgs) ToWebAppVnetConnectionTypeOutputWithContext(ctx context.Context) WebAppVnetConnectionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppVnetConnectionTypeOutput)
}

// Virtual Network information contract.
type WebAppVnetConnectionTypeOutput struct{ *pulumi.OutputState }

func (WebAppVnetConnectionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppVnetConnectionType)(nil)).Elem()
}

func (o WebAppVnetConnectionTypeOutput) ToWebAppVnetConnectionTypeOutput() WebAppVnetConnectionTypeOutput {
	return o
}

func (o WebAppVnetConnectionTypeOutput) ToWebAppVnetConnectionTypeOutputWithContext(ctx context.Context) WebAppVnetConnectionTypeOutput {
	return o
}

// Kind of resource.
func (o WebAppVnetConnectionTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebAppVnetConnectionType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o WebAppVnetConnectionTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppVnetConnectionType) string { return v.Name }).(pulumi.StringOutput)
}

// VnetInfo resource specific properties
func (o WebAppVnetConnectionTypeOutput) Properties() VnetInfoResponsePropertiesOutput {
	return o.ApplyT(func(v WebAppVnetConnectionType) VnetInfoResponseProperties { return v.Properties }).(VnetInfoResponsePropertiesOutput)
}

// Resource type.
func (o WebAppVnetConnectionTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppVnetConnectionType) string { return v.Type }).(pulumi.StringOutput)
}

// Virtual Network information contract.
type WebAppVnetConnectionSlotType struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// VnetInfo resource specific properties
	Properties VnetInfoResponseProperties `pulumi:"properties"`
	// Resource type.
	Type string `pulumi:"type"`
}

// WebAppVnetConnectionSlotTypeInput is an input type that accepts WebAppVnetConnectionSlotTypeArgs and WebAppVnetConnectionSlotTypeOutput values.
// You can construct a concrete instance of `WebAppVnetConnectionSlotTypeInput` via:
//
//          WebAppVnetConnectionSlotTypeArgs{...}
type WebAppVnetConnectionSlotTypeInput interface {
	pulumi.Input

	ToWebAppVnetConnectionSlotTypeOutput() WebAppVnetConnectionSlotTypeOutput
	ToWebAppVnetConnectionSlotTypeOutputWithContext(context.Context) WebAppVnetConnectionSlotTypeOutput
}

// Virtual Network information contract.
type WebAppVnetConnectionSlotTypeArgs struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// VnetInfo resource specific properties
	Properties VnetInfoResponsePropertiesInput `pulumi:"properties"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebAppVnetConnectionSlotTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppVnetConnectionSlotType)(nil)).Elem()
}

func (i WebAppVnetConnectionSlotTypeArgs) ToWebAppVnetConnectionSlotTypeOutput() WebAppVnetConnectionSlotTypeOutput {
	return i.ToWebAppVnetConnectionSlotTypeOutputWithContext(context.Background())
}

func (i WebAppVnetConnectionSlotTypeArgs) ToWebAppVnetConnectionSlotTypeOutputWithContext(ctx context.Context) WebAppVnetConnectionSlotTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppVnetConnectionSlotTypeOutput)
}

// Virtual Network information contract.
type WebAppVnetConnectionSlotTypeOutput struct{ *pulumi.OutputState }

func (WebAppVnetConnectionSlotTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppVnetConnectionSlotType)(nil)).Elem()
}

func (o WebAppVnetConnectionSlotTypeOutput) ToWebAppVnetConnectionSlotTypeOutput() WebAppVnetConnectionSlotTypeOutput {
	return o
}

func (o WebAppVnetConnectionSlotTypeOutput) ToWebAppVnetConnectionSlotTypeOutputWithContext(ctx context.Context) WebAppVnetConnectionSlotTypeOutput {
	return o
}

// Kind of resource.
func (o WebAppVnetConnectionSlotTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebAppVnetConnectionSlotType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o WebAppVnetConnectionSlotTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppVnetConnectionSlotType) string { return v.Name }).(pulumi.StringOutput)
}

// VnetInfo resource specific properties
func (o WebAppVnetConnectionSlotTypeOutput) Properties() VnetInfoResponsePropertiesOutput {
	return o.ApplyT(func(v WebAppVnetConnectionSlotType) VnetInfoResponseProperties { return v.Properties }).(VnetInfoResponsePropertiesOutput)
}

// Resource type.
func (o WebAppVnetConnectionSlotTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppVnetConnectionSlotType) string { return v.Type }).(pulumi.StringOutput)
}

// Worker pool of an App Service Environment.
type WorkerPool struct {
	// Shared or dedicated app hosting.
	ComputeMode *string `pulumi:"computeMode"`
	// Number of instances in the worker pool.
	WorkerCount *int `pulumi:"workerCount"`
	// VM size of the worker pool instances.
	WorkerSize *string `pulumi:"workerSize"`
	// Worker size ID for referencing this worker pool.
	WorkerSizeId *int `pulumi:"workerSizeId"`
}

// WorkerPoolInput is an input type that accepts WorkerPoolArgs and WorkerPoolOutput values.
// You can construct a concrete instance of `WorkerPoolInput` via:
//
//          WorkerPoolArgs{...}
type WorkerPoolInput interface {
	pulumi.Input

	ToWorkerPoolOutput() WorkerPoolOutput
	ToWorkerPoolOutputWithContext(context.Context) WorkerPoolOutput
}

// Worker pool of an App Service Environment.
type WorkerPoolArgs struct {
	// Shared or dedicated app hosting.
	ComputeMode pulumi.StringPtrInput `pulumi:"computeMode"`
	// Number of instances in the worker pool.
	WorkerCount pulumi.IntPtrInput `pulumi:"workerCount"`
	// VM size of the worker pool instances.
	WorkerSize pulumi.StringPtrInput `pulumi:"workerSize"`
	// Worker size ID for referencing this worker pool.
	WorkerSizeId pulumi.IntPtrInput `pulumi:"workerSizeId"`
}

func (WorkerPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkerPool)(nil)).Elem()
}

func (i WorkerPoolArgs) ToWorkerPoolOutput() WorkerPoolOutput {
	return i.ToWorkerPoolOutputWithContext(context.Background())
}

func (i WorkerPoolArgs) ToWorkerPoolOutputWithContext(ctx context.Context) WorkerPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerPoolOutput)
}

// WorkerPoolArrayInput is an input type that accepts WorkerPoolArray and WorkerPoolArrayOutput values.
// You can construct a concrete instance of `WorkerPoolArrayInput` via:
//
//          WorkerPoolArray{ WorkerPoolArgs{...} }
type WorkerPoolArrayInput interface {
	pulumi.Input

	ToWorkerPoolArrayOutput() WorkerPoolArrayOutput
	ToWorkerPoolArrayOutputWithContext(context.Context) WorkerPoolArrayOutput
}

type WorkerPoolArray []WorkerPoolInput

func (WorkerPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkerPool)(nil)).Elem()
}

func (i WorkerPoolArray) ToWorkerPoolArrayOutput() WorkerPoolArrayOutput {
	return i.ToWorkerPoolArrayOutputWithContext(context.Background())
}

func (i WorkerPoolArray) ToWorkerPoolArrayOutputWithContext(ctx context.Context) WorkerPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerPoolArrayOutput)
}

// Worker pool of an App Service Environment.
type WorkerPoolOutput struct{ *pulumi.OutputState }

func (WorkerPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkerPool)(nil)).Elem()
}

func (o WorkerPoolOutput) ToWorkerPoolOutput() WorkerPoolOutput {
	return o
}

func (o WorkerPoolOutput) ToWorkerPoolOutputWithContext(ctx context.Context) WorkerPoolOutput {
	return o
}

// Shared or dedicated app hosting.
func (o WorkerPoolOutput) ComputeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkerPool) *string { return v.ComputeMode }).(pulumi.StringPtrOutput)
}

// Number of instances in the worker pool.
func (o WorkerPoolOutput) WorkerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkerPool) *int { return v.WorkerCount }).(pulumi.IntPtrOutput)
}

// VM size of the worker pool instances.
func (o WorkerPoolOutput) WorkerSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkerPool) *string { return v.WorkerSize }).(pulumi.StringPtrOutput)
}

// Worker size ID for referencing this worker pool.
func (o WorkerPoolOutput) WorkerSizeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkerPool) *int { return v.WorkerSizeId }).(pulumi.IntPtrOutput)
}

type WorkerPoolArrayOutput struct{ *pulumi.OutputState }

func (WorkerPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkerPool)(nil)).Elem()
}

func (o WorkerPoolArrayOutput) ToWorkerPoolArrayOutput() WorkerPoolArrayOutput {
	return o
}

func (o WorkerPoolArrayOutput) ToWorkerPoolArrayOutputWithContext(ctx context.Context) WorkerPoolArrayOutput {
	return o
}

func (o WorkerPoolArrayOutput) Index(i pulumi.IntInput) WorkerPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkerPool {
		return vs[0].([]WorkerPool)[vs[1].(int)]
	}).(WorkerPoolOutput)
}

// Worker pool of an App Service Environment.
type WorkerPoolResponse struct {
	// Shared or dedicated app hosting.
	ComputeMode *string `pulumi:"computeMode"`
	// Names of all instances in the worker pool (read only).
	InstanceNames []string `pulumi:"instanceNames"`
	// Number of instances in the worker pool.
	WorkerCount *int `pulumi:"workerCount"`
	// VM size of the worker pool instances.
	WorkerSize *string `pulumi:"workerSize"`
	// Worker size ID for referencing this worker pool.
	WorkerSizeId *int `pulumi:"workerSizeId"`
}

// WorkerPoolResponseInput is an input type that accepts WorkerPoolResponseArgs and WorkerPoolResponseOutput values.
// You can construct a concrete instance of `WorkerPoolResponseInput` via:
//
//          WorkerPoolResponseArgs{...}
type WorkerPoolResponseInput interface {
	pulumi.Input

	ToWorkerPoolResponseOutput() WorkerPoolResponseOutput
	ToWorkerPoolResponseOutputWithContext(context.Context) WorkerPoolResponseOutput
}

// Worker pool of an App Service Environment.
type WorkerPoolResponseArgs struct {
	// Shared or dedicated app hosting.
	ComputeMode pulumi.StringPtrInput `pulumi:"computeMode"`
	// Names of all instances in the worker pool (read only).
	InstanceNames pulumi.StringArrayInput `pulumi:"instanceNames"`
	// Number of instances in the worker pool.
	WorkerCount pulumi.IntPtrInput `pulumi:"workerCount"`
	// VM size of the worker pool instances.
	WorkerSize pulumi.StringPtrInput `pulumi:"workerSize"`
	// Worker size ID for referencing this worker pool.
	WorkerSizeId pulumi.IntPtrInput `pulumi:"workerSizeId"`
}

func (WorkerPoolResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkerPoolResponse)(nil)).Elem()
}

func (i WorkerPoolResponseArgs) ToWorkerPoolResponseOutput() WorkerPoolResponseOutput {
	return i.ToWorkerPoolResponseOutputWithContext(context.Background())
}

func (i WorkerPoolResponseArgs) ToWorkerPoolResponseOutputWithContext(ctx context.Context) WorkerPoolResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerPoolResponseOutput)
}

// WorkerPoolResponseArrayInput is an input type that accepts WorkerPoolResponseArray and WorkerPoolResponseArrayOutput values.
// You can construct a concrete instance of `WorkerPoolResponseArrayInput` via:
//
//          WorkerPoolResponseArray{ WorkerPoolResponseArgs{...} }
type WorkerPoolResponseArrayInput interface {
	pulumi.Input

	ToWorkerPoolResponseArrayOutput() WorkerPoolResponseArrayOutput
	ToWorkerPoolResponseArrayOutputWithContext(context.Context) WorkerPoolResponseArrayOutput
}

type WorkerPoolResponseArray []WorkerPoolResponseInput

func (WorkerPoolResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkerPoolResponse)(nil)).Elem()
}

func (i WorkerPoolResponseArray) ToWorkerPoolResponseArrayOutput() WorkerPoolResponseArrayOutput {
	return i.ToWorkerPoolResponseArrayOutputWithContext(context.Background())
}

func (i WorkerPoolResponseArray) ToWorkerPoolResponseArrayOutputWithContext(ctx context.Context) WorkerPoolResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerPoolResponseArrayOutput)
}

// Worker pool of an App Service Environment.
type WorkerPoolResponseOutput struct{ *pulumi.OutputState }

func (WorkerPoolResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkerPoolResponse)(nil)).Elem()
}

func (o WorkerPoolResponseOutput) ToWorkerPoolResponseOutput() WorkerPoolResponseOutput {
	return o
}

func (o WorkerPoolResponseOutput) ToWorkerPoolResponseOutputWithContext(ctx context.Context) WorkerPoolResponseOutput {
	return o
}

// Shared or dedicated app hosting.
func (o WorkerPoolResponseOutput) ComputeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkerPoolResponse) *string { return v.ComputeMode }).(pulumi.StringPtrOutput)
}

// Names of all instances in the worker pool (read only).
func (o WorkerPoolResponseOutput) InstanceNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkerPoolResponse) []string { return v.InstanceNames }).(pulumi.StringArrayOutput)
}

// Number of instances in the worker pool.
func (o WorkerPoolResponseOutput) WorkerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkerPoolResponse) *int { return v.WorkerCount }).(pulumi.IntPtrOutput)
}

// VM size of the worker pool instances.
func (o WorkerPoolResponseOutput) WorkerSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkerPoolResponse) *string { return v.WorkerSize }).(pulumi.StringPtrOutput)
}

// Worker size ID for referencing this worker pool.
func (o WorkerPoolResponseOutput) WorkerSizeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkerPoolResponse) *int { return v.WorkerSizeId }).(pulumi.IntPtrOutput)
}

type WorkerPoolResponseArrayOutput struct{ *pulumi.OutputState }

func (WorkerPoolResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkerPoolResponse)(nil)).Elem()
}

func (o WorkerPoolResponseArrayOutput) ToWorkerPoolResponseArrayOutput() WorkerPoolResponseArrayOutput {
	return o
}

func (o WorkerPoolResponseArrayOutput) ToWorkerPoolResponseArrayOutputWithContext(ctx context.Context) WorkerPoolResponseArrayOutput {
	return o
}

func (o WorkerPoolResponseArrayOutput) Index(i pulumi.IntInput) WorkerPoolResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkerPoolResponse {
		return vs[0].([]WorkerPoolResponse)[vs[1].(int)]
	}).(WorkerPoolResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(ApiDefinitionInfoOutput{})
	pulumi.RegisterOutputType(ApiDefinitionInfoPtrOutput{})
	pulumi.RegisterOutputType(ApiDefinitionInfoResponseOutput{})
	pulumi.RegisterOutputType(ApiDefinitionInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(AppServiceEnvironmentTypeOutput{})
	pulumi.RegisterOutputType(AppServiceEnvironmentResponseOutput{})
	pulumi.RegisterOutputType(AppServiceEnvironmentResponsePtrOutput{})
	pulumi.RegisterOutputType(AppServicePlanTypeOutput{})
	pulumi.RegisterOutputType(AppServicePlanResponsePropertiesOutput{})
	pulumi.RegisterOutputType(AppServicePlanResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(AppServicePlanRouteForVnetTypeOutput{})
	pulumi.RegisterOutputType(AutoHealActionsOutput{})
	pulumi.RegisterOutputType(AutoHealActionsPtrOutput{})
	pulumi.RegisterOutputType(AutoHealActionsResponseOutput{})
	pulumi.RegisterOutputType(AutoHealActionsResponsePtrOutput{})
	pulumi.RegisterOutputType(AutoHealCustomActionOutput{})
	pulumi.RegisterOutputType(AutoHealCustomActionPtrOutput{})
	pulumi.RegisterOutputType(AutoHealCustomActionResponseOutput{})
	pulumi.RegisterOutputType(AutoHealCustomActionResponsePtrOutput{})
	pulumi.RegisterOutputType(AutoHealRulesOutput{})
	pulumi.RegisterOutputType(AutoHealRulesPtrOutput{})
	pulumi.RegisterOutputType(AutoHealRulesResponseOutput{})
	pulumi.RegisterOutputType(AutoHealRulesResponsePtrOutput{})
	pulumi.RegisterOutputType(AutoHealTriggersOutput{})
	pulumi.RegisterOutputType(AutoHealTriggersPtrOutput{})
	pulumi.RegisterOutputType(AutoHealTriggersResponseOutput{})
	pulumi.RegisterOutputType(AutoHealTriggersResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureStorageInfoValueOutput{})
	pulumi.RegisterOutputType(AzureStorageInfoValueMapOutput{})
	pulumi.RegisterOutputType(AzureStorageInfoValueResponseOutput{})
	pulumi.RegisterOutputType(AzureStorageInfoValueResponseMapOutput{})
	pulumi.RegisterOutputType(BackupItemResponsePropertiesOutput{})
	pulumi.RegisterOutputType(BackupRequestResponsePropertiesOutput{})
	pulumi.RegisterOutputType(BackupScheduleOutput{})
	pulumi.RegisterOutputType(BackupScheduleResponseOutput{})
	pulumi.RegisterOutputType(BackupScheduleResponsePtrOutput{})
	pulumi.RegisterOutputType(CapabilityOutput{})
	pulumi.RegisterOutputType(CapabilityArrayOutput{})
	pulumi.RegisterOutputType(CapabilityResponseOutput{})
	pulumi.RegisterOutputType(CapabilityResponseArrayOutput{})
	pulumi.RegisterOutputType(CertificateTypeOutput{})
	pulumi.RegisterOutputType(CertificateResponsePropertiesOutput{})
	pulumi.RegisterOutputType(CertificateResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(CloningInfoOutput{})
	pulumi.RegisterOutputType(CloningInfoPtrOutput{})
	pulumi.RegisterOutputType(CloningInfoResponseOutput{})
	pulumi.RegisterOutputType(CloningInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnStringInfoOutput{})
	pulumi.RegisterOutputType(ConnStringInfoArrayOutput{})
	pulumi.RegisterOutputType(ConnStringInfoResponseOutput{})
	pulumi.RegisterOutputType(ConnStringInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(ConnStringValueTypePairResponseOutput{})
	pulumi.RegisterOutputType(ConnStringValueTypePairResponseMapOutput{})
	pulumi.RegisterOutputType(CorsSettingsOutput{})
	pulumi.RegisterOutputType(CorsSettingsPtrOutput{})
	pulumi.RegisterOutputType(CorsSettingsResponseOutput{})
	pulumi.RegisterOutputType(CorsSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(DatabaseBackupSettingOutput{})
	pulumi.RegisterOutputType(DatabaseBackupSettingArrayOutput{})
	pulumi.RegisterOutputType(DatabaseBackupSettingResponseOutput{})
	pulumi.RegisterOutputType(DatabaseBackupSettingResponseArrayOutput{})
	pulumi.RegisterOutputType(DeploymentResponsePropertiesOutput{})
	pulumi.RegisterOutputType(DeploymentResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(ExperimentsOutput{})
	pulumi.RegisterOutputType(ExperimentsPtrOutput{})
	pulumi.RegisterOutputType(ExperimentsResponseOutput{})
	pulumi.RegisterOutputType(ExperimentsResponsePtrOutput{})
	pulumi.RegisterOutputType(FunctionEnvelopeResponsePropertiesOutput{})
	pulumi.RegisterOutputType(FunctionEnvelopeResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(FunctionSecretsResponsePropertiesOutput{})
	pulumi.RegisterOutputType(GeoDistributionOutput{})
	pulumi.RegisterOutputType(GeoDistributionArrayOutput{})
	pulumi.RegisterOutputType(GeoDistributionResponseOutput{})
	pulumi.RegisterOutputType(GeoDistributionResponseArrayOutput{})
	pulumi.RegisterOutputType(HandlerMappingOutput{})
	pulumi.RegisterOutputType(HandlerMappingArrayOutput{})
	pulumi.RegisterOutputType(HandlerMappingResponseOutput{})
	pulumi.RegisterOutputType(HandlerMappingResponseArrayOutput{})
	pulumi.RegisterOutputType(HostNameBindingResponsePropertiesOutput{})
	pulumi.RegisterOutputType(HostNameBindingResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(HostNameSslStateOutput{})
	pulumi.RegisterOutputType(HostNameSslStateArrayOutput{})
	pulumi.RegisterOutputType(HostNameSslStateResponseOutput{})
	pulumi.RegisterOutputType(HostNameSslStateResponseArrayOutput{})
	pulumi.RegisterOutputType(HostingEnvironmentProfileOutput{})
	pulumi.RegisterOutputType(HostingEnvironmentProfilePtrOutput{})
	pulumi.RegisterOutputType(HostingEnvironmentProfileResponseOutput{})
	pulumi.RegisterOutputType(HostingEnvironmentProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(HybridConnectionKeyResponsePropertiesOutput{})
	pulumi.RegisterOutputType(HybridConnectionResponsePropertiesOutput{})
	pulumi.RegisterOutputType(HybridConnectionResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(IdentifierResponseOutput{})
	pulumi.RegisterOutputType(IdentifierResponseArrayOutput{})
	pulumi.RegisterOutputType(IdentifierResponsePropertiesOutput{})
	pulumi.RegisterOutputType(IdentifierResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(IpSecurityRestrictionOutput{})
	pulumi.RegisterOutputType(IpSecurityRestrictionArrayOutput{})
	pulumi.RegisterOutputType(IpSecurityRestrictionResponseOutput{})
	pulumi.RegisterOutputType(IpSecurityRestrictionResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityPropertiesOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityPropertiesMapOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponseOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponsePropertiesOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponsePropertiesMapOutput{})
	pulumi.RegisterOutputType(NameValuePairOutput{})
	pulumi.RegisterOutputType(NameValuePairArrayOutput{})
	pulumi.RegisterOutputType(NameValuePairResponseOutput{})
	pulumi.RegisterOutputType(NameValuePairResponseArrayOutput{})
	pulumi.RegisterOutputType(NetworkAccessControlEntryOutput{})
	pulumi.RegisterOutputType(NetworkAccessControlEntryArrayOutput{})
	pulumi.RegisterOutputType(NetworkAccessControlEntryResponseOutput{})
	pulumi.RegisterOutputType(NetworkAccessControlEntryResponseArrayOutput{})
	pulumi.RegisterOutputType(PremierAddOnResponsePropertiesOutput{})
	pulumi.RegisterOutputType(PremierAddOnResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(PublicCertificateResponsePropertiesOutput{})
	pulumi.RegisterOutputType(PublicCertificateResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(PushSettingsOutput{})
	pulumi.RegisterOutputType(PushSettingsPtrOutput{})
	pulumi.RegisterOutputType(PushSettingsResponseOutput{})
	pulumi.RegisterOutputType(PushSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(PushSettingsResponsePropertiesOutput{})
	pulumi.RegisterOutputType(PushSettingsResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(RampUpRuleOutput{})
	pulumi.RegisterOutputType(RampUpRuleArrayOutput{})
	pulumi.RegisterOutputType(RampUpRuleResponseOutput{})
	pulumi.RegisterOutputType(RampUpRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(RelayServiceConnectionEntityResponsePropertiesOutput{})
	pulumi.RegisterOutputType(RelayServiceConnectionEntityResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(RequestsBasedTriggerOutput{})
	pulumi.RegisterOutputType(RequestsBasedTriggerPtrOutput{})
	pulumi.RegisterOutputType(RequestsBasedTriggerResponseOutput{})
	pulumi.RegisterOutputType(RequestsBasedTriggerResponsePtrOutput{})
	pulumi.RegisterOutputType(SiteAuthSettingsResponsePropertiesOutput{})
	pulumi.RegisterOutputType(SiteConfigOutput{})
	pulumi.RegisterOutputType(SiteConfigPtrOutput{})
	pulumi.RegisterOutputType(SiteConfigResponseOutput{})
	pulumi.RegisterOutputType(SiteConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(SiteExtensionInfoResponsePropertiesOutput{})
	pulumi.RegisterOutputType(SiteExtensionInfoResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(SiteLimitsOutput{})
	pulumi.RegisterOutputType(SiteLimitsPtrOutput{})
	pulumi.RegisterOutputType(SiteLimitsResponseOutput{})
	pulumi.RegisterOutputType(SiteLimitsResponsePtrOutput{})
	pulumi.RegisterOutputType(SiteMachineKeyOutput{})
	pulumi.RegisterOutputType(SiteMachineKeyResponseOutput{})
	pulumi.RegisterOutputType(SiteMachineKeyResponsePtrOutput{})
	pulumi.RegisterOutputType(SiteResponsePropertiesOutput{})
	pulumi.RegisterOutputType(SiteResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(SiteSourceControlResponsePropertiesOutput{})
	pulumi.RegisterOutputType(SiteSourceControlResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(SkuCapacityOutput{})
	pulumi.RegisterOutputType(SkuCapacityPtrOutput{})
	pulumi.RegisterOutputType(SkuCapacityResponseOutput{})
	pulumi.RegisterOutputType(SkuCapacityResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuDescriptionOutput{})
	pulumi.RegisterOutputType(SkuDescriptionPtrOutput{})
	pulumi.RegisterOutputType(SkuDescriptionResponseOutput{})
	pulumi.RegisterOutputType(SkuDescriptionResponsePtrOutput{})
	pulumi.RegisterOutputType(SlotSwapStatusOutput{})
	pulumi.RegisterOutputType(SlotSwapStatusResponseOutput{})
	pulumi.RegisterOutputType(SlotSwapStatusResponsePtrOutput{})
	pulumi.RegisterOutputType(SlowRequestsBasedTriggerOutput{})
	pulumi.RegisterOutputType(SlowRequestsBasedTriggerPtrOutput{})
	pulumi.RegisterOutputType(SlowRequestsBasedTriggerResponseOutput{})
	pulumi.RegisterOutputType(SlowRequestsBasedTriggerResponsePtrOutput{})
	pulumi.RegisterOutputType(StampCapacityOutput{})
	pulumi.RegisterOutputType(StampCapacityResponseOutput{})
	pulumi.RegisterOutputType(StampCapacityResponseArrayOutput{})
	pulumi.RegisterOutputType(StatusCodesBasedTriggerOutput{})
	pulumi.RegisterOutputType(StatusCodesBasedTriggerArrayOutput{})
	pulumi.RegisterOutputType(StatusCodesBasedTriggerResponseOutput{})
	pulumi.RegisterOutputType(StatusCodesBasedTriggerResponseArrayOutput{})
	pulumi.RegisterOutputType(SwiftVirtualNetworkResponsePropertiesOutput{})
	pulumi.RegisterOutputType(SwiftVirtualNetworkResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(UserResponsePropertiesOutput{})
	pulumi.RegisterOutputType(VirtualApplicationOutput{})
	pulumi.RegisterOutputType(VirtualApplicationArrayOutput{})
	pulumi.RegisterOutputType(VirtualApplicationResponseOutput{})
	pulumi.RegisterOutputType(VirtualApplicationResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualDirectoryOutput{})
	pulumi.RegisterOutputType(VirtualDirectoryArrayOutput{})
	pulumi.RegisterOutputType(VirtualDirectoryResponseOutput{})
	pulumi.RegisterOutputType(VirtualDirectoryResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualIPMappingOutput{})
	pulumi.RegisterOutputType(VirtualIPMappingResponseOutput{})
	pulumi.RegisterOutputType(VirtualIPMappingResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkProfileOutput{})
	pulumi.RegisterOutputType(VirtualNetworkProfilePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkProfileResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(VnetInfoResponsePropertiesOutput{})
	pulumi.RegisterOutputType(VnetInfoResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(VnetRouteOutput{})
	pulumi.RegisterOutputType(VnetRouteResponseOutput{})
	pulumi.RegisterOutputType(VnetRouteResponseArrayOutput{})
	pulumi.RegisterOutputType(VnetRouteResponsePropertiesOutput{})
	pulumi.RegisterOutputType(VnetRouteResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(WebAppTypeOutput{})
	pulumi.RegisterOutputType(WebAppDeploymentTypeOutput{})
	pulumi.RegisterOutputType(WebAppDeploymentSlotTypeOutput{})
	pulumi.RegisterOutputType(WebAppDomainOwnershipIdentifierTypeOutput{})
	pulumi.RegisterOutputType(WebAppDomainOwnershipIdentifierSlotTypeOutput{})
	pulumi.RegisterOutputType(WebAppFunctionTypeOutput{})
	pulumi.RegisterOutputType(WebAppHostNameBindingTypeOutput{})
	pulumi.RegisterOutputType(WebAppHostNameBindingSlotTypeOutput{})
	pulumi.RegisterOutputType(WebAppHybridConnectionTypeOutput{})
	pulumi.RegisterOutputType(WebAppHybridConnectionSlotTypeOutput{})
	pulumi.RegisterOutputType(WebAppInstanceFunctionSlotTypeOutput{})
	pulumi.RegisterOutputType(WebAppPremierAddOnTypeOutput{})
	pulumi.RegisterOutputType(WebAppPremierAddOnSlotTypeOutput{})
	pulumi.RegisterOutputType(WebAppPublicCertificateTypeOutput{})
	pulumi.RegisterOutputType(WebAppPublicCertificateSlotTypeOutput{})
	pulumi.RegisterOutputType(WebAppRelayServiceConnectionTypeOutput{})
	pulumi.RegisterOutputType(WebAppRelayServiceConnectionSlotTypeOutput{})
	pulumi.RegisterOutputType(WebAppSiteExtensionTypeOutput{})
	pulumi.RegisterOutputType(WebAppSiteExtensionSlotTypeOutput{})
	pulumi.RegisterOutputType(WebAppSlotTypeOutput{})
	pulumi.RegisterOutputType(WebAppSourceControlTypeOutput{})
	pulumi.RegisterOutputType(WebAppSourceControlSlotTypeOutput{})
	pulumi.RegisterOutputType(WebAppSwiftVirtualNetworkConnectionTypeOutput{})
	pulumi.RegisterOutputType(WebAppSwiftVirtualNetworkConnectionSlotTypeOutput{})
	pulumi.RegisterOutputType(WebAppVnetConnectionTypeOutput{})
	pulumi.RegisterOutputType(WebAppVnetConnectionSlotTypeOutput{})
	pulumi.RegisterOutputType(WorkerPoolOutput{})
	pulumi.RegisterOutputType(WorkerPoolArrayOutput{})
	pulumi.RegisterOutputType(WorkerPoolResponseOutput{})
	pulumi.RegisterOutputType(WorkerPoolResponseArrayOutput{})
}
