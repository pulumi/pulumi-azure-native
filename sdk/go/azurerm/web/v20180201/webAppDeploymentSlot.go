// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20180201

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// User credentials used for publishing activity.
type WebAppDeploymentSlot struct {
	pulumi.CustomResourceState

	// Kind of resource.
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Resource Name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Deployment resource specific properties
	Properties DeploymentResponsePropertiesOutput `pulumi:"properties"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewWebAppDeploymentSlot registers a new resource with the given unique name, arguments, and options.
func NewWebAppDeploymentSlot(ctx *pulumi.Context,
	name string, args *WebAppDeploymentSlotArgs, opts ...pulumi.ResourceOption) (*WebAppDeploymentSlot, error) {
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.Slot == nil {
		return nil, errors.New("missing required argument 'Slot'")
	}
	if args == nil {
		args = &WebAppDeploymentSlotArgs{}
	}
	var resource WebAppDeploymentSlot
	err := ctx.RegisterResource("azurerm:web/v20180201:WebAppDeploymentSlot", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebAppDeploymentSlot gets an existing WebAppDeploymentSlot resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebAppDeploymentSlot(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebAppDeploymentSlotState, opts ...pulumi.ResourceOption) (*WebAppDeploymentSlot, error) {
	var resource WebAppDeploymentSlot
	err := ctx.ReadResource("azurerm:web/v20180201:WebAppDeploymentSlot", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebAppDeploymentSlot resources.
type webAppDeploymentSlotState struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name *string `pulumi:"name"`
	// Deployment resource specific properties
	Properties *DeploymentResponseProperties `pulumi:"properties"`
	// Resource type.
	Type *string `pulumi:"type"`
}

type WebAppDeploymentSlotState struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput
	// Resource Name.
	Name pulumi.StringPtrInput
	// Deployment resource specific properties
	Properties DeploymentResponsePropertiesPtrInput
	// Resource type.
	Type pulumi.StringPtrInput
}

func (WebAppDeploymentSlotState) ElementType() reflect.Type {
	return reflect.TypeOf((*webAppDeploymentSlotState)(nil)).Elem()
}

type webAppDeploymentSlotArgs struct {
	// True if deployment is currently active, false if completed and null if not started.
	Active *bool `pulumi:"active"`
	// Who authored the deployment.
	Author *string `pulumi:"author"`
	// Author email.
	Author_email *string `pulumi:"author_email"`
	// Who performed the deployment.
	Deployer *string `pulumi:"deployer"`
	// Details on deployment.
	Details *string `pulumi:"details"`
	// End time.
	End_time *string `pulumi:"end_time"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Details about deployment status.
	Message *string `pulumi:"message"`
	// ID of an existing deployment.
	Name string `pulumi:"name"`
	// Name of the resource group to which the resource belongs.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Name of the deployment slot. If a slot is not specified, the API creates a deployment for the production slot.
	Slot string `pulumi:"slot"`
	// Start time.
	Start_time *string `pulumi:"start_time"`
	// Deployment status.
	Status *int `pulumi:"status"`
}

// The set of arguments for constructing a WebAppDeploymentSlot resource.
type WebAppDeploymentSlotArgs struct {
	// True if deployment is currently active, false if completed and null if not started.
	Active pulumi.BoolPtrInput
	// Who authored the deployment.
	Author pulumi.StringPtrInput
	// Author email.
	Author_email pulumi.StringPtrInput
	// Who performed the deployment.
	Deployer pulumi.StringPtrInput
	// Details on deployment.
	Details pulumi.StringPtrInput
	// End time.
	End_time pulumi.StringPtrInput
	// Kind of resource.
	Kind pulumi.StringPtrInput
	// Details about deployment status.
	Message pulumi.StringPtrInput
	// ID of an existing deployment.
	Name pulumi.StringInput
	// Name of the resource group to which the resource belongs.
	ResourceGroupName pulumi.StringInput
	// Name of the deployment slot. If a slot is not specified, the API creates a deployment for the production slot.
	Slot pulumi.StringInput
	// Start time.
	Start_time pulumi.StringPtrInput
	// Deployment status.
	Status pulumi.IntPtrInput
}

func (WebAppDeploymentSlotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webAppDeploymentSlotArgs)(nil)).Elem()
}
