// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20160901

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Description of an App Service Environment.
type AppServiceEnvironmentResponse struct {
	// List of comma separated strings describing which VM sizes are allowed for front-ends.
	AllowedMultiSizes string `pulumi:"allowedMultiSizes"`
	// List of comma separated strings describing which VM sizes are allowed for workers.
	AllowedWorkerSizes string `pulumi:"allowedWorkerSizes"`
	// API Management Account associated with the App Service Environment.
	ApiManagementAccountId *string `pulumi:"apiManagementAccountId"`
	// Custom settings for changing the behavior of the App Service Environment.
	ClusterSettings []NameValuePairResponse `pulumi:"clusterSettings"`
	// Edition of the metadata database for the App Service Environment, e.g. "Standard".
	DatabaseEdition string `pulumi:"databaseEdition"`
	// Service objective of the metadata database for the App Service Environment, e.g. "S0".
	DatabaseServiceObjective string `pulumi:"databaseServiceObjective"`
	// Default Scale Factor for FrontEnds.
	DefaultFrontEndScaleFactor int `pulumi:"defaultFrontEndScaleFactor"`
	// DNS suffix of the App Service Environment.
	DnsSuffix *string `pulumi:"dnsSuffix"`
	// True/false indicating whether the App Service Environment is suspended. The environment can be suspended e.g. when the management endpoint is no longer available
	// (most likely because NSG blocked the incoming traffic).
	DynamicCacheEnabled *bool `pulumi:"dynamicCacheEnabled"`
	// Current total, used, and available worker capacities.
	EnvironmentCapacities []StampCapacityResponse `pulumi:"environmentCapacities"`
	// True/false indicating whether the App Service Environment is healthy.
	EnvironmentIsHealthy bool `pulumi:"environmentIsHealthy"`
	// Detailed message about with results of the last check of the App Service Environment.
	EnvironmentStatus string `pulumi:"environmentStatus"`
	// Scale factor for front-ends.
	FrontEndScaleFactor *int `pulumi:"frontEndScaleFactor"`
	// Specifies which endpoints to serve internally in the Virtual Network for the App Service Environment.
	InternalLoadBalancingMode *string `pulumi:"internalLoadBalancingMode"`
	// Number of IP SSL addresses reserved for the App Service Environment.
	IpsslAddressCount *int `pulumi:"ipsslAddressCount"`
	// Last deployment action on the App Service Environment.
	LastAction string `pulumi:"lastAction"`
	// Result of the last deployment action on the App Service Environment.
	LastActionResult string `pulumi:"lastActionResult"`
	// Location of the App Service Environment, e.g. "West US".
	Location string `pulumi:"location"`
	// Maximum number of VMs in the App Service Environment.
	MaximumNumberOfMachines int `pulumi:"maximumNumberOfMachines"`
	// Number of front-end instances.
	MultiRoleCount *int `pulumi:"multiRoleCount"`
	// Front-end VM size, e.g. "Medium", "Large".
	MultiSize *string `pulumi:"multiSize"`
	// Name of the App Service Environment.
	Name string `pulumi:"name"`
	// Access control list for controlling traffic to the App Service Environment.
	NetworkAccessControlList []NetworkAccessControlEntryResponse `pulumi:"networkAccessControlList"`
	// Provisioning state of the App Service Environment.
	ProvisioningState string `pulumi:"provisioningState"`
	// Resource group of the App Service Environment.
	ResourceGroup string `pulumi:"resourceGroup"`
	// Current status of the App Service Environment.
	Status string `pulumi:"status"`
	// Subscription of the App Service Environment.
	SubscriptionId string `pulumi:"subscriptionId"`
	// <code>true</code> if the App Service Environment is suspended; otherwise, <code>false</code>. The environment can be suspended, e.g. when the management endpoint is no longer available
	//  (most likely because NSG blocked the incoming traffic).
	Suspended *bool `pulumi:"suspended"`
	// Number of upgrade domains of the App Service Environment.
	UpgradeDomains int `pulumi:"upgradeDomains"`
	// User added ip ranges to whitelist on ASE db
	UserWhitelistedIpRanges []string `pulumi:"userWhitelistedIpRanges"`
	// Description of IP SSL mapping for the App Service Environment.
	VipMappings []VirtualIPMappingResponse `pulumi:"vipMappings"`
	// Description of the Virtual Network.
	VirtualNetwork VirtualNetworkProfileResponse `pulumi:"virtualNetwork"`
	// Name of the Virtual Network for the App Service Environment.
	VnetName *string `pulumi:"vnetName"`
	// Resource group of the Virtual Network.
	VnetResourceGroupName *string `pulumi:"vnetResourceGroupName"`
	// Subnet of the Virtual Network.
	VnetSubnetName *string `pulumi:"vnetSubnetName"`
	// Description of worker pools with worker size IDs, VM sizes, and number of workers in each pool.
	WorkerPools []WorkerPoolResponse `pulumi:"workerPools"`
}

// AppServiceEnvironmentResponseInput is an input type that accepts AppServiceEnvironmentResponseArgs and AppServiceEnvironmentResponseOutput values.
// You can construct a concrete instance of `AppServiceEnvironmentResponseInput` via:
//
//          AppServiceEnvironmentResponseArgs{...}
type AppServiceEnvironmentResponseInput interface {
	pulumi.Input

	ToAppServiceEnvironmentResponseOutput() AppServiceEnvironmentResponseOutput
	ToAppServiceEnvironmentResponseOutputWithContext(context.Context) AppServiceEnvironmentResponseOutput
}

// Description of an App Service Environment.
type AppServiceEnvironmentResponseArgs struct {
	// List of comma separated strings describing which VM sizes are allowed for front-ends.
	AllowedMultiSizes pulumi.StringInput `pulumi:"allowedMultiSizes"`
	// List of comma separated strings describing which VM sizes are allowed for workers.
	AllowedWorkerSizes pulumi.StringInput `pulumi:"allowedWorkerSizes"`
	// API Management Account associated with the App Service Environment.
	ApiManagementAccountId pulumi.StringPtrInput `pulumi:"apiManagementAccountId"`
	// Custom settings for changing the behavior of the App Service Environment.
	ClusterSettings NameValuePairResponseArrayInput `pulumi:"clusterSettings"`
	// Edition of the metadata database for the App Service Environment, e.g. "Standard".
	DatabaseEdition pulumi.StringInput `pulumi:"databaseEdition"`
	// Service objective of the metadata database for the App Service Environment, e.g. "S0".
	DatabaseServiceObjective pulumi.StringInput `pulumi:"databaseServiceObjective"`
	// Default Scale Factor for FrontEnds.
	DefaultFrontEndScaleFactor pulumi.IntInput `pulumi:"defaultFrontEndScaleFactor"`
	// DNS suffix of the App Service Environment.
	DnsSuffix pulumi.StringPtrInput `pulumi:"dnsSuffix"`
	// True/false indicating whether the App Service Environment is suspended. The environment can be suspended e.g. when the management endpoint is no longer available
	// (most likely because NSG blocked the incoming traffic).
	DynamicCacheEnabled pulumi.BoolPtrInput `pulumi:"dynamicCacheEnabled"`
	// Current total, used, and available worker capacities.
	EnvironmentCapacities StampCapacityResponseArrayInput `pulumi:"environmentCapacities"`
	// True/false indicating whether the App Service Environment is healthy.
	EnvironmentIsHealthy pulumi.BoolInput `pulumi:"environmentIsHealthy"`
	// Detailed message about with results of the last check of the App Service Environment.
	EnvironmentStatus pulumi.StringInput `pulumi:"environmentStatus"`
	// Scale factor for front-ends.
	FrontEndScaleFactor pulumi.IntPtrInput `pulumi:"frontEndScaleFactor"`
	// Specifies which endpoints to serve internally in the Virtual Network for the App Service Environment.
	InternalLoadBalancingMode pulumi.StringPtrInput `pulumi:"internalLoadBalancingMode"`
	// Number of IP SSL addresses reserved for the App Service Environment.
	IpsslAddressCount pulumi.IntPtrInput `pulumi:"ipsslAddressCount"`
	// Last deployment action on the App Service Environment.
	LastAction pulumi.StringInput `pulumi:"lastAction"`
	// Result of the last deployment action on the App Service Environment.
	LastActionResult pulumi.StringInput `pulumi:"lastActionResult"`
	// Location of the App Service Environment, e.g. "West US".
	Location pulumi.StringInput `pulumi:"location"`
	// Maximum number of VMs in the App Service Environment.
	MaximumNumberOfMachines pulumi.IntInput `pulumi:"maximumNumberOfMachines"`
	// Number of front-end instances.
	MultiRoleCount pulumi.IntPtrInput `pulumi:"multiRoleCount"`
	// Front-end VM size, e.g. "Medium", "Large".
	MultiSize pulumi.StringPtrInput `pulumi:"multiSize"`
	// Name of the App Service Environment.
	Name pulumi.StringInput `pulumi:"name"`
	// Access control list for controlling traffic to the App Service Environment.
	NetworkAccessControlList NetworkAccessControlEntryResponseArrayInput `pulumi:"networkAccessControlList"`
	// Provisioning state of the App Service Environment.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Resource group of the App Service Environment.
	ResourceGroup pulumi.StringInput `pulumi:"resourceGroup"`
	// Current status of the App Service Environment.
	Status pulumi.StringInput `pulumi:"status"`
	// Subscription of the App Service Environment.
	SubscriptionId pulumi.StringInput `pulumi:"subscriptionId"`
	// <code>true</code> if the App Service Environment is suspended; otherwise, <code>false</code>. The environment can be suspended, e.g. when the management endpoint is no longer available
	//  (most likely because NSG blocked the incoming traffic).
	Suspended pulumi.BoolPtrInput `pulumi:"suspended"`
	// Number of upgrade domains of the App Service Environment.
	UpgradeDomains pulumi.IntInput `pulumi:"upgradeDomains"`
	// User added ip ranges to whitelist on ASE db
	UserWhitelistedIpRanges pulumi.StringArrayInput `pulumi:"userWhitelistedIpRanges"`
	// Description of IP SSL mapping for the App Service Environment.
	VipMappings VirtualIPMappingResponseArrayInput `pulumi:"vipMappings"`
	// Description of the Virtual Network.
	VirtualNetwork VirtualNetworkProfileResponseInput `pulumi:"virtualNetwork"`
	// Name of the Virtual Network for the App Service Environment.
	VnetName pulumi.StringPtrInput `pulumi:"vnetName"`
	// Resource group of the Virtual Network.
	VnetResourceGroupName pulumi.StringPtrInput `pulumi:"vnetResourceGroupName"`
	// Subnet of the Virtual Network.
	VnetSubnetName pulumi.StringPtrInput `pulumi:"vnetSubnetName"`
	// Description of worker pools with worker size IDs, VM sizes, and number of workers in each pool.
	WorkerPools WorkerPoolResponseArrayInput `pulumi:"workerPools"`
}

func (AppServiceEnvironmentResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceEnvironmentResponse)(nil)).Elem()
}

func (i AppServiceEnvironmentResponseArgs) ToAppServiceEnvironmentResponseOutput() AppServiceEnvironmentResponseOutput {
	return i.ToAppServiceEnvironmentResponseOutputWithContext(context.Background())
}

func (i AppServiceEnvironmentResponseArgs) ToAppServiceEnvironmentResponseOutputWithContext(ctx context.Context) AppServiceEnvironmentResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceEnvironmentResponseOutput)
}

func (i AppServiceEnvironmentResponseArgs) ToAppServiceEnvironmentResponsePtrOutput() AppServiceEnvironmentResponsePtrOutput {
	return i.ToAppServiceEnvironmentResponsePtrOutputWithContext(context.Background())
}

func (i AppServiceEnvironmentResponseArgs) ToAppServiceEnvironmentResponsePtrOutputWithContext(ctx context.Context) AppServiceEnvironmentResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceEnvironmentResponseOutput).ToAppServiceEnvironmentResponsePtrOutputWithContext(ctx)
}

// AppServiceEnvironmentResponsePtrInput is an input type that accepts AppServiceEnvironmentResponseArgs, AppServiceEnvironmentResponsePtr and AppServiceEnvironmentResponsePtrOutput values.
// You can construct a concrete instance of `AppServiceEnvironmentResponsePtrInput` via:
//
//          AppServiceEnvironmentResponseArgs{...}
//
//  or:
//
//          nil
type AppServiceEnvironmentResponsePtrInput interface {
	pulumi.Input

	ToAppServiceEnvironmentResponsePtrOutput() AppServiceEnvironmentResponsePtrOutput
	ToAppServiceEnvironmentResponsePtrOutputWithContext(context.Context) AppServiceEnvironmentResponsePtrOutput
}

type appServiceEnvironmentResponsePtrType AppServiceEnvironmentResponseArgs

func AppServiceEnvironmentResponsePtr(v *AppServiceEnvironmentResponseArgs) AppServiceEnvironmentResponsePtrInput {
	return (*appServiceEnvironmentResponsePtrType)(v)
}

func (*appServiceEnvironmentResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceEnvironmentResponse)(nil)).Elem()
}

func (i *appServiceEnvironmentResponsePtrType) ToAppServiceEnvironmentResponsePtrOutput() AppServiceEnvironmentResponsePtrOutput {
	return i.ToAppServiceEnvironmentResponsePtrOutputWithContext(context.Background())
}

func (i *appServiceEnvironmentResponsePtrType) ToAppServiceEnvironmentResponsePtrOutputWithContext(ctx context.Context) AppServiceEnvironmentResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceEnvironmentResponsePtrOutput)
}

// Description of an App Service Environment.
type AppServiceEnvironmentResponseOutput struct{ *pulumi.OutputState }

func (AppServiceEnvironmentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceEnvironmentResponse)(nil)).Elem()
}

func (o AppServiceEnvironmentResponseOutput) ToAppServiceEnvironmentResponseOutput() AppServiceEnvironmentResponseOutput {
	return o
}

func (o AppServiceEnvironmentResponseOutput) ToAppServiceEnvironmentResponseOutputWithContext(ctx context.Context) AppServiceEnvironmentResponseOutput {
	return o
}

func (o AppServiceEnvironmentResponseOutput) ToAppServiceEnvironmentResponsePtrOutput() AppServiceEnvironmentResponsePtrOutput {
	return o.ToAppServiceEnvironmentResponsePtrOutputWithContext(context.Background())
}

func (o AppServiceEnvironmentResponseOutput) ToAppServiceEnvironmentResponsePtrOutputWithContext(ctx context.Context) AppServiceEnvironmentResponsePtrOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) *AppServiceEnvironmentResponse {
		return &v
	}).(AppServiceEnvironmentResponsePtrOutput)
}

// List of comma separated strings describing which VM sizes are allowed for front-ends.
func (o AppServiceEnvironmentResponseOutput) AllowedMultiSizes() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) string { return v.AllowedMultiSizes }).(pulumi.StringOutput)
}

// List of comma separated strings describing which VM sizes are allowed for workers.
func (o AppServiceEnvironmentResponseOutput) AllowedWorkerSizes() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) string { return v.AllowedWorkerSizes }).(pulumi.StringOutput)
}

// API Management Account associated with the App Service Environment.
func (o AppServiceEnvironmentResponseOutput) ApiManagementAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) *string { return v.ApiManagementAccountId }).(pulumi.StringPtrOutput)
}

// Custom settings for changing the behavior of the App Service Environment.
func (o AppServiceEnvironmentResponseOutput) ClusterSettings() NameValuePairResponseArrayOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) []NameValuePairResponse { return v.ClusterSettings }).(NameValuePairResponseArrayOutput)
}

// Edition of the metadata database for the App Service Environment, e.g. "Standard".
func (o AppServiceEnvironmentResponseOutput) DatabaseEdition() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) string { return v.DatabaseEdition }).(pulumi.StringOutput)
}

// Service objective of the metadata database for the App Service Environment, e.g. "S0".
func (o AppServiceEnvironmentResponseOutput) DatabaseServiceObjective() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) string { return v.DatabaseServiceObjective }).(pulumi.StringOutput)
}

// Default Scale Factor for FrontEnds.
func (o AppServiceEnvironmentResponseOutput) DefaultFrontEndScaleFactor() pulumi.IntOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) int { return v.DefaultFrontEndScaleFactor }).(pulumi.IntOutput)
}

// DNS suffix of the App Service Environment.
func (o AppServiceEnvironmentResponseOutput) DnsSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) *string { return v.DnsSuffix }).(pulumi.StringPtrOutput)
}

// True/false indicating whether the App Service Environment is suspended. The environment can be suspended e.g. when the management endpoint is no longer available
// (most likely because NSG blocked the incoming traffic).
func (o AppServiceEnvironmentResponseOutput) DynamicCacheEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) *bool { return v.DynamicCacheEnabled }).(pulumi.BoolPtrOutput)
}

// Current total, used, and available worker capacities.
func (o AppServiceEnvironmentResponseOutput) EnvironmentCapacities() StampCapacityResponseArrayOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) []StampCapacityResponse { return v.EnvironmentCapacities }).(StampCapacityResponseArrayOutput)
}

// True/false indicating whether the App Service Environment is healthy.
func (o AppServiceEnvironmentResponseOutput) EnvironmentIsHealthy() pulumi.BoolOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) bool { return v.EnvironmentIsHealthy }).(pulumi.BoolOutput)
}

// Detailed message about with results of the last check of the App Service Environment.
func (o AppServiceEnvironmentResponseOutput) EnvironmentStatus() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) string { return v.EnvironmentStatus }).(pulumi.StringOutput)
}

// Scale factor for front-ends.
func (o AppServiceEnvironmentResponseOutput) FrontEndScaleFactor() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) *int { return v.FrontEndScaleFactor }).(pulumi.IntPtrOutput)
}

// Specifies which endpoints to serve internally in the Virtual Network for the App Service Environment.
func (o AppServiceEnvironmentResponseOutput) InternalLoadBalancingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) *string { return v.InternalLoadBalancingMode }).(pulumi.StringPtrOutput)
}

// Number of IP SSL addresses reserved for the App Service Environment.
func (o AppServiceEnvironmentResponseOutput) IpsslAddressCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) *int { return v.IpsslAddressCount }).(pulumi.IntPtrOutput)
}

// Last deployment action on the App Service Environment.
func (o AppServiceEnvironmentResponseOutput) LastAction() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) string { return v.LastAction }).(pulumi.StringOutput)
}

// Result of the last deployment action on the App Service Environment.
func (o AppServiceEnvironmentResponseOutput) LastActionResult() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) string { return v.LastActionResult }).(pulumi.StringOutput)
}

// Location of the App Service Environment, e.g. "West US".
func (o AppServiceEnvironmentResponseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) string { return v.Location }).(pulumi.StringOutput)
}

// Maximum number of VMs in the App Service Environment.
func (o AppServiceEnvironmentResponseOutput) MaximumNumberOfMachines() pulumi.IntOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) int { return v.MaximumNumberOfMachines }).(pulumi.IntOutput)
}

// Number of front-end instances.
func (o AppServiceEnvironmentResponseOutput) MultiRoleCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) *int { return v.MultiRoleCount }).(pulumi.IntPtrOutput)
}

// Front-end VM size, e.g. "Medium", "Large".
func (o AppServiceEnvironmentResponseOutput) MultiSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) *string { return v.MultiSize }).(pulumi.StringPtrOutput)
}

// Name of the App Service Environment.
func (o AppServiceEnvironmentResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Access control list for controlling traffic to the App Service Environment.
func (o AppServiceEnvironmentResponseOutput) NetworkAccessControlList() NetworkAccessControlEntryResponseArrayOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) []NetworkAccessControlEntryResponse {
		return v.NetworkAccessControlList
	}).(NetworkAccessControlEntryResponseArrayOutput)
}

// Provisioning state of the App Service Environment.
func (o AppServiceEnvironmentResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Resource group of the App Service Environment.
func (o AppServiceEnvironmentResponseOutput) ResourceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) string { return v.ResourceGroup }).(pulumi.StringOutput)
}

// Current status of the App Service Environment.
func (o AppServiceEnvironmentResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) string { return v.Status }).(pulumi.StringOutput)
}

// Subscription of the App Service Environment.
func (o AppServiceEnvironmentResponseOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

// <code>true</code> if the App Service Environment is suspended; otherwise, <code>false</code>. The environment can be suspended, e.g. when the management endpoint is no longer available
//  (most likely because NSG blocked the incoming traffic).
func (o AppServiceEnvironmentResponseOutput) Suspended() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) *bool { return v.Suspended }).(pulumi.BoolPtrOutput)
}

// Number of upgrade domains of the App Service Environment.
func (o AppServiceEnvironmentResponseOutput) UpgradeDomains() pulumi.IntOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) int { return v.UpgradeDomains }).(pulumi.IntOutput)
}

// User added ip ranges to whitelist on ASE db
func (o AppServiceEnvironmentResponseOutput) UserWhitelistedIpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) []string { return v.UserWhitelistedIpRanges }).(pulumi.StringArrayOutput)
}

// Description of IP SSL mapping for the App Service Environment.
func (o AppServiceEnvironmentResponseOutput) VipMappings() VirtualIPMappingResponseArrayOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) []VirtualIPMappingResponse { return v.VipMappings }).(VirtualIPMappingResponseArrayOutput)
}

// Description of the Virtual Network.
func (o AppServiceEnvironmentResponseOutput) VirtualNetwork() VirtualNetworkProfileResponseOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) VirtualNetworkProfileResponse { return v.VirtualNetwork }).(VirtualNetworkProfileResponseOutput)
}

// Name of the Virtual Network for the App Service Environment.
func (o AppServiceEnvironmentResponseOutput) VnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) *string { return v.VnetName }).(pulumi.StringPtrOutput)
}

// Resource group of the Virtual Network.
func (o AppServiceEnvironmentResponseOutput) VnetResourceGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) *string { return v.VnetResourceGroupName }).(pulumi.StringPtrOutput)
}

// Subnet of the Virtual Network.
func (o AppServiceEnvironmentResponseOutput) VnetSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) *string { return v.VnetSubnetName }).(pulumi.StringPtrOutput)
}

// Description of worker pools with worker size IDs, VM sizes, and number of workers in each pool.
func (o AppServiceEnvironmentResponseOutput) WorkerPools() WorkerPoolResponseArrayOutput {
	return o.ApplyT(func(v AppServiceEnvironmentResponse) []WorkerPoolResponse { return v.WorkerPools }).(WorkerPoolResponseArrayOutput)
}

type AppServiceEnvironmentResponsePtrOutput struct{ *pulumi.OutputState }

func (AppServiceEnvironmentResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceEnvironmentResponse)(nil)).Elem()
}

func (o AppServiceEnvironmentResponsePtrOutput) ToAppServiceEnvironmentResponsePtrOutput() AppServiceEnvironmentResponsePtrOutput {
	return o
}

func (o AppServiceEnvironmentResponsePtrOutput) ToAppServiceEnvironmentResponsePtrOutputWithContext(ctx context.Context) AppServiceEnvironmentResponsePtrOutput {
	return o
}

func (o AppServiceEnvironmentResponsePtrOutput) Elem() AppServiceEnvironmentResponseOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) AppServiceEnvironmentResponse { return *v }).(AppServiceEnvironmentResponseOutput)
}

// List of comma separated strings describing which VM sizes are allowed for front-ends.
func (o AppServiceEnvironmentResponsePtrOutput) AllowedMultiSizes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AllowedMultiSizes
	}).(pulumi.StringPtrOutput)
}

// List of comma separated strings describing which VM sizes are allowed for workers.
func (o AppServiceEnvironmentResponsePtrOutput) AllowedWorkerSizes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AllowedWorkerSizes
	}).(pulumi.StringPtrOutput)
}

// API Management Account associated with the App Service Environment.
func (o AppServiceEnvironmentResponsePtrOutput) ApiManagementAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return v.ApiManagementAccountId
	}).(pulumi.StringPtrOutput)
}

// Custom settings for changing the behavior of the App Service Environment.
func (o AppServiceEnvironmentResponsePtrOutput) ClusterSettings() NameValuePairResponseArrayOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) []NameValuePairResponse {
		if v == nil {
			return nil
		}
		return v.ClusterSettings
	}).(NameValuePairResponseArrayOutput)
}

// Edition of the metadata database for the App Service Environment, e.g. "Standard".
func (o AppServiceEnvironmentResponsePtrOutput) DatabaseEdition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DatabaseEdition
	}).(pulumi.StringPtrOutput)
}

// Service objective of the metadata database for the App Service Environment, e.g. "S0".
func (o AppServiceEnvironmentResponsePtrOutput) DatabaseServiceObjective() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DatabaseServiceObjective
	}).(pulumi.StringPtrOutput)
}

// Default Scale Factor for FrontEnds.
func (o AppServiceEnvironmentResponsePtrOutput) DefaultFrontEndScaleFactor() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *int {
		if v == nil {
			return nil
		}
		return &v.DefaultFrontEndScaleFactor
	}).(pulumi.IntPtrOutput)
}

// DNS suffix of the App Service Environment.
func (o AppServiceEnvironmentResponsePtrOutput) DnsSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return v.DnsSuffix
	}).(pulumi.StringPtrOutput)
}

// True/false indicating whether the App Service Environment is suspended. The environment can be suspended e.g. when the management endpoint is no longer available
// (most likely because NSG blocked the incoming traffic).
func (o AppServiceEnvironmentResponsePtrOutput) DynamicCacheEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *bool {
		if v == nil {
			return nil
		}
		return v.DynamicCacheEnabled
	}).(pulumi.BoolPtrOutput)
}

// Current total, used, and available worker capacities.
func (o AppServiceEnvironmentResponsePtrOutput) EnvironmentCapacities() StampCapacityResponseArrayOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) []StampCapacityResponse {
		if v == nil {
			return nil
		}
		return v.EnvironmentCapacities
	}).(StampCapacityResponseArrayOutput)
}

// True/false indicating whether the App Service Environment is healthy.
func (o AppServiceEnvironmentResponsePtrOutput) EnvironmentIsHealthy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.EnvironmentIsHealthy
	}).(pulumi.BoolPtrOutput)
}

// Detailed message about with results of the last check of the App Service Environment.
func (o AppServiceEnvironmentResponsePtrOutput) EnvironmentStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return &v.EnvironmentStatus
	}).(pulumi.StringPtrOutput)
}

// Scale factor for front-ends.
func (o AppServiceEnvironmentResponsePtrOutput) FrontEndScaleFactor() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *int {
		if v == nil {
			return nil
		}
		return v.FrontEndScaleFactor
	}).(pulumi.IntPtrOutput)
}

// Specifies which endpoints to serve internally in the Virtual Network for the App Service Environment.
func (o AppServiceEnvironmentResponsePtrOutput) InternalLoadBalancingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return v.InternalLoadBalancingMode
	}).(pulumi.StringPtrOutput)
}

// Number of IP SSL addresses reserved for the App Service Environment.
func (o AppServiceEnvironmentResponsePtrOutput) IpsslAddressCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *int {
		if v == nil {
			return nil
		}
		return v.IpsslAddressCount
	}).(pulumi.IntPtrOutput)
}

// Last deployment action on the App Service Environment.
func (o AppServiceEnvironmentResponsePtrOutput) LastAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastAction
	}).(pulumi.StringPtrOutput)
}

// Result of the last deployment action on the App Service Environment.
func (o AppServiceEnvironmentResponsePtrOutput) LastActionResult() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastActionResult
	}).(pulumi.StringPtrOutput)
}

// Location of the App Service Environment, e.g. "West US".
func (o AppServiceEnvironmentResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Location
	}).(pulumi.StringPtrOutput)
}

// Maximum number of VMs in the App Service Environment.
func (o AppServiceEnvironmentResponsePtrOutput) MaximumNumberOfMachines() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *int {
		if v == nil {
			return nil
		}
		return &v.MaximumNumberOfMachines
	}).(pulumi.IntPtrOutput)
}

// Number of front-end instances.
func (o AppServiceEnvironmentResponsePtrOutput) MultiRoleCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *int {
		if v == nil {
			return nil
		}
		return v.MultiRoleCount
	}).(pulumi.IntPtrOutput)
}

// Front-end VM size, e.g. "Medium", "Large".
func (o AppServiceEnvironmentResponsePtrOutput) MultiSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return v.MultiSize
	}).(pulumi.StringPtrOutput)
}

// Name of the App Service Environment.
func (o AppServiceEnvironmentResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Access control list for controlling traffic to the App Service Environment.
func (o AppServiceEnvironmentResponsePtrOutput) NetworkAccessControlList() NetworkAccessControlEntryResponseArrayOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) []NetworkAccessControlEntryResponse {
		if v == nil {
			return nil
		}
		return v.NetworkAccessControlList
	}).(NetworkAccessControlEntryResponseArrayOutput)
}

// Provisioning state of the App Service Environment.
func (o AppServiceEnvironmentResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Resource group of the App Service Environment.
func (o AppServiceEnvironmentResponsePtrOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGroup
	}).(pulumi.StringPtrOutput)
}

// Current status of the App Service Environment.
func (o AppServiceEnvironmentResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// Subscription of the App Service Environment.
func (o AppServiceEnvironmentResponsePtrOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SubscriptionId
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> if the App Service Environment is suspended; otherwise, <code>false</code>. The environment can be suspended, e.g. when the management endpoint is no longer available
//  (most likely because NSG blocked the incoming traffic).
func (o AppServiceEnvironmentResponsePtrOutput) Suspended() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Suspended
	}).(pulumi.BoolPtrOutput)
}

// Number of upgrade domains of the App Service Environment.
func (o AppServiceEnvironmentResponsePtrOutput) UpgradeDomains() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *int {
		if v == nil {
			return nil
		}
		return &v.UpgradeDomains
	}).(pulumi.IntPtrOutput)
}

// User added ip ranges to whitelist on ASE db
func (o AppServiceEnvironmentResponsePtrOutput) UserWhitelistedIpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) []string {
		if v == nil {
			return nil
		}
		return v.UserWhitelistedIpRanges
	}).(pulumi.StringArrayOutput)
}

// Description of IP SSL mapping for the App Service Environment.
func (o AppServiceEnvironmentResponsePtrOutput) VipMappings() VirtualIPMappingResponseArrayOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) []VirtualIPMappingResponse {
		if v == nil {
			return nil
		}
		return v.VipMappings
	}).(VirtualIPMappingResponseArrayOutput)
}

// Description of the Virtual Network.
func (o AppServiceEnvironmentResponsePtrOutput) VirtualNetwork() VirtualNetworkProfileResponsePtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *VirtualNetworkProfileResponse {
		if v == nil {
			return nil
		}
		return &v.VirtualNetwork
	}).(VirtualNetworkProfileResponsePtrOutput)
}

// Name of the Virtual Network for the App Service Environment.
func (o AppServiceEnvironmentResponsePtrOutput) VnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return v.VnetName
	}).(pulumi.StringPtrOutput)
}

// Resource group of the Virtual Network.
func (o AppServiceEnvironmentResponsePtrOutput) VnetResourceGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return v.VnetResourceGroupName
	}).(pulumi.StringPtrOutput)
}

// Subnet of the Virtual Network.
func (o AppServiceEnvironmentResponsePtrOutput) VnetSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return v.VnetSubnetName
	}).(pulumi.StringPtrOutput)
}

// Description of worker pools with worker size IDs, VM sizes, and number of workers in each pool.
func (o AppServiceEnvironmentResponsePtrOutput) WorkerPools() WorkerPoolResponseArrayOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentResponse) []WorkerPoolResponse {
		if v == nil {
			return nil
		}
		return v.WorkerPools
	}).(WorkerPoolResponseArrayOutput)
}

// AppServicePlan resource specific properties
type AppServicePlanResponseProperties struct {
	// App Service plan administration site.
	AdminSiteName *string `pulumi:"adminSiteName"`
	// Geographical location for the App Service plan.
	GeoRegion string `pulumi:"geoRegion"`
	// Specification for the App Service Environment to use for the App Service plan.
	HostingEnvironmentProfile *HostingEnvironmentProfileResponse `pulumi:"hostingEnvironmentProfile"`
	// If <code>true</code>, this App Service Plan owns spot instances.
	IsSpot *bool `pulumi:"isSpot"`
	// Maximum number of instances that can be assigned to this App Service plan.
	MaximumNumberOfWorkers int `pulumi:"maximumNumberOfWorkers"`
	// Name for the App Service plan.
	Name string `pulumi:"name"`
	// Number of apps assigned to this App Service plan.
	NumberOfSites int `pulumi:"numberOfSites"`
	// If <code>true</code>, apps assigned to this App Service plan can be scaled independently.
	// If <code>false</code>, apps assigned to this App Service plan will scale to all instances of the plan.
	PerSiteScaling *bool `pulumi:"perSiteScaling"`
	// Provisioning state of the App Service Environment.
	ProvisioningState string `pulumi:"provisioningState"`
	// If Linux app service plan <code>true</code>, <code>false</code> otherwise.
	Reserved *bool `pulumi:"reserved"`
	// Resource group of the App Service plan.
	ResourceGroup string `pulumi:"resourceGroup"`
	// The time when the server farm expires. Valid only if it is a spot server farm.
	SpotExpirationTime *string `pulumi:"spotExpirationTime"`
	// App Service plan status.
	Status string `pulumi:"status"`
	// App Service plan subscription.
	Subscription string `pulumi:"subscription"`
	// Scaling worker count.
	TargetWorkerCount *int `pulumi:"targetWorkerCount"`
	// Scaling worker size ID.
	TargetWorkerSizeId *int `pulumi:"targetWorkerSizeId"`
	// Target worker tier assigned to the App Service plan.
	WorkerTierName *string `pulumi:"workerTierName"`
}

// AppServicePlanResponsePropertiesInput is an input type that accepts AppServicePlanResponsePropertiesArgs and AppServicePlanResponsePropertiesOutput values.
// You can construct a concrete instance of `AppServicePlanResponsePropertiesInput` via:
//
//          AppServicePlanResponsePropertiesArgs{...}
type AppServicePlanResponsePropertiesInput interface {
	pulumi.Input

	ToAppServicePlanResponsePropertiesOutput() AppServicePlanResponsePropertiesOutput
	ToAppServicePlanResponsePropertiesOutputWithContext(context.Context) AppServicePlanResponsePropertiesOutput
}

// AppServicePlan resource specific properties
type AppServicePlanResponsePropertiesArgs struct {
	// App Service plan administration site.
	AdminSiteName pulumi.StringPtrInput `pulumi:"adminSiteName"`
	// Geographical location for the App Service plan.
	GeoRegion pulumi.StringInput `pulumi:"geoRegion"`
	// Specification for the App Service Environment to use for the App Service plan.
	HostingEnvironmentProfile HostingEnvironmentProfileResponsePtrInput `pulumi:"hostingEnvironmentProfile"`
	// If <code>true</code>, this App Service Plan owns spot instances.
	IsSpot pulumi.BoolPtrInput `pulumi:"isSpot"`
	// Maximum number of instances that can be assigned to this App Service plan.
	MaximumNumberOfWorkers pulumi.IntInput `pulumi:"maximumNumberOfWorkers"`
	// Name for the App Service plan.
	Name pulumi.StringInput `pulumi:"name"`
	// Number of apps assigned to this App Service plan.
	NumberOfSites pulumi.IntInput `pulumi:"numberOfSites"`
	// If <code>true</code>, apps assigned to this App Service plan can be scaled independently.
	// If <code>false</code>, apps assigned to this App Service plan will scale to all instances of the plan.
	PerSiteScaling pulumi.BoolPtrInput `pulumi:"perSiteScaling"`
	// Provisioning state of the App Service Environment.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// If Linux app service plan <code>true</code>, <code>false</code> otherwise.
	Reserved pulumi.BoolPtrInput `pulumi:"reserved"`
	// Resource group of the App Service plan.
	ResourceGroup pulumi.StringInput `pulumi:"resourceGroup"`
	// The time when the server farm expires. Valid only if it is a spot server farm.
	SpotExpirationTime pulumi.StringPtrInput `pulumi:"spotExpirationTime"`
	// App Service plan status.
	Status pulumi.StringInput `pulumi:"status"`
	// App Service plan subscription.
	Subscription pulumi.StringInput `pulumi:"subscription"`
	// Scaling worker count.
	TargetWorkerCount pulumi.IntPtrInput `pulumi:"targetWorkerCount"`
	// Scaling worker size ID.
	TargetWorkerSizeId pulumi.IntPtrInput `pulumi:"targetWorkerSizeId"`
	// Target worker tier assigned to the App Service plan.
	WorkerTierName pulumi.StringPtrInput `pulumi:"workerTierName"`
}

func (AppServicePlanResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServicePlanResponseProperties)(nil)).Elem()
}

func (i AppServicePlanResponsePropertiesArgs) ToAppServicePlanResponsePropertiesOutput() AppServicePlanResponsePropertiesOutput {
	return i.ToAppServicePlanResponsePropertiesOutputWithContext(context.Background())
}

func (i AppServicePlanResponsePropertiesArgs) ToAppServicePlanResponsePropertiesOutputWithContext(ctx context.Context) AppServicePlanResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServicePlanResponsePropertiesOutput)
}

func (i AppServicePlanResponsePropertiesArgs) ToAppServicePlanResponsePropertiesPtrOutput() AppServicePlanResponsePropertiesPtrOutput {
	return i.ToAppServicePlanResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i AppServicePlanResponsePropertiesArgs) ToAppServicePlanResponsePropertiesPtrOutputWithContext(ctx context.Context) AppServicePlanResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServicePlanResponsePropertiesOutput).ToAppServicePlanResponsePropertiesPtrOutputWithContext(ctx)
}

// AppServicePlanResponsePropertiesPtrInput is an input type that accepts AppServicePlanResponsePropertiesArgs, AppServicePlanResponsePropertiesPtr and AppServicePlanResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `AppServicePlanResponsePropertiesPtrInput` via:
//
//          AppServicePlanResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type AppServicePlanResponsePropertiesPtrInput interface {
	pulumi.Input

	ToAppServicePlanResponsePropertiesPtrOutput() AppServicePlanResponsePropertiesPtrOutput
	ToAppServicePlanResponsePropertiesPtrOutputWithContext(context.Context) AppServicePlanResponsePropertiesPtrOutput
}

type appServicePlanResponsePropertiesPtrType AppServicePlanResponsePropertiesArgs

func AppServicePlanResponsePropertiesPtr(v *AppServicePlanResponsePropertiesArgs) AppServicePlanResponsePropertiesPtrInput {
	return (*appServicePlanResponsePropertiesPtrType)(v)
}

func (*appServicePlanResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServicePlanResponseProperties)(nil)).Elem()
}

func (i *appServicePlanResponsePropertiesPtrType) ToAppServicePlanResponsePropertiesPtrOutput() AppServicePlanResponsePropertiesPtrOutput {
	return i.ToAppServicePlanResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *appServicePlanResponsePropertiesPtrType) ToAppServicePlanResponsePropertiesPtrOutputWithContext(ctx context.Context) AppServicePlanResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServicePlanResponsePropertiesPtrOutput)
}

// AppServicePlan resource specific properties
type AppServicePlanResponsePropertiesOutput struct{ *pulumi.OutputState }

func (AppServicePlanResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServicePlanResponseProperties)(nil)).Elem()
}

func (o AppServicePlanResponsePropertiesOutput) ToAppServicePlanResponsePropertiesOutput() AppServicePlanResponsePropertiesOutput {
	return o
}

func (o AppServicePlanResponsePropertiesOutput) ToAppServicePlanResponsePropertiesOutputWithContext(ctx context.Context) AppServicePlanResponsePropertiesOutput {
	return o
}

func (o AppServicePlanResponsePropertiesOutput) ToAppServicePlanResponsePropertiesPtrOutput() AppServicePlanResponsePropertiesPtrOutput {
	return o.ToAppServicePlanResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o AppServicePlanResponsePropertiesOutput) ToAppServicePlanResponsePropertiesPtrOutputWithContext(ctx context.Context) AppServicePlanResponsePropertiesPtrOutput {
	return o.ApplyT(func(v AppServicePlanResponseProperties) *AppServicePlanResponseProperties {
		return &v
	}).(AppServicePlanResponsePropertiesPtrOutput)
}

// App Service plan administration site.
func (o AppServicePlanResponsePropertiesOutput) AdminSiteName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServicePlanResponseProperties) *string { return v.AdminSiteName }).(pulumi.StringPtrOutput)
}

// Geographical location for the App Service plan.
func (o AppServicePlanResponsePropertiesOutput) GeoRegion() pulumi.StringOutput {
	return o.ApplyT(func(v AppServicePlanResponseProperties) string { return v.GeoRegion }).(pulumi.StringOutput)
}

// Specification for the App Service Environment to use for the App Service plan.
func (o AppServicePlanResponsePropertiesOutput) HostingEnvironmentProfile() HostingEnvironmentProfileResponsePtrOutput {
	return o.ApplyT(func(v AppServicePlanResponseProperties) *HostingEnvironmentProfileResponse {
		return v.HostingEnvironmentProfile
	}).(HostingEnvironmentProfileResponsePtrOutput)
}

// If <code>true</code>, this App Service Plan owns spot instances.
func (o AppServicePlanResponsePropertiesOutput) IsSpot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppServicePlanResponseProperties) *bool { return v.IsSpot }).(pulumi.BoolPtrOutput)
}

// Maximum number of instances that can be assigned to this App Service plan.
func (o AppServicePlanResponsePropertiesOutput) MaximumNumberOfWorkers() pulumi.IntOutput {
	return o.ApplyT(func(v AppServicePlanResponseProperties) int { return v.MaximumNumberOfWorkers }).(pulumi.IntOutput)
}

// Name for the App Service plan.
func (o AppServicePlanResponsePropertiesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AppServicePlanResponseProperties) string { return v.Name }).(pulumi.StringOutput)
}

// Number of apps assigned to this App Service plan.
func (o AppServicePlanResponsePropertiesOutput) NumberOfSites() pulumi.IntOutput {
	return o.ApplyT(func(v AppServicePlanResponseProperties) int { return v.NumberOfSites }).(pulumi.IntOutput)
}

// If <code>true</code>, apps assigned to this App Service plan can be scaled independently.
// If <code>false</code>, apps assigned to this App Service plan will scale to all instances of the plan.
func (o AppServicePlanResponsePropertiesOutput) PerSiteScaling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppServicePlanResponseProperties) *bool { return v.PerSiteScaling }).(pulumi.BoolPtrOutput)
}

// Provisioning state of the App Service Environment.
func (o AppServicePlanResponsePropertiesOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AppServicePlanResponseProperties) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// If Linux app service plan <code>true</code>, <code>false</code> otherwise.
func (o AppServicePlanResponsePropertiesOutput) Reserved() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppServicePlanResponseProperties) *bool { return v.Reserved }).(pulumi.BoolPtrOutput)
}

// Resource group of the App Service plan.
func (o AppServicePlanResponsePropertiesOutput) ResourceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v AppServicePlanResponseProperties) string { return v.ResourceGroup }).(pulumi.StringOutput)
}

// The time when the server farm expires. Valid only if it is a spot server farm.
func (o AppServicePlanResponsePropertiesOutput) SpotExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServicePlanResponseProperties) *string { return v.SpotExpirationTime }).(pulumi.StringPtrOutput)
}

// App Service plan status.
func (o AppServicePlanResponsePropertiesOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v AppServicePlanResponseProperties) string { return v.Status }).(pulumi.StringOutput)
}

// App Service plan subscription.
func (o AppServicePlanResponsePropertiesOutput) Subscription() pulumi.StringOutput {
	return o.ApplyT(func(v AppServicePlanResponseProperties) string { return v.Subscription }).(pulumi.StringOutput)
}

// Scaling worker count.
func (o AppServicePlanResponsePropertiesOutput) TargetWorkerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppServicePlanResponseProperties) *int { return v.TargetWorkerCount }).(pulumi.IntPtrOutput)
}

// Scaling worker size ID.
func (o AppServicePlanResponsePropertiesOutput) TargetWorkerSizeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppServicePlanResponseProperties) *int { return v.TargetWorkerSizeId }).(pulumi.IntPtrOutput)
}

// Target worker tier assigned to the App Service plan.
func (o AppServicePlanResponsePropertiesOutput) WorkerTierName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServicePlanResponseProperties) *string { return v.WorkerTierName }).(pulumi.StringPtrOutput)
}

type AppServicePlanResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (AppServicePlanResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServicePlanResponseProperties)(nil)).Elem()
}

func (o AppServicePlanResponsePropertiesPtrOutput) ToAppServicePlanResponsePropertiesPtrOutput() AppServicePlanResponsePropertiesPtrOutput {
	return o
}

func (o AppServicePlanResponsePropertiesPtrOutput) ToAppServicePlanResponsePropertiesPtrOutputWithContext(ctx context.Context) AppServicePlanResponsePropertiesPtrOutput {
	return o
}

func (o AppServicePlanResponsePropertiesPtrOutput) Elem() AppServicePlanResponsePropertiesOutput {
	return o.ApplyT(func(v *AppServicePlanResponseProperties) AppServicePlanResponseProperties { return *v }).(AppServicePlanResponsePropertiesOutput)
}

// App Service plan administration site.
func (o AppServicePlanResponsePropertiesPtrOutput) AdminSiteName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServicePlanResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.AdminSiteName
	}).(pulumi.StringPtrOutput)
}

// Geographical location for the App Service plan.
func (o AppServicePlanResponsePropertiesPtrOutput) GeoRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServicePlanResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.GeoRegion
	}).(pulumi.StringPtrOutput)
}

// Specification for the App Service Environment to use for the App Service plan.
func (o AppServicePlanResponsePropertiesPtrOutput) HostingEnvironmentProfile() HostingEnvironmentProfileResponsePtrOutput {
	return o.ApplyT(func(v *AppServicePlanResponseProperties) *HostingEnvironmentProfileResponse {
		if v == nil {
			return nil
		}
		return v.HostingEnvironmentProfile
	}).(HostingEnvironmentProfileResponsePtrOutput)
}

// If <code>true</code>, this App Service Plan owns spot instances.
func (o AppServicePlanResponsePropertiesPtrOutput) IsSpot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppServicePlanResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsSpot
	}).(pulumi.BoolPtrOutput)
}

// Maximum number of instances that can be assigned to this App Service plan.
func (o AppServicePlanResponsePropertiesPtrOutput) MaximumNumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppServicePlanResponseProperties) *int {
		if v == nil {
			return nil
		}
		return &v.MaximumNumberOfWorkers
	}).(pulumi.IntPtrOutput)
}

// Name for the App Service plan.
func (o AppServicePlanResponsePropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServicePlanResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Number of apps assigned to this App Service plan.
func (o AppServicePlanResponsePropertiesPtrOutput) NumberOfSites() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppServicePlanResponseProperties) *int {
		if v == nil {
			return nil
		}
		return &v.NumberOfSites
	}).(pulumi.IntPtrOutput)
}

// If <code>true</code>, apps assigned to this App Service plan can be scaled independently.
// If <code>false</code>, apps assigned to this App Service plan will scale to all instances of the plan.
func (o AppServicePlanResponsePropertiesPtrOutput) PerSiteScaling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppServicePlanResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.PerSiteScaling
	}).(pulumi.BoolPtrOutput)
}

// Provisioning state of the App Service Environment.
func (o AppServicePlanResponsePropertiesPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServicePlanResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// If Linux app service plan <code>true</code>, <code>false</code> otherwise.
func (o AppServicePlanResponsePropertiesPtrOutput) Reserved() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppServicePlanResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Reserved
	}).(pulumi.BoolPtrOutput)
}

// Resource group of the App Service plan.
func (o AppServicePlanResponsePropertiesPtrOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServicePlanResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGroup
	}).(pulumi.StringPtrOutput)
}

// The time when the server farm expires. Valid only if it is a spot server farm.
func (o AppServicePlanResponsePropertiesPtrOutput) SpotExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServicePlanResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.SpotExpirationTime
	}).(pulumi.StringPtrOutput)
}

// App Service plan status.
func (o AppServicePlanResponsePropertiesPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServicePlanResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// App Service plan subscription.
func (o AppServicePlanResponsePropertiesPtrOutput) Subscription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServicePlanResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Subscription
	}).(pulumi.StringPtrOutput)
}

// Scaling worker count.
func (o AppServicePlanResponsePropertiesPtrOutput) TargetWorkerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppServicePlanResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.TargetWorkerCount
	}).(pulumi.IntPtrOutput)
}

// Scaling worker size ID.
func (o AppServicePlanResponsePropertiesPtrOutput) TargetWorkerSizeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppServicePlanResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.TargetWorkerSizeId
	}).(pulumi.IntPtrOutput)
}

// Target worker tier assigned to the App Service plan.
func (o AppServicePlanResponsePropertiesPtrOutput) WorkerTierName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServicePlanResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.WorkerTierName
	}).(pulumi.StringPtrOutput)
}

// Describes the capabilities/features allowed for a specific SKU.
type Capability struct {
	// Name of the SKU capability.
	Name *string `pulumi:"name"`
	// Reason of the SKU capability.
	Reason *string `pulumi:"reason"`
	// Value of the SKU capability.
	Value *string `pulumi:"value"`
}

// CapabilityInput is an input type that accepts CapabilityArgs and CapabilityOutput values.
// You can construct a concrete instance of `CapabilityInput` via:
//
//          CapabilityArgs{...}
type CapabilityInput interface {
	pulumi.Input

	ToCapabilityOutput() CapabilityOutput
	ToCapabilityOutputWithContext(context.Context) CapabilityOutput
}

// Describes the capabilities/features allowed for a specific SKU.
type CapabilityArgs struct {
	// Name of the SKU capability.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Reason of the SKU capability.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// Value of the SKU capability.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (CapabilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Capability)(nil)).Elem()
}

func (i CapabilityArgs) ToCapabilityOutput() CapabilityOutput {
	return i.ToCapabilityOutputWithContext(context.Background())
}

func (i CapabilityArgs) ToCapabilityOutputWithContext(ctx context.Context) CapabilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapabilityOutput)
}

// CapabilityArrayInput is an input type that accepts CapabilityArray and CapabilityArrayOutput values.
// You can construct a concrete instance of `CapabilityArrayInput` via:
//
//          CapabilityArray{ CapabilityArgs{...} }
type CapabilityArrayInput interface {
	pulumi.Input

	ToCapabilityArrayOutput() CapabilityArrayOutput
	ToCapabilityArrayOutputWithContext(context.Context) CapabilityArrayOutput
}

type CapabilityArray []CapabilityInput

func (CapabilityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Capability)(nil)).Elem()
}

func (i CapabilityArray) ToCapabilityArrayOutput() CapabilityArrayOutput {
	return i.ToCapabilityArrayOutputWithContext(context.Background())
}

func (i CapabilityArray) ToCapabilityArrayOutputWithContext(ctx context.Context) CapabilityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapabilityArrayOutput)
}

// Describes the capabilities/features allowed for a specific SKU.
type CapabilityOutput struct{ *pulumi.OutputState }

func (CapabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Capability)(nil)).Elem()
}

func (o CapabilityOutput) ToCapabilityOutput() CapabilityOutput {
	return o
}

func (o CapabilityOutput) ToCapabilityOutputWithContext(ctx context.Context) CapabilityOutput {
	return o
}

// Name of the SKU capability.
func (o CapabilityOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Capability) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Reason of the SKU capability.
func (o CapabilityOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Capability) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// Value of the SKU capability.
func (o CapabilityOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Capability) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type CapabilityArrayOutput struct{ *pulumi.OutputState }

func (CapabilityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Capability)(nil)).Elem()
}

func (o CapabilityArrayOutput) ToCapabilityArrayOutput() CapabilityArrayOutput {
	return o
}

func (o CapabilityArrayOutput) ToCapabilityArrayOutputWithContext(ctx context.Context) CapabilityArrayOutput {
	return o
}

func (o CapabilityArrayOutput) Index(i pulumi.IntInput) CapabilityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Capability {
		return vs[0].([]Capability)[vs[1].(int)]
	}).(CapabilityOutput)
}

// Describes the capabilities/features allowed for a specific SKU.
type CapabilityResponse struct {
	// Name of the SKU capability.
	Name *string `pulumi:"name"`
	// Reason of the SKU capability.
	Reason *string `pulumi:"reason"`
	// Value of the SKU capability.
	Value *string `pulumi:"value"`
}

// CapabilityResponseInput is an input type that accepts CapabilityResponseArgs and CapabilityResponseOutput values.
// You can construct a concrete instance of `CapabilityResponseInput` via:
//
//          CapabilityResponseArgs{...}
type CapabilityResponseInput interface {
	pulumi.Input

	ToCapabilityResponseOutput() CapabilityResponseOutput
	ToCapabilityResponseOutputWithContext(context.Context) CapabilityResponseOutput
}

// Describes the capabilities/features allowed for a specific SKU.
type CapabilityResponseArgs struct {
	// Name of the SKU capability.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Reason of the SKU capability.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// Value of the SKU capability.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (CapabilityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CapabilityResponse)(nil)).Elem()
}

func (i CapabilityResponseArgs) ToCapabilityResponseOutput() CapabilityResponseOutput {
	return i.ToCapabilityResponseOutputWithContext(context.Background())
}

func (i CapabilityResponseArgs) ToCapabilityResponseOutputWithContext(ctx context.Context) CapabilityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapabilityResponseOutput)
}

// CapabilityResponseArrayInput is an input type that accepts CapabilityResponseArray and CapabilityResponseArrayOutput values.
// You can construct a concrete instance of `CapabilityResponseArrayInput` via:
//
//          CapabilityResponseArray{ CapabilityResponseArgs{...} }
type CapabilityResponseArrayInput interface {
	pulumi.Input

	ToCapabilityResponseArrayOutput() CapabilityResponseArrayOutput
	ToCapabilityResponseArrayOutputWithContext(context.Context) CapabilityResponseArrayOutput
}

type CapabilityResponseArray []CapabilityResponseInput

func (CapabilityResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CapabilityResponse)(nil)).Elem()
}

func (i CapabilityResponseArray) ToCapabilityResponseArrayOutput() CapabilityResponseArrayOutput {
	return i.ToCapabilityResponseArrayOutputWithContext(context.Background())
}

func (i CapabilityResponseArray) ToCapabilityResponseArrayOutputWithContext(ctx context.Context) CapabilityResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapabilityResponseArrayOutput)
}

// Describes the capabilities/features allowed for a specific SKU.
type CapabilityResponseOutput struct{ *pulumi.OutputState }

func (CapabilityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CapabilityResponse)(nil)).Elem()
}

func (o CapabilityResponseOutput) ToCapabilityResponseOutput() CapabilityResponseOutput {
	return o
}

func (o CapabilityResponseOutput) ToCapabilityResponseOutputWithContext(ctx context.Context) CapabilityResponseOutput {
	return o
}

// Name of the SKU capability.
func (o CapabilityResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CapabilityResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Reason of the SKU capability.
func (o CapabilityResponseOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CapabilityResponse) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// Value of the SKU capability.
func (o CapabilityResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CapabilityResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type CapabilityResponseArrayOutput struct{ *pulumi.OutputState }

func (CapabilityResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CapabilityResponse)(nil)).Elem()
}

func (o CapabilityResponseArrayOutput) ToCapabilityResponseArrayOutput() CapabilityResponseArrayOutput {
	return o
}

func (o CapabilityResponseArrayOutput) ToCapabilityResponseArrayOutputWithContext(ctx context.Context) CapabilityResponseArrayOutput {
	return o
}

func (o CapabilityResponseArrayOutput) Index(i pulumi.IntInput) CapabilityResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CapabilityResponse {
		return vs[0].([]CapabilityResponse)[vs[1].(int)]
	}).(CapabilityResponseOutput)
}

// Specification for an App Service Environment to use for this resource.
type HostingEnvironmentProfile struct {
	// Resource ID of the App Service Environment.
	Id *string `pulumi:"id"`
}

// HostingEnvironmentProfileInput is an input type that accepts HostingEnvironmentProfileArgs and HostingEnvironmentProfileOutput values.
// You can construct a concrete instance of `HostingEnvironmentProfileInput` via:
//
//          HostingEnvironmentProfileArgs{...}
type HostingEnvironmentProfileInput interface {
	pulumi.Input

	ToHostingEnvironmentProfileOutput() HostingEnvironmentProfileOutput
	ToHostingEnvironmentProfileOutputWithContext(context.Context) HostingEnvironmentProfileOutput
}

// Specification for an App Service Environment to use for this resource.
type HostingEnvironmentProfileArgs struct {
	// Resource ID of the App Service Environment.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (HostingEnvironmentProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingEnvironmentProfile)(nil)).Elem()
}

func (i HostingEnvironmentProfileArgs) ToHostingEnvironmentProfileOutput() HostingEnvironmentProfileOutput {
	return i.ToHostingEnvironmentProfileOutputWithContext(context.Background())
}

func (i HostingEnvironmentProfileArgs) ToHostingEnvironmentProfileOutputWithContext(ctx context.Context) HostingEnvironmentProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingEnvironmentProfileOutput)
}

func (i HostingEnvironmentProfileArgs) ToHostingEnvironmentProfilePtrOutput() HostingEnvironmentProfilePtrOutput {
	return i.ToHostingEnvironmentProfilePtrOutputWithContext(context.Background())
}

func (i HostingEnvironmentProfileArgs) ToHostingEnvironmentProfilePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingEnvironmentProfileOutput).ToHostingEnvironmentProfilePtrOutputWithContext(ctx)
}

// HostingEnvironmentProfilePtrInput is an input type that accepts HostingEnvironmentProfileArgs, HostingEnvironmentProfilePtr and HostingEnvironmentProfilePtrOutput values.
// You can construct a concrete instance of `HostingEnvironmentProfilePtrInput` via:
//
//          HostingEnvironmentProfileArgs{...}
//
//  or:
//
//          nil
type HostingEnvironmentProfilePtrInput interface {
	pulumi.Input

	ToHostingEnvironmentProfilePtrOutput() HostingEnvironmentProfilePtrOutput
	ToHostingEnvironmentProfilePtrOutputWithContext(context.Context) HostingEnvironmentProfilePtrOutput
}

type hostingEnvironmentProfilePtrType HostingEnvironmentProfileArgs

func HostingEnvironmentProfilePtr(v *HostingEnvironmentProfileArgs) HostingEnvironmentProfilePtrInput {
	return (*hostingEnvironmentProfilePtrType)(v)
}

func (*hostingEnvironmentProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingEnvironmentProfile)(nil)).Elem()
}

func (i *hostingEnvironmentProfilePtrType) ToHostingEnvironmentProfilePtrOutput() HostingEnvironmentProfilePtrOutput {
	return i.ToHostingEnvironmentProfilePtrOutputWithContext(context.Background())
}

func (i *hostingEnvironmentProfilePtrType) ToHostingEnvironmentProfilePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingEnvironmentProfilePtrOutput)
}

// Specification for an App Service Environment to use for this resource.
type HostingEnvironmentProfileOutput struct{ *pulumi.OutputState }

func (HostingEnvironmentProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingEnvironmentProfile)(nil)).Elem()
}

func (o HostingEnvironmentProfileOutput) ToHostingEnvironmentProfileOutput() HostingEnvironmentProfileOutput {
	return o
}

func (o HostingEnvironmentProfileOutput) ToHostingEnvironmentProfileOutputWithContext(ctx context.Context) HostingEnvironmentProfileOutput {
	return o
}

func (o HostingEnvironmentProfileOutput) ToHostingEnvironmentProfilePtrOutput() HostingEnvironmentProfilePtrOutput {
	return o.ToHostingEnvironmentProfilePtrOutputWithContext(context.Background())
}

func (o HostingEnvironmentProfileOutput) ToHostingEnvironmentProfilePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfilePtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProfile) *HostingEnvironmentProfile {
		return &v
	}).(HostingEnvironmentProfilePtrOutput)
}

// Resource ID of the App Service Environment.
func (o HostingEnvironmentProfileOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProfile) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type HostingEnvironmentProfilePtrOutput struct{ *pulumi.OutputState }

func (HostingEnvironmentProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingEnvironmentProfile)(nil)).Elem()
}

func (o HostingEnvironmentProfilePtrOutput) ToHostingEnvironmentProfilePtrOutput() HostingEnvironmentProfilePtrOutput {
	return o
}

func (o HostingEnvironmentProfilePtrOutput) ToHostingEnvironmentProfilePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfilePtrOutput {
	return o
}

func (o HostingEnvironmentProfilePtrOutput) Elem() HostingEnvironmentProfileOutput {
	return o.ApplyT(func(v *HostingEnvironmentProfile) HostingEnvironmentProfile { return *v }).(HostingEnvironmentProfileOutput)
}

// Resource ID of the App Service Environment.
func (o HostingEnvironmentProfilePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProfile) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Specification for an App Service Environment to use for this resource.
type HostingEnvironmentProfileResponse struct {
	// Resource ID of the App Service Environment.
	Id *string `pulumi:"id"`
	// Name of the App Service Environment.
	Name string `pulumi:"name"`
	// Resource type of the App Service Environment.
	Type string `pulumi:"type"`
}

// HostingEnvironmentProfileResponseInput is an input type that accepts HostingEnvironmentProfileResponseArgs and HostingEnvironmentProfileResponseOutput values.
// You can construct a concrete instance of `HostingEnvironmentProfileResponseInput` via:
//
//          HostingEnvironmentProfileResponseArgs{...}
type HostingEnvironmentProfileResponseInput interface {
	pulumi.Input

	ToHostingEnvironmentProfileResponseOutput() HostingEnvironmentProfileResponseOutput
	ToHostingEnvironmentProfileResponseOutputWithContext(context.Context) HostingEnvironmentProfileResponseOutput
}

// Specification for an App Service Environment to use for this resource.
type HostingEnvironmentProfileResponseArgs struct {
	// Resource ID of the App Service Environment.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the App Service Environment.
	Name pulumi.StringInput `pulumi:"name"`
	// Resource type of the App Service Environment.
	Type pulumi.StringInput `pulumi:"type"`
}

func (HostingEnvironmentProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingEnvironmentProfileResponse)(nil)).Elem()
}

func (i HostingEnvironmentProfileResponseArgs) ToHostingEnvironmentProfileResponseOutput() HostingEnvironmentProfileResponseOutput {
	return i.ToHostingEnvironmentProfileResponseOutputWithContext(context.Background())
}

func (i HostingEnvironmentProfileResponseArgs) ToHostingEnvironmentProfileResponseOutputWithContext(ctx context.Context) HostingEnvironmentProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingEnvironmentProfileResponseOutput)
}

func (i HostingEnvironmentProfileResponseArgs) ToHostingEnvironmentProfileResponsePtrOutput() HostingEnvironmentProfileResponsePtrOutput {
	return i.ToHostingEnvironmentProfileResponsePtrOutputWithContext(context.Background())
}

func (i HostingEnvironmentProfileResponseArgs) ToHostingEnvironmentProfileResponsePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingEnvironmentProfileResponseOutput).ToHostingEnvironmentProfileResponsePtrOutputWithContext(ctx)
}

// HostingEnvironmentProfileResponsePtrInput is an input type that accepts HostingEnvironmentProfileResponseArgs, HostingEnvironmentProfileResponsePtr and HostingEnvironmentProfileResponsePtrOutput values.
// You can construct a concrete instance of `HostingEnvironmentProfileResponsePtrInput` via:
//
//          HostingEnvironmentProfileResponseArgs{...}
//
//  or:
//
//          nil
type HostingEnvironmentProfileResponsePtrInput interface {
	pulumi.Input

	ToHostingEnvironmentProfileResponsePtrOutput() HostingEnvironmentProfileResponsePtrOutput
	ToHostingEnvironmentProfileResponsePtrOutputWithContext(context.Context) HostingEnvironmentProfileResponsePtrOutput
}

type hostingEnvironmentProfileResponsePtrType HostingEnvironmentProfileResponseArgs

func HostingEnvironmentProfileResponsePtr(v *HostingEnvironmentProfileResponseArgs) HostingEnvironmentProfileResponsePtrInput {
	return (*hostingEnvironmentProfileResponsePtrType)(v)
}

func (*hostingEnvironmentProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingEnvironmentProfileResponse)(nil)).Elem()
}

func (i *hostingEnvironmentProfileResponsePtrType) ToHostingEnvironmentProfileResponsePtrOutput() HostingEnvironmentProfileResponsePtrOutput {
	return i.ToHostingEnvironmentProfileResponsePtrOutputWithContext(context.Background())
}

func (i *hostingEnvironmentProfileResponsePtrType) ToHostingEnvironmentProfileResponsePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingEnvironmentProfileResponsePtrOutput)
}

// Specification for an App Service Environment to use for this resource.
type HostingEnvironmentProfileResponseOutput struct{ *pulumi.OutputState }

func (HostingEnvironmentProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingEnvironmentProfileResponse)(nil)).Elem()
}

func (o HostingEnvironmentProfileResponseOutput) ToHostingEnvironmentProfileResponseOutput() HostingEnvironmentProfileResponseOutput {
	return o
}

func (o HostingEnvironmentProfileResponseOutput) ToHostingEnvironmentProfileResponseOutputWithContext(ctx context.Context) HostingEnvironmentProfileResponseOutput {
	return o
}

func (o HostingEnvironmentProfileResponseOutput) ToHostingEnvironmentProfileResponsePtrOutput() HostingEnvironmentProfileResponsePtrOutput {
	return o.ToHostingEnvironmentProfileResponsePtrOutputWithContext(context.Background())
}

func (o HostingEnvironmentProfileResponseOutput) ToHostingEnvironmentProfileResponsePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfileResponsePtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProfileResponse) *HostingEnvironmentProfileResponse {
		return &v
	}).(HostingEnvironmentProfileResponsePtrOutput)
}

// Resource ID of the App Service Environment.
func (o HostingEnvironmentProfileResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProfileResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the App Service Environment.
func (o HostingEnvironmentProfileResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v HostingEnvironmentProfileResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Resource type of the App Service Environment.
func (o HostingEnvironmentProfileResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HostingEnvironmentProfileResponse) string { return v.Type }).(pulumi.StringOutput)
}

type HostingEnvironmentProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (HostingEnvironmentProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingEnvironmentProfileResponse)(nil)).Elem()
}

func (o HostingEnvironmentProfileResponsePtrOutput) ToHostingEnvironmentProfileResponsePtrOutput() HostingEnvironmentProfileResponsePtrOutput {
	return o
}

func (o HostingEnvironmentProfileResponsePtrOutput) ToHostingEnvironmentProfileResponsePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfileResponsePtrOutput {
	return o
}

func (o HostingEnvironmentProfileResponsePtrOutput) Elem() HostingEnvironmentProfileResponseOutput {
	return o.ApplyT(func(v *HostingEnvironmentProfileResponse) HostingEnvironmentProfileResponse { return *v }).(HostingEnvironmentProfileResponseOutput)
}

// Resource ID of the App Service Environment.
func (o HostingEnvironmentProfileResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Name of the App Service Environment.
func (o HostingEnvironmentProfileResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Resource type of the App Service Environment.
func (o HostingEnvironmentProfileResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// HybridConnectionKey resource specific properties
type HybridConnectionKeyResponseProperties struct {
	// The name of the send key.
	SendKeyName string `pulumi:"sendKeyName"`
	// The value of the send key.
	SendKeyValue string `pulumi:"sendKeyValue"`
}

// HybridConnectionKeyResponsePropertiesInput is an input type that accepts HybridConnectionKeyResponsePropertiesArgs and HybridConnectionKeyResponsePropertiesOutput values.
// You can construct a concrete instance of `HybridConnectionKeyResponsePropertiesInput` via:
//
//          HybridConnectionKeyResponsePropertiesArgs{...}
type HybridConnectionKeyResponsePropertiesInput interface {
	pulumi.Input

	ToHybridConnectionKeyResponsePropertiesOutput() HybridConnectionKeyResponsePropertiesOutput
	ToHybridConnectionKeyResponsePropertiesOutputWithContext(context.Context) HybridConnectionKeyResponsePropertiesOutput
}

// HybridConnectionKey resource specific properties
type HybridConnectionKeyResponsePropertiesArgs struct {
	// The name of the send key.
	SendKeyName pulumi.StringInput `pulumi:"sendKeyName"`
	// The value of the send key.
	SendKeyValue pulumi.StringInput `pulumi:"sendKeyValue"`
}

func (HybridConnectionKeyResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HybridConnectionKeyResponseProperties)(nil)).Elem()
}

func (i HybridConnectionKeyResponsePropertiesArgs) ToHybridConnectionKeyResponsePropertiesOutput() HybridConnectionKeyResponsePropertiesOutput {
	return i.ToHybridConnectionKeyResponsePropertiesOutputWithContext(context.Background())
}

func (i HybridConnectionKeyResponsePropertiesArgs) ToHybridConnectionKeyResponsePropertiesOutputWithContext(ctx context.Context) HybridConnectionKeyResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HybridConnectionKeyResponsePropertiesOutput)
}

// HybridConnectionKey resource specific properties
type HybridConnectionKeyResponsePropertiesOutput struct{ *pulumi.OutputState }

func (HybridConnectionKeyResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HybridConnectionKeyResponseProperties)(nil)).Elem()
}

func (o HybridConnectionKeyResponsePropertiesOutput) ToHybridConnectionKeyResponsePropertiesOutput() HybridConnectionKeyResponsePropertiesOutput {
	return o
}

func (o HybridConnectionKeyResponsePropertiesOutput) ToHybridConnectionKeyResponsePropertiesOutputWithContext(ctx context.Context) HybridConnectionKeyResponsePropertiesOutput {
	return o
}

// The name of the send key.
func (o HybridConnectionKeyResponsePropertiesOutput) SendKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v HybridConnectionKeyResponseProperties) string { return v.SendKeyName }).(pulumi.StringOutput)
}

// The value of the send key.
func (o HybridConnectionKeyResponsePropertiesOutput) SendKeyValue() pulumi.StringOutput {
	return o.ApplyT(func(v HybridConnectionKeyResponseProperties) string { return v.SendKeyValue }).(pulumi.StringOutput)
}

// Name value pair.
type NameValuePair struct {
	// Pair name.
	Name *string `pulumi:"name"`
	// Pair value.
	Value *string `pulumi:"value"`
}

// NameValuePairInput is an input type that accepts NameValuePairArgs and NameValuePairOutput values.
// You can construct a concrete instance of `NameValuePairInput` via:
//
//          NameValuePairArgs{...}
type NameValuePairInput interface {
	pulumi.Input

	ToNameValuePairOutput() NameValuePairOutput
	ToNameValuePairOutputWithContext(context.Context) NameValuePairOutput
}

// Name value pair.
type NameValuePairArgs struct {
	// Pair name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Pair value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NameValuePairArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NameValuePair)(nil)).Elem()
}

func (i NameValuePairArgs) ToNameValuePairOutput() NameValuePairOutput {
	return i.ToNameValuePairOutputWithContext(context.Background())
}

func (i NameValuePairArgs) ToNameValuePairOutputWithContext(ctx context.Context) NameValuePairOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NameValuePairOutput)
}

// NameValuePairArrayInput is an input type that accepts NameValuePairArray and NameValuePairArrayOutput values.
// You can construct a concrete instance of `NameValuePairArrayInput` via:
//
//          NameValuePairArray{ NameValuePairArgs{...} }
type NameValuePairArrayInput interface {
	pulumi.Input

	ToNameValuePairArrayOutput() NameValuePairArrayOutput
	ToNameValuePairArrayOutputWithContext(context.Context) NameValuePairArrayOutput
}

type NameValuePairArray []NameValuePairInput

func (NameValuePairArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NameValuePair)(nil)).Elem()
}

func (i NameValuePairArray) ToNameValuePairArrayOutput() NameValuePairArrayOutput {
	return i.ToNameValuePairArrayOutputWithContext(context.Background())
}

func (i NameValuePairArray) ToNameValuePairArrayOutputWithContext(ctx context.Context) NameValuePairArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NameValuePairArrayOutput)
}

// Name value pair.
type NameValuePairOutput struct{ *pulumi.OutputState }

func (NameValuePairOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NameValuePair)(nil)).Elem()
}

func (o NameValuePairOutput) ToNameValuePairOutput() NameValuePairOutput {
	return o
}

func (o NameValuePairOutput) ToNameValuePairOutputWithContext(ctx context.Context) NameValuePairOutput {
	return o
}

// Pair name.
func (o NameValuePairOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NameValuePair) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Pair value.
func (o NameValuePairOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NameValuePair) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NameValuePairArrayOutput struct{ *pulumi.OutputState }

func (NameValuePairArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NameValuePair)(nil)).Elem()
}

func (o NameValuePairArrayOutput) ToNameValuePairArrayOutput() NameValuePairArrayOutput {
	return o
}

func (o NameValuePairArrayOutput) ToNameValuePairArrayOutputWithContext(ctx context.Context) NameValuePairArrayOutput {
	return o
}

func (o NameValuePairArrayOutput) Index(i pulumi.IntInput) NameValuePairOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NameValuePair {
		return vs[0].([]NameValuePair)[vs[1].(int)]
	}).(NameValuePairOutput)
}

// Name value pair.
type NameValuePairResponse struct {
	// Pair name.
	Name *string `pulumi:"name"`
	// Pair value.
	Value *string `pulumi:"value"`
}

// NameValuePairResponseInput is an input type that accepts NameValuePairResponseArgs and NameValuePairResponseOutput values.
// You can construct a concrete instance of `NameValuePairResponseInput` via:
//
//          NameValuePairResponseArgs{...}
type NameValuePairResponseInput interface {
	pulumi.Input

	ToNameValuePairResponseOutput() NameValuePairResponseOutput
	ToNameValuePairResponseOutputWithContext(context.Context) NameValuePairResponseOutput
}

// Name value pair.
type NameValuePairResponseArgs struct {
	// Pair name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Pair value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NameValuePairResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NameValuePairResponse)(nil)).Elem()
}

func (i NameValuePairResponseArgs) ToNameValuePairResponseOutput() NameValuePairResponseOutput {
	return i.ToNameValuePairResponseOutputWithContext(context.Background())
}

func (i NameValuePairResponseArgs) ToNameValuePairResponseOutputWithContext(ctx context.Context) NameValuePairResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NameValuePairResponseOutput)
}

// NameValuePairResponseArrayInput is an input type that accepts NameValuePairResponseArray and NameValuePairResponseArrayOutput values.
// You can construct a concrete instance of `NameValuePairResponseArrayInput` via:
//
//          NameValuePairResponseArray{ NameValuePairResponseArgs{...} }
type NameValuePairResponseArrayInput interface {
	pulumi.Input

	ToNameValuePairResponseArrayOutput() NameValuePairResponseArrayOutput
	ToNameValuePairResponseArrayOutputWithContext(context.Context) NameValuePairResponseArrayOutput
}

type NameValuePairResponseArray []NameValuePairResponseInput

func (NameValuePairResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NameValuePairResponse)(nil)).Elem()
}

func (i NameValuePairResponseArray) ToNameValuePairResponseArrayOutput() NameValuePairResponseArrayOutput {
	return i.ToNameValuePairResponseArrayOutputWithContext(context.Background())
}

func (i NameValuePairResponseArray) ToNameValuePairResponseArrayOutputWithContext(ctx context.Context) NameValuePairResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NameValuePairResponseArrayOutput)
}

// Name value pair.
type NameValuePairResponseOutput struct{ *pulumi.OutputState }

func (NameValuePairResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NameValuePairResponse)(nil)).Elem()
}

func (o NameValuePairResponseOutput) ToNameValuePairResponseOutput() NameValuePairResponseOutput {
	return o
}

func (o NameValuePairResponseOutput) ToNameValuePairResponseOutputWithContext(ctx context.Context) NameValuePairResponseOutput {
	return o
}

// Pair name.
func (o NameValuePairResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NameValuePairResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Pair value.
func (o NameValuePairResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NameValuePairResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NameValuePairResponseArrayOutput struct{ *pulumi.OutputState }

func (NameValuePairResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NameValuePairResponse)(nil)).Elem()
}

func (o NameValuePairResponseArrayOutput) ToNameValuePairResponseArrayOutput() NameValuePairResponseArrayOutput {
	return o
}

func (o NameValuePairResponseArrayOutput) ToNameValuePairResponseArrayOutputWithContext(ctx context.Context) NameValuePairResponseArrayOutput {
	return o
}

func (o NameValuePairResponseArrayOutput) Index(i pulumi.IntInput) NameValuePairResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NameValuePairResponse {
		return vs[0].([]NameValuePairResponse)[vs[1].(int)]
	}).(NameValuePairResponseOutput)
}

// Network access control entry.
type NetworkAccessControlEntry struct {
	// Action object.
	Action *string `pulumi:"action"`
	// Description of network access control entry.
	Description *string `pulumi:"description"`
	// Order of precedence.
	Order *int `pulumi:"order"`
	// Remote subnet.
	RemoteSubnet *string `pulumi:"remoteSubnet"`
}

// NetworkAccessControlEntryInput is an input type that accepts NetworkAccessControlEntryArgs and NetworkAccessControlEntryOutput values.
// You can construct a concrete instance of `NetworkAccessControlEntryInput` via:
//
//          NetworkAccessControlEntryArgs{...}
type NetworkAccessControlEntryInput interface {
	pulumi.Input

	ToNetworkAccessControlEntryOutput() NetworkAccessControlEntryOutput
	ToNetworkAccessControlEntryOutputWithContext(context.Context) NetworkAccessControlEntryOutput
}

// Network access control entry.
type NetworkAccessControlEntryArgs struct {
	// Action object.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Description of network access control entry.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Order of precedence.
	Order pulumi.IntPtrInput `pulumi:"order"`
	// Remote subnet.
	RemoteSubnet pulumi.StringPtrInput `pulumi:"remoteSubnet"`
}

func (NetworkAccessControlEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAccessControlEntry)(nil)).Elem()
}

func (i NetworkAccessControlEntryArgs) ToNetworkAccessControlEntryOutput() NetworkAccessControlEntryOutput {
	return i.ToNetworkAccessControlEntryOutputWithContext(context.Background())
}

func (i NetworkAccessControlEntryArgs) ToNetworkAccessControlEntryOutputWithContext(ctx context.Context) NetworkAccessControlEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAccessControlEntryOutput)
}

// NetworkAccessControlEntryArrayInput is an input type that accepts NetworkAccessControlEntryArray and NetworkAccessControlEntryArrayOutput values.
// You can construct a concrete instance of `NetworkAccessControlEntryArrayInput` via:
//
//          NetworkAccessControlEntryArray{ NetworkAccessControlEntryArgs{...} }
type NetworkAccessControlEntryArrayInput interface {
	pulumi.Input

	ToNetworkAccessControlEntryArrayOutput() NetworkAccessControlEntryArrayOutput
	ToNetworkAccessControlEntryArrayOutputWithContext(context.Context) NetworkAccessControlEntryArrayOutput
}

type NetworkAccessControlEntryArray []NetworkAccessControlEntryInput

func (NetworkAccessControlEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAccessControlEntry)(nil)).Elem()
}

func (i NetworkAccessControlEntryArray) ToNetworkAccessControlEntryArrayOutput() NetworkAccessControlEntryArrayOutput {
	return i.ToNetworkAccessControlEntryArrayOutputWithContext(context.Background())
}

func (i NetworkAccessControlEntryArray) ToNetworkAccessControlEntryArrayOutputWithContext(ctx context.Context) NetworkAccessControlEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAccessControlEntryArrayOutput)
}

// Network access control entry.
type NetworkAccessControlEntryOutput struct{ *pulumi.OutputState }

func (NetworkAccessControlEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAccessControlEntry)(nil)).Elem()
}

func (o NetworkAccessControlEntryOutput) ToNetworkAccessControlEntryOutput() NetworkAccessControlEntryOutput {
	return o
}

func (o NetworkAccessControlEntryOutput) ToNetworkAccessControlEntryOutputWithContext(ctx context.Context) NetworkAccessControlEntryOutput {
	return o
}

// Action object.
func (o NetworkAccessControlEntryOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAccessControlEntry) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Description of network access control entry.
func (o NetworkAccessControlEntryOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAccessControlEntry) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Order of precedence.
func (o NetworkAccessControlEntryOutput) Order() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkAccessControlEntry) *int { return v.Order }).(pulumi.IntPtrOutput)
}

// Remote subnet.
func (o NetworkAccessControlEntryOutput) RemoteSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAccessControlEntry) *string { return v.RemoteSubnet }).(pulumi.StringPtrOutput)
}

type NetworkAccessControlEntryArrayOutput struct{ *pulumi.OutputState }

func (NetworkAccessControlEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAccessControlEntry)(nil)).Elem()
}

func (o NetworkAccessControlEntryArrayOutput) ToNetworkAccessControlEntryArrayOutput() NetworkAccessControlEntryArrayOutput {
	return o
}

func (o NetworkAccessControlEntryArrayOutput) ToNetworkAccessControlEntryArrayOutputWithContext(ctx context.Context) NetworkAccessControlEntryArrayOutput {
	return o
}

func (o NetworkAccessControlEntryArrayOutput) Index(i pulumi.IntInput) NetworkAccessControlEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAccessControlEntry {
		return vs[0].([]NetworkAccessControlEntry)[vs[1].(int)]
	}).(NetworkAccessControlEntryOutput)
}

// Network access control entry.
type NetworkAccessControlEntryResponse struct {
	// Action object.
	Action *string `pulumi:"action"`
	// Description of network access control entry.
	Description *string `pulumi:"description"`
	// Order of precedence.
	Order *int `pulumi:"order"`
	// Remote subnet.
	RemoteSubnet *string `pulumi:"remoteSubnet"`
}

// NetworkAccessControlEntryResponseInput is an input type that accepts NetworkAccessControlEntryResponseArgs and NetworkAccessControlEntryResponseOutput values.
// You can construct a concrete instance of `NetworkAccessControlEntryResponseInput` via:
//
//          NetworkAccessControlEntryResponseArgs{...}
type NetworkAccessControlEntryResponseInput interface {
	pulumi.Input

	ToNetworkAccessControlEntryResponseOutput() NetworkAccessControlEntryResponseOutput
	ToNetworkAccessControlEntryResponseOutputWithContext(context.Context) NetworkAccessControlEntryResponseOutput
}

// Network access control entry.
type NetworkAccessControlEntryResponseArgs struct {
	// Action object.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Description of network access control entry.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Order of precedence.
	Order pulumi.IntPtrInput `pulumi:"order"`
	// Remote subnet.
	RemoteSubnet pulumi.StringPtrInput `pulumi:"remoteSubnet"`
}

func (NetworkAccessControlEntryResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAccessControlEntryResponse)(nil)).Elem()
}

func (i NetworkAccessControlEntryResponseArgs) ToNetworkAccessControlEntryResponseOutput() NetworkAccessControlEntryResponseOutput {
	return i.ToNetworkAccessControlEntryResponseOutputWithContext(context.Background())
}

func (i NetworkAccessControlEntryResponseArgs) ToNetworkAccessControlEntryResponseOutputWithContext(ctx context.Context) NetworkAccessControlEntryResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAccessControlEntryResponseOutput)
}

// NetworkAccessControlEntryResponseArrayInput is an input type that accepts NetworkAccessControlEntryResponseArray and NetworkAccessControlEntryResponseArrayOutput values.
// You can construct a concrete instance of `NetworkAccessControlEntryResponseArrayInput` via:
//
//          NetworkAccessControlEntryResponseArray{ NetworkAccessControlEntryResponseArgs{...} }
type NetworkAccessControlEntryResponseArrayInput interface {
	pulumi.Input

	ToNetworkAccessControlEntryResponseArrayOutput() NetworkAccessControlEntryResponseArrayOutput
	ToNetworkAccessControlEntryResponseArrayOutputWithContext(context.Context) NetworkAccessControlEntryResponseArrayOutput
}

type NetworkAccessControlEntryResponseArray []NetworkAccessControlEntryResponseInput

func (NetworkAccessControlEntryResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAccessControlEntryResponse)(nil)).Elem()
}

func (i NetworkAccessControlEntryResponseArray) ToNetworkAccessControlEntryResponseArrayOutput() NetworkAccessControlEntryResponseArrayOutput {
	return i.ToNetworkAccessControlEntryResponseArrayOutputWithContext(context.Background())
}

func (i NetworkAccessControlEntryResponseArray) ToNetworkAccessControlEntryResponseArrayOutputWithContext(ctx context.Context) NetworkAccessControlEntryResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAccessControlEntryResponseArrayOutput)
}

// Network access control entry.
type NetworkAccessControlEntryResponseOutput struct{ *pulumi.OutputState }

func (NetworkAccessControlEntryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAccessControlEntryResponse)(nil)).Elem()
}

func (o NetworkAccessControlEntryResponseOutput) ToNetworkAccessControlEntryResponseOutput() NetworkAccessControlEntryResponseOutput {
	return o
}

func (o NetworkAccessControlEntryResponseOutput) ToNetworkAccessControlEntryResponseOutputWithContext(ctx context.Context) NetworkAccessControlEntryResponseOutput {
	return o
}

// Action object.
func (o NetworkAccessControlEntryResponseOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAccessControlEntryResponse) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Description of network access control entry.
func (o NetworkAccessControlEntryResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAccessControlEntryResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Order of precedence.
func (o NetworkAccessControlEntryResponseOutput) Order() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkAccessControlEntryResponse) *int { return v.Order }).(pulumi.IntPtrOutput)
}

// Remote subnet.
func (o NetworkAccessControlEntryResponseOutput) RemoteSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAccessControlEntryResponse) *string { return v.RemoteSubnet }).(pulumi.StringPtrOutput)
}

type NetworkAccessControlEntryResponseArrayOutput struct{ *pulumi.OutputState }

func (NetworkAccessControlEntryResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAccessControlEntryResponse)(nil)).Elem()
}

func (o NetworkAccessControlEntryResponseArrayOutput) ToNetworkAccessControlEntryResponseArrayOutput() NetworkAccessControlEntryResponseArrayOutput {
	return o
}

func (o NetworkAccessControlEntryResponseArrayOutput) ToNetworkAccessControlEntryResponseArrayOutputWithContext(ctx context.Context) NetworkAccessControlEntryResponseArrayOutput {
	return o
}

func (o NetworkAccessControlEntryResponseArrayOutput) Index(i pulumi.IntInput) NetworkAccessControlEntryResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAccessControlEntryResponse {
		return vs[0].([]NetworkAccessControlEntryResponse)[vs[1].(int)]
	}).(NetworkAccessControlEntryResponseOutput)
}

// Description of the App Service plan scale options.
type SkuCapacity struct {
	// Default number of workers for this App Service plan SKU.
	Default *int `pulumi:"default"`
	// Maximum number of workers for this App Service plan SKU.
	Maximum *int `pulumi:"maximum"`
	// Minimum number of workers for this App Service plan SKU.
	Minimum *int `pulumi:"minimum"`
	// Available scale configurations for an App Service plan.
	ScaleType *string `pulumi:"scaleType"`
}

// SkuCapacityInput is an input type that accepts SkuCapacityArgs and SkuCapacityOutput values.
// You can construct a concrete instance of `SkuCapacityInput` via:
//
//          SkuCapacityArgs{...}
type SkuCapacityInput interface {
	pulumi.Input

	ToSkuCapacityOutput() SkuCapacityOutput
	ToSkuCapacityOutputWithContext(context.Context) SkuCapacityOutput
}

// Description of the App Service plan scale options.
type SkuCapacityArgs struct {
	// Default number of workers for this App Service plan SKU.
	Default pulumi.IntPtrInput `pulumi:"default"`
	// Maximum number of workers for this App Service plan SKU.
	Maximum pulumi.IntPtrInput `pulumi:"maximum"`
	// Minimum number of workers for this App Service plan SKU.
	Minimum pulumi.IntPtrInput `pulumi:"minimum"`
	// Available scale configurations for an App Service plan.
	ScaleType pulumi.StringPtrInput `pulumi:"scaleType"`
}

func (SkuCapacityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuCapacity)(nil)).Elem()
}

func (i SkuCapacityArgs) ToSkuCapacityOutput() SkuCapacityOutput {
	return i.ToSkuCapacityOutputWithContext(context.Background())
}

func (i SkuCapacityArgs) ToSkuCapacityOutputWithContext(ctx context.Context) SkuCapacityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuCapacityOutput)
}

func (i SkuCapacityArgs) ToSkuCapacityPtrOutput() SkuCapacityPtrOutput {
	return i.ToSkuCapacityPtrOutputWithContext(context.Background())
}

func (i SkuCapacityArgs) ToSkuCapacityPtrOutputWithContext(ctx context.Context) SkuCapacityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuCapacityOutput).ToSkuCapacityPtrOutputWithContext(ctx)
}

// SkuCapacityPtrInput is an input type that accepts SkuCapacityArgs, SkuCapacityPtr and SkuCapacityPtrOutput values.
// You can construct a concrete instance of `SkuCapacityPtrInput` via:
//
//          SkuCapacityArgs{...}
//
//  or:
//
//          nil
type SkuCapacityPtrInput interface {
	pulumi.Input

	ToSkuCapacityPtrOutput() SkuCapacityPtrOutput
	ToSkuCapacityPtrOutputWithContext(context.Context) SkuCapacityPtrOutput
}

type skuCapacityPtrType SkuCapacityArgs

func SkuCapacityPtr(v *SkuCapacityArgs) SkuCapacityPtrInput {
	return (*skuCapacityPtrType)(v)
}

func (*skuCapacityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuCapacity)(nil)).Elem()
}

func (i *skuCapacityPtrType) ToSkuCapacityPtrOutput() SkuCapacityPtrOutput {
	return i.ToSkuCapacityPtrOutputWithContext(context.Background())
}

func (i *skuCapacityPtrType) ToSkuCapacityPtrOutputWithContext(ctx context.Context) SkuCapacityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuCapacityPtrOutput)
}

// Description of the App Service plan scale options.
type SkuCapacityOutput struct{ *pulumi.OutputState }

func (SkuCapacityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuCapacity)(nil)).Elem()
}

func (o SkuCapacityOutput) ToSkuCapacityOutput() SkuCapacityOutput {
	return o
}

func (o SkuCapacityOutput) ToSkuCapacityOutputWithContext(ctx context.Context) SkuCapacityOutput {
	return o
}

func (o SkuCapacityOutput) ToSkuCapacityPtrOutput() SkuCapacityPtrOutput {
	return o.ToSkuCapacityPtrOutputWithContext(context.Background())
}

func (o SkuCapacityOutput) ToSkuCapacityPtrOutputWithContext(ctx context.Context) SkuCapacityPtrOutput {
	return o.ApplyT(func(v SkuCapacity) *SkuCapacity {
		return &v
	}).(SkuCapacityPtrOutput)
}

// Default number of workers for this App Service plan SKU.
func (o SkuCapacityOutput) Default() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuCapacity) *int { return v.Default }).(pulumi.IntPtrOutput)
}

// Maximum number of workers for this App Service plan SKU.
func (o SkuCapacityOutput) Maximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuCapacity) *int { return v.Maximum }).(pulumi.IntPtrOutput)
}

// Minimum number of workers for this App Service plan SKU.
func (o SkuCapacityOutput) Minimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuCapacity) *int { return v.Minimum }).(pulumi.IntPtrOutput)
}

// Available scale configurations for an App Service plan.
func (o SkuCapacityOutput) ScaleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuCapacity) *string { return v.ScaleType }).(pulumi.StringPtrOutput)
}

type SkuCapacityPtrOutput struct{ *pulumi.OutputState }

func (SkuCapacityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuCapacity)(nil)).Elem()
}

func (o SkuCapacityPtrOutput) ToSkuCapacityPtrOutput() SkuCapacityPtrOutput {
	return o
}

func (o SkuCapacityPtrOutput) ToSkuCapacityPtrOutputWithContext(ctx context.Context) SkuCapacityPtrOutput {
	return o
}

func (o SkuCapacityPtrOutput) Elem() SkuCapacityOutput {
	return o.ApplyT(func(v *SkuCapacity) SkuCapacity { return *v }).(SkuCapacityOutput)
}

// Default number of workers for this App Service plan SKU.
func (o SkuCapacityPtrOutput) Default() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuCapacity) *int {
		if v == nil {
			return nil
		}
		return v.Default
	}).(pulumi.IntPtrOutput)
}

// Maximum number of workers for this App Service plan SKU.
func (o SkuCapacityPtrOutput) Maximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuCapacity) *int {
		if v == nil {
			return nil
		}
		return v.Maximum
	}).(pulumi.IntPtrOutput)
}

// Minimum number of workers for this App Service plan SKU.
func (o SkuCapacityPtrOutput) Minimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuCapacity) *int {
		if v == nil {
			return nil
		}
		return v.Minimum
	}).(pulumi.IntPtrOutput)
}

// Available scale configurations for an App Service plan.
func (o SkuCapacityPtrOutput) ScaleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuCapacity) *string {
		if v == nil {
			return nil
		}
		return v.ScaleType
	}).(pulumi.StringPtrOutput)
}

// Description of the App Service plan scale options.
type SkuCapacityResponse struct {
	// Default number of workers for this App Service plan SKU.
	Default *int `pulumi:"default"`
	// Maximum number of workers for this App Service plan SKU.
	Maximum *int `pulumi:"maximum"`
	// Minimum number of workers for this App Service plan SKU.
	Minimum *int `pulumi:"minimum"`
	// Available scale configurations for an App Service plan.
	ScaleType *string `pulumi:"scaleType"`
}

// SkuCapacityResponseInput is an input type that accepts SkuCapacityResponseArgs and SkuCapacityResponseOutput values.
// You can construct a concrete instance of `SkuCapacityResponseInput` via:
//
//          SkuCapacityResponseArgs{...}
type SkuCapacityResponseInput interface {
	pulumi.Input

	ToSkuCapacityResponseOutput() SkuCapacityResponseOutput
	ToSkuCapacityResponseOutputWithContext(context.Context) SkuCapacityResponseOutput
}

// Description of the App Service plan scale options.
type SkuCapacityResponseArgs struct {
	// Default number of workers for this App Service plan SKU.
	Default pulumi.IntPtrInput `pulumi:"default"`
	// Maximum number of workers for this App Service plan SKU.
	Maximum pulumi.IntPtrInput `pulumi:"maximum"`
	// Minimum number of workers for this App Service plan SKU.
	Minimum pulumi.IntPtrInput `pulumi:"minimum"`
	// Available scale configurations for an App Service plan.
	ScaleType pulumi.StringPtrInput `pulumi:"scaleType"`
}

func (SkuCapacityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuCapacityResponse)(nil)).Elem()
}

func (i SkuCapacityResponseArgs) ToSkuCapacityResponseOutput() SkuCapacityResponseOutput {
	return i.ToSkuCapacityResponseOutputWithContext(context.Background())
}

func (i SkuCapacityResponseArgs) ToSkuCapacityResponseOutputWithContext(ctx context.Context) SkuCapacityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuCapacityResponseOutput)
}

func (i SkuCapacityResponseArgs) ToSkuCapacityResponsePtrOutput() SkuCapacityResponsePtrOutput {
	return i.ToSkuCapacityResponsePtrOutputWithContext(context.Background())
}

func (i SkuCapacityResponseArgs) ToSkuCapacityResponsePtrOutputWithContext(ctx context.Context) SkuCapacityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuCapacityResponseOutput).ToSkuCapacityResponsePtrOutputWithContext(ctx)
}

// SkuCapacityResponsePtrInput is an input type that accepts SkuCapacityResponseArgs, SkuCapacityResponsePtr and SkuCapacityResponsePtrOutput values.
// You can construct a concrete instance of `SkuCapacityResponsePtrInput` via:
//
//          SkuCapacityResponseArgs{...}
//
//  or:
//
//          nil
type SkuCapacityResponsePtrInput interface {
	pulumi.Input

	ToSkuCapacityResponsePtrOutput() SkuCapacityResponsePtrOutput
	ToSkuCapacityResponsePtrOutputWithContext(context.Context) SkuCapacityResponsePtrOutput
}

type skuCapacityResponsePtrType SkuCapacityResponseArgs

func SkuCapacityResponsePtr(v *SkuCapacityResponseArgs) SkuCapacityResponsePtrInput {
	return (*skuCapacityResponsePtrType)(v)
}

func (*skuCapacityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuCapacityResponse)(nil)).Elem()
}

func (i *skuCapacityResponsePtrType) ToSkuCapacityResponsePtrOutput() SkuCapacityResponsePtrOutput {
	return i.ToSkuCapacityResponsePtrOutputWithContext(context.Background())
}

func (i *skuCapacityResponsePtrType) ToSkuCapacityResponsePtrOutputWithContext(ctx context.Context) SkuCapacityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuCapacityResponsePtrOutput)
}

// Description of the App Service plan scale options.
type SkuCapacityResponseOutput struct{ *pulumi.OutputState }

func (SkuCapacityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuCapacityResponse)(nil)).Elem()
}

func (o SkuCapacityResponseOutput) ToSkuCapacityResponseOutput() SkuCapacityResponseOutput {
	return o
}

func (o SkuCapacityResponseOutput) ToSkuCapacityResponseOutputWithContext(ctx context.Context) SkuCapacityResponseOutput {
	return o
}

func (o SkuCapacityResponseOutput) ToSkuCapacityResponsePtrOutput() SkuCapacityResponsePtrOutput {
	return o.ToSkuCapacityResponsePtrOutputWithContext(context.Background())
}

func (o SkuCapacityResponseOutput) ToSkuCapacityResponsePtrOutputWithContext(ctx context.Context) SkuCapacityResponsePtrOutput {
	return o.ApplyT(func(v SkuCapacityResponse) *SkuCapacityResponse {
		return &v
	}).(SkuCapacityResponsePtrOutput)
}

// Default number of workers for this App Service plan SKU.
func (o SkuCapacityResponseOutput) Default() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuCapacityResponse) *int { return v.Default }).(pulumi.IntPtrOutput)
}

// Maximum number of workers for this App Service plan SKU.
func (o SkuCapacityResponseOutput) Maximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuCapacityResponse) *int { return v.Maximum }).(pulumi.IntPtrOutput)
}

// Minimum number of workers for this App Service plan SKU.
func (o SkuCapacityResponseOutput) Minimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuCapacityResponse) *int { return v.Minimum }).(pulumi.IntPtrOutput)
}

// Available scale configurations for an App Service plan.
func (o SkuCapacityResponseOutput) ScaleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuCapacityResponse) *string { return v.ScaleType }).(pulumi.StringPtrOutput)
}

type SkuCapacityResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuCapacityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuCapacityResponse)(nil)).Elem()
}

func (o SkuCapacityResponsePtrOutput) ToSkuCapacityResponsePtrOutput() SkuCapacityResponsePtrOutput {
	return o
}

func (o SkuCapacityResponsePtrOutput) ToSkuCapacityResponsePtrOutputWithContext(ctx context.Context) SkuCapacityResponsePtrOutput {
	return o
}

func (o SkuCapacityResponsePtrOutput) Elem() SkuCapacityResponseOutput {
	return o.ApplyT(func(v *SkuCapacityResponse) SkuCapacityResponse { return *v }).(SkuCapacityResponseOutput)
}

// Default number of workers for this App Service plan SKU.
func (o SkuCapacityResponsePtrOutput) Default() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuCapacityResponse) *int {
		if v == nil {
			return nil
		}
		return v.Default
	}).(pulumi.IntPtrOutput)
}

// Maximum number of workers for this App Service plan SKU.
func (o SkuCapacityResponsePtrOutput) Maximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuCapacityResponse) *int {
		if v == nil {
			return nil
		}
		return v.Maximum
	}).(pulumi.IntPtrOutput)
}

// Minimum number of workers for this App Service plan SKU.
func (o SkuCapacityResponsePtrOutput) Minimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuCapacityResponse) *int {
		if v == nil {
			return nil
		}
		return v.Minimum
	}).(pulumi.IntPtrOutput)
}

// Available scale configurations for an App Service plan.
func (o SkuCapacityResponsePtrOutput) ScaleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuCapacityResponse) *string {
		if v == nil {
			return nil
		}
		return v.ScaleType
	}).(pulumi.StringPtrOutput)
}

// Description of a SKU for a scalable resource.
type SkuDescription struct {
	// Capabilities of the SKU, e.g., is traffic manager enabled?
	Capabilities []Capability `pulumi:"capabilities"`
	// Current number of instances assigned to the resource.
	Capacity *int `pulumi:"capacity"`
	// Family code of the resource SKU.
	Family *string `pulumi:"family"`
	// Locations of the SKU.
	Locations []string `pulumi:"locations"`
	// Name of the resource SKU.
	Name *string `pulumi:"name"`
	// Size specifier of the resource SKU.
	Size *string `pulumi:"size"`
	// Min, max, and default scale values of the SKU.
	SkuCapacity *SkuCapacity `pulumi:"skuCapacity"`
	// Service tier of the resource SKU.
	Tier *string `pulumi:"tier"`
}

// SkuDescriptionInput is an input type that accepts SkuDescriptionArgs and SkuDescriptionOutput values.
// You can construct a concrete instance of `SkuDescriptionInput` via:
//
//          SkuDescriptionArgs{...}
type SkuDescriptionInput interface {
	pulumi.Input

	ToSkuDescriptionOutput() SkuDescriptionOutput
	ToSkuDescriptionOutputWithContext(context.Context) SkuDescriptionOutput
}

// Description of a SKU for a scalable resource.
type SkuDescriptionArgs struct {
	// Capabilities of the SKU, e.g., is traffic manager enabled?
	Capabilities CapabilityArrayInput `pulumi:"capabilities"`
	// Current number of instances assigned to the resource.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Family code of the resource SKU.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// Locations of the SKU.
	Locations pulumi.StringArrayInput `pulumi:"locations"`
	// Name of the resource SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Size specifier of the resource SKU.
	Size pulumi.StringPtrInput `pulumi:"size"`
	// Min, max, and default scale values of the SKU.
	SkuCapacity SkuCapacityPtrInput `pulumi:"skuCapacity"`
	// Service tier of the resource SKU.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuDescriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuDescription)(nil)).Elem()
}

func (i SkuDescriptionArgs) ToSkuDescriptionOutput() SkuDescriptionOutput {
	return i.ToSkuDescriptionOutputWithContext(context.Background())
}

func (i SkuDescriptionArgs) ToSkuDescriptionOutputWithContext(ctx context.Context) SkuDescriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuDescriptionOutput)
}

func (i SkuDescriptionArgs) ToSkuDescriptionPtrOutput() SkuDescriptionPtrOutput {
	return i.ToSkuDescriptionPtrOutputWithContext(context.Background())
}

func (i SkuDescriptionArgs) ToSkuDescriptionPtrOutputWithContext(ctx context.Context) SkuDescriptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuDescriptionOutput).ToSkuDescriptionPtrOutputWithContext(ctx)
}

// SkuDescriptionPtrInput is an input type that accepts SkuDescriptionArgs, SkuDescriptionPtr and SkuDescriptionPtrOutput values.
// You can construct a concrete instance of `SkuDescriptionPtrInput` via:
//
//          SkuDescriptionArgs{...}
//
//  or:
//
//          nil
type SkuDescriptionPtrInput interface {
	pulumi.Input

	ToSkuDescriptionPtrOutput() SkuDescriptionPtrOutput
	ToSkuDescriptionPtrOutputWithContext(context.Context) SkuDescriptionPtrOutput
}

type skuDescriptionPtrType SkuDescriptionArgs

func SkuDescriptionPtr(v *SkuDescriptionArgs) SkuDescriptionPtrInput {
	return (*skuDescriptionPtrType)(v)
}

func (*skuDescriptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuDescription)(nil)).Elem()
}

func (i *skuDescriptionPtrType) ToSkuDescriptionPtrOutput() SkuDescriptionPtrOutput {
	return i.ToSkuDescriptionPtrOutputWithContext(context.Background())
}

func (i *skuDescriptionPtrType) ToSkuDescriptionPtrOutputWithContext(ctx context.Context) SkuDescriptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuDescriptionPtrOutput)
}

// Description of a SKU for a scalable resource.
type SkuDescriptionOutput struct{ *pulumi.OutputState }

func (SkuDescriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuDescription)(nil)).Elem()
}

func (o SkuDescriptionOutput) ToSkuDescriptionOutput() SkuDescriptionOutput {
	return o
}

func (o SkuDescriptionOutput) ToSkuDescriptionOutputWithContext(ctx context.Context) SkuDescriptionOutput {
	return o
}

func (o SkuDescriptionOutput) ToSkuDescriptionPtrOutput() SkuDescriptionPtrOutput {
	return o.ToSkuDescriptionPtrOutputWithContext(context.Background())
}

func (o SkuDescriptionOutput) ToSkuDescriptionPtrOutputWithContext(ctx context.Context) SkuDescriptionPtrOutput {
	return o.ApplyT(func(v SkuDescription) *SkuDescription {
		return &v
	}).(SkuDescriptionPtrOutput)
}

// Capabilities of the SKU, e.g., is traffic manager enabled?
func (o SkuDescriptionOutput) Capabilities() CapabilityArrayOutput {
	return o.ApplyT(func(v SkuDescription) []Capability { return v.Capabilities }).(CapabilityArrayOutput)
}

// Current number of instances assigned to the resource.
func (o SkuDescriptionOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuDescription) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Family code of the resource SKU.
func (o SkuDescriptionOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescription) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// Locations of the SKU.
func (o SkuDescriptionOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SkuDescription) []string { return v.Locations }).(pulumi.StringArrayOutput)
}

// Name of the resource SKU.
func (o SkuDescriptionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescription) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Size specifier of the resource SKU.
func (o SkuDescriptionOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescription) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// Min, max, and default scale values of the SKU.
func (o SkuDescriptionOutput) SkuCapacity() SkuCapacityPtrOutput {
	return o.ApplyT(func(v SkuDescription) *SkuCapacity { return v.SkuCapacity }).(SkuCapacityPtrOutput)
}

// Service tier of the resource SKU.
func (o SkuDescriptionOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescription) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuDescriptionPtrOutput struct{ *pulumi.OutputState }

func (SkuDescriptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuDescription)(nil)).Elem()
}

func (o SkuDescriptionPtrOutput) ToSkuDescriptionPtrOutput() SkuDescriptionPtrOutput {
	return o
}

func (o SkuDescriptionPtrOutput) ToSkuDescriptionPtrOutputWithContext(ctx context.Context) SkuDescriptionPtrOutput {
	return o
}

func (o SkuDescriptionPtrOutput) Elem() SkuDescriptionOutput {
	return o.ApplyT(func(v *SkuDescription) SkuDescription { return *v }).(SkuDescriptionOutput)
}

// Capabilities of the SKU, e.g., is traffic manager enabled?
func (o SkuDescriptionPtrOutput) Capabilities() CapabilityArrayOutput {
	return o.ApplyT(func(v *SkuDescription) []Capability {
		if v == nil {
			return nil
		}
		return v.Capabilities
	}).(CapabilityArrayOutput)
}

// Current number of instances assigned to the resource.
func (o SkuDescriptionPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuDescription) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Family code of the resource SKU.
func (o SkuDescriptionPtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescription) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// Locations of the SKU.
func (o SkuDescriptionPtrOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SkuDescription) []string {
		if v == nil {
			return nil
		}
		return v.Locations
	}).(pulumi.StringArrayOutput)
}

// Name of the resource SKU.
func (o SkuDescriptionPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescription) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Size specifier of the resource SKU.
func (o SkuDescriptionPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescription) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// Min, max, and default scale values of the SKU.
func (o SkuDescriptionPtrOutput) SkuCapacity() SkuCapacityPtrOutput {
	return o.ApplyT(func(v *SkuDescription) *SkuCapacity {
		if v == nil {
			return nil
		}
		return v.SkuCapacity
	}).(SkuCapacityPtrOutput)
}

// Service tier of the resource SKU.
func (o SkuDescriptionPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescription) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Description of a SKU for a scalable resource.
type SkuDescriptionResponse struct {
	// Capabilities of the SKU, e.g., is traffic manager enabled?
	Capabilities []CapabilityResponse `pulumi:"capabilities"`
	// Current number of instances assigned to the resource.
	Capacity *int `pulumi:"capacity"`
	// Family code of the resource SKU.
	Family *string `pulumi:"family"`
	// Locations of the SKU.
	Locations []string `pulumi:"locations"`
	// Name of the resource SKU.
	Name *string `pulumi:"name"`
	// Size specifier of the resource SKU.
	Size *string `pulumi:"size"`
	// Min, max, and default scale values of the SKU.
	SkuCapacity *SkuCapacityResponse `pulumi:"skuCapacity"`
	// Service tier of the resource SKU.
	Tier *string `pulumi:"tier"`
}

// SkuDescriptionResponseInput is an input type that accepts SkuDescriptionResponseArgs and SkuDescriptionResponseOutput values.
// You can construct a concrete instance of `SkuDescriptionResponseInput` via:
//
//          SkuDescriptionResponseArgs{...}
type SkuDescriptionResponseInput interface {
	pulumi.Input

	ToSkuDescriptionResponseOutput() SkuDescriptionResponseOutput
	ToSkuDescriptionResponseOutputWithContext(context.Context) SkuDescriptionResponseOutput
}

// Description of a SKU for a scalable resource.
type SkuDescriptionResponseArgs struct {
	// Capabilities of the SKU, e.g., is traffic manager enabled?
	Capabilities CapabilityResponseArrayInput `pulumi:"capabilities"`
	// Current number of instances assigned to the resource.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Family code of the resource SKU.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// Locations of the SKU.
	Locations pulumi.StringArrayInput `pulumi:"locations"`
	// Name of the resource SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Size specifier of the resource SKU.
	Size pulumi.StringPtrInput `pulumi:"size"`
	// Min, max, and default scale values of the SKU.
	SkuCapacity SkuCapacityResponsePtrInput `pulumi:"skuCapacity"`
	// Service tier of the resource SKU.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuDescriptionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuDescriptionResponse)(nil)).Elem()
}

func (i SkuDescriptionResponseArgs) ToSkuDescriptionResponseOutput() SkuDescriptionResponseOutput {
	return i.ToSkuDescriptionResponseOutputWithContext(context.Background())
}

func (i SkuDescriptionResponseArgs) ToSkuDescriptionResponseOutputWithContext(ctx context.Context) SkuDescriptionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuDescriptionResponseOutput)
}

func (i SkuDescriptionResponseArgs) ToSkuDescriptionResponsePtrOutput() SkuDescriptionResponsePtrOutput {
	return i.ToSkuDescriptionResponsePtrOutputWithContext(context.Background())
}

func (i SkuDescriptionResponseArgs) ToSkuDescriptionResponsePtrOutputWithContext(ctx context.Context) SkuDescriptionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuDescriptionResponseOutput).ToSkuDescriptionResponsePtrOutputWithContext(ctx)
}

// SkuDescriptionResponsePtrInput is an input type that accepts SkuDescriptionResponseArgs, SkuDescriptionResponsePtr and SkuDescriptionResponsePtrOutput values.
// You can construct a concrete instance of `SkuDescriptionResponsePtrInput` via:
//
//          SkuDescriptionResponseArgs{...}
//
//  or:
//
//          nil
type SkuDescriptionResponsePtrInput interface {
	pulumi.Input

	ToSkuDescriptionResponsePtrOutput() SkuDescriptionResponsePtrOutput
	ToSkuDescriptionResponsePtrOutputWithContext(context.Context) SkuDescriptionResponsePtrOutput
}

type skuDescriptionResponsePtrType SkuDescriptionResponseArgs

func SkuDescriptionResponsePtr(v *SkuDescriptionResponseArgs) SkuDescriptionResponsePtrInput {
	return (*skuDescriptionResponsePtrType)(v)
}

func (*skuDescriptionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuDescriptionResponse)(nil)).Elem()
}

func (i *skuDescriptionResponsePtrType) ToSkuDescriptionResponsePtrOutput() SkuDescriptionResponsePtrOutput {
	return i.ToSkuDescriptionResponsePtrOutputWithContext(context.Background())
}

func (i *skuDescriptionResponsePtrType) ToSkuDescriptionResponsePtrOutputWithContext(ctx context.Context) SkuDescriptionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuDescriptionResponsePtrOutput)
}

// Description of a SKU for a scalable resource.
type SkuDescriptionResponseOutput struct{ *pulumi.OutputState }

func (SkuDescriptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuDescriptionResponse)(nil)).Elem()
}

func (o SkuDescriptionResponseOutput) ToSkuDescriptionResponseOutput() SkuDescriptionResponseOutput {
	return o
}

func (o SkuDescriptionResponseOutput) ToSkuDescriptionResponseOutputWithContext(ctx context.Context) SkuDescriptionResponseOutput {
	return o
}

func (o SkuDescriptionResponseOutput) ToSkuDescriptionResponsePtrOutput() SkuDescriptionResponsePtrOutput {
	return o.ToSkuDescriptionResponsePtrOutputWithContext(context.Background())
}

func (o SkuDescriptionResponseOutput) ToSkuDescriptionResponsePtrOutputWithContext(ctx context.Context) SkuDescriptionResponsePtrOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) *SkuDescriptionResponse {
		return &v
	}).(SkuDescriptionResponsePtrOutput)
}

// Capabilities of the SKU, e.g., is traffic manager enabled?
func (o SkuDescriptionResponseOutput) Capabilities() CapabilityResponseArrayOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) []CapabilityResponse { return v.Capabilities }).(CapabilityResponseArrayOutput)
}

// Current number of instances assigned to the resource.
func (o SkuDescriptionResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Family code of the resource SKU.
func (o SkuDescriptionResponseOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// Locations of the SKU.
func (o SkuDescriptionResponseOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) []string { return v.Locations }).(pulumi.StringArrayOutput)
}

// Name of the resource SKU.
func (o SkuDescriptionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Size specifier of the resource SKU.
func (o SkuDescriptionResponseOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// Min, max, and default scale values of the SKU.
func (o SkuDescriptionResponseOutput) SkuCapacity() SkuCapacityResponsePtrOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) *SkuCapacityResponse { return v.SkuCapacity }).(SkuCapacityResponsePtrOutput)
}

// Service tier of the resource SKU.
func (o SkuDescriptionResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuDescriptionResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuDescriptionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuDescriptionResponse)(nil)).Elem()
}

func (o SkuDescriptionResponsePtrOutput) ToSkuDescriptionResponsePtrOutput() SkuDescriptionResponsePtrOutput {
	return o
}

func (o SkuDescriptionResponsePtrOutput) ToSkuDescriptionResponsePtrOutputWithContext(ctx context.Context) SkuDescriptionResponsePtrOutput {
	return o
}

func (o SkuDescriptionResponsePtrOutput) Elem() SkuDescriptionResponseOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) SkuDescriptionResponse { return *v }).(SkuDescriptionResponseOutput)
}

// Capabilities of the SKU, e.g., is traffic manager enabled?
func (o SkuDescriptionResponsePtrOutput) Capabilities() CapabilityResponseArrayOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) []CapabilityResponse {
		if v == nil {
			return nil
		}
		return v.Capabilities
	}).(CapabilityResponseArrayOutput)
}

// Current number of instances assigned to the resource.
func (o SkuDescriptionResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Family code of the resource SKU.
func (o SkuDescriptionResponsePtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// Locations of the SKU.
func (o SkuDescriptionResponsePtrOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) []string {
		if v == nil {
			return nil
		}
		return v.Locations
	}).(pulumi.StringArrayOutput)
}

// Name of the resource SKU.
func (o SkuDescriptionResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Size specifier of the resource SKU.
func (o SkuDescriptionResponsePtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// Min, max, and default scale values of the SKU.
func (o SkuDescriptionResponsePtrOutput) SkuCapacity() SkuCapacityResponsePtrOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) *SkuCapacityResponse {
		if v == nil {
			return nil
		}
		return v.SkuCapacity
	}).(SkuCapacityResponsePtrOutput)
}

// Service tier of the resource SKU.
func (o SkuDescriptionResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Stamp capacity information.
type StampCapacityResponse struct {
	// Available capacity (# of machines, bytes of storage etc...).
	AvailableCapacity *int `pulumi:"availableCapacity"`
	// Shared/dedicated workers.
	ComputeMode *string `pulumi:"computeMode"`
	// If <code>true</code>, it includes basic apps.
	// Basic apps are not used for capacity allocation.
	ExcludeFromCapacityAllocation *bool `pulumi:"excludeFromCapacityAllocation"`
	// <code>true</code> if capacity is applicable for all apps; otherwise, <code>false</code>.
	IsApplicableForAllComputeModes *bool `pulumi:"isApplicableForAllComputeModes"`
	// Name of the stamp.
	Name *string `pulumi:"name"`
	// Shared or Dedicated.
	SiteMode *string `pulumi:"siteMode"`
	// Total capacity (# of machines, bytes of storage etc...).
	TotalCapacity *int `pulumi:"totalCapacity"`
	// Name of the unit.
	Unit *string `pulumi:"unit"`
	// Size of the machines.
	WorkerSize *string `pulumi:"workerSize"`
	// Size ID of machines:
	// 0 - Small
	// 1 - Medium
	// 2 - Large
	WorkerSizeId *int `pulumi:"workerSizeId"`
}

// StampCapacityResponseInput is an input type that accepts StampCapacityResponseArgs and StampCapacityResponseOutput values.
// You can construct a concrete instance of `StampCapacityResponseInput` via:
//
//          StampCapacityResponseArgs{...}
type StampCapacityResponseInput interface {
	pulumi.Input

	ToStampCapacityResponseOutput() StampCapacityResponseOutput
	ToStampCapacityResponseOutputWithContext(context.Context) StampCapacityResponseOutput
}

// Stamp capacity information.
type StampCapacityResponseArgs struct {
	// Available capacity (# of machines, bytes of storage etc...).
	AvailableCapacity pulumi.IntPtrInput `pulumi:"availableCapacity"`
	// Shared/dedicated workers.
	ComputeMode pulumi.StringPtrInput `pulumi:"computeMode"`
	// If <code>true</code>, it includes basic apps.
	// Basic apps are not used for capacity allocation.
	ExcludeFromCapacityAllocation pulumi.BoolPtrInput `pulumi:"excludeFromCapacityAllocation"`
	// <code>true</code> if capacity is applicable for all apps; otherwise, <code>false</code>.
	IsApplicableForAllComputeModes pulumi.BoolPtrInput `pulumi:"isApplicableForAllComputeModes"`
	// Name of the stamp.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Shared or Dedicated.
	SiteMode pulumi.StringPtrInput `pulumi:"siteMode"`
	// Total capacity (# of machines, bytes of storage etc...).
	TotalCapacity pulumi.IntPtrInput `pulumi:"totalCapacity"`
	// Name of the unit.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
	// Size of the machines.
	WorkerSize pulumi.StringPtrInput `pulumi:"workerSize"`
	// Size ID of machines:
	// 0 - Small
	// 1 - Medium
	// 2 - Large
	WorkerSizeId pulumi.IntPtrInput `pulumi:"workerSizeId"`
}

func (StampCapacityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StampCapacityResponse)(nil)).Elem()
}

func (i StampCapacityResponseArgs) ToStampCapacityResponseOutput() StampCapacityResponseOutput {
	return i.ToStampCapacityResponseOutputWithContext(context.Background())
}

func (i StampCapacityResponseArgs) ToStampCapacityResponseOutputWithContext(ctx context.Context) StampCapacityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StampCapacityResponseOutput)
}

// StampCapacityResponseArrayInput is an input type that accepts StampCapacityResponseArray and StampCapacityResponseArrayOutput values.
// You can construct a concrete instance of `StampCapacityResponseArrayInput` via:
//
//          StampCapacityResponseArray{ StampCapacityResponseArgs{...} }
type StampCapacityResponseArrayInput interface {
	pulumi.Input

	ToStampCapacityResponseArrayOutput() StampCapacityResponseArrayOutput
	ToStampCapacityResponseArrayOutputWithContext(context.Context) StampCapacityResponseArrayOutput
}

type StampCapacityResponseArray []StampCapacityResponseInput

func (StampCapacityResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StampCapacityResponse)(nil)).Elem()
}

func (i StampCapacityResponseArray) ToStampCapacityResponseArrayOutput() StampCapacityResponseArrayOutput {
	return i.ToStampCapacityResponseArrayOutputWithContext(context.Background())
}

func (i StampCapacityResponseArray) ToStampCapacityResponseArrayOutputWithContext(ctx context.Context) StampCapacityResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StampCapacityResponseArrayOutput)
}

// Stamp capacity information.
type StampCapacityResponseOutput struct{ *pulumi.OutputState }

func (StampCapacityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StampCapacityResponse)(nil)).Elem()
}

func (o StampCapacityResponseOutput) ToStampCapacityResponseOutput() StampCapacityResponseOutput {
	return o
}

func (o StampCapacityResponseOutput) ToStampCapacityResponseOutputWithContext(ctx context.Context) StampCapacityResponseOutput {
	return o
}

// Available capacity (# of machines, bytes of storage etc...).
func (o StampCapacityResponseOutput) AvailableCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *int { return v.AvailableCapacity }).(pulumi.IntPtrOutput)
}

// Shared/dedicated workers.
func (o StampCapacityResponseOutput) ComputeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *string { return v.ComputeMode }).(pulumi.StringPtrOutput)
}

// If <code>true</code>, it includes basic apps.
// Basic apps are not used for capacity allocation.
func (o StampCapacityResponseOutput) ExcludeFromCapacityAllocation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *bool { return v.ExcludeFromCapacityAllocation }).(pulumi.BoolPtrOutput)
}

// <code>true</code> if capacity is applicable for all apps; otherwise, <code>false</code>.
func (o StampCapacityResponseOutput) IsApplicableForAllComputeModes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *bool { return v.IsApplicableForAllComputeModes }).(pulumi.BoolPtrOutput)
}

// Name of the stamp.
func (o StampCapacityResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Shared or Dedicated.
func (o StampCapacityResponseOutput) SiteMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *string { return v.SiteMode }).(pulumi.StringPtrOutput)
}

// Total capacity (# of machines, bytes of storage etc...).
func (o StampCapacityResponseOutput) TotalCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *int { return v.TotalCapacity }).(pulumi.IntPtrOutput)
}

// Name of the unit.
func (o StampCapacityResponseOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

// Size of the machines.
func (o StampCapacityResponseOutput) WorkerSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *string { return v.WorkerSize }).(pulumi.StringPtrOutput)
}

// Size ID of machines:
// 0 - Small
// 1 - Medium
// 2 - Large
func (o StampCapacityResponseOutput) WorkerSizeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *int { return v.WorkerSizeId }).(pulumi.IntPtrOutput)
}

type StampCapacityResponseArrayOutput struct{ *pulumi.OutputState }

func (StampCapacityResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StampCapacityResponse)(nil)).Elem()
}

func (o StampCapacityResponseArrayOutput) ToStampCapacityResponseArrayOutput() StampCapacityResponseArrayOutput {
	return o
}

func (o StampCapacityResponseArrayOutput) ToStampCapacityResponseArrayOutputWithContext(ctx context.Context) StampCapacityResponseArrayOutput {
	return o
}

func (o StampCapacityResponseArrayOutput) Index(i pulumi.IntInput) StampCapacityResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StampCapacityResponse {
		return vs[0].([]StampCapacityResponse)[vs[1].(int)]
	}).(StampCapacityResponseOutput)
}

// Virtual IP mapping.
type VirtualIPMappingResponse struct {
	// Is virtual IP mapping in use.
	InUse *bool `pulumi:"inUse"`
	// Internal HTTP port.
	InternalHttpPort *int `pulumi:"internalHttpPort"`
	// Internal HTTPS port.
	InternalHttpsPort *int `pulumi:"internalHttpsPort"`
	// Virtual IP address.
	VirtualIP *string `pulumi:"virtualIP"`
}

// VirtualIPMappingResponseInput is an input type that accepts VirtualIPMappingResponseArgs and VirtualIPMappingResponseOutput values.
// You can construct a concrete instance of `VirtualIPMappingResponseInput` via:
//
//          VirtualIPMappingResponseArgs{...}
type VirtualIPMappingResponseInput interface {
	pulumi.Input

	ToVirtualIPMappingResponseOutput() VirtualIPMappingResponseOutput
	ToVirtualIPMappingResponseOutputWithContext(context.Context) VirtualIPMappingResponseOutput
}

// Virtual IP mapping.
type VirtualIPMappingResponseArgs struct {
	// Is virtual IP mapping in use.
	InUse pulumi.BoolPtrInput `pulumi:"inUse"`
	// Internal HTTP port.
	InternalHttpPort pulumi.IntPtrInput `pulumi:"internalHttpPort"`
	// Internal HTTPS port.
	InternalHttpsPort pulumi.IntPtrInput `pulumi:"internalHttpsPort"`
	// Virtual IP address.
	VirtualIP pulumi.StringPtrInput `pulumi:"virtualIP"`
}

func (VirtualIPMappingResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualIPMappingResponse)(nil)).Elem()
}

func (i VirtualIPMappingResponseArgs) ToVirtualIPMappingResponseOutput() VirtualIPMappingResponseOutput {
	return i.ToVirtualIPMappingResponseOutputWithContext(context.Background())
}

func (i VirtualIPMappingResponseArgs) ToVirtualIPMappingResponseOutputWithContext(ctx context.Context) VirtualIPMappingResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualIPMappingResponseOutput)
}

// VirtualIPMappingResponseArrayInput is an input type that accepts VirtualIPMappingResponseArray and VirtualIPMappingResponseArrayOutput values.
// You can construct a concrete instance of `VirtualIPMappingResponseArrayInput` via:
//
//          VirtualIPMappingResponseArray{ VirtualIPMappingResponseArgs{...} }
type VirtualIPMappingResponseArrayInput interface {
	pulumi.Input

	ToVirtualIPMappingResponseArrayOutput() VirtualIPMappingResponseArrayOutput
	ToVirtualIPMappingResponseArrayOutputWithContext(context.Context) VirtualIPMappingResponseArrayOutput
}

type VirtualIPMappingResponseArray []VirtualIPMappingResponseInput

func (VirtualIPMappingResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualIPMappingResponse)(nil)).Elem()
}

func (i VirtualIPMappingResponseArray) ToVirtualIPMappingResponseArrayOutput() VirtualIPMappingResponseArrayOutput {
	return i.ToVirtualIPMappingResponseArrayOutputWithContext(context.Background())
}

func (i VirtualIPMappingResponseArray) ToVirtualIPMappingResponseArrayOutputWithContext(ctx context.Context) VirtualIPMappingResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualIPMappingResponseArrayOutput)
}

// Virtual IP mapping.
type VirtualIPMappingResponseOutput struct{ *pulumi.OutputState }

func (VirtualIPMappingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualIPMappingResponse)(nil)).Elem()
}

func (o VirtualIPMappingResponseOutput) ToVirtualIPMappingResponseOutput() VirtualIPMappingResponseOutput {
	return o
}

func (o VirtualIPMappingResponseOutput) ToVirtualIPMappingResponseOutputWithContext(ctx context.Context) VirtualIPMappingResponseOutput {
	return o
}

// Is virtual IP mapping in use.
func (o VirtualIPMappingResponseOutput) InUse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualIPMappingResponse) *bool { return v.InUse }).(pulumi.BoolPtrOutput)
}

// Internal HTTP port.
func (o VirtualIPMappingResponseOutput) InternalHttpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualIPMappingResponse) *int { return v.InternalHttpPort }).(pulumi.IntPtrOutput)
}

// Internal HTTPS port.
func (o VirtualIPMappingResponseOutput) InternalHttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualIPMappingResponse) *int { return v.InternalHttpsPort }).(pulumi.IntPtrOutput)
}

// Virtual IP address.
func (o VirtualIPMappingResponseOutput) VirtualIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualIPMappingResponse) *string { return v.VirtualIP }).(pulumi.StringPtrOutput)
}

type VirtualIPMappingResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualIPMappingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualIPMappingResponse)(nil)).Elem()
}

func (o VirtualIPMappingResponseArrayOutput) ToVirtualIPMappingResponseArrayOutput() VirtualIPMappingResponseArrayOutput {
	return o
}

func (o VirtualIPMappingResponseArrayOutput) ToVirtualIPMappingResponseArrayOutputWithContext(ctx context.Context) VirtualIPMappingResponseArrayOutput {
	return o
}

func (o VirtualIPMappingResponseArrayOutput) Index(i pulumi.IntInput) VirtualIPMappingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualIPMappingResponse {
		return vs[0].([]VirtualIPMappingResponse)[vs[1].(int)]
	}).(VirtualIPMappingResponseOutput)
}

// Specification for using a Virtual Network.
type VirtualNetworkProfile struct {
	// Resource id of the Virtual Network.
	Id *string `pulumi:"id"`
	// Subnet within the Virtual Network.
	Subnet *string `pulumi:"subnet"`
}

// VirtualNetworkProfileInput is an input type that accepts VirtualNetworkProfileArgs and VirtualNetworkProfileOutput values.
// You can construct a concrete instance of `VirtualNetworkProfileInput` via:
//
//          VirtualNetworkProfileArgs{...}
type VirtualNetworkProfileInput interface {
	pulumi.Input

	ToVirtualNetworkProfileOutput() VirtualNetworkProfileOutput
	ToVirtualNetworkProfileOutputWithContext(context.Context) VirtualNetworkProfileOutput
}

// Specification for using a Virtual Network.
type VirtualNetworkProfileArgs struct {
	// Resource id of the Virtual Network.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Subnet within the Virtual Network.
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
}

func (VirtualNetworkProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkProfile)(nil)).Elem()
}

func (i VirtualNetworkProfileArgs) ToVirtualNetworkProfileOutput() VirtualNetworkProfileOutput {
	return i.ToVirtualNetworkProfileOutputWithContext(context.Background())
}

func (i VirtualNetworkProfileArgs) ToVirtualNetworkProfileOutputWithContext(ctx context.Context) VirtualNetworkProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkProfileOutput)
}

func (i VirtualNetworkProfileArgs) ToVirtualNetworkProfilePtrOutput() VirtualNetworkProfilePtrOutput {
	return i.ToVirtualNetworkProfilePtrOutputWithContext(context.Background())
}

func (i VirtualNetworkProfileArgs) ToVirtualNetworkProfilePtrOutputWithContext(ctx context.Context) VirtualNetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkProfileOutput).ToVirtualNetworkProfilePtrOutputWithContext(ctx)
}

// VirtualNetworkProfilePtrInput is an input type that accepts VirtualNetworkProfileArgs, VirtualNetworkProfilePtr and VirtualNetworkProfilePtrOutput values.
// You can construct a concrete instance of `VirtualNetworkProfilePtrInput` via:
//
//          VirtualNetworkProfileArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkProfilePtrInput interface {
	pulumi.Input

	ToVirtualNetworkProfilePtrOutput() VirtualNetworkProfilePtrOutput
	ToVirtualNetworkProfilePtrOutputWithContext(context.Context) VirtualNetworkProfilePtrOutput
}

type virtualNetworkProfilePtrType VirtualNetworkProfileArgs

func VirtualNetworkProfilePtr(v *VirtualNetworkProfileArgs) VirtualNetworkProfilePtrInput {
	return (*virtualNetworkProfilePtrType)(v)
}

func (*virtualNetworkProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkProfile)(nil)).Elem()
}

func (i *virtualNetworkProfilePtrType) ToVirtualNetworkProfilePtrOutput() VirtualNetworkProfilePtrOutput {
	return i.ToVirtualNetworkProfilePtrOutputWithContext(context.Background())
}

func (i *virtualNetworkProfilePtrType) ToVirtualNetworkProfilePtrOutputWithContext(ctx context.Context) VirtualNetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkProfilePtrOutput)
}

// Specification for using a Virtual Network.
type VirtualNetworkProfileOutput struct{ *pulumi.OutputState }

func (VirtualNetworkProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkProfile)(nil)).Elem()
}

func (o VirtualNetworkProfileOutput) ToVirtualNetworkProfileOutput() VirtualNetworkProfileOutput {
	return o
}

func (o VirtualNetworkProfileOutput) ToVirtualNetworkProfileOutputWithContext(ctx context.Context) VirtualNetworkProfileOutput {
	return o
}

func (o VirtualNetworkProfileOutput) ToVirtualNetworkProfilePtrOutput() VirtualNetworkProfilePtrOutput {
	return o.ToVirtualNetworkProfilePtrOutputWithContext(context.Background())
}

func (o VirtualNetworkProfileOutput) ToVirtualNetworkProfilePtrOutputWithContext(ctx context.Context) VirtualNetworkProfilePtrOutput {
	return o.ApplyT(func(v VirtualNetworkProfile) *VirtualNetworkProfile {
		return &v
	}).(VirtualNetworkProfilePtrOutput)
}

// Resource id of the Virtual Network.
func (o VirtualNetworkProfileOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkProfile) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Subnet within the Virtual Network.
func (o VirtualNetworkProfileOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkProfile) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

type VirtualNetworkProfilePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkProfile)(nil)).Elem()
}

func (o VirtualNetworkProfilePtrOutput) ToVirtualNetworkProfilePtrOutput() VirtualNetworkProfilePtrOutput {
	return o
}

func (o VirtualNetworkProfilePtrOutput) ToVirtualNetworkProfilePtrOutputWithContext(ctx context.Context) VirtualNetworkProfilePtrOutput {
	return o
}

func (o VirtualNetworkProfilePtrOutput) Elem() VirtualNetworkProfileOutput {
	return o.ApplyT(func(v *VirtualNetworkProfile) VirtualNetworkProfile { return *v }).(VirtualNetworkProfileOutput)
}

// Resource id of the Virtual Network.
func (o VirtualNetworkProfilePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Subnet within the Virtual Network.
func (o VirtualNetworkProfilePtrOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(pulumi.StringPtrOutput)
}

// Specification for using a Virtual Network.
type VirtualNetworkProfileResponse struct {
	// Resource id of the Virtual Network.
	Id *string `pulumi:"id"`
	// Name of the Virtual Network (read-only).
	Name string `pulumi:"name"`
	// Subnet within the Virtual Network.
	Subnet *string `pulumi:"subnet"`
	// Resource type of the Virtual Network (read-only).
	Type string `pulumi:"type"`
}

// VirtualNetworkProfileResponseInput is an input type that accepts VirtualNetworkProfileResponseArgs and VirtualNetworkProfileResponseOutput values.
// You can construct a concrete instance of `VirtualNetworkProfileResponseInput` via:
//
//          VirtualNetworkProfileResponseArgs{...}
type VirtualNetworkProfileResponseInput interface {
	pulumi.Input

	ToVirtualNetworkProfileResponseOutput() VirtualNetworkProfileResponseOutput
	ToVirtualNetworkProfileResponseOutputWithContext(context.Context) VirtualNetworkProfileResponseOutput
}

// Specification for using a Virtual Network.
type VirtualNetworkProfileResponseArgs struct {
	// Resource id of the Virtual Network.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the Virtual Network (read-only).
	Name pulumi.StringInput `pulumi:"name"`
	// Subnet within the Virtual Network.
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
	// Resource type of the Virtual Network (read-only).
	Type pulumi.StringInput `pulumi:"type"`
}

func (VirtualNetworkProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkProfileResponse)(nil)).Elem()
}

func (i VirtualNetworkProfileResponseArgs) ToVirtualNetworkProfileResponseOutput() VirtualNetworkProfileResponseOutput {
	return i.ToVirtualNetworkProfileResponseOutputWithContext(context.Background())
}

func (i VirtualNetworkProfileResponseArgs) ToVirtualNetworkProfileResponseOutputWithContext(ctx context.Context) VirtualNetworkProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkProfileResponseOutput)
}

func (i VirtualNetworkProfileResponseArgs) ToVirtualNetworkProfileResponsePtrOutput() VirtualNetworkProfileResponsePtrOutput {
	return i.ToVirtualNetworkProfileResponsePtrOutputWithContext(context.Background())
}

func (i VirtualNetworkProfileResponseArgs) ToVirtualNetworkProfileResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkProfileResponseOutput).ToVirtualNetworkProfileResponsePtrOutputWithContext(ctx)
}

// VirtualNetworkProfileResponsePtrInput is an input type that accepts VirtualNetworkProfileResponseArgs, VirtualNetworkProfileResponsePtr and VirtualNetworkProfileResponsePtrOutput values.
// You can construct a concrete instance of `VirtualNetworkProfileResponsePtrInput` via:
//
//          VirtualNetworkProfileResponseArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkProfileResponsePtrInput interface {
	pulumi.Input

	ToVirtualNetworkProfileResponsePtrOutput() VirtualNetworkProfileResponsePtrOutput
	ToVirtualNetworkProfileResponsePtrOutputWithContext(context.Context) VirtualNetworkProfileResponsePtrOutput
}

type virtualNetworkProfileResponsePtrType VirtualNetworkProfileResponseArgs

func VirtualNetworkProfileResponsePtr(v *VirtualNetworkProfileResponseArgs) VirtualNetworkProfileResponsePtrInput {
	return (*virtualNetworkProfileResponsePtrType)(v)
}

func (*virtualNetworkProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkProfileResponse)(nil)).Elem()
}

func (i *virtualNetworkProfileResponsePtrType) ToVirtualNetworkProfileResponsePtrOutput() VirtualNetworkProfileResponsePtrOutput {
	return i.ToVirtualNetworkProfileResponsePtrOutputWithContext(context.Background())
}

func (i *virtualNetworkProfileResponsePtrType) ToVirtualNetworkProfileResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkProfileResponsePtrOutput)
}

// Specification for using a Virtual Network.
type VirtualNetworkProfileResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkProfileResponse)(nil)).Elem()
}

func (o VirtualNetworkProfileResponseOutput) ToVirtualNetworkProfileResponseOutput() VirtualNetworkProfileResponseOutput {
	return o
}

func (o VirtualNetworkProfileResponseOutput) ToVirtualNetworkProfileResponseOutputWithContext(ctx context.Context) VirtualNetworkProfileResponseOutput {
	return o
}

func (o VirtualNetworkProfileResponseOutput) ToVirtualNetworkProfileResponsePtrOutput() VirtualNetworkProfileResponsePtrOutput {
	return o.ToVirtualNetworkProfileResponsePtrOutputWithContext(context.Background())
}

func (o VirtualNetworkProfileResponseOutput) ToVirtualNetworkProfileResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkProfileResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkProfileResponse) *VirtualNetworkProfileResponse {
		return &v
	}).(VirtualNetworkProfileResponsePtrOutput)
}

// Resource id of the Virtual Network.
func (o VirtualNetworkProfileResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkProfileResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the Virtual Network (read-only).
func (o VirtualNetworkProfileResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkProfileResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Subnet within the Virtual Network.
func (o VirtualNetworkProfileResponseOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkProfileResponse) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

// Resource type of the Virtual Network (read-only).
func (o VirtualNetworkProfileResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkProfileResponse) string { return v.Type }).(pulumi.StringOutput)
}

type VirtualNetworkProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkProfileResponse)(nil)).Elem()
}

func (o VirtualNetworkProfileResponsePtrOutput) ToVirtualNetworkProfileResponsePtrOutput() VirtualNetworkProfileResponsePtrOutput {
	return o
}

func (o VirtualNetworkProfileResponsePtrOutput) ToVirtualNetworkProfileResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkProfileResponsePtrOutput {
	return o
}

func (o VirtualNetworkProfileResponsePtrOutput) Elem() VirtualNetworkProfileResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkProfileResponse) VirtualNetworkProfileResponse { return *v }).(VirtualNetworkProfileResponseOutput)
}

// Resource id of the Virtual Network.
func (o VirtualNetworkProfileResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Name of the Virtual Network (read-only).
func (o VirtualNetworkProfileResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Subnet within the Virtual Network.
func (o VirtualNetworkProfileResponsePtrOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(pulumi.StringPtrOutput)
}

// Resource type of the Virtual Network (read-only).
func (o VirtualNetworkProfileResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// VnetRoute resource specific properties
type VnetRouteResponseProperties struct {
	// The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.
	EndAddress *string `pulumi:"endAddress"`
	// The name of this route. This is only returned by the server and does not need to be set by the client.
	Name *string `pulumi:"name"`
	// The type of route this is:
	// DEFAULT - By default, every app has routes to the local address ranges specified by RFC1918
	// INHERITED - Routes inherited from the real Virtual Network routes
	// STATIC - Static route set on the app only
	//
	// These values will be used for syncing an app's routes with those from a Virtual Network.
	RouteType *string `pulumi:"routeType"`
	// The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.
	StartAddress *string `pulumi:"startAddress"`
}

// VnetRouteResponsePropertiesInput is an input type that accepts VnetRouteResponsePropertiesArgs and VnetRouteResponsePropertiesOutput values.
// You can construct a concrete instance of `VnetRouteResponsePropertiesInput` via:
//
//          VnetRouteResponsePropertiesArgs{...}
type VnetRouteResponsePropertiesInput interface {
	pulumi.Input

	ToVnetRouteResponsePropertiesOutput() VnetRouteResponsePropertiesOutput
	ToVnetRouteResponsePropertiesOutputWithContext(context.Context) VnetRouteResponsePropertiesOutput
}

// VnetRoute resource specific properties
type VnetRouteResponsePropertiesArgs struct {
	// The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.
	EndAddress pulumi.StringPtrInput `pulumi:"endAddress"`
	// The name of this route. This is only returned by the server and does not need to be set by the client.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The type of route this is:
	// DEFAULT - By default, every app has routes to the local address ranges specified by RFC1918
	// INHERITED - Routes inherited from the real Virtual Network routes
	// STATIC - Static route set on the app only
	//
	// These values will be used for syncing an app's routes with those from a Virtual Network.
	RouteType pulumi.StringPtrInput `pulumi:"routeType"`
	// The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.
	StartAddress pulumi.StringPtrInput `pulumi:"startAddress"`
}

func (VnetRouteResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VnetRouteResponseProperties)(nil)).Elem()
}

func (i VnetRouteResponsePropertiesArgs) ToVnetRouteResponsePropertiesOutput() VnetRouteResponsePropertiesOutput {
	return i.ToVnetRouteResponsePropertiesOutputWithContext(context.Background())
}

func (i VnetRouteResponsePropertiesArgs) ToVnetRouteResponsePropertiesOutputWithContext(ctx context.Context) VnetRouteResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetRouteResponsePropertiesOutput)
}

func (i VnetRouteResponsePropertiesArgs) ToVnetRouteResponsePropertiesPtrOutput() VnetRouteResponsePropertiesPtrOutput {
	return i.ToVnetRouteResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i VnetRouteResponsePropertiesArgs) ToVnetRouteResponsePropertiesPtrOutputWithContext(ctx context.Context) VnetRouteResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetRouteResponsePropertiesOutput).ToVnetRouteResponsePropertiesPtrOutputWithContext(ctx)
}

// VnetRouteResponsePropertiesPtrInput is an input type that accepts VnetRouteResponsePropertiesArgs, VnetRouteResponsePropertiesPtr and VnetRouteResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `VnetRouteResponsePropertiesPtrInput` via:
//
//          VnetRouteResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type VnetRouteResponsePropertiesPtrInput interface {
	pulumi.Input

	ToVnetRouteResponsePropertiesPtrOutput() VnetRouteResponsePropertiesPtrOutput
	ToVnetRouteResponsePropertiesPtrOutputWithContext(context.Context) VnetRouteResponsePropertiesPtrOutput
}

type vnetRouteResponsePropertiesPtrType VnetRouteResponsePropertiesArgs

func VnetRouteResponsePropertiesPtr(v *VnetRouteResponsePropertiesArgs) VnetRouteResponsePropertiesPtrInput {
	return (*vnetRouteResponsePropertiesPtrType)(v)
}

func (*vnetRouteResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VnetRouteResponseProperties)(nil)).Elem()
}

func (i *vnetRouteResponsePropertiesPtrType) ToVnetRouteResponsePropertiesPtrOutput() VnetRouteResponsePropertiesPtrOutput {
	return i.ToVnetRouteResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *vnetRouteResponsePropertiesPtrType) ToVnetRouteResponsePropertiesPtrOutputWithContext(ctx context.Context) VnetRouteResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetRouteResponsePropertiesPtrOutput)
}

// VnetRoute resource specific properties
type VnetRouteResponsePropertiesOutput struct{ *pulumi.OutputState }

func (VnetRouteResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VnetRouteResponseProperties)(nil)).Elem()
}

func (o VnetRouteResponsePropertiesOutput) ToVnetRouteResponsePropertiesOutput() VnetRouteResponsePropertiesOutput {
	return o
}

func (o VnetRouteResponsePropertiesOutput) ToVnetRouteResponsePropertiesOutputWithContext(ctx context.Context) VnetRouteResponsePropertiesOutput {
	return o
}

func (o VnetRouteResponsePropertiesOutput) ToVnetRouteResponsePropertiesPtrOutput() VnetRouteResponsePropertiesPtrOutput {
	return o.ToVnetRouteResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o VnetRouteResponsePropertiesOutput) ToVnetRouteResponsePropertiesPtrOutputWithContext(ctx context.Context) VnetRouteResponsePropertiesPtrOutput {
	return o.ApplyT(func(v VnetRouteResponseProperties) *VnetRouteResponseProperties {
		return &v
	}).(VnetRouteResponsePropertiesPtrOutput)
}

// The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.
func (o VnetRouteResponsePropertiesOutput) EndAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetRouteResponseProperties) *string { return v.EndAddress }).(pulumi.StringPtrOutput)
}

// The name of this route. This is only returned by the server and does not need to be set by the client.
func (o VnetRouteResponsePropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetRouteResponseProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of route this is:
// DEFAULT - By default, every app has routes to the local address ranges specified by RFC1918
// INHERITED - Routes inherited from the real Virtual Network routes
// STATIC - Static route set on the app only
//
// These values will be used for syncing an app's routes with those from a Virtual Network.
func (o VnetRouteResponsePropertiesOutput) RouteType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetRouteResponseProperties) *string { return v.RouteType }).(pulumi.StringPtrOutput)
}

// The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.
func (o VnetRouteResponsePropertiesOutput) StartAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetRouteResponseProperties) *string { return v.StartAddress }).(pulumi.StringPtrOutput)
}

type VnetRouteResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (VnetRouteResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VnetRouteResponseProperties)(nil)).Elem()
}

func (o VnetRouteResponsePropertiesPtrOutput) ToVnetRouteResponsePropertiesPtrOutput() VnetRouteResponsePropertiesPtrOutput {
	return o
}

func (o VnetRouteResponsePropertiesPtrOutput) ToVnetRouteResponsePropertiesPtrOutputWithContext(ctx context.Context) VnetRouteResponsePropertiesPtrOutput {
	return o
}

func (o VnetRouteResponsePropertiesPtrOutput) Elem() VnetRouteResponsePropertiesOutput {
	return o.ApplyT(func(v *VnetRouteResponseProperties) VnetRouteResponseProperties { return *v }).(VnetRouteResponsePropertiesOutput)
}

// The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.
func (o VnetRouteResponsePropertiesPtrOutput) EndAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VnetRouteResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.EndAddress
	}).(pulumi.StringPtrOutput)
}

// The name of this route. This is only returned by the server and does not need to be set by the client.
func (o VnetRouteResponsePropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VnetRouteResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The type of route this is:
// DEFAULT - By default, every app has routes to the local address ranges specified by RFC1918
// INHERITED - Routes inherited from the real Virtual Network routes
// STATIC - Static route set on the app only
//
// These values will be used for syncing an app's routes with those from a Virtual Network.
func (o VnetRouteResponsePropertiesPtrOutput) RouteType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VnetRouteResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.RouteType
	}).(pulumi.StringPtrOutput)
}

// The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.
func (o VnetRouteResponsePropertiesPtrOutput) StartAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VnetRouteResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.StartAddress
	}).(pulumi.StringPtrOutput)
}

// Worker pool of an App Service Environment.
type WorkerPool struct {
	// Shared or dedicated app hosting.
	ComputeMode *string `pulumi:"computeMode"`
	// Number of instances in the worker pool.
	WorkerCount *int `pulumi:"workerCount"`
	// VM size of the worker pool instances.
	WorkerSize *string `pulumi:"workerSize"`
	// Worker size ID for referencing this worker pool.
	WorkerSizeId *int `pulumi:"workerSizeId"`
}

// WorkerPoolInput is an input type that accepts WorkerPoolArgs and WorkerPoolOutput values.
// You can construct a concrete instance of `WorkerPoolInput` via:
//
//          WorkerPoolArgs{...}
type WorkerPoolInput interface {
	pulumi.Input

	ToWorkerPoolOutput() WorkerPoolOutput
	ToWorkerPoolOutputWithContext(context.Context) WorkerPoolOutput
}

// Worker pool of an App Service Environment.
type WorkerPoolArgs struct {
	// Shared or dedicated app hosting.
	ComputeMode pulumi.StringPtrInput `pulumi:"computeMode"`
	// Number of instances in the worker pool.
	WorkerCount pulumi.IntPtrInput `pulumi:"workerCount"`
	// VM size of the worker pool instances.
	WorkerSize pulumi.StringPtrInput `pulumi:"workerSize"`
	// Worker size ID for referencing this worker pool.
	WorkerSizeId pulumi.IntPtrInput `pulumi:"workerSizeId"`
}

func (WorkerPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkerPool)(nil)).Elem()
}

func (i WorkerPoolArgs) ToWorkerPoolOutput() WorkerPoolOutput {
	return i.ToWorkerPoolOutputWithContext(context.Background())
}

func (i WorkerPoolArgs) ToWorkerPoolOutputWithContext(ctx context.Context) WorkerPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerPoolOutput)
}

// WorkerPoolArrayInput is an input type that accepts WorkerPoolArray and WorkerPoolArrayOutput values.
// You can construct a concrete instance of `WorkerPoolArrayInput` via:
//
//          WorkerPoolArray{ WorkerPoolArgs{...} }
type WorkerPoolArrayInput interface {
	pulumi.Input

	ToWorkerPoolArrayOutput() WorkerPoolArrayOutput
	ToWorkerPoolArrayOutputWithContext(context.Context) WorkerPoolArrayOutput
}

type WorkerPoolArray []WorkerPoolInput

func (WorkerPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkerPool)(nil)).Elem()
}

func (i WorkerPoolArray) ToWorkerPoolArrayOutput() WorkerPoolArrayOutput {
	return i.ToWorkerPoolArrayOutputWithContext(context.Background())
}

func (i WorkerPoolArray) ToWorkerPoolArrayOutputWithContext(ctx context.Context) WorkerPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerPoolArrayOutput)
}

// Worker pool of an App Service Environment.
type WorkerPoolOutput struct{ *pulumi.OutputState }

func (WorkerPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkerPool)(nil)).Elem()
}

func (o WorkerPoolOutput) ToWorkerPoolOutput() WorkerPoolOutput {
	return o
}

func (o WorkerPoolOutput) ToWorkerPoolOutputWithContext(ctx context.Context) WorkerPoolOutput {
	return o
}

// Shared or dedicated app hosting.
func (o WorkerPoolOutput) ComputeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkerPool) *string { return v.ComputeMode }).(pulumi.StringPtrOutput)
}

// Number of instances in the worker pool.
func (o WorkerPoolOutput) WorkerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkerPool) *int { return v.WorkerCount }).(pulumi.IntPtrOutput)
}

// VM size of the worker pool instances.
func (o WorkerPoolOutput) WorkerSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkerPool) *string { return v.WorkerSize }).(pulumi.StringPtrOutput)
}

// Worker size ID for referencing this worker pool.
func (o WorkerPoolOutput) WorkerSizeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkerPool) *int { return v.WorkerSizeId }).(pulumi.IntPtrOutput)
}

type WorkerPoolArrayOutput struct{ *pulumi.OutputState }

func (WorkerPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkerPool)(nil)).Elem()
}

func (o WorkerPoolArrayOutput) ToWorkerPoolArrayOutput() WorkerPoolArrayOutput {
	return o
}

func (o WorkerPoolArrayOutput) ToWorkerPoolArrayOutputWithContext(ctx context.Context) WorkerPoolArrayOutput {
	return o
}

func (o WorkerPoolArrayOutput) Index(i pulumi.IntInput) WorkerPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkerPool {
		return vs[0].([]WorkerPool)[vs[1].(int)]
	}).(WorkerPoolOutput)
}

// Worker pool of an App Service Environment.
type WorkerPoolResponse struct {
	// Shared or dedicated app hosting.
	ComputeMode *string `pulumi:"computeMode"`
	// Names of all instances in the worker pool (read only).
	InstanceNames []string `pulumi:"instanceNames"`
	// Number of instances in the worker pool.
	WorkerCount *int `pulumi:"workerCount"`
	// VM size of the worker pool instances.
	WorkerSize *string `pulumi:"workerSize"`
	// Worker size ID for referencing this worker pool.
	WorkerSizeId *int `pulumi:"workerSizeId"`
}

// WorkerPoolResponseInput is an input type that accepts WorkerPoolResponseArgs and WorkerPoolResponseOutput values.
// You can construct a concrete instance of `WorkerPoolResponseInput` via:
//
//          WorkerPoolResponseArgs{...}
type WorkerPoolResponseInput interface {
	pulumi.Input

	ToWorkerPoolResponseOutput() WorkerPoolResponseOutput
	ToWorkerPoolResponseOutputWithContext(context.Context) WorkerPoolResponseOutput
}

// Worker pool of an App Service Environment.
type WorkerPoolResponseArgs struct {
	// Shared or dedicated app hosting.
	ComputeMode pulumi.StringPtrInput `pulumi:"computeMode"`
	// Names of all instances in the worker pool (read only).
	InstanceNames pulumi.StringArrayInput `pulumi:"instanceNames"`
	// Number of instances in the worker pool.
	WorkerCount pulumi.IntPtrInput `pulumi:"workerCount"`
	// VM size of the worker pool instances.
	WorkerSize pulumi.StringPtrInput `pulumi:"workerSize"`
	// Worker size ID for referencing this worker pool.
	WorkerSizeId pulumi.IntPtrInput `pulumi:"workerSizeId"`
}

func (WorkerPoolResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkerPoolResponse)(nil)).Elem()
}

func (i WorkerPoolResponseArgs) ToWorkerPoolResponseOutput() WorkerPoolResponseOutput {
	return i.ToWorkerPoolResponseOutputWithContext(context.Background())
}

func (i WorkerPoolResponseArgs) ToWorkerPoolResponseOutputWithContext(ctx context.Context) WorkerPoolResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerPoolResponseOutput)
}

// WorkerPoolResponseArrayInput is an input type that accepts WorkerPoolResponseArray and WorkerPoolResponseArrayOutput values.
// You can construct a concrete instance of `WorkerPoolResponseArrayInput` via:
//
//          WorkerPoolResponseArray{ WorkerPoolResponseArgs{...} }
type WorkerPoolResponseArrayInput interface {
	pulumi.Input

	ToWorkerPoolResponseArrayOutput() WorkerPoolResponseArrayOutput
	ToWorkerPoolResponseArrayOutputWithContext(context.Context) WorkerPoolResponseArrayOutput
}

type WorkerPoolResponseArray []WorkerPoolResponseInput

func (WorkerPoolResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkerPoolResponse)(nil)).Elem()
}

func (i WorkerPoolResponseArray) ToWorkerPoolResponseArrayOutput() WorkerPoolResponseArrayOutput {
	return i.ToWorkerPoolResponseArrayOutputWithContext(context.Background())
}

func (i WorkerPoolResponseArray) ToWorkerPoolResponseArrayOutputWithContext(ctx context.Context) WorkerPoolResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerPoolResponseArrayOutput)
}

// Worker pool of an App Service Environment.
type WorkerPoolResponseOutput struct{ *pulumi.OutputState }

func (WorkerPoolResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkerPoolResponse)(nil)).Elem()
}

func (o WorkerPoolResponseOutput) ToWorkerPoolResponseOutput() WorkerPoolResponseOutput {
	return o
}

func (o WorkerPoolResponseOutput) ToWorkerPoolResponseOutputWithContext(ctx context.Context) WorkerPoolResponseOutput {
	return o
}

// Shared or dedicated app hosting.
func (o WorkerPoolResponseOutput) ComputeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkerPoolResponse) *string { return v.ComputeMode }).(pulumi.StringPtrOutput)
}

// Names of all instances in the worker pool (read only).
func (o WorkerPoolResponseOutput) InstanceNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkerPoolResponse) []string { return v.InstanceNames }).(pulumi.StringArrayOutput)
}

// Number of instances in the worker pool.
func (o WorkerPoolResponseOutput) WorkerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkerPoolResponse) *int { return v.WorkerCount }).(pulumi.IntPtrOutput)
}

// VM size of the worker pool instances.
func (o WorkerPoolResponseOutput) WorkerSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkerPoolResponse) *string { return v.WorkerSize }).(pulumi.StringPtrOutput)
}

// Worker size ID for referencing this worker pool.
func (o WorkerPoolResponseOutput) WorkerSizeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkerPoolResponse) *int { return v.WorkerSizeId }).(pulumi.IntPtrOutput)
}

type WorkerPoolResponseArrayOutput struct{ *pulumi.OutputState }

func (WorkerPoolResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkerPoolResponse)(nil)).Elem()
}

func (o WorkerPoolResponseArrayOutput) ToWorkerPoolResponseArrayOutput() WorkerPoolResponseArrayOutput {
	return o
}

func (o WorkerPoolResponseArrayOutput) ToWorkerPoolResponseArrayOutputWithContext(ctx context.Context) WorkerPoolResponseArrayOutput {
	return o
}

func (o WorkerPoolResponseArrayOutput) Index(i pulumi.IntInput) WorkerPoolResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkerPoolResponse {
		return vs[0].([]WorkerPoolResponse)[vs[1].(int)]
	}).(WorkerPoolResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(AppServiceEnvironmentResponseOutput{})
	pulumi.RegisterOutputType(AppServiceEnvironmentResponsePtrOutput{})
	pulumi.RegisterOutputType(AppServicePlanResponsePropertiesOutput{})
	pulumi.RegisterOutputType(AppServicePlanResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(CapabilityOutput{})
	pulumi.RegisterOutputType(CapabilityArrayOutput{})
	pulumi.RegisterOutputType(CapabilityResponseOutput{})
	pulumi.RegisterOutputType(CapabilityResponseArrayOutput{})
	pulumi.RegisterOutputType(HostingEnvironmentProfileOutput{})
	pulumi.RegisterOutputType(HostingEnvironmentProfilePtrOutput{})
	pulumi.RegisterOutputType(HostingEnvironmentProfileResponseOutput{})
	pulumi.RegisterOutputType(HostingEnvironmentProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(HybridConnectionKeyResponsePropertiesOutput{})
	pulumi.RegisterOutputType(NameValuePairOutput{})
	pulumi.RegisterOutputType(NameValuePairArrayOutput{})
	pulumi.RegisterOutputType(NameValuePairResponseOutput{})
	pulumi.RegisterOutputType(NameValuePairResponseArrayOutput{})
	pulumi.RegisterOutputType(NetworkAccessControlEntryOutput{})
	pulumi.RegisterOutputType(NetworkAccessControlEntryArrayOutput{})
	pulumi.RegisterOutputType(NetworkAccessControlEntryResponseOutput{})
	pulumi.RegisterOutputType(NetworkAccessControlEntryResponseArrayOutput{})
	pulumi.RegisterOutputType(SkuCapacityOutput{})
	pulumi.RegisterOutputType(SkuCapacityPtrOutput{})
	pulumi.RegisterOutputType(SkuCapacityResponseOutput{})
	pulumi.RegisterOutputType(SkuCapacityResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuDescriptionOutput{})
	pulumi.RegisterOutputType(SkuDescriptionPtrOutput{})
	pulumi.RegisterOutputType(SkuDescriptionResponseOutput{})
	pulumi.RegisterOutputType(SkuDescriptionResponsePtrOutput{})
	pulumi.RegisterOutputType(StampCapacityResponseOutput{})
	pulumi.RegisterOutputType(StampCapacityResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualIPMappingResponseOutput{})
	pulumi.RegisterOutputType(VirtualIPMappingResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkProfileOutput{})
	pulumi.RegisterOutputType(VirtualNetworkProfilePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkProfileResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(VnetRouteResponsePropertiesOutput{})
	pulumi.RegisterOutputType(VnetRouteResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(WorkerPoolOutput{})
	pulumi.RegisterOutputType(WorkerPoolArrayOutput{})
	pulumi.RegisterOutputType(WorkerPoolResponseOutput{})
	pulumi.RegisterOutputType(WorkerPoolResponseArrayOutput{})
}
