// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20150801

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Information about the formal API definition for the web app.
type ApiDefinitionInfo struct {
	// The URL of the API definition.
	Url *string `pulumi:"url"`
}

// ApiDefinitionInfoInput is an input type that accepts ApiDefinitionInfoArgs and ApiDefinitionInfoOutput values.
// You can construct a concrete instance of `ApiDefinitionInfoInput` via:
//
//          ApiDefinitionInfoArgs{...}
type ApiDefinitionInfoInput interface {
	pulumi.Input

	ToApiDefinitionInfoOutput() ApiDefinitionInfoOutput
	ToApiDefinitionInfoOutputWithContext(context.Context) ApiDefinitionInfoOutput
}

// Information about the formal API definition for the web app.
type ApiDefinitionInfoArgs struct {
	// The URL of the API definition.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (ApiDefinitionInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDefinitionInfo)(nil)).Elem()
}

func (i ApiDefinitionInfoArgs) ToApiDefinitionInfoOutput() ApiDefinitionInfoOutput {
	return i.ToApiDefinitionInfoOutputWithContext(context.Background())
}

func (i ApiDefinitionInfoArgs) ToApiDefinitionInfoOutputWithContext(ctx context.Context) ApiDefinitionInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDefinitionInfoOutput)
}

func (i ApiDefinitionInfoArgs) ToApiDefinitionInfoPtrOutput() ApiDefinitionInfoPtrOutput {
	return i.ToApiDefinitionInfoPtrOutputWithContext(context.Background())
}

func (i ApiDefinitionInfoArgs) ToApiDefinitionInfoPtrOutputWithContext(ctx context.Context) ApiDefinitionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDefinitionInfoOutput).ToApiDefinitionInfoPtrOutputWithContext(ctx)
}

// ApiDefinitionInfoPtrInput is an input type that accepts ApiDefinitionInfoArgs, ApiDefinitionInfoPtr and ApiDefinitionInfoPtrOutput values.
// You can construct a concrete instance of `ApiDefinitionInfoPtrInput` via:
//
//          ApiDefinitionInfoArgs{...}
//
//  or:
//
//          nil
type ApiDefinitionInfoPtrInput interface {
	pulumi.Input

	ToApiDefinitionInfoPtrOutput() ApiDefinitionInfoPtrOutput
	ToApiDefinitionInfoPtrOutputWithContext(context.Context) ApiDefinitionInfoPtrOutput
}

type apiDefinitionInfoPtrType ApiDefinitionInfoArgs

func ApiDefinitionInfoPtr(v *ApiDefinitionInfoArgs) ApiDefinitionInfoPtrInput {
	return (*apiDefinitionInfoPtrType)(v)
}

func (*apiDefinitionInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiDefinitionInfo)(nil)).Elem()
}

func (i *apiDefinitionInfoPtrType) ToApiDefinitionInfoPtrOutput() ApiDefinitionInfoPtrOutput {
	return i.ToApiDefinitionInfoPtrOutputWithContext(context.Background())
}

func (i *apiDefinitionInfoPtrType) ToApiDefinitionInfoPtrOutputWithContext(ctx context.Context) ApiDefinitionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDefinitionInfoPtrOutput)
}

// Information about the formal API definition for the web app.
type ApiDefinitionInfoOutput struct{ *pulumi.OutputState }

func (ApiDefinitionInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDefinitionInfo)(nil)).Elem()
}

func (o ApiDefinitionInfoOutput) ToApiDefinitionInfoOutput() ApiDefinitionInfoOutput {
	return o
}

func (o ApiDefinitionInfoOutput) ToApiDefinitionInfoOutputWithContext(ctx context.Context) ApiDefinitionInfoOutput {
	return o
}

func (o ApiDefinitionInfoOutput) ToApiDefinitionInfoPtrOutput() ApiDefinitionInfoPtrOutput {
	return o.ToApiDefinitionInfoPtrOutputWithContext(context.Background())
}

func (o ApiDefinitionInfoOutput) ToApiDefinitionInfoPtrOutputWithContext(ctx context.Context) ApiDefinitionInfoPtrOutput {
	return o.ApplyT(func(v ApiDefinitionInfo) *ApiDefinitionInfo {
		return &v
	}).(ApiDefinitionInfoPtrOutput)
}

// The URL of the API definition.
func (o ApiDefinitionInfoOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiDefinitionInfo) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ApiDefinitionInfoPtrOutput struct{ *pulumi.OutputState }

func (ApiDefinitionInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiDefinitionInfo)(nil)).Elem()
}

func (o ApiDefinitionInfoPtrOutput) ToApiDefinitionInfoPtrOutput() ApiDefinitionInfoPtrOutput {
	return o
}

func (o ApiDefinitionInfoPtrOutput) ToApiDefinitionInfoPtrOutputWithContext(ctx context.Context) ApiDefinitionInfoPtrOutput {
	return o
}

func (o ApiDefinitionInfoPtrOutput) Elem() ApiDefinitionInfoOutput {
	return o.ApplyT(func(v *ApiDefinitionInfo) ApiDefinitionInfo { return *v }).(ApiDefinitionInfoOutput)
}

// The URL of the API definition.
func (o ApiDefinitionInfoPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiDefinitionInfo) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// Information about the formal API definition for the web app.
type ApiDefinitionInfoResponse struct {
	// The URL of the API definition.
	Url *string `pulumi:"url"`
}

// ApiDefinitionInfoResponseInput is an input type that accepts ApiDefinitionInfoResponseArgs and ApiDefinitionInfoResponseOutput values.
// You can construct a concrete instance of `ApiDefinitionInfoResponseInput` via:
//
//          ApiDefinitionInfoResponseArgs{...}
type ApiDefinitionInfoResponseInput interface {
	pulumi.Input

	ToApiDefinitionInfoResponseOutput() ApiDefinitionInfoResponseOutput
	ToApiDefinitionInfoResponseOutputWithContext(context.Context) ApiDefinitionInfoResponseOutput
}

// Information about the formal API definition for the web app.
type ApiDefinitionInfoResponseArgs struct {
	// The URL of the API definition.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (ApiDefinitionInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDefinitionInfoResponse)(nil)).Elem()
}

func (i ApiDefinitionInfoResponseArgs) ToApiDefinitionInfoResponseOutput() ApiDefinitionInfoResponseOutput {
	return i.ToApiDefinitionInfoResponseOutputWithContext(context.Background())
}

func (i ApiDefinitionInfoResponseArgs) ToApiDefinitionInfoResponseOutputWithContext(ctx context.Context) ApiDefinitionInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDefinitionInfoResponseOutput)
}

func (i ApiDefinitionInfoResponseArgs) ToApiDefinitionInfoResponsePtrOutput() ApiDefinitionInfoResponsePtrOutput {
	return i.ToApiDefinitionInfoResponsePtrOutputWithContext(context.Background())
}

func (i ApiDefinitionInfoResponseArgs) ToApiDefinitionInfoResponsePtrOutputWithContext(ctx context.Context) ApiDefinitionInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDefinitionInfoResponseOutput).ToApiDefinitionInfoResponsePtrOutputWithContext(ctx)
}

// ApiDefinitionInfoResponsePtrInput is an input type that accepts ApiDefinitionInfoResponseArgs, ApiDefinitionInfoResponsePtr and ApiDefinitionInfoResponsePtrOutput values.
// You can construct a concrete instance of `ApiDefinitionInfoResponsePtrInput` via:
//
//          ApiDefinitionInfoResponseArgs{...}
//
//  or:
//
//          nil
type ApiDefinitionInfoResponsePtrInput interface {
	pulumi.Input

	ToApiDefinitionInfoResponsePtrOutput() ApiDefinitionInfoResponsePtrOutput
	ToApiDefinitionInfoResponsePtrOutputWithContext(context.Context) ApiDefinitionInfoResponsePtrOutput
}

type apiDefinitionInfoResponsePtrType ApiDefinitionInfoResponseArgs

func ApiDefinitionInfoResponsePtr(v *ApiDefinitionInfoResponseArgs) ApiDefinitionInfoResponsePtrInput {
	return (*apiDefinitionInfoResponsePtrType)(v)
}

func (*apiDefinitionInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiDefinitionInfoResponse)(nil)).Elem()
}

func (i *apiDefinitionInfoResponsePtrType) ToApiDefinitionInfoResponsePtrOutput() ApiDefinitionInfoResponsePtrOutput {
	return i.ToApiDefinitionInfoResponsePtrOutputWithContext(context.Background())
}

func (i *apiDefinitionInfoResponsePtrType) ToApiDefinitionInfoResponsePtrOutputWithContext(ctx context.Context) ApiDefinitionInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDefinitionInfoResponsePtrOutput)
}

// Information about the formal API definition for the web app.
type ApiDefinitionInfoResponseOutput struct{ *pulumi.OutputState }

func (ApiDefinitionInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDefinitionInfoResponse)(nil)).Elem()
}

func (o ApiDefinitionInfoResponseOutput) ToApiDefinitionInfoResponseOutput() ApiDefinitionInfoResponseOutput {
	return o
}

func (o ApiDefinitionInfoResponseOutput) ToApiDefinitionInfoResponseOutputWithContext(ctx context.Context) ApiDefinitionInfoResponseOutput {
	return o
}

func (o ApiDefinitionInfoResponseOutput) ToApiDefinitionInfoResponsePtrOutput() ApiDefinitionInfoResponsePtrOutput {
	return o.ToApiDefinitionInfoResponsePtrOutputWithContext(context.Background())
}

func (o ApiDefinitionInfoResponseOutput) ToApiDefinitionInfoResponsePtrOutputWithContext(ctx context.Context) ApiDefinitionInfoResponsePtrOutput {
	return o.ApplyT(func(v ApiDefinitionInfoResponse) *ApiDefinitionInfoResponse {
		return &v
	}).(ApiDefinitionInfoResponsePtrOutput)
}

// The URL of the API definition.
func (o ApiDefinitionInfoResponseOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiDefinitionInfoResponse) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ApiDefinitionInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiDefinitionInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiDefinitionInfoResponse)(nil)).Elem()
}

func (o ApiDefinitionInfoResponsePtrOutput) ToApiDefinitionInfoResponsePtrOutput() ApiDefinitionInfoResponsePtrOutput {
	return o
}

func (o ApiDefinitionInfoResponsePtrOutput) ToApiDefinitionInfoResponsePtrOutputWithContext(ctx context.Context) ApiDefinitionInfoResponsePtrOutput {
	return o
}

func (o ApiDefinitionInfoResponsePtrOutput) Elem() ApiDefinitionInfoResponseOutput {
	return o.ApplyT(func(v *ApiDefinitionInfoResponse) ApiDefinitionInfoResponse { return *v }).(ApiDefinitionInfoResponseOutput)
}

// The URL of the API definition.
func (o ApiDefinitionInfoResponsePtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiDefinitionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// The plan object in an ARM, represents a marketplace plan
type ArmPlan struct {
	// The name
	Name *string `pulumi:"name"`
	// The product
	Product *string `pulumi:"product"`
	// The promotion code
	PromotionCode *string `pulumi:"promotionCode"`
	// The publisher
	Publisher *string `pulumi:"publisher"`
	// Version of product
	Version *string `pulumi:"version"`
}

// ArmPlanInput is an input type that accepts ArmPlanArgs and ArmPlanOutput values.
// You can construct a concrete instance of `ArmPlanInput` via:
//
//          ArmPlanArgs{...}
type ArmPlanInput interface {
	pulumi.Input

	ToArmPlanOutput() ArmPlanOutput
	ToArmPlanOutputWithContext(context.Context) ArmPlanOutput
}

// The plan object in an ARM, represents a marketplace plan
type ArmPlanArgs struct {
	// The name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The product
	Product pulumi.StringPtrInput `pulumi:"product"`
	// The promotion code
	PromotionCode pulumi.StringPtrInput `pulumi:"promotionCode"`
	// The publisher
	Publisher pulumi.StringPtrInput `pulumi:"publisher"`
	// Version of product
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ArmPlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ArmPlan)(nil)).Elem()
}

func (i ArmPlanArgs) ToArmPlanOutput() ArmPlanOutput {
	return i.ToArmPlanOutputWithContext(context.Background())
}

func (i ArmPlanArgs) ToArmPlanOutputWithContext(ctx context.Context) ArmPlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArmPlanOutput)
}

func (i ArmPlanArgs) ToArmPlanPtrOutput() ArmPlanPtrOutput {
	return i.ToArmPlanPtrOutputWithContext(context.Background())
}

func (i ArmPlanArgs) ToArmPlanPtrOutputWithContext(ctx context.Context) ArmPlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArmPlanOutput).ToArmPlanPtrOutputWithContext(ctx)
}

// ArmPlanPtrInput is an input type that accepts ArmPlanArgs, ArmPlanPtr and ArmPlanPtrOutput values.
// You can construct a concrete instance of `ArmPlanPtrInput` via:
//
//          ArmPlanArgs{...}
//
//  or:
//
//          nil
type ArmPlanPtrInput interface {
	pulumi.Input

	ToArmPlanPtrOutput() ArmPlanPtrOutput
	ToArmPlanPtrOutputWithContext(context.Context) ArmPlanPtrOutput
}

type armPlanPtrType ArmPlanArgs

func ArmPlanPtr(v *ArmPlanArgs) ArmPlanPtrInput {
	return (*armPlanPtrType)(v)
}

func (*armPlanPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ArmPlan)(nil)).Elem()
}

func (i *armPlanPtrType) ToArmPlanPtrOutput() ArmPlanPtrOutput {
	return i.ToArmPlanPtrOutputWithContext(context.Background())
}

func (i *armPlanPtrType) ToArmPlanPtrOutputWithContext(ctx context.Context) ArmPlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArmPlanPtrOutput)
}

// The plan object in an ARM, represents a marketplace plan
type ArmPlanOutput struct{ *pulumi.OutputState }

func (ArmPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArmPlan)(nil)).Elem()
}

func (o ArmPlanOutput) ToArmPlanOutput() ArmPlanOutput {
	return o
}

func (o ArmPlanOutput) ToArmPlanOutputWithContext(ctx context.Context) ArmPlanOutput {
	return o
}

func (o ArmPlanOutput) ToArmPlanPtrOutput() ArmPlanPtrOutput {
	return o.ToArmPlanPtrOutputWithContext(context.Background())
}

func (o ArmPlanOutput) ToArmPlanPtrOutputWithContext(ctx context.Context) ArmPlanPtrOutput {
	return o.ApplyT(func(v ArmPlan) *ArmPlan {
		return &v
	}).(ArmPlanPtrOutput)
}

// The name
func (o ArmPlanOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArmPlan) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The product
func (o ArmPlanOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArmPlan) *string { return v.Product }).(pulumi.StringPtrOutput)
}

// The promotion code
func (o ArmPlanOutput) PromotionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArmPlan) *string { return v.PromotionCode }).(pulumi.StringPtrOutput)
}

// The publisher
func (o ArmPlanOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArmPlan) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

// Version of product
func (o ArmPlanOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArmPlan) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ArmPlanPtrOutput struct{ *pulumi.OutputState }

func (ArmPlanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ArmPlan)(nil)).Elem()
}

func (o ArmPlanPtrOutput) ToArmPlanPtrOutput() ArmPlanPtrOutput {
	return o
}

func (o ArmPlanPtrOutput) ToArmPlanPtrOutputWithContext(ctx context.Context) ArmPlanPtrOutput {
	return o
}

func (o ArmPlanPtrOutput) Elem() ArmPlanOutput {
	return o.ApplyT(func(v *ArmPlan) ArmPlan { return *v }).(ArmPlanOutput)
}

// The name
func (o ArmPlanPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArmPlan) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The product
func (o ArmPlanPtrOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArmPlan) *string {
		if v == nil {
			return nil
		}
		return v.Product
	}).(pulumi.StringPtrOutput)
}

// The promotion code
func (o ArmPlanPtrOutput) PromotionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArmPlan) *string {
		if v == nil {
			return nil
		}
		return v.PromotionCode
	}).(pulumi.StringPtrOutput)
}

// The publisher
func (o ArmPlanPtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArmPlan) *string {
		if v == nil {
			return nil
		}
		return v.Publisher
	}).(pulumi.StringPtrOutput)
}

// Version of product
func (o ArmPlanPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArmPlan) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// AutoHealActions - Describes the actions which can be
//             taken by the auto-heal module when a rule is triggered.
type AutoHealActions struct {
	// ActionType - predefined action to be taken
	ActionType string `pulumi:"actionType"`
	// CustomAction - custom action to be taken
	CustomAction *AutoHealCustomAction `pulumi:"customAction"`
	// MinProcessExecutionTime - minimum time the process must execute
	//             before taking the action
	MinProcessExecutionTime *string `pulumi:"minProcessExecutionTime"`
}

// AutoHealActionsInput is an input type that accepts AutoHealActionsArgs and AutoHealActionsOutput values.
// You can construct a concrete instance of `AutoHealActionsInput` via:
//
//          AutoHealActionsArgs{...}
type AutoHealActionsInput interface {
	pulumi.Input

	ToAutoHealActionsOutput() AutoHealActionsOutput
	ToAutoHealActionsOutputWithContext(context.Context) AutoHealActionsOutput
}

// AutoHealActions - Describes the actions which can be
//             taken by the auto-heal module when a rule is triggered.
type AutoHealActionsArgs struct {
	// ActionType - predefined action to be taken
	ActionType pulumi.StringInput `pulumi:"actionType"`
	// CustomAction - custom action to be taken
	CustomAction AutoHealCustomActionPtrInput `pulumi:"customAction"`
	// MinProcessExecutionTime - minimum time the process must execute
	//             before taking the action
	MinProcessExecutionTime pulumi.StringPtrInput `pulumi:"minProcessExecutionTime"`
}

func (AutoHealActionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealActions)(nil)).Elem()
}

func (i AutoHealActionsArgs) ToAutoHealActionsOutput() AutoHealActionsOutput {
	return i.ToAutoHealActionsOutputWithContext(context.Background())
}

func (i AutoHealActionsArgs) ToAutoHealActionsOutputWithContext(ctx context.Context) AutoHealActionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealActionsOutput)
}

func (i AutoHealActionsArgs) ToAutoHealActionsPtrOutput() AutoHealActionsPtrOutput {
	return i.ToAutoHealActionsPtrOutputWithContext(context.Background())
}

func (i AutoHealActionsArgs) ToAutoHealActionsPtrOutputWithContext(ctx context.Context) AutoHealActionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealActionsOutput).ToAutoHealActionsPtrOutputWithContext(ctx)
}

// AutoHealActionsPtrInput is an input type that accepts AutoHealActionsArgs, AutoHealActionsPtr and AutoHealActionsPtrOutput values.
// You can construct a concrete instance of `AutoHealActionsPtrInput` via:
//
//          AutoHealActionsArgs{...}
//
//  or:
//
//          nil
type AutoHealActionsPtrInput interface {
	pulumi.Input

	ToAutoHealActionsPtrOutput() AutoHealActionsPtrOutput
	ToAutoHealActionsPtrOutputWithContext(context.Context) AutoHealActionsPtrOutput
}

type autoHealActionsPtrType AutoHealActionsArgs

func AutoHealActionsPtr(v *AutoHealActionsArgs) AutoHealActionsPtrInput {
	return (*autoHealActionsPtrType)(v)
}

func (*autoHealActionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealActions)(nil)).Elem()
}

func (i *autoHealActionsPtrType) ToAutoHealActionsPtrOutput() AutoHealActionsPtrOutput {
	return i.ToAutoHealActionsPtrOutputWithContext(context.Background())
}

func (i *autoHealActionsPtrType) ToAutoHealActionsPtrOutputWithContext(ctx context.Context) AutoHealActionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealActionsPtrOutput)
}

// AutoHealActions - Describes the actions which can be
//             taken by the auto-heal module when a rule is triggered.
type AutoHealActionsOutput struct{ *pulumi.OutputState }

func (AutoHealActionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealActions)(nil)).Elem()
}

func (o AutoHealActionsOutput) ToAutoHealActionsOutput() AutoHealActionsOutput {
	return o
}

func (o AutoHealActionsOutput) ToAutoHealActionsOutputWithContext(ctx context.Context) AutoHealActionsOutput {
	return o
}

func (o AutoHealActionsOutput) ToAutoHealActionsPtrOutput() AutoHealActionsPtrOutput {
	return o.ToAutoHealActionsPtrOutputWithContext(context.Background())
}

func (o AutoHealActionsOutput) ToAutoHealActionsPtrOutputWithContext(ctx context.Context) AutoHealActionsPtrOutput {
	return o.ApplyT(func(v AutoHealActions) *AutoHealActions {
		return &v
	}).(AutoHealActionsPtrOutput)
}

// ActionType - predefined action to be taken
func (o AutoHealActionsOutput) ActionType() pulumi.StringOutput {
	return o.ApplyT(func(v AutoHealActions) string { return v.ActionType }).(pulumi.StringOutput)
}

// CustomAction - custom action to be taken
func (o AutoHealActionsOutput) CustomAction() AutoHealCustomActionPtrOutput {
	return o.ApplyT(func(v AutoHealActions) *AutoHealCustomAction { return v.CustomAction }).(AutoHealCustomActionPtrOutput)
}

// MinProcessExecutionTime - minimum time the process must execute
//             before taking the action
func (o AutoHealActionsOutput) MinProcessExecutionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoHealActions) *string { return v.MinProcessExecutionTime }).(pulumi.StringPtrOutput)
}

type AutoHealActionsPtrOutput struct{ *pulumi.OutputState }

func (AutoHealActionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealActions)(nil)).Elem()
}

func (o AutoHealActionsPtrOutput) ToAutoHealActionsPtrOutput() AutoHealActionsPtrOutput {
	return o
}

func (o AutoHealActionsPtrOutput) ToAutoHealActionsPtrOutputWithContext(ctx context.Context) AutoHealActionsPtrOutput {
	return o
}

func (o AutoHealActionsPtrOutput) Elem() AutoHealActionsOutput {
	return o.ApplyT(func(v *AutoHealActions) AutoHealActions { return *v }).(AutoHealActionsOutput)
}

// ActionType - predefined action to be taken
func (o AutoHealActionsPtrOutput) ActionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoHealActions) *string {
		if v == nil {
			return nil
		}
		return &v.ActionType
	}).(pulumi.StringPtrOutput)
}

// CustomAction - custom action to be taken
func (o AutoHealActionsPtrOutput) CustomAction() AutoHealCustomActionPtrOutput {
	return o.ApplyT(func(v *AutoHealActions) *AutoHealCustomAction {
		if v == nil {
			return nil
		}
		return v.CustomAction
	}).(AutoHealCustomActionPtrOutput)
}

// MinProcessExecutionTime - minimum time the process must execute
//             before taking the action
func (o AutoHealActionsPtrOutput) MinProcessExecutionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoHealActions) *string {
		if v == nil {
			return nil
		}
		return v.MinProcessExecutionTime
	}).(pulumi.StringPtrOutput)
}

// AutoHealActions - Describes the actions which can be
//             taken by the auto-heal module when a rule is triggered.
type AutoHealActionsResponse struct {
	// ActionType - predefined action to be taken
	ActionType string `pulumi:"actionType"`
	// CustomAction - custom action to be taken
	CustomAction *AutoHealCustomActionResponse `pulumi:"customAction"`
	// MinProcessExecutionTime - minimum time the process must execute
	//             before taking the action
	MinProcessExecutionTime *string `pulumi:"minProcessExecutionTime"`
}

// AutoHealActionsResponseInput is an input type that accepts AutoHealActionsResponseArgs and AutoHealActionsResponseOutput values.
// You can construct a concrete instance of `AutoHealActionsResponseInput` via:
//
//          AutoHealActionsResponseArgs{...}
type AutoHealActionsResponseInput interface {
	pulumi.Input

	ToAutoHealActionsResponseOutput() AutoHealActionsResponseOutput
	ToAutoHealActionsResponseOutputWithContext(context.Context) AutoHealActionsResponseOutput
}

// AutoHealActions - Describes the actions which can be
//             taken by the auto-heal module when a rule is triggered.
type AutoHealActionsResponseArgs struct {
	// ActionType - predefined action to be taken
	ActionType pulumi.StringInput `pulumi:"actionType"`
	// CustomAction - custom action to be taken
	CustomAction AutoHealCustomActionResponsePtrInput `pulumi:"customAction"`
	// MinProcessExecutionTime - minimum time the process must execute
	//             before taking the action
	MinProcessExecutionTime pulumi.StringPtrInput `pulumi:"minProcessExecutionTime"`
}

func (AutoHealActionsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealActionsResponse)(nil)).Elem()
}

func (i AutoHealActionsResponseArgs) ToAutoHealActionsResponseOutput() AutoHealActionsResponseOutput {
	return i.ToAutoHealActionsResponseOutputWithContext(context.Background())
}

func (i AutoHealActionsResponseArgs) ToAutoHealActionsResponseOutputWithContext(ctx context.Context) AutoHealActionsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealActionsResponseOutput)
}

func (i AutoHealActionsResponseArgs) ToAutoHealActionsResponsePtrOutput() AutoHealActionsResponsePtrOutput {
	return i.ToAutoHealActionsResponsePtrOutputWithContext(context.Background())
}

func (i AutoHealActionsResponseArgs) ToAutoHealActionsResponsePtrOutputWithContext(ctx context.Context) AutoHealActionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealActionsResponseOutput).ToAutoHealActionsResponsePtrOutputWithContext(ctx)
}

// AutoHealActionsResponsePtrInput is an input type that accepts AutoHealActionsResponseArgs, AutoHealActionsResponsePtr and AutoHealActionsResponsePtrOutput values.
// You can construct a concrete instance of `AutoHealActionsResponsePtrInput` via:
//
//          AutoHealActionsResponseArgs{...}
//
//  or:
//
//          nil
type AutoHealActionsResponsePtrInput interface {
	pulumi.Input

	ToAutoHealActionsResponsePtrOutput() AutoHealActionsResponsePtrOutput
	ToAutoHealActionsResponsePtrOutputWithContext(context.Context) AutoHealActionsResponsePtrOutput
}

type autoHealActionsResponsePtrType AutoHealActionsResponseArgs

func AutoHealActionsResponsePtr(v *AutoHealActionsResponseArgs) AutoHealActionsResponsePtrInput {
	return (*autoHealActionsResponsePtrType)(v)
}

func (*autoHealActionsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealActionsResponse)(nil)).Elem()
}

func (i *autoHealActionsResponsePtrType) ToAutoHealActionsResponsePtrOutput() AutoHealActionsResponsePtrOutput {
	return i.ToAutoHealActionsResponsePtrOutputWithContext(context.Background())
}

func (i *autoHealActionsResponsePtrType) ToAutoHealActionsResponsePtrOutputWithContext(ctx context.Context) AutoHealActionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealActionsResponsePtrOutput)
}

// AutoHealActions - Describes the actions which can be
//             taken by the auto-heal module when a rule is triggered.
type AutoHealActionsResponseOutput struct{ *pulumi.OutputState }

func (AutoHealActionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealActionsResponse)(nil)).Elem()
}

func (o AutoHealActionsResponseOutput) ToAutoHealActionsResponseOutput() AutoHealActionsResponseOutput {
	return o
}

func (o AutoHealActionsResponseOutput) ToAutoHealActionsResponseOutputWithContext(ctx context.Context) AutoHealActionsResponseOutput {
	return o
}

func (o AutoHealActionsResponseOutput) ToAutoHealActionsResponsePtrOutput() AutoHealActionsResponsePtrOutput {
	return o.ToAutoHealActionsResponsePtrOutputWithContext(context.Background())
}

func (o AutoHealActionsResponseOutput) ToAutoHealActionsResponsePtrOutputWithContext(ctx context.Context) AutoHealActionsResponsePtrOutput {
	return o.ApplyT(func(v AutoHealActionsResponse) *AutoHealActionsResponse {
		return &v
	}).(AutoHealActionsResponsePtrOutput)
}

// ActionType - predefined action to be taken
func (o AutoHealActionsResponseOutput) ActionType() pulumi.StringOutput {
	return o.ApplyT(func(v AutoHealActionsResponse) string { return v.ActionType }).(pulumi.StringOutput)
}

// CustomAction - custom action to be taken
func (o AutoHealActionsResponseOutput) CustomAction() AutoHealCustomActionResponsePtrOutput {
	return o.ApplyT(func(v AutoHealActionsResponse) *AutoHealCustomActionResponse { return v.CustomAction }).(AutoHealCustomActionResponsePtrOutput)
}

// MinProcessExecutionTime - minimum time the process must execute
//             before taking the action
func (o AutoHealActionsResponseOutput) MinProcessExecutionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoHealActionsResponse) *string { return v.MinProcessExecutionTime }).(pulumi.StringPtrOutput)
}

type AutoHealActionsResponsePtrOutput struct{ *pulumi.OutputState }

func (AutoHealActionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealActionsResponse)(nil)).Elem()
}

func (o AutoHealActionsResponsePtrOutput) ToAutoHealActionsResponsePtrOutput() AutoHealActionsResponsePtrOutput {
	return o
}

func (o AutoHealActionsResponsePtrOutput) ToAutoHealActionsResponsePtrOutputWithContext(ctx context.Context) AutoHealActionsResponsePtrOutput {
	return o
}

func (o AutoHealActionsResponsePtrOutput) Elem() AutoHealActionsResponseOutput {
	return o.ApplyT(func(v *AutoHealActionsResponse) AutoHealActionsResponse { return *v }).(AutoHealActionsResponseOutput)
}

// ActionType - predefined action to be taken
func (o AutoHealActionsResponsePtrOutput) ActionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoHealActionsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ActionType
	}).(pulumi.StringPtrOutput)
}

// CustomAction - custom action to be taken
func (o AutoHealActionsResponsePtrOutput) CustomAction() AutoHealCustomActionResponsePtrOutput {
	return o.ApplyT(func(v *AutoHealActionsResponse) *AutoHealCustomActionResponse {
		if v == nil {
			return nil
		}
		return v.CustomAction
	}).(AutoHealCustomActionResponsePtrOutput)
}

// MinProcessExecutionTime - minimum time the process must execute
//             before taking the action
func (o AutoHealActionsResponsePtrOutput) MinProcessExecutionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoHealActionsResponse) *string {
		if v == nil {
			return nil
		}
		return v.MinProcessExecutionTime
	}).(pulumi.StringPtrOutput)
}

// AutoHealCustomAction - Describes the custom action to be executed
//             when an auto heal rule is triggered.
type AutoHealCustomAction struct {
	// Executable to be run
	Exe *string `pulumi:"exe"`
	// Parameters for the executable
	Parameters *string `pulumi:"parameters"`
}

// AutoHealCustomActionInput is an input type that accepts AutoHealCustomActionArgs and AutoHealCustomActionOutput values.
// You can construct a concrete instance of `AutoHealCustomActionInput` via:
//
//          AutoHealCustomActionArgs{...}
type AutoHealCustomActionInput interface {
	pulumi.Input

	ToAutoHealCustomActionOutput() AutoHealCustomActionOutput
	ToAutoHealCustomActionOutputWithContext(context.Context) AutoHealCustomActionOutput
}

// AutoHealCustomAction - Describes the custom action to be executed
//             when an auto heal rule is triggered.
type AutoHealCustomActionArgs struct {
	// Executable to be run
	Exe pulumi.StringPtrInput `pulumi:"exe"`
	// Parameters for the executable
	Parameters pulumi.StringPtrInput `pulumi:"parameters"`
}

func (AutoHealCustomActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealCustomAction)(nil)).Elem()
}

func (i AutoHealCustomActionArgs) ToAutoHealCustomActionOutput() AutoHealCustomActionOutput {
	return i.ToAutoHealCustomActionOutputWithContext(context.Background())
}

func (i AutoHealCustomActionArgs) ToAutoHealCustomActionOutputWithContext(ctx context.Context) AutoHealCustomActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealCustomActionOutput)
}

func (i AutoHealCustomActionArgs) ToAutoHealCustomActionPtrOutput() AutoHealCustomActionPtrOutput {
	return i.ToAutoHealCustomActionPtrOutputWithContext(context.Background())
}

func (i AutoHealCustomActionArgs) ToAutoHealCustomActionPtrOutputWithContext(ctx context.Context) AutoHealCustomActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealCustomActionOutput).ToAutoHealCustomActionPtrOutputWithContext(ctx)
}

// AutoHealCustomActionPtrInput is an input type that accepts AutoHealCustomActionArgs, AutoHealCustomActionPtr and AutoHealCustomActionPtrOutput values.
// You can construct a concrete instance of `AutoHealCustomActionPtrInput` via:
//
//          AutoHealCustomActionArgs{...}
//
//  or:
//
//          nil
type AutoHealCustomActionPtrInput interface {
	pulumi.Input

	ToAutoHealCustomActionPtrOutput() AutoHealCustomActionPtrOutput
	ToAutoHealCustomActionPtrOutputWithContext(context.Context) AutoHealCustomActionPtrOutput
}

type autoHealCustomActionPtrType AutoHealCustomActionArgs

func AutoHealCustomActionPtr(v *AutoHealCustomActionArgs) AutoHealCustomActionPtrInput {
	return (*autoHealCustomActionPtrType)(v)
}

func (*autoHealCustomActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealCustomAction)(nil)).Elem()
}

func (i *autoHealCustomActionPtrType) ToAutoHealCustomActionPtrOutput() AutoHealCustomActionPtrOutput {
	return i.ToAutoHealCustomActionPtrOutputWithContext(context.Background())
}

func (i *autoHealCustomActionPtrType) ToAutoHealCustomActionPtrOutputWithContext(ctx context.Context) AutoHealCustomActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealCustomActionPtrOutput)
}

// AutoHealCustomAction - Describes the custom action to be executed
//             when an auto heal rule is triggered.
type AutoHealCustomActionOutput struct{ *pulumi.OutputState }

func (AutoHealCustomActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealCustomAction)(nil)).Elem()
}

func (o AutoHealCustomActionOutput) ToAutoHealCustomActionOutput() AutoHealCustomActionOutput {
	return o
}

func (o AutoHealCustomActionOutput) ToAutoHealCustomActionOutputWithContext(ctx context.Context) AutoHealCustomActionOutput {
	return o
}

func (o AutoHealCustomActionOutput) ToAutoHealCustomActionPtrOutput() AutoHealCustomActionPtrOutput {
	return o.ToAutoHealCustomActionPtrOutputWithContext(context.Background())
}

func (o AutoHealCustomActionOutput) ToAutoHealCustomActionPtrOutputWithContext(ctx context.Context) AutoHealCustomActionPtrOutput {
	return o.ApplyT(func(v AutoHealCustomAction) *AutoHealCustomAction {
		return &v
	}).(AutoHealCustomActionPtrOutput)
}

// Executable to be run
func (o AutoHealCustomActionOutput) Exe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoHealCustomAction) *string { return v.Exe }).(pulumi.StringPtrOutput)
}

// Parameters for the executable
func (o AutoHealCustomActionOutput) Parameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoHealCustomAction) *string { return v.Parameters }).(pulumi.StringPtrOutput)
}

type AutoHealCustomActionPtrOutput struct{ *pulumi.OutputState }

func (AutoHealCustomActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealCustomAction)(nil)).Elem()
}

func (o AutoHealCustomActionPtrOutput) ToAutoHealCustomActionPtrOutput() AutoHealCustomActionPtrOutput {
	return o
}

func (o AutoHealCustomActionPtrOutput) ToAutoHealCustomActionPtrOutputWithContext(ctx context.Context) AutoHealCustomActionPtrOutput {
	return o
}

func (o AutoHealCustomActionPtrOutput) Elem() AutoHealCustomActionOutput {
	return o.ApplyT(func(v *AutoHealCustomAction) AutoHealCustomAction { return *v }).(AutoHealCustomActionOutput)
}

// Executable to be run
func (o AutoHealCustomActionPtrOutput) Exe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoHealCustomAction) *string {
		if v == nil {
			return nil
		}
		return v.Exe
	}).(pulumi.StringPtrOutput)
}

// Parameters for the executable
func (o AutoHealCustomActionPtrOutput) Parameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoHealCustomAction) *string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringPtrOutput)
}

// AutoHealCustomAction - Describes the custom action to be executed
//             when an auto heal rule is triggered.
type AutoHealCustomActionResponse struct {
	// Executable to be run
	Exe *string `pulumi:"exe"`
	// Parameters for the executable
	Parameters *string `pulumi:"parameters"`
}

// AutoHealCustomActionResponseInput is an input type that accepts AutoHealCustomActionResponseArgs and AutoHealCustomActionResponseOutput values.
// You can construct a concrete instance of `AutoHealCustomActionResponseInput` via:
//
//          AutoHealCustomActionResponseArgs{...}
type AutoHealCustomActionResponseInput interface {
	pulumi.Input

	ToAutoHealCustomActionResponseOutput() AutoHealCustomActionResponseOutput
	ToAutoHealCustomActionResponseOutputWithContext(context.Context) AutoHealCustomActionResponseOutput
}

// AutoHealCustomAction - Describes the custom action to be executed
//             when an auto heal rule is triggered.
type AutoHealCustomActionResponseArgs struct {
	// Executable to be run
	Exe pulumi.StringPtrInput `pulumi:"exe"`
	// Parameters for the executable
	Parameters pulumi.StringPtrInput `pulumi:"parameters"`
}

func (AutoHealCustomActionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealCustomActionResponse)(nil)).Elem()
}

func (i AutoHealCustomActionResponseArgs) ToAutoHealCustomActionResponseOutput() AutoHealCustomActionResponseOutput {
	return i.ToAutoHealCustomActionResponseOutputWithContext(context.Background())
}

func (i AutoHealCustomActionResponseArgs) ToAutoHealCustomActionResponseOutputWithContext(ctx context.Context) AutoHealCustomActionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealCustomActionResponseOutput)
}

func (i AutoHealCustomActionResponseArgs) ToAutoHealCustomActionResponsePtrOutput() AutoHealCustomActionResponsePtrOutput {
	return i.ToAutoHealCustomActionResponsePtrOutputWithContext(context.Background())
}

func (i AutoHealCustomActionResponseArgs) ToAutoHealCustomActionResponsePtrOutputWithContext(ctx context.Context) AutoHealCustomActionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealCustomActionResponseOutput).ToAutoHealCustomActionResponsePtrOutputWithContext(ctx)
}

// AutoHealCustomActionResponsePtrInput is an input type that accepts AutoHealCustomActionResponseArgs, AutoHealCustomActionResponsePtr and AutoHealCustomActionResponsePtrOutput values.
// You can construct a concrete instance of `AutoHealCustomActionResponsePtrInput` via:
//
//          AutoHealCustomActionResponseArgs{...}
//
//  or:
//
//          nil
type AutoHealCustomActionResponsePtrInput interface {
	pulumi.Input

	ToAutoHealCustomActionResponsePtrOutput() AutoHealCustomActionResponsePtrOutput
	ToAutoHealCustomActionResponsePtrOutputWithContext(context.Context) AutoHealCustomActionResponsePtrOutput
}

type autoHealCustomActionResponsePtrType AutoHealCustomActionResponseArgs

func AutoHealCustomActionResponsePtr(v *AutoHealCustomActionResponseArgs) AutoHealCustomActionResponsePtrInput {
	return (*autoHealCustomActionResponsePtrType)(v)
}

func (*autoHealCustomActionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealCustomActionResponse)(nil)).Elem()
}

func (i *autoHealCustomActionResponsePtrType) ToAutoHealCustomActionResponsePtrOutput() AutoHealCustomActionResponsePtrOutput {
	return i.ToAutoHealCustomActionResponsePtrOutputWithContext(context.Background())
}

func (i *autoHealCustomActionResponsePtrType) ToAutoHealCustomActionResponsePtrOutputWithContext(ctx context.Context) AutoHealCustomActionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealCustomActionResponsePtrOutput)
}

// AutoHealCustomAction - Describes the custom action to be executed
//             when an auto heal rule is triggered.
type AutoHealCustomActionResponseOutput struct{ *pulumi.OutputState }

func (AutoHealCustomActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealCustomActionResponse)(nil)).Elem()
}

func (o AutoHealCustomActionResponseOutput) ToAutoHealCustomActionResponseOutput() AutoHealCustomActionResponseOutput {
	return o
}

func (o AutoHealCustomActionResponseOutput) ToAutoHealCustomActionResponseOutputWithContext(ctx context.Context) AutoHealCustomActionResponseOutput {
	return o
}

func (o AutoHealCustomActionResponseOutput) ToAutoHealCustomActionResponsePtrOutput() AutoHealCustomActionResponsePtrOutput {
	return o.ToAutoHealCustomActionResponsePtrOutputWithContext(context.Background())
}

func (o AutoHealCustomActionResponseOutput) ToAutoHealCustomActionResponsePtrOutputWithContext(ctx context.Context) AutoHealCustomActionResponsePtrOutput {
	return o.ApplyT(func(v AutoHealCustomActionResponse) *AutoHealCustomActionResponse {
		return &v
	}).(AutoHealCustomActionResponsePtrOutput)
}

// Executable to be run
func (o AutoHealCustomActionResponseOutput) Exe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoHealCustomActionResponse) *string { return v.Exe }).(pulumi.StringPtrOutput)
}

// Parameters for the executable
func (o AutoHealCustomActionResponseOutput) Parameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoHealCustomActionResponse) *string { return v.Parameters }).(pulumi.StringPtrOutput)
}

type AutoHealCustomActionResponsePtrOutput struct{ *pulumi.OutputState }

func (AutoHealCustomActionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealCustomActionResponse)(nil)).Elem()
}

func (o AutoHealCustomActionResponsePtrOutput) ToAutoHealCustomActionResponsePtrOutput() AutoHealCustomActionResponsePtrOutput {
	return o
}

func (o AutoHealCustomActionResponsePtrOutput) ToAutoHealCustomActionResponsePtrOutputWithContext(ctx context.Context) AutoHealCustomActionResponsePtrOutput {
	return o
}

func (o AutoHealCustomActionResponsePtrOutput) Elem() AutoHealCustomActionResponseOutput {
	return o.ApplyT(func(v *AutoHealCustomActionResponse) AutoHealCustomActionResponse { return *v }).(AutoHealCustomActionResponseOutput)
}

// Executable to be run
func (o AutoHealCustomActionResponsePtrOutput) Exe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoHealCustomActionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Exe
	}).(pulumi.StringPtrOutput)
}

// Parameters for the executable
func (o AutoHealCustomActionResponsePtrOutput) Parameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoHealCustomActionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringPtrOutput)
}

// AutoHealRules - describes the rules which can be defined for auto-heal
type AutoHealRules struct {
	// Actions - Actions to be executed when a rule is triggered
	Actions *AutoHealActions `pulumi:"actions"`
	// Triggers - Conditions that describe when to execute the auto-heal actions
	Triggers *AutoHealTriggers `pulumi:"triggers"`
}

// AutoHealRulesInput is an input type that accepts AutoHealRulesArgs and AutoHealRulesOutput values.
// You can construct a concrete instance of `AutoHealRulesInput` via:
//
//          AutoHealRulesArgs{...}
type AutoHealRulesInput interface {
	pulumi.Input

	ToAutoHealRulesOutput() AutoHealRulesOutput
	ToAutoHealRulesOutputWithContext(context.Context) AutoHealRulesOutput
}

// AutoHealRules - describes the rules which can be defined for auto-heal
type AutoHealRulesArgs struct {
	// Actions - Actions to be executed when a rule is triggered
	Actions AutoHealActionsPtrInput `pulumi:"actions"`
	// Triggers - Conditions that describe when to execute the auto-heal actions
	Triggers AutoHealTriggersPtrInput `pulumi:"triggers"`
}

func (AutoHealRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealRules)(nil)).Elem()
}

func (i AutoHealRulesArgs) ToAutoHealRulesOutput() AutoHealRulesOutput {
	return i.ToAutoHealRulesOutputWithContext(context.Background())
}

func (i AutoHealRulesArgs) ToAutoHealRulesOutputWithContext(ctx context.Context) AutoHealRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealRulesOutput)
}

func (i AutoHealRulesArgs) ToAutoHealRulesPtrOutput() AutoHealRulesPtrOutput {
	return i.ToAutoHealRulesPtrOutputWithContext(context.Background())
}

func (i AutoHealRulesArgs) ToAutoHealRulesPtrOutputWithContext(ctx context.Context) AutoHealRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealRulesOutput).ToAutoHealRulesPtrOutputWithContext(ctx)
}

// AutoHealRulesPtrInput is an input type that accepts AutoHealRulesArgs, AutoHealRulesPtr and AutoHealRulesPtrOutput values.
// You can construct a concrete instance of `AutoHealRulesPtrInput` via:
//
//          AutoHealRulesArgs{...}
//
//  or:
//
//          nil
type AutoHealRulesPtrInput interface {
	pulumi.Input

	ToAutoHealRulesPtrOutput() AutoHealRulesPtrOutput
	ToAutoHealRulesPtrOutputWithContext(context.Context) AutoHealRulesPtrOutput
}

type autoHealRulesPtrType AutoHealRulesArgs

func AutoHealRulesPtr(v *AutoHealRulesArgs) AutoHealRulesPtrInput {
	return (*autoHealRulesPtrType)(v)
}

func (*autoHealRulesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealRules)(nil)).Elem()
}

func (i *autoHealRulesPtrType) ToAutoHealRulesPtrOutput() AutoHealRulesPtrOutput {
	return i.ToAutoHealRulesPtrOutputWithContext(context.Background())
}

func (i *autoHealRulesPtrType) ToAutoHealRulesPtrOutputWithContext(ctx context.Context) AutoHealRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealRulesPtrOutput)
}

// AutoHealRules - describes the rules which can be defined for auto-heal
type AutoHealRulesOutput struct{ *pulumi.OutputState }

func (AutoHealRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealRules)(nil)).Elem()
}

func (o AutoHealRulesOutput) ToAutoHealRulesOutput() AutoHealRulesOutput {
	return o
}

func (o AutoHealRulesOutput) ToAutoHealRulesOutputWithContext(ctx context.Context) AutoHealRulesOutput {
	return o
}

func (o AutoHealRulesOutput) ToAutoHealRulesPtrOutput() AutoHealRulesPtrOutput {
	return o.ToAutoHealRulesPtrOutputWithContext(context.Background())
}

func (o AutoHealRulesOutput) ToAutoHealRulesPtrOutputWithContext(ctx context.Context) AutoHealRulesPtrOutput {
	return o.ApplyT(func(v AutoHealRules) *AutoHealRules {
		return &v
	}).(AutoHealRulesPtrOutput)
}

// Actions - Actions to be executed when a rule is triggered
func (o AutoHealRulesOutput) Actions() AutoHealActionsPtrOutput {
	return o.ApplyT(func(v AutoHealRules) *AutoHealActions { return v.Actions }).(AutoHealActionsPtrOutput)
}

// Triggers - Conditions that describe when to execute the auto-heal actions
func (o AutoHealRulesOutput) Triggers() AutoHealTriggersPtrOutput {
	return o.ApplyT(func(v AutoHealRules) *AutoHealTriggers { return v.Triggers }).(AutoHealTriggersPtrOutput)
}

type AutoHealRulesPtrOutput struct{ *pulumi.OutputState }

func (AutoHealRulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealRules)(nil)).Elem()
}

func (o AutoHealRulesPtrOutput) ToAutoHealRulesPtrOutput() AutoHealRulesPtrOutput {
	return o
}

func (o AutoHealRulesPtrOutput) ToAutoHealRulesPtrOutputWithContext(ctx context.Context) AutoHealRulesPtrOutput {
	return o
}

func (o AutoHealRulesPtrOutput) Elem() AutoHealRulesOutput {
	return o.ApplyT(func(v *AutoHealRules) AutoHealRules { return *v }).(AutoHealRulesOutput)
}

// Actions - Actions to be executed when a rule is triggered
func (o AutoHealRulesPtrOutput) Actions() AutoHealActionsPtrOutput {
	return o.ApplyT(func(v *AutoHealRules) *AutoHealActions {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(AutoHealActionsPtrOutput)
}

// Triggers - Conditions that describe when to execute the auto-heal actions
func (o AutoHealRulesPtrOutput) Triggers() AutoHealTriggersPtrOutput {
	return o.ApplyT(func(v *AutoHealRules) *AutoHealTriggers {
		if v == nil {
			return nil
		}
		return v.Triggers
	}).(AutoHealTriggersPtrOutput)
}

// AutoHealRules - describes the rules which can be defined for auto-heal
type AutoHealRulesResponse struct {
	// Actions - Actions to be executed when a rule is triggered
	Actions *AutoHealActionsResponse `pulumi:"actions"`
	// Triggers - Conditions that describe when to execute the auto-heal actions
	Triggers *AutoHealTriggersResponse `pulumi:"triggers"`
}

// AutoHealRulesResponseInput is an input type that accepts AutoHealRulesResponseArgs and AutoHealRulesResponseOutput values.
// You can construct a concrete instance of `AutoHealRulesResponseInput` via:
//
//          AutoHealRulesResponseArgs{...}
type AutoHealRulesResponseInput interface {
	pulumi.Input

	ToAutoHealRulesResponseOutput() AutoHealRulesResponseOutput
	ToAutoHealRulesResponseOutputWithContext(context.Context) AutoHealRulesResponseOutput
}

// AutoHealRules - describes the rules which can be defined for auto-heal
type AutoHealRulesResponseArgs struct {
	// Actions - Actions to be executed when a rule is triggered
	Actions AutoHealActionsResponsePtrInput `pulumi:"actions"`
	// Triggers - Conditions that describe when to execute the auto-heal actions
	Triggers AutoHealTriggersResponsePtrInput `pulumi:"triggers"`
}

func (AutoHealRulesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealRulesResponse)(nil)).Elem()
}

func (i AutoHealRulesResponseArgs) ToAutoHealRulesResponseOutput() AutoHealRulesResponseOutput {
	return i.ToAutoHealRulesResponseOutputWithContext(context.Background())
}

func (i AutoHealRulesResponseArgs) ToAutoHealRulesResponseOutputWithContext(ctx context.Context) AutoHealRulesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealRulesResponseOutput)
}

func (i AutoHealRulesResponseArgs) ToAutoHealRulesResponsePtrOutput() AutoHealRulesResponsePtrOutput {
	return i.ToAutoHealRulesResponsePtrOutputWithContext(context.Background())
}

func (i AutoHealRulesResponseArgs) ToAutoHealRulesResponsePtrOutputWithContext(ctx context.Context) AutoHealRulesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealRulesResponseOutput).ToAutoHealRulesResponsePtrOutputWithContext(ctx)
}

// AutoHealRulesResponsePtrInput is an input type that accepts AutoHealRulesResponseArgs, AutoHealRulesResponsePtr and AutoHealRulesResponsePtrOutput values.
// You can construct a concrete instance of `AutoHealRulesResponsePtrInput` via:
//
//          AutoHealRulesResponseArgs{...}
//
//  or:
//
//          nil
type AutoHealRulesResponsePtrInput interface {
	pulumi.Input

	ToAutoHealRulesResponsePtrOutput() AutoHealRulesResponsePtrOutput
	ToAutoHealRulesResponsePtrOutputWithContext(context.Context) AutoHealRulesResponsePtrOutput
}

type autoHealRulesResponsePtrType AutoHealRulesResponseArgs

func AutoHealRulesResponsePtr(v *AutoHealRulesResponseArgs) AutoHealRulesResponsePtrInput {
	return (*autoHealRulesResponsePtrType)(v)
}

func (*autoHealRulesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealRulesResponse)(nil)).Elem()
}

func (i *autoHealRulesResponsePtrType) ToAutoHealRulesResponsePtrOutput() AutoHealRulesResponsePtrOutput {
	return i.ToAutoHealRulesResponsePtrOutputWithContext(context.Background())
}

func (i *autoHealRulesResponsePtrType) ToAutoHealRulesResponsePtrOutputWithContext(ctx context.Context) AutoHealRulesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealRulesResponsePtrOutput)
}

// AutoHealRules - describes the rules which can be defined for auto-heal
type AutoHealRulesResponseOutput struct{ *pulumi.OutputState }

func (AutoHealRulesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealRulesResponse)(nil)).Elem()
}

func (o AutoHealRulesResponseOutput) ToAutoHealRulesResponseOutput() AutoHealRulesResponseOutput {
	return o
}

func (o AutoHealRulesResponseOutput) ToAutoHealRulesResponseOutputWithContext(ctx context.Context) AutoHealRulesResponseOutput {
	return o
}

func (o AutoHealRulesResponseOutput) ToAutoHealRulesResponsePtrOutput() AutoHealRulesResponsePtrOutput {
	return o.ToAutoHealRulesResponsePtrOutputWithContext(context.Background())
}

func (o AutoHealRulesResponseOutput) ToAutoHealRulesResponsePtrOutputWithContext(ctx context.Context) AutoHealRulesResponsePtrOutput {
	return o.ApplyT(func(v AutoHealRulesResponse) *AutoHealRulesResponse {
		return &v
	}).(AutoHealRulesResponsePtrOutput)
}

// Actions - Actions to be executed when a rule is triggered
func (o AutoHealRulesResponseOutput) Actions() AutoHealActionsResponsePtrOutput {
	return o.ApplyT(func(v AutoHealRulesResponse) *AutoHealActionsResponse { return v.Actions }).(AutoHealActionsResponsePtrOutput)
}

// Triggers - Conditions that describe when to execute the auto-heal actions
func (o AutoHealRulesResponseOutput) Triggers() AutoHealTriggersResponsePtrOutput {
	return o.ApplyT(func(v AutoHealRulesResponse) *AutoHealTriggersResponse { return v.Triggers }).(AutoHealTriggersResponsePtrOutput)
}

type AutoHealRulesResponsePtrOutput struct{ *pulumi.OutputState }

func (AutoHealRulesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealRulesResponse)(nil)).Elem()
}

func (o AutoHealRulesResponsePtrOutput) ToAutoHealRulesResponsePtrOutput() AutoHealRulesResponsePtrOutput {
	return o
}

func (o AutoHealRulesResponsePtrOutput) ToAutoHealRulesResponsePtrOutputWithContext(ctx context.Context) AutoHealRulesResponsePtrOutput {
	return o
}

func (o AutoHealRulesResponsePtrOutput) Elem() AutoHealRulesResponseOutput {
	return o.ApplyT(func(v *AutoHealRulesResponse) AutoHealRulesResponse { return *v }).(AutoHealRulesResponseOutput)
}

// Actions - Actions to be executed when a rule is triggered
func (o AutoHealRulesResponsePtrOutput) Actions() AutoHealActionsResponsePtrOutput {
	return o.ApplyT(func(v *AutoHealRulesResponse) *AutoHealActionsResponse {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(AutoHealActionsResponsePtrOutput)
}

// Triggers - Conditions that describe when to execute the auto-heal actions
func (o AutoHealRulesResponsePtrOutput) Triggers() AutoHealTriggersResponsePtrOutput {
	return o.ApplyT(func(v *AutoHealRulesResponse) *AutoHealTriggersResponse {
		if v == nil {
			return nil
		}
		return v.Triggers
	}).(AutoHealTriggersResponsePtrOutput)
}

// AutoHealTriggers - describes the triggers for auto-heal.
type AutoHealTriggers struct {
	// PrivateBytesInKB - Defines a rule based on private bytes
	PrivateBytesInKB *int `pulumi:"privateBytesInKB"`
	// Requests - Defines a rule based on total requests
	Requests *RequestsBasedTrigger `pulumi:"requests"`
	// SlowRequests - Defines a rule based on request execution time
	SlowRequests *SlowRequestsBasedTrigger `pulumi:"slowRequests"`
	// StatusCodes - Defines a rule based on status codes
	StatusCodes []StatusCodesBasedTrigger `pulumi:"statusCodes"`
}

// AutoHealTriggersInput is an input type that accepts AutoHealTriggersArgs and AutoHealTriggersOutput values.
// You can construct a concrete instance of `AutoHealTriggersInput` via:
//
//          AutoHealTriggersArgs{...}
type AutoHealTriggersInput interface {
	pulumi.Input

	ToAutoHealTriggersOutput() AutoHealTriggersOutput
	ToAutoHealTriggersOutputWithContext(context.Context) AutoHealTriggersOutput
}

// AutoHealTriggers - describes the triggers for auto-heal.
type AutoHealTriggersArgs struct {
	// PrivateBytesInKB - Defines a rule based on private bytes
	PrivateBytesInKB pulumi.IntPtrInput `pulumi:"privateBytesInKB"`
	// Requests - Defines a rule based on total requests
	Requests RequestsBasedTriggerPtrInput `pulumi:"requests"`
	// SlowRequests - Defines a rule based on request execution time
	SlowRequests SlowRequestsBasedTriggerPtrInput `pulumi:"slowRequests"`
	// StatusCodes - Defines a rule based on status codes
	StatusCodes StatusCodesBasedTriggerArrayInput `pulumi:"statusCodes"`
}

func (AutoHealTriggersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealTriggers)(nil)).Elem()
}

func (i AutoHealTriggersArgs) ToAutoHealTriggersOutput() AutoHealTriggersOutput {
	return i.ToAutoHealTriggersOutputWithContext(context.Background())
}

func (i AutoHealTriggersArgs) ToAutoHealTriggersOutputWithContext(ctx context.Context) AutoHealTriggersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealTriggersOutput)
}

func (i AutoHealTriggersArgs) ToAutoHealTriggersPtrOutput() AutoHealTriggersPtrOutput {
	return i.ToAutoHealTriggersPtrOutputWithContext(context.Background())
}

func (i AutoHealTriggersArgs) ToAutoHealTriggersPtrOutputWithContext(ctx context.Context) AutoHealTriggersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealTriggersOutput).ToAutoHealTriggersPtrOutputWithContext(ctx)
}

// AutoHealTriggersPtrInput is an input type that accepts AutoHealTriggersArgs, AutoHealTriggersPtr and AutoHealTriggersPtrOutput values.
// You can construct a concrete instance of `AutoHealTriggersPtrInput` via:
//
//          AutoHealTriggersArgs{...}
//
//  or:
//
//          nil
type AutoHealTriggersPtrInput interface {
	pulumi.Input

	ToAutoHealTriggersPtrOutput() AutoHealTriggersPtrOutput
	ToAutoHealTriggersPtrOutputWithContext(context.Context) AutoHealTriggersPtrOutput
}

type autoHealTriggersPtrType AutoHealTriggersArgs

func AutoHealTriggersPtr(v *AutoHealTriggersArgs) AutoHealTriggersPtrInput {
	return (*autoHealTriggersPtrType)(v)
}

func (*autoHealTriggersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealTriggers)(nil)).Elem()
}

func (i *autoHealTriggersPtrType) ToAutoHealTriggersPtrOutput() AutoHealTriggersPtrOutput {
	return i.ToAutoHealTriggersPtrOutputWithContext(context.Background())
}

func (i *autoHealTriggersPtrType) ToAutoHealTriggersPtrOutputWithContext(ctx context.Context) AutoHealTriggersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealTriggersPtrOutput)
}

// AutoHealTriggers - describes the triggers for auto-heal.
type AutoHealTriggersOutput struct{ *pulumi.OutputState }

func (AutoHealTriggersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealTriggers)(nil)).Elem()
}

func (o AutoHealTriggersOutput) ToAutoHealTriggersOutput() AutoHealTriggersOutput {
	return o
}

func (o AutoHealTriggersOutput) ToAutoHealTriggersOutputWithContext(ctx context.Context) AutoHealTriggersOutput {
	return o
}

func (o AutoHealTriggersOutput) ToAutoHealTriggersPtrOutput() AutoHealTriggersPtrOutput {
	return o.ToAutoHealTriggersPtrOutputWithContext(context.Background())
}

func (o AutoHealTriggersOutput) ToAutoHealTriggersPtrOutputWithContext(ctx context.Context) AutoHealTriggersPtrOutput {
	return o.ApplyT(func(v AutoHealTriggers) *AutoHealTriggers {
		return &v
	}).(AutoHealTriggersPtrOutput)
}

// PrivateBytesInKB - Defines a rule based on private bytes
func (o AutoHealTriggersOutput) PrivateBytesInKB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoHealTriggers) *int { return v.PrivateBytesInKB }).(pulumi.IntPtrOutput)
}

// Requests - Defines a rule based on total requests
func (o AutoHealTriggersOutput) Requests() RequestsBasedTriggerPtrOutput {
	return o.ApplyT(func(v AutoHealTriggers) *RequestsBasedTrigger { return v.Requests }).(RequestsBasedTriggerPtrOutput)
}

// SlowRequests - Defines a rule based on request execution time
func (o AutoHealTriggersOutput) SlowRequests() SlowRequestsBasedTriggerPtrOutput {
	return o.ApplyT(func(v AutoHealTriggers) *SlowRequestsBasedTrigger { return v.SlowRequests }).(SlowRequestsBasedTriggerPtrOutput)
}

// StatusCodes - Defines a rule based on status codes
func (o AutoHealTriggersOutput) StatusCodes() StatusCodesBasedTriggerArrayOutput {
	return o.ApplyT(func(v AutoHealTriggers) []StatusCodesBasedTrigger { return v.StatusCodes }).(StatusCodesBasedTriggerArrayOutput)
}

type AutoHealTriggersPtrOutput struct{ *pulumi.OutputState }

func (AutoHealTriggersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealTriggers)(nil)).Elem()
}

func (o AutoHealTriggersPtrOutput) ToAutoHealTriggersPtrOutput() AutoHealTriggersPtrOutput {
	return o
}

func (o AutoHealTriggersPtrOutput) ToAutoHealTriggersPtrOutputWithContext(ctx context.Context) AutoHealTriggersPtrOutput {
	return o
}

func (o AutoHealTriggersPtrOutput) Elem() AutoHealTriggersOutput {
	return o.ApplyT(func(v *AutoHealTriggers) AutoHealTriggers { return *v }).(AutoHealTriggersOutput)
}

// PrivateBytesInKB - Defines a rule based on private bytes
func (o AutoHealTriggersPtrOutput) PrivateBytesInKB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoHealTriggers) *int {
		if v == nil {
			return nil
		}
		return v.PrivateBytesInKB
	}).(pulumi.IntPtrOutput)
}

// Requests - Defines a rule based on total requests
func (o AutoHealTriggersPtrOutput) Requests() RequestsBasedTriggerPtrOutput {
	return o.ApplyT(func(v *AutoHealTriggers) *RequestsBasedTrigger {
		if v == nil {
			return nil
		}
		return v.Requests
	}).(RequestsBasedTriggerPtrOutput)
}

// SlowRequests - Defines a rule based on request execution time
func (o AutoHealTriggersPtrOutput) SlowRequests() SlowRequestsBasedTriggerPtrOutput {
	return o.ApplyT(func(v *AutoHealTriggers) *SlowRequestsBasedTrigger {
		if v == nil {
			return nil
		}
		return v.SlowRequests
	}).(SlowRequestsBasedTriggerPtrOutput)
}

// StatusCodes - Defines a rule based on status codes
func (o AutoHealTriggersPtrOutput) StatusCodes() StatusCodesBasedTriggerArrayOutput {
	return o.ApplyT(func(v *AutoHealTriggers) []StatusCodesBasedTrigger {
		if v == nil {
			return nil
		}
		return v.StatusCodes
	}).(StatusCodesBasedTriggerArrayOutput)
}

// AutoHealTriggers - describes the triggers for auto-heal.
type AutoHealTriggersResponse struct {
	// PrivateBytesInKB - Defines a rule based on private bytes
	PrivateBytesInKB *int `pulumi:"privateBytesInKB"`
	// Requests - Defines a rule based on total requests
	Requests *RequestsBasedTriggerResponse `pulumi:"requests"`
	// SlowRequests - Defines a rule based on request execution time
	SlowRequests *SlowRequestsBasedTriggerResponse `pulumi:"slowRequests"`
	// StatusCodes - Defines a rule based on status codes
	StatusCodes []StatusCodesBasedTriggerResponse `pulumi:"statusCodes"`
}

// AutoHealTriggersResponseInput is an input type that accepts AutoHealTriggersResponseArgs and AutoHealTriggersResponseOutput values.
// You can construct a concrete instance of `AutoHealTriggersResponseInput` via:
//
//          AutoHealTriggersResponseArgs{...}
type AutoHealTriggersResponseInput interface {
	pulumi.Input

	ToAutoHealTriggersResponseOutput() AutoHealTriggersResponseOutput
	ToAutoHealTriggersResponseOutputWithContext(context.Context) AutoHealTriggersResponseOutput
}

// AutoHealTriggers - describes the triggers for auto-heal.
type AutoHealTriggersResponseArgs struct {
	// PrivateBytesInKB - Defines a rule based on private bytes
	PrivateBytesInKB pulumi.IntPtrInput `pulumi:"privateBytesInKB"`
	// Requests - Defines a rule based on total requests
	Requests RequestsBasedTriggerResponsePtrInput `pulumi:"requests"`
	// SlowRequests - Defines a rule based on request execution time
	SlowRequests SlowRequestsBasedTriggerResponsePtrInput `pulumi:"slowRequests"`
	// StatusCodes - Defines a rule based on status codes
	StatusCodes StatusCodesBasedTriggerResponseArrayInput `pulumi:"statusCodes"`
}

func (AutoHealTriggersResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealTriggersResponse)(nil)).Elem()
}

func (i AutoHealTriggersResponseArgs) ToAutoHealTriggersResponseOutput() AutoHealTriggersResponseOutput {
	return i.ToAutoHealTriggersResponseOutputWithContext(context.Background())
}

func (i AutoHealTriggersResponseArgs) ToAutoHealTriggersResponseOutputWithContext(ctx context.Context) AutoHealTriggersResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealTriggersResponseOutput)
}

func (i AutoHealTriggersResponseArgs) ToAutoHealTriggersResponsePtrOutput() AutoHealTriggersResponsePtrOutput {
	return i.ToAutoHealTriggersResponsePtrOutputWithContext(context.Background())
}

func (i AutoHealTriggersResponseArgs) ToAutoHealTriggersResponsePtrOutputWithContext(ctx context.Context) AutoHealTriggersResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealTriggersResponseOutput).ToAutoHealTriggersResponsePtrOutputWithContext(ctx)
}

// AutoHealTriggersResponsePtrInput is an input type that accepts AutoHealTriggersResponseArgs, AutoHealTriggersResponsePtr and AutoHealTriggersResponsePtrOutput values.
// You can construct a concrete instance of `AutoHealTriggersResponsePtrInput` via:
//
//          AutoHealTriggersResponseArgs{...}
//
//  or:
//
//          nil
type AutoHealTriggersResponsePtrInput interface {
	pulumi.Input

	ToAutoHealTriggersResponsePtrOutput() AutoHealTriggersResponsePtrOutput
	ToAutoHealTriggersResponsePtrOutputWithContext(context.Context) AutoHealTriggersResponsePtrOutput
}

type autoHealTriggersResponsePtrType AutoHealTriggersResponseArgs

func AutoHealTriggersResponsePtr(v *AutoHealTriggersResponseArgs) AutoHealTriggersResponsePtrInput {
	return (*autoHealTriggersResponsePtrType)(v)
}

func (*autoHealTriggersResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealTriggersResponse)(nil)).Elem()
}

func (i *autoHealTriggersResponsePtrType) ToAutoHealTriggersResponsePtrOutput() AutoHealTriggersResponsePtrOutput {
	return i.ToAutoHealTriggersResponsePtrOutputWithContext(context.Background())
}

func (i *autoHealTriggersResponsePtrType) ToAutoHealTriggersResponsePtrOutputWithContext(ctx context.Context) AutoHealTriggersResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealTriggersResponsePtrOutput)
}

// AutoHealTriggers - describes the triggers for auto-heal.
type AutoHealTriggersResponseOutput struct{ *pulumi.OutputState }

func (AutoHealTriggersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealTriggersResponse)(nil)).Elem()
}

func (o AutoHealTriggersResponseOutput) ToAutoHealTriggersResponseOutput() AutoHealTriggersResponseOutput {
	return o
}

func (o AutoHealTriggersResponseOutput) ToAutoHealTriggersResponseOutputWithContext(ctx context.Context) AutoHealTriggersResponseOutput {
	return o
}

func (o AutoHealTriggersResponseOutput) ToAutoHealTriggersResponsePtrOutput() AutoHealTriggersResponsePtrOutput {
	return o.ToAutoHealTriggersResponsePtrOutputWithContext(context.Background())
}

func (o AutoHealTriggersResponseOutput) ToAutoHealTriggersResponsePtrOutputWithContext(ctx context.Context) AutoHealTriggersResponsePtrOutput {
	return o.ApplyT(func(v AutoHealTriggersResponse) *AutoHealTriggersResponse {
		return &v
	}).(AutoHealTriggersResponsePtrOutput)
}

// PrivateBytesInKB - Defines a rule based on private bytes
func (o AutoHealTriggersResponseOutput) PrivateBytesInKB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoHealTriggersResponse) *int { return v.PrivateBytesInKB }).(pulumi.IntPtrOutput)
}

// Requests - Defines a rule based on total requests
func (o AutoHealTriggersResponseOutput) Requests() RequestsBasedTriggerResponsePtrOutput {
	return o.ApplyT(func(v AutoHealTriggersResponse) *RequestsBasedTriggerResponse { return v.Requests }).(RequestsBasedTriggerResponsePtrOutput)
}

// SlowRequests - Defines a rule based on request execution time
func (o AutoHealTriggersResponseOutput) SlowRequests() SlowRequestsBasedTriggerResponsePtrOutput {
	return o.ApplyT(func(v AutoHealTriggersResponse) *SlowRequestsBasedTriggerResponse { return v.SlowRequests }).(SlowRequestsBasedTriggerResponsePtrOutput)
}

// StatusCodes - Defines a rule based on status codes
func (o AutoHealTriggersResponseOutput) StatusCodes() StatusCodesBasedTriggerResponseArrayOutput {
	return o.ApplyT(func(v AutoHealTriggersResponse) []StatusCodesBasedTriggerResponse { return v.StatusCodes }).(StatusCodesBasedTriggerResponseArrayOutput)
}

type AutoHealTriggersResponsePtrOutput struct{ *pulumi.OutputState }

func (AutoHealTriggersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealTriggersResponse)(nil)).Elem()
}

func (o AutoHealTriggersResponsePtrOutput) ToAutoHealTriggersResponsePtrOutput() AutoHealTriggersResponsePtrOutput {
	return o
}

func (o AutoHealTriggersResponsePtrOutput) ToAutoHealTriggersResponsePtrOutputWithContext(ctx context.Context) AutoHealTriggersResponsePtrOutput {
	return o
}

func (o AutoHealTriggersResponsePtrOutput) Elem() AutoHealTriggersResponseOutput {
	return o.ApplyT(func(v *AutoHealTriggersResponse) AutoHealTriggersResponse { return *v }).(AutoHealTriggersResponseOutput)
}

// PrivateBytesInKB - Defines a rule based on private bytes
func (o AutoHealTriggersResponsePtrOutput) PrivateBytesInKB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoHealTriggersResponse) *int {
		if v == nil {
			return nil
		}
		return v.PrivateBytesInKB
	}).(pulumi.IntPtrOutput)
}

// Requests - Defines a rule based on total requests
func (o AutoHealTriggersResponsePtrOutput) Requests() RequestsBasedTriggerResponsePtrOutput {
	return o.ApplyT(func(v *AutoHealTriggersResponse) *RequestsBasedTriggerResponse {
		if v == nil {
			return nil
		}
		return v.Requests
	}).(RequestsBasedTriggerResponsePtrOutput)
}

// SlowRequests - Defines a rule based on request execution time
func (o AutoHealTriggersResponsePtrOutput) SlowRequests() SlowRequestsBasedTriggerResponsePtrOutput {
	return o.ApplyT(func(v *AutoHealTriggersResponse) *SlowRequestsBasedTriggerResponse {
		if v == nil {
			return nil
		}
		return v.SlowRequests
	}).(SlowRequestsBasedTriggerResponsePtrOutput)
}

// StatusCodes - Defines a rule based on status codes
func (o AutoHealTriggersResponsePtrOutput) StatusCodes() StatusCodesBasedTriggerResponseArrayOutput {
	return o.ApplyT(func(v *AutoHealTriggersResponse) []StatusCodesBasedTriggerResponse {
		if v == nil {
			return nil
		}
		return v.StatusCodes
	}).(StatusCodesBasedTriggerResponseArrayOutput)
}

type BackupItemResponseProperties struct {
	// Name of the blob which contains data for this backup
	BlobName *string `pulumi:"blobName"`
	// Unique correlation identifier. Please use this along with the timestamp while communicating with Azure support.
	CorrelationId *string `pulumi:"correlationId"`
	// Timestamp of the backup creation
	Created *string `pulumi:"created"`
	// List of databases included in the backup
	Databases []DatabaseBackupSettingResponse `pulumi:"databases"`
	// Timestamp when this backup finished.
	FinishedTimeStamp *string `pulumi:"finishedTimeStamp"`
	// Id of the backup.
	Id *int `pulumi:"id"`
	// Timestamp of a last restore operation which used this backup.
	LastRestoreTimeStamp *string `pulumi:"lastRestoreTimeStamp"`
	// Details regarding this backup. Might contain an error message.
	Log *string `pulumi:"log"`
	// Name of this backup
	Name *string `pulumi:"name"`
	// True if this backup has been created due to a schedule being triggered.
	Scheduled *bool `pulumi:"scheduled"`
	// Size of the backup in bytes
	SizeInBytes *int `pulumi:"sizeInBytes"`
	// Backup status
	Status string `pulumi:"status"`
	// SAS URL for the storage account container which contains this backup
	StorageAccountUrl *string `pulumi:"storageAccountUrl"`
	// Size of the original web app which has been backed up
	WebsiteSizeInBytes *int `pulumi:"websiteSizeInBytes"`
}

// BackupItemResponsePropertiesInput is an input type that accepts BackupItemResponsePropertiesArgs and BackupItemResponsePropertiesOutput values.
// You can construct a concrete instance of `BackupItemResponsePropertiesInput` via:
//
//          BackupItemResponsePropertiesArgs{...}
type BackupItemResponsePropertiesInput interface {
	pulumi.Input

	ToBackupItemResponsePropertiesOutput() BackupItemResponsePropertiesOutput
	ToBackupItemResponsePropertiesOutputWithContext(context.Context) BackupItemResponsePropertiesOutput
}

type BackupItemResponsePropertiesArgs struct {
	// Name of the blob which contains data for this backup
	BlobName pulumi.StringPtrInput `pulumi:"blobName"`
	// Unique correlation identifier. Please use this along with the timestamp while communicating with Azure support.
	CorrelationId pulumi.StringPtrInput `pulumi:"correlationId"`
	// Timestamp of the backup creation
	Created pulumi.StringPtrInput `pulumi:"created"`
	// List of databases included in the backup
	Databases DatabaseBackupSettingResponseArrayInput `pulumi:"databases"`
	// Timestamp when this backup finished.
	FinishedTimeStamp pulumi.StringPtrInput `pulumi:"finishedTimeStamp"`
	// Id of the backup.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Timestamp of a last restore operation which used this backup.
	LastRestoreTimeStamp pulumi.StringPtrInput `pulumi:"lastRestoreTimeStamp"`
	// Details regarding this backup. Might contain an error message.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// Name of this backup
	Name pulumi.StringPtrInput `pulumi:"name"`
	// True if this backup has been created due to a schedule being triggered.
	Scheduled pulumi.BoolPtrInput `pulumi:"scheduled"`
	// Size of the backup in bytes
	SizeInBytes pulumi.IntPtrInput `pulumi:"sizeInBytes"`
	// Backup status
	Status pulumi.StringInput `pulumi:"status"`
	// SAS URL for the storage account container which contains this backup
	StorageAccountUrl pulumi.StringPtrInput `pulumi:"storageAccountUrl"`
	// Size of the original web app which has been backed up
	WebsiteSizeInBytes pulumi.IntPtrInput `pulumi:"websiteSizeInBytes"`
}

func (BackupItemResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupItemResponseProperties)(nil)).Elem()
}

func (i BackupItemResponsePropertiesArgs) ToBackupItemResponsePropertiesOutput() BackupItemResponsePropertiesOutput {
	return i.ToBackupItemResponsePropertiesOutputWithContext(context.Background())
}

func (i BackupItemResponsePropertiesArgs) ToBackupItemResponsePropertiesOutputWithContext(ctx context.Context) BackupItemResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupItemResponsePropertiesOutput)
}

type BackupItemResponsePropertiesOutput struct{ *pulumi.OutputState }

func (BackupItemResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupItemResponseProperties)(nil)).Elem()
}

func (o BackupItemResponsePropertiesOutput) ToBackupItemResponsePropertiesOutput() BackupItemResponsePropertiesOutput {
	return o
}

func (o BackupItemResponsePropertiesOutput) ToBackupItemResponsePropertiesOutputWithContext(ctx context.Context) BackupItemResponsePropertiesOutput {
	return o
}

// Name of the blob which contains data for this backup
func (o BackupItemResponsePropertiesOutput) BlobName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupItemResponseProperties) *string { return v.BlobName }).(pulumi.StringPtrOutput)
}

// Unique correlation identifier. Please use this along with the timestamp while communicating with Azure support.
func (o BackupItemResponsePropertiesOutput) CorrelationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupItemResponseProperties) *string { return v.CorrelationId }).(pulumi.StringPtrOutput)
}

// Timestamp of the backup creation
func (o BackupItemResponsePropertiesOutput) Created() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupItemResponseProperties) *string { return v.Created }).(pulumi.StringPtrOutput)
}

// List of databases included in the backup
func (o BackupItemResponsePropertiesOutput) Databases() DatabaseBackupSettingResponseArrayOutput {
	return o.ApplyT(func(v BackupItemResponseProperties) []DatabaseBackupSettingResponse { return v.Databases }).(DatabaseBackupSettingResponseArrayOutput)
}

// Timestamp when this backup finished.
func (o BackupItemResponsePropertiesOutput) FinishedTimeStamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupItemResponseProperties) *string { return v.FinishedTimeStamp }).(pulumi.StringPtrOutput)
}

// Id of the backup.
func (o BackupItemResponsePropertiesOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackupItemResponseProperties) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Timestamp of a last restore operation which used this backup.
func (o BackupItemResponsePropertiesOutput) LastRestoreTimeStamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupItemResponseProperties) *string { return v.LastRestoreTimeStamp }).(pulumi.StringPtrOutput)
}

// Details regarding this backup. Might contain an error message.
func (o BackupItemResponsePropertiesOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupItemResponseProperties) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// Name of this backup
func (o BackupItemResponsePropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupItemResponseProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// True if this backup has been created due to a schedule being triggered.
func (o BackupItemResponsePropertiesOutput) Scheduled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BackupItemResponseProperties) *bool { return v.Scheduled }).(pulumi.BoolPtrOutput)
}

// Size of the backup in bytes
func (o BackupItemResponsePropertiesOutput) SizeInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackupItemResponseProperties) *int { return v.SizeInBytes }).(pulumi.IntPtrOutput)
}

// Backup status
func (o BackupItemResponsePropertiesOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v BackupItemResponseProperties) string { return v.Status }).(pulumi.StringOutput)
}

// SAS URL for the storage account container which contains this backup
func (o BackupItemResponsePropertiesOutput) StorageAccountUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupItemResponseProperties) *string { return v.StorageAccountUrl }).(pulumi.StringPtrOutput)
}

// Size of the original web app which has been backed up
func (o BackupItemResponsePropertiesOutput) WebsiteSizeInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackupItemResponseProperties) *int { return v.WebsiteSizeInBytes }).(pulumi.IntPtrOutput)
}

type BackupRequestProperties struct {
	// Schedule for the backup if it is executed periodically
	BackupSchedule *BackupSchedule `pulumi:"backupSchedule"`
	// Databases included in the backup
	Databases []DatabaseBackupSetting `pulumi:"databases"`
	// True if the backup schedule is enabled (must be included in that case), false if the backup schedule should be disabled
	Enabled *bool `pulumi:"enabled"`
	// Name of the backup
	Name *string `pulumi:"name"`
	// SAS URL to the container
	StorageAccountUrl *string `pulumi:"storageAccountUrl"`
	// Type of the backup
	Type string `pulumi:"type"`
}

// BackupRequestPropertiesInput is an input type that accepts BackupRequestPropertiesArgs and BackupRequestPropertiesOutput values.
// You can construct a concrete instance of `BackupRequestPropertiesInput` via:
//
//          BackupRequestPropertiesArgs{...}
type BackupRequestPropertiesInput interface {
	pulumi.Input

	ToBackupRequestPropertiesOutput() BackupRequestPropertiesOutput
	ToBackupRequestPropertiesOutputWithContext(context.Context) BackupRequestPropertiesOutput
}

type BackupRequestPropertiesArgs struct {
	// Schedule for the backup if it is executed periodically
	BackupSchedule BackupSchedulePtrInput `pulumi:"backupSchedule"`
	// Databases included in the backup
	Databases DatabaseBackupSettingArrayInput `pulumi:"databases"`
	// True if the backup schedule is enabled (must be included in that case), false if the backup schedule should be disabled
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Name of the backup
	Name pulumi.StringPtrInput `pulumi:"name"`
	// SAS URL to the container
	StorageAccountUrl pulumi.StringPtrInput `pulumi:"storageAccountUrl"`
	// Type of the backup
	Type pulumi.StringInput `pulumi:"type"`
}

func (BackupRequestPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupRequestProperties)(nil)).Elem()
}

func (i BackupRequestPropertiesArgs) ToBackupRequestPropertiesOutput() BackupRequestPropertiesOutput {
	return i.ToBackupRequestPropertiesOutputWithContext(context.Background())
}

func (i BackupRequestPropertiesArgs) ToBackupRequestPropertiesOutputWithContext(ctx context.Context) BackupRequestPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupRequestPropertiesOutput)
}

type BackupRequestPropertiesOutput struct{ *pulumi.OutputState }

func (BackupRequestPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupRequestProperties)(nil)).Elem()
}

func (o BackupRequestPropertiesOutput) ToBackupRequestPropertiesOutput() BackupRequestPropertiesOutput {
	return o
}

func (o BackupRequestPropertiesOutput) ToBackupRequestPropertiesOutputWithContext(ctx context.Context) BackupRequestPropertiesOutput {
	return o
}

// Schedule for the backup if it is executed periodically
func (o BackupRequestPropertiesOutput) BackupSchedule() BackupSchedulePtrOutput {
	return o.ApplyT(func(v BackupRequestProperties) *BackupSchedule { return v.BackupSchedule }).(BackupSchedulePtrOutput)
}

// Databases included in the backup
func (o BackupRequestPropertiesOutput) Databases() DatabaseBackupSettingArrayOutput {
	return o.ApplyT(func(v BackupRequestProperties) []DatabaseBackupSetting { return v.Databases }).(DatabaseBackupSettingArrayOutput)
}

// True if the backup schedule is enabled (must be included in that case), false if the backup schedule should be disabled
func (o BackupRequestPropertiesOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BackupRequestProperties) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Name of the backup
func (o BackupRequestPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupRequestProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// SAS URL to the container
func (o BackupRequestPropertiesOutput) StorageAccountUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupRequestProperties) *string { return v.StorageAccountUrl }).(pulumi.StringPtrOutput)
}

// Type of the backup
func (o BackupRequestPropertiesOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BackupRequestProperties) string { return v.Type }).(pulumi.StringOutput)
}

type BackupRequestResponseProperties struct {
	// Schedule for the backup if it is executed periodically
	BackupSchedule *BackupScheduleResponse `pulumi:"backupSchedule"`
	// Databases included in the backup
	Databases []DatabaseBackupSettingResponse `pulumi:"databases"`
	// True if the backup schedule is enabled (must be included in that case), false if the backup schedule should be disabled
	Enabled *bool `pulumi:"enabled"`
	// Name of the backup
	Name *string `pulumi:"name"`
	// SAS URL to the container
	StorageAccountUrl *string `pulumi:"storageAccountUrl"`
	// Type of the backup
	Type string `pulumi:"type"`
}

// BackupRequestResponsePropertiesInput is an input type that accepts BackupRequestResponsePropertiesArgs and BackupRequestResponsePropertiesOutput values.
// You can construct a concrete instance of `BackupRequestResponsePropertiesInput` via:
//
//          BackupRequestResponsePropertiesArgs{...}
type BackupRequestResponsePropertiesInput interface {
	pulumi.Input

	ToBackupRequestResponsePropertiesOutput() BackupRequestResponsePropertiesOutput
	ToBackupRequestResponsePropertiesOutputWithContext(context.Context) BackupRequestResponsePropertiesOutput
}

type BackupRequestResponsePropertiesArgs struct {
	// Schedule for the backup if it is executed periodically
	BackupSchedule BackupScheduleResponsePtrInput `pulumi:"backupSchedule"`
	// Databases included in the backup
	Databases DatabaseBackupSettingResponseArrayInput `pulumi:"databases"`
	// True if the backup schedule is enabled (must be included in that case), false if the backup schedule should be disabled
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Name of the backup
	Name pulumi.StringPtrInput `pulumi:"name"`
	// SAS URL to the container
	StorageAccountUrl pulumi.StringPtrInput `pulumi:"storageAccountUrl"`
	// Type of the backup
	Type pulumi.StringInput `pulumi:"type"`
}

func (BackupRequestResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupRequestResponseProperties)(nil)).Elem()
}

func (i BackupRequestResponsePropertiesArgs) ToBackupRequestResponsePropertiesOutput() BackupRequestResponsePropertiesOutput {
	return i.ToBackupRequestResponsePropertiesOutputWithContext(context.Background())
}

func (i BackupRequestResponsePropertiesArgs) ToBackupRequestResponsePropertiesOutputWithContext(ctx context.Context) BackupRequestResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupRequestResponsePropertiesOutput)
}

type BackupRequestResponsePropertiesOutput struct{ *pulumi.OutputState }

func (BackupRequestResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupRequestResponseProperties)(nil)).Elem()
}

func (o BackupRequestResponsePropertiesOutput) ToBackupRequestResponsePropertiesOutput() BackupRequestResponsePropertiesOutput {
	return o
}

func (o BackupRequestResponsePropertiesOutput) ToBackupRequestResponsePropertiesOutputWithContext(ctx context.Context) BackupRequestResponsePropertiesOutput {
	return o
}

// Schedule for the backup if it is executed periodically
func (o BackupRequestResponsePropertiesOutput) BackupSchedule() BackupScheduleResponsePtrOutput {
	return o.ApplyT(func(v BackupRequestResponseProperties) *BackupScheduleResponse { return v.BackupSchedule }).(BackupScheduleResponsePtrOutput)
}

// Databases included in the backup
func (o BackupRequestResponsePropertiesOutput) Databases() DatabaseBackupSettingResponseArrayOutput {
	return o.ApplyT(func(v BackupRequestResponseProperties) []DatabaseBackupSettingResponse { return v.Databases }).(DatabaseBackupSettingResponseArrayOutput)
}

// True if the backup schedule is enabled (must be included in that case), false if the backup schedule should be disabled
func (o BackupRequestResponsePropertiesOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BackupRequestResponseProperties) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Name of the backup
func (o BackupRequestResponsePropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupRequestResponseProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// SAS URL to the container
func (o BackupRequestResponsePropertiesOutput) StorageAccountUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupRequestResponseProperties) *string { return v.StorageAccountUrl }).(pulumi.StringPtrOutput)
}

// Type of the backup
func (o BackupRequestResponsePropertiesOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BackupRequestResponseProperties) string { return v.Type }).(pulumi.StringOutput)
}

// Description of a backup schedule. Describes how often should be the backup performed and what should be the retention policy.
type BackupSchedule struct {
	// How often should be the backup executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)
	FrequencyInterval *int `pulumi:"frequencyInterval"`
	// How often should be the backup executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)
	FrequencyUnit string `pulumi:"frequencyUnit"`
	// True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.
	KeepAtLeastOneBackup *bool `pulumi:"keepAtLeastOneBackup"`
	// The last time when this schedule was triggered
	LastExecutionTime *string `pulumi:"lastExecutionTime"`
	// After how many days backups should be deleted
	RetentionPeriodInDays *int `pulumi:"retentionPeriodInDays"`
	// When the schedule should start working
	StartTime *string `pulumi:"startTime"`
}

// BackupScheduleInput is an input type that accepts BackupScheduleArgs and BackupScheduleOutput values.
// You can construct a concrete instance of `BackupScheduleInput` via:
//
//          BackupScheduleArgs{...}
type BackupScheduleInput interface {
	pulumi.Input

	ToBackupScheduleOutput() BackupScheduleOutput
	ToBackupScheduleOutputWithContext(context.Context) BackupScheduleOutput
}

// Description of a backup schedule. Describes how often should be the backup performed and what should be the retention policy.
type BackupScheduleArgs struct {
	// How often should be the backup executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)
	FrequencyInterval pulumi.IntPtrInput `pulumi:"frequencyInterval"`
	// How often should be the backup executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)
	FrequencyUnit pulumi.StringInput `pulumi:"frequencyUnit"`
	// True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.
	KeepAtLeastOneBackup pulumi.BoolPtrInput `pulumi:"keepAtLeastOneBackup"`
	// The last time when this schedule was triggered
	LastExecutionTime pulumi.StringPtrInput `pulumi:"lastExecutionTime"`
	// After how many days backups should be deleted
	RetentionPeriodInDays pulumi.IntPtrInput `pulumi:"retentionPeriodInDays"`
	// When the schedule should start working
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
}

func (BackupScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupSchedule)(nil)).Elem()
}

func (i BackupScheduleArgs) ToBackupScheduleOutput() BackupScheduleOutput {
	return i.ToBackupScheduleOutputWithContext(context.Background())
}

func (i BackupScheduleArgs) ToBackupScheduleOutputWithContext(ctx context.Context) BackupScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupScheduleOutput)
}

func (i BackupScheduleArgs) ToBackupSchedulePtrOutput() BackupSchedulePtrOutput {
	return i.ToBackupSchedulePtrOutputWithContext(context.Background())
}

func (i BackupScheduleArgs) ToBackupSchedulePtrOutputWithContext(ctx context.Context) BackupSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupScheduleOutput).ToBackupSchedulePtrOutputWithContext(ctx)
}

// BackupSchedulePtrInput is an input type that accepts BackupScheduleArgs, BackupSchedulePtr and BackupSchedulePtrOutput values.
// You can construct a concrete instance of `BackupSchedulePtrInput` via:
//
//          BackupScheduleArgs{...}
//
//  or:
//
//          nil
type BackupSchedulePtrInput interface {
	pulumi.Input

	ToBackupSchedulePtrOutput() BackupSchedulePtrOutput
	ToBackupSchedulePtrOutputWithContext(context.Context) BackupSchedulePtrOutput
}

type backupSchedulePtrType BackupScheduleArgs

func BackupSchedulePtr(v *BackupScheduleArgs) BackupSchedulePtrInput {
	return (*backupSchedulePtrType)(v)
}

func (*backupSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupSchedule)(nil)).Elem()
}

func (i *backupSchedulePtrType) ToBackupSchedulePtrOutput() BackupSchedulePtrOutput {
	return i.ToBackupSchedulePtrOutputWithContext(context.Background())
}

func (i *backupSchedulePtrType) ToBackupSchedulePtrOutputWithContext(ctx context.Context) BackupSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupSchedulePtrOutput)
}

// Description of a backup schedule. Describes how often should be the backup performed and what should be the retention policy.
type BackupScheduleOutput struct{ *pulumi.OutputState }

func (BackupScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupSchedule)(nil)).Elem()
}

func (o BackupScheduleOutput) ToBackupScheduleOutput() BackupScheduleOutput {
	return o
}

func (o BackupScheduleOutput) ToBackupScheduleOutputWithContext(ctx context.Context) BackupScheduleOutput {
	return o
}

func (o BackupScheduleOutput) ToBackupSchedulePtrOutput() BackupSchedulePtrOutput {
	return o.ToBackupSchedulePtrOutputWithContext(context.Background())
}

func (o BackupScheduleOutput) ToBackupSchedulePtrOutputWithContext(ctx context.Context) BackupSchedulePtrOutput {
	return o.ApplyT(func(v BackupSchedule) *BackupSchedule {
		return &v
	}).(BackupSchedulePtrOutput)
}

// How often should be the backup executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)
func (o BackupScheduleOutput) FrequencyInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackupSchedule) *int { return v.FrequencyInterval }).(pulumi.IntPtrOutput)
}

// How often should be the backup executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)
func (o BackupScheduleOutput) FrequencyUnit() pulumi.StringOutput {
	return o.ApplyT(func(v BackupSchedule) string { return v.FrequencyUnit }).(pulumi.StringOutput)
}

// True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.
func (o BackupScheduleOutput) KeepAtLeastOneBackup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BackupSchedule) *bool { return v.KeepAtLeastOneBackup }).(pulumi.BoolPtrOutput)
}

// The last time when this schedule was triggered
func (o BackupScheduleOutput) LastExecutionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupSchedule) *string { return v.LastExecutionTime }).(pulumi.StringPtrOutput)
}

// After how many days backups should be deleted
func (o BackupScheduleOutput) RetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackupSchedule) *int { return v.RetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// When the schedule should start working
func (o BackupScheduleOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupSchedule) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type BackupSchedulePtrOutput struct{ *pulumi.OutputState }

func (BackupSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupSchedule)(nil)).Elem()
}

func (o BackupSchedulePtrOutput) ToBackupSchedulePtrOutput() BackupSchedulePtrOutput {
	return o
}

func (o BackupSchedulePtrOutput) ToBackupSchedulePtrOutputWithContext(ctx context.Context) BackupSchedulePtrOutput {
	return o
}

func (o BackupSchedulePtrOutput) Elem() BackupScheduleOutput {
	return o.ApplyT(func(v *BackupSchedule) BackupSchedule { return *v }).(BackupScheduleOutput)
}

// How often should be the backup executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)
func (o BackupSchedulePtrOutput) FrequencyInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackupSchedule) *int {
		if v == nil {
			return nil
		}
		return v.FrequencyInterval
	}).(pulumi.IntPtrOutput)
}

// How often should be the backup executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)
func (o BackupSchedulePtrOutput) FrequencyUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupSchedule) *string {
		if v == nil {
			return nil
		}
		return &v.FrequencyUnit
	}).(pulumi.StringPtrOutput)
}

// True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.
func (o BackupSchedulePtrOutput) KeepAtLeastOneBackup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BackupSchedule) *bool {
		if v == nil {
			return nil
		}
		return v.KeepAtLeastOneBackup
	}).(pulumi.BoolPtrOutput)
}

// The last time when this schedule was triggered
func (o BackupSchedulePtrOutput) LastExecutionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupSchedule) *string {
		if v == nil {
			return nil
		}
		return v.LastExecutionTime
	}).(pulumi.StringPtrOutput)
}

// After how many days backups should be deleted
func (o BackupSchedulePtrOutput) RetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackupSchedule) *int {
		if v == nil {
			return nil
		}
		return v.RetentionPeriodInDays
	}).(pulumi.IntPtrOutput)
}

// When the schedule should start working
func (o BackupSchedulePtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupSchedule) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

// Description of a backup schedule. Describes how often should be the backup performed and what should be the retention policy.
type BackupScheduleResponse struct {
	// How often should be the backup executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)
	FrequencyInterval *int `pulumi:"frequencyInterval"`
	// How often should be the backup executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)
	FrequencyUnit string `pulumi:"frequencyUnit"`
	// True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.
	KeepAtLeastOneBackup *bool `pulumi:"keepAtLeastOneBackup"`
	// The last time when this schedule was triggered
	LastExecutionTime *string `pulumi:"lastExecutionTime"`
	// After how many days backups should be deleted
	RetentionPeriodInDays *int `pulumi:"retentionPeriodInDays"`
	// When the schedule should start working
	StartTime *string `pulumi:"startTime"`
}

// BackupScheduleResponseInput is an input type that accepts BackupScheduleResponseArgs and BackupScheduleResponseOutput values.
// You can construct a concrete instance of `BackupScheduleResponseInput` via:
//
//          BackupScheduleResponseArgs{...}
type BackupScheduleResponseInput interface {
	pulumi.Input

	ToBackupScheduleResponseOutput() BackupScheduleResponseOutput
	ToBackupScheduleResponseOutputWithContext(context.Context) BackupScheduleResponseOutput
}

// Description of a backup schedule. Describes how often should be the backup performed and what should be the retention policy.
type BackupScheduleResponseArgs struct {
	// How often should be the backup executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)
	FrequencyInterval pulumi.IntPtrInput `pulumi:"frequencyInterval"`
	// How often should be the backup executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)
	FrequencyUnit pulumi.StringInput `pulumi:"frequencyUnit"`
	// True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.
	KeepAtLeastOneBackup pulumi.BoolPtrInput `pulumi:"keepAtLeastOneBackup"`
	// The last time when this schedule was triggered
	LastExecutionTime pulumi.StringPtrInput `pulumi:"lastExecutionTime"`
	// After how many days backups should be deleted
	RetentionPeriodInDays pulumi.IntPtrInput `pulumi:"retentionPeriodInDays"`
	// When the schedule should start working
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
}

func (BackupScheduleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupScheduleResponse)(nil)).Elem()
}

func (i BackupScheduleResponseArgs) ToBackupScheduleResponseOutput() BackupScheduleResponseOutput {
	return i.ToBackupScheduleResponseOutputWithContext(context.Background())
}

func (i BackupScheduleResponseArgs) ToBackupScheduleResponseOutputWithContext(ctx context.Context) BackupScheduleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupScheduleResponseOutput)
}

func (i BackupScheduleResponseArgs) ToBackupScheduleResponsePtrOutput() BackupScheduleResponsePtrOutput {
	return i.ToBackupScheduleResponsePtrOutputWithContext(context.Background())
}

func (i BackupScheduleResponseArgs) ToBackupScheduleResponsePtrOutputWithContext(ctx context.Context) BackupScheduleResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupScheduleResponseOutput).ToBackupScheduleResponsePtrOutputWithContext(ctx)
}

// BackupScheduleResponsePtrInput is an input type that accepts BackupScheduleResponseArgs, BackupScheduleResponsePtr and BackupScheduleResponsePtrOutput values.
// You can construct a concrete instance of `BackupScheduleResponsePtrInput` via:
//
//          BackupScheduleResponseArgs{...}
//
//  or:
//
//          nil
type BackupScheduleResponsePtrInput interface {
	pulumi.Input

	ToBackupScheduleResponsePtrOutput() BackupScheduleResponsePtrOutput
	ToBackupScheduleResponsePtrOutputWithContext(context.Context) BackupScheduleResponsePtrOutput
}

type backupScheduleResponsePtrType BackupScheduleResponseArgs

func BackupScheduleResponsePtr(v *BackupScheduleResponseArgs) BackupScheduleResponsePtrInput {
	return (*backupScheduleResponsePtrType)(v)
}

func (*backupScheduleResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupScheduleResponse)(nil)).Elem()
}

func (i *backupScheduleResponsePtrType) ToBackupScheduleResponsePtrOutput() BackupScheduleResponsePtrOutput {
	return i.ToBackupScheduleResponsePtrOutputWithContext(context.Background())
}

func (i *backupScheduleResponsePtrType) ToBackupScheduleResponsePtrOutputWithContext(ctx context.Context) BackupScheduleResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupScheduleResponsePtrOutput)
}

// Description of a backup schedule. Describes how often should be the backup performed and what should be the retention policy.
type BackupScheduleResponseOutput struct{ *pulumi.OutputState }

func (BackupScheduleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupScheduleResponse)(nil)).Elem()
}

func (o BackupScheduleResponseOutput) ToBackupScheduleResponseOutput() BackupScheduleResponseOutput {
	return o
}

func (o BackupScheduleResponseOutput) ToBackupScheduleResponseOutputWithContext(ctx context.Context) BackupScheduleResponseOutput {
	return o
}

func (o BackupScheduleResponseOutput) ToBackupScheduleResponsePtrOutput() BackupScheduleResponsePtrOutput {
	return o.ToBackupScheduleResponsePtrOutputWithContext(context.Background())
}

func (o BackupScheduleResponseOutput) ToBackupScheduleResponsePtrOutputWithContext(ctx context.Context) BackupScheduleResponsePtrOutput {
	return o.ApplyT(func(v BackupScheduleResponse) *BackupScheduleResponse {
		return &v
	}).(BackupScheduleResponsePtrOutput)
}

// How often should be the backup executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)
func (o BackupScheduleResponseOutput) FrequencyInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackupScheduleResponse) *int { return v.FrequencyInterval }).(pulumi.IntPtrOutput)
}

// How often should be the backup executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)
func (o BackupScheduleResponseOutput) FrequencyUnit() pulumi.StringOutput {
	return o.ApplyT(func(v BackupScheduleResponse) string { return v.FrequencyUnit }).(pulumi.StringOutput)
}

// True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.
func (o BackupScheduleResponseOutput) KeepAtLeastOneBackup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BackupScheduleResponse) *bool { return v.KeepAtLeastOneBackup }).(pulumi.BoolPtrOutput)
}

// The last time when this schedule was triggered
func (o BackupScheduleResponseOutput) LastExecutionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupScheduleResponse) *string { return v.LastExecutionTime }).(pulumi.StringPtrOutput)
}

// After how many days backups should be deleted
func (o BackupScheduleResponseOutput) RetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackupScheduleResponse) *int { return v.RetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// When the schedule should start working
func (o BackupScheduleResponseOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupScheduleResponse) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type BackupScheduleResponsePtrOutput struct{ *pulumi.OutputState }

func (BackupScheduleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupScheduleResponse)(nil)).Elem()
}

func (o BackupScheduleResponsePtrOutput) ToBackupScheduleResponsePtrOutput() BackupScheduleResponsePtrOutput {
	return o
}

func (o BackupScheduleResponsePtrOutput) ToBackupScheduleResponsePtrOutputWithContext(ctx context.Context) BackupScheduleResponsePtrOutput {
	return o
}

func (o BackupScheduleResponsePtrOutput) Elem() BackupScheduleResponseOutput {
	return o.ApplyT(func(v *BackupScheduleResponse) BackupScheduleResponse { return *v }).(BackupScheduleResponseOutput)
}

// How often should be the backup executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)
func (o BackupScheduleResponsePtrOutput) FrequencyInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackupScheduleResponse) *int {
		if v == nil {
			return nil
		}
		return v.FrequencyInterval
	}).(pulumi.IntPtrOutput)
}

// How often should be the backup executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)
func (o BackupScheduleResponsePtrOutput) FrequencyUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupScheduleResponse) *string {
		if v == nil {
			return nil
		}
		return &v.FrequencyUnit
	}).(pulumi.StringPtrOutput)
}

// True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.
func (o BackupScheduleResponsePtrOutput) KeepAtLeastOneBackup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BackupScheduleResponse) *bool {
		if v == nil {
			return nil
		}
		return v.KeepAtLeastOneBackup
	}).(pulumi.BoolPtrOutput)
}

// The last time when this schedule was triggered
func (o BackupScheduleResponsePtrOutput) LastExecutionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupScheduleResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastExecutionTime
	}).(pulumi.StringPtrOutput)
}

// After how many days backups should be deleted
func (o BackupScheduleResponsePtrOutput) RetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackupScheduleResponse) *int {
		if v == nil {
			return nil
		}
		return v.RetentionPeriodInDays
	}).(pulumi.IntPtrOutput)
}

// When the schedule should start working
func (o BackupScheduleResponsePtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupScheduleResponse) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

// App certificate
type CertificateType struct {
	// Kind of resource
	Kind *string `pulumi:"kind"`
	// Resource Location
	Location string `pulumi:"location"`
	// Resource Name
	Name       *string                       `pulumi:"name"`
	Properties CertificateResponseProperties `pulumi:"properties"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type *string `pulumi:"type"`
}

// CertificateTypeInput is an input type that accepts CertificateTypeArgs and CertificateTypeOutput values.
// You can construct a concrete instance of `CertificateTypeInput` via:
//
//          CertificateTypeArgs{...}
type CertificateTypeInput interface {
	pulumi.Input

	ToCertificateTypeOutput() CertificateTypeOutput
	ToCertificateTypeOutputWithContext(context.Context) CertificateTypeOutput
}

// App certificate
type CertificateTypeArgs struct {
	// Kind of resource
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource Name
	Name       pulumi.StringPtrInput              `pulumi:"name"`
	Properties CertificateResponsePropertiesInput `pulumi:"properties"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (CertificateTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateType)(nil)).Elem()
}

func (i CertificateTypeArgs) ToCertificateTypeOutput() CertificateTypeOutput {
	return i.ToCertificateTypeOutputWithContext(context.Background())
}

func (i CertificateTypeArgs) ToCertificateTypeOutputWithContext(ctx context.Context) CertificateTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTypeOutput)
}

// App certificate
type CertificateTypeOutput struct{ *pulumi.OutputState }

func (CertificateTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateType)(nil)).Elem()
}

func (o CertificateTypeOutput) ToCertificateTypeOutput() CertificateTypeOutput {
	return o
}

func (o CertificateTypeOutput) ToCertificateTypeOutputWithContext(ctx context.Context) CertificateTypeOutput {
	return o
}

// Kind of resource
func (o CertificateTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location
func (o CertificateTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name
func (o CertificateTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o CertificateTypeOutput) Properties() CertificateResponsePropertiesOutput {
	return o.ApplyT(func(v CertificateType) CertificateResponseProperties { return v.Properties }).(CertificateResponsePropertiesOutput)
}

// Resource tags
func (o CertificateTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v CertificateType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o CertificateTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Certificate signing request object
type CertificateCsrType struct {
	// Kind of resource
	Kind *string `pulumi:"kind"`
	// Resource Location
	Location string `pulumi:"location"`
	// Resource Name
	Name       *string               `pulumi:"name"`
	Properties CsrResponseProperties `pulumi:"properties"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type *string `pulumi:"type"`
}

// CertificateCsrTypeInput is an input type that accepts CertificateCsrTypeArgs and CertificateCsrTypeOutput values.
// You can construct a concrete instance of `CertificateCsrTypeInput` via:
//
//          CertificateCsrTypeArgs{...}
type CertificateCsrTypeInput interface {
	pulumi.Input

	ToCertificateCsrTypeOutput() CertificateCsrTypeOutput
	ToCertificateCsrTypeOutputWithContext(context.Context) CertificateCsrTypeOutput
}

// Certificate signing request object
type CertificateCsrTypeArgs struct {
	// Kind of resource
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource Name
	Name       pulumi.StringPtrInput      `pulumi:"name"`
	Properties CsrResponsePropertiesInput `pulumi:"properties"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (CertificateCsrTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCsrType)(nil)).Elem()
}

func (i CertificateCsrTypeArgs) ToCertificateCsrTypeOutput() CertificateCsrTypeOutput {
	return i.ToCertificateCsrTypeOutputWithContext(context.Background())
}

func (i CertificateCsrTypeArgs) ToCertificateCsrTypeOutputWithContext(ctx context.Context) CertificateCsrTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCsrTypeOutput)
}

// Certificate signing request object
type CertificateCsrTypeOutput struct{ *pulumi.OutputState }

func (CertificateCsrTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCsrType)(nil)).Elem()
}

func (o CertificateCsrTypeOutput) ToCertificateCsrTypeOutput() CertificateCsrTypeOutput {
	return o
}

func (o CertificateCsrTypeOutput) ToCertificateCsrTypeOutputWithContext(ctx context.Context) CertificateCsrTypeOutput {
	return o
}

// Kind of resource
func (o CertificateCsrTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCsrType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location
func (o CertificateCsrTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateCsrType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name
func (o CertificateCsrTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCsrType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o CertificateCsrTypeOutput) Properties() CsrResponsePropertiesOutput {
	return o.ApplyT(func(v CertificateCsrType) CsrResponseProperties { return v.Properties }).(CsrResponsePropertiesOutput)
}

// Resource tags
func (o CertificateCsrTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v CertificateCsrType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o CertificateCsrTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCsrType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type CertificateProperties struct {
	// Raw bytes of .cer file
	CerBlob *string `pulumi:"cerBlob"`
	// Certificate expiration date
	ExpirationDate *string `pulumi:"expirationDate"`
	// Friendly name of the certificate
	FriendlyName *string `pulumi:"friendlyName"`
	// Host names the certificate applies to
	HostNames []string `pulumi:"hostNames"`
	// Specification for the hosting environment (App Service Environment) to use for the certificate
	HostingEnvironmentProfile *HostingEnvironmentProfile `pulumi:"hostingEnvironmentProfile"`
	// Certificate issue Date
	IssueDate *string `pulumi:"issueDate"`
	// Certificate issuer
	Issuer *string `pulumi:"issuer"`
	// Certificate password
	Password *string `pulumi:"password"`
	// Pfx blob
	PfxBlob *string `pulumi:"pfxBlob"`
	// Public key hash
	PublicKeyHash *string `pulumi:"publicKeyHash"`
	// Self link
	SelfLink *string `pulumi:"selfLink"`
	// App name
	SiteName *string `pulumi:"siteName"`
	// Subject name of the certificate
	SubjectName *string `pulumi:"subjectName"`
	// Certificate thumbprint
	Thumbprint *string `pulumi:"thumbprint"`
	// Is the certificate valid?
	Valid *bool `pulumi:"valid"`
}

// CertificatePropertiesInput is an input type that accepts CertificatePropertiesArgs and CertificatePropertiesOutput values.
// You can construct a concrete instance of `CertificatePropertiesInput` via:
//
//          CertificatePropertiesArgs{...}
type CertificatePropertiesInput interface {
	pulumi.Input

	ToCertificatePropertiesOutput() CertificatePropertiesOutput
	ToCertificatePropertiesOutputWithContext(context.Context) CertificatePropertiesOutput
}

type CertificatePropertiesArgs struct {
	// Raw bytes of .cer file
	CerBlob pulumi.StringPtrInput `pulumi:"cerBlob"`
	// Certificate expiration date
	ExpirationDate pulumi.StringPtrInput `pulumi:"expirationDate"`
	// Friendly name of the certificate
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Host names the certificate applies to
	HostNames pulumi.StringArrayInput `pulumi:"hostNames"`
	// Specification for the hosting environment (App Service Environment) to use for the certificate
	HostingEnvironmentProfile HostingEnvironmentProfilePtrInput `pulumi:"hostingEnvironmentProfile"`
	// Certificate issue Date
	IssueDate pulumi.StringPtrInput `pulumi:"issueDate"`
	// Certificate issuer
	Issuer pulumi.StringPtrInput `pulumi:"issuer"`
	// Certificate password
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Pfx blob
	PfxBlob pulumi.StringPtrInput `pulumi:"pfxBlob"`
	// Public key hash
	PublicKeyHash pulumi.StringPtrInput `pulumi:"publicKeyHash"`
	// Self link
	SelfLink pulumi.StringPtrInput `pulumi:"selfLink"`
	// App name
	SiteName pulumi.StringPtrInput `pulumi:"siteName"`
	// Subject name of the certificate
	SubjectName pulumi.StringPtrInput `pulumi:"subjectName"`
	// Certificate thumbprint
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
	// Is the certificate valid?
	Valid pulumi.BoolPtrInput `pulumi:"valid"`
}

func (CertificatePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateProperties)(nil)).Elem()
}

func (i CertificatePropertiesArgs) ToCertificatePropertiesOutput() CertificatePropertiesOutput {
	return i.ToCertificatePropertiesOutputWithContext(context.Background())
}

func (i CertificatePropertiesArgs) ToCertificatePropertiesOutputWithContext(ctx context.Context) CertificatePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificatePropertiesOutput)
}

func (i CertificatePropertiesArgs) ToCertificatePropertiesPtrOutput() CertificatePropertiesPtrOutput {
	return i.ToCertificatePropertiesPtrOutputWithContext(context.Background())
}

func (i CertificatePropertiesArgs) ToCertificatePropertiesPtrOutputWithContext(ctx context.Context) CertificatePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificatePropertiesOutput).ToCertificatePropertiesPtrOutputWithContext(ctx)
}

// CertificatePropertiesPtrInput is an input type that accepts CertificatePropertiesArgs, CertificatePropertiesPtr and CertificatePropertiesPtrOutput values.
// You can construct a concrete instance of `CertificatePropertiesPtrInput` via:
//
//          CertificatePropertiesArgs{...}
//
//  or:
//
//          nil
type CertificatePropertiesPtrInput interface {
	pulumi.Input

	ToCertificatePropertiesPtrOutput() CertificatePropertiesPtrOutput
	ToCertificatePropertiesPtrOutputWithContext(context.Context) CertificatePropertiesPtrOutput
}

type certificatePropertiesPtrType CertificatePropertiesArgs

func CertificatePropertiesPtr(v *CertificatePropertiesArgs) CertificatePropertiesPtrInput {
	return (*certificatePropertiesPtrType)(v)
}

func (*certificatePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateProperties)(nil)).Elem()
}

func (i *certificatePropertiesPtrType) ToCertificatePropertiesPtrOutput() CertificatePropertiesPtrOutput {
	return i.ToCertificatePropertiesPtrOutputWithContext(context.Background())
}

func (i *certificatePropertiesPtrType) ToCertificatePropertiesPtrOutputWithContext(ctx context.Context) CertificatePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificatePropertiesPtrOutput)
}

type CertificatePropertiesOutput struct{ *pulumi.OutputState }

func (CertificatePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateProperties)(nil)).Elem()
}

func (o CertificatePropertiesOutput) ToCertificatePropertiesOutput() CertificatePropertiesOutput {
	return o
}

func (o CertificatePropertiesOutput) ToCertificatePropertiesOutputWithContext(ctx context.Context) CertificatePropertiesOutput {
	return o
}

func (o CertificatePropertiesOutput) ToCertificatePropertiesPtrOutput() CertificatePropertiesPtrOutput {
	return o.ToCertificatePropertiesPtrOutputWithContext(context.Background())
}

func (o CertificatePropertiesOutput) ToCertificatePropertiesPtrOutputWithContext(ctx context.Context) CertificatePropertiesPtrOutput {
	return o.ApplyT(func(v CertificateProperties) *CertificateProperties {
		return &v
	}).(CertificatePropertiesPtrOutput)
}

// Raw bytes of .cer file
func (o CertificatePropertiesOutput) CerBlob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateProperties) *string { return v.CerBlob }).(pulumi.StringPtrOutput)
}

// Certificate expiration date
func (o CertificatePropertiesOutput) ExpirationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateProperties) *string { return v.ExpirationDate }).(pulumi.StringPtrOutput)
}

// Friendly name of the certificate
func (o CertificatePropertiesOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateProperties) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Host names the certificate applies to
func (o CertificatePropertiesOutput) HostNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CertificateProperties) []string { return v.HostNames }).(pulumi.StringArrayOutput)
}

// Specification for the hosting environment (App Service Environment) to use for the certificate
func (o CertificatePropertiesOutput) HostingEnvironmentProfile() HostingEnvironmentProfilePtrOutput {
	return o.ApplyT(func(v CertificateProperties) *HostingEnvironmentProfile { return v.HostingEnvironmentProfile }).(HostingEnvironmentProfilePtrOutput)
}

// Certificate issue Date
func (o CertificatePropertiesOutput) IssueDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateProperties) *string { return v.IssueDate }).(pulumi.StringPtrOutput)
}

// Certificate issuer
func (o CertificatePropertiesOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateProperties) *string { return v.Issuer }).(pulumi.StringPtrOutput)
}

// Certificate password
func (o CertificatePropertiesOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateProperties) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Pfx blob
func (o CertificatePropertiesOutput) PfxBlob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateProperties) *string { return v.PfxBlob }).(pulumi.StringPtrOutput)
}

// Public key hash
func (o CertificatePropertiesOutput) PublicKeyHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateProperties) *string { return v.PublicKeyHash }).(pulumi.StringPtrOutput)
}

// Self link
func (o CertificatePropertiesOutput) SelfLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateProperties) *string { return v.SelfLink }).(pulumi.StringPtrOutput)
}

// App name
func (o CertificatePropertiesOutput) SiteName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateProperties) *string { return v.SiteName }).(pulumi.StringPtrOutput)
}

// Subject name of the certificate
func (o CertificatePropertiesOutput) SubjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateProperties) *string { return v.SubjectName }).(pulumi.StringPtrOutput)
}

// Certificate thumbprint
func (o CertificatePropertiesOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateProperties) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

// Is the certificate valid?
func (o CertificatePropertiesOutput) Valid() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateProperties) *bool { return v.Valid }).(pulumi.BoolPtrOutput)
}

type CertificatePropertiesPtrOutput struct{ *pulumi.OutputState }

func (CertificatePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateProperties)(nil)).Elem()
}

func (o CertificatePropertiesPtrOutput) ToCertificatePropertiesPtrOutput() CertificatePropertiesPtrOutput {
	return o
}

func (o CertificatePropertiesPtrOutput) ToCertificatePropertiesPtrOutputWithContext(ctx context.Context) CertificatePropertiesPtrOutput {
	return o
}

func (o CertificatePropertiesPtrOutput) Elem() CertificatePropertiesOutput {
	return o.ApplyT(func(v *CertificateProperties) CertificateProperties { return *v }).(CertificatePropertiesOutput)
}

// Raw bytes of .cer file
func (o CertificatePropertiesPtrOutput) CerBlob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateProperties) *string {
		if v == nil {
			return nil
		}
		return v.CerBlob
	}).(pulumi.StringPtrOutput)
}

// Certificate expiration date
func (o CertificatePropertiesPtrOutput) ExpirationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateProperties) *string {
		if v == nil {
			return nil
		}
		return v.ExpirationDate
	}).(pulumi.StringPtrOutput)
}

// Friendly name of the certificate
func (o CertificatePropertiesPtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateProperties) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// Host names the certificate applies to
func (o CertificatePropertiesPtrOutput) HostNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CertificateProperties) []string {
		if v == nil {
			return nil
		}
		return v.HostNames
	}).(pulumi.StringArrayOutput)
}

// Specification for the hosting environment (App Service Environment) to use for the certificate
func (o CertificatePropertiesPtrOutput) HostingEnvironmentProfile() HostingEnvironmentProfilePtrOutput {
	return o.ApplyT(func(v *CertificateProperties) *HostingEnvironmentProfile {
		if v == nil {
			return nil
		}
		return v.HostingEnvironmentProfile
	}).(HostingEnvironmentProfilePtrOutput)
}

// Certificate issue Date
func (o CertificatePropertiesPtrOutput) IssueDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateProperties) *string {
		if v == nil {
			return nil
		}
		return v.IssueDate
	}).(pulumi.StringPtrOutput)
}

// Certificate issuer
func (o CertificatePropertiesPtrOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateProperties) *string {
		if v == nil {
			return nil
		}
		return v.Issuer
	}).(pulumi.StringPtrOutput)
}

// Certificate password
func (o CertificatePropertiesPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateProperties) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Pfx blob
func (o CertificatePropertiesPtrOutput) PfxBlob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateProperties) *string {
		if v == nil {
			return nil
		}
		return v.PfxBlob
	}).(pulumi.StringPtrOutput)
}

// Public key hash
func (o CertificatePropertiesPtrOutput) PublicKeyHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicKeyHash
	}).(pulumi.StringPtrOutput)
}

// Self link
func (o CertificatePropertiesPtrOutput) SelfLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateProperties) *string {
		if v == nil {
			return nil
		}
		return v.SelfLink
	}).(pulumi.StringPtrOutput)
}

// App name
func (o CertificatePropertiesPtrOutput) SiteName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateProperties) *string {
		if v == nil {
			return nil
		}
		return v.SiteName
	}).(pulumi.StringPtrOutput)
}

// Subject name of the certificate
func (o CertificatePropertiesPtrOutput) SubjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateProperties) *string {
		if v == nil {
			return nil
		}
		return v.SubjectName
	}).(pulumi.StringPtrOutput)
}

// Certificate thumbprint
func (o CertificatePropertiesPtrOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateProperties) *string {
		if v == nil {
			return nil
		}
		return v.Thumbprint
	}).(pulumi.StringPtrOutput)
}

// Is the certificate valid?
func (o CertificatePropertiesPtrOutput) Valid() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Valid
	}).(pulumi.BoolPtrOutput)
}

type CertificateResponseProperties struct {
	// Raw bytes of .cer file
	CerBlob *string `pulumi:"cerBlob"`
	// Certificate expiration date
	ExpirationDate *string `pulumi:"expirationDate"`
	// Friendly name of the certificate
	FriendlyName *string `pulumi:"friendlyName"`
	// Host names the certificate applies to
	HostNames []string `pulumi:"hostNames"`
	// Specification for the hosting environment (App Service Environment) to use for the certificate
	HostingEnvironmentProfile *HostingEnvironmentProfileResponse `pulumi:"hostingEnvironmentProfile"`
	// Certificate issue Date
	IssueDate *string `pulumi:"issueDate"`
	// Certificate issuer
	Issuer *string `pulumi:"issuer"`
	// Certificate password
	Password *string `pulumi:"password"`
	// Pfx blob
	PfxBlob *string `pulumi:"pfxBlob"`
	// Public key hash
	PublicKeyHash *string `pulumi:"publicKeyHash"`
	// Self link
	SelfLink *string `pulumi:"selfLink"`
	// App name
	SiteName *string `pulumi:"siteName"`
	// Subject name of the certificate
	SubjectName *string `pulumi:"subjectName"`
	// Certificate thumbprint
	Thumbprint *string `pulumi:"thumbprint"`
	// Is the certificate valid?
	Valid *bool `pulumi:"valid"`
}

// CertificateResponsePropertiesInput is an input type that accepts CertificateResponsePropertiesArgs and CertificateResponsePropertiesOutput values.
// You can construct a concrete instance of `CertificateResponsePropertiesInput` via:
//
//          CertificateResponsePropertiesArgs{...}
type CertificateResponsePropertiesInput interface {
	pulumi.Input

	ToCertificateResponsePropertiesOutput() CertificateResponsePropertiesOutput
	ToCertificateResponsePropertiesOutputWithContext(context.Context) CertificateResponsePropertiesOutput
}

type CertificateResponsePropertiesArgs struct {
	// Raw bytes of .cer file
	CerBlob pulumi.StringPtrInput `pulumi:"cerBlob"`
	// Certificate expiration date
	ExpirationDate pulumi.StringPtrInput `pulumi:"expirationDate"`
	// Friendly name of the certificate
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Host names the certificate applies to
	HostNames pulumi.StringArrayInput `pulumi:"hostNames"`
	// Specification for the hosting environment (App Service Environment) to use for the certificate
	HostingEnvironmentProfile HostingEnvironmentProfileResponsePtrInput `pulumi:"hostingEnvironmentProfile"`
	// Certificate issue Date
	IssueDate pulumi.StringPtrInput `pulumi:"issueDate"`
	// Certificate issuer
	Issuer pulumi.StringPtrInput `pulumi:"issuer"`
	// Certificate password
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Pfx blob
	PfxBlob pulumi.StringPtrInput `pulumi:"pfxBlob"`
	// Public key hash
	PublicKeyHash pulumi.StringPtrInput `pulumi:"publicKeyHash"`
	// Self link
	SelfLink pulumi.StringPtrInput `pulumi:"selfLink"`
	// App name
	SiteName pulumi.StringPtrInput `pulumi:"siteName"`
	// Subject name of the certificate
	SubjectName pulumi.StringPtrInput `pulumi:"subjectName"`
	// Certificate thumbprint
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
	// Is the certificate valid?
	Valid pulumi.BoolPtrInput `pulumi:"valid"`
}

func (CertificateResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateResponseProperties)(nil)).Elem()
}

func (i CertificateResponsePropertiesArgs) ToCertificateResponsePropertiesOutput() CertificateResponsePropertiesOutput {
	return i.ToCertificateResponsePropertiesOutputWithContext(context.Background())
}

func (i CertificateResponsePropertiesArgs) ToCertificateResponsePropertiesOutputWithContext(ctx context.Context) CertificateResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateResponsePropertiesOutput)
}

func (i CertificateResponsePropertiesArgs) ToCertificateResponsePropertiesPtrOutput() CertificateResponsePropertiesPtrOutput {
	return i.ToCertificateResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i CertificateResponsePropertiesArgs) ToCertificateResponsePropertiesPtrOutputWithContext(ctx context.Context) CertificateResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateResponsePropertiesOutput).ToCertificateResponsePropertiesPtrOutputWithContext(ctx)
}

// CertificateResponsePropertiesPtrInput is an input type that accepts CertificateResponsePropertiesArgs, CertificateResponsePropertiesPtr and CertificateResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `CertificateResponsePropertiesPtrInput` via:
//
//          CertificateResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type CertificateResponsePropertiesPtrInput interface {
	pulumi.Input

	ToCertificateResponsePropertiesPtrOutput() CertificateResponsePropertiesPtrOutput
	ToCertificateResponsePropertiesPtrOutputWithContext(context.Context) CertificateResponsePropertiesPtrOutput
}

type certificateResponsePropertiesPtrType CertificateResponsePropertiesArgs

func CertificateResponsePropertiesPtr(v *CertificateResponsePropertiesArgs) CertificateResponsePropertiesPtrInput {
	return (*certificateResponsePropertiesPtrType)(v)
}

func (*certificateResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateResponseProperties)(nil)).Elem()
}

func (i *certificateResponsePropertiesPtrType) ToCertificateResponsePropertiesPtrOutput() CertificateResponsePropertiesPtrOutput {
	return i.ToCertificateResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *certificateResponsePropertiesPtrType) ToCertificateResponsePropertiesPtrOutputWithContext(ctx context.Context) CertificateResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateResponsePropertiesPtrOutput)
}

type CertificateResponsePropertiesOutput struct{ *pulumi.OutputState }

func (CertificateResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateResponseProperties)(nil)).Elem()
}

func (o CertificateResponsePropertiesOutput) ToCertificateResponsePropertiesOutput() CertificateResponsePropertiesOutput {
	return o
}

func (o CertificateResponsePropertiesOutput) ToCertificateResponsePropertiesOutputWithContext(ctx context.Context) CertificateResponsePropertiesOutput {
	return o
}

func (o CertificateResponsePropertiesOutput) ToCertificateResponsePropertiesPtrOutput() CertificateResponsePropertiesPtrOutput {
	return o.ToCertificateResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o CertificateResponsePropertiesOutput) ToCertificateResponsePropertiesPtrOutputWithContext(ctx context.Context) CertificateResponsePropertiesPtrOutput {
	return o.ApplyT(func(v CertificateResponseProperties) *CertificateResponseProperties {
		return &v
	}).(CertificateResponsePropertiesPtrOutput)
}

// Raw bytes of .cer file
func (o CertificateResponsePropertiesOutput) CerBlob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateResponseProperties) *string { return v.CerBlob }).(pulumi.StringPtrOutput)
}

// Certificate expiration date
func (o CertificateResponsePropertiesOutput) ExpirationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateResponseProperties) *string { return v.ExpirationDate }).(pulumi.StringPtrOutput)
}

// Friendly name of the certificate
func (o CertificateResponsePropertiesOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateResponseProperties) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Host names the certificate applies to
func (o CertificateResponsePropertiesOutput) HostNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CertificateResponseProperties) []string { return v.HostNames }).(pulumi.StringArrayOutput)
}

// Specification for the hosting environment (App Service Environment) to use for the certificate
func (o CertificateResponsePropertiesOutput) HostingEnvironmentProfile() HostingEnvironmentProfileResponsePtrOutput {
	return o.ApplyT(func(v CertificateResponseProperties) *HostingEnvironmentProfileResponse {
		return v.HostingEnvironmentProfile
	}).(HostingEnvironmentProfileResponsePtrOutput)
}

// Certificate issue Date
func (o CertificateResponsePropertiesOutput) IssueDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateResponseProperties) *string { return v.IssueDate }).(pulumi.StringPtrOutput)
}

// Certificate issuer
func (o CertificateResponsePropertiesOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateResponseProperties) *string { return v.Issuer }).(pulumi.StringPtrOutput)
}

// Certificate password
func (o CertificateResponsePropertiesOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateResponseProperties) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Pfx blob
func (o CertificateResponsePropertiesOutput) PfxBlob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateResponseProperties) *string { return v.PfxBlob }).(pulumi.StringPtrOutput)
}

// Public key hash
func (o CertificateResponsePropertiesOutput) PublicKeyHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateResponseProperties) *string { return v.PublicKeyHash }).(pulumi.StringPtrOutput)
}

// Self link
func (o CertificateResponsePropertiesOutput) SelfLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateResponseProperties) *string { return v.SelfLink }).(pulumi.StringPtrOutput)
}

// App name
func (o CertificateResponsePropertiesOutput) SiteName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateResponseProperties) *string { return v.SiteName }).(pulumi.StringPtrOutput)
}

// Subject name of the certificate
func (o CertificateResponsePropertiesOutput) SubjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateResponseProperties) *string { return v.SubjectName }).(pulumi.StringPtrOutput)
}

// Certificate thumbprint
func (o CertificateResponsePropertiesOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateResponseProperties) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

// Is the certificate valid?
func (o CertificateResponsePropertiesOutput) Valid() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateResponseProperties) *bool { return v.Valid }).(pulumi.BoolPtrOutput)
}

type CertificateResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (CertificateResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateResponseProperties)(nil)).Elem()
}

func (o CertificateResponsePropertiesPtrOutput) ToCertificateResponsePropertiesPtrOutput() CertificateResponsePropertiesPtrOutput {
	return o
}

func (o CertificateResponsePropertiesPtrOutput) ToCertificateResponsePropertiesPtrOutputWithContext(ctx context.Context) CertificateResponsePropertiesPtrOutput {
	return o
}

func (o CertificateResponsePropertiesPtrOutput) Elem() CertificateResponsePropertiesOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) CertificateResponseProperties { return *v }).(CertificateResponsePropertiesOutput)
}

// Raw bytes of .cer file
func (o CertificateResponsePropertiesPtrOutput) CerBlob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.CerBlob
	}).(pulumi.StringPtrOutput)
}

// Certificate expiration date
func (o CertificateResponsePropertiesPtrOutput) ExpirationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.ExpirationDate
	}).(pulumi.StringPtrOutput)
}

// Friendly name of the certificate
func (o CertificateResponsePropertiesPtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// Host names the certificate applies to
func (o CertificateResponsePropertiesPtrOutput) HostNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) []string {
		if v == nil {
			return nil
		}
		return v.HostNames
	}).(pulumi.StringArrayOutput)
}

// Specification for the hosting environment (App Service Environment) to use for the certificate
func (o CertificateResponsePropertiesPtrOutput) HostingEnvironmentProfile() HostingEnvironmentProfileResponsePtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *HostingEnvironmentProfileResponse {
		if v == nil {
			return nil
		}
		return v.HostingEnvironmentProfile
	}).(HostingEnvironmentProfileResponsePtrOutput)
}

// Certificate issue Date
func (o CertificateResponsePropertiesPtrOutput) IssueDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.IssueDate
	}).(pulumi.StringPtrOutput)
}

// Certificate issuer
func (o CertificateResponsePropertiesPtrOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Issuer
	}).(pulumi.StringPtrOutput)
}

// Certificate password
func (o CertificateResponsePropertiesPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Pfx blob
func (o CertificateResponsePropertiesPtrOutput) PfxBlob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.PfxBlob
	}).(pulumi.StringPtrOutput)
}

// Public key hash
func (o CertificateResponsePropertiesPtrOutput) PublicKeyHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicKeyHash
	}).(pulumi.StringPtrOutput)
}

// Self link
func (o CertificateResponsePropertiesPtrOutput) SelfLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.SelfLink
	}).(pulumi.StringPtrOutput)
}

// App name
func (o CertificateResponsePropertiesPtrOutput) SiteName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.SiteName
	}).(pulumi.StringPtrOutput)
}

// Subject name of the certificate
func (o CertificateResponsePropertiesPtrOutput) SubjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.SubjectName
	}).(pulumi.StringPtrOutput)
}

// Certificate thumbprint
func (o CertificateResponsePropertiesPtrOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Thumbprint
	}).(pulumi.StringPtrOutput)
}

// Is the certificate valid?
func (o CertificateResponsePropertiesPtrOutput) Valid() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Valid
	}).(pulumi.BoolPtrOutput)
}

// Represents information needed for cloning operation
type CloningInfo struct {
	// Application settings overrides for cloned web app. If specified these settings will override the settings cloned
	//             from source web app. If not specified, application settings from source web app are retained.
	AppSettingsOverrides map[string]string `pulumi:"appSettingsOverrides"`
	// If true, clone custom hostnames from source web app
	CloneCustomHostNames *bool `pulumi:"cloneCustomHostNames"`
	// Clone source control from source web app
	CloneSourceControl *bool `pulumi:"cloneSourceControl"`
	// If specified configure load balancing for source and clone site
	ConfigureLoadBalancing *bool `pulumi:"configureLoadBalancing"`
	// Correlation Id of cloning operation. This id ties multiple cloning operations
	//             together to use the same snapshot
	CorrelationId *string `pulumi:"correlationId"`
	// Hosting environment
	HostingEnvironment *string `pulumi:"hostingEnvironment"`
	// Overwrite destination web app
	Overwrite *bool `pulumi:"overwrite"`
	// ARM resource id of the source web app. Web app resource id is of the form
	//             /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and
	//             /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots
	SourceWebAppId *string `pulumi:"sourceWebAppId"`
	// ARM resource id of the traffic manager profile to use if it exists. Traffic manager resource id is of the form
	//             /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}
	TrafficManagerProfileId *string `pulumi:"trafficManagerProfileId"`
	// Name of traffic manager profile to create. This is only needed if traffic manager profile does not already exist
	TrafficManagerProfileName *string `pulumi:"trafficManagerProfileName"`
}

// CloningInfoInput is an input type that accepts CloningInfoArgs and CloningInfoOutput values.
// You can construct a concrete instance of `CloningInfoInput` via:
//
//          CloningInfoArgs{...}
type CloningInfoInput interface {
	pulumi.Input

	ToCloningInfoOutput() CloningInfoOutput
	ToCloningInfoOutputWithContext(context.Context) CloningInfoOutput
}

// Represents information needed for cloning operation
type CloningInfoArgs struct {
	// Application settings overrides for cloned web app. If specified these settings will override the settings cloned
	//             from source web app. If not specified, application settings from source web app are retained.
	AppSettingsOverrides pulumi.StringMapInput `pulumi:"appSettingsOverrides"`
	// If true, clone custom hostnames from source web app
	CloneCustomHostNames pulumi.BoolPtrInput `pulumi:"cloneCustomHostNames"`
	// Clone source control from source web app
	CloneSourceControl pulumi.BoolPtrInput `pulumi:"cloneSourceControl"`
	// If specified configure load balancing for source and clone site
	ConfigureLoadBalancing pulumi.BoolPtrInput `pulumi:"configureLoadBalancing"`
	// Correlation Id of cloning operation. This id ties multiple cloning operations
	//             together to use the same snapshot
	CorrelationId pulumi.StringPtrInput `pulumi:"correlationId"`
	// Hosting environment
	HostingEnvironment pulumi.StringPtrInput `pulumi:"hostingEnvironment"`
	// Overwrite destination web app
	Overwrite pulumi.BoolPtrInput `pulumi:"overwrite"`
	// ARM resource id of the source web app. Web app resource id is of the form
	//             /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and
	//             /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots
	SourceWebAppId pulumi.StringPtrInput `pulumi:"sourceWebAppId"`
	// ARM resource id of the traffic manager profile to use if it exists. Traffic manager resource id is of the form
	//             /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}
	TrafficManagerProfileId pulumi.StringPtrInput `pulumi:"trafficManagerProfileId"`
	// Name of traffic manager profile to create. This is only needed if traffic manager profile does not already exist
	TrafficManagerProfileName pulumi.StringPtrInput `pulumi:"trafficManagerProfileName"`
}

func (CloningInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloningInfo)(nil)).Elem()
}

func (i CloningInfoArgs) ToCloningInfoOutput() CloningInfoOutput {
	return i.ToCloningInfoOutputWithContext(context.Background())
}

func (i CloningInfoArgs) ToCloningInfoOutputWithContext(ctx context.Context) CloningInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloningInfoOutput)
}

func (i CloningInfoArgs) ToCloningInfoPtrOutput() CloningInfoPtrOutput {
	return i.ToCloningInfoPtrOutputWithContext(context.Background())
}

func (i CloningInfoArgs) ToCloningInfoPtrOutputWithContext(ctx context.Context) CloningInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloningInfoOutput).ToCloningInfoPtrOutputWithContext(ctx)
}

// CloningInfoPtrInput is an input type that accepts CloningInfoArgs, CloningInfoPtr and CloningInfoPtrOutput values.
// You can construct a concrete instance of `CloningInfoPtrInput` via:
//
//          CloningInfoArgs{...}
//
//  or:
//
//          nil
type CloningInfoPtrInput interface {
	pulumi.Input

	ToCloningInfoPtrOutput() CloningInfoPtrOutput
	ToCloningInfoPtrOutputWithContext(context.Context) CloningInfoPtrOutput
}

type cloningInfoPtrType CloningInfoArgs

func CloningInfoPtr(v *CloningInfoArgs) CloningInfoPtrInput {
	return (*cloningInfoPtrType)(v)
}

func (*cloningInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloningInfo)(nil)).Elem()
}

func (i *cloningInfoPtrType) ToCloningInfoPtrOutput() CloningInfoPtrOutput {
	return i.ToCloningInfoPtrOutputWithContext(context.Background())
}

func (i *cloningInfoPtrType) ToCloningInfoPtrOutputWithContext(ctx context.Context) CloningInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloningInfoPtrOutput)
}

// Represents information needed for cloning operation
type CloningInfoOutput struct{ *pulumi.OutputState }

func (CloningInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloningInfo)(nil)).Elem()
}

func (o CloningInfoOutput) ToCloningInfoOutput() CloningInfoOutput {
	return o
}

func (o CloningInfoOutput) ToCloningInfoOutputWithContext(ctx context.Context) CloningInfoOutput {
	return o
}

func (o CloningInfoOutput) ToCloningInfoPtrOutput() CloningInfoPtrOutput {
	return o.ToCloningInfoPtrOutputWithContext(context.Background())
}

func (o CloningInfoOutput) ToCloningInfoPtrOutputWithContext(ctx context.Context) CloningInfoPtrOutput {
	return o.ApplyT(func(v CloningInfo) *CloningInfo {
		return &v
	}).(CloningInfoPtrOutput)
}

// Application settings overrides for cloned web app. If specified these settings will override the settings cloned
//             from source web app. If not specified, application settings from source web app are retained.
func (o CloningInfoOutput) AppSettingsOverrides() pulumi.StringMapOutput {
	return o.ApplyT(func(v CloningInfo) map[string]string { return v.AppSettingsOverrides }).(pulumi.StringMapOutput)
}

// If true, clone custom hostnames from source web app
func (o CloningInfoOutput) CloneCustomHostNames() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloningInfo) *bool { return v.CloneCustomHostNames }).(pulumi.BoolPtrOutput)
}

// Clone source control from source web app
func (o CloningInfoOutput) CloneSourceControl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloningInfo) *bool { return v.CloneSourceControl }).(pulumi.BoolPtrOutput)
}

// If specified configure load balancing for source and clone site
func (o CloningInfoOutput) ConfigureLoadBalancing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloningInfo) *bool { return v.ConfigureLoadBalancing }).(pulumi.BoolPtrOutput)
}

// Correlation Id of cloning operation. This id ties multiple cloning operations
//             together to use the same snapshot
func (o CloningInfoOutput) CorrelationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfo) *string { return v.CorrelationId }).(pulumi.StringPtrOutput)
}

// Hosting environment
func (o CloningInfoOutput) HostingEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfo) *string { return v.HostingEnvironment }).(pulumi.StringPtrOutput)
}

// Overwrite destination web app
func (o CloningInfoOutput) Overwrite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloningInfo) *bool { return v.Overwrite }).(pulumi.BoolPtrOutput)
}

// ARM resource id of the source web app. Web app resource id is of the form
//             /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and
//             /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots
func (o CloningInfoOutput) SourceWebAppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfo) *string { return v.SourceWebAppId }).(pulumi.StringPtrOutput)
}

// ARM resource id of the traffic manager profile to use if it exists. Traffic manager resource id is of the form
//             /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}
func (o CloningInfoOutput) TrafficManagerProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfo) *string { return v.TrafficManagerProfileId }).(pulumi.StringPtrOutput)
}

// Name of traffic manager profile to create. This is only needed if traffic manager profile does not already exist
func (o CloningInfoOutput) TrafficManagerProfileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfo) *string { return v.TrafficManagerProfileName }).(pulumi.StringPtrOutput)
}

type CloningInfoPtrOutput struct{ *pulumi.OutputState }

func (CloningInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloningInfo)(nil)).Elem()
}

func (o CloningInfoPtrOutput) ToCloningInfoPtrOutput() CloningInfoPtrOutput {
	return o
}

func (o CloningInfoPtrOutput) ToCloningInfoPtrOutputWithContext(ctx context.Context) CloningInfoPtrOutput {
	return o
}

func (o CloningInfoPtrOutput) Elem() CloningInfoOutput {
	return o.ApplyT(func(v *CloningInfo) CloningInfo { return *v }).(CloningInfoOutput)
}

// Application settings overrides for cloned web app. If specified these settings will override the settings cloned
//             from source web app. If not specified, application settings from source web app are retained.
func (o CloningInfoPtrOutput) AppSettingsOverrides() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CloningInfo) map[string]string {
		if v == nil {
			return nil
		}
		return v.AppSettingsOverrides
	}).(pulumi.StringMapOutput)
}

// If true, clone custom hostnames from source web app
func (o CloningInfoPtrOutput) CloneCustomHostNames() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *bool {
		if v == nil {
			return nil
		}
		return v.CloneCustomHostNames
	}).(pulumi.BoolPtrOutput)
}

// Clone source control from source web app
func (o CloningInfoPtrOutput) CloneSourceControl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *bool {
		if v == nil {
			return nil
		}
		return v.CloneSourceControl
	}).(pulumi.BoolPtrOutput)
}

// If specified configure load balancing for source and clone site
func (o CloningInfoPtrOutput) ConfigureLoadBalancing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *bool {
		if v == nil {
			return nil
		}
		return v.ConfigureLoadBalancing
	}).(pulumi.BoolPtrOutput)
}

// Correlation Id of cloning operation. This id ties multiple cloning operations
//             together to use the same snapshot
func (o CloningInfoPtrOutput) CorrelationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *string {
		if v == nil {
			return nil
		}
		return v.CorrelationId
	}).(pulumi.StringPtrOutput)
}

// Hosting environment
func (o CloningInfoPtrOutput) HostingEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *string {
		if v == nil {
			return nil
		}
		return v.HostingEnvironment
	}).(pulumi.StringPtrOutput)
}

// Overwrite destination web app
func (o CloningInfoPtrOutput) Overwrite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *bool {
		if v == nil {
			return nil
		}
		return v.Overwrite
	}).(pulumi.BoolPtrOutput)
}

// ARM resource id of the source web app. Web app resource id is of the form
//             /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and
//             /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots
func (o CloningInfoPtrOutput) SourceWebAppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *string {
		if v == nil {
			return nil
		}
		return v.SourceWebAppId
	}).(pulumi.StringPtrOutput)
}

// ARM resource id of the traffic manager profile to use if it exists. Traffic manager resource id is of the form
//             /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}
func (o CloningInfoPtrOutput) TrafficManagerProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *string {
		if v == nil {
			return nil
		}
		return v.TrafficManagerProfileId
	}).(pulumi.StringPtrOutput)
}

// Name of traffic manager profile to create. This is only needed if traffic manager profile does not already exist
func (o CloningInfoPtrOutput) TrafficManagerProfileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *string {
		if v == nil {
			return nil
		}
		return v.TrafficManagerProfileName
	}).(pulumi.StringPtrOutput)
}

// Represents information needed for cloning operation
type CloningInfoResponse struct {
	// Application settings overrides for cloned web app. If specified these settings will override the settings cloned
	//             from source web app. If not specified, application settings from source web app are retained.
	AppSettingsOverrides map[string]string `pulumi:"appSettingsOverrides"`
	// If true, clone custom hostnames from source web app
	CloneCustomHostNames *bool `pulumi:"cloneCustomHostNames"`
	// Clone source control from source web app
	CloneSourceControl *bool `pulumi:"cloneSourceControl"`
	// If specified configure load balancing for source and clone site
	ConfigureLoadBalancing *bool `pulumi:"configureLoadBalancing"`
	// Correlation Id of cloning operation. This id ties multiple cloning operations
	//             together to use the same snapshot
	CorrelationId *string `pulumi:"correlationId"`
	// Hosting environment
	HostingEnvironment *string `pulumi:"hostingEnvironment"`
	// Overwrite destination web app
	Overwrite *bool `pulumi:"overwrite"`
	// ARM resource id of the source web app. Web app resource id is of the form
	//             /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and
	//             /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots
	SourceWebAppId *string `pulumi:"sourceWebAppId"`
	// ARM resource id of the traffic manager profile to use if it exists. Traffic manager resource id is of the form
	//             /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}
	TrafficManagerProfileId *string `pulumi:"trafficManagerProfileId"`
	// Name of traffic manager profile to create. This is only needed if traffic manager profile does not already exist
	TrafficManagerProfileName *string `pulumi:"trafficManagerProfileName"`
}

// CloningInfoResponseInput is an input type that accepts CloningInfoResponseArgs and CloningInfoResponseOutput values.
// You can construct a concrete instance of `CloningInfoResponseInput` via:
//
//          CloningInfoResponseArgs{...}
type CloningInfoResponseInput interface {
	pulumi.Input

	ToCloningInfoResponseOutput() CloningInfoResponseOutput
	ToCloningInfoResponseOutputWithContext(context.Context) CloningInfoResponseOutput
}

// Represents information needed for cloning operation
type CloningInfoResponseArgs struct {
	// Application settings overrides for cloned web app. If specified these settings will override the settings cloned
	//             from source web app. If not specified, application settings from source web app are retained.
	AppSettingsOverrides pulumi.StringMapInput `pulumi:"appSettingsOverrides"`
	// If true, clone custom hostnames from source web app
	CloneCustomHostNames pulumi.BoolPtrInput `pulumi:"cloneCustomHostNames"`
	// Clone source control from source web app
	CloneSourceControl pulumi.BoolPtrInput `pulumi:"cloneSourceControl"`
	// If specified configure load balancing for source and clone site
	ConfigureLoadBalancing pulumi.BoolPtrInput `pulumi:"configureLoadBalancing"`
	// Correlation Id of cloning operation. This id ties multiple cloning operations
	//             together to use the same snapshot
	CorrelationId pulumi.StringPtrInput `pulumi:"correlationId"`
	// Hosting environment
	HostingEnvironment pulumi.StringPtrInput `pulumi:"hostingEnvironment"`
	// Overwrite destination web app
	Overwrite pulumi.BoolPtrInput `pulumi:"overwrite"`
	// ARM resource id of the source web app. Web app resource id is of the form
	//             /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and
	//             /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots
	SourceWebAppId pulumi.StringPtrInput `pulumi:"sourceWebAppId"`
	// ARM resource id of the traffic manager profile to use if it exists. Traffic manager resource id is of the form
	//             /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}
	TrafficManagerProfileId pulumi.StringPtrInput `pulumi:"trafficManagerProfileId"`
	// Name of traffic manager profile to create. This is only needed if traffic manager profile does not already exist
	TrafficManagerProfileName pulumi.StringPtrInput `pulumi:"trafficManagerProfileName"`
}

func (CloningInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloningInfoResponse)(nil)).Elem()
}

func (i CloningInfoResponseArgs) ToCloningInfoResponseOutput() CloningInfoResponseOutput {
	return i.ToCloningInfoResponseOutputWithContext(context.Background())
}

func (i CloningInfoResponseArgs) ToCloningInfoResponseOutputWithContext(ctx context.Context) CloningInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloningInfoResponseOutput)
}

func (i CloningInfoResponseArgs) ToCloningInfoResponsePtrOutput() CloningInfoResponsePtrOutput {
	return i.ToCloningInfoResponsePtrOutputWithContext(context.Background())
}

func (i CloningInfoResponseArgs) ToCloningInfoResponsePtrOutputWithContext(ctx context.Context) CloningInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloningInfoResponseOutput).ToCloningInfoResponsePtrOutputWithContext(ctx)
}

// CloningInfoResponsePtrInput is an input type that accepts CloningInfoResponseArgs, CloningInfoResponsePtr and CloningInfoResponsePtrOutput values.
// You can construct a concrete instance of `CloningInfoResponsePtrInput` via:
//
//          CloningInfoResponseArgs{...}
//
//  or:
//
//          nil
type CloningInfoResponsePtrInput interface {
	pulumi.Input

	ToCloningInfoResponsePtrOutput() CloningInfoResponsePtrOutput
	ToCloningInfoResponsePtrOutputWithContext(context.Context) CloningInfoResponsePtrOutput
}

type cloningInfoResponsePtrType CloningInfoResponseArgs

func CloningInfoResponsePtr(v *CloningInfoResponseArgs) CloningInfoResponsePtrInput {
	return (*cloningInfoResponsePtrType)(v)
}

func (*cloningInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloningInfoResponse)(nil)).Elem()
}

func (i *cloningInfoResponsePtrType) ToCloningInfoResponsePtrOutput() CloningInfoResponsePtrOutput {
	return i.ToCloningInfoResponsePtrOutputWithContext(context.Background())
}

func (i *cloningInfoResponsePtrType) ToCloningInfoResponsePtrOutputWithContext(ctx context.Context) CloningInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloningInfoResponsePtrOutput)
}

// Represents information needed for cloning operation
type CloningInfoResponseOutput struct{ *pulumi.OutputState }

func (CloningInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloningInfoResponse)(nil)).Elem()
}

func (o CloningInfoResponseOutput) ToCloningInfoResponseOutput() CloningInfoResponseOutput {
	return o
}

func (o CloningInfoResponseOutput) ToCloningInfoResponseOutputWithContext(ctx context.Context) CloningInfoResponseOutput {
	return o
}

func (o CloningInfoResponseOutput) ToCloningInfoResponsePtrOutput() CloningInfoResponsePtrOutput {
	return o.ToCloningInfoResponsePtrOutputWithContext(context.Background())
}

func (o CloningInfoResponseOutput) ToCloningInfoResponsePtrOutputWithContext(ctx context.Context) CloningInfoResponsePtrOutput {
	return o.ApplyT(func(v CloningInfoResponse) *CloningInfoResponse {
		return &v
	}).(CloningInfoResponsePtrOutput)
}

// Application settings overrides for cloned web app. If specified these settings will override the settings cloned
//             from source web app. If not specified, application settings from source web app are retained.
func (o CloningInfoResponseOutput) AppSettingsOverrides() pulumi.StringMapOutput {
	return o.ApplyT(func(v CloningInfoResponse) map[string]string { return v.AppSettingsOverrides }).(pulumi.StringMapOutput)
}

// If true, clone custom hostnames from source web app
func (o CloningInfoResponseOutput) CloneCustomHostNames() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloningInfoResponse) *bool { return v.CloneCustomHostNames }).(pulumi.BoolPtrOutput)
}

// Clone source control from source web app
func (o CloningInfoResponseOutput) CloneSourceControl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloningInfoResponse) *bool { return v.CloneSourceControl }).(pulumi.BoolPtrOutput)
}

// If specified configure load balancing for source and clone site
func (o CloningInfoResponseOutput) ConfigureLoadBalancing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloningInfoResponse) *bool { return v.ConfigureLoadBalancing }).(pulumi.BoolPtrOutput)
}

// Correlation Id of cloning operation. This id ties multiple cloning operations
//             together to use the same snapshot
func (o CloningInfoResponseOutput) CorrelationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfoResponse) *string { return v.CorrelationId }).(pulumi.StringPtrOutput)
}

// Hosting environment
func (o CloningInfoResponseOutput) HostingEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfoResponse) *string { return v.HostingEnvironment }).(pulumi.StringPtrOutput)
}

// Overwrite destination web app
func (o CloningInfoResponseOutput) Overwrite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloningInfoResponse) *bool { return v.Overwrite }).(pulumi.BoolPtrOutput)
}

// ARM resource id of the source web app. Web app resource id is of the form
//             /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and
//             /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots
func (o CloningInfoResponseOutput) SourceWebAppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfoResponse) *string { return v.SourceWebAppId }).(pulumi.StringPtrOutput)
}

// ARM resource id of the traffic manager profile to use if it exists. Traffic manager resource id is of the form
//             /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}
func (o CloningInfoResponseOutput) TrafficManagerProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfoResponse) *string { return v.TrafficManagerProfileId }).(pulumi.StringPtrOutput)
}

// Name of traffic manager profile to create. This is only needed if traffic manager profile does not already exist
func (o CloningInfoResponseOutput) TrafficManagerProfileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfoResponse) *string { return v.TrafficManagerProfileName }).(pulumi.StringPtrOutput)
}

type CloningInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (CloningInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloningInfoResponse)(nil)).Elem()
}

func (o CloningInfoResponsePtrOutput) ToCloningInfoResponsePtrOutput() CloningInfoResponsePtrOutput {
	return o
}

func (o CloningInfoResponsePtrOutput) ToCloningInfoResponsePtrOutputWithContext(ctx context.Context) CloningInfoResponsePtrOutput {
	return o
}

func (o CloningInfoResponsePtrOutput) Elem() CloningInfoResponseOutput {
	return o.ApplyT(func(v *CloningInfoResponse) CloningInfoResponse { return *v }).(CloningInfoResponseOutput)
}

// Application settings overrides for cloned web app. If specified these settings will override the settings cloned
//             from source web app. If not specified, application settings from source web app are retained.
func (o CloningInfoResponsePtrOutput) AppSettingsOverrides() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CloningInfoResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.AppSettingsOverrides
	}).(pulumi.StringMapOutput)
}

// If true, clone custom hostnames from source web app
func (o CloningInfoResponsePtrOutput) CloneCustomHostNames() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloningInfoResponse) *bool {
		if v == nil {
			return nil
		}
		return v.CloneCustomHostNames
	}).(pulumi.BoolPtrOutput)
}

// Clone source control from source web app
func (o CloningInfoResponsePtrOutput) CloneSourceControl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloningInfoResponse) *bool {
		if v == nil {
			return nil
		}
		return v.CloneSourceControl
	}).(pulumi.BoolPtrOutput)
}

// If specified configure load balancing for source and clone site
func (o CloningInfoResponsePtrOutput) ConfigureLoadBalancing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloningInfoResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ConfigureLoadBalancing
	}).(pulumi.BoolPtrOutput)
}

// Correlation Id of cloning operation. This id ties multiple cloning operations
//             together to use the same snapshot
func (o CloningInfoResponsePtrOutput) CorrelationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.CorrelationId
	}).(pulumi.StringPtrOutput)
}

// Hosting environment
func (o CloningInfoResponsePtrOutput) HostingEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.HostingEnvironment
	}).(pulumi.StringPtrOutput)
}

// Overwrite destination web app
func (o CloningInfoResponsePtrOutput) Overwrite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloningInfoResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Overwrite
	}).(pulumi.BoolPtrOutput)
}

// ARM resource id of the source web app. Web app resource id is of the form
//             /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and
//             /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots
func (o CloningInfoResponsePtrOutput) SourceWebAppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.SourceWebAppId
	}).(pulumi.StringPtrOutput)
}

// ARM resource id of the traffic manager profile to use if it exists. Traffic manager resource id is of the form
//             /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}
func (o CloningInfoResponsePtrOutput) TrafficManagerProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.TrafficManagerProfileId
	}).(pulumi.StringPtrOutput)
}

// Name of traffic manager profile to create. This is only needed if traffic manager profile does not already exist
func (o CloningInfoResponsePtrOutput) TrafficManagerProfileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.TrafficManagerProfileName
	}).(pulumi.StringPtrOutput)
}

// Represents database connection string information
type ConnStringInfo struct {
	// Connection string value
	ConnectionString *string `pulumi:"connectionString"`
	// Name of connection string
	Name *string `pulumi:"name"`
	// Type of database
	Type string `pulumi:"type"`
}

// ConnStringInfoInput is an input type that accepts ConnStringInfoArgs and ConnStringInfoOutput values.
// You can construct a concrete instance of `ConnStringInfoInput` via:
//
//          ConnStringInfoArgs{...}
type ConnStringInfoInput interface {
	pulumi.Input

	ToConnStringInfoOutput() ConnStringInfoOutput
	ToConnStringInfoOutputWithContext(context.Context) ConnStringInfoOutput
}

// Represents database connection string information
type ConnStringInfoArgs struct {
	// Connection string value
	ConnectionString pulumi.StringPtrInput `pulumi:"connectionString"`
	// Name of connection string
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Type of database
	Type pulumi.StringInput `pulumi:"type"`
}

func (ConnStringInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnStringInfo)(nil)).Elem()
}

func (i ConnStringInfoArgs) ToConnStringInfoOutput() ConnStringInfoOutput {
	return i.ToConnStringInfoOutputWithContext(context.Background())
}

func (i ConnStringInfoArgs) ToConnStringInfoOutputWithContext(ctx context.Context) ConnStringInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnStringInfoOutput)
}

// ConnStringInfoArrayInput is an input type that accepts ConnStringInfoArray and ConnStringInfoArrayOutput values.
// You can construct a concrete instance of `ConnStringInfoArrayInput` via:
//
//          ConnStringInfoArray{ ConnStringInfoArgs{...} }
type ConnStringInfoArrayInput interface {
	pulumi.Input

	ToConnStringInfoArrayOutput() ConnStringInfoArrayOutput
	ToConnStringInfoArrayOutputWithContext(context.Context) ConnStringInfoArrayOutput
}

type ConnStringInfoArray []ConnStringInfoInput

func (ConnStringInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnStringInfo)(nil)).Elem()
}

func (i ConnStringInfoArray) ToConnStringInfoArrayOutput() ConnStringInfoArrayOutput {
	return i.ToConnStringInfoArrayOutputWithContext(context.Background())
}

func (i ConnStringInfoArray) ToConnStringInfoArrayOutputWithContext(ctx context.Context) ConnStringInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnStringInfoArrayOutput)
}

// Represents database connection string information
type ConnStringInfoOutput struct{ *pulumi.OutputState }

func (ConnStringInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnStringInfo)(nil)).Elem()
}

func (o ConnStringInfoOutput) ToConnStringInfoOutput() ConnStringInfoOutput {
	return o
}

func (o ConnStringInfoOutput) ToConnStringInfoOutputWithContext(ctx context.Context) ConnStringInfoOutput {
	return o
}

// Connection string value
func (o ConnStringInfoOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnStringInfo) *string { return v.ConnectionString }).(pulumi.StringPtrOutput)
}

// Name of connection string
func (o ConnStringInfoOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnStringInfo) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Type of database
func (o ConnStringInfoOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ConnStringInfo) string { return v.Type }).(pulumi.StringOutput)
}

type ConnStringInfoArrayOutput struct{ *pulumi.OutputState }

func (ConnStringInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnStringInfo)(nil)).Elem()
}

func (o ConnStringInfoArrayOutput) ToConnStringInfoArrayOutput() ConnStringInfoArrayOutput {
	return o
}

func (o ConnStringInfoArrayOutput) ToConnStringInfoArrayOutputWithContext(ctx context.Context) ConnStringInfoArrayOutput {
	return o
}

func (o ConnStringInfoArrayOutput) Index(i pulumi.IntInput) ConnStringInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnStringInfo {
		return vs[0].([]ConnStringInfo)[vs[1].(int)]
	}).(ConnStringInfoOutput)
}

// Represents database connection string information
type ConnStringInfoResponse struct {
	// Connection string value
	ConnectionString *string `pulumi:"connectionString"`
	// Name of connection string
	Name *string `pulumi:"name"`
	// Type of database
	Type string `pulumi:"type"`
}

// ConnStringInfoResponseInput is an input type that accepts ConnStringInfoResponseArgs and ConnStringInfoResponseOutput values.
// You can construct a concrete instance of `ConnStringInfoResponseInput` via:
//
//          ConnStringInfoResponseArgs{...}
type ConnStringInfoResponseInput interface {
	pulumi.Input

	ToConnStringInfoResponseOutput() ConnStringInfoResponseOutput
	ToConnStringInfoResponseOutputWithContext(context.Context) ConnStringInfoResponseOutput
}

// Represents database connection string information
type ConnStringInfoResponseArgs struct {
	// Connection string value
	ConnectionString pulumi.StringPtrInput `pulumi:"connectionString"`
	// Name of connection string
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Type of database
	Type pulumi.StringInput `pulumi:"type"`
}

func (ConnStringInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnStringInfoResponse)(nil)).Elem()
}

func (i ConnStringInfoResponseArgs) ToConnStringInfoResponseOutput() ConnStringInfoResponseOutput {
	return i.ToConnStringInfoResponseOutputWithContext(context.Background())
}

func (i ConnStringInfoResponseArgs) ToConnStringInfoResponseOutputWithContext(ctx context.Context) ConnStringInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnStringInfoResponseOutput)
}

// ConnStringInfoResponseArrayInput is an input type that accepts ConnStringInfoResponseArray and ConnStringInfoResponseArrayOutput values.
// You can construct a concrete instance of `ConnStringInfoResponseArrayInput` via:
//
//          ConnStringInfoResponseArray{ ConnStringInfoResponseArgs{...} }
type ConnStringInfoResponseArrayInput interface {
	pulumi.Input

	ToConnStringInfoResponseArrayOutput() ConnStringInfoResponseArrayOutput
	ToConnStringInfoResponseArrayOutputWithContext(context.Context) ConnStringInfoResponseArrayOutput
}

type ConnStringInfoResponseArray []ConnStringInfoResponseInput

func (ConnStringInfoResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnStringInfoResponse)(nil)).Elem()
}

func (i ConnStringInfoResponseArray) ToConnStringInfoResponseArrayOutput() ConnStringInfoResponseArrayOutput {
	return i.ToConnStringInfoResponseArrayOutputWithContext(context.Background())
}

func (i ConnStringInfoResponseArray) ToConnStringInfoResponseArrayOutputWithContext(ctx context.Context) ConnStringInfoResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnStringInfoResponseArrayOutput)
}

// Represents database connection string information
type ConnStringInfoResponseOutput struct{ *pulumi.OutputState }

func (ConnStringInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnStringInfoResponse)(nil)).Elem()
}

func (o ConnStringInfoResponseOutput) ToConnStringInfoResponseOutput() ConnStringInfoResponseOutput {
	return o
}

func (o ConnStringInfoResponseOutput) ToConnStringInfoResponseOutputWithContext(ctx context.Context) ConnStringInfoResponseOutput {
	return o
}

// Connection string value
func (o ConnStringInfoResponseOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnStringInfoResponse) *string { return v.ConnectionString }).(pulumi.StringPtrOutput)
}

// Name of connection string
func (o ConnStringInfoResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnStringInfoResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Type of database
func (o ConnStringInfoResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ConnStringInfoResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ConnStringInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnStringInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnStringInfoResponse)(nil)).Elem()
}

func (o ConnStringInfoResponseArrayOutput) ToConnStringInfoResponseArrayOutput() ConnStringInfoResponseArrayOutput {
	return o
}

func (o ConnStringInfoResponseArrayOutput) ToConnStringInfoResponseArrayOutputWithContext(ctx context.Context) ConnStringInfoResponseArrayOutput {
	return o
}

func (o ConnStringInfoResponseArrayOutput) Index(i pulumi.IntInput) ConnStringInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnStringInfoResponse {
		return vs[0].([]ConnStringInfoResponse)[vs[1].(int)]
	}).(ConnStringInfoResponseOutput)
}

// Cross-Origin Resource Sharing (CORS) settings for the web app.
type CorsSettings struct {
	// Gets or sets the list of origins that should be allowed to make cross-origin
	//             calls (for example: http://example.com:12345). Use "*" to allow all.
	AllowedOrigins []string `pulumi:"allowedOrigins"`
}

// CorsSettingsInput is an input type that accepts CorsSettingsArgs and CorsSettingsOutput values.
// You can construct a concrete instance of `CorsSettingsInput` via:
//
//          CorsSettingsArgs{...}
type CorsSettingsInput interface {
	pulumi.Input

	ToCorsSettingsOutput() CorsSettingsOutput
	ToCorsSettingsOutputWithContext(context.Context) CorsSettingsOutput
}

// Cross-Origin Resource Sharing (CORS) settings for the web app.
type CorsSettingsArgs struct {
	// Gets or sets the list of origins that should be allowed to make cross-origin
	//             calls (for example: http://example.com:12345). Use "*" to allow all.
	AllowedOrigins pulumi.StringArrayInput `pulumi:"allowedOrigins"`
}

func (CorsSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsSettings)(nil)).Elem()
}

func (i CorsSettingsArgs) ToCorsSettingsOutput() CorsSettingsOutput {
	return i.ToCorsSettingsOutputWithContext(context.Background())
}

func (i CorsSettingsArgs) ToCorsSettingsOutputWithContext(ctx context.Context) CorsSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsSettingsOutput)
}

func (i CorsSettingsArgs) ToCorsSettingsPtrOutput() CorsSettingsPtrOutput {
	return i.ToCorsSettingsPtrOutputWithContext(context.Background())
}

func (i CorsSettingsArgs) ToCorsSettingsPtrOutputWithContext(ctx context.Context) CorsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsSettingsOutput).ToCorsSettingsPtrOutputWithContext(ctx)
}

// CorsSettingsPtrInput is an input type that accepts CorsSettingsArgs, CorsSettingsPtr and CorsSettingsPtrOutput values.
// You can construct a concrete instance of `CorsSettingsPtrInput` via:
//
//          CorsSettingsArgs{...}
//
//  or:
//
//          nil
type CorsSettingsPtrInput interface {
	pulumi.Input

	ToCorsSettingsPtrOutput() CorsSettingsPtrOutput
	ToCorsSettingsPtrOutputWithContext(context.Context) CorsSettingsPtrOutput
}

type corsSettingsPtrType CorsSettingsArgs

func CorsSettingsPtr(v *CorsSettingsArgs) CorsSettingsPtrInput {
	return (*corsSettingsPtrType)(v)
}

func (*corsSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CorsSettings)(nil)).Elem()
}

func (i *corsSettingsPtrType) ToCorsSettingsPtrOutput() CorsSettingsPtrOutput {
	return i.ToCorsSettingsPtrOutputWithContext(context.Background())
}

func (i *corsSettingsPtrType) ToCorsSettingsPtrOutputWithContext(ctx context.Context) CorsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsSettingsPtrOutput)
}

// Cross-Origin Resource Sharing (CORS) settings for the web app.
type CorsSettingsOutput struct{ *pulumi.OutputState }

func (CorsSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsSettings)(nil)).Elem()
}

func (o CorsSettingsOutput) ToCorsSettingsOutput() CorsSettingsOutput {
	return o
}

func (o CorsSettingsOutput) ToCorsSettingsOutputWithContext(ctx context.Context) CorsSettingsOutput {
	return o
}

func (o CorsSettingsOutput) ToCorsSettingsPtrOutput() CorsSettingsPtrOutput {
	return o.ToCorsSettingsPtrOutputWithContext(context.Background())
}

func (o CorsSettingsOutput) ToCorsSettingsPtrOutputWithContext(ctx context.Context) CorsSettingsPtrOutput {
	return o.ApplyT(func(v CorsSettings) *CorsSettings {
		return &v
	}).(CorsSettingsPtrOutput)
}

// Gets or sets the list of origins that should be allowed to make cross-origin
//             calls (for example: http://example.com:12345). Use "*" to allow all.
func (o CorsSettingsOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CorsSettings) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

type CorsSettingsPtrOutput struct{ *pulumi.OutputState }

func (CorsSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CorsSettings)(nil)).Elem()
}

func (o CorsSettingsPtrOutput) ToCorsSettingsPtrOutput() CorsSettingsPtrOutput {
	return o
}

func (o CorsSettingsPtrOutput) ToCorsSettingsPtrOutputWithContext(ctx context.Context) CorsSettingsPtrOutput {
	return o
}

func (o CorsSettingsPtrOutput) Elem() CorsSettingsOutput {
	return o.ApplyT(func(v *CorsSettings) CorsSettings { return *v }).(CorsSettingsOutput)
}

// Gets or sets the list of origins that should be allowed to make cross-origin
//             calls (for example: http://example.com:12345). Use "*" to allow all.
func (o CorsSettingsPtrOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CorsSettings) []string {
		if v == nil {
			return nil
		}
		return v.AllowedOrigins
	}).(pulumi.StringArrayOutput)
}

// Cross-Origin Resource Sharing (CORS) settings for the web app.
type CorsSettingsResponse struct {
	// Gets or sets the list of origins that should be allowed to make cross-origin
	//             calls (for example: http://example.com:12345). Use "*" to allow all.
	AllowedOrigins []string `pulumi:"allowedOrigins"`
}

// CorsSettingsResponseInput is an input type that accepts CorsSettingsResponseArgs and CorsSettingsResponseOutput values.
// You can construct a concrete instance of `CorsSettingsResponseInput` via:
//
//          CorsSettingsResponseArgs{...}
type CorsSettingsResponseInput interface {
	pulumi.Input

	ToCorsSettingsResponseOutput() CorsSettingsResponseOutput
	ToCorsSettingsResponseOutputWithContext(context.Context) CorsSettingsResponseOutput
}

// Cross-Origin Resource Sharing (CORS) settings for the web app.
type CorsSettingsResponseArgs struct {
	// Gets or sets the list of origins that should be allowed to make cross-origin
	//             calls (for example: http://example.com:12345). Use "*" to allow all.
	AllowedOrigins pulumi.StringArrayInput `pulumi:"allowedOrigins"`
}

func (CorsSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsSettingsResponse)(nil)).Elem()
}

func (i CorsSettingsResponseArgs) ToCorsSettingsResponseOutput() CorsSettingsResponseOutput {
	return i.ToCorsSettingsResponseOutputWithContext(context.Background())
}

func (i CorsSettingsResponseArgs) ToCorsSettingsResponseOutputWithContext(ctx context.Context) CorsSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsSettingsResponseOutput)
}

func (i CorsSettingsResponseArgs) ToCorsSettingsResponsePtrOutput() CorsSettingsResponsePtrOutput {
	return i.ToCorsSettingsResponsePtrOutputWithContext(context.Background())
}

func (i CorsSettingsResponseArgs) ToCorsSettingsResponsePtrOutputWithContext(ctx context.Context) CorsSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsSettingsResponseOutput).ToCorsSettingsResponsePtrOutputWithContext(ctx)
}

// CorsSettingsResponsePtrInput is an input type that accepts CorsSettingsResponseArgs, CorsSettingsResponsePtr and CorsSettingsResponsePtrOutput values.
// You can construct a concrete instance of `CorsSettingsResponsePtrInput` via:
//
//          CorsSettingsResponseArgs{...}
//
//  or:
//
//          nil
type CorsSettingsResponsePtrInput interface {
	pulumi.Input

	ToCorsSettingsResponsePtrOutput() CorsSettingsResponsePtrOutput
	ToCorsSettingsResponsePtrOutputWithContext(context.Context) CorsSettingsResponsePtrOutput
}

type corsSettingsResponsePtrType CorsSettingsResponseArgs

func CorsSettingsResponsePtr(v *CorsSettingsResponseArgs) CorsSettingsResponsePtrInput {
	return (*corsSettingsResponsePtrType)(v)
}

func (*corsSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CorsSettingsResponse)(nil)).Elem()
}

func (i *corsSettingsResponsePtrType) ToCorsSettingsResponsePtrOutput() CorsSettingsResponsePtrOutput {
	return i.ToCorsSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *corsSettingsResponsePtrType) ToCorsSettingsResponsePtrOutputWithContext(ctx context.Context) CorsSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsSettingsResponsePtrOutput)
}

// Cross-Origin Resource Sharing (CORS) settings for the web app.
type CorsSettingsResponseOutput struct{ *pulumi.OutputState }

func (CorsSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsSettingsResponse)(nil)).Elem()
}

func (o CorsSettingsResponseOutput) ToCorsSettingsResponseOutput() CorsSettingsResponseOutput {
	return o
}

func (o CorsSettingsResponseOutput) ToCorsSettingsResponseOutputWithContext(ctx context.Context) CorsSettingsResponseOutput {
	return o
}

func (o CorsSettingsResponseOutput) ToCorsSettingsResponsePtrOutput() CorsSettingsResponsePtrOutput {
	return o.ToCorsSettingsResponsePtrOutputWithContext(context.Background())
}

func (o CorsSettingsResponseOutput) ToCorsSettingsResponsePtrOutputWithContext(ctx context.Context) CorsSettingsResponsePtrOutput {
	return o.ApplyT(func(v CorsSettingsResponse) *CorsSettingsResponse {
		return &v
	}).(CorsSettingsResponsePtrOutput)
}

// Gets or sets the list of origins that should be allowed to make cross-origin
//             calls (for example: http://example.com:12345). Use "*" to allow all.
func (o CorsSettingsResponseOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CorsSettingsResponse) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

type CorsSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (CorsSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CorsSettingsResponse)(nil)).Elem()
}

func (o CorsSettingsResponsePtrOutput) ToCorsSettingsResponsePtrOutput() CorsSettingsResponsePtrOutput {
	return o
}

func (o CorsSettingsResponsePtrOutput) ToCorsSettingsResponsePtrOutputWithContext(ctx context.Context) CorsSettingsResponsePtrOutput {
	return o
}

func (o CorsSettingsResponsePtrOutput) Elem() CorsSettingsResponseOutput {
	return o.ApplyT(func(v *CorsSettingsResponse) CorsSettingsResponse { return *v }).(CorsSettingsResponseOutput)
}

// Gets or sets the list of origins that should be allowed to make cross-origin
//             calls (for example: http://example.com:12345). Use "*" to allow all.
func (o CorsSettingsResponsePtrOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CorsSettingsResponse) []string {
		if v == nil {
			return nil
		}
		return v.AllowedOrigins
	}).(pulumi.StringArrayOutput)
}

type CsrProperties struct {
	// Actual CSR string created
	CsrString *string `pulumi:"csrString"`
	// Distinguished name of certificate to be created
	DistinguishedName *string `pulumi:"distinguishedName"`
	// Hosting environment
	HostingEnvironment *string `pulumi:"hostingEnvironment"`
	// Name used to locate CSR object
	Name *string `pulumi:"name"`
	// PFX password
	Password *string `pulumi:"password"`
	// PFX certificate of created certificate
	PfxBlob *string `pulumi:"pfxBlob"`
	// Hash of the certificates public key
	PublicKeyHash *string `pulumi:"publicKeyHash"`
}

// CsrPropertiesInput is an input type that accepts CsrPropertiesArgs and CsrPropertiesOutput values.
// You can construct a concrete instance of `CsrPropertiesInput` via:
//
//          CsrPropertiesArgs{...}
type CsrPropertiesInput interface {
	pulumi.Input

	ToCsrPropertiesOutput() CsrPropertiesOutput
	ToCsrPropertiesOutputWithContext(context.Context) CsrPropertiesOutput
}

type CsrPropertiesArgs struct {
	// Actual CSR string created
	CsrString pulumi.StringPtrInput `pulumi:"csrString"`
	// Distinguished name of certificate to be created
	DistinguishedName pulumi.StringPtrInput `pulumi:"distinguishedName"`
	// Hosting environment
	HostingEnvironment pulumi.StringPtrInput `pulumi:"hostingEnvironment"`
	// Name used to locate CSR object
	Name pulumi.StringPtrInput `pulumi:"name"`
	// PFX password
	Password pulumi.StringPtrInput `pulumi:"password"`
	// PFX certificate of created certificate
	PfxBlob pulumi.StringPtrInput `pulumi:"pfxBlob"`
	// Hash of the certificates public key
	PublicKeyHash pulumi.StringPtrInput `pulumi:"publicKeyHash"`
}

func (CsrPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CsrProperties)(nil)).Elem()
}

func (i CsrPropertiesArgs) ToCsrPropertiesOutput() CsrPropertiesOutput {
	return i.ToCsrPropertiesOutputWithContext(context.Background())
}

func (i CsrPropertiesArgs) ToCsrPropertiesOutputWithContext(ctx context.Context) CsrPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CsrPropertiesOutput)
}

func (i CsrPropertiesArgs) ToCsrPropertiesPtrOutput() CsrPropertiesPtrOutput {
	return i.ToCsrPropertiesPtrOutputWithContext(context.Background())
}

func (i CsrPropertiesArgs) ToCsrPropertiesPtrOutputWithContext(ctx context.Context) CsrPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CsrPropertiesOutput).ToCsrPropertiesPtrOutputWithContext(ctx)
}

// CsrPropertiesPtrInput is an input type that accepts CsrPropertiesArgs, CsrPropertiesPtr and CsrPropertiesPtrOutput values.
// You can construct a concrete instance of `CsrPropertiesPtrInput` via:
//
//          CsrPropertiesArgs{...}
//
//  or:
//
//          nil
type CsrPropertiesPtrInput interface {
	pulumi.Input

	ToCsrPropertiesPtrOutput() CsrPropertiesPtrOutput
	ToCsrPropertiesPtrOutputWithContext(context.Context) CsrPropertiesPtrOutput
}

type csrPropertiesPtrType CsrPropertiesArgs

func CsrPropertiesPtr(v *CsrPropertiesArgs) CsrPropertiesPtrInput {
	return (*csrPropertiesPtrType)(v)
}

func (*csrPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CsrProperties)(nil)).Elem()
}

func (i *csrPropertiesPtrType) ToCsrPropertiesPtrOutput() CsrPropertiesPtrOutput {
	return i.ToCsrPropertiesPtrOutputWithContext(context.Background())
}

func (i *csrPropertiesPtrType) ToCsrPropertiesPtrOutputWithContext(ctx context.Context) CsrPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CsrPropertiesPtrOutput)
}

type CsrPropertiesOutput struct{ *pulumi.OutputState }

func (CsrPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CsrProperties)(nil)).Elem()
}

func (o CsrPropertiesOutput) ToCsrPropertiesOutput() CsrPropertiesOutput {
	return o
}

func (o CsrPropertiesOutput) ToCsrPropertiesOutputWithContext(ctx context.Context) CsrPropertiesOutput {
	return o
}

func (o CsrPropertiesOutput) ToCsrPropertiesPtrOutput() CsrPropertiesPtrOutput {
	return o.ToCsrPropertiesPtrOutputWithContext(context.Background())
}

func (o CsrPropertiesOutput) ToCsrPropertiesPtrOutputWithContext(ctx context.Context) CsrPropertiesPtrOutput {
	return o.ApplyT(func(v CsrProperties) *CsrProperties {
		return &v
	}).(CsrPropertiesPtrOutput)
}

// Actual CSR string created
func (o CsrPropertiesOutput) CsrString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CsrProperties) *string { return v.CsrString }).(pulumi.StringPtrOutput)
}

// Distinguished name of certificate to be created
func (o CsrPropertiesOutput) DistinguishedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CsrProperties) *string { return v.DistinguishedName }).(pulumi.StringPtrOutput)
}

// Hosting environment
func (o CsrPropertiesOutput) HostingEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CsrProperties) *string { return v.HostingEnvironment }).(pulumi.StringPtrOutput)
}

// Name used to locate CSR object
func (o CsrPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CsrProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// PFX password
func (o CsrPropertiesOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CsrProperties) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// PFX certificate of created certificate
func (o CsrPropertiesOutput) PfxBlob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CsrProperties) *string { return v.PfxBlob }).(pulumi.StringPtrOutput)
}

// Hash of the certificates public key
func (o CsrPropertiesOutput) PublicKeyHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CsrProperties) *string { return v.PublicKeyHash }).(pulumi.StringPtrOutput)
}

type CsrPropertiesPtrOutput struct{ *pulumi.OutputState }

func (CsrPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CsrProperties)(nil)).Elem()
}

func (o CsrPropertiesPtrOutput) ToCsrPropertiesPtrOutput() CsrPropertiesPtrOutput {
	return o
}

func (o CsrPropertiesPtrOutput) ToCsrPropertiesPtrOutputWithContext(ctx context.Context) CsrPropertiesPtrOutput {
	return o
}

func (o CsrPropertiesPtrOutput) Elem() CsrPropertiesOutput {
	return o.ApplyT(func(v *CsrProperties) CsrProperties { return *v }).(CsrPropertiesOutput)
}

// Actual CSR string created
func (o CsrPropertiesPtrOutput) CsrString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CsrProperties) *string {
		if v == nil {
			return nil
		}
		return v.CsrString
	}).(pulumi.StringPtrOutput)
}

// Distinguished name of certificate to be created
func (o CsrPropertiesPtrOutput) DistinguishedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CsrProperties) *string {
		if v == nil {
			return nil
		}
		return v.DistinguishedName
	}).(pulumi.StringPtrOutput)
}

// Hosting environment
func (o CsrPropertiesPtrOutput) HostingEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CsrProperties) *string {
		if v == nil {
			return nil
		}
		return v.HostingEnvironment
	}).(pulumi.StringPtrOutput)
}

// Name used to locate CSR object
func (o CsrPropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CsrProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// PFX password
func (o CsrPropertiesPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CsrProperties) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// PFX certificate of created certificate
func (o CsrPropertiesPtrOutput) PfxBlob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CsrProperties) *string {
		if v == nil {
			return nil
		}
		return v.PfxBlob
	}).(pulumi.StringPtrOutput)
}

// Hash of the certificates public key
func (o CsrPropertiesPtrOutput) PublicKeyHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CsrProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicKeyHash
	}).(pulumi.StringPtrOutput)
}

type CsrResponseProperties struct {
	// Actual CSR string created
	CsrString *string `pulumi:"csrString"`
	// Distinguished name of certificate to be created
	DistinguishedName *string `pulumi:"distinguishedName"`
	// Hosting environment
	HostingEnvironment *string `pulumi:"hostingEnvironment"`
	// Name used to locate CSR object
	Name *string `pulumi:"name"`
	// PFX password
	Password *string `pulumi:"password"`
	// PFX certificate of created certificate
	PfxBlob *string `pulumi:"pfxBlob"`
	// Hash of the certificates public key
	PublicKeyHash *string `pulumi:"publicKeyHash"`
}

// CsrResponsePropertiesInput is an input type that accepts CsrResponsePropertiesArgs and CsrResponsePropertiesOutput values.
// You can construct a concrete instance of `CsrResponsePropertiesInput` via:
//
//          CsrResponsePropertiesArgs{...}
type CsrResponsePropertiesInput interface {
	pulumi.Input

	ToCsrResponsePropertiesOutput() CsrResponsePropertiesOutput
	ToCsrResponsePropertiesOutputWithContext(context.Context) CsrResponsePropertiesOutput
}

type CsrResponsePropertiesArgs struct {
	// Actual CSR string created
	CsrString pulumi.StringPtrInput `pulumi:"csrString"`
	// Distinguished name of certificate to be created
	DistinguishedName pulumi.StringPtrInput `pulumi:"distinguishedName"`
	// Hosting environment
	HostingEnvironment pulumi.StringPtrInput `pulumi:"hostingEnvironment"`
	// Name used to locate CSR object
	Name pulumi.StringPtrInput `pulumi:"name"`
	// PFX password
	Password pulumi.StringPtrInput `pulumi:"password"`
	// PFX certificate of created certificate
	PfxBlob pulumi.StringPtrInput `pulumi:"pfxBlob"`
	// Hash of the certificates public key
	PublicKeyHash pulumi.StringPtrInput `pulumi:"publicKeyHash"`
}

func (CsrResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CsrResponseProperties)(nil)).Elem()
}

func (i CsrResponsePropertiesArgs) ToCsrResponsePropertiesOutput() CsrResponsePropertiesOutput {
	return i.ToCsrResponsePropertiesOutputWithContext(context.Background())
}

func (i CsrResponsePropertiesArgs) ToCsrResponsePropertiesOutputWithContext(ctx context.Context) CsrResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CsrResponsePropertiesOutput)
}

func (i CsrResponsePropertiesArgs) ToCsrResponsePropertiesPtrOutput() CsrResponsePropertiesPtrOutput {
	return i.ToCsrResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i CsrResponsePropertiesArgs) ToCsrResponsePropertiesPtrOutputWithContext(ctx context.Context) CsrResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CsrResponsePropertiesOutput).ToCsrResponsePropertiesPtrOutputWithContext(ctx)
}

// CsrResponsePropertiesPtrInput is an input type that accepts CsrResponsePropertiesArgs, CsrResponsePropertiesPtr and CsrResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `CsrResponsePropertiesPtrInput` via:
//
//          CsrResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type CsrResponsePropertiesPtrInput interface {
	pulumi.Input

	ToCsrResponsePropertiesPtrOutput() CsrResponsePropertiesPtrOutput
	ToCsrResponsePropertiesPtrOutputWithContext(context.Context) CsrResponsePropertiesPtrOutput
}

type csrResponsePropertiesPtrType CsrResponsePropertiesArgs

func CsrResponsePropertiesPtr(v *CsrResponsePropertiesArgs) CsrResponsePropertiesPtrInput {
	return (*csrResponsePropertiesPtrType)(v)
}

func (*csrResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CsrResponseProperties)(nil)).Elem()
}

func (i *csrResponsePropertiesPtrType) ToCsrResponsePropertiesPtrOutput() CsrResponsePropertiesPtrOutput {
	return i.ToCsrResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *csrResponsePropertiesPtrType) ToCsrResponsePropertiesPtrOutputWithContext(ctx context.Context) CsrResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CsrResponsePropertiesPtrOutput)
}

type CsrResponsePropertiesOutput struct{ *pulumi.OutputState }

func (CsrResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CsrResponseProperties)(nil)).Elem()
}

func (o CsrResponsePropertiesOutput) ToCsrResponsePropertiesOutput() CsrResponsePropertiesOutput {
	return o
}

func (o CsrResponsePropertiesOutput) ToCsrResponsePropertiesOutputWithContext(ctx context.Context) CsrResponsePropertiesOutput {
	return o
}

func (o CsrResponsePropertiesOutput) ToCsrResponsePropertiesPtrOutput() CsrResponsePropertiesPtrOutput {
	return o.ToCsrResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o CsrResponsePropertiesOutput) ToCsrResponsePropertiesPtrOutputWithContext(ctx context.Context) CsrResponsePropertiesPtrOutput {
	return o.ApplyT(func(v CsrResponseProperties) *CsrResponseProperties {
		return &v
	}).(CsrResponsePropertiesPtrOutput)
}

// Actual CSR string created
func (o CsrResponsePropertiesOutput) CsrString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CsrResponseProperties) *string { return v.CsrString }).(pulumi.StringPtrOutput)
}

// Distinguished name of certificate to be created
func (o CsrResponsePropertiesOutput) DistinguishedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CsrResponseProperties) *string { return v.DistinguishedName }).(pulumi.StringPtrOutput)
}

// Hosting environment
func (o CsrResponsePropertiesOutput) HostingEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CsrResponseProperties) *string { return v.HostingEnvironment }).(pulumi.StringPtrOutput)
}

// Name used to locate CSR object
func (o CsrResponsePropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CsrResponseProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// PFX password
func (o CsrResponsePropertiesOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CsrResponseProperties) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// PFX certificate of created certificate
func (o CsrResponsePropertiesOutput) PfxBlob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CsrResponseProperties) *string { return v.PfxBlob }).(pulumi.StringPtrOutput)
}

// Hash of the certificates public key
func (o CsrResponsePropertiesOutput) PublicKeyHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CsrResponseProperties) *string { return v.PublicKeyHash }).(pulumi.StringPtrOutput)
}

type CsrResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (CsrResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CsrResponseProperties)(nil)).Elem()
}

func (o CsrResponsePropertiesPtrOutput) ToCsrResponsePropertiesPtrOutput() CsrResponsePropertiesPtrOutput {
	return o
}

func (o CsrResponsePropertiesPtrOutput) ToCsrResponsePropertiesPtrOutputWithContext(ctx context.Context) CsrResponsePropertiesPtrOutput {
	return o
}

func (o CsrResponsePropertiesPtrOutput) Elem() CsrResponsePropertiesOutput {
	return o.ApplyT(func(v *CsrResponseProperties) CsrResponseProperties { return *v }).(CsrResponsePropertiesOutput)
}

// Actual CSR string created
func (o CsrResponsePropertiesPtrOutput) CsrString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CsrResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.CsrString
	}).(pulumi.StringPtrOutput)
}

// Distinguished name of certificate to be created
func (o CsrResponsePropertiesPtrOutput) DistinguishedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CsrResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.DistinguishedName
	}).(pulumi.StringPtrOutput)
}

// Hosting environment
func (o CsrResponsePropertiesPtrOutput) HostingEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CsrResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.HostingEnvironment
	}).(pulumi.StringPtrOutput)
}

// Name used to locate CSR object
func (o CsrResponsePropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CsrResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// PFX password
func (o CsrResponsePropertiesPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CsrResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// PFX certificate of created certificate
func (o CsrResponsePropertiesPtrOutput) PfxBlob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CsrResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.PfxBlob
	}).(pulumi.StringPtrOutput)
}

// Hash of the certificates public key
func (o CsrResponsePropertiesPtrOutput) PublicKeyHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CsrResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicKeyHash
	}).(pulumi.StringPtrOutput)
}

// Note: properties are serialized in JSON format and stored in DB.
//             if new properties are added they might not be in the previous data rows
//             so please handle nulls
type DatabaseBackupSetting struct {
	// Contains a connection string to a database which is being backed up/restored. If the restore should happen to a new database, the database name inside is the new one.
	ConnectionString *string `pulumi:"connectionString"`
	// Contains a connection string name that is linked to the SiteConfig.ConnectionStrings.
	//             This is used during restore with overwrite connection strings options.
	ConnectionStringName *string `pulumi:"connectionStringName"`
	// SqlAzure / MySql
	DatabaseType *string `pulumi:"databaseType"`
	Name         *string `pulumi:"name"`
}

// DatabaseBackupSettingInput is an input type that accepts DatabaseBackupSettingArgs and DatabaseBackupSettingOutput values.
// You can construct a concrete instance of `DatabaseBackupSettingInput` via:
//
//          DatabaseBackupSettingArgs{...}
type DatabaseBackupSettingInput interface {
	pulumi.Input

	ToDatabaseBackupSettingOutput() DatabaseBackupSettingOutput
	ToDatabaseBackupSettingOutputWithContext(context.Context) DatabaseBackupSettingOutput
}

// Note: properties are serialized in JSON format and stored in DB.
//             if new properties are added they might not be in the previous data rows
//             so please handle nulls
type DatabaseBackupSettingArgs struct {
	// Contains a connection string to a database which is being backed up/restored. If the restore should happen to a new database, the database name inside is the new one.
	ConnectionString pulumi.StringPtrInput `pulumi:"connectionString"`
	// Contains a connection string name that is linked to the SiteConfig.ConnectionStrings.
	//             This is used during restore with overwrite connection strings options.
	ConnectionStringName pulumi.StringPtrInput `pulumi:"connectionStringName"`
	// SqlAzure / MySql
	DatabaseType pulumi.StringPtrInput `pulumi:"databaseType"`
	Name         pulumi.StringPtrInput `pulumi:"name"`
}

func (DatabaseBackupSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseBackupSetting)(nil)).Elem()
}

func (i DatabaseBackupSettingArgs) ToDatabaseBackupSettingOutput() DatabaseBackupSettingOutput {
	return i.ToDatabaseBackupSettingOutputWithContext(context.Background())
}

func (i DatabaseBackupSettingArgs) ToDatabaseBackupSettingOutputWithContext(ctx context.Context) DatabaseBackupSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseBackupSettingOutput)
}

// DatabaseBackupSettingArrayInput is an input type that accepts DatabaseBackupSettingArray and DatabaseBackupSettingArrayOutput values.
// You can construct a concrete instance of `DatabaseBackupSettingArrayInput` via:
//
//          DatabaseBackupSettingArray{ DatabaseBackupSettingArgs{...} }
type DatabaseBackupSettingArrayInput interface {
	pulumi.Input

	ToDatabaseBackupSettingArrayOutput() DatabaseBackupSettingArrayOutput
	ToDatabaseBackupSettingArrayOutputWithContext(context.Context) DatabaseBackupSettingArrayOutput
}

type DatabaseBackupSettingArray []DatabaseBackupSettingInput

func (DatabaseBackupSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseBackupSetting)(nil)).Elem()
}

func (i DatabaseBackupSettingArray) ToDatabaseBackupSettingArrayOutput() DatabaseBackupSettingArrayOutput {
	return i.ToDatabaseBackupSettingArrayOutputWithContext(context.Background())
}

func (i DatabaseBackupSettingArray) ToDatabaseBackupSettingArrayOutputWithContext(ctx context.Context) DatabaseBackupSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseBackupSettingArrayOutput)
}

// Note: properties are serialized in JSON format and stored in DB.
//             if new properties are added they might not be in the previous data rows
//             so please handle nulls
type DatabaseBackupSettingOutput struct{ *pulumi.OutputState }

func (DatabaseBackupSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseBackupSetting)(nil)).Elem()
}

func (o DatabaseBackupSettingOutput) ToDatabaseBackupSettingOutput() DatabaseBackupSettingOutput {
	return o
}

func (o DatabaseBackupSettingOutput) ToDatabaseBackupSettingOutputWithContext(ctx context.Context) DatabaseBackupSettingOutput {
	return o
}

// Contains a connection string to a database which is being backed up/restored. If the restore should happen to a new database, the database name inside is the new one.
func (o DatabaseBackupSettingOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupSetting) *string { return v.ConnectionString }).(pulumi.StringPtrOutput)
}

// Contains a connection string name that is linked to the SiteConfig.ConnectionStrings.
//             This is used during restore with overwrite connection strings options.
func (o DatabaseBackupSettingOutput) ConnectionStringName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupSetting) *string { return v.ConnectionStringName }).(pulumi.StringPtrOutput)
}

// SqlAzure / MySql
func (o DatabaseBackupSettingOutput) DatabaseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupSetting) *string { return v.DatabaseType }).(pulumi.StringPtrOutput)
}

func (o DatabaseBackupSettingOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupSetting) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type DatabaseBackupSettingArrayOutput struct{ *pulumi.OutputState }

func (DatabaseBackupSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseBackupSetting)(nil)).Elem()
}

func (o DatabaseBackupSettingArrayOutput) ToDatabaseBackupSettingArrayOutput() DatabaseBackupSettingArrayOutput {
	return o
}

func (o DatabaseBackupSettingArrayOutput) ToDatabaseBackupSettingArrayOutputWithContext(ctx context.Context) DatabaseBackupSettingArrayOutput {
	return o
}

func (o DatabaseBackupSettingArrayOutput) Index(i pulumi.IntInput) DatabaseBackupSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseBackupSetting {
		return vs[0].([]DatabaseBackupSetting)[vs[1].(int)]
	}).(DatabaseBackupSettingOutput)
}

// Note: properties are serialized in JSON format and stored in DB.
//             if new properties are added they might not be in the previous data rows
//             so please handle nulls
type DatabaseBackupSettingResponse struct {
	// Contains a connection string to a database which is being backed up/restored. If the restore should happen to a new database, the database name inside is the new one.
	ConnectionString *string `pulumi:"connectionString"`
	// Contains a connection string name that is linked to the SiteConfig.ConnectionStrings.
	//             This is used during restore with overwrite connection strings options.
	ConnectionStringName *string `pulumi:"connectionStringName"`
	// SqlAzure / MySql
	DatabaseType *string `pulumi:"databaseType"`
	Name         *string `pulumi:"name"`
}

// DatabaseBackupSettingResponseInput is an input type that accepts DatabaseBackupSettingResponseArgs and DatabaseBackupSettingResponseOutput values.
// You can construct a concrete instance of `DatabaseBackupSettingResponseInput` via:
//
//          DatabaseBackupSettingResponseArgs{...}
type DatabaseBackupSettingResponseInput interface {
	pulumi.Input

	ToDatabaseBackupSettingResponseOutput() DatabaseBackupSettingResponseOutput
	ToDatabaseBackupSettingResponseOutputWithContext(context.Context) DatabaseBackupSettingResponseOutput
}

// Note: properties are serialized in JSON format and stored in DB.
//             if new properties are added they might not be in the previous data rows
//             so please handle nulls
type DatabaseBackupSettingResponseArgs struct {
	// Contains a connection string to a database which is being backed up/restored. If the restore should happen to a new database, the database name inside is the new one.
	ConnectionString pulumi.StringPtrInput `pulumi:"connectionString"`
	// Contains a connection string name that is linked to the SiteConfig.ConnectionStrings.
	//             This is used during restore with overwrite connection strings options.
	ConnectionStringName pulumi.StringPtrInput `pulumi:"connectionStringName"`
	// SqlAzure / MySql
	DatabaseType pulumi.StringPtrInput `pulumi:"databaseType"`
	Name         pulumi.StringPtrInput `pulumi:"name"`
}

func (DatabaseBackupSettingResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseBackupSettingResponse)(nil)).Elem()
}

func (i DatabaseBackupSettingResponseArgs) ToDatabaseBackupSettingResponseOutput() DatabaseBackupSettingResponseOutput {
	return i.ToDatabaseBackupSettingResponseOutputWithContext(context.Background())
}

func (i DatabaseBackupSettingResponseArgs) ToDatabaseBackupSettingResponseOutputWithContext(ctx context.Context) DatabaseBackupSettingResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseBackupSettingResponseOutput)
}

// DatabaseBackupSettingResponseArrayInput is an input type that accepts DatabaseBackupSettingResponseArray and DatabaseBackupSettingResponseArrayOutput values.
// You can construct a concrete instance of `DatabaseBackupSettingResponseArrayInput` via:
//
//          DatabaseBackupSettingResponseArray{ DatabaseBackupSettingResponseArgs{...} }
type DatabaseBackupSettingResponseArrayInput interface {
	pulumi.Input

	ToDatabaseBackupSettingResponseArrayOutput() DatabaseBackupSettingResponseArrayOutput
	ToDatabaseBackupSettingResponseArrayOutputWithContext(context.Context) DatabaseBackupSettingResponseArrayOutput
}

type DatabaseBackupSettingResponseArray []DatabaseBackupSettingResponseInput

func (DatabaseBackupSettingResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseBackupSettingResponse)(nil)).Elem()
}

func (i DatabaseBackupSettingResponseArray) ToDatabaseBackupSettingResponseArrayOutput() DatabaseBackupSettingResponseArrayOutput {
	return i.ToDatabaseBackupSettingResponseArrayOutputWithContext(context.Background())
}

func (i DatabaseBackupSettingResponseArray) ToDatabaseBackupSettingResponseArrayOutputWithContext(ctx context.Context) DatabaseBackupSettingResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseBackupSettingResponseArrayOutput)
}

// Note: properties are serialized in JSON format and stored in DB.
//             if new properties are added they might not be in the previous data rows
//             so please handle nulls
type DatabaseBackupSettingResponseOutput struct{ *pulumi.OutputState }

func (DatabaseBackupSettingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseBackupSettingResponse)(nil)).Elem()
}

func (o DatabaseBackupSettingResponseOutput) ToDatabaseBackupSettingResponseOutput() DatabaseBackupSettingResponseOutput {
	return o
}

func (o DatabaseBackupSettingResponseOutput) ToDatabaseBackupSettingResponseOutputWithContext(ctx context.Context) DatabaseBackupSettingResponseOutput {
	return o
}

// Contains a connection string to a database which is being backed up/restored. If the restore should happen to a new database, the database name inside is the new one.
func (o DatabaseBackupSettingResponseOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupSettingResponse) *string { return v.ConnectionString }).(pulumi.StringPtrOutput)
}

// Contains a connection string name that is linked to the SiteConfig.ConnectionStrings.
//             This is used during restore with overwrite connection strings options.
func (o DatabaseBackupSettingResponseOutput) ConnectionStringName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupSettingResponse) *string { return v.ConnectionStringName }).(pulumi.StringPtrOutput)
}

// SqlAzure / MySql
func (o DatabaseBackupSettingResponseOutput) DatabaseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupSettingResponse) *string { return v.DatabaseType }).(pulumi.StringPtrOutput)
}

func (o DatabaseBackupSettingResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupSettingResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type DatabaseBackupSettingResponseArrayOutput struct{ *pulumi.OutputState }

func (DatabaseBackupSettingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseBackupSettingResponse)(nil)).Elem()
}

func (o DatabaseBackupSettingResponseArrayOutput) ToDatabaseBackupSettingResponseArrayOutput() DatabaseBackupSettingResponseArrayOutput {
	return o
}

func (o DatabaseBackupSettingResponseArrayOutput) ToDatabaseBackupSettingResponseArrayOutputWithContext(ctx context.Context) DatabaseBackupSettingResponseArrayOutput {
	return o
}

func (o DatabaseBackupSettingResponseArrayOutput) Index(i pulumi.IntInput) DatabaseBackupSettingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseBackupSettingResponse {
		return vs[0].([]DatabaseBackupSettingResponse)[vs[1].(int)]
	}).(DatabaseBackupSettingResponseOutput)
}

type DeploymentProperties struct {
	// Active
	Active *bool `pulumi:"active"`
	// Author
	Author *string `pulumi:"author"`
	// AuthorEmail
	Author_email *string `pulumi:"author_email"`
	// Deployer
	Deployer *string `pulumi:"deployer"`
	// Detail
	Details *string `pulumi:"details"`
	// EndTime
	End_time *string `pulumi:"end_time"`
	// Id
	Id *string `pulumi:"id"`
	// Message
	Message *string `pulumi:"message"`
	// StartTime
	Start_time *string `pulumi:"start_time"`
	// Status
	Status *int `pulumi:"status"`
}

// DeploymentPropertiesInput is an input type that accepts DeploymentPropertiesArgs and DeploymentPropertiesOutput values.
// You can construct a concrete instance of `DeploymentPropertiesInput` via:
//
//          DeploymentPropertiesArgs{...}
type DeploymentPropertiesInput interface {
	pulumi.Input

	ToDeploymentPropertiesOutput() DeploymentPropertiesOutput
	ToDeploymentPropertiesOutputWithContext(context.Context) DeploymentPropertiesOutput
}

type DeploymentPropertiesArgs struct {
	// Active
	Active pulumi.BoolPtrInput `pulumi:"active"`
	// Author
	Author pulumi.StringPtrInput `pulumi:"author"`
	// AuthorEmail
	Author_email pulumi.StringPtrInput `pulumi:"author_email"`
	// Deployer
	Deployer pulumi.StringPtrInput `pulumi:"deployer"`
	// Detail
	Details pulumi.StringPtrInput `pulumi:"details"`
	// EndTime
	End_time pulumi.StringPtrInput `pulumi:"end_time"`
	// Id
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Message
	Message pulumi.StringPtrInput `pulumi:"message"`
	// StartTime
	Start_time pulumi.StringPtrInput `pulumi:"start_time"`
	// Status
	Status pulumi.IntPtrInput `pulumi:"status"`
}

func (DeploymentPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentProperties)(nil)).Elem()
}

func (i DeploymentPropertiesArgs) ToDeploymentPropertiesOutput() DeploymentPropertiesOutput {
	return i.ToDeploymentPropertiesOutputWithContext(context.Background())
}

func (i DeploymentPropertiesArgs) ToDeploymentPropertiesOutputWithContext(ctx context.Context) DeploymentPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentPropertiesOutput)
}

func (i DeploymentPropertiesArgs) ToDeploymentPropertiesPtrOutput() DeploymentPropertiesPtrOutput {
	return i.ToDeploymentPropertiesPtrOutputWithContext(context.Background())
}

func (i DeploymentPropertiesArgs) ToDeploymentPropertiesPtrOutputWithContext(ctx context.Context) DeploymentPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentPropertiesOutput).ToDeploymentPropertiesPtrOutputWithContext(ctx)
}

// DeploymentPropertiesPtrInput is an input type that accepts DeploymentPropertiesArgs, DeploymentPropertiesPtr and DeploymentPropertiesPtrOutput values.
// You can construct a concrete instance of `DeploymentPropertiesPtrInput` via:
//
//          DeploymentPropertiesArgs{...}
//
//  or:
//
//          nil
type DeploymentPropertiesPtrInput interface {
	pulumi.Input

	ToDeploymentPropertiesPtrOutput() DeploymentPropertiesPtrOutput
	ToDeploymentPropertiesPtrOutputWithContext(context.Context) DeploymentPropertiesPtrOutput
}

type deploymentPropertiesPtrType DeploymentPropertiesArgs

func DeploymentPropertiesPtr(v *DeploymentPropertiesArgs) DeploymentPropertiesPtrInput {
	return (*deploymentPropertiesPtrType)(v)
}

func (*deploymentPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentProperties)(nil)).Elem()
}

func (i *deploymentPropertiesPtrType) ToDeploymentPropertiesPtrOutput() DeploymentPropertiesPtrOutput {
	return i.ToDeploymentPropertiesPtrOutputWithContext(context.Background())
}

func (i *deploymentPropertiesPtrType) ToDeploymentPropertiesPtrOutputWithContext(ctx context.Context) DeploymentPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentPropertiesPtrOutput)
}

type DeploymentPropertiesOutput struct{ *pulumi.OutputState }

func (DeploymentPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentProperties)(nil)).Elem()
}

func (o DeploymentPropertiesOutput) ToDeploymentPropertiesOutput() DeploymentPropertiesOutput {
	return o
}

func (o DeploymentPropertiesOutput) ToDeploymentPropertiesOutputWithContext(ctx context.Context) DeploymentPropertiesOutput {
	return o
}

func (o DeploymentPropertiesOutput) ToDeploymentPropertiesPtrOutput() DeploymentPropertiesPtrOutput {
	return o.ToDeploymentPropertiesPtrOutputWithContext(context.Background())
}

func (o DeploymentPropertiesOutput) ToDeploymentPropertiesPtrOutputWithContext(ctx context.Context) DeploymentPropertiesPtrOutput {
	return o.ApplyT(func(v DeploymentProperties) *DeploymentProperties {
		return &v
	}).(DeploymentPropertiesPtrOutput)
}

// Active
func (o DeploymentPropertiesOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentProperties) *bool { return v.Active }).(pulumi.BoolPtrOutput)
}

// Author
func (o DeploymentPropertiesOutput) Author() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentProperties) *string { return v.Author }).(pulumi.StringPtrOutput)
}

// AuthorEmail
func (o DeploymentPropertiesOutput) Author_email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentProperties) *string { return v.Author_email }).(pulumi.StringPtrOutput)
}

// Deployer
func (o DeploymentPropertiesOutput) Deployer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentProperties) *string { return v.Deployer }).(pulumi.StringPtrOutput)
}

// Detail
func (o DeploymentPropertiesOutput) Details() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentProperties) *string { return v.Details }).(pulumi.StringPtrOutput)
}

// EndTime
func (o DeploymentPropertiesOutput) End_time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentProperties) *string { return v.End_time }).(pulumi.StringPtrOutput)
}

// Id
func (o DeploymentPropertiesOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentProperties) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Message
func (o DeploymentPropertiesOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentProperties) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// StartTime
func (o DeploymentPropertiesOutput) Start_time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentProperties) *string { return v.Start_time }).(pulumi.StringPtrOutput)
}

// Status
func (o DeploymentPropertiesOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentProperties) *int { return v.Status }).(pulumi.IntPtrOutput)
}

type DeploymentPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DeploymentPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentProperties)(nil)).Elem()
}

func (o DeploymentPropertiesPtrOutput) ToDeploymentPropertiesPtrOutput() DeploymentPropertiesPtrOutput {
	return o
}

func (o DeploymentPropertiesPtrOutput) ToDeploymentPropertiesPtrOutputWithContext(ctx context.Context) DeploymentPropertiesPtrOutput {
	return o
}

func (o DeploymentPropertiesPtrOutput) Elem() DeploymentPropertiesOutput {
	return o.ApplyT(func(v *DeploymentProperties) DeploymentProperties { return *v }).(DeploymentPropertiesOutput)
}

// Active
func (o DeploymentPropertiesPtrOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeploymentProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Active
	}).(pulumi.BoolPtrOutput)
}

// Author
func (o DeploymentPropertiesPtrOutput) Author() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentProperties) *string {
		if v == nil {
			return nil
		}
		return v.Author
	}).(pulumi.StringPtrOutput)
}

// AuthorEmail
func (o DeploymentPropertiesPtrOutput) Author_email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentProperties) *string {
		if v == nil {
			return nil
		}
		return v.Author_email
	}).(pulumi.StringPtrOutput)
}

// Deployer
func (o DeploymentPropertiesPtrOutput) Deployer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentProperties) *string {
		if v == nil {
			return nil
		}
		return v.Deployer
	}).(pulumi.StringPtrOutput)
}

// Detail
func (o DeploymentPropertiesPtrOutput) Details() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentProperties) *string {
		if v == nil {
			return nil
		}
		return v.Details
	}).(pulumi.StringPtrOutput)
}

// EndTime
func (o DeploymentPropertiesPtrOutput) End_time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentProperties) *string {
		if v == nil {
			return nil
		}
		return v.End_time
	}).(pulumi.StringPtrOutput)
}

// Id
func (o DeploymentPropertiesPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentProperties) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Message
func (o DeploymentPropertiesPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentProperties) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// StartTime
func (o DeploymentPropertiesPtrOutput) Start_time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentProperties) *string {
		if v == nil {
			return nil
		}
		return v.Start_time
	}).(pulumi.StringPtrOutput)
}

// Status
func (o DeploymentPropertiesPtrOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeploymentProperties) *int {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.IntPtrOutput)
}

type DeploymentResponseProperties struct {
	// Active
	Active *bool `pulumi:"active"`
	// Author
	Author *string `pulumi:"author"`
	// AuthorEmail
	Author_email *string `pulumi:"author_email"`
	// Deployer
	Deployer *string `pulumi:"deployer"`
	// Detail
	Details *string `pulumi:"details"`
	// EndTime
	End_time *string `pulumi:"end_time"`
	// Id
	Id *string `pulumi:"id"`
	// Message
	Message *string `pulumi:"message"`
	// StartTime
	Start_time *string `pulumi:"start_time"`
	// Status
	Status *int `pulumi:"status"`
}

// DeploymentResponsePropertiesInput is an input type that accepts DeploymentResponsePropertiesArgs and DeploymentResponsePropertiesOutput values.
// You can construct a concrete instance of `DeploymentResponsePropertiesInput` via:
//
//          DeploymentResponsePropertiesArgs{...}
type DeploymentResponsePropertiesInput interface {
	pulumi.Input

	ToDeploymentResponsePropertiesOutput() DeploymentResponsePropertiesOutput
	ToDeploymentResponsePropertiesOutputWithContext(context.Context) DeploymentResponsePropertiesOutput
}

type DeploymentResponsePropertiesArgs struct {
	// Active
	Active pulumi.BoolPtrInput `pulumi:"active"`
	// Author
	Author pulumi.StringPtrInput `pulumi:"author"`
	// AuthorEmail
	Author_email pulumi.StringPtrInput `pulumi:"author_email"`
	// Deployer
	Deployer pulumi.StringPtrInput `pulumi:"deployer"`
	// Detail
	Details pulumi.StringPtrInput `pulumi:"details"`
	// EndTime
	End_time pulumi.StringPtrInput `pulumi:"end_time"`
	// Id
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Message
	Message pulumi.StringPtrInput `pulumi:"message"`
	// StartTime
	Start_time pulumi.StringPtrInput `pulumi:"start_time"`
	// Status
	Status pulumi.IntPtrInput `pulumi:"status"`
}

func (DeploymentResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentResponseProperties)(nil)).Elem()
}

func (i DeploymentResponsePropertiesArgs) ToDeploymentResponsePropertiesOutput() DeploymentResponsePropertiesOutput {
	return i.ToDeploymentResponsePropertiesOutputWithContext(context.Background())
}

func (i DeploymentResponsePropertiesArgs) ToDeploymentResponsePropertiesOutputWithContext(ctx context.Context) DeploymentResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentResponsePropertiesOutput)
}

func (i DeploymentResponsePropertiesArgs) ToDeploymentResponsePropertiesPtrOutput() DeploymentResponsePropertiesPtrOutput {
	return i.ToDeploymentResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i DeploymentResponsePropertiesArgs) ToDeploymentResponsePropertiesPtrOutputWithContext(ctx context.Context) DeploymentResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentResponsePropertiesOutput).ToDeploymentResponsePropertiesPtrOutputWithContext(ctx)
}

// DeploymentResponsePropertiesPtrInput is an input type that accepts DeploymentResponsePropertiesArgs, DeploymentResponsePropertiesPtr and DeploymentResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `DeploymentResponsePropertiesPtrInput` via:
//
//          DeploymentResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type DeploymentResponsePropertiesPtrInput interface {
	pulumi.Input

	ToDeploymentResponsePropertiesPtrOutput() DeploymentResponsePropertiesPtrOutput
	ToDeploymentResponsePropertiesPtrOutputWithContext(context.Context) DeploymentResponsePropertiesPtrOutput
}

type deploymentResponsePropertiesPtrType DeploymentResponsePropertiesArgs

func DeploymentResponsePropertiesPtr(v *DeploymentResponsePropertiesArgs) DeploymentResponsePropertiesPtrInput {
	return (*deploymentResponsePropertiesPtrType)(v)
}

func (*deploymentResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentResponseProperties)(nil)).Elem()
}

func (i *deploymentResponsePropertiesPtrType) ToDeploymentResponsePropertiesPtrOutput() DeploymentResponsePropertiesPtrOutput {
	return i.ToDeploymentResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *deploymentResponsePropertiesPtrType) ToDeploymentResponsePropertiesPtrOutputWithContext(ctx context.Context) DeploymentResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentResponsePropertiesPtrOutput)
}

type DeploymentResponsePropertiesOutput struct{ *pulumi.OutputState }

func (DeploymentResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentResponseProperties)(nil)).Elem()
}

func (o DeploymentResponsePropertiesOutput) ToDeploymentResponsePropertiesOutput() DeploymentResponsePropertiesOutput {
	return o
}

func (o DeploymentResponsePropertiesOutput) ToDeploymentResponsePropertiesOutputWithContext(ctx context.Context) DeploymentResponsePropertiesOutput {
	return o
}

func (o DeploymentResponsePropertiesOutput) ToDeploymentResponsePropertiesPtrOutput() DeploymentResponsePropertiesPtrOutput {
	return o.ToDeploymentResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o DeploymentResponsePropertiesOutput) ToDeploymentResponsePropertiesPtrOutputWithContext(ctx context.Context) DeploymentResponsePropertiesPtrOutput {
	return o.ApplyT(func(v DeploymentResponseProperties) *DeploymentResponseProperties {
		return &v
	}).(DeploymentResponsePropertiesPtrOutput)
}

// Active
func (o DeploymentResponsePropertiesOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentResponseProperties) *bool { return v.Active }).(pulumi.BoolPtrOutput)
}

// Author
func (o DeploymentResponsePropertiesOutput) Author() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentResponseProperties) *string { return v.Author }).(pulumi.StringPtrOutput)
}

// AuthorEmail
func (o DeploymentResponsePropertiesOutput) Author_email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentResponseProperties) *string { return v.Author_email }).(pulumi.StringPtrOutput)
}

// Deployer
func (o DeploymentResponsePropertiesOutput) Deployer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentResponseProperties) *string { return v.Deployer }).(pulumi.StringPtrOutput)
}

// Detail
func (o DeploymentResponsePropertiesOutput) Details() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentResponseProperties) *string { return v.Details }).(pulumi.StringPtrOutput)
}

// EndTime
func (o DeploymentResponsePropertiesOutput) End_time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentResponseProperties) *string { return v.End_time }).(pulumi.StringPtrOutput)
}

// Id
func (o DeploymentResponsePropertiesOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentResponseProperties) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Message
func (o DeploymentResponsePropertiesOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentResponseProperties) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// StartTime
func (o DeploymentResponsePropertiesOutput) Start_time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentResponseProperties) *string { return v.Start_time }).(pulumi.StringPtrOutput)
}

// Status
func (o DeploymentResponsePropertiesOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentResponseProperties) *int { return v.Status }).(pulumi.IntPtrOutput)
}

type DeploymentResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (DeploymentResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentResponseProperties)(nil)).Elem()
}

func (o DeploymentResponsePropertiesPtrOutput) ToDeploymentResponsePropertiesPtrOutput() DeploymentResponsePropertiesPtrOutput {
	return o
}

func (o DeploymentResponsePropertiesPtrOutput) ToDeploymentResponsePropertiesPtrOutputWithContext(ctx context.Context) DeploymentResponsePropertiesPtrOutput {
	return o
}

func (o DeploymentResponsePropertiesPtrOutput) Elem() DeploymentResponsePropertiesOutput {
	return o.ApplyT(func(v *DeploymentResponseProperties) DeploymentResponseProperties { return *v }).(DeploymentResponsePropertiesOutput)
}

// Active
func (o DeploymentResponsePropertiesPtrOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeploymentResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Active
	}).(pulumi.BoolPtrOutput)
}

// Author
func (o DeploymentResponsePropertiesPtrOutput) Author() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Author
	}).(pulumi.StringPtrOutput)
}

// AuthorEmail
func (o DeploymentResponsePropertiesPtrOutput) Author_email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Author_email
	}).(pulumi.StringPtrOutput)
}

// Deployer
func (o DeploymentResponsePropertiesPtrOutput) Deployer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Deployer
	}).(pulumi.StringPtrOutput)
}

// Detail
func (o DeploymentResponsePropertiesPtrOutput) Details() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Details
	}).(pulumi.StringPtrOutput)
}

// EndTime
func (o DeploymentResponsePropertiesPtrOutput) End_time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.End_time
	}).(pulumi.StringPtrOutput)
}

// Id
func (o DeploymentResponsePropertiesPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Message
func (o DeploymentResponsePropertiesPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// StartTime
func (o DeploymentResponsePropertiesPtrOutput) Start_time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Start_time
	}).(pulumi.StringPtrOutput)
}

// Status
func (o DeploymentResponsePropertiesPtrOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeploymentResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.IntPtrOutput)
}

// Class containing Routing in production experiments
type Experiments struct {
	// List of {Microsoft.Web.Hosting.Administration.RampUpRule} objects.
	RampUpRules []RampUpRule `pulumi:"rampUpRules"`
}

// ExperimentsInput is an input type that accepts ExperimentsArgs and ExperimentsOutput values.
// You can construct a concrete instance of `ExperimentsInput` via:
//
//          ExperimentsArgs{...}
type ExperimentsInput interface {
	pulumi.Input

	ToExperimentsOutput() ExperimentsOutput
	ToExperimentsOutputWithContext(context.Context) ExperimentsOutput
}

// Class containing Routing in production experiments
type ExperimentsArgs struct {
	// List of {Microsoft.Web.Hosting.Administration.RampUpRule} objects.
	RampUpRules RampUpRuleArrayInput `pulumi:"rampUpRules"`
}

func (ExperimentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Experiments)(nil)).Elem()
}

func (i ExperimentsArgs) ToExperimentsOutput() ExperimentsOutput {
	return i.ToExperimentsOutputWithContext(context.Background())
}

func (i ExperimentsArgs) ToExperimentsOutputWithContext(ctx context.Context) ExperimentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentsOutput)
}

func (i ExperimentsArgs) ToExperimentsPtrOutput() ExperimentsPtrOutput {
	return i.ToExperimentsPtrOutputWithContext(context.Background())
}

func (i ExperimentsArgs) ToExperimentsPtrOutputWithContext(ctx context.Context) ExperimentsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentsOutput).ToExperimentsPtrOutputWithContext(ctx)
}

// ExperimentsPtrInput is an input type that accepts ExperimentsArgs, ExperimentsPtr and ExperimentsPtrOutput values.
// You can construct a concrete instance of `ExperimentsPtrInput` via:
//
//          ExperimentsArgs{...}
//
//  or:
//
//          nil
type ExperimentsPtrInput interface {
	pulumi.Input

	ToExperimentsPtrOutput() ExperimentsPtrOutput
	ToExperimentsPtrOutputWithContext(context.Context) ExperimentsPtrOutput
}

type experimentsPtrType ExperimentsArgs

func ExperimentsPtr(v *ExperimentsArgs) ExperimentsPtrInput {
	return (*experimentsPtrType)(v)
}

func (*experimentsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Experiments)(nil)).Elem()
}

func (i *experimentsPtrType) ToExperimentsPtrOutput() ExperimentsPtrOutput {
	return i.ToExperimentsPtrOutputWithContext(context.Background())
}

func (i *experimentsPtrType) ToExperimentsPtrOutputWithContext(ctx context.Context) ExperimentsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentsPtrOutput)
}

// Class containing Routing in production experiments
type ExperimentsOutput struct{ *pulumi.OutputState }

func (ExperimentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Experiments)(nil)).Elem()
}

func (o ExperimentsOutput) ToExperimentsOutput() ExperimentsOutput {
	return o
}

func (o ExperimentsOutput) ToExperimentsOutputWithContext(ctx context.Context) ExperimentsOutput {
	return o
}

func (o ExperimentsOutput) ToExperimentsPtrOutput() ExperimentsPtrOutput {
	return o.ToExperimentsPtrOutputWithContext(context.Background())
}

func (o ExperimentsOutput) ToExperimentsPtrOutputWithContext(ctx context.Context) ExperimentsPtrOutput {
	return o.ApplyT(func(v Experiments) *Experiments {
		return &v
	}).(ExperimentsPtrOutput)
}

// List of {Microsoft.Web.Hosting.Administration.RampUpRule} objects.
func (o ExperimentsOutput) RampUpRules() RampUpRuleArrayOutput {
	return o.ApplyT(func(v Experiments) []RampUpRule { return v.RampUpRules }).(RampUpRuleArrayOutput)
}

type ExperimentsPtrOutput struct{ *pulumi.OutputState }

func (ExperimentsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Experiments)(nil)).Elem()
}

func (o ExperimentsPtrOutput) ToExperimentsPtrOutput() ExperimentsPtrOutput {
	return o
}

func (o ExperimentsPtrOutput) ToExperimentsPtrOutputWithContext(ctx context.Context) ExperimentsPtrOutput {
	return o
}

func (o ExperimentsPtrOutput) Elem() ExperimentsOutput {
	return o.ApplyT(func(v *Experiments) Experiments { return *v }).(ExperimentsOutput)
}

// List of {Microsoft.Web.Hosting.Administration.RampUpRule} objects.
func (o ExperimentsPtrOutput) RampUpRules() RampUpRuleArrayOutput {
	return o.ApplyT(func(v *Experiments) []RampUpRule {
		if v == nil {
			return nil
		}
		return v.RampUpRules
	}).(RampUpRuleArrayOutput)
}

// Class containing Routing in production experiments
type ExperimentsResponse struct {
	// List of {Microsoft.Web.Hosting.Administration.RampUpRule} objects.
	RampUpRules []RampUpRuleResponse `pulumi:"rampUpRules"`
}

// ExperimentsResponseInput is an input type that accepts ExperimentsResponseArgs and ExperimentsResponseOutput values.
// You can construct a concrete instance of `ExperimentsResponseInput` via:
//
//          ExperimentsResponseArgs{...}
type ExperimentsResponseInput interface {
	pulumi.Input

	ToExperimentsResponseOutput() ExperimentsResponseOutput
	ToExperimentsResponseOutputWithContext(context.Context) ExperimentsResponseOutput
}

// Class containing Routing in production experiments
type ExperimentsResponseArgs struct {
	// List of {Microsoft.Web.Hosting.Administration.RampUpRule} objects.
	RampUpRules RampUpRuleResponseArrayInput `pulumi:"rampUpRules"`
}

func (ExperimentsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExperimentsResponse)(nil)).Elem()
}

func (i ExperimentsResponseArgs) ToExperimentsResponseOutput() ExperimentsResponseOutput {
	return i.ToExperimentsResponseOutputWithContext(context.Background())
}

func (i ExperimentsResponseArgs) ToExperimentsResponseOutputWithContext(ctx context.Context) ExperimentsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentsResponseOutput)
}

func (i ExperimentsResponseArgs) ToExperimentsResponsePtrOutput() ExperimentsResponsePtrOutput {
	return i.ToExperimentsResponsePtrOutputWithContext(context.Background())
}

func (i ExperimentsResponseArgs) ToExperimentsResponsePtrOutputWithContext(ctx context.Context) ExperimentsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentsResponseOutput).ToExperimentsResponsePtrOutputWithContext(ctx)
}

// ExperimentsResponsePtrInput is an input type that accepts ExperimentsResponseArgs, ExperimentsResponsePtr and ExperimentsResponsePtrOutput values.
// You can construct a concrete instance of `ExperimentsResponsePtrInput` via:
//
//          ExperimentsResponseArgs{...}
//
//  or:
//
//          nil
type ExperimentsResponsePtrInput interface {
	pulumi.Input

	ToExperimentsResponsePtrOutput() ExperimentsResponsePtrOutput
	ToExperimentsResponsePtrOutputWithContext(context.Context) ExperimentsResponsePtrOutput
}

type experimentsResponsePtrType ExperimentsResponseArgs

func ExperimentsResponsePtr(v *ExperimentsResponseArgs) ExperimentsResponsePtrInput {
	return (*experimentsResponsePtrType)(v)
}

func (*experimentsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExperimentsResponse)(nil)).Elem()
}

func (i *experimentsResponsePtrType) ToExperimentsResponsePtrOutput() ExperimentsResponsePtrOutput {
	return i.ToExperimentsResponsePtrOutputWithContext(context.Background())
}

func (i *experimentsResponsePtrType) ToExperimentsResponsePtrOutputWithContext(ctx context.Context) ExperimentsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentsResponsePtrOutput)
}

// Class containing Routing in production experiments
type ExperimentsResponseOutput struct{ *pulumi.OutputState }

func (ExperimentsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExperimentsResponse)(nil)).Elem()
}

func (o ExperimentsResponseOutput) ToExperimentsResponseOutput() ExperimentsResponseOutput {
	return o
}

func (o ExperimentsResponseOutput) ToExperimentsResponseOutputWithContext(ctx context.Context) ExperimentsResponseOutput {
	return o
}

func (o ExperimentsResponseOutput) ToExperimentsResponsePtrOutput() ExperimentsResponsePtrOutput {
	return o.ToExperimentsResponsePtrOutputWithContext(context.Background())
}

func (o ExperimentsResponseOutput) ToExperimentsResponsePtrOutputWithContext(ctx context.Context) ExperimentsResponsePtrOutput {
	return o.ApplyT(func(v ExperimentsResponse) *ExperimentsResponse {
		return &v
	}).(ExperimentsResponsePtrOutput)
}

// List of {Microsoft.Web.Hosting.Administration.RampUpRule} objects.
func (o ExperimentsResponseOutput) RampUpRules() RampUpRuleResponseArrayOutput {
	return o.ApplyT(func(v ExperimentsResponse) []RampUpRuleResponse { return v.RampUpRules }).(RampUpRuleResponseArrayOutput)
}

type ExperimentsResponsePtrOutput struct{ *pulumi.OutputState }

func (ExperimentsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExperimentsResponse)(nil)).Elem()
}

func (o ExperimentsResponsePtrOutput) ToExperimentsResponsePtrOutput() ExperimentsResponsePtrOutput {
	return o
}

func (o ExperimentsResponsePtrOutput) ToExperimentsResponsePtrOutputWithContext(ctx context.Context) ExperimentsResponsePtrOutput {
	return o
}

func (o ExperimentsResponsePtrOutput) Elem() ExperimentsResponseOutput {
	return o.ApplyT(func(v *ExperimentsResponse) ExperimentsResponse { return *v }).(ExperimentsResponseOutput)
}

// List of {Microsoft.Web.Hosting.Administration.RampUpRule} objects.
func (o ExperimentsResponsePtrOutput) RampUpRules() RampUpRuleResponseArrayOutput {
	return o.ApplyT(func(v *ExperimentsResponse) []RampUpRuleResponse {
		if v == nil {
			return nil
		}
		return v.RampUpRules
	}).(RampUpRuleResponseArrayOutput)
}

// The IIS handler mappings used to define which handler processes HTTP requests with certain extension.
//             For example it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.
type HandlerMapping struct {
	// Command-line arguments to be passed to the script processor.
	Arguments *string `pulumi:"arguments"`
	// Requests with this extension will be handled using the specified FastCGI application.
	Extension *string `pulumi:"extension"`
	// The absolute path to the FastCGI application.
	ScriptProcessor *string `pulumi:"scriptProcessor"`
}

// HandlerMappingInput is an input type that accepts HandlerMappingArgs and HandlerMappingOutput values.
// You can construct a concrete instance of `HandlerMappingInput` via:
//
//          HandlerMappingArgs{...}
type HandlerMappingInput interface {
	pulumi.Input

	ToHandlerMappingOutput() HandlerMappingOutput
	ToHandlerMappingOutputWithContext(context.Context) HandlerMappingOutput
}

// The IIS handler mappings used to define which handler processes HTTP requests with certain extension.
//             For example it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.
type HandlerMappingArgs struct {
	// Command-line arguments to be passed to the script processor.
	Arguments pulumi.StringPtrInput `pulumi:"arguments"`
	// Requests with this extension will be handled using the specified FastCGI application.
	Extension pulumi.StringPtrInput `pulumi:"extension"`
	// The absolute path to the FastCGI application.
	ScriptProcessor pulumi.StringPtrInput `pulumi:"scriptProcessor"`
}

func (HandlerMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HandlerMapping)(nil)).Elem()
}

func (i HandlerMappingArgs) ToHandlerMappingOutput() HandlerMappingOutput {
	return i.ToHandlerMappingOutputWithContext(context.Background())
}

func (i HandlerMappingArgs) ToHandlerMappingOutputWithContext(ctx context.Context) HandlerMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HandlerMappingOutput)
}

// HandlerMappingArrayInput is an input type that accepts HandlerMappingArray and HandlerMappingArrayOutput values.
// You can construct a concrete instance of `HandlerMappingArrayInput` via:
//
//          HandlerMappingArray{ HandlerMappingArgs{...} }
type HandlerMappingArrayInput interface {
	pulumi.Input

	ToHandlerMappingArrayOutput() HandlerMappingArrayOutput
	ToHandlerMappingArrayOutputWithContext(context.Context) HandlerMappingArrayOutput
}

type HandlerMappingArray []HandlerMappingInput

func (HandlerMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HandlerMapping)(nil)).Elem()
}

func (i HandlerMappingArray) ToHandlerMappingArrayOutput() HandlerMappingArrayOutput {
	return i.ToHandlerMappingArrayOutputWithContext(context.Background())
}

func (i HandlerMappingArray) ToHandlerMappingArrayOutputWithContext(ctx context.Context) HandlerMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HandlerMappingArrayOutput)
}

// The IIS handler mappings used to define which handler processes HTTP requests with certain extension.
//             For example it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.
type HandlerMappingOutput struct{ *pulumi.OutputState }

func (HandlerMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HandlerMapping)(nil)).Elem()
}

func (o HandlerMappingOutput) ToHandlerMappingOutput() HandlerMappingOutput {
	return o
}

func (o HandlerMappingOutput) ToHandlerMappingOutputWithContext(ctx context.Context) HandlerMappingOutput {
	return o
}

// Command-line arguments to be passed to the script processor.
func (o HandlerMappingOutput) Arguments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HandlerMapping) *string { return v.Arguments }).(pulumi.StringPtrOutput)
}

// Requests with this extension will be handled using the specified FastCGI application.
func (o HandlerMappingOutput) Extension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HandlerMapping) *string { return v.Extension }).(pulumi.StringPtrOutput)
}

// The absolute path to the FastCGI application.
func (o HandlerMappingOutput) ScriptProcessor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HandlerMapping) *string { return v.ScriptProcessor }).(pulumi.StringPtrOutput)
}

type HandlerMappingArrayOutput struct{ *pulumi.OutputState }

func (HandlerMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HandlerMapping)(nil)).Elem()
}

func (o HandlerMappingArrayOutput) ToHandlerMappingArrayOutput() HandlerMappingArrayOutput {
	return o
}

func (o HandlerMappingArrayOutput) ToHandlerMappingArrayOutputWithContext(ctx context.Context) HandlerMappingArrayOutput {
	return o
}

func (o HandlerMappingArrayOutput) Index(i pulumi.IntInput) HandlerMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HandlerMapping {
		return vs[0].([]HandlerMapping)[vs[1].(int)]
	}).(HandlerMappingOutput)
}

// The IIS handler mappings used to define which handler processes HTTP requests with certain extension.
//             For example it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.
type HandlerMappingResponse struct {
	// Command-line arguments to be passed to the script processor.
	Arguments *string `pulumi:"arguments"`
	// Requests with this extension will be handled using the specified FastCGI application.
	Extension *string `pulumi:"extension"`
	// The absolute path to the FastCGI application.
	ScriptProcessor *string `pulumi:"scriptProcessor"`
}

// HandlerMappingResponseInput is an input type that accepts HandlerMappingResponseArgs and HandlerMappingResponseOutput values.
// You can construct a concrete instance of `HandlerMappingResponseInput` via:
//
//          HandlerMappingResponseArgs{...}
type HandlerMappingResponseInput interface {
	pulumi.Input

	ToHandlerMappingResponseOutput() HandlerMappingResponseOutput
	ToHandlerMappingResponseOutputWithContext(context.Context) HandlerMappingResponseOutput
}

// The IIS handler mappings used to define which handler processes HTTP requests with certain extension.
//             For example it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.
type HandlerMappingResponseArgs struct {
	// Command-line arguments to be passed to the script processor.
	Arguments pulumi.StringPtrInput `pulumi:"arguments"`
	// Requests with this extension will be handled using the specified FastCGI application.
	Extension pulumi.StringPtrInput `pulumi:"extension"`
	// The absolute path to the FastCGI application.
	ScriptProcessor pulumi.StringPtrInput `pulumi:"scriptProcessor"`
}

func (HandlerMappingResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HandlerMappingResponse)(nil)).Elem()
}

func (i HandlerMappingResponseArgs) ToHandlerMappingResponseOutput() HandlerMappingResponseOutput {
	return i.ToHandlerMappingResponseOutputWithContext(context.Background())
}

func (i HandlerMappingResponseArgs) ToHandlerMappingResponseOutputWithContext(ctx context.Context) HandlerMappingResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HandlerMappingResponseOutput)
}

// HandlerMappingResponseArrayInput is an input type that accepts HandlerMappingResponseArray and HandlerMappingResponseArrayOutput values.
// You can construct a concrete instance of `HandlerMappingResponseArrayInput` via:
//
//          HandlerMappingResponseArray{ HandlerMappingResponseArgs{...} }
type HandlerMappingResponseArrayInput interface {
	pulumi.Input

	ToHandlerMappingResponseArrayOutput() HandlerMappingResponseArrayOutput
	ToHandlerMappingResponseArrayOutputWithContext(context.Context) HandlerMappingResponseArrayOutput
}

type HandlerMappingResponseArray []HandlerMappingResponseInput

func (HandlerMappingResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HandlerMappingResponse)(nil)).Elem()
}

func (i HandlerMappingResponseArray) ToHandlerMappingResponseArrayOutput() HandlerMappingResponseArrayOutput {
	return i.ToHandlerMappingResponseArrayOutputWithContext(context.Background())
}

func (i HandlerMappingResponseArray) ToHandlerMappingResponseArrayOutputWithContext(ctx context.Context) HandlerMappingResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HandlerMappingResponseArrayOutput)
}

// The IIS handler mappings used to define which handler processes HTTP requests with certain extension.
//             For example it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.
type HandlerMappingResponseOutput struct{ *pulumi.OutputState }

func (HandlerMappingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HandlerMappingResponse)(nil)).Elem()
}

func (o HandlerMappingResponseOutput) ToHandlerMappingResponseOutput() HandlerMappingResponseOutput {
	return o
}

func (o HandlerMappingResponseOutput) ToHandlerMappingResponseOutputWithContext(ctx context.Context) HandlerMappingResponseOutput {
	return o
}

// Command-line arguments to be passed to the script processor.
func (o HandlerMappingResponseOutput) Arguments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HandlerMappingResponse) *string { return v.Arguments }).(pulumi.StringPtrOutput)
}

// Requests with this extension will be handled using the specified FastCGI application.
func (o HandlerMappingResponseOutput) Extension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HandlerMappingResponse) *string { return v.Extension }).(pulumi.StringPtrOutput)
}

// The absolute path to the FastCGI application.
func (o HandlerMappingResponseOutput) ScriptProcessor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HandlerMappingResponse) *string { return v.ScriptProcessor }).(pulumi.StringPtrOutput)
}

type HandlerMappingResponseArrayOutput struct{ *pulumi.OutputState }

func (HandlerMappingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HandlerMappingResponse)(nil)).Elem()
}

func (o HandlerMappingResponseArrayOutput) ToHandlerMappingResponseArrayOutput() HandlerMappingResponseArrayOutput {
	return o
}

func (o HandlerMappingResponseArrayOutput) ToHandlerMappingResponseArrayOutputWithContext(ctx context.Context) HandlerMappingResponseArrayOutput {
	return o
}

func (o HandlerMappingResponseArrayOutput) Index(i pulumi.IntInput) HandlerMappingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HandlerMappingResponse {
		return vs[0].([]HandlerMappingResponse)[vs[1].(int)]
	}).(HandlerMappingResponseOutput)
}

type HostNameBindingProperties struct {
	// Azure resource name
	AzureResourceName *string `pulumi:"azureResourceName"`
	// Azure resource type
	AzureResourceType *string `pulumi:"azureResourceType"`
	// Custom DNS record type
	CustomHostNameDnsRecordType *string `pulumi:"customHostNameDnsRecordType"`
	// Fully qualified ARM domain resource URI
	DomainId *string `pulumi:"domainId"`
	// Host name type
	HostNameType *string `pulumi:"hostNameType"`
	// Hostname
	Name *string `pulumi:"name"`
	// Web app name
	SiteName *string `pulumi:"siteName"`
}

// HostNameBindingPropertiesInput is an input type that accepts HostNameBindingPropertiesArgs and HostNameBindingPropertiesOutput values.
// You can construct a concrete instance of `HostNameBindingPropertiesInput` via:
//
//          HostNameBindingPropertiesArgs{...}
type HostNameBindingPropertiesInput interface {
	pulumi.Input

	ToHostNameBindingPropertiesOutput() HostNameBindingPropertiesOutput
	ToHostNameBindingPropertiesOutputWithContext(context.Context) HostNameBindingPropertiesOutput
}

type HostNameBindingPropertiesArgs struct {
	// Azure resource name
	AzureResourceName pulumi.StringPtrInput `pulumi:"azureResourceName"`
	// Azure resource type
	AzureResourceType pulumi.StringPtrInput `pulumi:"azureResourceType"`
	// Custom DNS record type
	CustomHostNameDnsRecordType pulumi.StringPtrInput `pulumi:"customHostNameDnsRecordType"`
	// Fully qualified ARM domain resource URI
	DomainId pulumi.StringPtrInput `pulumi:"domainId"`
	// Host name type
	HostNameType pulumi.StringPtrInput `pulumi:"hostNameType"`
	// Hostname
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Web app name
	SiteName pulumi.StringPtrInput `pulumi:"siteName"`
}

func (HostNameBindingPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostNameBindingProperties)(nil)).Elem()
}

func (i HostNameBindingPropertiesArgs) ToHostNameBindingPropertiesOutput() HostNameBindingPropertiesOutput {
	return i.ToHostNameBindingPropertiesOutputWithContext(context.Background())
}

func (i HostNameBindingPropertiesArgs) ToHostNameBindingPropertiesOutputWithContext(ctx context.Context) HostNameBindingPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostNameBindingPropertiesOutput)
}

func (i HostNameBindingPropertiesArgs) ToHostNameBindingPropertiesPtrOutput() HostNameBindingPropertiesPtrOutput {
	return i.ToHostNameBindingPropertiesPtrOutputWithContext(context.Background())
}

func (i HostNameBindingPropertiesArgs) ToHostNameBindingPropertiesPtrOutputWithContext(ctx context.Context) HostNameBindingPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostNameBindingPropertiesOutput).ToHostNameBindingPropertiesPtrOutputWithContext(ctx)
}

// HostNameBindingPropertiesPtrInput is an input type that accepts HostNameBindingPropertiesArgs, HostNameBindingPropertiesPtr and HostNameBindingPropertiesPtrOutput values.
// You can construct a concrete instance of `HostNameBindingPropertiesPtrInput` via:
//
//          HostNameBindingPropertiesArgs{...}
//
//  or:
//
//          nil
type HostNameBindingPropertiesPtrInput interface {
	pulumi.Input

	ToHostNameBindingPropertiesPtrOutput() HostNameBindingPropertiesPtrOutput
	ToHostNameBindingPropertiesPtrOutputWithContext(context.Context) HostNameBindingPropertiesPtrOutput
}

type hostNameBindingPropertiesPtrType HostNameBindingPropertiesArgs

func HostNameBindingPropertiesPtr(v *HostNameBindingPropertiesArgs) HostNameBindingPropertiesPtrInput {
	return (*hostNameBindingPropertiesPtrType)(v)
}

func (*hostNameBindingPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HostNameBindingProperties)(nil)).Elem()
}

func (i *hostNameBindingPropertiesPtrType) ToHostNameBindingPropertiesPtrOutput() HostNameBindingPropertiesPtrOutput {
	return i.ToHostNameBindingPropertiesPtrOutputWithContext(context.Background())
}

func (i *hostNameBindingPropertiesPtrType) ToHostNameBindingPropertiesPtrOutputWithContext(ctx context.Context) HostNameBindingPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostNameBindingPropertiesPtrOutput)
}

type HostNameBindingPropertiesOutput struct{ *pulumi.OutputState }

func (HostNameBindingPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostNameBindingProperties)(nil)).Elem()
}

func (o HostNameBindingPropertiesOutput) ToHostNameBindingPropertiesOutput() HostNameBindingPropertiesOutput {
	return o
}

func (o HostNameBindingPropertiesOutput) ToHostNameBindingPropertiesOutputWithContext(ctx context.Context) HostNameBindingPropertiesOutput {
	return o
}

func (o HostNameBindingPropertiesOutput) ToHostNameBindingPropertiesPtrOutput() HostNameBindingPropertiesPtrOutput {
	return o.ToHostNameBindingPropertiesPtrOutputWithContext(context.Background())
}

func (o HostNameBindingPropertiesOutput) ToHostNameBindingPropertiesPtrOutputWithContext(ctx context.Context) HostNameBindingPropertiesPtrOutput {
	return o.ApplyT(func(v HostNameBindingProperties) *HostNameBindingProperties {
		return &v
	}).(HostNameBindingPropertiesPtrOutput)
}

// Azure resource name
func (o HostNameBindingPropertiesOutput) AzureResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameBindingProperties) *string { return v.AzureResourceName }).(pulumi.StringPtrOutput)
}

// Azure resource type
func (o HostNameBindingPropertiesOutput) AzureResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameBindingProperties) *string { return v.AzureResourceType }).(pulumi.StringPtrOutput)
}

// Custom DNS record type
func (o HostNameBindingPropertiesOutput) CustomHostNameDnsRecordType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameBindingProperties) *string { return v.CustomHostNameDnsRecordType }).(pulumi.StringPtrOutput)
}

// Fully qualified ARM domain resource URI
func (o HostNameBindingPropertiesOutput) DomainId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameBindingProperties) *string { return v.DomainId }).(pulumi.StringPtrOutput)
}

// Host name type
func (o HostNameBindingPropertiesOutput) HostNameType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameBindingProperties) *string { return v.HostNameType }).(pulumi.StringPtrOutput)
}

// Hostname
func (o HostNameBindingPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameBindingProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Web app name
func (o HostNameBindingPropertiesOutput) SiteName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameBindingProperties) *string { return v.SiteName }).(pulumi.StringPtrOutput)
}

type HostNameBindingPropertiesPtrOutput struct{ *pulumi.OutputState }

func (HostNameBindingPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostNameBindingProperties)(nil)).Elem()
}

func (o HostNameBindingPropertiesPtrOutput) ToHostNameBindingPropertiesPtrOutput() HostNameBindingPropertiesPtrOutput {
	return o
}

func (o HostNameBindingPropertiesPtrOutput) ToHostNameBindingPropertiesPtrOutputWithContext(ctx context.Context) HostNameBindingPropertiesPtrOutput {
	return o
}

func (o HostNameBindingPropertiesPtrOutput) Elem() HostNameBindingPropertiesOutput {
	return o.ApplyT(func(v *HostNameBindingProperties) HostNameBindingProperties { return *v }).(HostNameBindingPropertiesOutput)
}

// Azure resource name
func (o HostNameBindingPropertiesPtrOutput) AzureResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostNameBindingProperties) *string {
		if v == nil {
			return nil
		}
		return v.AzureResourceName
	}).(pulumi.StringPtrOutput)
}

// Azure resource type
func (o HostNameBindingPropertiesPtrOutput) AzureResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostNameBindingProperties) *string {
		if v == nil {
			return nil
		}
		return v.AzureResourceType
	}).(pulumi.StringPtrOutput)
}

// Custom DNS record type
func (o HostNameBindingPropertiesPtrOutput) CustomHostNameDnsRecordType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostNameBindingProperties) *string {
		if v == nil {
			return nil
		}
		return v.CustomHostNameDnsRecordType
	}).(pulumi.StringPtrOutput)
}

// Fully qualified ARM domain resource URI
func (o HostNameBindingPropertiesPtrOutput) DomainId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostNameBindingProperties) *string {
		if v == nil {
			return nil
		}
		return v.DomainId
	}).(pulumi.StringPtrOutput)
}

// Host name type
func (o HostNameBindingPropertiesPtrOutput) HostNameType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostNameBindingProperties) *string {
		if v == nil {
			return nil
		}
		return v.HostNameType
	}).(pulumi.StringPtrOutput)
}

// Hostname
func (o HostNameBindingPropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostNameBindingProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Web app name
func (o HostNameBindingPropertiesPtrOutput) SiteName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostNameBindingProperties) *string {
		if v == nil {
			return nil
		}
		return v.SiteName
	}).(pulumi.StringPtrOutput)
}

type HostNameBindingResponseProperties struct {
	// Azure resource name
	AzureResourceName *string `pulumi:"azureResourceName"`
	// Azure resource type
	AzureResourceType *string `pulumi:"azureResourceType"`
	// Custom DNS record type
	CustomHostNameDnsRecordType *string `pulumi:"customHostNameDnsRecordType"`
	// Fully qualified ARM domain resource URI
	DomainId *string `pulumi:"domainId"`
	// Host name type
	HostNameType *string `pulumi:"hostNameType"`
	// Hostname
	Name *string `pulumi:"name"`
	// Web app name
	SiteName *string `pulumi:"siteName"`
}

// HostNameBindingResponsePropertiesInput is an input type that accepts HostNameBindingResponsePropertiesArgs and HostNameBindingResponsePropertiesOutput values.
// You can construct a concrete instance of `HostNameBindingResponsePropertiesInput` via:
//
//          HostNameBindingResponsePropertiesArgs{...}
type HostNameBindingResponsePropertiesInput interface {
	pulumi.Input

	ToHostNameBindingResponsePropertiesOutput() HostNameBindingResponsePropertiesOutput
	ToHostNameBindingResponsePropertiesOutputWithContext(context.Context) HostNameBindingResponsePropertiesOutput
}

type HostNameBindingResponsePropertiesArgs struct {
	// Azure resource name
	AzureResourceName pulumi.StringPtrInput `pulumi:"azureResourceName"`
	// Azure resource type
	AzureResourceType pulumi.StringPtrInput `pulumi:"azureResourceType"`
	// Custom DNS record type
	CustomHostNameDnsRecordType pulumi.StringPtrInput `pulumi:"customHostNameDnsRecordType"`
	// Fully qualified ARM domain resource URI
	DomainId pulumi.StringPtrInput `pulumi:"domainId"`
	// Host name type
	HostNameType pulumi.StringPtrInput `pulumi:"hostNameType"`
	// Hostname
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Web app name
	SiteName pulumi.StringPtrInput `pulumi:"siteName"`
}

func (HostNameBindingResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostNameBindingResponseProperties)(nil)).Elem()
}

func (i HostNameBindingResponsePropertiesArgs) ToHostNameBindingResponsePropertiesOutput() HostNameBindingResponsePropertiesOutput {
	return i.ToHostNameBindingResponsePropertiesOutputWithContext(context.Background())
}

func (i HostNameBindingResponsePropertiesArgs) ToHostNameBindingResponsePropertiesOutputWithContext(ctx context.Context) HostNameBindingResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostNameBindingResponsePropertiesOutput)
}

func (i HostNameBindingResponsePropertiesArgs) ToHostNameBindingResponsePropertiesPtrOutput() HostNameBindingResponsePropertiesPtrOutput {
	return i.ToHostNameBindingResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i HostNameBindingResponsePropertiesArgs) ToHostNameBindingResponsePropertiesPtrOutputWithContext(ctx context.Context) HostNameBindingResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostNameBindingResponsePropertiesOutput).ToHostNameBindingResponsePropertiesPtrOutputWithContext(ctx)
}

// HostNameBindingResponsePropertiesPtrInput is an input type that accepts HostNameBindingResponsePropertiesArgs, HostNameBindingResponsePropertiesPtr and HostNameBindingResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `HostNameBindingResponsePropertiesPtrInput` via:
//
//          HostNameBindingResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type HostNameBindingResponsePropertiesPtrInput interface {
	pulumi.Input

	ToHostNameBindingResponsePropertiesPtrOutput() HostNameBindingResponsePropertiesPtrOutput
	ToHostNameBindingResponsePropertiesPtrOutputWithContext(context.Context) HostNameBindingResponsePropertiesPtrOutput
}

type hostNameBindingResponsePropertiesPtrType HostNameBindingResponsePropertiesArgs

func HostNameBindingResponsePropertiesPtr(v *HostNameBindingResponsePropertiesArgs) HostNameBindingResponsePropertiesPtrInput {
	return (*hostNameBindingResponsePropertiesPtrType)(v)
}

func (*hostNameBindingResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HostNameBindingResponseProperties)(nil)).Elem()
}

func (i *hostNameBindingResponsePropertiesPtrType) ToHostNameBindingResponsePropertiesPtrOutput() HostNameBindingResponsePropertiesPtrOutput {
	return i.ToHostNameBindingResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *hostNameBindingResponsePropertiesPtrType) ToHostNameBindingResponsePropertiesPtrOutputWithContext(ctx context.Context) HostNameBindingResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostNameBindingResponsePropertiesPtrOutput)
}

type HostNameBindingResponsePropertiesOutput struct{ *pulumi.OutputState }

func (HostNameBindingResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostNameBindingResponseProperties)(nil)).Elem()
}

func (o HostNameBindingResponsePropertiesOutput) ToHostNameBindingResponsePropertiesOutput() HostNameBindingResponsePropertiesOutput {
	return o
}

func (o HostNameBindingResponsePropertiesOutput) ToHostNameBindingResponsePropertiesOutputWithContext(ctx context.Context) HostNameBindingResponsePropertiesOutput {
	return o
}

func (o HostNameBindingResponsePropertiesOutput) ToHostNameBindingResponsePropertiesPtrOutput() HostNameBindingResponsePropertiesPtrOutput {
	return o.ToHostNameBindingResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o HostNameBindingResponsePropertiesOutput) ToHostNameBindingResponsePropertiesPtrOutputWithContext(ctx context.Context) HostNameBindingResponsePropertiesPtrOutput {
	return o.ApplyT(func(v HostNameBindingResponseProperties) *HostNameBindingResponseProperties {
		return &v
	}).(HostNameBindingResponsePropertiesPtrOutput)
}

// Azure resource name
func (o HostNameBindingResponsePropertiesOutput) AzureResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameBindingResponseProperties) *string { return v.AzureResourceName }).(pulumi.StringPtrOutput)
}

// Azure resource type
func (o HostNameBindingResponsePropertiesOutput) AzureResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameBindingResponseProperties) *string { return v.AzureResourceType }).(pulumi.StringPtrOutput)
}

// Custom DNS record type
func (o HostNameBindingResponsePropertiesOutput) CustomHostNameDnsRecordType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameBindingResponseProperties) *string { return v.CustomHostNameDnsRecordType }).(pulumi.StringPtrOutput)
}

// Fully qualified ARM domain resource URI
func (o HostNameBindingResponsePropertiesOutput) DomainId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameBindingResponseProperties) *string { return v.DomainId }).(pulumi.StringPtrOutput)
}

// Host name type
func (o HostNameBindingResponsePropertiesOutput) HostNameType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameBindingResponseProperties) *string { return v.HostNameType }).(pulumi.StringPtrOutput)
}

// Hostname
func (o HostNameBindingResponsePropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameBindingResponseProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Web app name
func (o HostNameBindingResponsePropertiesOutput) SiteName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameBindingResponseProperties) *string { return v.SiteName }).(pulumi.StringPtrOutput)
}

type HostNameBindingResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (HostNameBindingResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostNameBindingResponseProperties)(nil)).Elem()
}

func (o HostNameBindingResponsePropertiesPtrOutput) ToHostNameBindingResponsePropertiesPtrOutput() HostNameBindingResponsePropertiesPtrOutput {
	return o
}

func (o HostNameBindingResponsePropertiesPtrOutput) ToHostNameBindingResponsePropertiesPtrOutputWithContext(ctx context.Context) HostNameBindingResponsePropertiesPtrOutput {
	return o
}

func (o HostNameBindingResponsePropertiesPtrOutput) Elem() HostNameBindingResponsePropertiesOutput {
	return o.ApplyT(func(v *HostNameBindingResponseProperties) HostNameBindingResponseProperties { return *v }).(HostNameBindingResponsePropertiesOutput)
}

// Azure resource name
func (o HostNameBindingResponsePropertiesPtrOutput) AzureResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostNameBindingResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.AzureResourceName
	}).(pulumi.StringPtrOutput)
}

// Azure resource type
func (o HostNameBindingResponsePropertiesPtrOutput) AzureResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostNameBindingResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.AzureResourceType
	}).(pulumi.StringPtrOutput)
}

// Custom DNS record type
func (o HostNameBindingResponsePropertiesPtrOutput) CustomHostNameDnsRecordType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostNameBindingResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.CustomHostNameDnsRecordType
	}).(pulumi.StringPtrOutput)
}

// Fully qualified ARM domain resource URI
func (o HostNameBindingResponsePropertiesPtrOutput) DomainId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostNameBindingResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.DomainId
	}).(pulumi.StringPtrOutput)
}

// Host name type
func (o HostNameBindingResponsePropertiesPtrOutput) HostNameType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostNameBindingResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.HostNameType
	}).(pulumi.StringPtrOutput)
}

// Hostname
func (o HostNameBindingResponsePropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostNameBindingResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Web app name
func (o HostNameBindingResponsePropertiesPtrOutput) SiteName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostNameBindingResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.SiteName
	}).(pulumi.StringPtrOutput)
}

// Object that represents a SSL-enabled host name.
type HostNameSslState struct {
	// Host name
	Name *string `pulumi:"name"`
	// SSL type
	SslState string `pulumi:"sslState"`
	// SSL cert thumbprint
	Thumbprint *string `pulumi:"thumbprint"`
	// Set this flag to update existing host name
	ToUpdate *bool `pulumi:"toUpdate"`
	// Virtual IP address assigned to the host name if IP based SSL is enabled
	VirtualIP *string `pulumi:"virtualIP"`
}

// HostNameSslStateInput is an input type that accepts HostNameSslStateArgs and HostNameSslStateOutput values.
// You can construct a concrete instance of `HostNameSslStateInput` via:
//
//          HostNameSslStateArgs{...}
type HostNameSslStateInput interface {
	pulumi.Input

	ToHostNameSslStateOutput() HostNameSslStateOutput
	ToHostNameSslStateOutputWithContext(context.Context) HostNameSslStateOutput
}

// Object that represents a SSL-enabled host name.
type HostNameSslStateArgs struct {
	// Host name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// SSL type
	SslState pulumi.StringInput `pulumi:"sslState"`
	// SSL cert thumbprint
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
	// Set this flag to update existing host name
	ToUpdate pulumi.BoolPtrInput `pulumi:"toUpdate"`
	// Virtual IP address assigned to the host name if IP based SSL is enabled
	VirtualIP pulumi.StringPtrInput `pulumi:"virtualIP"`
}

func (HostNameSslStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostNameSslState)(nil)).Elem()
}

func (i HostNameSslStateArgs) ToHostNameSslStateOutput() HostNameSslStateOutput {
	return i.ToHostNameSslStateOutputWithContext(context.Background())
}

func (i HostNameSslStateArgs) ToHostNameSslStateOutputWithContext(ctx context.Context) HostNameSslStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostNameSslStateOutput)
}

// HostNameSslStateArrayInput is an input type that accepts HostNameSslStateArray and HostNameSslStateArrayOutput values.
// You can construct a concrete instance of `HostNameSslStateArrayInput` via:
//
//          HostNameSslStateArray{ HostNameSslStateArgs{...} }
type HostNameSslStateArrayInput interface {
	pulumi.Input

	ToHostNameSslStateArrayOutput() HostNameSslStateArrayOutput
	ToHostNameSslStateArrayOutputWithContext(context.Context) HostNameSslStateArrayOutput
}

type HostNameSslStateArray []HostNameSslStateInput

func (HostNameSslStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostNameSslState)(nil)).Elem()
}

func (i HostNameSslStateArray) ToHostNameSslStateArrayOutput() HostNameSslStateArrayOutput {
	return i.ToHostNameSslStateArrayOutputWithContext(context.Background())
}

func (i HostNameSslStateArray) ToHostNameSslStateArrayOutputWithContext(ctx context.Context) HostNameSslStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostNameSslStateArrayOutput)
}

// Object that represents a SSL-enabled host name.
type HostNameSslStateOutput struct{ *pulumi.OutputState }

func (HostNameSslStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostNameSslState)(nil)).Elem()
}

func (o HostNameSslStateOutput) ToHostNameSslStateOutput() HostNameSslStateOutput {
	return o
}

func (o HostNameSslStateOutput) ToHostNameSslStateOutputWithContext(ctx context.Context) HostNameSslStateOutput {
	return o
}

// Host name
func (o HostNameSslStateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslState) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// SSL type
func (o HostNameSslStateOutput) SslState() pulumi.StringOutput {
	return o.ApplyT(func(v HostNameSslState) string { return v.SslState }).(pulumi.StringOutput)
}

// SSL cert thumbprint
func (o HostNameSslStateOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslState) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

// Set this flag to update existing host name
func (o HostNameSslStateOutput) ToUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HostNameSslState) *bool { return v.ToUpdate }).(pulumi.BoolPtrOutput)
}

// Virtual IP address assigned to the host name if IP based SSL is enabled
func (o HostNameSslStateOutput) VirtualIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslState) *string { return v.VirtualIP }).(pulumi.StringPtrOutput)
}

type HostNameSslStateArrayOutput struct{ *pulumi.OutputState }

func (HostNameSslStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostNameSslState)(nil)).Elem()
}

func (o HostNameSslStateArrayOutput) ToHostNameSslStateArrayOutput() HostNameSslStateArrayOutput {
	return o
}

func (o HostNameSslStateArrayOutput) ToHostNameSslStateArrayOutputWithContext(ctx context.Context) HostNameSslStateArrayOutput {
	return o
}

func (o HostNameSslStateArrayOutput) Index(i pulumi.IntInput) HostNameSslStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostNameSslState {
		return vs[0].([]HostNameSslState)[vs[1].(int)]
	}).(HostNameSslStateOutput)
}

// Object that represents a SSL-enabled host name.
type HostNameSslStateResponse struct {
	// Host name
	Name *string `pulumi:"name"`
	// SSL type
	SslState string `pulumi:"sslState"`
	// SSL cert thumbprint
	Thumbprint *string `pulumi:"thumbprint"`
	// Set this flag to update existing host name
	ToUpdate *bool `pulumi:"toUpdate"`
	// Virtual IP address assigned to the host name if IP based SSL is enabled
	VirtualIP *string `pulumi:"virtualIP"`
}

// HostNameSslStateResponseInput is an input type that accepts HostNameSslStateResponseArgs and HostNameSslStateResponseOutput values.
// You can construct a concrete instance of `HostNameSslStateResponseInput` via:
//
//          HostNameSslStateResponseArgs{...}
type HostNameSslStateResponseInput interface {
	pulumi.Input

	ToHostNameSslStateResponseOutput() HostNameSslStateResponseOutput
	ToHostNameSslStateResponseOutputWithContext(context.Context) HostNameSslStateResponseOutput
}

// Object that represents a SSL-enabled host name.
type HostNameSslStateResponseArgs struct {
	// Host name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// SSL type
	SslState pulumi.StringInput `pulumi:"sslState"`
	// SSL cert thumbprint
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
	// Set this flag to update existing host name
	ToUpdate pulumi.BoolPtrInput `pulumi:"toUpdate"`
	// Virtual IP address assigned to the host name if IP based SSL is enabled
	VirtualIP pulumi.StringPtrInput `pulumi:"virtualIP"`
}

func (HostNameSslStateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostNameSslStateResponse)(nil)).Elem()
}

func (i HostNameSslStateResponseArgs) ToHostNameSslStateResponseOutput() HostNameSslStateResponseOutput {
	return i.ToHostNameSslStateResponseOutputWithContext(context.Background())
}

func (i HostNameSslStateResponseArgs) ToHostNameSslStateResponseOutputWithContext(ctx context.Context) HostNameSslStateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostNameSslStateResponseOutput)
}

// HostNameSslStateResponseArrayInput is an input type that accepts HostNameSslStateResponseArray and HostNameSslStateResponseArrayOutput values.
// You can construct a concrete instance of `HostNameSslStateResponseArrayInput` via:
//
//          HostNameSslStateResponseArray{ HostNameSslStateResponseArgs{...} }
type HostNameSslStateResponseArrayInput interface {
	pulumi.Input

	ToHostNameSslStateResponseArrayOutput() HostNameSslStateResponseArrayOutput
	ToHostNameSslStateResponseArrayOutputWithContext(context.Context) HostNameSslStateResponseArrayOutput
}

type HostNameSslStateResponseArray []HostNameSslStateResponseInput

func (HostNameSslStateResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostNameSslStateResponse)(nil)).Elem()
}

func (i HostNameSslStateResponseArray) ToHostNameSslStateResponseArrayOutput() HostNameSslStateResponseArrayOutput {
	return i.ToHostNameSslStateResponseArrayOutputWithContext(context.Background())
}

func (i HostNameSslStateResponseArray) ToHostNameSslStateResponseArrayOutputWithContext(ctx context.Context) HostNameSslStateResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostNameSslStateResponseArrayOutput)
}

// Object that represents a SSL-enabled host name.
type HostNameSslStateResponseOutput struct{ *pulumi.OutputState }

func (HostNameSslStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostNameSslStateResponse)(nil)).Elem()
}

func (o HostNameSslStateResponseOutput) ToHostNameSslStateResponseOutput() HostNameSslStateResponseOutput {
	return o
}

func (o HostNameSslStateResponseOutput) ToHostNameSslStateResponseOutputWithContext(ctx context.Context) HostNameSslStateResponseOutput {
	return o
}

// Host name
func (o HostNameSslStateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslStateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// SSL type
func (o HostNameSslStateResponseOutput) SslState() pulumi.StringOutput {
	return o.ApplyT(func(v HostNameSslStateResponse) string { return v.SslState }).(pulumi.StringOutput)
}

// SSL cert thumbprint
func (o HostNameSslStateResponseOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslStateResponse) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

// Set this flag to update existing host name
func (o HostNameSslStateResponseOutput) ToUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HostNameSslStateResponse) *bool { return v.ToUpdate }).(pulumi.BoolPtrOutput)
}

// Virtual IP address assigned to the host name if IP based SSL is enabled
func (o HostNameSslStateResponseOutput) VirtualIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslStateResponse) *string { return v.VirtualIP }).(pulumi.StringPtrOutput)
}

type HostNameSslStateResponseArrayOutput struct{ *pulumi.OutputState }

func (HostNameSslStateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostNameSslStateResponse)(nil)).Elem()
}

func (o HostNameSslStateResponseArrayOutput) ToHostNameSslStateResponseArrayOutput() HostNameSslStateResponseArrayOutput {
	return o
}

func (o HostNameSslStateResponseArrayOutput) ToHostNameSslStateResponseArrayOutputWithContext(ctx context.Context) HostNameSslStateResponseArrayOutput {
	return o
}

func (o HostNameSslStateResponseArrayOutput) Index(i pulumi.IntInput) HostNameSslStateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostNameSslStateResponse {
		return vs[0].([]HostNameSslStateResponse)[vs[1].(int)]
	}).(HostNameSslStateResponseOutput)
}

// Description of an hostingEnvironment (App Service Environment)
type HostingEnvironmentType struct {
	// Kind of resource
	Kind *string `pulumi:"kind"`
	// Resource Location
	Location string `pulumi:"location"`
	// Resource Name
	Name       *string                              `pulumi:"name"`
	Properties HostingEnvironmentResponseProperties `pulumi:"properties"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type *string `pulumi:"type"`
}

// HostingEnvironmentTypeInput is an input type that accepts HostingEnvironmentTypeArgs and HostingEnvironmentTypeOutput values.
// You can construct a concrete instance of `HostingEnvironmentTypeInput` via:
//
//          HostingEnvironmentTypeArgs{...}
type HostingEnvironmentTypeInput interface {
	pulumi.Input

	ToHostingEnvironmentTypeOutput() HostingEnvironmentTypeOutput
	ToHostingEnvironmentTypeOutputWithContext(context.Context) HostingEnvironmentTypeOutput
}

// Description of an hostingEnvironment (App Service Environment)
type HostingEnvironmentTypeArgs struct {
	// Kind of resource
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource Name
	Name       pulumi.StringPtrInput                     `pulumi:"name"`
	Properties HostingEnvironmentResponsePropertiesInput `pulumi:"properties"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (HostingEnvironmentTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingEnvironmentType)(nil)).Elem()
}

func (i HostingEnvironmentTypeArgs) ToHostingEnvironmentTypeOutput() HostingEnvironmentTypeOutput {
	return i.ToHostingEnvironmentTypeOutputWithContext(context.Background())
}

func (i HostingEnvironmentTypeArgs) ToHostingEnvironmentTypeOutputWithContext(ctx context.Context) HostingEnvironmentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingEnvironmentTypeOutput)
}

// Description of an hostingEnvironment (App Service Environment)
type HostingEnvironmentTypeOutput struct{ *pulumi.OutputState }

func (HostingEnvironmentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingEnvironmentType)(nil)).Elem()
}

func (o HostingEnvironmentTypeOutput) ToHostingEnvironmentTypeOutput() HostingEnvironmentTypeOutput {
	return o
}

func (o HostingEnvironmentTypeOutput) ToHostingEnvironmentTypeOutputWithContext(ctx context.Context) HostingEnvironmentTypeOutput {
	return o
}

// Kind of resource
func (o HostingEnvironmentTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location
func (o HostingEnvironmentTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v HostingEnvironmentType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name
func (o HostingEnvironmentTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o HostingEnvironmentTypeOutput) Properties() HostingEnvironmentResponsePropertiesOutput {
	return o.ApplyT(func(v HostingEnvironmentType) HostingEnvironmentResponseProperties { return v.Properties }).(HostingEnvironmentResponsePropertiesOutput)
}

// Resource tags
func (o HostingEnvironmentTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v HostingEnvironmentType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o HostingEnvironmentTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Specification for a hostingEnvironment (App Service Environment) to use for this resource
type HostingEnvironmentProfile struct {
	// Resource id of the hostingEnvironment (App Service Environment)
	Id *string `pulumi:"id"`
	// Name of the hostingEnvironment (App Service Environment) (read only)
	Name *string `pulumi:"name"`
	// Resource type of the hostingEnvironment (App Service Environment) (read only)
	Type *string `pulumi:"type"`
}

// HostingEnvironmentProfileInput is an input type that accepts HostingEnvironmentProfileArgs and HostingEnvironmentProfileOutput values.
// You can construct a concrete instance of `HostingEnvironmentProfileInput` via:
//
//          HostingEnvironmentProfileArgs{...}
type HostingEnvironmentProfileInput interface {
	pulumi.Input

	ToHostingEnvironmentProfileOutput() HostingEnvironmentProfileOutput
	ToHostingEnvironmentProfileOutputWithContext(context.Context) HostingEnvironmentProfileOutput
}

// Specification for a hostingEnvironment (App Service Environment) to use for this resource
type HostingEnvironmentProfileArgs struct {
	// Resource id of the hostingEnvironment (App Service Environment)
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the hostingEnvironment (App Service Environment) (read only)
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Resource type of the hostingEnvironment (App Service Environment) (read only)
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (HostingEnvironmentProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingEnvironmentProfile)(nil)).Elem()
}

func (i HostingEnvironmentProfileArgs) ToHostingEnvironmentProfileOutput() HostingEnvironmentProfileOutput {
	return i.ToHostingEnvironmentProfileOutputWithContext(context.Background())
}

func (i HostingEnvironmentProfileArgs) ToHostingEnvironmentProfileOutputWithContext(ctx context.Context) HostingEnvironmentProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingEnvironmentProfileOutput)
}

func (i HostingEnvironmentProfileArgs) ToHostingEnvironmentProfilePtrOutput() HostingEnvironmentProfilePtrOutput {
	return i.ToHostingEnvironmentProfilePtrOutputWithContext(context.Background())
}

func (i HostingEnvironmentProfileArgs) ToHostingEnvironmentProfilePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingEnvironmentProfileOutput).ToHostingEnvironmentProfilePtrOutputWithContext(ctx)
}

// HostingEnvironmentProfilePtrInput is an input type that accepts HostingEnvironmentProfileArgs, HostingEnvironmentProfilePtr and HostingEnvironmentProfilePtrOutput values.
// You can construct a concrete instance of `HostingEnvironmentProfilePtrInput` via:
//
//          HostingEnvironmentProfileArgs{...}
//
//  or:
//
//          nil
type HostingEnvironmentProfilePtrInput interface {
	pulumi.Input

	ToHostingEnvironmentProfilePtrOutput() HostingEnvironmentProfilePtrOutput
	ToHostingEnvironmentProfilePtrOutputWithContext(context.Context) HostingEnvironmentProfilePtrOutput
}

type hostingEnvironmentProfilePtrType HostingEnvironmentProfileArgs

func HostingEnvironmentProfilePtr(v *HostingEnvironmentProfileArgs) HostingEnvironmentProfilePtrInput {
	return (*hostingEnvironmentProfilePtrType)(v)
}

func (*hostingEnvironmentProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingEnvironmentProfile)(nil)).Elem()
}

func (i *hostingEnvironmentProfilePtrType) ToHostingEnvironmentProfilePtrOutput() HostingEnvironmentProfilePtrOutput {
	return i.ToHostingEnvironmentProfilePtrOutputWithContext(context.Background())
}

func (i *hostingEnvironmentProfilePtrType) ToHostingEnvironmentProfilePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingEnvironmentProfilePtrOutput)
}

// Specification for a hostingEnvironment (App Service Environment) to use for this resource
type HostingEnvironmentProfileOutput struct{ *pulumi.OutputState }

func (HostingEnvironmentProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingEnvironmentProfile)(nil)).Elem()
}

func (o HostingEnvironmentProfileOutput) ToHostingEnvironmentProfileOutput() HostingEnvironmentProfileOutput {
	return o
}

func (o HostingEnvironmentProfileOutput) ToHostingEnvironmentProfileOutputWithContext(ctx context.Context) HostingEnvironmentProfileOutput {
	return o
}

func (o HostingEnvironmentProfileOutput) ToHostingEnvironmentProfilePtrOutput() HostingEnvironmentProfilePtrOutput {
	return o.ToHostingEnvironmentProfilePtrOutputWithContext(context.Background())
}

func (o HostingEnvironmentProfileOutput) ToHostingEnvironmentProfilePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfilePtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProfile) *HostingEnvironmentProfile {
		return &v
	}).(HostingEnvironmentProfilePtrOutput)
}

// Resource id of the hostingEnvironment (App Service Environment)
func (o HostingEnvironmentProfileOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProfile) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the hostingEnvironment (App Service Environment) (read only)
func (o HostingEnvironmentProfileOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProfile) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Resource type of the hostingEnvironment (App Service Environment) (read only)
func (o HostingEnvironmentProfileOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProfile) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type HostingEnvironmentProfilePtrOutput struct{ *pulumi.OutputState }

func (HostingEnvironmentProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingEnvironmentProfile)(nil)).Elem()
}

func (o HostingEnvironmentProfilePtrOutput) ToHostingEnvironmentProfilePtrOutput() HostingEnvironmentProfilePtrOutput {
	return o
}

func (o HostingEnvironmentProfilePtrOutput) ToHostingEnvironmentProfilePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfilePtrOutput {
	return o
}

func (o HostingEnvironmentProfilePtrOutput) Elem() HostingEnvironmentProfileOutput {
	return o.ApplyT(func(v *HostingEnvironmentProfile) HostingEnvironmentProfile { return *v }).(HostingEnvironmentProfileOutput)
}

// Resource id of the hostingEnvironment (App Service Environment)
func (o HostingEnvironmentProfilePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProfile) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Name of the hostingEnvironment (App Service Environment) (read only)
func (o HostingEnvironmentProfilePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProfile) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Resource type of the hostingEnvironment (App Service Environment) (read only)
func (o HostingEnvironmentProfilePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProfile) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Specification for a hostingEnvironment (App Service Environment) to use for this resource
type HostingEnvironmentProfileResponse struct {
	// Resource id of the hostingEnvironment (App Service Environment)
	Id *string `pulumi:"id"`
	// Name of the hostingEnvironment (App Service Environment) (read only)
	Name *string `pulumi:"name"`
	// Resource type of the hostingEnvironment (App Service Environment) (read only)
	Type *string `pulumi:"type"`
}

// HostingEnvironmentProfileResponseInput is an input type that accepts HostingEnvironmentProfileResponseArgs and HostingEnvironmentProfileResponseOutput values.
// You can construct a concrete instance of `HostingEnvironmentProfileResponseInput` via:
//
//          HostingEnvironmentProfileResponseArgs{...}
type HostingEnvironmentProfileResponseInput interface {
	pulumi.Input

	ToHostingEnvironmentProfileResponseOutput() HostingEnvironmentProfileResponseOutput
	ToHostingEnvironmentProfileResponseOutputWithContext(context.Context) HostingEnvironmentProfileResponseOutput
}

// Specification for a hostingEnvironment (App Service Environment) to use for this resource
type HostingEnvironmentProfileResponseArgs struct {
	// Resource id of the hostingEnvironment (App Service Environment)
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the hostingEnvironment (App Service Environment) (read only)
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Resource type of the hostingEnvironment (App Service Environment) (read only)
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (HostingEnvironmentProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingEnvironmentProfileResponse)(nil)).Elem()
}

func (i HostingEnvironmentProfileResponseArgs) ToHostingEnvironmentProfileResponseOutput() HostingEnvironmentProfileResponseOutput {
	return i.ToHostingEnvironmentProfileResponseOutputWithContext(context.Background())
}

func (i HostingEnvironmentProfileResponseArgs) ToHostingEnvironmentProfileResponseOutputWithContext(ctx context.Context) HostingEnvironmentProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingEnvironmentProfileResponseOutput)
}

func (i HostingEnvironmentProfileResponseArgs) ToHostingEnvironmentProfileResponsePtrOutput() HostingEnvironmentProfileResponsePtrOutput {
	return i.ToHostingEnvironmentProfileResponsePtrOutputWithContext(context.Background())
}

func (i HostingEnvironmentProfileResponseArgs) ToHostingEnvironmentProfileResponsePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingEnvironmentProfileResponseOutput).ToHostingEnvironmentProfileResponsePtrOutputWithContext(ctx)
}

// HostingEnvironmentProfileResponsePtrInput is an input type that accepts HostingEnvironmentProfileResponseArgs, HostingEnvironmentProfileResponsePtr and HostingEnvironmentProfileResponsePtrOutput values.
// You can construct a concrete instance of `HostingEnvironmentProfileResponsePtrInput` via:
//
//          HostingEnvironmentProfileResponseArgs{...}
//
//  or:
//
//          nil
type HostingEnvironmentProfileResponsePtrInput interface {
	pulumi.Input

	ToHostingEnvironmentProfileResponsePtrOutput() HostingEnvironmentProfileResponsePtrOutput
	ToHostingEnvironmentProfileResponsePtrOutputWithContext(context.Context) HostingEnvironmentProfileResponsePtrOutput
}

type hostingEnvironmentProfileResponsePtrType HostingEnvironmentProfileResponseArgs

func HostingEnvironmentProfileResponsePtr(v *HostingEnvironmentProfileResponseArgs) HostingEnvironmentProfileResponsePtrInput {
	return (*hostingEnvironmentProfileResponsePtrType)(v)
}

func (*hostingEnvironmentProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingEnvironmentProfileResponse)(nil)).Elem()
}

func (i *hostingEnvironmentProfileResponsePtrType) ToHostingEnvironmentProfileResponsePtrOutput() HostingEnvironmentProfileResponsePtrOutput {
	return i.ToHostingEnvironmentProfileResponsePtrOutputWithContext(context.Background())
}

func (i *hostingEnvironmentProfileResponsePtrType) ToHostingEnvironmentProfileResponsePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingEnvironmentProfileResponsePtrOutput)
}

// Specification for a hostingEnvironment (App Service Environment) to use for this resource
type HostingEnvironmentProfileResponseOutput struct{ *pulumi.OutputState }

func (HostingEnvironmentProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingEnvironmentProfileResponse)(nil)).Elem()
}

func (o HostingEnvironmentProfileResponseOutput) ToHostingEnvironmentProfileResponseOutput() HostingEnvironmentProfileResponseOutput {
	return o
}

func (o HostingEnvironmentProfileResponseOutput) ToHostingEnvironmentProfileResponseOutputWithContext(ctx context.Context) HostingEnvironmentProfileResponseOutput {
	return o
}

func (o HostingEnvironmentProfileResponseOutput) ToHostingEnvironmentProfileResponsePtrOutput() HostingEnvironmentProfileResponsePtrOutput {
	return o.ToHostingEnvironmentProfileResponsePtrOutputWithContext(context.Background())
}

func (o HostingEnvironmentProfileResponseOutput) ToHostingEnvironmentProfileResponsePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfileResponsePtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProfileResponse) *HostingEnvironmentProfileResponse {
		return &v
	}).(HostingEnvironmentProfileResponsePtrOutput)
}

// Resource id of the hostingEnvironment (App Service Environment)
func (o HostingEnvironmentProfileResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProfileResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the hostingEnvironment (App Service Environment) (read only)
func (o HostingEnvironmentProfileResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProfileResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Resource type of the hostingEnvironment (App Service Environment) (read only)
func (o HostingEnvironmentProfileResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProfileResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type HostingEnvironmentProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (HostingEnvironmentProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingEnvironmentProfileResponse)(nil)).Elem()
}

func (o HostingEnvironmentProfileResponsePtrOutput) ToHostingEnvironmentProfileResponsePtrOutput() HostingEnvironmentProfileResponsePtrOutput {
	return o
}

func (o HostingEnvironmentProfileResponsePtrOutput) ToHostingEnvironmentProfileResponsePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfileResponsePtrOutput {
	return o
}

func (o HostingEnvironmentProfileResponsePtrOutput) Elem() HostingEnvironmentProfileResponseOutput {
	return o.ApplyT(func(v *HostingEnvironmentProfileResponse) HostingEnvironmentProfileResponse { return *v }).(HostingEnvironmentProfileResponseOutput)
}

// Resource id of the hostingEnvironment (App Service Environment)
func (o HostingEnvironmentProfileResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Name of the hostingEnvironment (App Service Environment) (read only)
func (o HostingEnvironmentProfileResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Resource type of the hostingEnvironment (App Service Environment) (read only)
func (o HostingEnvironmentProfileResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type HostingEnvironmentProperties struct {
	// List of comma separated strings describing which VM sizes are allowed for front-ends
	AllowedMultiSizes *string `pulumi:"allowedMultiSizes"`
	// List of comma separated strings describing which VM sizes are allowed for workers
	AllowedWorkerSizes *string `pulumi:"allowedWorkerSizes"`
	// Api Management Account associated with this Hosting Environment
	ApiManagementAccountId *string `pulumi:"apiManagementAccountId"`
	// Custom settings for changing the behavior of the hosting environment
	ClusterSettings []NameValuePair `pulumi:"clusterSettings"`
	// Edition of the metadata database for the hostingEnvironment (App Service Environment) e.g. "Standard"
	DatabaseEdition *string `pulumi:"databaseEdition"`
	// Service objective of the metadata database for the hostingEnvironment (App Service Environment) e.g. "S0"
	DatabaseServiceObjective *string `pulumi:"databaseServiceObjective"`
	// DNS suffix of the hostingEnvironment (App Service Environment)
	DnsSuffix *string `pulumi:"dnsSuffix"`
	// Current total, used, and available worker capacities
	EnvironmentCapacities []StampCapacity `pulumi:"environmentCapacities"`
	// True/false indicating whether the hostingEnvironment (App Service Environment) is healthy
	EnvironmentIsHealthy *bool `pulumi:"environmentIsHealthy"`
	// Detailed message about with results of the last check of the hostingEnvironment (App Service Environment)
	EnvironmentStatus *string `pulumi:"environmentStatus"`
	// Specifies which endpoints to serve internally in the hostingEnvironment's (App Service Environment) VNET
	InternalLoadBalancingMode *string `pulumi:"internalLoadBalancingMode"`
	// Number of IP SSL addresses reserved for this hostingEnvironment (App Service Environment)
	IpsslAddressCount *int `pulumi:"ipsslAddressCount"`
	// Last deployment action on this hostingEnvironment (App Service Environment)
	LastAction *string `pulumi:"lastAction"`
	// Result of the last deployment action on this hostingEnvironment (App Service Environment)
	LastActionResult *string `pulumi:"lastActionResult"`
	// Location of the hostingEnvironment (App Service Environment), e.g. "West US"
	Location *string `pulumi:"location"`
	// Maximum number of VMs in this hostingEnvironment (App Service Environment)
	MaximumNumberOfMachines *int `pulumi:"maximumNumberOfMachines"`
	// Number of front-end instances
	MultiRoleCount *int `pulumi:"multiRoleCount"`
	// Front-end VM size, e.g. "Medium", "Large"
	MultiSize *string `pulumi:"multiSize"`
	// Name of the hostingEnvironment (App Service Environment)
	Name *string `pulumi:"name"`
	// Access control list for controlling traffic to the hostingEnvironment (App Service Environment)
	NetworkAccessControlList []NetworkAccessControlEntry `pulumi:"networkAccessControlList"`
	// Provisioning state of the hostingEnvironment (App Service Environment)
	ProvisioningState *string `pulumi:"provisioningState"`
	// Resource group of the hostingEnvironment (App Service Environment)
	ResourceGroup *string `pulumi:"resourceGroup"`
	// Current status of the hostingEnvironment (App Service Environment)
	Status string `pulumi:"status"`
	// Subscription of the hostingEnvironment (App Service Environment)
	SubscriptionId *string `pulumi:"subscriptionId"`
	// True/false indicating whether the hostingEnvironment is suspended. The environment can be suspended e.g. when the management endpoint is no longer available
	//             (most likely because NSG blocked the incoming traffic)
	Suspended *bool `pulumi:"suspended"`
	// Number of upgrade domains of this hostingEnvironment (App Service Environment)
	UpgradeDomains *int `pulumi:"upgradeDomains"`
	// Description of IP SSL mapping for this hostingEnvironment (App Service Environment)
	VipMappings []VirtualIPMapping `pulumi:"vipMappings"`
	// Description of the hostingEnvironment's (App Service Environment) virtual network
	VirtualNetwork *VirtualNetworkProfile `pulumi:"virtualNetwork"`
	// Name of the hostingEnvironment's (App Service Environment) virtual network
	VnetName *string `pulumi:"vnetName"`
	// Resource group of the hostingEnvironment's (App Service Environment) virtual network
	VnetResourceGroupName *string `pulumi:"vnetResourceGroupName"`
	// Subnet of the hostingEnvironment's (App Service Environment) virtual network
	VnetSubnetName *string `pulumi:"vnetSubnetName"`
	// Description of worker pools with worker size ids, VM sizes, and number of workers in each pool
	WorkerPools []WorkerPool `pulumi:"workerPools"`
}

// HostingEnvironmentPropertiesInput is an input type that accepts HostingEnvironmentPropertiesArgs and HostingEnvironmentPropertiesOutput values.
// You can construct a concrete instance of `HostingEnvironmentPropertiesInput` via:
//
//          HostingEnvironmentPropertiesArgs{...}
type HostingEnvironmentPropertiesInput interface {
	pulumi.Input

	ToHostingEnvironmentPropertiesOutput() HostingEnvironmentPropertiesOutput
	ToHostingEnvironmentPropertiesOutputWithContext(context.Context) HostingEnvironmentPropertiesOutput
}

type HostingEnvironmentPropertiesArgs struct {
	// List of comma separated strings describing which VM sizes are allowed for front-ends
	AllowedMultiSizes pulumi.StringPtrInput `pulumi:"allowedMultiSizes"`
	// List of comma separated strings describing which VM sizes are allowed for workers
	AllowedWorkerSizes pulumi.StringPtrInput `pulumi:"allowedWorkerSizes"`
	// Api Management Account associated with this Hosting Environment
	ApiManagementAccountId pulumi.StringPtrInput `pulumi:"apiManagementAccountId"`
	// Custom settings for changing the behavior of the hosting environment
	ClusterSettings NameValuePairArrayInput `pulumi:"clusterSettings"`
	// Edition of the metadata database for the hostingEnvironment (App Service Environment) e.g. "Standard"
	DatabaseEdition pulumi.StringPtrInput `pulumi:"databaseEdition"`
	// Service objective of the metadata database for the hostingEnvironment (App Service Environment) e.g. "S0"
	DatabaseServiceObjective pulumi.StringPtrInput `pulumi:"databaseServiceObjective"`
	// DNS suffix of the hostingEnvironment (App Service Environment)
	DnsSuffix pulumi.StringPtrInput `pulumi:"dnsSuffix"`
	// Current total, used, and available worker capacities
	EnvironmentCapacities StampCapacityArrayInput `pulumi:"environmentCapacities"`
	// True/false indicating whether the hostingEnvironment (App Service Environment) is healthy
	EnvironmentIsHealthy pulumi.BoolPtrInput `pulumi:"environmentIsHealthy"`
	// Detailed message about with results of the last check of the hostingEnvironment (App Service Environment)
	EnvironmentStatus pulumi.StringPtrInput `pulumi:"environmentStatus"`
	// Specifies which endpoints to serve internally in the hostingEnvironment's (App Service Environment) VNET
	InternalLoadBalancingMode pulumi.StringPtrInput `pulumi:"internalLoadBalancingMode"`
	// Number of IP SSL addresses reserved for this hostingEnvironment (App Service Environment)
	IpsslAddressCount pulumi.IntPtrInput `pulumi:"ipsslAddressCount"`
	// Last deployment action on this hostingEnvironment (App Service Environment)
	LastAction pulumi.StringPtrInput `pulumi:"lastAction"`
	// Result of the last deployment action on this hostingEnvironment (App Service Environment)
	LastActionResult pulumi.StringPtrInput `pulumi:"lastActionResult"`
	// Location of the hostingEnvironment (App Service Environment), e.g. "West US"
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Maximum number of VMs in this hostingEnvironment (App Service Environment)
	MaximumNumberOfMachines pulumi.IntPtrInput `pulumi:"maximumNumberOfMachines"`
	// Number of front-end instances
	MultiRoleCount pulumi.IntPtrInput `pulumi:"multiRoleCount"`
	// Front-end VM size, e.g. "Medium", "Large"
	MultiSize pulumi.StringPtrInput `pulumi:"multiSize"`
	// Name of the hostingEnvironment (App Service Environment)
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Access control list for controlling traffic to the hostingEnvironment (App Service Environment)
	NetworkAccessControlList NetworkAccessControlEntryArrayInput `pulumi:"networkAccessControlList"`
	// Provisioning state of the hostingEnvironment (App Service Environment)
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Resource group of the hostingEnvironment (App Service Environment)
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	// Current status of the hostingEnvironment (App Service Environment)
	Status pulumi.StringInput `pulumi:"status"`
	// Subscription of the hostingEnvironment (App Service Environment)
	SubscriptionId pulumi.StringPtrInput `pulumi:"subscriptionId"`
	// True/false indicating whether the hostingEnvironment is suspended. The environment can be suspended e.g. when the management endpoint is no longer available
	//             (most likely because NSG blocked the incoming traffic)
	Suspended pulumi.BoolPtrInput `pulumi:"suspended"`
	// Number of upgrade domains of this hostingEnvironment (App Service Environment)
	UpgradeDomains pulumi.IntPtrInput `pulumi:"upgradeDomains"`
	// Description of IP SSL mapping for this hostingEnvironment (App Service Environment)
	VipMappings VirtualIPMappingArrayInput `pulumi:"vipMappings"`
	// Description of the hostingEnvironment's (App Service Environment) virtual network
	VirtualNetwork VirtualNetworkProfilePtrInput `pulumi:"virtualNetwork"`
	// Name of the hostingEnvironment's (App Service Environment) virtual network
	VnetName pulumi.StringPtrInput `pulumi:"vnetName"`
	// Resource group of the hostingEnvironment's (App Service Environment) virtual network
	VnetResourceGroupName pulumi.StringPtrInput `pulumi:"vnetResourceGroupName"`
	// Subnet of the hostingEnvironment's (App Service Environment) virtual network
	VnetSubnetName pulumi.StringPtrInput `pulumi:"vnetSubnetName"`
	// Description of worker pools with worker size ids, VM sizes, and number of workers in each pool
	WorkerPools WorkerPoolArrayInput `pulumi:"workerPools"`
}

func (HostingEnvironmentPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingEnvironmentProperties)(nil)).Elem()
}

func (i HostingEnvironmentPropertiesArgs) ToHostingEnvironmentPropertiesOutput() HostingEnvironmentPropertiesOutput {
	return i.ToHostingEnvironmentPropertiesOutputWithContext(context.Background())
}

func (i HostingEnvironmentPropertiesArgs) ToHostingEnvironmentPropertiesOutputWithContext(ctx context.Context) HostingEnvironmentPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingEnvironmentPropertiesOutput)
}

func (i HostingEnvironmentPropertiesArgs) ToHostingEnvironmentPropertiesPtrOutput() HostingEnvironmentPropertiesPtrOutput {
	return i.ToHostingEnvironmentPropertiesPtrOutputWithContext(context.Background())
}

func (i HostingEnvironmentPropertiesArgs) ToHostingEnvironmentPropertiesPtrOutputWithContext(ctx context.Context) HostingEnvironmentPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingEnvironmentPropertiesOutput).ToHostingEnvironmentPropertiesPtrOutputWithContext(ctx)
}

// HostingEnvironmentPropertiesPtrInput is an input type that accepts HostingEnvironmentPropertiesArgs, HostingEnvironmentPropertiesPtr and HostingEnvironmentPropertiesPtrOutput values.
// You can construct a concrete instance of `HostingEnvironmentPropertiesPtrInput` via:
//
//          HostingEnvironmentPropertiesArgs{...}
//
//  or:
//
//          nil
type HostingEnvironmentPropertiesPtrInput interface {
	pulumi.Input

	ToHostingEnvironmentPropertiesPtrOutput() HostingEnvironmentPropertiesPtrOutput
	ToHostingEnvironmentPropertiesPtrOutputWithContext(context.Context) HostingEnvironmentPropertiesPtrOutput
}

type hostingEnvironmentPropertiesPtrType HostingEnvironmentPropertiesArgs

func HostingEnvironmentPropertiesPtr(v *HostingEnvironmentPropertiesArgs) HostingEnvironmentPropertiesPtrInput {
	return (*hostingEnvironmentPropertiesPtrType)(v)
}

func (*hostingEnvironmentPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingEnvironmentProperties)(nil)).Elem()
}

func (i *hostingEnvironmentPropertiesPtrType) ToHostingEnvironmentPropertiesPtrOutput() HostingEnvironmentPropertiesPtrOutput {
	return i.ToHostingEnvironmentPropertiesPtrOutputWithContext(context.Background())
}

func (i *hostingEnvironmentPropertiesPtrType) ToHostingEnvironmentPropertiesPtrOutputWithContext(ctx context.Context) HostingEnvironmentPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingEnvironmentPropertiesPtrOutput)
}

type HostingEnvironmentPropertiesOutput struct{ *pulumi.OutputState }

func (HostingEnvironmentPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingEnvironmentProperties)(nil)).Elem()
}

func (o HostingEnvironmentPropertiesOutput) ToHostingEnvironmentPropertiesOutput() HostingEnvironmentPropertiesOutput {
	return o
}

func (o HostingEnvironmentPropertiesOutput) ToHostingEnvironmentPropertiesOutputWithContext(ctx context.Context) HostingEnvironmentPropertiesOutput {
	return o
}

func (o HostingEnvironmentPropertiesOutput) ToHostingEnvironmentPropertiesPtrOutput() HostingEnvironmentPropertiesPtrOutput {
	return o.ToHostingEnvironmentPropertiesPtrOutputWithContext(context.Background())
}

func (o HostingEnvironmentPropertiesOutput) ToHostingEnvironmentPropertiesPtrOutputWithContext(ctx context.Context) HostingEnvironmentPropertiesPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProperties) *HostingEnvironmentProperties {
		return &v
	}).(HostingEnvironmentPropertiesPtrOutput)
}

// List of comma separated strings describing which VM sizes are allowed for front-ends
func (o HostingEnvironmentPropertiesOutput) AllowedMultiSizes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProperties) *string { return v.AllowedMultiSizes }).(pulumi.StringPtrOutput)
}

// List of comma separated strings describing which VM sizes are allowed for workers
func (o HostingEnvironmentPropertiesOutput) AllowedWorkerSizes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProperties) *string { return v.AllowedWorkerSizes }).(pulumi.StringPtrOutput)
}

// Api Management Account associated with this Hosting Environment
func (o HostingEnvironmentPropertiesOutput) ApiManagementAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProperties) *string { return v.ApiManagementAccountId }).(pulumi.StringPtrOutput)
}

// Custom settings for changing the behavior of the hosting environment
func (o HostingEnvironmentPropertiesOutput) ClusterSettings() NameValuePairArrayOutput {
	return o.ApplyT(func(v HostingEnvironmentProperties) []NameValuePair { return v.ClusterSettings }).(NameValuePairArrayOutput)
}

// Edition of the metadata database for the hostingEnvironment (App Service Environment) e.g. "Standard"
func (o HostingEnvironmentPropertiesOutput) DatabaseEdition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProperties) *string { return v.DatabaseEdition }).(pulumi.StringPtrOutput)
}

// Service objective of the metadata database for the hostingEnvironment (App Service Environment) e.g. "S0"
func (o HostingEnvironmentPropertiesOutput) DatabaseServiceObjective() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProperties) *string { return v.DatabaseServiceObjective }).(pulumi.StringPtrOutput)
}

// DNS suffix of the hostingEnvironment (App Service Environment)
func (o HostingEnvironmentPropertiesOutput) DnsSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProperties) *string { return v.DnsSuffix }).(pulumi.StringPtrOutput)
}

// Current total, used, and available worker capacities
func (o HostingEnvironmentPropertiesOutput) EnvironmentCapacities() StampCapacityArrayOutput {
	return o.ApplyT(func(v HostingEnvironmentProperties) []StampCapacity { return v.EnvironmentCapacities }).(StampCapacityArrayOutput)
}

// True/false indicating whether the hostingEnvironment (App Service Environment) is healthy
func (o HostingEnvironmentPropertiesOutput) EnvironmentIsHealthy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProperties) *bool { return v.EnvironmentIsHealthy }).(pulumi.BoolPtrOutput)
}

// Detailed message about with results of the last check of the hostingEnvironment (App Service Environment)
func (o HostingEnvironmentPropertiesOutput) EnvironmentStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProperties) *string { return v.EnvironmentStatus }).(pulumi.StringPtrOutput)
}

// Specifies which endpoints to serve internally in the hostingEnvironment's (App Service Environment) VNET
func (o HostingEnvironmentPropertiesOutput) InternalLoadBalancingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProperties) *string { return v.InternalLoadBalancingMode }).(pulumi.StringPtrOutput)
}

// Number of IP SSL addresses reserved for this hostingEnvironment (App Service Environment)
func (o HostingEnvironmentPropertiesOutput) IpsslAddressCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProperties) *int { return v.IpsslAddressCount }).(pulumi.IntPtrOutput)
}

// Last deployment action on this hostingEnvironment (App Service Environment)
func (o HostingEnvironmentPropertiesOutput) LastAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProperties) *string { return v.LastAction }).(pulumi.StringPtrOutput)
}

// Result of the last deployment action on this hostingEnvironment (App Service Environment)
func (o HostingEnvironmentPropertiesOutput) LastActionResult() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProperties) *string { return v.LastActionResult }).(pulumi.StringPtrOutput)
}

// Location of the hostingEnvironment (App Service Environment), e.g. "West US"
func (o HostingEnvironmentPropertiesOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProperties) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Maximum number of VMs in this hostingEnvironment (App Service Environment)
func (o HostingEnvironmentPropertiesOutput) MaximumNumberOfMachines() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProperties) *int { return v.MaximumNumberOfMachines }).(pulumi.IntPtrOutput)
}

// Number of front-end instances
func (o HostingEnvironmentPropertiesOutput) MultiRoleCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProperties) *int { return v.MultiRoleCount }).(pulumi.IntPtrOutput)
}

// Front-end VM size, e.g. "Medium", "Large"
func (o HostingEnvironmentPropertiesOutput) MultiSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProperties) *string { return v.MultiSize }).(pulumi.StringPtrOutput)
}

// Name of the hostingEnvironment (App Service Environment)
func (o HostingEnvironmentPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Access control list for controlling traffic to the hostingEnvironment (App Service Environment)
func (o HostingEnvironmentPropertiesOutput) NetworkAccessControlList() NetworkAccessControlEntryArrayOutput {
	return o.ApplyT(func(v HostingEnvironmentProperties) []NetworkAccessControlEntry { return v.NetworkAccessControlList }).(NetworkAccessControlEntryArrayOutput)
}

// Provisioning state of the hostingEnvironment (App Service Environment)
func (o HostingEnvironmentPropertiesOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProperties) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Resource group of the hostingEnvironment (App Service Environment)
func (o HostingEnvironmentPropertiesOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProperties) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// Current status of the hostingEnvironment (App Service Environment)
func (o HostingEnvironmentPropertiesOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v HostingEnvironmentProperties) string { return v.Status }).(pulumi.StringOutput)
}

// Subscription of the hostingEnvironment (App Service Environment)
func (o HostingEnvironmentPropertiesOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProperties) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

// True/false indicating whether the hostingEnvironment is suspended. The environment can be suspended e.g. when the management endpoint is no longer available
//             (most likely because NSG blocked the incoming traffic)
func (o HostingEnvironmentPropertiesOutput) Suspended() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProperties) *bool { return v.Suspended }).(pulumi.BoolPtrOutput)
}

// Number of upgrade domains of this hostingEnvironment (App Service Environment)
func (o HostingEnvironmentPropertiesOutput) UpgradeDomains() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProperties) *int { return v.UpgradeDomains }).(pulumi.IntPtrOutput)
}

// Description of IP SSL mapping for this hostingEnvironment (App Service Environment)
func (o HostingEnvironmentPropertiesOutput) VipMappings() VirtualIPMappingArrayOutput {
	return o.ApplyT(func(v HostingEnvironmentProperties) []VirtualIPMapping { return v.VipMappings }).(VirtualIPMappingArrayOutput)
}

// Description of the hostingEnvironment's (App Service Environment) virtual network
func (o HostingEnvironmentPropertiesOutput) VirtualNetwork() VirtualNetworkProfilePtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProperties) *VirtualNetworkProfile { return v.VirtualNetwork }).(VirtualNetworkProfilePtrOutput)
}

// Name of the hostingEnvironment's (App Service Environment) virtual network
func (o HostingEnvironmentPropertiesOutput) VnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProperties) *string { return v.VnetName }).(pulumi.StringPtrOutput)
}

// Resource group of the hostingEnvironment's (App Service Environment) virtual network
func (o HostingEnvironmentPropertiesOutput) VnetResourceGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProperties) *string { return v.VnetResourceGroupName }).(pulumi.StringPtrOutput)
}

// Subnet of the hostingEnvironment's (App Service Environment) virtual network
func (o HostingEnvironmentPropertiesOutput) VnetSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProperties) *string { return v.VnetSubnetName }).(pulumi.StringPtrOutput)
}

// Description of worker pools with worker size ids, VM sizes, and number of workers in each pool
func (o HostingEnvironmentPropertiesOutput) WorkerPools() WorkerPoolArrayOutput {
	return o.ApplyT(func(v HostingEnvironmentProperties) []WorkerPool { return v.WorkerPools }).(WorkerPoolArrayOutput)
}

type HostingEnvironmentPropertiesPtrOutput struct{ *pulumi.OutputState }

func (HostingEnvironmentPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingEnvironmentProperties)(nil)).Elem()
}

func (o HostingEnvironmentPropertiesPtrOutput) ToHostingEnvironmentPropertiesPtrOutput() HostingEnvironmentPropertiesPtrOutput {
	return o
}

func (o HostingEnvironmentPropertiesPtrOutput) ToHostingEnvironmentPropertiesPtrOutputWithContext(ctx context.Context) HostingEnvironmentPropertiesPtrOutput {
	return o
}

func (o HostingEnvironmentPropertiesPtrOutput) Elem() HostingEnvironmentPropertiesOutput {
	return o.ApplyT(func(v *HostingEnvironmentProperties) HostingEnvironmentProperties { return *v }).(HostingEnvironmentPropertiesOutput)
}

// List of comma separated strings describing which VM sizes are allowed for front-ends
func (o HostingEnvironmentPropertiesPtrOutput) AllowedMultiSizes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProperties) *string {
		if v == nil {
			return nil
		}
		return v.AllowedMultiSizes
	}).(pulumi.StringPtrOutput)
}

// List of comma separated strings describing which VM sizes are allowed for workers
func (o HostingEnvironmentPropertiesPtrOutput) AllowedWorkerSizes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProperties) *string {
		if v == nil {
			return nil
		}
		return v.AllowedWorkerSizes
	}).(pulumi.StringPtrOutput)
}

// Api Management Account associated with this Hosting Environment
func (o HostingEnvironmentPropertiesPtrOutput) ApiManagementAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProperties) *string {
		if v == nil {
			return nil
		}
		return v.ApiManagementAccountId
	}).(pulumi.StringPtrOutput)
}

// Custom settings for changing the behavior of the hosting environment
func (o HostingEnvironmentPropertiesPtrOutput) ClusterSettings() NameValuePairArrayOutput {
	return o.ApplyT(func(v *HostingEnvironmentProperties) []NameValuePair {
		if v == nil {
			return nil
		}
		return v.ClusterSettings
	}).(NameValuePairArrayOutput)
}

// Edition of the metadata database for the hostingEnvironment (App Service Environment) e.g. "Standard"
func (o HostingEnvironmentPropertiesPtrOutput) DatabaseEdition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProperties) *string {
		if v == nil {
			return nil
		}
		return v.DatabaseEdition
	}).(pulumi.StringPtrOutput)
}

// Service objective of the metadata database for the hostingEnvironment (App Service Environment) e.g. "S0"
func (o HostingEnvironmentPropertiesPtrOutput) DatabaseServiceObjective() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProperties) *string {
		if v == nil {
			return nil
		}
		return v.DatabaseServiceObjective
	}).(pulumi.StringPtrOutput)
}

// DNS suffix of the hostingEnvironment (App Service Environment)
func (o HostingEnvironmentPropertiesPtrOutput) DnsSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProperties) *string {
		if v == nil {
			return nil
		}
		return v.DnsSuffix
	}).(pulumi.StringPtrOutput)
}

// Current total, used, and available worker capacities
func (o HostingEnvironmentPropertiesPtrOutput) EnvironmentCapacities() StampCapacityArrayOutput {
	return o.ApplyT(func(v *HostingEnvironmentProperties) []StampCapacity {
		if v == nil {
			return nil
		}
		return v.EnvironmentCapacities
	}).(StampCapacityArrayOutput)
}

// True/false indicating whether the hostingEnvironment (App Service Environment) is healthy
func (o HostingEnvironmentPropertiesPtrOutput) EnvironmentIsHealthy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnvironmentIsHealthy
	}).(pulumi.BoolPtrOutput)
}

// Detailed message about with results of the last check of the hostingEnvironment (App Service Environment)
func (o HostingEnvironmentPropertiesPtrOutput) EnvironmentStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProperties) *string {
		if v == nil {
			return nil
		}
		return v.EnvironmentStatus
	}).(pulumi.StringPtrOutput)
}

// Specifies which endpoints to serve internally in the hostingEnvironment's (App Service Environment) VNET
func (o HostingEnvironmentPropertiesPtrOutput) InternalLoadBalancingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProperties) *string {
		if v == nil {
			return nil
		}
		return v.InternalLoadBalancingMode
	}).(pulumi.StringPtrOutput)
}

// Number of IP SSL addresses reserved for this hostingEnvironment (App Service Environment)
func (o HostingEnvironmentPropertiesPtrOutput) IpsslAddressCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProperties) *int {
		if v == nil {
			return nil
		}
		return v.IpsslAddressCount
	}).(pulumi.IntPtrOutput)
}

// Last deployment action on this hostingEnvironment (App Service Environment)
func (o HostingEnvironmentPropertiesPtrOutput) LastAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProperties) *string {
		if v == nil {
			return nil
		}
		return v.LastAction
	}).(pulumi.StringPtrOutput)
}

// Result of the last deployment action on this hostingEnvironment (App Service Environment)
func (o HostingEnvironmentPropertiesPtrOutput) LastActionResult() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProperties) *string {
		if v == nil {
			return nil
		}
		return v.LastActionResult
	}).(pulumi.StringPtrOutput)
}

// Location of the hostingEnvironment (App Service Environment), e.g. "West US"
func (o HostingEnvironmentPropertiesPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProperties) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Maximum number of VMs in this hostingEnvironment (App Service Environment)
func (o HostingEnvironmentPropertiesPtrOutput) MaximumNumberOfMachines() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProperties) *int {
		if v == nil {
			return nil
		}
		return v.MaximumNumberOfMachines
	}).(pulumi.IntPtrOutput)
}

// Number of front-end instances
func (o HostingEnvironmentPropertiesPtrOutput) MultiRoleCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProperties) *int {
		if v == nil {
			return nil
		}
		return v.MultiRoleCount
	}).(pulumi.IntPtrOutput)
}

// Front-end VM size, e.g. "Medium", "Large"
func (o HostingEnvironmentPropertiesPtrOutput) MultiSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProperties) *string {
		if v == nil {
			return nil
		}
		return v.MultiSize
	}).(pulumi.StringPtrOutput)
}

// Name of the hostingEnvironment (App Service Environment)
func (o HostingEnvironmentPropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Access control list for controlling traffic to the hostingEnvironment (App Service Environment)
func (o HostingEnvironmentPropertiesPtrOutput) NetworkAccessControlList() NetworkAccessControlEntryArrayOutput {
	return o.ApplyT(func(v *HostingEnvironmentProperties) []NetworkAccessControlEntry {
		if v == nil {
			return nil
		}
		return v.NetworkAccessControlList
	}).(NetworkAccessControlEntryArrayOutput)
}

// Provisioning state of the hostingEnvironment (App Service Environment)
func (o HostingEnvironmentPropertiesPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProperties) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Resource group of the hostingEnvironment (App Service Environment)
func (o HostingEnvironmentPropertiesPtrOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProperties) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGroup
	}).(pulumi.StringPtrOutput)
}

// Current status of the hostingEnvironment (App Service Environment)
func (o HostingEnvironmentPropertiesPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// Subscription of the hostingEnvironment (App Service Environment)
func (o HostingEnvironmentPropertiesPtrOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProperties) *string {
		if v == nil {
			return nil
		}
		return v.SubscriptionId
	}).(pulumi.StringPtrOutput)
}

// True/false indicating whether the hostingEnvironment is suspended. The environment can be suspended e.g. when the management endpoint is no longer available
//             (most likely because NSG blocked the incoming traffic)
func (o HostingEnvironmentPropertiesPtrOutput) Suspended() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Suspended
	}).(pulumi.BoolPtrOutput)
}

// Number of upgrade domains of this hostingEnvironment (App Service Environment)
func (o HostingEnvironmentPropertiesPtrOutput) UpgradeDomains() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProperties) *int {
		if v == nil {
			return nil
		}
		return v.UpgradeDomains
	}).(pulumi.IntPtrOutput)
}

// Description of IP SSL mapping for this hostingEnvironment (App Service Environment)
func (o HostingEnvironmentPropertiesPtrOutput) VipMappings() VirtualIPMappingArrayOutput {
	return o.ApplyT(func(v *HostingEnvironmentProperties) []VirtualIPMapping {
		if v == nil {
			return nil
		}
		return v.VipMappings
	}).(VirtualIPMappingArrayOutput)
}

// Description of the hostingEnvironment's (App Service Environment) virtual network
func (o HostingEnvironmentPropertiesPtrOutput) VirtualNetwork() VirtualNetworkProfilePtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProperties) *VirtualNetworkProfile {
		if v == nil {
			return nil
		}
		return v.VirtualNetwork
	}).(VirtualNetworkProfilePtrOutput)
}

// Name of the hostingEnvironment's (App Service Environment) virtual network
func (o HostingEnvironmentPropertiesPtrOutput) VnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProperties) *string {
		if v == nil {
			return nil
		}
		return v.VnetName
	}).(pulumi.StringPtrOutput)
}

// Resource group of the hostingEnvironment's (App Service Environment) virtual network
func (o HostingEnvironmentPropertiesPtrOutput) VnetResourceGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProperties) *string {
		if v == nil {
			return nil
		}
		return v.VnetResourceGroupName
	}).(pulumi.StringPtrOutput)
}

// Subnet of the hostingEnvironment's (App Service Environment) virtual network
func (o HostingEnvironmentPropertiesPtrOutput) VnetSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProperties) *string {
		if v == nil {
			return nil
		}
		return v.VnetSubnetName
	}).(pulumi.StringPtrOutput)
}

// Description of worker pools with worker size ids, VM sizes, and number of workers in each pool
func (o HostingEnvironmentPropertiesPtrOutput) WorkerPools() WorkerPoolArrayOutput {
	return o.ApplyT(func(v *HostingEnvironmentProperties) []WorkerPool {
		if v == nil {
			return nil
		}
		return v.WorkerPools
	}).(WorkerPoolArrayOutput)
}

type HostingEnvironmentResponseProperties struct {
	// List of comma separated strings describing which VM sizes are allowed for front-ends
	AllowedMultiSizes *string `pulumi:"allowedMultiSizes"`
	// List of comma separated strings describing which VM sizes are allowed for workers
	AllowedWorkerSizes *string `pulumi:"allowedWorkerSizes"`
	// Api Management Account associated with this Hosting Environment
	ApiManagementAccountId *string `pulumi:"apiManagementAccountId"`
	// Custom settings for changing the behavior of the hosting environment
	ClusterSettings []NameValuePairResponse `pulumi:"clusterSettings"`
	// Edition of the metadata database for the hostingEnvironment (App Service Environment) e.g. "Standard"
	DatabaseEdition *string `pulumi:"databaseEdition"`
	// Service objective of the metadata database for the hostingEnvironment (App Service Environment) e.g. "S0"
	DatabaseServiceObjective *string `pulumi:"databaseServiceObjective"`
	// DNS suffix of the hostingEnvironment (App Service Environment)
	DnsSuffix *string `pulumi:"dnsSuffix"`
	// Current total, used, and available worker capacities
	EnvironmentCapacities []StampCapacityResponse `pulumi:"environmentCapacities"`
	// True/false indicating whether the hostingEnvironment (App Service Environment) is healthy
	EnvironmentIsHealthy *bool `pulumi:"environmentIsHealthy"`
	// Detailed message about with results of the last check of the hostingEnvironment (App Service Environment)
	EnvironmentStatus *string `pulumi:"environmentStatus"`
	// Specifies which endpoints to serve internally in the hostingEnvironment's (App Service Environment) VNET
	InternalLoadBalancingMode *string `pulumi:"internalLoadBalancingMode"`
	// Number of IP SSL addresses reserved for this hostingEnvironment (App Service Environment)
	IpsslAddressCount *int `pulumi:"ipsslAddressCount"`
	// Last deployment action on this hostingEnvironment (App Service Environment)
	LastAction *string `pulumi:"lastAction"`
	// Result of the last deployment action on this hostingEnvironment (App Service Environment)
	LastActionResult *string `pulumi:"lastActionResult"`
	// Location of the hostingEnvironment (App Service Environment), e.g. "West US"
	Location *string `pulumi:"location"`
	// Maximum number of VMs in this hostingEnvironment (App Service Environment)
	MaximumNumberOfMachines *int `pulumi:"maximumNumberOfMachines"`
	// Number of front-end instances
	MultiRoleCount *int `pulumi:"multiRoleCount"`
	// Front-end VM size, e.g. "Medium", "Large"
	MultiSize *string `pulumi:"multiSize"`
	// Name of the hostingEnvironment (App Service Environment)
	Name *string `pulumi:"name"`
	// Access control list for controlling traffic to the hostingEnvironment (App Service Environment)
	NetworkAccessControlList []NetworkAccessControlEntryResponse `pulumi:"networkAccessControlList"`
	// Provisioning state of the hostingEnvironment (App Service Environment)
	ProvisioningState *string `pulumi:"provisioningState"`
	// Resource group of the hostingEnvironment (App Service Environment)
	ResourceGroup *string `pulumi:"resourceGroup"`
	// Current status of the hostingEnvironment (App Service Environment)
	Status string `pulumi:"status"`
	// Subscription of the hostingEnvironment (App Service Environment)
	SubscriptionId *string `pulumi:"subscriptionId"`
	// True/false indicating whether the hostingEnvironment is suspended. The environment can be suspended e.g. when the management endpoint is no longer available
	//             (most likely because NSG blocked the incoming traffic)
	Suspended *bool `pulumi:"suspended"`
	// Number of upgrade domains of this hostingEnvironment (App Service Environment)
	UpgradeDomains *int `pulumi:"upgradeDomains"`
	// Description of IP SSL mapping for this hostingEnvironment (App Service Environment)
	VipMappings []VirtualIPMappingResponse `pulumi:"vipMappings"`
	// Description of the hostingEnvironment's (App Service Environment) virtual network
	VirtualNetwork *VirtualNetworkProfileResponse `pulumi:"virtualNetwork"`
	// Name of the hostingEnvironment's (App Service Environment) virtual network
	VnetName *string `pulumi:"vnetName"`
	// Resource group of the hostingEnvironment's (App Service Environment) virtual network
	VnetResourceGroupName *string `pulumi:"vnetResourceGroupName"`
	// Subnet of the hostingEnvironment's (App Service Environment) virtual network
	VnetSubnetName *string `pulumi:"vnetSubnetName"`
	// Description of worker pools with worker size ids, VM sizes, and number of workers in each pool
	WorkerPools []WorkerPoolResponse `pulumi:"workerPools"`
}

// HostingEnvironmentResponsePropertiesInput is an input type that accepts HostingEnvironmentResponsePropertiesArgs and HostingEnvironmentResponsePropertiesOutput values.
// You can construct a concrete instance of `HostingEnvironmentResponsePropertiesInput` via:
//
//          HostingEnvironmentResponsePropertiesArgs{...}
type HostingEnvironmentResponsePropertiesInput interface {
	pulumi.Input

	ToHostingEnvironmentResponsePropertiesOutput() HostingEnvironmentResponsePropertiesOutput
	ToHostingEnvironmentResponsePropertiesOutputWithContext(context.Context) HostingEnvironmentResponsePropertiesOutput
}

type HostingEnvironmentResponsePropertiesArgs struct {
	// List of comma separated strings describing which VM sizes are allowed for front-ends
	AllowedMultiSizes pulumi.StringPtrInput `pulumi:"allowedMultiSizes"`
	// List of comma separated strings describing which VM sizes are allowed for workers
	AllowedWorkerSizes pulumi.StringPtrInput `pulumi:"allowedWorkerSizes"`
	// Api Management Account associated with this Hosting Environment
	ApiManagementAccountId pulumi.StringPtrInput `pulumi:"apiManagementAccountId"`
	// Custom settings for changing the behavior of the hosting environment
	ClusterSettings NameValuePairResponseArrayInput `pulumi:"clusterSettings"`
	// Edition of the metadata database for the hostingEnvironment (App Service Environment) e.g. "Standard"
	DatabaseEdition pulumi.StringPtrInput `pulumi:"databaseEdition"`
	// Service objective of the metadata database for the hostingEnvironment (App Service Environment) e.g. "S0"
	DatabaseServiceObjective pulumi.StringPtrInput `pulumi:"databaseServiceObjective"`
	// DNS suffix of the hostingEnvironment (App Service Environment)
	DnsSuffix pulumi.StringPtrInput `pulumi:"dnsSuffix"`
	// Current total, used, and available worker capacities
	EnvironmentCapacities StampCapacityResponseArrayInput `pulumi:"environmentCapacities"`
	// True/false indicating whether the hostingEnvironment (App Service Environment) is healthy
	EnvironmentIsHealthy pulumi.BoolPtrInput `pulumi:"environmentIsHealthy"`
	// Detailed message about with results of the last check of the hostingEnvironment (App Service Environment)
	EnvironmentStatus pulumi.StringPtrInput `pulumi:"environmentStatus"`
	// Specifies which endpoints to serve internally in the hostingEnvironment's (App Service Environment) VNET
	InternalLoadBalancingMode pulumi.StringPtrInput `pulumi:"internalLoadBalancingMode"`
	// Number of IP SSL addresses reserved for this hostingEnvironment (App Service Environment)
	IpsslAddressCount pulumi.IntPtrInput `pulumi:"ipsslAddressCount"`
	// Last deployment action on this hostingEnvironment (App Service Environment)
	LastAction pulumi.StringPtrInput `pulumi:"lastAction"`
	// Result of the last deployment action on this hostingEnvironment (App Service Environment)
	LastActionResult pulumi.StringPtrInput `pulumi:"lastActionResult"`
	// Location of the hostingEnvironment (App Service Environment), e.g. "West US"
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Maximum number of VMs in this hostingEnvironment (App Service Environment)
	MaximumNumberOfMachines pulumi.IntPtrInput `pulumi:"maximumNumberOfMachines"`
	// Number of front-end instances
	MultiRoleCount pulumi.IntPtrInput `pulumi:"multiRoleCount"`
	// Front-end VM size, e.g. "Medium", "Large"
	MultiSize pulumi.StringPtrInput `pulumi:"multiSize"`
	// Name of the hostingEnvironment (App Service Environment)
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Access control list for controlling traffic to the hostingEnvironment (App Service Environment)
	NetworkAccessControlList NetworkAccessControlEntryResponseArrayInput `pulumi:"networkAccessControlList"`
	// Provisioning state of the hostingEnvironment (App Service Environment)
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Resource group of the hostingEnvironment (App Service Environment)
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	// Current status of the hostingEnvironment (App Service Environment)
	Status pulumi.StringInput `pulumi:"status"`
	// Subscription of the hostingEnvironment (App Service Environment)
	SubscriptionId pulumi.StringPtrInput `pulumi:"subscriptionId"`
	// True/false indicating whether the hostingEnvironment is suspended. The environment can be suspended e.g. when the management endpoint is no longer available
	//             (most likely because NSG blocked the incoming traffic)
	Suspended pulumi.BoolPtrInput `pulumi:"suspended"`
	// Number of upgrade domains of this hostingEnvironment (App Service Environment)
	UpgradeDomains pulumi.IntPtrInput `pulumi:"upgradeDomains"`
	// Description of IP SSL mapping for this hostingEnvironment (App Service Environment)
	VipMappings VirtualIPMappingResponseArrayInput `pulumi:"vipMappings"`
	// Description of the hostingEnvironment's (App Service Environment) virtual network
	VirtualNetwork VirtualNetworkProfileResponsePtrInput `pulumi:"virtualNetwork"`
	// Name of the hostingEnvironment's (App Service Environment) virtual network
	VnetName pulumi.StringPtrInput `pulumi:"vnetName"`
	// Resource group of the hostingEnvironment's (App Service Environment) virtual network
	VnetResourceGroupName pulumi.StringPtrInput `pulumi:"vnetResourceGroupName"`
	// Subnet of the hostingEnvironment's (App Service Environment) virtual network
	VnetSubnetName pulumi.StringPtrInput `pulumi:"vnetSubnetName"`
	// Description of worker pools with worker size ids, VM sizes, and number of workers in each pool
	WorkerPools WorkerPoolResponseArrayInput `pulumi:"workerPools"`
}

func (HostingEnvironmentResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingEnvironmentResponseProperties)(nil)).Elem()
}

func (i HostingEnvironmentResponsePropertiesArgs) ToHostingEnvironmentResponsePropertiesOutput() HostingEnvironmentResponsePropertiesOutput {
	return i.ToHostingEnvironmentResponsePropertiesOutputWithContext(context.Background())
}

func (i HostingEnvironmentResponsePropertiesArgs) ToHostingEnvironmentResponsePropertiesOutputWithContext(ctx context.Context) HostingEnvironmentResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingEnvironmentResponsePropertiesOutput)
}

func (i HostingEnvironmentResponsePropertiesArgs) ToHostingEnvironmentResponsePropertiesPtrOutput() HostingEnvironmentResponsePropertiesPtrOutput {
	return i.ToHostingEnvironmentResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i HostingEnvironmentResponsePropertiesArgs) ToHostingEnvironmentResponsePropertiesPtrOutputWithContext(ctx context.Context) HostingEnvironmentResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingEnvironmentResponsePropertiesOutput).ToHostingEnvironmentResponsePropertiesPtrOutputWithContext(ctx)
}

// HostingEnvironmentResponsePropertiesPtrInput is an input type that accepts HostingEnvironmentResponsePropertiesArgs, HostingEnvironmentResponsePropertiesPtr and HostingEnvironmentResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `HostingEnvironmentResponsePropertiesPtrInput` via:
//
//          HostingEnvironmentResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type HostingEnvironmentResponsePropertiesPtrInput interface {
	pulumi.Input

	ToHostingEnvironmentResponsePropertiesPtrOutput() HostingEnvironmentResponsePropertiesPtrOutput
	ToHostingEnvironmentResponsePropertiesPtrOutputWithContext(context.Context) HostingEnvironmentResponsePropertiesPtrOutput
}

type hostingEnvironmentResponsePropertiesPtrType HostingEnvironmentResponsePropertiesArgs

func HostingEnvironmentResponsePropertiesPtr(v *HostingEnvironmentResponsePropertiesArgs) HostingEnvironmentResponsePropertiesPtrInput {
	return (*hostingEnvironmentResponsePropertiesPtrType)(v)
}

func (*hostingEnvironmentResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingEnvironmentResponseProperties)(nil)).Elem()
}

func (i *hostingEnvironmentResponsePropertiesPtrType) ToHostingEnvironmentResponsePropertiesPtrOutput() HostingEnvironmentResponsePropertiesPtrOutput {
	return i.ToHostingEnvironmentResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *hostingEnvironmentResponsePropertiesPtrType) ToHostingEnvironmentResponsePropertiesPtrOutputWithContext(ctx context.Context) HostingEnvironmentResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingEnvironmentResponsePropertiesPtrOutput)
}

type HostingEnvironmentResponsePropertiesOutput struct{ *pulumi.OutputState }

func (HostingEnvironmentResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingEnvironmentResponseProperties)(nil)).Elem()
}

func (o HostingEnvironmentResponsePropertiesOutput) ToHostingEnvironmentResponsePropertiesOutput() HostingEnvironmentResponsePropertiesOutput {
	return o
}

func (o HostingEnvironmentResponsePropertiesOutput) ToHostingEnvironmentResponsePropertiesOutputWithContext(ctx context.Context) HostingEnvironmentResponsePropertiesOutput {
	return o
}

func (o HostingEnvironmentResponsePropertiesOutput) ToHostingEnvironmentResponsePropertiesPtrOutput() HostingEnvironmentResponsePropertiesPtrOutput {
	return o.ToHostingEnvironmentResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o HostingEnvironmentResponsePropertiesOutput) ToHostingEnvironmentResponsePropertiesPtrOutputWithContext(ctx context.Context) HostingEnvironmentResponsePropertiesPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentResponseProperties) *HostingEnvironmentResponseProperties {
		return &v
	}).(HostingEnvironmentResponsePropertiesPtrOutput)
}

// List of comma separated strings describing which VM sizes are allowed for front-ends
func (o HostingEnvironmentResponsePropertiesOutput) AllowedMultiSizes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentResponseProperties) *string { return v.AllowedMultiSizes }).(pulumi.StringPtrOutput)
}

// List of comma separated strings describing which VM sizes are allowed for workers
func (o HostingEnvironmentResponsePropertiesOutput) AllowedWorkerSizes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentResponseProperties) *string { return v.AllowedWorkerSizes }).(pulumi.StringPtrOutput)
}

// Api Management Account associated with this Hosting Environment
func (o HostingEnvironmentResponsePropertiesOutput) ApiManagementAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentResponseProperties) *string { return v.ApiManagementAccountId }).(pulumi.StringPtrOutput)
}

// Custom settings for changing the behavior of the hosting environment
func (o HostingEnvironmentResponsePropertiesOutput) ClusterSettings() NameValuePairResponseArrayOutput {
	return o.ApplyT(func(v HostingEnvironmentResponseProperties) []NameValuePairResponse { return v.ClusterSettings }).(NameValuePairResponseArrayOutput)
}

// Edition of the metadata database for the hostingEnvironment (App Service Environment) e.g. "Standard"
func (o HostingEnvironmentResponsePropertiesOutput) DatabaseEdition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentResponseProperties) *string { return v.DatabaseEdition }).(pulumi.StringPtrOutput)
}

// Service objective of the metadata database for the hostingEnvironment (App Service Environment) e.g. "S0"
func (o HostingEnvironmentResponsePropertiesOutput) DatabaseServiceObjective() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentResponseProperties) *string { return v.DatabaseServiceObjective }).(pulumi.StringPtrOutput)
}

// DNS suffix of the hostingEnvironment (App Service Environment)
func (o HostingEnvironmentResponsePropertiesOutput) DnsSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentResponseProperties) *string { return v.DnsSuffix }).(pulumi.StringPtrOutput)
}

// Current total, used, and available worker capacities
func (o HostingEnvironmentResponsePropertiesOutput) EnvironmentCapacities() StampCapacityResponseArrayOutput {
	return o.ApplyT(func(v HostingEnvironmentResponseProperties) []StampCapacityResponse { return v.EnvironmentCapacities }).(StampCapacityResponseArrayOutput)
}

// True/false indicating whether the hostingEnvironment (App Service Environment) is healthy
func (o HostingEnvironmentResponsePropertiesOutput) EnvironmentIsHealthy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentResponseProperties) *bool { return v.EnvironmentIsHealthy }).(pulumi.BoolPtrOutput)
}

// Detailed message about with results of the last check of the hostingEnvironment (App Service Environment)
func (o HostingEnvironmentResponsePropertiesOutput) EnvironmentStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentResponseProperties) *string { return v.EnvironmentStatus }).(pulumi.StringPtrOutput)
}

// Specifies which endpoints to serve internally in the hostingEnvironment's (App Service Environment) VNET
func (o HostingEnvironmentResponsePropertiesOutput) InternalLoadBalancingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentResponseProperties) *string { return v.InternalLoadBalancingMode }).(pulumi.StringPtrOutput)
}

// Number of IP SSL addresses reserved for this hostingEnvironment (App Service Environment)
func (o HostingEnvironmentResponsePropertiesOutput) IpsslAddressCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentResponseProperties) *int { return v.IpsslAddressCount }).(pulumi.IntPtrOutput)
}

// Last deployment action on this hostingEnvironment (App Service Environment)
func (o HostingEnvironmentResponsePropertiesOutput) LastAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentResponseProperties) *string { return v.LastAction }).(pulumi.StringPtrOutput)
}

// Result of the last deployment action on this hostingEnvironment (App Service Environment)
func (o HostingEnvironmentResponsePropertiesOutput) LastActionResult() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentResponseProperties) *string { return v.LastActionResult }).(pulumi.StringPtrOutput)
}

// Location of the hostingEnvironment (App Service Environment), e.g. "West US"
func (o HostingEnvironmentResponsePropertiesOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentResponseProperties) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Maximum number of VMs in this hostingEnvironment (App Service Environment)
func (o HostingEnvironmentResponsePropertiesOutput) MaximumNumberOfMachines() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentResponseProperties) *int { return v.MaximumNumberOfMachines }).(pulumi.IntPtrOutput)
}

// Number of front-end instances
func (o HostingEnvironmentResponsePropertiesOutput) MultiRoleCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentResponseProperties) *int { return v.MultiRoleCount }).(pulumi.IntPtrOutput)
}

// Front-end VM size, e.g. "Medium", "Large"
func (o HostingEnvironmentResponsePropertiesOutput) MultiSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentResponseProperties) *string { return v.MultiSize }).(pulumi.StringPtrOutput)
}

// Name of the hostingEnvironment (App Service Environment)
func (o HostingEnvironmentResponsePropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentResponseProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Access control list for controlling traffic to the hostingEnvironment (App Service Environment)
func (o HostingEnvironmentResponsePropertiesOutput) NetworkAccessControlList() NetworkAccessControlEntryResponseArrayOutput {
	return o.ApplyT(func(v HostingEnvironmentResponseProperties) []NetworkAccessControlEntryResponse {
		return v.NetworkAccessControlList
	}).(NetworkAccessControlEntryResponseArrayOutput)
}

// Provisioning state of the hostingEnvironment (App Service Environment)
func (o HostingEnvironmentResponsePropertiesOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentResponseProperties) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Resource group of the hostingEnvironment (App Service Environment)
func (o HostingEnvironmentResponsePropertiesOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentResponseProperties) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// Current status of the hostingEnvironment (App Service Environment)
func (o HostingEnvironmentResponsePropertiesOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v HostingEnvironmentResponseProperties) string { return v.Status }).(pulumi.StringOutput)
}

// Subscription of the hostingEnvironment (App Service Environment)
func (o HostingEnvironmentResponsePropertiesOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentResponseProperties) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

// True/false indicating whether the hostingEnvironment is suspended. The environment can be suspended e.g. when the management endpoint is no longer available
//             (most likely because NSG blocked the incoming traffic)
func (o HostingEnvironmentResponsePropertiesOutput) Suspended() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentResponseProperties) *bool { return v.Suspended }).(pulumi.BoolPtrOutput)
}

// Number of upgrade domains of this hostingEnvironment (App Service Environment)
func (o HostingEnvironmentResponsePropertiesOutput) UpgradeDomains() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentResponseProperties) *int { return v.UpgradeDomains }).(pulumi.IntPtrOutput)
}

// Description of IP SSL mapping for this hostingEnvironment (App Service Environment)
func (o HostingEnvironmentResponsePropertiesOutput) VipMappings() VirtualIPMappingResponseArrayOutput {
	return o.ApplyT(func(v HostingEnvironmentResponseProperties) []VirtualIPMappingResponse { return v.VipMappings }).(VirtualIPMappingResponseArrayOutput)
}

// Description of the hostingEnvironment's (App Service Environment) virtual network
func (o HostingEnvironmentResponsePropertiesOutput) VirtualNetwork() VirtualNetworkProfileResponsePtrOutput {
	return o.ApplyT(func(v HostingEnvironmentResponseProperties) *VirtualNetworkProfileResponse { return v.VirtualNetwork }).(VirtualNetworkProfileResponsePtrOutput)
}

// Name of the hostingEnvironment's (App Service Environment) virtual network
func (o HostingEnvironmentResponsePropertiesOutput) VnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentResponseProperties) *string { return v.VnetName }).(pulumi.StringPtrOutput)
}

// Resource group of the hostingEnvironment's (App Service Environment) virtual network
func (o HostingEnvironmentResponsePropertiesOutput) VnetResourceGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentResponseProperties) *string { return v.VnetResourceGroupName }).(pulumi.StringPtrOutput)
}

// Subnet of the hostingEnvironment's (App Service Environment) virtual network
func (o HostingEnvironmentResponsePropertiesOutput) VnetSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentResponseProperties) *string { return v.VnetSubnetName }).(pulumi.StringPtrOutput)
}

// Description of worker pools with worker size ids, VM sizes, and number of workers in each pool
func (o HostingEnvironmentResponsePropertiesOutput) WorkerPools() WorkerPoolResponseArrayOutput {
	return o.ApplyT(func(v HostingEnvironmentResponseProperties) []WorkerPoolResponse { return v.WorkerPools }).(WorkerPoolResponseArrayOutput)
}

type HostingEnvironmentResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (HostingEnvironmentResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingEnvironmentResponseProperties)(nil)).Elem()
}

func (o HostingEnvironmentResponsePropertiesPtrOutput) ToHostingEnvironmentResponsePropertiesPtrOutput() HostingEnvironmentResponsePropertiesPtrOutput {
	return o
}

func (o HostingEnvironmentResponsePropertiesPtrOutput) ToHostingEnvironmentResponsePropertiesPtrOutputWithContext(ctx context.Context) HostingEnvironmentResponsePropertiesPtrOutput {
	return o
}

func (o HostingEnvironmentResponsePropertiesPtrOutput) Elem() HostingEnvironmentResponsePropertiesOutput {
	return o.ApplyT(func(v *HostingEnvironmentResponseProperties) HostingEnvironmentResponseProperties { return *v }).(HostingEnvironmentResponsePropertiesOutput)
}

// List of comma separated strings describing which VM sizes are allowed for front-ends
func (o HostingEnvironmentResponsePropertiesPtrOutput) AllowedMultiSizes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.AllowedMultiSizes
	}).(pulumi.StringPtrOutput)
}

// List of comma separated strings describing which VM sizes are allowed for workers
func (o HostingEnvironmentResponsePropertiesPtrOutput) AllowedWorkerSizes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.AllowedWorkerSizes
	}).(pulumi.StringPtrOutput)
}

// Api Management Account associated with this Hosting Environment
func (o HostingEnvironmentResponsePropertiesPtrOutput) ApiManagementAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.ApiManagementAccountId
	}).(pulumi.StringPtrOutput)
}

// Custom settings for changing the behavior of the hosting environment
func (o HostingEnvironmentResponsePropertiesPtrOutput) ClusterSettings() NameValuePairResponseArrayOutput {
	return o.ApplyT(func(v *HostingEnvironmentResponseProperties) []NameValuePairResponse {
		if v == nil {
			return nil
		}
		return v.ClusterSettings
	}).(NameValuePairResponseArrayOutput)
}

// Edition of the metadata database for the hostingEnvironment (App Service Environment) e.g. "Standard"
func (o HostingEnvironmentResponsePropertiesPtrOutput) DatabaseEdition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.DatabaseEdition
	}).(pulumi.StringPtrOutput)
}

// Service objective of the metadata database for the hostingEnvironment (App Service Environment) e.g. "S0"
func (o HostingEnvironmentResponsePropertiesPtrOutput) DatabaseServiceObjective() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.DatabaseServiceObjective
	}).(pulumi.StringPtrOutput)
}

// DNS suffix of the hostingEnvironment (App Service Environment)
func (o HostingEnvironmentResponsePropertiesPtrOutput) DnsSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.DnsSuffix
	}).(pulumi.StringPtrOutput)
}

// Current total, used, and available worker capacities
func (o HostingEnvironmentResponsePropertiesPtrOutput) EnvironmentCapacities() StampCapacityResponseArrayOutput {
	return o.ApplyT(func(v *HostingEnvironmentResponseProperties) []StampCapacityResponse {
		if v == nil {
			return nil
		}
		return v.EnvironmentCapacities
	}).(StampCapacityResponseArrayOutput)
}

// True/false indicating whether the hostingEnvironment (App Service Environment) is healthy
func (o HostingEnvironmentResponsePropertiesPtrOutput) EnvironmentIsHealthy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnvironmentIsHealthy
	}).(pulumi.BoolPtrOutput)
}

// Detailed message about with results of the last check of the hostingEnvironment (App Service Environment)
func (o HostingEnvironmentResponsePropertiesPtrOutput) EnvironmentStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.EnvironmentStatus
	}).(pulumi.StringPtrOutput)
}

// Specifies which endpoints to serve internally in the hostingEnvironment's (App Service Environment) VNET
func (o HostingEnvironmentResponsePropertiesPtrOutput) InternalLoadBalancingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.InternalLoadBalancingMode
	}).(pulumi.StringPtrOutput)
}

// Number of IP SSL addresses reserved for this hostingEnvironment (App Service Environment)
func (o HostingEnvironmentResponsePropertiesPtrOutput) IpsslAddressCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.IpsslAddressCount
	}).(pulumi.IntPtrOutput)
}

// Last deployment action on this hostingEnvironment (App Service Environment)
func (o HostingEnvironmentResponsePropertiesPtrOutput) LastAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.LastAction
	}).(pulumi.StringPtrOutput)
}

// Result of the last deployment action on this hostingEnvironment (App Service Environment)
func (o HostingEnvironmentResponsePropertiesPtrOutput) LastActionResult() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.LastActionResult
	}).(pulumi.StringPtrOutput)
}

// Location of the hostingEnvironment (App Service Environment), e.g. "West US"
func (o HostingEnvironmentResponsePropertiesPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Maximum number of VMs in this hostingEnvironment (App Service Environment)
func (o HostingEnvironmentResponsePropertiesPtrOutput) MaximumNumberOfMachines() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.MaximumNumberOfMachines
	}).(pulumi.IntPtrOutput)
}

// Number of front-end instances
func (o HostingEnvironmentResponsePropertiesPtrOutput) MultiRoleCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.MultiRoleCount
	}).(pulumi.IntPtrOutput)
}

// Front-end VM size, e.g. "Medium", "Large"
func (o HostingEnvironmentResponsePropertiesPtrOutput) MultiSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.MultiSize
	}).(pulumi.StringPtrOutput)
}

// Name of the hostingEnvironment (App Service Environment)
func (o HostingEnvironmentResponsePropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Access control list for controlling traffic to the hostingEnvironment (App Service Environment)
func (o HostingEnvironmentResponsePropertiesPtrOutput) NetworkAccessControlList() NetworkAccessControlEntryResponseArrayOutput {
	return o.ApplyT(func(v *HostingEnvironmentResponseProperties) []NetworkAccessControlEntryResponse {
		if v == nil {
			return nil
		}
		return v.NetworkAccessControlList
	}).(NetworkAccessControlEntryResponseArrayOutput)
}

// Provisioning state of the hostingEnvironment (App Service Environment)
func (o HostingEnvironmentResponsePropertiesPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Resource group of the hostingEnvironment (App Service Environment)
func (o HostingEnvironmentResponsePropertiesPtrOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGroup
	}).(pulumi.StringPtrOutput)
}

// Current status of the hostingEnvironment (App Service Environment)
func (o HostingEnvironmentResponsePropertiesPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// Subscription of the hostingEnvironment (App Service Environment)
func (o HostingEnvironmentResponsePropertiesPtrOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.SubscriptionId
	}).(pulumi.StringPtrOutput)
}

// True/false indicating whether the hostingEnvironment is suspended. The environment can be suspended e.g. when the management endpoint is no longer available
//             (most likely because NSG blocked the incoming traffic)
func (o HostingEnvironmentResponsePropertiesPtrOutput) Suspended() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Suspended
	}).(pulumi.BoolPtrOutput)
}

// Number of upgrade domains of this hostingEnvironment (App Service Environment)
func (o HostingEnvironmentResponsePropertiesPtrOutput) UpgradeDomains() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.UpgradeDomains
	}).(pulumi.IntPtrOutput)
}

// Description of IP SSL mapping for this hostingEnvironment (App Service Environment)
func (o HostingEnvironmentResponsePropertiesPtrOutput) VipMappings() VirtualIPMappingResponseArrayOutput {
	return o.ApplyT(func(v *HostingEnvironmentResponseProperties) []VirtualIPMappingResponse {
		if v == nil {
			return nil
		}
		return v.VipMappings
	}).(VirtualIPMappingResponseArrayOutput)
}

// Description of the hostingEnvironment's (App Service Environment) virtual network
func (o HostingEnvironmentResponsePropertiesPtrOutput) VirtualNetwork() VirtualNetworkProfileResponsePtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentResponseProperties) *VirtualNetworkProfileResponse {
		if v == nil {
			return nil
		}
		return v.VirtualNetwork
	}).(VirtualNetworkProfileResponsePtrOutput)
}

// Name of the hostingEnvironment's (App Service Environment) virtual network
func (o HostingEnvironmentResponsePropertiesPtrOutput) VnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.VnetName
	}).(pulumi.StringPtrOutput)
}

// Resource group of the hostingEnvironment's (App Service Environment) virtual network
func (o HostingEnvironmentResponsePropertiesPtrOutput) VnetResourceGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.VnetResourceGroupName
	}).(pulumi.StringPtrOutput)
}

// Subnet of the hostingEnvironment's (App Service Environment) virtual network
func (o HostingEnvironmentResponsePropertiesPtrOutput) VnetSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.VnetSubnetName
	}).(pulumi.StringPtrOutput)
}

// Description of worker pools with worker size ids, VM sizes, and number of workers in each pool
func (o HostingEnvironmentResponsePropertiesPtrOutput) WorkerPools() WorkerPoolResponseArrayOutput {
	return o.ApplyT(func(v *HostingEnvironmentResponseProperties) []WorkerPoolResponse {
		if v == nil {
			return nil
		}
		return v.WorkerPools
	}).(WorkerPoolResponseArrayOutput)
}

// Represents an ip security restriction on a web app.
type IpSecurityRestriction struct {
	// IP address the security restriction is valid for
	IpAddress *string `pulumi:"ipAddress"`
	// Subnet mask for the range of IP addresses the restriction is valid for
	SubnetMask *string `pulumi:"subnetMask"`
}

// IpSecurityRestrictionInput is an input type that accepts IpSecurityRestrictionArgs and IpSecurityRestrictionOutput values.
// You can construct a concrete instance of `IpSecurityRestrictionInput` via:
//
//          IpSecurityRestrictionArgs{...}
type IpSecurityRestrictionInput interface {
	pulumi.Input

	ToIpSecurityRestrictionOutput() IpSecurityRestrictionOutput
	ToIpSecurityRestrictionOutputWithContext(context.Context) IpSecurityRestrictionOutput
}

// Represents an ip security restriction on a web app.
type IpSecurityRestrictionArgs struct {
	// IP address the security restriction is valid for
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// Subnet mask for the range of IP addresses the restriction is valid for
	SubnetMask pulumi.StringPtrInput `pulumi:"subnetMask"`
}

func (IpSecurityRestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSecurityRestriction)(nil)).Elem()
}

func (i IpSecurityRestrictionArgs) ToIpSecurityRestrictionOutput() IpSecurityRestrictionOutput {
	return i.ToIpSecurityRestrictionOutputWithContext(context.Background())
}

func (i IpSecurityRestrictionArgs) ToIpSecurityRestrictionOutputWithContext(ctx context.Context) IpSecurityRestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpSecurityRestrictionOutput)
}

// IpSecurityRestrictionArrayInput is an input type that accepts IpSecurityRestrictionArray and IpSecurityRestrictionArrayOutput values.
// You can construct a concrete instance of `IpSecurityRestrictionArrayInput` via:
//
//          IpSecurityRestrictionArray{ IpSecurityRestrictionArgs{...} }
type IpSecurityRestrictionArrayInput interface {
	pulumi.Input

	ToIpSecurityRestrictionArrayOutput() IpSecurityRestrictionArrayOutput
	ToIpSecurityRestrictionArrayOutputWithContext(context.Context) IpSecurityRestrictionArrayOutput
}

type IpSecurityRestrictionArray []IpSecurityRestrictionInput

func (IpSecurityRestrictionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpSecurityRestriction)(nil)).Elem()
}

func (i IpSecurityRestrictionArray) ToIpSecurityRestrictionArrayOutput() IpSecurityRestrictionArrayOutput {
	return i.ToIpSecurityRestrictionArrayOutputWithContext(context.Background())
}

func (i IpSecurityRestrictionArray) ToIpSecurityRestrictionArrayOutputWithContext(ctx context.Context) IpSecurityRestrictionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpSecurityRestrictionArrayOutput)
}

// Represents an ip security restriction on a web app.
type IpSecurityRestrictionOutput struct{ *pulumi.OutputState }

func (IpSecurityRestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSecurityRestriction)(nil)).Elem()
}

func (o IpSecurityRestrictionOutput) ToIpSecurityRestrictionOutput() IpSecurityRestrictionOutput {
	return o
}

func (o IpSecurityRestrictionOutput) ToIpSecurityRestrictionOutputWithContext(ctx context.Context) IpSecurityRestrictionOutput {
	return o
}

// IP address the security restriction is valid for
func (o IpSecurityRestrictionOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestriction) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// Subnet mask for the range of IP addresses the restriction is valid for
func (o IpSecurityRestrictionOutput) SubnetMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestriction) *string { return v.SubnetMask }).(pulumi.StringPtrOutput)
}

type IpSecurityRestrictionArrayOutput struct{ *pulumi.OutputState }

func (IpSecurityRestrictionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpSecurityRestriction)(nil)).Elem()
}

func (o IpSecurityRestrictionArrayOutput) ToIpSecurityRestrictionArrayOutput() IpSecurityRestrictionArrayOutput {
	return o
}

func (o IpSecurityRestrictionArrayOutput) ToIpSecurityRestrictionArrayOutputWithContext(ctx context.Context) IpSecurityRestrictionArrayOutput {
	return o
}

func (o IpSecurityRestrictionArrayOutput) Index(i pulumi.IntInput) IpSecurityRestrictionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpSecurityRestriction {
		return vs[0].([]IpSecurityRestriction)[vs[1].(int)]
	}).(IpSecurityRestrictionOutput)
}

// Represents an ip security restriction on a web app.
type IpSecurityRestrictionResponse struct {
	// IP address the security restriction is valid for
	IpAddress *string `pulumi:"ipAddress"`
	// Subnet mask for the range of IP addresses the restriction is valid for
	SubnetMask *string `pulumi:"subnetMask"`
}

// IpSecurityRestrictionResponseInput is an input type that accepts IpSecurityRestrictionResponseArgs and IpSecurityRestrictionResponseOutput values.
// You can construct a concrete instance of `IpSecurityRestrictionResponseInput` via:
//
//          IpSecurityRestrictionResponseArgs{...}
type IpSecurityRestrictionResponseInput interface {
	pulumi.Input

	ToIpSecurityRestrictionResponseOutput() IpSecurityRestrictionResponseOutput
	ToIpSecurityRestrictionResponseOutputWithContext(context.Context) IpSecurityRestrictionResponseOutput
}

// Represents an ip security restriction on a web app.
type IpSecurityRestrictionResponseArgs struct {
	// IP address the security restriction is valid for
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// Subnet mask for the range of IP addresses the restriction is valid for
	SubnetMask pulumi.StringPtrInput `pulumi:"subnetMask"`
}

func (IpSecurityRestrictionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSecurityRestrictionResponse)(nil)).Elem()
}

func (i IpSecurityRestrictionResponseArgs) ToIpSecurityRestrictionResponseOutput() IpSecurityRestrictionResponseOutput {
	return i.ToIpSecurityRestrictionResponseOutputWithContext(context.Background())
}

func (i IpSecurityRestrictionResponseArgs) ToIpSecurityRestrictionResponseOutputWithContext(ctx context.Context) IpSecurityRestrictionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpSecurityRestrictionResponseOutput)
}

// IpSecurityRestrictionResponseArrayInput is an input type that accepts IpSecurityRestrictionResponseArray and IpSecurityRestrictionResponseArrayOutput values.
// You can construct a concrete instance of `IpSecurityRestrictionResponseArrayInput` via:
//
//          IpSecurityRestrictionResponseArray{ IpSecurityRestrictionResponseArgs{...} }
type IpSecurityRestrictionResponseArrayInput interface {
	pulumi.Input

	ToIpSecurityRestrictionResponseArrayOutput() IpSecurityRestrictionResponseArrayOutput
	ToIpSecurityRestrictionResponseArrayOutputWithContext(context.Context) IpSecurityRestrictionResponseArrayOutput
}

type IpSecurityRestrictionResponseArray []IpSecurityRestrictionResponseInput

func (IpSecurityRestrictionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpSecurityRestrictionResponse)(nil)).Elem()
}

func (i IpSecurityRestrictionResponseArray) ToIpSecurityRestrictionResponseArrayOutput() IpSecurityRestrictionResponseArrayOutput {
	return i.ToIpSecurityRestrictionResponseArrayOutputWithContext(context.Background())
}

func (i IpSecurityRestrictionResponseArray) ToIpSecurityRestrictionResponseArrayOutputWithContext(ctx context.Context) IpSecurityRestrictionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpSecurityRestrictionResponseArrayOutput)
}

// Represents an ip security restriction on a web app.
type IpSecurityRestrictionResponseOutput struct{ *pulumi.OutputState }

func (IpSecurityRestrictionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSecurityRestrictionResponse)(nil)).Elem()
}

func (o IpSecurityRestrictionResponseOutput) ToIpSecurityRestrictionResponseOutput() IpSecurityRestrictionResponseOutput {
	return o
}

func (o IpSecurityRestrictionResponseOutput) ToIpSecurityRestrictionResponseOutputWithContext(ctx context.Context) IpSecurityRestrictionResponseOutput {
	return o
}

// IP address the security restriction is valid for
func (o IpSecurityRestrictionResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// Subnet mask for the range of IP addresses the restriction is valid for
func (o IpSecurityRestrictionResponseOutput) SubnetMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionResponse) *string { return v.SubnetMask }).(pulumi.StringPtrOutput)
}

type IpSecurityRestrictionResponseArrayOutput struct{ *pulumi.OutputState }

func (IpSecurityRestrictionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpSecurityRestrictionResponse)(nil)).Elem()
}

func (o IpSecurityRestrictionResponseArrayOutput) ToIpSecurityRestrictionResponseArrayOutput() IpSecurityRestrictionResponseArrayOutput {
	return o
}

func (o IpSecurityRestrictionResponseArrayOutput) ToIpSecurityRestrictionResponseArrayOutputWithContext(ctx context.Context) IpSecurityRestrictionResponseArrayOutput {
	return o
}

func (o IpSecurityRestrictionResponseArrayOutput) Index(i pulumi.IntInput) IpSecurityRestrictionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpSecurityRestrictionResponse {
		return vs[0].([]IpSecurityRestrictionResponse)[vs[1].(int)]
	}).(IpSecurityRestrictionResponseOutput)
}

// Description of an hostingEnvironment (App Service Environment)
type ManagedHostingEnvironmentType struct {
	// Kind of resource
	Kind *string `pulumi:"kind"`
	// Resource Location
	Location string `pulumi:"location"`
	// Resource Name
	Name       *string                              `pulumi:"name"`
	Properties HostingEnvironmentResponseProperties `pulumi:"properties"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type *string `pulumi:"type"`
}

// ManagedHostingEnvironmentTypeInput is an input type that accepts ManagedHostingEnvironmentTypeArgs and ManagedHostingEnvironmentTypeOutput values.
// You can construct a concrete instance of `ManagedHostingEnvironmentTypeInput` via:
//
//          ManagedHostingEnvironmentTypeArgs{...}
type ManagedHostingEnvironmentTypeInput interface {
	pulumi.Input

	ToManagedHostingEnvironmentTypeOutput() ManagedHostingEnvironmentTypeOutput
	ToManagedHostingEnvironmentTypeOutputWithContext(context.Context) ManagedHostingEnvironmentTypeOutput
}

// Description of an hostingEnvironment (App Service Environment)
type ManagedHostingEnvironmentTypeArgs struct {
	// Kind of resource
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource Name
	Name       pulumi.StringPtrInput                     `pulumi:"name"`
	Properties HostingEnvironmentResponsePropertiesInput `pulumi:"properties"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ManagedHostingEnvironmentTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedHostingEnvironmentType)(nil)).Elem()
}

func (i ManagedHostingEnvironmentTypeArgs) ToManagedHostingEnvironmentTypeOutput() ManagedHostingEnvironmentTypeOutput {
	return i.ToManagedHostingEnvironmentTypeOutputWithContext(context.Background())
}

func (i ManagedHostingEnvironmentTypeArgs) ToManagedHostingEnvironmentTypeOutputWithContext(ctx context.Context) ManagedHostingEnvironmentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedHostingEnvironmentTypeOutput)
}

// Description of an hostingEnvironment (App Service Environment)
type ManagedHostingEnvironmentTypeOutput struct{ *pulumi.OutputState }

func (ManagedHostingEnvironmentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedHostingEnvironmentType)(nil)).Elem()
}

func (o ManagedHostingEnvironmentTypeOutput) ToManagedHostingEnvironmentTypeOutput() ManagedHostingEnvironmentTypeOutput {
	return o
}

func (o ManagedHostingEnvironmentTypeOutput) ToManagedHostingEnvironmentTypeOutputWithContext(ctx context.Context) ManagedHostingEnvironmentTypeOutput {
	return o
}

// Kind of resource
func (o ManagedHostingEnvironmentTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedHostingEnvironmentType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location
func (o ManagedHostingEnvironmentTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedHostingEnvironmentType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name
func (o ManagedHostingEnvironmentTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedHostingEnvironmentType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ManagedHostingEnvironmentTypeOutput) Properties() HostingEnvironmentResponsePropertiesOutput {
	return o.ApplyT(func(v ManagedHostingEnvironmentType) HostingEnvironmentResponseProperties { return v.Properties }).(HostingEnvironmentResponsePropertiesOutput)
}

// Resource tags
func (o ManagedHostingEnvironmentTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ManagedHostingEnvironmentType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o ManagedHostingEnvironmentTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedHostingEnvironmentType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ManagedHostingEnvironmentResponseProperties struct {
	// Resource id of the api management account associated with this managed hosting environment (read only)
	ApiManagementAccount *string `pulumi:"apiManagementAccount"`
	// DNS suffix of the managed hosting environment
	DnsSuffix *string `pulumi:"dnsSuffix"`
	// True/false indicating whether the managed hosting environment is healthy
	EnvironmentIsHealthy *bool `pulumi:"environmentIsHealthy"`
	// Detailed message about with results of the last check of the managed hosting environment
	EnvironmentStatus *string `pulumi:"environmentStatus"`
	// Number of ip ssl addresses reserved for the managed hosting environment
	IpsslAddressCount *int `pulumi:"ipsslAddressCount"`
	// Location of the managed hosting environment e.g. "West US"
	Location *string `pulumi:"location"`
	// Name of the managed hosting environment
	Name *string `pulumi:"name"`
	// Resource group of the managed hosting environment (read only)
	ResourceGroup *string `pulumi:"resourceGroup"`
	// Current status of the managed hosting environment
	Status string `pulumi:"status"`
	// Subscription of the managed hosting environment (read only)
	SubscriptionId *string `pulumi:"subscriptionId"`
	// True/false indicating whether the managed hosting environment is suspended. The environment can be suspended e.g. when the management endpoint is no longer available
	//             (most likely because NSG blocked the incoming traffic)
	Suspended *bool `pulumi:"suspended"`
	// Description of the managed hosting environment's virtual network
	VirtualNetwork *VirtualNetworkProfileResponse `pulumi:"virtualNetwork"`
}

// ManagedHostingEnvironmentResponsePropertiesInput is an input type that accepts ManagedHostingEnvironmentResponsePropertiesArgs and ManagedHostingEnvironmentResponsePropertiesOutput values.
// You can construct a concrete instance of `ManagedHostingEnvironmentResponsePropertiesInput` via:
//
//          ManagedHostingEnvironmentResponsePropertiesArgs{...}
type ManagedHostingEnvironmentResponsePropertiesInput interface {
	pulumi.Input

	ToManagedHostingEnvironmentResponsePropertiesOutput() ManagedHostingEnvironmentResponsePropertiesOutput
	ToManagedHostingEnvironmentResponsePropertiesOutputWithContext(context.Context) ManagedHostingEnvironmentResponsePropertiesOutput
}

type ManagedHostingEnvironmentResponsePropertiesArgs struct {
	// Resource id of the api management account associated with this managed hosting environment (read only)
	ApiManagementAccount pulumi.StringPtrInput `pulumi:"apiManagementAccount"`
	// DNS suffix of the managed hosting environment
	DnsSuffix pulumi.StringPtrInput `pulumi:"dnsSuffix"`
	// True/false indicating whether the managed hosting environment is healthy
	EnvironmentIsHealthy pulumi.BoolPtrInput `pulumi:"environmentIsHealthy"`
	// Detailed message about with results of the last check of the managed hosting environment
	EnvironmentStatus pulumi.StringPtrInput `pulumi:"environmentStatus"`
	// Number of ip ssl addresses reserved for the managed hosting environment
	IpsslAddressCount pulumi.IntPtrInput `pulumi:"ipsslAddressCount"`
	// Location of the managed hosting environment e.g. "West US"
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Name of the managed hosting environment
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Resource group of the managed hosting environment (read only)
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	// Current status of the managed hosting environment
	Status pulumi.StringInput `pulumi:"status"`
	// Subscription of the managed hosting environment (read only)
	SubscriptionId pulumi.StringPtrInput `pulumi:"subscriptionId"`
	// True/false indicating whether the managed hosting environment is suspended. The environment can be suspended e.g. when the management endpoint is no longer available
	//             (most likely because NSG blocked the incoming traffic)
	Suspended pulumi.BoolPtrInput `pulumi:"suspended"`
	// Description of the managed hosting environment's virtual network
	VirtualNetwork VirtualNetworkProfileResponsePtrInput `pulumi:"virtualNetwork"`
}

func (ManagedHostingEnvironmentResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedHostingEnvironmentResponseProperties)(nil)).Elem()
}

func (i ManagedHostingEnvironmentResponsePropertiesArgs) ToManagedHostingEnvironmentResponsePropertiesOutput() ManagedHostingEnvironmentResponsePropertiesOutput {
	return i.ToManagedHostingEnvironmentResponsePropertiesOutputWithContext(context.Background())
}

func (i ManagedHostingEnvironmentResponsePropertiesArgs) ToManagedHostingEnvironmentResponsePropertiesOutputWithContext(ctx context.Context) ManagedHostingEnvironmentResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedHostingEnvironmentResponsePropertiesOutput)
}

type ManagedHostingEnvironmentResponsePropertiesOutput struct{ *pulumi.OutputState }

func (ManagedHostingEnvironmentResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedHostingEnvironmentResponseProperties)(nil)).Elem()
}

func (o ManagedHostingEnvironmentResponsePropertiesOutput) ToManagedHostingEnvironmentResponsePropertiesOutput() ManagedHostingEnvironmentResponsePropertiesOutput {
	return o
}

func (o ManagedHostingEnvironmentResponsePropertiesOutput) ToManagedHostingEnvironmentResponsePropertiesOutputWithContext(ctx context.Context) ManagedHostingEnvironmentResponsePropertiesOutput {
	return o
}

// Resource id of the api management account associated with this managed hosting environment (read only)
func (o ManagedHostingEnvironmentResponsePropertiesOutput) ApiManagementAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedHostingEnvironmentResponseProperties) *string { return v.ApiManagementAccount }).(pulumi.StringPtrOutput)
}

// DNS suffix of the managed hosting environment
func (o ManagedHostingEnvironmentResponsePropertiesOutput) DnsSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedHostingEnvironmentResponseProperties) *string { return v.DnsSuffix }).(pulumi.StringPtrOutput)
}

// True/false indicating whether the managed hosting environment is healthy
func (o ManagedHostingEnvironmentResponsePropertiesOutput) EnvironmentIsHealthy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedHostingEnvironmentResponseProperties) *bool { return v.EnvironmentIsHealthy }).(pulumi.BoolPtrOutput)
}

// Detailed message about with results of the last check of the managed hosting environment
func (o ManagedHostingEnvironmentResponsePropertiesOutput) EnvironmentStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedHostingEnvironmentResponseProperties) *string { return v.EnvironmentStatus }).(pulumi.StringPtrOutput)
}

// Number of ip ssl addresses reserved for the managed hosting environment
func (o ManagedHostingEnvironmentResponsePropertiesOutput) IpsslAddressCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedHostingEnvironmentResponseProperties) *int { return v.IpsslAddressCount }).(pulumi.IntPtrOutput)
}

// Location of the managed hosting environment e.g. "West US"
func (o ManagedHostingEnvironmentResponsePropertiesOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedHostingEnvironmentResponseProperties) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Name of the managed hosting environment
func (o ManagedHostingEnvironmentResponsePropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedHostingEnvironmentResponseProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Resource group of the managed hosting environment (read only)
func (o ManagedHostingEnvironmentResponsePropertiesOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedHostingEnvironmentResponseProperties) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// Current status of the managed hosting environment
func (o ManagedHostingEnvironmentResponsePropertiesOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedHostingEnvironmentResponseProperties) string { return v.Status }).(pulumi.StringOutput)
}

// Subscription of the managed hosting environment (read only)
func (o ManagedHostingEnvironmentResponsePropertiesOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedHostingEnvironmentResponseProperties) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

// True/false indicating whether the managed hosting environment is suspended. The environment can be suspended e.g. when the management endpoint is no longer available
//             (most likely because NSG blocked the incoming traffic)
func (o ManagedHostingEnvironmentResponsePropertiesOutput) Suspended() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedHostingEnvironmentResponseProperties) *bool { return v.Suspended }).(pulumi.BoolPtrOutput)
}

// Description of the managed hosting environment's virtual network
func (o ManagedHostingEnvironmentResponsePropertiesOutput) VirtualNetwork() VirtualNetworkProfileResponsePtrOutput {
	return o.ApplyT(func(v ManagedHostingEnvironmentResponseProperties) *VirtualNetworkProfileResponse {
		return v.VirtualNetwork
	}).(VirtualNetworkProfileResponsePtrOutput)
}

// Name value pair
type NameValuePair struct {
	// Pair name
	Name *string `pulumi:"name"`
	// Pair value
	Value *string `pulumi:"value"`
}

// NameValuePairInput is an input type that accepts NameValuePairArgs and NameValuePairOutput values.
// You can construct a concrete instance of `NameValuePairInput` via:
//
//          NameValuePairArgs{...}
type NameValuePairInput interface {
	pulumi.Input

	ToNameValuePairOutput() NameValuePairOutput
	ToNameValuePairOutputWithContext(context.Context) NameValuePairOutput
}

// Name value pair
type NameValuePairArgs struct {
	// Pair name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Pair value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NameValuePairArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NameValuePair)(nil)).Elem()
}

func (i NameValuePairArgs) ToNameValuePairOutput() NameValuePairOutput {
	return i.ToNameValuePairOutputWithContext(context.Background())
}

func (i NameValuePairArgs) ToNameValuePairOutputWithContext(ctx context.Context) NameValuePairOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NameValuePairOutput)
}

// NameValuePairArrayInput is an input type that accepts NameValuePairArray and NameValuePairArrayOutput values.
// You can construct a concrete instance of `NameValuePairArrayInput` via:
//
//          NameValuePairArray{ NameValuePairArgs{...} }
type NameValuePairArrayInput interface {
	pulumi.Input

	ToNameValuePairArrayOutput() NameValuePairArrayOutput
	ToNameValuePairArrayOutputWithContext(context.Context) NameValuePairArrayOutput
}

type NameValuePairArray []NameValuePairInput

func (NameValuePairArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NameValuePair)(nil)).Elem()
}

func (i NameValuePairArray) ToNameValuePairArrayOutput() NameValuePairArrayOutput {
	return i.ToNameValuePairArrayOutputWithContext(context.Background())
}

func (i NameValuePairArray) ToNameValuePairArrayOutputWithContext(ctx context.Context) NameValuePairArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NameValuePairArrayOutput)
}

// Name value pair
type NameValuePairOutput struct{ *pulumi.OutputState }

func (NameValuePairOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NameValuePair)(nil)).Elem()
}

func (o NameValuePairOutput) ToNameValuePairOutput() NameValuePairOutput {
	return o
}

func (o NameValuePairOutput) ToNameValuePairOutputWithContext(ctx context.Context) NameValuePairOutput {
	return o
}

// Pair name
func (o NameValuePairOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NameValuePair) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Pair value
func (o NameValuePairOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NameValuePair) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NameValuePairArrayOutput struct{ *pulumi.OutputState }

func (NameValuePairArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NameValuePair)(nil)).Elem()
}

func (o NameValuePairArrayOutput) ToNameValuePairArrayOutput() NameValuePairArrayOutput {
	return o
}

func (o NameValuePairArrayOutput) ToNameValuePairArrayOutputWithContext(ctx context.Context) NameValuePairArrayOutput {
	return o
}

func (o NameValuePairArrayOutput) Index(i pulumi.IntInput) NameValuePairOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NameValuePair {
		return vs[0].([]NameValuePair)[vs[1].(int)]
	}).(NameValuePairOutput)
}

// Name value pair
type NameValuePairResponse struct {
	// Pair name
	Name *string `pulumi:"name"`
	// Pair value
	Value *string `pulumi:"value"`
}

// NameValuePairResponseInput is an input type that accepts NameValuePairResponseArgs and NameValuePairResponseOutput values.
// You can construct a concrete instance of `NameValuePairResponseInput` via:
//
//          NameValuePairResponseArgs{...}
type NameValuePairResponseInput interface {
	pulumi.Input

	ToNameValuePairResponseOutput() NameValuePairResponseOutput
	ToNameValuePairResponseOutputWithContext(context.Context) NameValuePairResponseOutput
}

// Name value pair
type NameValuePairResponseArgs struct {
	// Pair name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Pair value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NameValuePairResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NameValuePairResponse)(nil)).Elem()
}

func (i NameValuePairResponseArgs) ToNameValuePairResponseOutput() NameValuePairResponseOutput {
	return i.ToNameValuePairResponseOutputWithContext(context.Background())
}

func (i NameValuePairResponseArgs) ToNameValuePairResponseOutputWithContext(ctx context.Context) NameValuePairResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NameValuePairResponseOutput)
}

// NameValuePairResponseArrayInput is an input type that accepts NameValuePairResponseArray and NameValuePairResponseArrayOutput values.
// You can construct a concrete instance of `NameValuePairResponseArrayInput` via:
//
//          NameValuePairResponseArray{ NameValuePairResponseArgs{...} }
type NameValuePairResponseArrayInput interface {
	pulumi.Input

	ToNameValuePairResponseArrayOutput() NameValuePairResponseArrayOutput
	ToNameValuePairResponseArrayOutputWithContext(context.Context) NameValuePairResponseArrayOutput
}

type NameValuePairResponseArray []NameValuePairResponseInput

func (NameValuePairResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NameValuePairResponse)(nil)).Elem()
}

func (i NameValuePairResponseArray) ToNameValuePairResponseArrayOutput() NameValuePairResponseArrayOutput {
	return i.ToNameValuePairResponseArrayOutputWithContext(context.Background())
}

func (i NameValuePairResponseArray) ToNameValuePairResponseArrayOutputWithContext(ctx context.Context) NameValuePairResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NameValuePairResponseArrayOutput)
}

// Name value pair
type NameValuePairResponseOutput struct{ *pulumi.OutputState }

func (NameValuePairResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NameValuePairResponse)(nil)).Elem()
}

func (o NameValuePairResponseOutput) ToNameValuePairResponseOutput() NameValuePairResponseOutput {
	return o
}

func (o NameValuePairResponseOutput) ToNameValuePairResponseOutputWithContext(ctx context.Context) NameValuePairResponseOutput {
	return o
}

// Pair name
func (o NameValuePairResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NameValuePairResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Pair value
func (o NameValuePairResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NameValuePairResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NameValuePairResponseArrayOutput struct{ *pulumi.OutputState }

func (NameValuePairResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NameValuePairResponse)(nil)).Elem()
}

func (o NameValuePairResponseArrayOutput) ToNameValuePairResponseArrayOutput() NameValuePairResponseArrayOutput {
	return o
}

func (o NameValuePairResponseArrayOutput) ToNameValuePairResponseArrayOutputWithContext(ctx context.Context) NameValuePairResponseArrayOutput {
	return o
}

func (o NameValuePairResponseArrayOutput) Index(i pulumi.IntInput) NameValuePairResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NameValuePairResponse {
		return vs[0].([]NameValuePairResponse)[vs[1].(int)]
	}).(NameValuePairResponseOutput)
}

type NetworkAccessControlEntry struct {
	Action       *string `pulumi:"action"`
	Description  *string `pulumi:"description"`
	Order        *int    `pulumi:"order"`
	RemoteSubnet *string `pulumi:"remoteSubnet"`
}

// NetworkAccessControlEntryInput is an input type that accepts NetworkAccessControlEntryArgs and NetworkAccessControlEntryOutput values.
// You can construct a concrete instance of `NetworkAccessControlEntryInput` via:
//
//          NetworkAccessControlEntryArgs{...}
type NetworkAccessControlEntryInput interface {
	pulumi.Input

	ToNetworkAccessControlEntryOutput() NetworkAccessControlEntryOutput
	ToNetworkAccessControlEntryOutputWithContext(context.Context) NetworkAccessControlEntryOutput
}

type NetworkAccessControlEntryArgs struct {
	Action       pulumi.StringPtrInput `pulumi:"action"`
	Description  pulumi.StringPtrInput `pulumi:"description"`
	Order        pulumi.IntPtrInput    `pulumi:"order"`
	RemoteSubnet pulumi.StringPtrInput `pulumi:"remoteSubnet"`
}

func (NetworkAccessControlEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAccessControlEntry)(nil)).Elem()
}

func (i NetworkAccessControlEntryArgs) ToNetworkAccessControlEntryOutput() NetworkAccessControlEntryOutput {
	return i.ToNetworkAccessControlEntryOutputWithContext(context.Background())
}

func (i NetworkAccessControlEntryArgs) ToNetworkAccessControlEntryOutputWithContext(ctx context.Context) NetworkAccessControlEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAccessControlEntryOutput)
}

// NetworkAccessControlEntryArrayInput is an input type that accepts NetworkAccessControlEntryArray and NetworkAccessControlEntryArrayOutput values.
// You can construct a concrete instance of `NetworkAccessControlEntryArrayInput` via:
//
//          NetworkAccessControlEntryArray{ NetworkAccessControlEntryArgs{...} }
type NetworkAccessControlEntryArrayInput interface {
	pulumi.Input

	ToNetworkAccessControlEntryArrayOutput() NetworkAccessControlEntryArrayOutput
	ToNetworkAccessControlEntryArrayOutputWithContext(context.Context) NetworkAccessControlEntryArrayOutput
}

type NetworkAccessControlEntryArray []NetworkAccessControlEntryInput

func (NetworkAccessControlEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAccessControlEntry)(nil)).Elem()
}

func (i NetworkAccessControlEntryArray) ToNetworkAccessControlEntryArrayOutput() NetworkAccessControlEntryArrayOutput {
	return i.ToNetworkAccessControlEntryArrayOutputWithContext(context.Background())
}

func (i NetworkAccessControlEntryArray) ToNetworkAccessControlEntryArrayOutputWithContext(ctx context.Context) NetworkAccessControlEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAccessControlEntryArrayOutput)
}

type NetworkAccessControlEntryOutput struct{ *pulumi.OutputState }

func (NetworkAccessControlEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAccessControlEntry)(nil)).Elem()
}

func (o NetworkAccessControlEntryOutput) ToNetworkAccessControlEntryOutput() NetworkAccessControlEntryOutput {
	return o
}

func (o NetworkAccessControlEntryOutput) ToNetworkAccessControlEntryOutputWithContext(ctx context.Context) NetworkAccessControlEntryOutput {
	return o
}

func (o NetworkAccessControlEntryOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAccessControlEntry) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o NetworkAccessControlEntryOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAccessControlEntry) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NetworkAccessControlEntryOutput) Order() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkAccessControlEntry) *int { return v.Order }).(pulumi.IntPtrOutput)
}

func (o NetworkAccessControlEntryOutput) RemoteSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAccessControlEntry) *string { return v.RemoteSubnet }).(pulumi.StringPtrOutput)
}

type NetworkAccessControlEntryArrayOutput struct{ *pulumi.OutputState }

func (NetworkAccessControlEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAccessControlEntry)(nil)).Elem()
}

func (o NetworkAccessControlEntryArrayOutput) ToNetworkAccessControlEntryArrayOutput() NetworkAccessControlEntryArrayOutput {
	return o
}

func (o NetworkAccessControlEntryArrayOutput) ToNetworkAccessControlEntryArrayOutputWithContext(ctx context.Context) NetworkAccessControlEntryArrayOutput {
	return o
}

func (o NetworkAccessControlEntryArrayOutput) Index(i pulumi.IntInput) NetworkAccessControlEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAccessControlEntry {
		return vs[0].([]NetworkAccessControlEntry)[vs[1].(int)]
	}).(NetworkAccessControlEntryOutput)
}

type NetworkAccessControlEntryResponse struct {
	Action       *string `pulumi:"action"`
	Description  *string `pulumi:"description"`
	Order        *int    `pulumi:"order"`
	RemoteSubnet *string `pulumi:"remoteSubnet"`
}

// NetworkAccessControlEntryResponseInput is an input type that accepts NetworkAccessControlEntryResponseArgs and NetworkAccessControlEntryResponseOutput values.
// You can construct a concrete instance of `NetworkAccessControlEntryResponseInput` via:
//
//          NetworkAccessControlEntryResponseArgs{...}
type NetworkAccessControlEntryResponseInput interface {
	pulumi.Input

	ToNetworkAccessControlEntryResponseOutput() NetworkAccessControlEntryResponseOutput
	ToNetworkAccessControlEntryResponseOutputWithContext(context.Context) NetworkAccessControlEntryResponseOutput
}

type NetworkAccessControlEntryResponseArgs struct {
	Action       pulumi.StringPtrInput `pulumi:"action"`
	Description  pulumi.StringPtrInput `pulumi:"description"`
	Order        pulumi.IntPtrInput    `pulumi:"order"`
	RemoteSubnet pulumi.StringPtrInput `pulumi:"remoteSubnet"`
}

func (NetworkAccessControlEntryResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAccessControlEntryResponse)(nil)).Elem()
}

func (i NetworkAccessControlEntryResponseArgs) ToNetworkAccessControlEntryResponseOutput() NetworkAccessControlEntryResponseOutput {
	return i.ToNetworkAccessControlEntryResponseOutputWithContext(context.Background())
}

func (i NetworkAccessControlEntryResponseArgs) ToNetworkAccessControlEntryResponseOutputWithContext(ctx context.Context) NetworkAccessControlEntryResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAccessControlEntryResponseOutput)
}

// NetworkAccessControlEntryResponseArrayInput is an input type that accepts NetworkAccessControlEntryResponseArray and NetworkAccessControlEntryResponseArrayOutput values.
// You can construct a concrete instance of `NetworkAccessControlEntryResponseArrayInput` via:
//
//          NetworkAccessControlEntryResponseArray{ NetworkAccessControlEntryResponseArgs{...} }
type NetworkAccessControlEntryResponseArrayInput interface {
	pulumi.Input

	ToNetworkAccessControlEntryResponseArrayOutput() NetworkAccessControlEntryResponseArrayOutput
	ToNetworkAccessControlEntryResponseArrayOutputWithContext(context.Context) NetworkAccessControlEntryResponseArrayOutput
}

type NetworkAccessControlEntryResponseArray []NetworkAccessControlEntryResponseInput

func (NetworkAccessControlEntryResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAccessControlEntryResponse)(nil)).Elem()
}

func (i NetworkAccessControlEntryResponseArray) ToNetworkAccessControlEntryResponseArrayOutput() NetworkAccessControlEntryResponseArrayOutput {
	return i.ToNetworkAccessControlEntryResponseArrayOutputWithContext(context.Background())
}

func (i NetworkAccessControlEntryResponseArray) ToNetworkAccessControlEntryResponseArrayOutputWithContext(ctx context.Context) NetworkAccessControlEntryResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAccessControlEntryResponseArrayOutput)
}

type NetworkAccessControlEntryResponseOutput struct{ *pulumi.OutputState }

func (NetworkAccessControlEntryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAccessControlEntryResponse)(nil)).Elem()
}

func (o NetworkAccessControlEntryResponseOutput) ToNetworkAccessControlEntryResponseOutput() NetworkAccessControlEntryResponseOutput {
	return o
}

func (o NetworkAccessControlEntryResponseOutput) ToNetworkAccessControlEntryResponseOutputWithContext(ctx context.Context) NetworkAccessControlEntryResponseOutput {
	return o
}

func (o NetworkAccessControlEntryResponseOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAccessControlEntryResponse) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o NetworkAccessControlEntryResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAccessControlEntryResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NetworkAccessControlEntryResponseOutput) Order() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkAccessControlEntryResponse) *int { return v.Order }).(pulumi.IntPtrOutput)
}

func (o NetworkAccessControlEntryResponseOutput) RemoteSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAccessControlEntryResponse) *string { return v.RemoteSubnet }).(pulumi.StringPtrOutput)
}

type NetworkAccessControlEntryResponseArrayOutput struct{ *pulumi.OutputState }

func (NetworkAccessControlEntryResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAccessControlEntryResponse)(nil)).Elem()
}

func (o NetworkAccessControlEntryResponseArrayOutput) ToNetworkAccessControlEntryResponseArrayOutput() NetworkAccessControlEntryResponseArrayOutput {
	return o
}

func (o NetworkAccessControlEntryResponseArrayOutput) ToNetworkAccessControlEntryResponseArrayOutputWithContext(ctx context.Context) NetworkAccessControlEntryResponseArrayOutput {
	return o
}

func (o NetworkAccessControlEntryResponseArrayOutput) Index(i pulumi.IntInput) NetworkAccessControlEntryResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAccessControlEntryResponse {
		return vs[0].([]NetworkAccessControlEntryResponse)[vs[1].(int)]
	}).(NetworkAccessControlEntryResponseOutput)
}

type Object struct {
}

// ObjectInput is an input type that accepts ObjectArgs and ObjectOutput values.
// You can construct a concrete instance of `ObjectInput` via:
//
//          ObjectArgs{...}
type ObjectInput interface {
	pulumi.Input

	ToObjectOutput() ObjectOutput
	ToObjectOutputWithContext(context.Context) ObjectOutput
}

type ObjectArgs struct {
}

func (ObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Object)(nil)).Elem()
}

func (i ObjectArgs) ToObjectOutput() ObjectOutput {
	return i.ToObjectOutputWithContext(context.Background())
}

func (i ObjectArgs) ToObjectOutputWithContext(ctx context.Context) ObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectOutput)
}

func (i ObjectArgs) ToObjectPtrOutput() ObjectPtrOutput {
	return i.ToObjectPtrOutputWithContext(context.Background())
}

func (i ObjectArgs) ToObjectPtrOutputWithContext(ctx context.Context) ObjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectOutput).ToObjectPtrOutputWithContext(ctx)
}

// ObjectPtrInput is an input type that accepts ObjectArgs, ObjectPtr and ObjectPtrOutput values.
// You can construct a concrete instance of `ObjectPtrInput` via:
//
//          ObjectArgs{...}
//
//  or:
//
//          nil
type ObjectPtrInput interface {
	pulumi.Input

	ToObjectPtrOutput() ObjectPtrOutput
	ToObjectPtrOutputWithContext(context.Context) ObjectPtrOutput
}

type objectPtrType ObjectArgs

func ObjectPtr(v *ObjectArgs) ObjectPtrInput {
	return (*objectPtrType)(v)
}

func (*objectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Object)(nil)).Elem()
}

func (i *objectPtrType) ToObjectPtrOutput() ObjectPtrOutput {
	return i.ToObjectPtrOutputWithContext(context.Background())
}

func (i *objectPtrType) ToObjectPtrOutputWithContext(ctx context.Context) ObjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectPtrOutput)
}

type ObjectOutput struct{ *pulumi.OutputState }

func (ObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Object)(nil)).Elem()
}

func (o ObjectOutput) ToObjectOutput() ObjectOutput {
	return o
}

func (o ObjectOutput) ToObjectOutputWithContext(ctx context.Context) ObjectOutput {
	return o
}

func (o ObjectOutput) ToObjectPtrOutput() ObjectPtrOutput {
	return o.ToObjectPtrOutputWithContext(context.Background())
}

func (o ObjectOutput) ToObjectPtrOutputWithContext(ctx context.Context) ObjectPtrOutput {
	return o.ApplyT(func(v Object) *Object {
		return &v
	}).(ObjectPtrOutput)
}

type ObjectPtrOutput struct{ *pulumi.OutputState }

func (ObjectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Object)(nil)).Elem()
}

func (o ObjectPtrOutput) ToObjectPtrOutput() ObjectPtrOutput {
	return o
}

func (o ObjectPtrOutput) ToObjectPtrOutputWithContext(ctx context.Context) ObjectPtrOutput {
	return o
}

func (o ObjectPtrOutput) Elem() ObjectOutput {
	return o.ApplyT(func(v *Object) Object { return *v }).(ObjectOutput)
}

// Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to gradually change routing % based on performance
type RampUpRule struct {
	// Hostname of a slot to which the traffic will be redirected if decided to. E.g. mysite-stage.azurewebsites.net
	ActionHostName *string `pulumi:"actionHostName"`
	// Custom decision algorithm can be provided in TiPCallback site extension which Url can be specified. See TiPCallback site extension for the scaffold and contracts.
	//             https://www.siteextensions.net/packages/TiPCallback/
	ChangeDecisionCallbackUrl *string `pulumi:"changeDecisionCallbackUrl"`
	// [Optional] Specifies interval in minutes to reevaluate ReroutePercentage
	ChangeIntervalInMinutes *int `pulumi:"changeIntervalInMinutes"`
	// [Optional] In auto ramp up scenario this is the step to add/remove from {Microsoft.Web.Hosting.Administration.RampUpRule.ReroutePercentage} until it reaches
	//             {Microsoft.Web.Hosting.Administration.RampUpRule.MinReroutePercentage} or {Microsoft.Web.Hosting.Administration.RampUpRule.MaxReroutePercentage}. Site metrics are checked every N minutes specified in {Microsoft.Web.Hosting.Administration.RampUpRule.ChangeIntervalInMinutes}.
	//             Custom decision algorithm can be provided in TiPCallback site extension which Url can be specified in {Microsoft.Web.Hosting.Administration.RampUpRule.ChangeDecisionCallbackUrl}
	ChangeStep *float64 `pulumi:"changeStep"`
	// [Optional] Specifies upper boundary below which ReroutePercentage will stay.
	MaxReroutePercentage *float64 `pulumi:"maxReroutePercentage"`
	// [Optional] Specifies lower boundary above which ReroutePercentage will stay.
	MinReroutePercentage *float64 `pulumi:"minReroutePercentage"`
	// Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.
	Name *string `pulumi:"name"`
	// Percentage of the traffic which will be redirected to {Microsoft.Web.Hosting.Administration.RampUpRule.ActionHostName}
	ReroutePercentage *float64 `pulumi:"reroutePercentage"`
}

// RampUpRuleInput is an input type that accepts RampUpRuleArgs and RampUpRuleOutput values.
// You can construct a concrete instance of `RampUpRuleInput` via:
//
//          RampUpRuleArgs{...}
type RampUpRuleInput interface {
	pulumi.Input

	ToRampUpRuleOutput() RampUpRuleOutput
	ToRampUpRuleOutputWithContext(context.Context) RampUpRuleOutput
}

// Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to gradually change routing % based on performance
type RampUpRuleArgs struct {
	// Hostname of a slot to which the traffic will be redirected if decided to. E.g. mysite-stage.azurewebsites.net
	ActionHostName pulumi.StringPtrInput `pulumi:"actionHostName"`
	// Custom decision algorithm can be provided in TiPCallback site extension which Url can be specified. See TiPCallback site extension for the scaffold and contracts.
	//             https://www.siteextensions.net/packages/TiPCallback/
	ChangeDecisionCallbackUrl pulumi.StringPtrInput `pulumi:"changeDecisionCallbackUrl"`
	// [Optional] Specifies interval in minutes to reevaluate ReroutePercentage
	ChangeIntervalInMinutes pulumi.IntPtrInput `pulumi:"changeIntervalInMinutes"`
	// [Optional] In auto ramp up scenario this is the step to add/remove from {Microsoft.Web.Hosting.Administration.RampUpRule.ReroutePercentage} until it reaches
	//             {Microsoft.Web.Hosting.Administration.RampUpRule.MinReroutePercentage} or {Microsoft.Web.Hosting.Administration.RampUpRule.MaxReroutePercentage}. Site metrics are checked every N minutes specified in {Microsoft.Web.Hosting.Administration.RampUpRule.ChangeIntervalInMinutes}.
	//             Custom decision algorithm can be provided in TiPCallback site extension which Url can be specified in {Microsoft.Web.Hosting.Administration.RampUpRule.ChangeDecisionCallbackUrl}
	ChangeStep pulumi.Float64PtrInput `pulumi:"changeStep"`
	// [Optional] Specifies upper boundary below which ReroutePercentage will stay.
	MaxReroutePercentage pulumi.Float64PtrInput `pulumi:"maxReroutePercentage"`
	// [Optional] Specifies lower boundary above which ReroutePercentage will stay.
	MinReroutePercentage pulumi.Float64PtrInput `pulumi:"minReroutePercentage"`
	// Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Percentage of the traffic which will be redirected to {Microsoft.Web.Hosting.Administration.RampUpRule.ActionHostName}
	ReroutePercentage pulumi.Float64PtrInput `pulumi:"reroutePercentage"`
}

func (RampUpRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RampUpRule)(nil)).Elem()
}

func (i RampUpRuleArgs) ToRampUpRuleOutput() RampUpRuleOutput {
	return i.ToRampUpRuleOutputWithContext(context.Background())
}

func (i RampUpRuleArgs) ToRampUpRuleOutputWithContext(ctx context.Context) RampUpRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RampUpRuleOutput)
}

// RampUpRuleArrayInput is an input type that accepts RampUpRuleArray and RampUpRuleArrayOutput values.
// You can construct a concrete instance of `RampUpRuleArrayInput` via:
//
//          RampUpRuleArray{ RampUpRuleArgs{...} }
type RampUpRuleArrayInput interface {
	pulumi.Input

	ToRampUpRuleArrayOutput() RampUpRuleArrayOutput
	ToRampUpRuleArrayOutputWithContext(context.Context) RampUpRuleArrayOutput
}

type RampUpRuleArray []RampUpRuleInput

func (RampUpRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RampUpRule)(nil)).Elem()
}

func (i RampUpRuleArray) ToRampUpRuleArrayOutput() RampUpRuleArrayOutput {
	return i.ToRampUpRuleArrayOutputWithContext(context.Background())
}

func (i RampUpRuleArray) ToRampUpRuleArrayOutputWithContext(ctx context.Context) RampUpRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RampUpRuleArrayOutput)
}

// Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to gradually change routing % based on performance
type RampUpRuleOutput struct{ *pulumi.OutputState }

func (RampUpRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RampUpRule)(nil)).Elem()
}

func (o RampUpRuleOutput) ToRampUpRuleOutput() RampUpRuleOutput {
	return o
}

func (o RampUpRuleOutput) ToRampUpRuleOutputWithContext(ctx context.Context) RampUpRuleOutput {
	return o
}

// Hostname of a slot to which the traffic will be redirected if decided to. E.g. mysite-stage.azurewebsites.net
func (o RampUpRuleOutput) ActionHostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RampUpRule) *string { return v.ActionHostName }).(pulumi.StringPtrOutput)
}

// Custom decision algorithm can be provided in TiPCallback site extension which Url can be specified. See TiPCallback site extension for the scaffold and contracts.
//             https://www.siteextensions.net/packages/TiPCallback/
func (o RampUpRuleOutput) ChangeDecisionCallbackUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RampUpRule) *string { return v.ChangeDecisionCallbackUrl }).(pulumi.StringPtrOutput)
}

// [Optional] Specifies interval in minutes to reevaluate ReroutePercentage
func (o RampUpRuleOutput) ChangeIntervalInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RampUpRule) *int { return v.ChangeIntervalInMinutes }).(pulumi.IntPtrOutput)
}

// [Optional] In auto ramp up scenario this is the step to add/remove from {Microsoft.Web.Hosting.Administration.RampUpRule.ReroutePercentage} until it reaches
//             {Microsoft.Web.Hosting.Administration.RampUpRule.MinReroutePercentage} or {Microsoft.Web.Hosting.Administration.RampUpRule.MaxReroutePercentage}. Site metrics are checked every N minutes specified in {Microsoft.Web.Hosting.Administration.RampUpRule.ChangeIntervalInMinutes}.
//             Custom decision algorithm can be provided in TiPCallback site extension which Url can be specified in {Microsoft.Web.Hosting.Administration.RampUpRule.ChangeDecisionCallbackUrl}
func (o RampUpRuleOutput) ChangeStep() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RampUpRule) *float64 { return v.ChangeStep }).(pulumi.Float64PtrOutput)
}

// [Optional] Specifies upper boundary below which ReroutePercentage will stay.
func (o RampUpRuleOutput) MaxReroutePercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RampUpRule) *float64 { return v.MaxReroutePercentage }).(pulumi.Float64PtrOutput)
}

// [Optional] Specifies lower boundary above which ReroutePercentage will stay.
func (o RampUpRuleOutput) MinReroutePercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RampUpRule) *float64 { return v.MinReroutePercentage }).(pulumi.Float64PtrOutput)
}

// Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.
func (o RampUpRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RampUpRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Percentage of the traffic which will be redirected to {Microsoft.Web.Hosting.Administration.RampUpRule.ActionHostName}
func (o RampUpRuleOutput) ReroutePercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RampUpRule) *float64 { return v.ReroutePercentage }).(pulumi.Float64PtrOutput)
}

type RampUpRuleArrayOutput struct{ *pulumi.OutputState }

func (RampUpRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RampUpRule)(nil)).Elem()
}

func (o RampUpRuleArrayOutput) ToRampUpRuleArrayOutput() RampUpRuleArrayOutput {
	return o
}

func (o RampUpRuleArrayOutput) ToRampUpRuleArrayOutputWithContext(ctx context.Context) RampUpRuleArrayOutput {
	return o
}

func (o RampUpRuleArrayOutput) Index(i pulumi.IntInput) RampUpRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RampUpRule {
		return vs[0].([]RampUpRule)[vs[1].(int)]
	}).(RampUpRuleOutput)
}

// Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to gradually change routing % based on performance
type RampUpRuleResponse struct {
	// Hostname of a slot to which the traffic will be redirected if decided to. E.g. mysite-stage.azurewebsites.net
	ActionHostName *string `pulumi:"actionHostName"`
	// Custom decision algorithm can be provided in TiPCallback site extension which Url can be specified. See TiPCallback site extension for the scaffold and contracts.
	//             https://www.siteextensions.net/packages/TiPCallback/
	ChangeDecisionCallbackUrl *string `pulumi:"changeDecisionCallbackUrl"`
	// [Optional] Specifies interval in minutes to reevaluate ReroutePercentage
	ChangeIntervalInMinutes *int `pulumi:"changeIntervalInMinutes"`
	// [Optional] In auto ramp up scenario this is the step to add/remove from {Microsoft.Web.Hosting.Administration.RampUpRule.ReroutePercentage} until it reaches
	//             {Microsoft.Web.Hosting.Administration.RampUpRule.MinReroutePercentage} or {Microsoft.Web.Hosting.Administration.RampUpRule.MaxReroutePercentage}. Site metrics are checked every N minutes specified in {Microsoft.Web.Hosting.Administration.RampUpRule.ChangeIntervalInMinutes}.
	//             Custom decision algorithm can be provided in TiPCallback site extension which Url can be specified in {Microsoft.Web.Hosting.Administration.RampUpRule.ChangeDecisionCallbackUrl}
	ChangeStep *float64 `pulumi:"changeStep"`
	// [Optional] Specifies upper boundary below which ReroutePercentage will stay.
	MaxReroutePercentage *float64 `pulumi:"maxReroutePercentage"`
	// [Optional] Specifies lower boundary above which ReroutePercentage will stay.
	MinReroutePercentage *float64 `pulumi:"minReroutePercentage"`
	// Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.
	Name *string `pulumi:"name"`
	// Percentage of the traffic which will be redirected to {Microsoft.Web.Hosting.Administration.RampUpRule.ActionHostName}
	ReroutePercentage *float64 `pulumi:"reroutePercentage"`
}

// RampUpRuleResponseInput is an input type that accepts RampUpRuleResponseArgs and RampUpRuleResponseOutput values.
// You can construct a concrete instance of `RampUpRuleResponseInput` via:
//
//          RampUpRuleResponseArgs{...}
type RampUpRuleResponseInput interface {
	pulumi.Input

	ToRampUpRuleResponseOutput() RampUpRuleResponseOutput
	ToRampUpRuleResponseOutputWithContext(context.Context) RampUpRuleResponseOutput
}

// Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to gradually change routing % based on performance
type RampUpRuleResponseArgs struct {
	// Hostname of a slot to which the traffic will be redirected if decided to. E.g. mysite-stage.azurewebsites.net
	ActionHostName pulumi.StringPtrInput `pulumi:"actionHostName"`
	// Custom decision algorithm can be provided in TiPCallback site extension which Url can be specified. See TiPCallback site extension for the scaffold and contracts.
	//             https://www.siteextensions.net/packages/TiPCallback/
	ChangeDecisionCallbackUrl pulumi.StringPtrInput `pulumi:"changeDecisionCallbackUrl"`
	// [Optional] Specifies interval in minutes to reevaluate ReroutePercentage
	ChangeIntervalInMinutes pulumi.IntPtrInput `pulumi:"changeIntervalInMinutes"`
	// [Optional] In auto ramp up scenario this is the step to add/remove from {Microsoft.Web.Hosting.Administration.RampUpRule.ReroutePercentage} until it reaches
	//             {Microsoft.Web.Hosting.Administration.RampUpRule.MinReroutePercentage} or {Microsoft.Web.Hosting.Administration.RampUpRule.MaxReroutePercentage}. Site metrics are checked every N minutes specified in {Microsoft.Web.Hosting.Administration.RampUpRule.ChangeIntervalInMinutes}.
	//             Custom decision algorithm can be provided in TiPCallback site extension which Url can be specified in {Microsoft.Web.Hosting.Administration.RampUpRule.ChangeDecisionCallbackUrl}
	ChangeStep pulumi.Float64PtrInput `pulumi:"changeStep"`
	// [Optional] Specifies upper boundary below which ReroutePercentage will stay.
	MaxReroutePercentage pulumi.Float64PtrInput `pulumi:"maxReroutePercentage"`
	// [Optional] Specifies lower boundary above which ReroutePercentage will stay.
	MinReroutePercentage pulumi.Float64PtrInput `pulumi:"minReroutePercentage"`
	// Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Percentage of the traffic which will be redirected to {Microsoft.Web.Hosting.Administration.RampUpRule.ActionHostName}
	ReroutePercentage pulumi.Float64PtrInput `pulumi:"reroutePercentage"`
}

func (RampUpRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RampUpRuleResponse)(nil)).Elem()
}

func (i RampUpRuleResponseArgs) ToRampUpRuleResponseOutput() RampUpRuleResponseOutput {
	return i.ToRampUpRuleResponseOutputWithContext(context.Background())
}

func (i RampUpRuleResponseArgs) ToRampUpRuleResponseOutputWithContext(ctx context.Context) RampUpRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RampUpRuleResponseOutput)
}

// RampUpRuleResponseArrayInput is an input type that accepts RampUpRuleResponseArray and RampUpRuleResponseArrayOutput values.
// You can construct a concrete instance of `RampUpRuleResponseArrayInput` via:
//
//          RampUpRuleResponseArray{ RampUpRuleResponseArgs{...} }
type RampUpRuleResponseArrayInput interface {
	pulumi.Input

	ToRampUpRuleResponseArrayOutput() RampUpRuleResponseArrayOutput
	ToRampUpRuleResponseArrayOutputWithContext(context.Context) RampUpRuleResponseArrayOutput
}

type RampUpRuleResponseArray []RampUpRuleResponseInput

func (RampUpRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RampUpRuleResponse)(nil)).Elem()
}

func (i RampUpRuleResponseArray) ToRampUpRuleResponseArrayOutput() RampUpRuleResponseArrayOutput {
	return i.ToRampUpRuleResponseArrayOutputWithContext(context.Background())
}

func (i RampUpRuleResponseArray) ToRampUpRuleResponseArrayOutputWithContext(ctx context.Context) RampUpRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RampUpRuleResponseArrayOutput)
}

// Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to gradually change routing % based on performance
type RampUpRuleResponseOutput struct{ *pulumi.OutputState }

func (RampUpRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RampUpRuleResponse)(nil)).Elem()
}

func (o RampUpRuleResponseOutput) ToRampUpRuleResponseOutput() RampUpRuleResponseOutput {
	return o
}

func (o RampUpRuleResponseOutput) ToRampUpRuleResponseOutputWithContext(ctx context.Context) RampUpRuleResponseOutput {
	return o
}

// Hostname of a slot to which the traffic will be redirected if decided to. E.g. mysite-stage.azurewebsites.net
func (o RampUpRuleResponseOutput) ActionHostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RampUpRuleResponse) *string { return v.ActionHostName }).(pulumi.StringPtrOutput)
}

// Custom decision algorithm can be provided in TiPCallback site extension which Url can be specified. See TiPCallback site extension for the scaffold and contracts.
//             https://www.siteextensions.net/packages/TiPCallback/
func (o RampUpRuleResponseOutput) ChangeDecisionCallbackUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RampUpRuleResponse) *string { return v.ChangeDecisionCallbackUrl }).(pulumi.StringPtrOutput)
}

// [Optional] Specifies interval in minutes to reevaluate ReroutePercentage
func (o RampUpRuleResponseOutput) ChangeIntervalInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RampUpRuleResponse) *int { return v.ChangeIntervalInMinutes }).(pulumi.IntPtrOutput)
}

// [Optional] In auto ramp up scenario this is the step to add/remove from {Microsoft.Web.Hosting.Administration.RampUpRule.ReroutePercentage} until it reaches
//             {Microsoft.Web.Hosting.Administration.RampUpRule.MinReroutePercentage} or {Microsoft.Web.Hosting.Administration.RampUpRule.MaxReroutePercentage}. Site metrics are checked every N minutes specified in {Microsoft.Web.Hosting.Administration.RampUpRule.ChangeIntervalInMinutes}.
//             Custom decision algorithm can be provided in TiPCallback site extension which Url can be specified in {Microsoft.Web.Hosting.Administration.RampUpRule.ChangeDecisionCallbackUrl}
func (o RampUpRuleResponseOutput) ChangeStep() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RampUpRuleResponse) *float64 { return v.ChangeStep }).(pulumi.Float64PtrOutput)
}

// [Optional] Specifies upper boundary below which ReroutePercentage will stay.
func (o RampUpRuleResponseOutput) MaxReroutePercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RampUpRuleResponse) *float64 { return v.MaxReroutePercentage }).(pulumi.Float64PtrOutput)
}

// [Optional] Specifies lower boundary above which ReroutePercentage will stay.
func (o RampUpRuleResponseOutput) MinReroutePercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RampUpRuleResponse) *float64 { return v.MinReroutePercentage }).(pulumi.Float64PtrOutput)
}

// Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.
func (o RampUpRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RampUpRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Percentage of the traffic which will be redirected to {Microsoft.Web.Hosting.Administration.RampUpRule.ActionHostName}
func (o RampUpRuleResponseOutput) ReroutePercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RampUpRuleResponse) *float64 { return v.ReroutePercentage }).(pulumi.Float64PtrOutput)
}

type RampUpRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (RampUpRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RampUpRuleResponse)(nil)).Elem()
}

func (o RampUpRuleResponseArrayOutput) ToRampUpRuleResponseArrayOutput() RampUpRuleResponseArrayOutput {
	return o
}

func (o RampUpRuleResponseArrayOutput) ToRampUpRuleResponseArrayOutputWithContext(ctx context.Context) RampUpRuleResponseArrayOutput {
	return o
}

func (o RampUpRuleResponseArrayOutput) Index(i pulumi.IntInput) RampUpRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RampUpRuleResponse {
		return vs[0].([]RampUpRuleResponse)[vs[1].(int)]
	}).(RampUpRuleResponseOutput)
}

type RelayServiceConnectionEntityProperties struct {
	BiztalkUri               *string `pulumi:"biztalkUri"`
	EntityConnectionString   *string `pulumi:"entityConnectionString"`
	EntityName               *string `pulumi:"entityName"`
	Hostname                 *string `pulumi:"hostname"`
	Port                     *int    `pulumi:"port"`
	ResourceConnectionString *string `pulumi:"resourceConnectionString"`
	ResourceType             *string `pulumi:"resourceType"`
}

// RelayServiceConnectionEntityPropertiesInput is an input type that accepts RelayServiceConnectionEntityPropertiesArgs and RelayServiceConnectionEntityPropertiesOutput values.
// You can construct a concrete instance of `RelayServiceConnectionEntityPropertiesInput` via:
//
//          RelayServiceConnectionEntityPropertiesArgs{...}
type RelayServiceConnectionEntityPropertiesInput interface {
	pulumi.Input

	ToRelayServiceConnectionEntityPropertiesOutput() RelayServiceConnectionEntityPropertiesOutput
	ToRelayServiceConnectionEntityPropertiesOutputWithContext(context.Context) RelayServiceConnectionEntityPropertiesOutput
}

type RelayServiceConnectionEntityPropertiesArgs struct {
	BiztalkUri               pulumi.StringPtrInput `pulumi:"biztalkUri"`
	EntityConnectionString   pulumi.StringPtrInput `pulumi:"entityConnectionString"`
	EntityName               pulumi.StringPtrInput `pulumi:"entityName"`
	Hostname                 pulumi.StringPtrInput `pulumi:"hostname"`
	Port                     pulumi.IntPtrInput    `pulumi:"port"`
	ResourceConnectionString pulumi.StringPtrInput `pulumi:"resourceConnectionString"`
	ResourceType             pulumi.StringPtrInput `pulumi:"resourceType"`
}

func (RelayServiceConnectionEntityPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RelayServiceConnectionEntityProperties)(nil)).Elem()
}

func (i RelayServiceConnectionEntityPropertiesArgs) ToRelayServiceConnectionEntityPropertiesOutput() RelayServiceConnectionEntityPropertiesOutput {
	return i.ToRelayServiceConnectionEntityPropertiesOutputWithContext(context.Background())
}

func (i RelayServiceConnectionEntityPropertiesArgs) ToRelayServiceConnectionEntityPropertiesOutputWithContext(ctx context.Context) RelayServiceConnectionEntityPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RelayServiceConnectionEntityPropertiesOutput)
}

func (i RelayServiceConnectionEntityPropertiesArgs) ToRelayServiceConnectionEntityPropertiesPtrOutput() RelayServiceConnectionEntityPropertiesPtrOutput {
	return i.ToRelayServiceConnectionEntityPropertiesPtrOutputWithContext(context.Background())
}

func (i RelayServiceConnectionEntityPropertiesArgs) ToRelayServiceConnectionEntityPropertiesPtrOutputWithContext(ctx context.Context) RelayServiceConnectionEntityPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RelayServiceConnectionEntityPropertiesOutput).ToRelayServiceConnectionEntityPropertiesPtrOutputWithContext(ctx)
}

// RelayServiceConnectionEntityPropertiesPtrInput is an input type that accepts RelayServiceConnectionEntityPropertiesArgs, RelayServiceConnectionEntityPropertiesPtr and RelayServiceConnectionEntityPropertiesPtrOutput values.
// You can construct a concrete instance of `RelayServiceConnectionEntityPropertiesPtrInput` via:
//
//          RelayServiceConnectionEntityPropertiesArgs{...}
//
//  or:
//
//          nil
type RelayServiceConnectionEntityPropertiesPtrInput interface {
	pulumi.Input

	ToRelayServiceConnectionEntityPropertiesPtrOutput() RelayServiceConnectionEntityPropertiesPtrOutput
	ToRelayServiceConnectionEntityPropertiesPtrOutputWithContext(context.Context) RelayServiceConnectionEntityPropertiesPtrOutput
}

type relayServiceConnectionEntityPropertiesPtrType RelayServiceConnectionEntityPropertiesArgs

func RelayServiceConnectionEntityPropertiesPtr(v *RelayServiceConnectionEntityPropertiesArgs) RelayServiceConnectionEntityPropertiesPtrInput {
	return (*relayServiceConnectionEntityPropertiesPtrType)(v)
}

func (*relayServiceConnectionEntityPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RelayServiceConnectionEntityProperties)(nil)).Elem()
}

func (i *relayServiceConnectionEntityPropertiesPtrType) ToRelayServiceConnectionEntityPropertiesPtrOutput() RelayServiceConnectionEntityPropertiesPtrOutput {
	return i.ToRelayServiceConnectionEntityPropertiesPtrOutputWithContext(context.Background())
}

func (i *relayServiceConnectionEntityPropertiesPtrType) ToRelayServiceConnectionEntityPropertiesPtrOutputWithContext(ctx context.Context) RelayServiceConnectionEntityPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RelayServiceConnectionEntityPropertiesPtrOutput)
}

type RelayServiceConnectionEntityPropertiesOutput struct{ *pulumi.OutputState }

func (RelayServiceConnectionEntityPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RelayServiceConnectionEntityProperties)(nil)).Elem()
}

func (o RelayServiceConnectionEntityPropertiesOutput) ToRelayServiceConnectionEntityPropertiesOutput() RelayServiceConnectionEntityPropertiesOutput {
	return o
}

func (o RelayServiceConnectionEntityPropertiesOutput) ToRelayServiceConnectionEntityPropertiesOutputWithContext(ctx context.Context) RelayServiceConnectionEntityPropertiesOutput {
	return o
}

func (o RelayServiceConnectionEntityPropertiesOutput) ToRelayServiceConnectionEntityPropertiesPtrOutput() RelayServiceConnectionEntityPropertiesPtrOutput {
	return o.ToRelayServiceConnectionEntityPropertiesPtrOutputWithContext(context.Background())
}

func (o RelayServiceConnectionEntityPropertiesOutput) ToRelayServiceConnectionEntityPropertiesPtrOutputWithContext(ctx context.Context) RelayServiceConnectionEntityPropertiesPtrOutput {
	return o.ApplyT(func(v RelayServiceConnectionEntityProperties) *RelayServiceConnectionEntityProperties {
		return &v
	}).(RelayServiceConnectionEntityPropertiesPtrOutput)
}
func (o RelayServiceConnectionEntityPropertiesOutput) BiztalkUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RelayServiceConnectionEntityProperties) *string { return v.BiztalkUri }).(pulumi.StringPtrOutput)
}

func (o RelayServiceConnectionEntityPropertiesOutput) EntityConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RelayServiceConnectionEntityProperties) *string { return v.EntityConnectionString }).(pulumi.StringPtrOutput)
}

func (o RelayServiceConnectionEntityPropertiesOutput) EntityName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RelayServiceConnectionEntityProperties) *string { return v.EntityName }).(pulumi.StringPtrOutput)
}

func (o RelayServiceConnectionEntityPropertiesOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RelayServiceConnectionEntityProperties) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

func (o RelayServiceConnectionEntityPropertiesOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RelayServiceConnectionEntityProperties) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o RelayServiceConnectionEntityPropertiesOutput) ResourceConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RelayServiceConnectionEntityProperties) *string { return v.ResourceConnectionString }).(pulumi.StringPtrOutput)
}

func (o RelayServiceConnectionEntityPropertiesOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RelayServiceConnectionEntityProperties) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

type RelayServiceConnectionEntityPropertiesPtrOutput struct{ *pulumi.OutputState }

func (RelayServiceConnectionEntityPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RelayServiceConnectionEntityProperties)(nil)).Elem()
}

func (o RelayServiceConnectionEntityPropertiesPtrOutput) ToRelayServiceConnectionEntityPropertiesPtrOutput() RelayServiceConnectionEntityPropertiesPtrOutput {
	return o
}

func (o RelayServiceConnectionEntityPropertiesPtrOutput) ToRelayServiceConnectionEntityPropertiesPtrOutputWithContext(ctx context.Context) RelayServiceConnectionEntityPropertiesPtrOutput {
	return o
}

func (o RelayServiceConnectionEntityPropertiesPtrOutput) Elem() RelayServiceConnectionEntityPropertiesOutput {
	return o.ApplyT(func(v *RelayServiceConnectionEntityProperties) RelayServiceConnectionEntityProperties { return *v }).(RelayServiceConnectionEntityPropertiesOutput)
}

func (o RelayServiceConnectionEntityPropertiesPtrOutput) BiztalkUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RelayServiceConnectionEntityProperties) *string {
		if v == nil {
			return nil
		}
		return v.BiztalkUri
	}).(pulumi.StringPtrOutput)
}

func (o RelayServiceConnectionEntityPropertiesPtrOutput) EntityConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RelayServiceConnectionEntityProperties) *string {
		if v == nil {
			return nil
		}
		return v.EntityConnectionString
	}).(pulumi.StringPtrOutput)
}

func (o RelayServiceConnectionEntityPropertiesPtrOutput) EntityName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RelayServiceConnectionEntityProperties) *string {
		if v == nil {
			return nil
		}
		return v.EntityName
	}).(pulumi.StringPtrOutput)
}

func (o RelayServiceConnectionEntityPropertiesPtrOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RelayServiceConnectionEntityProperties) *string {
		if v == nil {
			return nil
		}
		return v.Hostname
	}).(pulumi.StringPtrOutput)
}

func (o RelayServiceConnectionEntityPropertiesPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RelayServiceConnectionEntityProperties) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

func (o RelayServiceConnectionEntityPropertiesPtrOutput) ResourceConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RelayServiceConnectionEntityProperties) *string {
		if v == nil {
			return nil
		}
		return v.ResourceConnectionString
	}).(pulumi.StringPtrOutput)
}

func (o RelayServiceConnectionEntityPropertiesPtrOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RelayServiceConnectionEntityProperties) *string {
		if v == nil {
			return nil
		}
		return v.ResourceType
	}).(pulumi.StringPtrOutput)
}

type RelayServiceConnectionEntityResponseProperties struct {
	BiztalkUri               *string `pulumi:"biztalkUri"`
	EntityConnectionString   *string `pulumi:"entityConnectionString"`
	EntityName               *string `pulumi:"entityName"`
	Hostname                 *string `pulumi:"hostname"`
	Port                     *int    `pulumi:"port"`
	ResourceConnectionString *string `pulumi:"resourceConnectionString"`
	ResourceType             *string `pulumi:"resourceType"`
}

// RelayServiceConnectionEntityResponsePropertiesInput is an input type that accepts RelayServiceConnectionEntityResponsePropertiesArgs and RelayServiceConnectionEntityResponsePropertiesOutput values.
// You can construct a concrete instance of `RelayServiceConnectionEntityResponsePropertiesInput` via:
//
//          RelayServiceConnectionEntityResponsePropertiesArgs{...}
type RelayServiceConnectionEntityResponsePropertiesInput interface {
	pulumi.Input

	ToRelayServiceConnectionEntityResponsePropertiesOutput() RelayServiceConnectionEntityResponsePropertiesOutput
	ToRelayServiceConnectionEntityResponsePropertiesOutputWithContext(context.Context) RelayServiceConnectionEntityResponsePropertiesOutput
}

type RelayServiceConnectionEntityResponsePropertiesArgs struct {
	BiztalkUri               pulumi.StringPtrInput `pulumi:"biztalkUri"`
	EntityConnectionString   pulumi.StringPtrInput `pulumi:"entityConnectionString"`
	EntityName               pulumi.StringPtrInput `pulumi:"entityName"`
	Hostname                 pulumi.StringPtrInput `pulumi:"hostname"`
	Port                     pulumi.IntPtrInput    `pulumi:"port"`
	ResourceConnectionString pulumi.StringPtrInput `pulumi:"resourceConnectionString"`
	ResourceType             pulumi.StringPtrInput `pulumi:"resourceType"`
}

func (RelayServiceConnectionEntityResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RelayServiceConnectionEntityResponseProperties)(nil)).Elem()
}

func (i RelayServiceConnectionEntityResponsePropertiesArgs) ToRelayServiceConnectionEntityResponsePropertiesOutput() RelayServiceConnectionEntityResponsePropertiesOutput {
	return i.ToRelayServiceConnectionEntityResponsePropertiesOutputWithContext(context.Background())
}

func (i RelayServiceConnectionEntityResponsePropertiesArgs) ToRelayServiceConnectionEntityResponsePropertiesOutputWithContext(ctx context.Context) RelayServiceConnectionEntityResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RelayServiceConnectionEntityResponsePropertiesOutput)
}

func (i RelayServiceConnectionEntityResponsePropertiesArgs) ToRelayServiceConnectionEntityResponsePropertiesPtrOutput() RelayServiceConnectionEntityResponsePropertiesPtrOutput {
	return i.ToRelayServiceConnectionEntityResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i RelayServiceConnectionEntityResponsePropertiesArgs) ToRelayServiceConnectionEntityResponsePropertiesPtrOutputWithContext(ctx context.Context) RelayServiceConnectionEntityResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RelayServiceConnectionEntityResponsePropertiesOutput).ToRelayServiceConnectionEntityResponsePropertiesPtrOutputWithContext(ctx)
}

// RelayServiceConnectionEntityResponsePropertiesPtrInput is an input type that accepts RelayServiceConnectionEntityResponsePropertiesArgs, RelayServiceConnectionEntityResponsePropertiesPtr and RelayServiceConnectionEntityResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `RelayServiceConnectionEntityResponsePropertiesPtrInput` via:
//
//          RelayServiceConnectionEntityResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type RelayServiceConnectionEntityResponsePropertiesPtrInput interface {
	pulumi.Input

	ToRelayServiceConnectionEntityResponsePropertiesPtrOutput() RelayServiceConnectionEntityResponsePropertiesPtrOutput
	ToRelayServiceConnectionEntityResponsePropertiesPtrOutputWithContext(context.Context) RelayServiceConnectionEntityResponsePropertiesPtrOutput
}

type relayServiceConnectionEntityResponsePropertiesPtrType RelayServiceConnectionEntityResponsePropertiesArgs

func RelayServiceConnectionEntityResponsePropertiesPtr(v *RelayServiceConnectionEntityResponsePropertiesArgs) RelayServiceConnectionEntityResponsePropertiesPtrInput {
	return (*relayServiceConnectionEntityResponsePropertiesPtrType)(v)
}

func (*relayServiceConnectionEntityResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RelayServiceConnectionEntityResponseProperties)(nil)).Elem()
}

func (i *relayServiceConnectionEntityResponsePropertiesPtrType) ToRelayServiceConnectionEntityResponsePropertiesPtrOutput() RelayServiceConnectionEntityResponsePropertiesPtrOutput {
	return i.ToRelayServiceConnectionEntityResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *relayServiceConnectionEntityResponsePropertiesPtrType) ToRelayServiceConnectionEntityResponsePropertiesPtrOutputWithContext(ctx context.Context) RelayServiceConnectionEntityResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RelayServiceConnectionEntityResponsePropertiesPtrOutput)
}

type RelayServiceConnectionEntityResponsePropertiesOutput struct{ *pulumi.OutputState }

func (RelayServiceConnectionEntityResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RelayServiceConnectionEntityResponseProperties)(nil)).Elem()
}

func (o RelayServiceConnectionEntityResponsePropertiesOutput) ToRelayServiceConnectionEntityResponsePropertiesOutput() RelayServiceConnectionEntityResponsePropertiesOutput {
	return o
}

func (o RelayServiceConnectionEntityResponsePropertiesOutput) ToRelayServiceConnectionEntityResponsePropertiesOutputWithContext(ctx context.Context) RelayServiceConnectionEntityResponsePropertiesOutput {
	return o
}

func (o RelayServiceConnectionEntityResponsePropertiesOutput) ToRelayServiceConnectionEntityResponsePropertiesPtrOutput() RelayServiceConnectionEntityResponsePropertiesPtrOutput {
	return o.ToRelayServiceConnectionEntityResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o RelayServiceConnectionEntityResponsePropertiesOutput) ToRelayServiceConnectionEntityResponsePropertiesPtrOutputWithContext(ctx context.Context) RelayServiceConnectionEntityResponsePropertiesPtrOutput {
	return o.ApplyT(func(v RelayServiceConnectionEntityResponseProperties) *RelayServiceConnectionEntityResponseProperties {
		return &v
	}).(RelayServiceConnectionEntityResponsePropertiesPtrOutput)
}
func (o RelayServiceConnectionEntityResponsePropertiesOutput) BiztalkUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RelayServiceConnectionEntityResponseProperties) *string { return v.BiztalkUri }).(pulumi.StringPtrOutput)
}

func (o RelayServiceConnectionEntityResponsePropertiesOutput) EntityConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RelayServiceConnectionEntityResponseProperties) *string { return v.EntityConnectionString }).(pulumi.StringPtrOutput)
}

func (o RelayServiceConnectionEntityResponsePropertiesOutput) EntityName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RelayServiceConnectionEntityResponseProperties) *string { return v.EntityName }).(pulumi.StringPtrOutput)
}

func (o RelayServiceConnectionEntityResponsePropertiesOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RelayServiceConnectionEntityResponseProperties) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

func (o RelayServiceConnectionEntityResponsePropertiesOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RelayServiceConnectionEntityResponseProperties) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o RelayServiceConnectionEntityResponsePropertiesOutput) ResourceConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RelayServiceConnectionEntityResponseProperties) *string { return v.ResourceConnectionString }).(pulumi.StringPtrOutput)
}

func (o RelayServiceConnectionEntityResponsePropertiesOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RelayServiceConnectionEntityResponseProperties) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

type RelayServiceConnectionEntityResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (RelayServiceConnectionEntityResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RelayServiceConnectionEntityResponseProperties)(nil)).Elem()
}

func (o RelayServiceConnectionEntityResponsePropertiesPtrOutput) ToRelayServiceConnectionEntityResponsePropertiesPtrOutput() RelayServiceConnectionEntityResponsePropertiesPtrOutput {
	return o
}

func (o RelayServiceConnectionEntityResponsePropertiesPtrOutput) ToRelayServiceConnectionEntityResponsePropertiesPtrOutputWithContext(ctx context.Context) RelayServiceConnectionEntityResponsePropertiesPtrOutput {
	return o
}

func (o RelayServiceConnectionEntityResponsePropertiesPtrOutput) Elem() RelayServiceConnectionEntityResponsePropertiesOutput {
	return o.ApplyT(func(v *RelayServiceConnectionEntityResponseProperties) RelayServiceConnectionEntityResponseProperties {
		return *v
	}).(RelayServiceConnectionEntityResponsePropertiesOutput)
}

func (o RelayServiceConnectionEntityResponsePropertiesPtrOutput) BiztalkUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RelayServiceConnectionEntityResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.BiztalkUri
	}).(pulumi.StringPtrOutput)
}

func (o RelayServiceConnectionEntityResponsePropertiesPtrOutput) EntityConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RelayServiceConnectionEntityResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.EntityConnectionString
	}).(pulumi.StringPtrOutput)
}

func (o RelayServiceConnectionEntityResponsePropertiesPtrOutput) EntityName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RelayServiceConnectionEntityResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.EntityName
	}).(pulumi.StringPtrOutput)
}

func (o RelayServiceConnectionEntityResponsePropertiesPtrOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RelayServiceConnectionEntityResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Hostname
	}).(pulumi.StringPtrOutput)
}

func (o RelayServiceConnectionEntityResponsePropertiesPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RelayServiceConnectionEntityResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

func (o RelayServiceConnectionEntityResponsePropertiesPtrOutput) ResourceConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RelayServiceConnectionEntityResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.ResourceConnectionString
	}).(pulumi.StringPtrOutput)
}

func (o RelayServiceConnectionEntityResponsePropertiesPtrOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RelayServiceConnectionEntityResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.ResourceType
	}).(pulumi.StringPtrOutput)
}

// RequestsBasedTrigger
type RequestsBasedTrigger struct {
	// Count
	Count *int `pulumi:"count"`
	// TimeInterval
	TimeInterval *string `pulumi:"timeInterval"`
}

// RequestsBasedTriggerInput is an input type that accepts RequestsBasedTriggerArgs and RequestsBasedTriggerOutput values.
// You can construct a concrete instance of `RequestsBasedTriggerInput` via:
//
//          RequestsBasedTriggerArgs{...}
type RequestsBasedTriggerInput interface {
	pulumi.Input

	ToRequestsBasedTriggerOutput() RequestsBasedTriggerOutput
	ToRequestsBasedTriggerOutputWithContext(context.Context) RequestsBasedTriggerOutput
}

// RequestsBasedTrigger
type RequestsBasedTriggerArgs struct {
	// Count
	Count pulumi.IntPtrInput `pulumi:"count"`
	// TimeInterval
	TimeInterval pulumi.StringPtrInput `pulumi:"timeInterval"`
}

func (RequestsBasedTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestsBasedTrigger)(nil)).Elem()
}

func (i RequestsBasedTriggerArgs) ToRequestsBasedTriggerOutput() RequestsBasedTriggerOutput {
	return i.ToRequestsBasedTriggerOutputWithContext(context.Background())
}

func (i RequestsBasedTriggerArgs) ToRequestsBasedTriggerOutputWithContext(ctx context.Context) RequestsBasedTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestsBasedTriggerOutput)
}

func (i RequestsBasedTriggerArgs) ToRequestsBasedTriggerPtrOutput() RequestsBasedTriggerPtrOutput {
	return i.ToRequestsBasedTriggerPtrOutputWithContext(context.Background())
}

func (i RequestsBasedTriggerArgs) ToRequestsBasedTriggerPtrOutputWithContext(ctx context.Context) RequestsBasedTriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestsBasedTriggerOutput).ToRequestsBasedTriggerPtrOutputWithContext(ctx)
}

// RequestsBasedTriggerPtrInput is an input type that accepts RequestsBasedTriggerArgs, RequestsBasedTriggerPtr and RequestsBasedTriggerPtrOutput values.
// You can construct a concrete instance of `RequestsBasedTriggerPtrInput` via:
//
//          RequestsBasedTriggerArgs{...}
//
//  or:
//
//          nil
type RequestsBasedTriggerPtrInput interface {
	pulumi.Input

	ToRequestsBasedTriggerPtrOutput() RequestsBasedTriggerPtrOutput
	ToRequestsBasedTriggerPtrOutputWithContext(context.Context) RequestsBasedTriggerPtrOutput
}

type requestsBasedTriggerPtrType RequestsBasedTriggerArgs

func RequestsBasedTriggerPtr(v *RequestsBasedTriggerArgs) RequestsBasedTriggerPtrInput {
	return (*requestsBasedTriggerPtrType)(v)
}

func (*requestsBasedTriggerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestsBasedTrigger)(nil)).Elem()
}

func (i *requestsBasedTriggerPtrType) ToRequestsBasedTriggerPtrOutput() RequestsBasedTriggerPtrOutput {
	return i.ToRequestsBasedTriggerPtrOutputWithContext(context.Background())
}

func (i *requestsBasedTriggerPtrType) ToRequestsBasedTriggerPtrOutputWithContext(ctx context.Context) RequestsBasedTriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestsBasedTriggerPtrOutput)
}

// RequestsBasedTrigger
type RequestsBasedTriggerOutput struct{ *pulumi.OutputState }

func (RequestsBasedTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestsBasedTrigger)(nil)).Elem()
}

func (o RequestsBasedTriggerOutput) ToRequestsBasedTriggerOutput() RequestsBasedTriggerOutput {
	return o
}

func (o RequestsBasedTriggerOutput) ToRequestsBasedTriggerOutputWithContext(ctx context.Context) RequestsBasedTriggerOutput {
	return o
}

func (o RequestsBasedTriggerOutput) ToRequestsBasedTriggerPtrOutput() RequestsBasedTriggerPtrOutput {
	return o.ToRequestsBasedTriggerPtrOutputWithContext(context.Background())
}

func (o RequestsBasedTriggerOutput) ToRequestsBasedTriggerPtrOutputWithContext(ctx context.Context) RequestsBasedTriggerPtrOutput {
	return o.ApplyT(func(v RequestsBasedTrigger) *RequestsBasedTrigger {
		return &v
	}).(RequestsBasedTriggerPtrOutput)
}

// Count
func (o RequestsBasedTriggerOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RequestsBasedTrigger) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// TimeInterval
func (o RequestsBasedTriggerOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestsBasedTrigger) *string { return v.TimeInterval }).(pulumi.StringPtrOutput)
}

type RequestsBasedTriggerPtrOutput struct{ *pulumi.OutputState }

func (RequestsBasedTriggerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestsBasedTrigger)(nil)).Elem()
}

func (o RequestsBasedTriggerPtrOutput) ToRequestsBasedTriggerPtrOutput() RequestsBasedTriggerPtrOutput {
	return o
}

func (o RequestsBasedTriggerPtrOutput) ToRequestsBasedTriggerPtrOutputWithContext(ctx context.Context) RequestsBasedTriggerPtrOutput {
	return o
}

func (o RequestsBasedTriggerPtrOutput) Elem() RequestsBasedTriggerOutput {
	return o.ApplyT(func(v *RequestsBasedTrigger) RequestsBasedTrigger { return *v }).(RequestsBasedTriggerOutput)
}

// Count
func (o RequestsBasedTriggerPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RequestsBasedTrigger) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// TimeInterval
func (o RequestsBasedTriggerPtrOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestsBasedTrigger) *string {
		if v == nil {
			return nil
		}
		return v.TimeInterval
	}).(pulumi.StringPtrOutput)
}

// RequestsBasedTrigger
type RequestsBasedTriggerResponse struct {
	// Count
	Count *int `pulumi:"count"`
	// TimeInterval
	TimeInterval *string `pulumi:"timeInterval"`
}

// RequestsBasedTriggerResponseInput is an input type that accepts RequestsBasedTriggerResponseArgs and RequestsBasedTriggerResponseOutput values.
// You can construct a concrete instance of `RequestsBasedTriggerResponseInput` via:
//
//          RequestsBasedTriggerResponseArgs{...}
type RequestsBasedTriggerResponseInput interface {
	pulumi.Input

	ToRequestsBasedTriggerResponseOutput() RequestsBasedTriggerResponseOutput
	ToRequestsBasedTriggerResponseOutputWithContext(context.Context) RequestsBasedTriggerResponseOutput
}

// RequestsBasedTrigger
type RequestsBasedTriggerResponseArgs struct {
	// Count
	Count pulumi.IntPtrInput `pulumi:"count"`
	// TimeInterval
	TimeInterval pulumi.StringPtrInput `pulumi:"timeInterval"`
}

func (RequestsBasedTriggerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestsBasedTriggerResponse)(nil)).Elem()
}

func (i RequestsBasedTriggerResponseArgs) ToRequestsBasedTriggerResponseOutput() RequestsBasedTriggerResponseOutput {
	return i.ToRequestsBasedTriggerResponseOutputWithContext(context.Background())
}

func (i RequestsBasedTriggerResponseArgs) ToRequestsBasedTriggerResponseOutputWithContext(ctx context.Context) RequestsBasedTriggerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestsBasedTriggerResponseOutput)
}

func (i RequestsBasedTriggerResponseArgs) ToRequestsBasedTriggerResponsePtrOutput() RequestsBasedTriggerResponsePtrOutput {
	return i.ToRequestsBasedTriggerResponsePtrOutputWithContext(context.Background())
}

func (i RequestsBasedTriggerResponseArgs) ToRequestsBasedTriggerResponsePtrOutputWithContext(ctx context.Context) RequestsBasedTriggerResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestsBasedTriggerResponseOutput).ToRequestsBasedTriggerResponsePtrOutputWithContext(ctx)
}

// RequestsBasedTriggerResponsePtrInput is an input type that accepts RequestsBasedTriggerResponseArgs, RequestsBasedTriggerResponsePtr and RequestsBasedTriggerResponsePtrOutput values.
// You can construct a concrete instance of `RequestsBasedTriggerResponsePtrInput` via:
//
//          RequestsBasedTriggerResponseArgs{...}
//
//  or:
//
//          nil
type RequestsBasedTriggerResponsePtrInput interface {
	pulumi.Input

	ToRequestsBasedTriggerResponsePtrOutput() RequestsBasedTriggerResponsePtrOutput
	ToRequestsBasedTriggerResponsePtrOutputWithContext(context.Context) RequestsBasedTriggerResponsePtrOutput
}

type requestsBasedTriggerResponsePtrType RequestsBasedTriggerResponseArgs

func RequestsBasedTriggerResponsePtr(v *RequestsBasedTriggerResponseArgs) RequestsBasedTriggerResponsePtrInput {
	return (*requestsBasedTriggerResponsePtrType)(v)
}

func (*requestsBasedTriggerResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestsBasedTriggerResponse)(nil)).Elem()
}

func (i *requestsBasedTriggerResponsePtrType) ToRequestsBasedTriggerResponsePtrOutput() RequestsBasedTriggerResponsePtrOutput {
	return i.ToRequestsBasedTriggerResponsePtrOutputWithContext(context.Background())
}

func (i *requestsBasedTriggerResponsePtrType) ToRequestsBasedTriggerResponsePtrOutputWithContext(ctx context.Context) RequestsBasedTriggerResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestsBasedTriggerResponsePtrOutput)
}

// RequestsBasedTrigger
type RequestsBasedTriggerResponseOutput struct{ *pulumi.OutputState }

func (RequestsBasedTriggerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestsBasedTriggerResponse)(nil)).Elem()
}

func (o RequestsBasedTriggerResponseOutput) ToRequestsBasedTriggerResponseOutput() RequestsBasedTriggerResponseOutput {
	return o
}

func (o RequestsBasedTriggerResponseOutput) ToRequestsBasedTriggerResponseOutputWithContext(ctx context.Context) RequestsBasedTriggerResponseOutput {
	return o
}

func (o RequestsBasedTriggerResponseOutput) ToRequestsBasedTriggerResponsePtrOutput() RequestsBasedTriggerResponsePtrOutput {
	return o.ToRequestsBasedTriggerResponsePtrOutputWithContext(context.Background())
}

func (o RequestsBasedTriggerResponseOutput) ToRequestsBasedTriggerResponsePtrOutputWithContext(ctx context.Context) RequestsBasedTriggerResponsePtrOutput {
	return o.ApplyT(func(v RequestsBasedTriggerResponse) *RequestsBasedTriggerResponse {
		return &v
	}).(RequestsBasedTriggerResponsePtrOutput)
}

// Count
func (o RequestsBasedTriggerResponseOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RequestsBasedTriggerResponse) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// TimeInterval
func (o RequestsBasedTriggerResponseOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestsBasedTriggerResponse) *string { return v.TimeInterval }).(pulumi.StringPtrOutput)
}

type RequestsBasedTriggerResponsePtrOutput struct{ *pulumi.OutputState }

func (RequestsBasedTriggerResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestsBasedTriggerResponse)(nil)).Elem()
}

func (o RequestsBasedTriggerResponsePtrOutput) ToRequestsBasedTriggerResponsePtrOutput() RequestsBasedTriggerResponsePtrOutput {
	return o
}

func (o RequestsBasedTriggerResponsePtrOutput) ToRequestsBasedTriggerResponsePtrOutputWithContext(ctx context.Context) RequestsBasedTriggerResponsePtrOutput {
	return o
}

func (o RequestsBasedTriggerResponsePtrOutput) Elem() RequestsBasedTriggerResponseOutput {
	return o.ApplyT(func(v *RequestsBasedTriggerResponse) RequestsBasedTriggerResponse { return *v }).(RequestsBasedTriggerResponseOutput)
}

// Count
func (o RequestsBasedTriggerResponsePtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RequestsBasedTriggerResponse) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// TimeInterval
func (o RequestsBasedTriggerResponsePtrOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestsBasedTriggerResponse) *string {
		if v == nil {
			return nil
		}
		return v.TimeInterval
	}).(pulumi.StringPtrOutput)
}

// App Service Plan Model
type ServerFarmType struct {
	// Kind of resource
	Kind *string `pulumi:"kind"`
	// Resource Location
	Location string `pulumi:"location"`
	// Resource Name
	Name       *string                                 `pulumi:"name"`
	Properties ServerFarmWithRichSkuResponseProperties `pulumi:"properties"`
	// Describes a sku for a scalable resource
	Sku *SkuDescriptionResponse `pulumi:"sku"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type *string `pulumi:"type"`
}

// ServerFarmTypeInput is an input type that accepts ServerFarmTypeArgs and ServerFarmTypeOutput values.
// You can construct a concrete instance of `ServerFarmTypeInput` via:
//
//          ServerFarmTypeArgs{...}
type ServerFarmTypeInput interface {
	pulumi.Input

	ToServerFarmTypeOutput() ServerFarmTypeOutput
	ToServerFarmTypeOutputWithContext(context.Context) ServerFarmTypeOutput
}

// App Service Plan Model
type ServerFarmTypeArgs struct {
	// Kind of resource
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource Name
	Name       pulumi.StringPtrInput                        `pulumi:"name"`
	Properties ServerFarmWithRichSkuResponsePropertiesInput `pulumi:"properties"`
	// Describes a sku for a scalable resource
	Sku SkuDescriptionResponsePtrInput `pulumi:"sku"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ServerFarmTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerFarmType)(nil)).Elem()
}

func (i ServerFarmTypeArgs) ToServerFarmTypeOutput() ServerFarmTypeOutput {
	return i.ToServerFarmTypeOutputWithContext(context.Background())
}

func (i ServerFarmTypeArgs) ToServerFarmTypeOutputWithContext(ctx context.Context) ServerFarmTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerFarmTypeOutput)
}

// App Service Plan Model
type ServerFarmTypeOutput struct{ *pulumi.OutputState }

func (ServerFarmTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerFarmType)(nil)).Elem()
}

func (o ServerFarmTypeOutput) ToServerFarmTypeOutput() ServerFarmTypeOutput {
	return o
}

func (o ServerFarmTypeOutput) ToServerFarmTypeOutputWithContext(ctx context.Context) ServerFarmTypeOutput {
	return o
}

// Kind of resource
func (o ServerFarmTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerFarmType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location
func (o ServerFarmTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v ServerFarmType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name
func (o ServerFarmTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerFarmType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ServerFarmTypeOutput) Properties() ServerFarmWithRichSkuResponsePropertiesOutput {
	return o.ApplyT(func(v ServerFarmType) ServerFarmWithRichSkuResponseProperties { return v.Properties }).(ServerFarmWithRichSkuResponsePropertiesOutput)
}

// Describes a sku for a scalable resource
func (o ServerFarmTypeOutput) Sku() SkuDescriptionResponsePtrOutput {
	return o.ApplyT(func(v ServerFarmType) *SkuDescriptionResponse { return v.Sku }).(SkuDescriptionResponsePtrOutput)
}

// Resource tags
func (o ServerFarmTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ServerFarmType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o ServerFarmTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerFarmType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// VnetRoute contract used to pass routing information for a vnet.
type ServerFarmRouteForVnetType struct {
	// Kind of resource
	Kind *string `pulumi:"kind"`
	// Resource Location
	Location string `pulumi:"location"`
	// Resource Name
	Name       *string                     `pulumi:"name"`
	Properties VnetRouteResponseProperties `pulumi:"properties"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type *string `pulumi:"type"`
}

// ServerFarmRouteForVnetTypeInput is an input type that accepts ServerFarmRouteForVnetTypeArgs and ServerFarmRouteForVnetTypeOutput values.
// You can construct a concrete instance of `ServerFarmRouteForVnetTypeInput` via:
//
//          ServerFarmRouteForVnetTypeArgs{...}
type ServerFarmRouteForVnetTypeInput interface {
	pulumi.Input

	ToServerFarmRouteForVnetTypeOutput() ServerFarmRouteForVnetTypeOutput
	ToServerFarmRouteForVnetTypeOutputWithContext(context.Context) ServerFarmRouteForVnetTypeOutput
}

// VnetRoute contract used to pass routing information for a vnet.
type ServerFarmRouteForVnetTypeArgs struct {
	// Kind of resource
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource Name
	Name       pulumi.StringPtrInput            `pulumi:"name"`
	Properties VnetRouteResponsePropertiesInput `pulumi:"properties"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ServerFarmRouteForVnetTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerFarmRouteForVnetType)(nil)).Elem()
}

func (i ServerFarmRouteForVnetTypeArgs) ToServerFarmRouteForVnetTypeOutput() ServerFarmRouteForVnetTypeOutput {
	return i.ToServerFarmRouteForVnetTypeOutputWithContext(context.Background())
}

func (i ServerFarmRouteForVnetTypeArgs) ToServerFarmRouteForVnetTypeOutputWithContext(ctx context.Context) ServerFarmRouteForVnetTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerFarmRouteForVnetTypeOutput)
}

// VnetRoute contract used to pass routing information for a vnet.
type ServerFarmRouteForVnetTypeOutput struct{ *pulumi.OutputState }

func (ServerFarmRouteForVnetTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerFarmRouteForVnetType)(nil)).Elem()
}

func (o ServerFarmRouteForVnetTypeOutput) ToServerFarmRouteForVnetTypeOutput() ServerFarmRouteForVnetTypeOutput {
	return o
}

func (o ServerFarmRouteForVnetTypeOutput) ToServerFarmRouteForVnetTypeOutputWithContext(ctx context.Context) ServerFarmRouteForVnetTypeOutput {
	return o
}

// Kind of resource
func (o ServerFarmRouteForVnetTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerFarmRouteForVnetType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location
func (o ServerFarmRouteForVnetTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v ServerFarmRouteForVnetType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name
func (o ServerFarmRouteForVnetTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerFarmRouteForVnetType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ServerFarmRouteForVnetTypeOutput) Properties() VnetRouteResponsePropertiesOutput {
	return o.ApplyT(func(v ServerFarmRouteForVnetType) VnetRouteResponseProperties { return v.Properties }).(VnetRouteResponsePropertiesOutput)
}

// Resource tags
func (o ServerFarmRouteForVnetTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ServerFarmRouteForVnetType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o ServerFarmRouteForVnetTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerFarmRouteForVnetType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ServerFarmWithRichSkuProperties struct {
	// App Service Plan administration site
	AdminSiteName *string `pulumi:"adminSiteName"`
	// Specification for the hosting environment (App Service Environment) to use for the App Service Plan
	HostingEnvironmentProfile *HostingEnvironmentProfile `pulumi:"hostingEnvironmentProfile"`
	// Maximum number of instances that can be assigned to this App Service Plan
	MaximumNumberOfWorkers *int `pulumi:"maximumNumberOfWorkers"`
	// Name for the App Service Plan
	Name *string `pulumi:"name"`
	// If True apps assigned to this App Service Plan can be scaled independently
	//             If False apps assigned to this App Service Plan will scale to all instances of the plan
	PerSiteScaling *bool `pulumi:"perSiteScaling"`
	// Enables creation of a Linux App Service Plan
	Reserved *bool `pulumi:"reserved"`
	// Target worker tier assigned to the App Service Plan
	WorkerTierName *string `pulumi:"workerTierName"`
}

// ServerFarmWithRichSkuPropertiesInput is an input type that accepts ServerFarmWithRichSkuPropertiesArgs and ServerFarmWithRichSkuPropertiesOutput values.
// You can construct a concrete instance of `ServerFarmWithRichSkuPropertiesInput` via:
//
//          ServerFarmWithRichSkuPropertiesArgs{...}
type ServerFarmWithRichSkuPropertiesInput interface {
	pulumi.Input

	ToServerFarmWithRichSkuPropertiesOutput() ServerFarmWithRichSkuPropertiesOutput
	ToServerFarmWithRichSkuPropertiesOutputWithContext(context.Context) ServerFarmWithRichSkuPropertiesOutput
}

type ServerFarmWithRichSkuPropertiesArgs struct {
	// App Service Plan administration site
	AdminSiteName pulumi.StringPtrInput `pulumi:"adminSiteName"`
	// Specification for the hosting environment (App Service Environment) to use for the App Service Plan
	HostingEnvironmentProfile HostingEnvironmentProfilePtrInput `pulumi:"hostingEnvironmentProfile"`
	// Maximum number of instances that can be assigned to this App Service Plan
	MaximumNumberOfWorkers pulumi.IntPtrInput `pulumi:"maximumNumberOfWorkers"`
	// Name for the App Service Plan
	Name pulumi.StringPtrInput `pulumi:"name"`
	// If True apps assigned to this App Service Plan can be scaled independently
	//             If False apps assigned to this App Service Plan will scale to all instances of the plan
	PerSiteScaling pulumi.BoolPtrInput `pulumi:"perSiteScaling"`
	// Enables creation of a Linux App Service Plan
	Reserved pulumi.BoolPtrInput `pulumi:"reserved"`
	// Target worker tier assigned to the App Service Plan
	WorkerTierName pulumi.StringPtrInput `pulumi:"workerTierName"`
}

func (ServerFarmWithRichSkuPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerFarmWithRichSkuProperties)(nil)).Elem()
}

func (i ServerFarmWithRichSkuPropertiesArgs) ToServerFarmWithRichSkuPropertiesOutput() ServerFarmWithRichSkuPropertiesOutput {
	return i.ToServerFarmWithRichSkuPropertiesOutputWithContext(context.Background())
}

func (i ServerFarmWithRichSkuPropertiesArgs) ToServerFarmWithRichSkuPropertiesOutputWithContext(ctx context.Context) ServerFarmWithRichSkuPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerFarmWithRichSkuPropertiesOutput)
}

func (i ServerFarmWithRichSkuPropertiesArgs) ToServerFarmWithRichSkuPropertiesPtrOutput() ServerFarmWithRichSkuPropertiesPtrOutput {
	return i.ToServerFarmWithRichSkuPropertiesPtrOutputWithContext(context.Background())
}

func (i ServerFarmWithRichSkuPropertiesArgs) ToServerFarmWithRichSkuPropertiesPtrOutputWithContext(ctx context.Context) ServerFarmWithRichSkuPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerFarmWithRichSkuPropertiesOutput).ToServerFarmWithRichSkuPropertiesPtrOutputWithContext(ctx)
}

// ServerFarmWithRichSkuPropertiesPtrInput is an input type that accepts ServerFarmWithRichSkuPropertiesArgs, ServerFarmWithRichSkuPropertiesPtr and ServerFarmWithRichSkuPropertiesPtrOutput values.
// You can construct a concrete instance of `ServerFarmWithRichSkuPropertiesPtrInput` via:
//
//          ServerFarmWithRichSkuPropertiesArgs{...}
//
//  or:
//
//          nil
type ServerFarmWithRichSkuPropertiesPtrInput interface {
	pulumi.Input

	ToServerFarmWithRichSkuPropertiesPtrOutput() ServerFarmWithRichSkuPropertiesPtrOutput
	ToServerFarmWithRichSkuPropertiesPtrOutputWithContext(context.Context) ServerFarmWithRichSkuPropertiesPtrOutput
}

type serverFarmWithRichSkuPropertiesPtrType ServerFarmWithRichSkuPropertiesArgs

func ServerFarmWithRichSkuPropertiesPtr(v *ServerFarmWithRichSkuPropertiesArgs) ServerFarmWithRichSkuPropertiesPtrInput {
	return (*serverFarmWithRichSkuPropertiesPtrType)(v)
}

func (*serverFarmWithRichSkuPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerFarmWithRichSkuProperties)(nil)).Elem()
}

func (i *serverFarmWithRichSkuPropertiesPtrType) ToServerFarmWithRichSkuPropertiesPtrOutput() ServerFarmWithRichSkuPropertiesPtrOutput {
	return i.ToServerFarmWithRichSkuPropertiesPtrOutputWithContext(context.Background())
}

func (i *serverFarmWithRichSkuPropertiesPtrType) ToServerFarmWithRichSkuPropertiesPtrOutputWithContext(ctx context.Context) ServerFarmWithRichSkuPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerFarmWithRichSkuPropertiesPtrOutput)
}

type ServerFarmWithRichSkuPropertiesOutput struct{ *pulumi.OutputState }

func (ServerFarmWithRichSkuPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerFarmWithRichSkuProperties)(nil)).Elem()
}

func (o ServerFarmWithRichSkuPropertiesOutput) ToServerFarmWithRichSkuPropertiesOutput() ServerFarmWithRichSkuPropertiesOutput {
	return o
}

func (o ServerFarmWithRichSkuPropertiesOutput) ToServerFarmWithRichSkuPropertiesOutputWithContext(ctx context.Context) ServerFarmWithRichSkuPropertiesOutput {
	return o
}

func (o ServerFarmWithRichSkuPropertiesOutput) ToServerFarmWithRichSkuPropertiesPtrOutput() ServerFarmWithRichSkuPropertiesPtrOutput {
	return o.ToServerFarmWithRichSkuPropertiesPtrOutputWithContext(context.Background())
}

func (o ServerFarmWithRichSkuPropertiesOutput) ToServerFarmWithRichSkuPropertiesPtrOutputWithContext(ctx context.Context) ServerFarmWithRichSkuPropertiesPtrOutput {
	return o.ApplyT(func(v ServerFarmWithRichSkuProperties) *ServerFarmWithRichSkuProperties {
		return &v
	}).(ServerFarmWithRichSkuPropertiesPtrOutput)
}

// App Service Plan administration site
func (o ServerFarmWithRichSkuPropertiesOutput) AdminSiteName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerFarmWithRichSkuProperties) *string { return v.AdminSiteName }).(pulumi.StringPtrOutput)
}

// Specification for the hosting environment (App Service Environment) to use for the App Service Plan
func (o ServerFarmWithRichSkuPropertiesOutput) HostingEnvironmentProfile() HostingEnvironmentProfilePtrOutput {
	return o.ApplyT(func(v ServerFarmWithRichSkuProperties) *HostingEnvironmentProfile { return v.HostingEnvironmentProfile }).(HostingEnvironmentProfilePtrOutput)
}

// Maximum number of instances that can be assigned to this App Service Plan
func (o ServerFarmWithRichSkuPropertiesOutput) MaximumNumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServerFarmWithRichSkuProperties) *int { return v.MaximumNumberOfWorkers }).(pulumi.IntPtrOutput)
}

// Name for the App Service Plan
func (o ServerFarmWithRichSkuPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerFarmWithRichSkuProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// If True apps assigned to this App Service Plan can be scaled independently
//             If False apps assigned to this App Service Plan will scale to all instances of the plan
func (o ServerFarmWithRichSkuPropertiesOutput) PerSiteScaling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServerFarmWithRichSkuProperties) *bool { return v.PerSiteScaling }).(pulumi.BoolPtrOutput)
}

// Enables creation of a Linux App Service Plan
func (o ServerFarmWithRichSkuPropertiesOutput) Reserved() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServerFarmWithRichSkuProperties) *bool { return v.Reserved }).(pulumi.BoolPtrOutput)
}

// Target worker tier assigned to the App Service Plan
func (o ServerFarmWithRichSkuPropertiesOutput) WorkerTierName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerFarmWithRichSkuProperties) *string { return v.WorkerTierName }).(pulumi.StringPtrOutput)
}

type ServerFarmWithRichSkuPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ServerFarmWithRichSkuPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerFarmWithRichSkuProperties)(nil)).Elem()
}

func (o ServerFarmWithRichSkuPropertiesPtrOutput) ToServerFarmWithRichSkuPropertiesPtrOutput() ServerFarmWithRichSkuPropertiesPtrOutput {
	return o
}

func (o ServerFarmWithRichSkuPropertiesPtrOutput) ToServerFarmWithRichSkuPropertiesPtrOutputWithContext(ctx context.Context) ServerFarmWithRichSkuPropertiesPtrOutput {
	return o
}

func (o ServerFarmWithRichSkuPropertiesPtrOutput) Elem() ServerFarmWithRichSkuPropertiesOutput {
	return o.ApplyT(func(v *ServerFarmWithRichSkuProperties) ServerFarmWithRichSkuProperties { return *v }).(ServerFarmWithRichSkuPropertiesOutput)
}

// App Service Plan administration site
func (o ServerFarmWithRichSkuPropertiesPtrOutput) AdminSiteName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerFarmWithRichSkuProperties) *string {
		if v == nil {
			return nil
		}
		return v.AdminSiteName
	}).(pulumi.StringPtrOutput)
}

// Specification for the hosting environment (App Service Environment) to use for the App Service Plan
func (o ServerFarmWithRichSkuPropertiesPtrOutput) HostingEnvironmentProfile() HostingEnvironmentProfilePtrOutput {
	return o.ApplyT(func(v *ServerFarmWithRichSkuProperties) *HostingEnvironmentProfile {
		if v == nil {
			return nil
		}
		return v.HostingEnvironmentProfile
	}).(HostingEnvironmentProfilePtrOutput)
}

// Maximum number of instances that can be assigned to this App Service Plan
func (o ServerFarmWithRichSkuPropertiesPtrOutput) MaximumNumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServerFarmWithRichSkuProperties) *int {
		if v == nil {
			return nil
		}
		return v.MaximumNumberOfWorkers
	}).(pulumi.IntPtrOutput)
}

// Name for the App Service Plan
func (o ServerFarmWithRichSkuPropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerFarmWithRichSkuProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// If True apps assigned to this App Service Plan can be scaled independently
//             If False apps assigned to this App Service Plan will scale to all instances of the plan
func (o ServerFarmWithRichSkuPropertiesPtrOutput) PerSiteScaling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServerFarmWithRichSkuProperties) *bool {
		if v == nil {
			return nil
		}
		return v.PerSiteScaling
	}).(pulumi.BoolPtrOutput)
}

// Enables creation of a Linux App Service Plan
func (o ServerFarmWithRichSkuPropertiesPtrOutput) Reserved() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServerFarmWithRichSkuProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Reserved
	}).(pulumi.BoolPtrOutput)
}

// Target worker tier assigned to the App Service Plan
func (o ServerFarmWithRichSkuPropertiesPtrOutput) WorkerTierName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerFarmWithRichSkuProperties) *string {
		if v == nil {
			return nil
		}
		return v.WorkerTierName
	}).(pulumi.StringPtrOutput)
}

type ServerFarmWithRichSkuResponseProperties struct {
	// App Service Plan administration site
	AdminSiteName *string `pulumi:"adminSiteName"`
	// Geographical location for the App Service Plan
	GeoRegion string `pulumi:"geoRegion"`
	// Specification for the hosting environment (App Service Environment) to use for the App Service Plan
	HostingEnvironmentProfile *HostingEnvironmentProfileResponse `pulumi:"hostingEnvironmentProfile"`
	// Maximum number of instances that can be assigned to this App Service Plan
	MaximumNumberOfWorkers *int `pulumi:"maximumNumberOfWorkers"`
	// Name for the App Service Plan
	Name *string `pulumi:"name"`
	// Number of web apps assigned to this App Service Plan
	NumberOfSites int `pulumi:"numberOfSites"`
	// If True apps assigned to this App Service Plan can be scaled independently
	//             If False apps assigned to this App Service Plan will scale to all instances of the plan
	PerSiteScaling *bool `pulumi:"perSiteScaling"`
	// Enables creation of a Linux App Service Plan
	Reserved *bool `pulumi:"reserved"`
	// Resource group of the server farm
	ResourceGroup string `pulumi:"resourceGroup"`
	// App Service Plan Status
	Status string `pulumi:"status"`
	// App Service Plan Subscription
	Subscription string `pulumi:"subscription"`
	// Target worker tier assigned to the App Service Plan
	WorkerTierName *string `pulumi:"workerTierName"`
}

// ServerFarmWithRichSkuResponsePropertiesInput is an input type that accepts ServerFarmWithRichSkuResponsePropertiesArgs and ServerFarmWithRichSkuResponsePropertiesOutput values.
// You can construct a concrete instance of `ServerFarmWithRichSkuResponsePropertiesInput` via:
//
//          ServerFarmWithRichSkuResponsePropertiesArgs{...}
type ServerFarmWithRichSkuResponsePropertiesInput interface {
	pulumi.Input

	ToServerFarmWithRichSkuResponsePropertiesOutput() ServerFarmWithRichSkuResponsePropertiesOutput
	ToServerFarmWithRichSkuResponsePropertiesOutputWithContext(context.Context) ServerFarmWithRichSkuResponsePropertiesOutput
}

type ServerFarmWithRichSkuResponsePropertiesArgs struct {
	// App Service Plan administration site
	AdminSiteName pulumi.StringPtrInput `pulumi:"adminSiteName"`
	// Geographical location for the App Service Plan
	GeoRegion pulumi.StringInput `pulumi:"geoRegion"`
	// Specification for the hosting environment (App Service Environment) to use for the App Service Plan
	HostingEnvironmentProfile HostingEnvironmentProfileResponsePtrInput `pulumi:"hostingEnvironmentProfile"`
	// Maximum number of instances that can be assigned to this App Service Plan
	MaximumNumberOfWorkers pulumi.IntPtrInput `pulumi:"maximumNumberOfWorkers"`
	// Name for the App Service Plan
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Number of web apps assigned to this App Service Plan
	NumberOfSites pulumi.IntInput `pulumi:"numberOfSites"`
	// If True apps assigned to this App Service Plan can be scaled independently
	//             If False apps assigned to this App Service Plan will scale to all instances of the plan
	PerSiteScaling pulumi.BoolPtrInput `pulumi:"perSiteScaling"`
	// Enables creation of a Linux App Service Plan
	Reserved pulumi.BoolPtrInput `pulumi:"reserved"`
	// Resource group of the server farm
	ResourceGroup pulumi.StringInput `pulumi:"resourceGroup"`
	// App Service Plan Status
	Status pulumi.StringInput `pulumi:"status"`
	// App Service Plan Subscription
	Subscription pulumi.StringInput `pulumi:"subscription"`
	// Target worker tier assigned to the App Service Plan
	WorkerTierName pulumi.StringPtrInput `pulumi:"workerTierName"`
}

func (ServerFarmWithRichSkuResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerFarmWithRichSkuResponseProperties)(nil)).Elem()
}

func (i ServerFarmWithRichSkuResponsePropertiesArgs) ToServerFarmWithRichSkuResponsePropertiesOutput() ServerFarmWithRichSkuResponsePropertiesOutput {
	return i.ToServerFarmWithRichSkuResponsePropertiesOutputWithContext(context.Background())
}

func (i ServerFarmWithRichSkuResponsePropertiesArgs) ToServerFarmWithRichSkuResponsePropertiesOutputWithContext(ctx context.Context) ServerFarmWithRichSkuResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerFarmWithRichSkuResponsePropertiesOutput)
}

func (i ServerFarmWithRichSkuResponsePropertiesArgs) ToServerFarmWithRichSkuResponsePropertiesPtrOutput() ServerFarmWithRichSkuResponsePropertiesPtrOutput {
	return i.ToServerFarmWithRichSkuResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i ServerFarmWithRichSkuResponsePropertiesArgs) ToServerFarmWithRichSkuResponsePropertiesPtrOutputWithContext(ctx context.Context) ServerFarmWithRichSkuResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerFarmWithRichSkuResponsePropertiesOutput).ToServerFarmWithRichSkuResponsePropertiesPtrOutputWithContext(ctx)
}

// ServerFarmWithRichSkuResponsePropertiesPtrInput is an input type that accepts ServerFarmWithRichSkuResponsePropertiesArgs, ServerFarmWithRichSkuResponsePropertiesPtr and ServerFarmWithRichSkuResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `ServerFarmWithRichSkuResponsePropertiesPtrInput` via:
//
//          ServerFarmWithRichSkuResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type ServerFarmWithRichSkuResponsePropertiesPtrInput interface {
	pulumi.Input

	ToServerFarmWithRichSkuResponsePropertiesPtrOutput() ServerFarmWithRichSkuResponsePropertiesPtrOutput
	ToServerFarmWithRichSkuResponsePropertiesPtrOutputWithContext(context.Context) ServerFarmWithRichSkuResponsePropertiesPtrOutput
}

type serverFarmWithRichSkuResponsePropertiesPtrType ServerFarmWithRichSkuResponsePropertiesArgs

func ServerFarmWithRichSkuResponsePropertiesPtr(v *ServerFarmWithRichSkuResponsePropertiesArgs) ServerFarmWithRichSkuResponsePropertiesPtrInput {
	return (*serverFarmWithRichSkuResponsePropertiesPtrType)(v)
}

func (*serverFarmWithRichSkuResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerFarmWithRichSkuResponseProperties)(nil)).Elem()
}

func (i *serverFarmWithRichSkuResponsePropertiesPtrType) ToServerFarmWithRichSkuResponsePropertiesPtrOutput() ServerFarmWithRichSkuResponsePropertiesPtrOutput {
	return i.ToServerFarmWithRichSkuResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *serverFarmWithRichSkuResponsePropertiesPtrType) ToServerFarmWithRichSkuResponsePropertiesPtrOutputWithContext(ctx context.Context) ServerFarmWithRichSkuResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerFarmWithRichSkuResponsePropertiesPtrOutput)
}

type ServerFarmWithRichSkuResponsePropertiesOutput struct{ *pulumi.OutputState }

func (ServerFarmWithRichSkuResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerFarmWithRichSkuResponseProperties)(nil)).Elem()
}

func (o ServerFarmWithRichSkuResponsePropertiesOutput) ToServerFarmWithRichSkuResponsePropertiesOutput() ServerFarmWithRichSkuResponsePropertiesOutput {
	return o
}

func (o ServerFarmWithRichSkuResponsePropertiesOutput) ToServerFarmWithRichSkuResponsePropertiesOutputWithContext(ctx context.Context) ServerFarmWithRichSkuResponsePropertiesOutput {
	return o
}

func (o ServerFarmWithRichSkuResponsePropertiesOutput) ToServerFarmWithRichSkuResponsePropertiesPtrOutput() ServerFarmWithRichSkuResponsePropertiesPtrOutput {
	return o.ToServerFarmWithRichSkuResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o ServerFarmWithRichSkuResponsePropertiesOutput) ToServerFarmWithRichSkuResponsePropertiesPtrOutputWithContext(ctx context.Context) ServerFarmWithRichSkuResponsePropertiesPtrOutput {
	return o.ApplyT(func(v ServerFarmWithRichSkuResponseProperties) *ServerFarmWithRichSkuResponseProperties {
		return &v
	}).(ServerFarmWithRichSkuResponsePropertiesPtrOutput)
}

// App Service Plan administration site
func (o ServerFarmWithRichSkuResponsePropertiesOutput) AdminSiteName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerFarmWithRichSkuResponseProperties) *string { return v.AdminSiteName }).(pulumi.StringPtrOutput)
}

// Geographical location for the App Service Plan
func (o ServerFarmWithRichSkuResponsePropertiesOutput) GeoRegion() pulumi.StringOutput {
	return o.ApplyT(func(v ServerFarmWithRichSkuResponseProperties) string { return v.GeoRegion }).(pulumi.StringOutput)
}

// Specification for the hosting environment (App Service Environment) to use for the App Service Plan
func (o ServerFarmWithRichSkuResponsePropertiesOutput) HostingEnvironmentProfile() HostingEnvironmentProfileResponsePtrOutput {
	return o.ApplyT(func(v ServerFarmWithRichSkuResponseProperties) *HostingEnvironmentProfileResponse {
		return v.HostingEnvironmentProfile
	}).(HostingEnvironmentProfileResponsePtrOutput)
}

// Maximum number of instances that can be assigned to this App Service Plan
func (o ServerFarmWithRichSkuResponsePropertiesOutput) MaximumNumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServerFarmWithRichSkuResponseProperties) *int { return v.MaximumNumberOfWorkers }).(pulumi.IntPtrOutput)
}

// Name for the App Service Plan
func (o ServerFarmWithRichSkuResponsePropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerFarmWithRichSkuResponseProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Number of web apps assigned to this App Service Plan
func (o ServerFarmWithRichSkuResponsePropertiesOutput) NumberOfSites() pulumi.IntOutput {
	return o.ApplyT(func(v ServerFarmWithRichSkuResponseProperties) int { return v.NumberOfSites }).(pulumi.IntOutput)
}

// If True apps assigned to this App Service Plan can be scaled independently
//             If False apps assigned to this App Service Plan will scale to all instances of the plan
func (o ServerFarmWithRichSkuResponsePropertiesOutput) PerSiteScaling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServerFarmWithRichSkuResponseProperties) *bool { return v.PerSiteScaling }).(pulumi.BoolPtrOutput)
}

// Enables creation of a Linux App Service Plan
func (o ServerFarmWithRichSkuResponsePropertiesOutput) Reserved() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServerFarmWithRichSkuResponseProperties) *bool { return v.Reserved }).(pulumi.BoolPtrOutput)
}

// Resource group of the server farm
func (o ServerFarmWithRichSkuResponsePropertiesOutput) ResourceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v ServerFarmWithRichSkuResponseProperties) string { return v.ResourceGroup }).(pulumi.StringOutput)
}

// App Service Plan Status
func (o ServerFarmWithRichSkuResponsePropertiesOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ServerFarmWithRichSkuResponseProperties) string { return v.Status }).(pulumi.StringOutput)
}

// App Service Plan Subscription
func (o ServerFarmWithRichSkuResponsePropertiesOutput) Subscription() pulumi.StringOutput {
	return o.ApplyT(func(v ServerFarmWithRichSkuResponseProperties) string { return v.Subscription }).(pulumi.StringOutput)
}

// Target worker tier assigned to the App Service Plan
func (o ServerFarmWithRichSkuResponsePropertiesOutput) WorkerTierName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerFarmWithRichSkuResponseProperties) *string { return v.WorkerTierName }).(pulumi.StringPtrOutput)
}

type ServerFarmWithRichSkuResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (ServerFarmWithRichSkuResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerFarmWithRichSkuResponseProperties)(nil)).Elem()
}

func (o ServerFarmWithRichSkuResponsePropertiesPtrOutput) ToServerFarmWithRichSkuResponsePropertiesPtrOutput() ServerFarmWithRichSkuResponsePropertiesPtrOutput {
	return o
}

func (o ServerFarmWithRichSkuResponsePropertiesPtrOutput) ToServerFarmWithRichSkuResponsePropertiesPtrOutputWithContext(ctx context.Context) ServerFarmWithRichSkuResponsePropertiesPtrOutput {
	return o
}

func (o ServerFarmWithRichSkuResponsePropertiesPtrOutput) Elem() ServerFarmWithRichSkuResponsePropertiesOutput {
	return o.ApplyT(func(v *ServerFarmWithRichSkuResponseProperties) ServerFarmWithRichSkuResponseProperties { return *v }).(ServerFarmWithRichSkuResponsePropertiesOutput)
}

// App Service Plan administration site
func (o ServerFarmWithRichSkuResponsePropertiesPtrOutput) AdminSiteName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerFarmWithRichSkuResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.AdminSiteName
	}).(pulumi.StringPtrOutput)
}

// Geographical location for the App Service Plan
func (o ServerFarmWithRichSkuResponsePropertiesPtrOutput) GeoRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerFarmWithRichSkuResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.GeoRegion
	}).(pulumi.StringPtrOutput)
}

// Specification for the hosting environment (App Service Environment) to use for the App Service Plan
func (o ServerFarmWithRichSkuResponsePropertiesPtrOutput) HostingEnvironmentProfile() HostingEnvironmentProfileResponsePtrOutput {
	return o.ApplyT(func(v *ServerFarmWithRichSkuResponseProperties) *HostingEnvironmentProfileResponse {
		if v == nil {
			return nil
		}
		return v.HostingEnvironmentProfile
	}).(HostingEnvironmentProfileResponsePtrOutput)
}

// Maximum number of instances that can be assigned to this App Service Plan
func (o ServerFarmWithRichSkuResponsePropertiesPtrOutput) MaximumNumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServerFarmWithRichSkuResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.MaximumNumberOfWorkers
	}).(pulumi.IntPtrOutput)
}

// Name for the App Service Plan
func (o ServerFarmWithRichSkuResponsePropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerFarmWithRichSkuResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Number of web apps assigned to this App Service Plan
func (o ServerFarmWithRichSkuResponsePropertiesPtrOutput) NumberOfSites() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServerFarmWithRichSkuResponseProperties) *int {
		if v == nil {
			return nil
		}
		return &v.NumberOfSites
	}).(pulumi.IntPtrOutput)
}

// If True apps assigned to this App Service Plan can be scaled independently
//             If False apps assigned to this App Service Plan will scale to all instances of the plan
func (o ServerFarmWithRichSkuResponsePropertiesPtrOutput) PerSiteScaling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServerFarmWithRichSkuResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.PerSiteScaling
	}).(pulumi.BoolPtrOutput)
}

// Enables creation of a Linux App Service Plan
func (o ServerFarmWithRichSkuResponsePropertiesPtrOutput) Reserved() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServerFarmWithRichSkuResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Reserved
	}).(pulumi.BoolPtrOutput)
}

// Resource group of the server farm
func (o ServerFarmWithRichSkuResponsePropertiesPtrOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerFarmWithRichSkuResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGroup
	}).(pulumi.StringPtrOutput)
}

// App Service Plan Status
func (o ServerFarmWithRichSkuResponsePropertiesPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerFarmWithRichSkuResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// App Service Plan Subscription
func (o ServerFarmWithRichSkuResponsePropertiesPtrOutput) Subscription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerFarmWithRichSkuResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Subscription
	}).(pulumi.StringPtrOutput)
}

// Target worker tier assigned to the App Service Plan
func (o ServerFarmWithRichSkuResponsePropertiesPtrOutput) WorkerTierName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerFarmWithRichSkuResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.WorkerTierName
	}).(pulumi.StringPtrOutput)
}

// Represents a web app
type SiteType struct {
	// Kind of resource
	Kind *string `pulumi:"kind"`
	// Resource Location
	Location string `pulumi:"location"`
	// Resource Name
	Name       *string                `pulumi:"name"`
	Properties SiteResponseProperties `pulumi:"properties"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type *string `pulumi:"type"`
}

// SiteTypeInput is an input type that accepts SiteTypeArgs and SiteTypeOutput values.
// You can construct a concrete instance of `SiteTypeInput` via:
//
//          SiteTypeArgs{...}
type SiteTypeInput interface {
	pulumi.Input

	ToSiteTypeOutput() SiteTypeOutput
	ToSiteTypeOutputWithContext(context.Context) SiteTypeOutput
}

// Represents a web app
type SiteTypeArgs struct {
	// Kind of resource
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource Name
	Name       pulumi.StringPtrInput       `pulumi:"name"`
	Properties SiteResponsePropertiesInput `pulumi:"properties"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SiteTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteType)(nil)).Elem()
}

func (i SiteTypeArgs) ToSiteTypeOutput() SiteTypeOutput {
	return i.ToSiteTypeOutputWithContext(context.Background())
}

func (i SiteTypeArgs) ToSiteTypeOutputWithContext(ctx context.Context) SiteTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteTypeOutput)
}

// Represents a web app
type SiteTypeOutput struct{ *pulumi.OutputState }

func (SiteTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteType)(nil)).Elem()
}

func (o SiteTypeOutput) ToSiteTypeOutput() SiteTypeOutput {
	return o
}

func (o SiteTypeOutput) ToSiteTypeOutputWithContext(ctx context.Context) SiteTypeOutput {
	return o
}

// Kind of resource
func (o SiteTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location
func (o SiteTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v SiteType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name
func (o SiteTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SiteTypeOutput) Properties() SiteResponsePropertiesOutput {
	return o.ApplyT(func(v SiteType) SiteResponseProperties { return v.Properties }).(SiteResponsePropertiesOutput)
}

// Resource tags
func (o SiteTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v SiteType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o SiteTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Configuration of Azure web site
type SiteConfig struct {
	// Resource Id
	Id *string `pulumi:"id"`
	// Kind of resource
	Kind *string `pulumi:"kind"`
	// Resource Location
	Location string `pulumi:"location"`
	// Resource Name
	Name       *string               `pulumi:"name"`
	Properties *SiteConfigProperties `pulumi:"properties"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type *string `pulumi:"type"`
}

// SiteConfigInput is an input type that accepts SiteConfigArgs and SiteConfigOutput values.
// You can construct a concrete instance of `SiteConfigInput` via:
//
//          SiteConfigArgs{...}
type SiteConfigInput interface {
	pulumi.Input

	ToSiteConfigOutput() SiteConfigOutput
	ToSiteConfigOutputWithContext(context.Context) SiteConfigOutput
}

// Configuration of Azure web site
type SiteConfigArgs struct {
	// Resource Id
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Kind of resource
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource Name
	Name       pulumi.StringPtrInput        `pulumi:"name"`
	Properties SiteConfigPropertiesPtrInput `pulumi:"properties"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SiteConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteConfig)(nil)).Elem()
}

func (i SiteConfigArgs) ToSiteConfigOutput() SiteConfigOutput {
	return i.ToSiteConfigOutputWithContext(context.Background())
}

func (i SiteConfigArgs) ToSiteConfigOutputWithContext(ctx context.Context) SiteConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteConfigOutput)
}

func (i SiteConfigArgs) ToSiteConfigPtrOutput() SiteConfigPtrOutput {
	return i.ToSiteConfigPtrOutputWithContext(context.Background())
}

func (i SiteConfigArgs) ToSiteConfigPtrOutputWithContext(ctx context.Context) SiteConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteConfigOutput).ToSiteConfigPtrOutputWithContext(ctx)
}

// SiteConfigPtrInput is an input type that accepts SiteConfigArgs, SiteConfigPtr and SiteConfigPtrOutput values.
// You can construct a concrete instance of `SiteConfigPtrInput` via:
//
//          SiteConfigArgs{...}
//
//  or:
//
//          nil
type SiteConfigPtrInput interface {
	pulumi.Input

	ToSiteConfigPtrOutput() SiteConfigPtrOutput
	ToSiteConfigPtrOutputWithContext(context.Context) SiteConfigPtrOutput
}

type siteConfigPtrType SiteConfigArgs

func SiteConfigPtr(v *SiteConfigArgs) SiteConfigPtrInput {
	return (*siteConfigPtrType)(v)
}

func (*siteConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteConfig)(nil)).Elem()
}

func (i *siteConfigPtrType) ToSiteConfigPtrOutput() SiteConfigPtrOutput {
	return i.ToSiteConfigPtrOutputWithContext(context.Background())
}

func (i *siteConfigPtrType) ToSiteConfigPtrOutputWithContext(ctx context.Context) SiteConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteConfigPtrOutput)
}

// Configuration of Azure web site
type SiteConfigOutput struct{ *pulumi.OutputState }

func (SiteConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteConfig)(nil)).Elem()
}

func (o SiteConfigOutput) ToSiteConfigOutput() SiteConfigOutput {
	return o
}

func (o SiteConfigOutput) ToSiteConfigOutputWithContext(ctx context.Context) SiteConfigOutput {
	return o
}

func (o SiteConfigOutput) ToSiteConfigPtrOutput() SiteConfigPtrOutput {
	return o.ToSiteConfigPtrOutputWithContext(context.Background())
}

func (o SiteConfigOutput) ToSiteConfigPtrOutputWithContext(ctx context.Context) SiteConfigPtrOutput {
	return o.ApplyT(func(v SiteConfig) *SiteConfig {
		return &v
	}).(SiteConfigPtrOutput)
}

// Resource Id
func (o SiteConfigOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Kind of resource
func (o SiteConfigOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location
func (o SiteConfigOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v SiteConfig) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name
func (o SiteConfigOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SiteConfigOutput) Properties() SiteConfigPropertiesPtrOutput {
	return o.ApplyT(func(v SiteConfig) *SiteConfigProperties { return v.Properties }).(SiteConfigPropertiesPtrOutput)
}

// Resource tags
func (o SiteConfigOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v SiteConfig) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o SiteConfigOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SiteConfigPtrOutput struct{ *pulumi.OutputState }

func (SiteConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteConfig)(nil)).Elem()
}

func (o SiteConfigPtrOutput) ToSiteConfigPtrOutput() SiteConfigPtrOutput {
	return o
}

func (o SiteConfigPtrOutput) ToSiteConfigPtrOutputWithContext(ctx context.Context) SiteConfigPtrOutput {
	return o
}

func (o SiteConfigPtrOutput) Elem() SiteConfigOutput {
	return o.ApplyT(func(v *SiteConfig) SiteConfig { return *v }).(SiteConfigOutput)
}

// Resource Id
func (o SiteConfigPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Kind of resource
func (o SiteConfigPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Resource Location
func (o SiteConfigPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource Name
func (o SiteConfigPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o SiteConfigPtrOutput) Properties() SiteConfigPropertiesPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *SiteConfigProperties {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(SiteConfigPropertiesPtrOutput)
}

// Resource tags
func (o SiteConfigPtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SiteConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type
func (o SiteConfigPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type SiteConfigProperties struct {
	// Always On
	AlwaysOn *bool `pulumi:"alwaysOn"`
	// Information about the formal API definition for the web app.
	ApiDefinition *ApiDefinitionInfo `pulumi:"apiDefinition"`
	// App Command Line to launch
	AppCommandLine *string `pulumi:"appCommandLine"`
	// Application Settings
	AppSettings []NameValuePair `pulumi:"appSettings"`
	// Auto heal enabled
	AutoHealEnabled *bool `pulumi:"autoHealEnabled"`
	// Auto heal rules
	AutoHealRules *AutoHealRules `pulumi:"autoHealRules"`
	// Auto swap slot name
	AutoSwapSlotName *string `pulumi:"autoSwapSlotName"`
	// Connection strings
	ConnectionStrings []ConnStringInfo `pulumi:"connectionStrings"`
	// Cross-Origin Resource Sharing (CORS) settings.
	Cors *CorsSettings `pulumi:"cors"`
	// Default documents
	DefaultDocuments []string `pulumi:"defaultDocuments"`
	// Detailed error logging enabled
	DetailedErrorLoggingEnabled *bool `pulumi:"detailedErrorLoggingEnabled"`
	// Document root
	DocumentRoot *string `pulumi:"documentRoot"`
	// This is work around for polymorphic types
	Experiments *Experiments `pulumi:"experiments"`
	// Handler mappings
	HandlerMappings []HandlerMapping `pulumi:"handlerMappings"`
	// HTTP logging Enabled
	HttpLoggingEnabled *bool `pulumi:"httpLoggingEnabled"`
	// Ip Security restrictions
	IpSecurityRestrictions []IpSecurityRestriction `pulumi:"ipSecurityRestrictions"`
	// Java container
	JavaContainer *string `pulumi:"javaContainer"`
	// Java container version
	JavaContainerVersion *string `pulumi:"javaContainerVersion"`
	// Java version
	JavaVersion *string `pulumi:"javaVersion"`
	// Site limits
	Limits *SiteLimits `pulumi:"limits"`
	// Site load balancing
	LoadBalancing *string `pulumi:"loadBalancing"`
	// Local mysql enabled
	LocalMySqlEnabled *bool `pulumi:"localMySqlEnabled"`
	// HTTP Logs Directory size limit
	LogsDirectorySizeLimit *int `pulumi:"logsDirectorySizeLimit"`
	// Managed pipeline mode
	ManagedPipelineMode *string `pulumi:"managedPipelineMode"`
	// Site Metadata
	Metadata []NameValuePair `pulumi:"metadata"`
	// Net Framework Version
	NetFrameworkVersion *string `pulumi:"netFrameworkVersion"`
	// Version of Node
	NodeVersion *string `pulumi:"nodeVersion"`
	// Number of workers
	NumberOfWorkers *int `pulumi:"numberOfWorkers"`
	// Version of PHP
	PhpVersion *string `pulumi:"phpVersion"`
	// Publishing password
	PublishingPassword *string `pulumi:"publishingPassword"`
	// Publishing user name
	PublishingUsername *string `pulumi:"publishingUsername"`
	// Version of Python
	PythonVersion *string `pulumi:"pythonVersion"`
	// Remote Debugging Enabled
	RemoteDebuggingEnabled *bool `pulumi:"remoteDebuggingEnabled"`
	// Remote Debugging Version
	RemoteDebuggingVersion *string `pulumi:"remoteDebuggingVersion"`
	// Enable request tracing
	RequestTracingEnabled *bool `pulumi:"requestTracingEnabled"`
	// Request tracing expiration time
	RequestTracingExpirationTime *string `pulumi:"requestTracingExpirationTime"`
	// SCM type
	ScmType *string `pulumi:"scmType"`
	// Tracing options
	TracingOptions *string `pulumi:"tracingOptions"`
	// Use 32 bit worker process
	Use32BitWorkerProcess *bool `pulumi:"use32BitWorkerProcess"`
	// Virtual applications
	VirtualApplications []VirtualApplication `pulumi:"virtualApplications"`
	// Vnet name
	VnetName *string `pulumi:"vnetName"`
	// Web socket enabled.
	WebSocketsEnabled *bool `pulumi:"webSocketsEnabled"`
}

// SiteConfigPropertiesInput is an input type that accepts SiteConfigPropertiesArgs and SiteConfigPropertiesOutput values.
// You can construct a concrete instance of `SiteConfigPropertiesInput` via:
//
//          SiteConfigPropertiesArgs{...}
type SiteConfigPropertiesInput interface {
	pulumi.Input

	ToSiteConfigPropertiesOutput() SiteConfigPropertiesOutput
	ToSiteConfigPropertiesOutputWithContext(context.Context) SiteConfigPropertiesOutput
}

type SiteConfigPropertiesArgs struct {
	// Always On
	AlwaysOn pulumi.BoolPtrInput `pulumi:"alwaysOn"`
	// Information about the formal API definition for the web app.
	ApiDefinition ApiDefinitionInfoPtrInput `pulumi:"apiDefinition"`
	// App Command Line to launch
	AppCommandLine pulumi.StringPtrInput `pulumi:"appCommandLine"`
	// Application Settings
	AppSettings NameValuePairArrayInput `pulumi:"appSettings"`
	// Auto heal enabled
	AutoHealEnabled pulumi.BoolPtrInput `pulumi:"autoHealEnabled"`
	// Auto heal rules
	AutoHealRules AutoHealRulesPtrInput `pulumi:"autoHealRules"`
	// Auto swap slot name
	AutoSwapSlotName pulumi.StringPtrInput `pulumi:"autoSwapSlotName"`
	// Connection strings
	ConnectionStrings ConnStringInfoArrayInput `pulumi:"connectionStrings"`
	// Cross-Origin Resource Sharing (CORS) settings.
	Cors CorsSettingsPtrInput `pulumi:"cors"`
	// Default documents
	DefaultDocuments pulumi.StringArrayInput `pulumi:"defaultDocuments"`
	// Detailed error logging enabled
	DetailedErrorLoggingEnabled pulumi.BoolPtrInput `pulumi:"detailedErrorLoggingEnabled"`
	// Document root
	DocumentRoot pulumi.StringPtrInput `pulumi:"documentRoot"`
	// This is work around for polymorphic types
	Experiments ExperimentsPtrInput `pulumi:"experiments"`
	// Handler mappings
	HandlerMappings HandlerMappingArrayInput `pulumi:"handlerMappings"`
	// HTTP logging Enabled
	HttpLoggingEnabled pulumi.BoolPtrInput `pulumi:"httpLoggingEnabled"`
	// Ip Security restrictions
	IpSecurityRestrictions IpSecurityRestrictionArrayInput `pulumi:"ipSecurityRestrictions"`
	// Java container
	JavaContainer pulumi.StringPtrInput `pulumi:"javaContainer"`
	// Java container version
	JavaContainerVersion pulumi.StringPtrInput `pulumi:"javaContainerVersion"`
	// Java version
	JavaVersion pulumi.StringPtrInput `pulumi:"javaVersion"`
	// Site limits
	Limits SiteLimitsPtrInput `pulumi:"limits"`
	// Site load balancing
	LoadBalancing pulumi.StringPtrInput `pulumi:"loadBalancing"`
	// Local mysql enabled
	LocalMySqlEnabled pulumi.BoolPtrInput `pulumi:"localMySqlEnabled"`
	// HTTP Logs Directory size limit
	LogsDirectorySizeLimit pulumi.IntPtrInput `pulumi:"logsDirectorySizeLimit"`
	// Managed pipeline mode
	ManagedPipelineMode pulumi.StringPtrInput `pulumi:"managedPipelineMode"`
	// Site Metadata
	Metadata NameValuePairArrayInput `pulumi:"metadata"`
	// Net Framework Version
	NetFrameworkVersion pulumi.StringPtrInput `pulumi:"netFrameworkVersion"`
	// Version of Node
	NodeVersion pulumi.StringPtrInput `pulumi:"nodeVersion"`
	// Number of workers
	NumberOfWorkers pulumi.IntPtrInput `pulumi:"numberOfWorkers"`
	// Version of PHP
	PhpVersion pulumi.StringPtrInput `pulumi:"phpVersion"`
	// Publishing password
	PublishingPassword pulumi.StringPtrInput `pulumi:"publishingPassword"`
	// Publishing user name
	PublishingUsername pulumi.StringPtrInput `pulumi:"publishingUsername"`
	// Version of Python
	PythonVersion pulumi.StringPtrInput `pulumi:"pythonVersion"`
	// Remote Debugging Enabled
	RemoteDebuggingEnabled pulumi.BoolPtrInput `pulumi:"remoteDebuggingEnabled"`
	// Remote Debugging Version
	RemoteDebuggingVersion pulumi.StringPtrInput `pulumi:"remoteDebuggingVersion"`
	// Enable request tracing
	RequestTracingEnabled pulumi.BoolPtrInput `pulumi:"requestTracingEnabled"`
	// Request tracing expiration time
	RequestTracingExpirationTime pulumi.StringPtrInput `pulumi:"requestTracingExpirationTime"`
	// SCM type
	ScmType pulumi.StringPtrInput `pulumi:"scmType"`
	// Tracing options
	TracingOptions pulumi.StringPtrInput `pulumi:"tracingOptions"`
	// Use 32 bit worker process
	Use32BitWorkerProcess pulumi.BoolPtrInput `pulumi:"use32BitWorkerProcess"`
	// Virtual applications
	VirtualApplications VirtualApplicationArrayInput `pulumi:"virtualApplications"`
	// Vnet name
	VnetName pulumi.StringPtrInput `pulumi:"vnetName"`
	// Web socket enabled.
	WebSocketsEnabled pulumi.BoolPtrInput `pulumi:"webSocketsEnabled"`
}

func (SiteConfigPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteConfigProperties)(nil)).Elem()
}

func (i SiteConfigPropertiesArgs) ToSiteConfigPropertiesOutput() SiteConfigPropertiesOutput {
	return i.ToSiteConfigPropertiesOutputWithContext(context.Background())
}

func (i SiteConfigPropertiesArgs) ToSiteConfigPropertiesOutputWithContext(ctx context.Context) SiteConfigPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteConfigPropertiesOutput)
}

func (i SiteConfigPropertiesArgs) ToSiteConfigPropertiesPtrOutput() SiteConfigPropertiesPtrOutput {
	return i.ToSiteConfigPropertiesPtrOutputWithContext(context.Background())
}

func (i SiteConfigPropertiesArgs) ToSiteConfigPropertiesPtrOutputWithContext(ctx context.Context) SiteConfigPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteConfigPropertiesOutput).ToSiteConfigPropertiesPtrOutputWithContext(ctx)
}

// SiteConfigPropertiesPtrInput is an input type that accepts SiteConfigPropertiesArgs, SiteConfigPropertiesPtr and SiteConfigPropertiesPtrOutput values.
// You can construct a concrete instance of `SiteConfigPropertiesPtrInput` via:
//
//          SiteConfigPropertiesArgs{...}
//
//  or:
//
//          nil
type SiteConfigPropertiesPtrInput interface {
	pulumi.Input

	ToSiteConfigPropertiesPtrOutput() SiteConfigPropertiesPtrOutput
	ToSiteConfigPropertiesPtrOutputWithContext(context.Context) SiteConfigPropertiesPtrOutput
}

type siteConfigPropertiesPtrType SiteConfigPropertiesArgs

func SiteConfigPropertiesPtr(v *SiteConfigPropertiesArgs) SiteConfigPropertiesPtrInput {
	return (*siteConfigPropertiesPtrType)(v)
}

func (*siteConfigPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteConfigProperties)(nil)).Elem()
}

func (i *siteConfigPropertiesPtrType) ToSiteConfigPropertiesPtrOutput() SiteConfigPropertiesPtrOutput {
	return i.ToSiteConfigPropertiesPtrOutputWithContext(context.Background())
}

func (i *siteConfigPropertiesPtrType) ToSiteConfigPropertiesPtrOutputWithContext(ctx context.Context) SiteConfigPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteConfigPropertiesPtrOutput)
}

type SiteConfigPropertiesOutput struct{ *pulumi.OutputState }

func (SiteConfigPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteConfigProperties)(nil)).Elem()
}

func (o SiteConfigPropertiesOutput) ToSiteConfigPropertiesOutput() SiteConfigPropertiesOutput {
	return o
}

func (o SiteConfigPropertiesOutput) ToSiteConfigPropertiesOutputWithContext(ctx context.Context) SiteConfigPropertiesOutput {
	return o
}

func (o SiteConfigPropertiesOutput) ToSiteConfigPropertiesPtrOutput() SiteConfigPropertiesPtrOutput {
	return o.ToSiteConfigPropertiesPtrOutputWithContext(context.Background())
}

func (o SiteConfigPropertiesOutput) ToSiteConfigPropertiesPtrOutputWithContext(ctx context.Context) SiteConfigPropertiesPtrOutput {
	return o.ApplyT(func(v SiteConfigProperties) *SiteConfigProperties {
		return &v
	}).(SiteConfigPropertiesPtrOutput)
}

// Always On
func (o SiteConfigPropertiesOutput) AlwaysOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigProperties) *bool { return v.AlwaysOn }).(pulumi.BoolPtrOutput)
}

// Information about the formal API definition for the web app.
func (o SiteConfigPropertiesOutput) ApiDefinition() ApiDefinitionInfoPtrOutput {
	return o.ApplyT(func(v SiteConfigProperties) *ApiDefinitionInfo { return v.ApiDefinition }).(ApiDefinitionInfoPtrOutput)
}

// App Command Line to launch
func (o SiteConfigPropertiesOutput) AppCommandLine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigProperties) *string { return v.AppCommandLine }).(pulumi.StringPtrOutput)
}

// Application Settings
func (o SiteConfigPropertiesOutput) AppSettings() NameValuePairArrayOutput {
	return o.ApplyT(func(v SiteConfigProperties) []NameValuePair { return v.AppSettings }).(NameValuePairArrayOutput)
}

// Auto heal enabled
func (o SiteConfigPropertiesOutput) AutoHealEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigProperties) *bool { return v.AutoHealEnabled }).(pulumi.BoolPtrOutput)
}

// Auto heal rules
func (o SiteConfigPropertiesOutput) AutoHealRules() AutoHealRulesPtrOutput {
	return o.ApplyT(func(v SiteConfigProperties) *AutoHealRules { return v.AutoHealRules }).(AutoHealRulesPtrOutput)
}

// Auto swap slot name
func (o SiteConfigPropertiesOutput) AutoSwapSlotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigProperties) *string { return v.AutoSwapSlotName }).(pulumi.StringPtrOutput)
}

// Connection strings
func (o SiteConfigPropertiesOutput) ConnectionStrings() ConnStringInfoArrayOutput {
	return o.ApplyT(func(v SiteConfigProperties) []ConnStringInfo { return v.ConnectionStrings }).(ConnStringInfoArrayOutput)
}

// Cross-Origin Resource Sharing (CORS) settings.
func (o SiteConfigPropertiesOutput) Cors() CorsSettingsPtrOutput {
	return o.ApplyT(func(v SiteConfigProperties) *CorsSettings { return v.Cors }).(CorsSettingsPtrOutput)
}

// Default documents
func (o SiteConfigPropertiesOutput) DefaultDocuments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SiteConfigProperties) []string { return v.DefaultDocuments }).(pulumi.StringArrayOutput)
}

// Detailed error logging enabled
func (o SiteConfigPropertiesOutput) DetailedErrorLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigProperties) *bool { return v.DetailedErrorLoggingEnabled }).(pulumi.BoolPtrOutput)
}

// Document root
func (o SiteConfigPropertiesOutput) DocumentRoot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigProperties) *string { return v.DocumentRoot }).(pulumi.StringPtrOutput)
}

// This is work around for polymorphic types
func (o SiteConfigPropertiesOutput) Experiments() ExperimentsPtrOutput {
	return o.ApplyT(func(v SiteConfigProperties) *Experiments { return v.Experiments }).(ExperimentsPtrOutput)
}

// Handler mappings
func (o SiteConfigPropertiesOutput) HandlerMappings() HandlerMappingArrayOutput {
	return o.ApplyT(func(v SiteConfigProperties) []HandlerMapping { return v.HandlerMappings }).(HandlerMappingArrayOutput)
}

// HTTP logging Enabled
func (o SiteConfigPropertiesOutput) HttpLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigProperties) *bool { return v.HttpLoggingEnabled }).(pulumi.BoolPtrOutput)
}

// Ip Security restrictions
func (o SiteConfigPropertiesOutput) IpSecurityRestrictions() IpSecurityRestrictionArrayOutput {
	return o.ApplyT(func(v SiteConfigProperties) []IpSecurityRestriction { return v.IpSecurityRestrictions }).(IpSecurityRestrictionArrayOutput)
}

// Java container
func (o SiteConfigPropertiesOutput) JavaContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigProperties) *string { return v.JavaContainer }).(pulumi.StringPtrOutput)
}

// Java container version
func (o SiteConfigPropertiesOutput) JavaContainerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigProperties) *string { return v.JavaContainerVersion }).(pulumi.StringPtrOutput)
}

// Java version
func (o SiteConfigPropertiesOutput) JavaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigProperties) *string { return v.JavaVersion }).(pulumi.StringPtrOutput)
}

// Site limits
func (o SiteConfigPropertiesOutput) Limits() SiteLimitsPtrOutput {
	return o.ApplyT(func(v SiteConfigProperties) *SiteLimits { return v.Limits }).(SiteLimitsPtrOutput)
}

// Site load balancing
func (o SiteConfigPropertiesOutput) LoadBalancing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigProperties) *string { return v.LoadBalancing }).(pulumi.StringPtrOutput)
}

// Local mysql enabled
func (o SiteConfigPropertiesOutput) LocalMySqlEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigProperties) *bool { return v.LocalMySqlEnabled }).(pulumi.BoolPtrOutput)
}

// HTTP Logs Directory size limit
func (o SiteConfigPropertiesOutput) LogsDirectorySizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfigProperties) *int { return v.LogsDirectorySizeLimit }).(pulumi.IntPtrOutput)
}

// Managed pipeline mode
func (o SiteConfigPropertiesOutput) ManagedPipelineMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigProperties) *string { return v.ManagedPipelineMode }).(pulumi.StringPtrOutput)
}

// Site Metadata
func (o SiteConfigPropertiesOutput) Metadata() NameValuePairArrayOutput {
	return o.ApplyT(func(v SiteConfigProperties) []NameValuePair { return v.Metadata }).(NameValuePairArrayOutput)
}

// Net Framework Version
func (o SiteConfigPropertiesOutput) NetFrameworkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigProperties) *string { return v.NetFrameworkVersion }).(pulumi.StringPtrOutput)
}

// Version of Node
func (o SiteConfigPropertiesOutput) NodeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigProperties) *string { return v.NodeVersion }).(pulumi.StringPtrOutput)
}

// Number of workers
func (o SiteConfigPropertiesOutput) NumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfigProperties) *int { return v.NumberOfWorkers }).(pulumi.IntPtrOutput)
}

// Version of PHP
func (o SiteConfigPropertiesOutput) PhpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigProperties) *string { return v.PhpVersion }).(pulumi.StringPtrOutput)
}

// Publishing password
func (o SiteConfigPropertiesOutput) PublishingPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigProperties) *string { return v.PublishingPassword }).(pulumi.StringPtrOutput)
}

// Publishing user name
func (o SiteConfigPropertiesOutput) PublishingUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigProperties) *string { return v.PublishingUsername }).(pulumi.StringPtrOutput)
}

// Version of Python
func (o SiteConfigPropertiesOutput) PythonVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigProperties) *string { return v.PythonVersion }).(pulumi.StringPtrOutput)
}

// Remote Debugging Enabled
func (o SiteConfigPropertiesOutput) RemoteDebuggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigProperties) *bool { return v.RemoteDebuggingEnabled }).(pulumi.BoolPtrOutput)
}

// Remote Debugging Version
func (o SiteConfigPropertiesOutput) RemoteDebuggingVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigProperties) *string { return v.RemoteDebuggingVersion }).(pulumi.StringPtrOutput)
}

// Enable request tracing
func (o SiteConfigPropertiesOutput) RequestTracingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigProperties) *bool { return v.RequestTracingEnabled }).(pulumi.BoolPtrOutput)
}

// Request tracing expiration time
func (o SiteConfigPropertiesOutput) RequestTracingExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigProperties) *string { return v.RequestTracingExpirationTime }).(pulumi.StringPtrOutput)
}

// SCM type
func (o SiteConfigPropertiesOutput) ScmType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigProperties) *string { return v.ScmType }).(pulumi.StringPtrOutput)
}

// Tracing options
func (o SiteConfigPropertiesOutput) TracingOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigProperties) *string { return v.TracingOptions }).(pulumi.StringPtrOutput)
}

// Use 32 bit worker process
func (o SiteConfigPropertiesOutput) Use32BitWorkerProcess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigProperties) *bool { return v.Use32BitWorkerProcess }).(pulumi.BoolPtrOutput)
}

// Virtual applications
func (o SiteConfigPropertiesOutput) VirtualApplications() VirtualApplicationArrayOutput {
	return o.ApplyT(func(v SiteConfigProperties) []VirtualApplication { return v.VirtualApplications }).(VirtualApplicationArrayOutput)
}

// Vnet name
func (o SiteConfigPropertiesOutput) VnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigProperties) *string { return v.VnetName }).(pulumi.StringPtrOutput)
}

// Web socket enabled.
func (o SiteConfigPropertiesOutput) WebSocketsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigProperties) *bool { return v.WebSocketsEnabled }).(pulumi.BoolPtrOutput)
}

type SiteConfigPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SiteConfigPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteConfigProperties)(nil)).Elem()
}

func (o SiteConfigPropertiesPtrOutput) ToSiteConfigPropertiesPtrOutput() SiteConfigPropertiesPtrOutput {
	return o
}

func (o SiteConfigPropertiesPtrOutput) ToSiteConfigPropertiesPtrOutputWithContext(ctx context.Context) SiteConfigPropertiesPtrOutput {
	return o
}

func (o SiteConfigPropertiesPtrOutput) Elem() SiteConfigPropertiesOutput {
	return o.ApplyT(func(v *SiteConfigProperties) SiteConfigProperties { return *v }).(SiteConfigPropertiesOutput)
}

// Always On
func (o SiteConfigPropertiesPtrOutput) AlwaysOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigProperties) *bool {
		if v == nil {
			return nil
		}
		return v.AlwaysOn
	}).(pulumi.BoolPtrOutput)
}

// Information about the formal API definition for the web app.
func (o SiteConfigPropertiesPtrOutput) ApiDefinition() ApiDefinitionInfoPtrOutput {
	return o.ApplyT(func(v *SiteConfigProperties) *ApiDefinitionInfo {
		if v == nil {
			return nil
		}
		return v.ApiDefinition
	}).(ApiDefinitionInfoPtrOutput)
}

// App Command Line to launch
func (o SiteConfigPropertiesPtrOutput) AppCommandLine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigProperties) *string {
		if v == nil {
			return nil
		}
		return v.AppCommandLine
	}).(pulumi.StringPtrOutput)
}

// Application Settings
func (o SiteConfigPropertiesPtrOutput) AppSettings() NameValuePairArrayOutput {
	return o.ApplyT(func(v *SiteConfigProperties) []NameValuePair {
		if v == nil {
			return nil
		}
		return v.AppSettings
	}).(NameValuePairArrayOutput)
}

// Auto heal enabled
func (o SiteConfigPropertiesPtrOutput) AutoHealEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigProperties) *bool {
		if v == nil {
			return nil
		}
		return v.AutoHealEnabled
	}).(pulumi.BoolPtrOutput)
}

// Auto heal rules
func (o SiteConfigPropertiesPtrOutput) AutoHealRules() AutoHealRulesPtrOutput {
	return o.ApplyT(func(v *SiteConfigProperties) *AutoHealRules {
		if v == nil {
			return nil
		}
		return v.AutoHealRules
	}).(AutoHealRulesPtrOutput)
}

// Auto swap slot name
func (o SiteConfigPropertiesPtrOutput) AutoSwapSlotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigProperties) *string {
		if v == nil {
			return nil
		}
		return v.AutoSwapSlotName
	}).(pulumi.StringPtrOutput)
}

// Connection strings
func (o SiteConfigPropertiesPtrOutput) ConnectionStrings() ConnStringInfoArrayOutput {
	return o.ApplyT(func(v *SiteConfigProperties) []ConnStringInfo {
		if v == nil {
			return nil
		}
		return v.ConnectionStrings
	}).(ConnStringInfoArrayOutput)
}

// Cross-Origin Resource Sharing (CORS) settings.
func (o SiteConfigPropertiesPtrOutput) Cors() CorsSettingsPtrOutput {
	return o.ApplyT(func(v *SiteConfigProperties) *CorsSettings {
		if v == nil {
			return nil
		}
		return v.Cors
	}).(CorsSettingsPtrOutput)
}

// Default documents
func (o SiteConfigPropertiesPtrOutput) DefaultDocuments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SiteConfigProperties) []string {
		if v == nil {
			return nil
		}
		return v.DefaultDocuments
	}).(pulumi.StringArrayOutput)
}

// Detailed error logging enabled
func (o SiteConfigPropertiesPtrOutput) DetailedErrorLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigProperties) *bool {
		if v == nil {
			return nil
		}
		return v.DetailedErrorLoggingEnabled
	}).(pulumi.BoolPtrOutput)
}

// Document root
func (o SiteConfigPropertiesPtrOutput) DocumentRoot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigProperties) *string {
		if v == nil {
			return nil
		}
		return v.DocumentRoot
	}).(pulumi.StringPtrOutput)
}

// This is work around for polymorphic types
func (o SiteConfigPropertiesPtrOutput) Experiments() ExperimentsPtrOutput {
	return o.ApplyT(func(v *SiteConfigProperties) *Experiments {
		if v == nil {
			return nil
		}
		return v.Experiments
	}).(ExperimentsPtrOutput)
}

// Handler mappings
func (o SiteConfigPropertiesPtrOutput) HandlerMappings() HandlerMappingArrayOutput {
	return o.ApplyT(func(v *SiteConfigProperties) []HandlerMapping {
		if v == nil {
			return nil
		}
		return v.HandlerMappings
	}).(HandlerMappingArrayOutput)
}

// HTTP logging Enabled
func (o SiteConfigPropertiesPtrOutput) HttpLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigProperties) *bool {
		if v == nil {
			return nil
		}
		return v.HttpLoggingEnabled
	}).(pulumi.BoolPtrOutput)
}

// Ip Security restrictions
func (o SiteConfigPropertiesPtrOutput) IpSecurityRestrictions() IpSecurityRestrictionArrayOutput {
	return o.ApplyT(func(v *SiteConfigProperties) []IpSecurityRestriction {
		if v == nil {
			return nil
		}
		return v.IpSecurityRestrictions
	}).(IpSecurityRestrictionArrayOutput)
}

// Java container
func (o SiteConfigPropertiesPtrOutput) JavaContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigProperties) *string {
		if v == nil {
			return nil
		}
		return v.JavaContainer
	}).(pulumi.StringPtrOutput)
}

// Java container version
func (o SiteConfigPropertiesPtrOutput) JavaContainerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigProperties) *string {
		if v == nil {
			return nil
		}
		return v.JavaContainerVersion
	}).(pulumi.StringPtrOutput)
}

// Java version
func (o SiteConfigPropertiesPtrOutput) JavaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigProperties) *string {
		if v == nil {
			return nil
		}
		return v.JavaVersion
	}).(pulumi.StringPtrOutput)
}

// Site limits
func (o SiteConfigPropertiesPtrOutput) Limits() SiteLimitsPtrOutput {
	return o.ApplyT(func(v *SiteConfigProperties) *SiteLimits {
		if v == nil {
			return nil
		}
		return v.Limits
	}).(SiteLimitsPtrOutput)
}

// Site load balancing
func (o SiteConfigPropertiesPtrOutput) LoadBalancing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigProperties) *string {
		if v == nil {
			return nil
		}
		return v.LoadBalancing
	}).(pulumi.StringPtrOutput)
}

// Local mysql enabled
func (o SiteConfigPropertiesPtrOutput) LocalMySqlEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigProperties) *bool {
		if v == nil {
			return nil
		}
		return v.LocalMySqlEnabled
	}).(pulumi.BoolPtrOutput)
}

// HTTP Logs Directory size limit
func (o SiteConfigPropertiesPtrOutput) LogsDirectorySizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfigProperties) *int {
		if v == nil {
			return nil
		}
		return v.LogsDirectorySizeLimit
	}).(pulumi.IntPtrOutput)
}

// Managed pipeline mode
func (o SiteConfigPropertiesPtrOutput) ManagedPipelineMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigProperties) *string {
		if v == nil {
			return nil
		}
		return v.ManagedPipelineMode
	}).(pulumi.StringPtrOutput)
}

// Site Metadata
func (o SiteConfigPropertiesPtrOutput) Metadata() NameValuePairArrayOutput {
	return o.ApplyT(func(v *SiteConfigProperties) []NameValuePair {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(NameValuePairArrayOutput)
}

// Net Framework Version
func (o SiteConfigPropertiesPtrOutput) NetFrameworkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigProperties) *string {
		if v == nil {
			return nil
		}
		return v.NetFrameworkVersion
	}).(pulumi.StringPtrOutput)
}

// Version of Node
func (o SiteConfigPropertiesPtrOutput) NodeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigProperties) *string {
		if v == nil {
			return nil
		}
		return v.NodeVersion
	}).(pulumi.StringPtrOutput)
}

// Number of workers
func (o SiteConfigPropertiesPtrOutput) NumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfigProperties) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfWorkers
	}).(pulumi.IntPtrOutput)
}

// Version of PHP
func (o SiteConfigPropertiesPtrOutput) PhpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigProperties) *string {
		if v == nil {
			return nil
		}
		return v.PhpVersion
	}).(pulumi.StringPtrOutput)
}

// Publishing password
func (o SiteConfigPropertiesPtrOutput) PublishingPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublishingPassword
	}).(pulumi.StringPtrOutput)
}

// Publishing user name
func (o SiteConfigPropertiesPtrOutput) PublishingUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublishingUsername
	}).(pulumi.StringPtrOutput)
}

// Version of Python
func (o SiteConfigPropertiesPtrOutput) PythonVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigProperties) *string {
		if v == nil {
			return nil
		}
		return v.PythonVersion
	}).(pulumi.StringPtrOutput)
}

// Remote Debugging Enabled
func (o SiteConfigPropertiesPtrOutput) RemoteDebuggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigProperties) *bool {
		if v == nil {
			return nil
		}
		return v.RemoteDebuggingEnabled
	}).(pulumi.BoolPtrOutput)
}

// Remote Debugging Version
func (o SiteConfigPropertiesPtrOutput) RemoteDebuggingVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigProperties) *string {
		if v == nil {
			return nil
		}
		return v.RemoteDebuggingVersion
	}).(pulumi.StringPtrOutput)
}

// Enable request tracing
func (o SiteConfigPropertiesPtrOutput) RequestTracingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigProperties) *bool {
		if v == nil {
			return nil
		}
		return v.RequestTracingEnabled
	}).(pulumi.BoolPtrOutput)
}

// Request tracing expiration time
func (o SiteConfigPropertiesPtrOutput) RequestTracingExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigProperties) *string {
		if v == nil {
			return nil
		}
		return v.RequestTracingExpirationTime
	}).(pulumi.StringPtrOutput)
}

// SCM type
func (o SiteConfigPropertiesPtrOutput) ScmType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigProperties) *string {
		if v == nil {
			return nil
		}
		return v.ScmType
	}).(pulumi.StringPtrOutput)
}

// Tracing options
func (o SiteConfigPropertiesPtrOutput) TracingOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigProperties) *string {
		if v == nil {
			return nil
		}
		return v.TracingOptions
	}).(pulumi.StringPtrOutput)
}

// Use 32 bit worker process
func (o SiteConfigPropertiesPtrOutput) Use32BitWorkerProcess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Use32BitWorkerProcess
	}).(pulumi.BoolPtrOutput)
}

// Virtual applications
func (o SiteConfigPropertiesPtrOutput) VirtualApplications() VirtualApplicationArrayOutput {
	return o.ApplyT(func(v *SiteConfigProperties) []VirtualApplication {
		if v == nil {
			return nil
		}
		return v.VirtualApplications
	}).(VirtualApplicationArrayOutput)
}

// Vnet name
func (o SiteConfigPropertiesPtrOutput) VnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigProperties) *string {
		if v == nil {
			return nil
		}
		return v.VnetName
	}).(pulumi.StringPtrOutput)
}

// Web socket enabled.
func (o SiteConfigPropertiesPtrOutput) WebSocketsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigProperties) *bool {
		if v == nil {
			return nil
		}
		return v.WebSocketsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Configuration of Azure web site
type SiteConfigResponse struct {
	// Resource Id
	Id *string `pulumi:"id"`
	// Kind of resource
	Kind *string `pulumi:"kind"`
	// Resource Location
	Location string `pulumi:"location"`
	// Resource Name
	Name       *string                       `pulumi:"name"`
	Properties *SiteConfigResponseProperties `pulumi:"properties"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type *string `pulumi:"type"`
}

// SiteConfigResponseInput is an input type that accepts SiteConfigResponseArgs and SiteConfigResponseOutput values.
// You can construct a concrete instance of `SiteConfigResponseInput` via:
//
//          SiteConfigResponseArgs{...}
type SiteConfigResponseInput interface {
	pulumi.Input

	ToSiteConfigResponseOutput() SiteConfigResponseOutput
	ToSiteConfigResponseOutputWithContext(context.Context) SiteConfigResponseOutput
}

// Configuration of Azure web site
type SiteConfigResponseArgs struct {
	// Resource Id
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Kind of resource
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource Name
	Name       pulumi.StringPtrInput                `pulumi:"name"`
	Properties SiteConfigResponsePropertiesPtrInput `pulumi:"properties"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SiteConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteConfigResponse)(nil)).Elem()
}

func (i SiteConfigResponseArgs) ToSiteConfigResponseOutput() SiteConfigResponseOutput {
	return i.ToSiteConfigResponseOutputWithContext(context.Background())
}

func (i SiteConfigResponseArgs) ToSiteConfigResponseOutputWithContext(ctx context.Context) SiteConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteConfigResponseOutput)
}

func (i SiteConfigResponseArgs) ToSiteConfigResponsePtrOutput() SiteConfigResponsePtrOutput {
	return i.ToSiteConfigResponsePtrOutputWithContext(context.Background())
}

func (i SiteConfigResponseArgs) ToSiteConfigResponsePtrOutputWithContext(ctx context.Context) SiteConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteConfigResponseOutput).ToSiteConfigResponsePtrOutputWithContext(ctx)
}

// SiteConfigResponsePtrInput is an input type that accepts SiteConfigResponseArgs, SiteConfigResponsePtr and SiteConfigResponsePtrOutput values.
// You can construct a concrete instance of `SiteConfigResponsePtrInput` via:
//
//          SiteConfigResponseArgs{...}
//
//  or:
//
//          nil
type SiteConfigResponsePtrInput interface {
	pulumi.Input

	ToSiteConfigResponsePtrOutput() SiteConfigResponsePtrOutput
	ToSiteConfigResponsePtrOutputWithContext(context.Context) SiteConfigResponsePtrOutput
}

type siteConfigResponsePtrType SiteConfigResponseArgs

func SiteConfigResponsePtr(v *SiteConfigResponseArgs) SiteConfigResponsePtrInput {
	return (*siteConfigResponsePtrType)(v)
}

func (*siteConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteConfigResponse)(nil)).Elem()
}

func (i *siteConfigResponsePtrType) ToSiteConfigResponsePtrOutput() SiteConfigResponsePtrOutput {
	return i.ToSiteConfigResponsePtrOutputWithContext(context.Background())
}

func (i *siteConfigResponsePtrType) ToSiteConfigResponsePtrOutputWithContext(ctx context.Context) SiteConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteConfigResponsePtrOutput)
}

// Configuration of Azure web site
type SiteConfigResponseOutput struct{ *pulumi.OutputState }

func (SiteConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteConfigResponse)(nil)).Elem()
}

func (o SiteConfigResponseOutput) ToSiteConfigResponseOutput() SiteConfigResponseOutput {
	return o
}

func (o SiteConfigResponseOutput) ToSiteConfigResponseOutputWithContext(ctx context.Context) SiteConfigResponseOutput {
	return o
}

func (o SiteConfigResponseOutput) ToSiteConfigResponsePtrOutput() SiteConfigResponsePtrOutput {
	return o.ToSiteConfigResponsePtrOutputWithContext(context.Background())
}

func (o SiteConfigResponseOutput) ToSiteConfigResponsePtrOutputWithContext(ctx context.Context) SiteConfigResponsePtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *SiteConfigResponse {
		return &v
	}).(SiteConfigResponsePtrOutput)
}

// Resource Id
func (o SiteConfigResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Kind of resource
func (o SiteConfigResponseOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location
func (o SiteConfigResponseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v SiteConfigResponse) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name
func (o SiteConfigResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SiteConfigResponseOutput) Properties() SiteConfigResponsePropertiesPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *SiteConfigResponseProperties { return v.Properties }).(SiteConfigResponsePropertiesPtrOutput)
}

// Resource tags
func (o SiteConfigResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v SiteConfigResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o SiteConfigResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SiteConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (SiteConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteConfigResponse)(nil)).Elem()
}

func (o SiteConfigResponsePtrOutput) ToSiteConfigResponsePtrOutput() SiteConfigResponsePtrOutput {
	return o
}

func (o SiteConfigResponsePtrOutput) ToSiteConfigResponsePtrOutputWithContext(ctx context.Context) SiteConfigResponsePtrOutput {
	return o
}

func (o SiteConfigResponsePtrOutput) Elem() SiteConfigResponseOutput {
	return o.ApplyT(func(v *SiteConfigResponse) SiteConfigResponse { return *v }).(SiteConfigResponseOutput)
}

// Resource Id
func (o SiteConfigResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Kind of resource
func (o SiteConfigResponsePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Resource Location
func (o SiteConfigResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource Name
func (o SiteConfigResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o SiteConfigResponsePtrOutput) Properties() SiteConfigResponsePropertiesPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *SiteConfigResponseProperties {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(SiteConfigResponsePropertiesPtrOutput)
}

// Resource tags
func (o SiteConfigResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SiteConfigResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type
func (o SiteConfigResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type SiteConfigResponseProperties struct {
	// Always On
	AlwaysOn *bool `pulumi:"alwaysOn"`
	// Information about the formal API definition for the web app.
	ApiDefinition *ApiDefinitionInfoResponse `pulumi:"apiDefinition"`
	// App Command Line to launch
	AppCommandLine *string `pulumi:"appCommandLine"`
	// Application Settings
	AppSettings []NameValuePairResponse `pulumi:"appSettings"`
	// Auto heal enabled
	AutoHealEnabled *bool `pulumi:"autoHealEnabled"`
	// Auto heal rules
	AutoHealRules *AutoHealRulesResponse `pulumi:"autoHealRules"`
	// Auto swap slot name
	AutoSwapSlotName *string `pulumi:"autoSwapSlotName"`
	// Connection strings
	ConnectionStrings []ConnStringInfoResponse `pulumi:"connectionStrings"`
	// Cross-Origin Resource Sharing (CORS) settings.
	Cors *CorsSettingsResponse `pulumi:"cors"`
	// Default documents
	DefaultDocuments []string `pulumi:"defaultDocuments"`
	// Detailed error logging enabled
	DetailedErrorLoggingEnabled *bool `pulumi:"detailedErrorLoggingEnabled"`
	// Document root
	DocumentRoot *string `pulumi:"documentRoot"`
	// This is work around for polymorphic types
	Experiments *ExperimentsResponse `pulumi:"experiments"`
	// Handler mappings
	HandlerMappings []HandlerMappingResponse `pulumi:"handlerMappings"`
	// HTTP logging Enabled
	HttpLoggingEnabled *bool `pulumi:"httpLoggingEnabled"`
	// Ip Security restrictions
	IpSecurityRestrictions []IpSecurityRestrictionResponse `pulumi:"ipSecurityRestrictions"`
	// Java container
	JavaContainer *string `pulumi:"javaContainer"`
	// Java container version
	JavaContainerVersion *string `pulumi:"javaContainerVersion"`
	// Java version
	JavaVersion *string `pulumi:"javaVersion"`
	// Site limits
	Limits *SiteLimitsResponse `pulumi:"limits"`
	// Site load balancing
	LoadBalancing *string `pulumi:"loadBalancing"`
	// Local mysql enabled
	LocalMySqlEnabled *bool `pulumi:"localMySqlEnabled"`
	// HTTP Logs Directory size limit
	LogsDirectorySizeLimit *int `pulumi:"logsDirectorySizeLimit"`
	// Managed pipeline mode
	ManagedPipelineMode *string `pulumi:"managedPipelineMode"`
	// Site Metadata
	Metadata []NameValuePairResponse `pulumi:"metadata"`
	// Net Framework Version
	NetFrameworkVersion *string `pulumi:"netFrameworkVersion"`
	// Version of Node
	NodeVersion *string `pulumi:"nodeVersion"`
	// Number of workers
	NumberOfWorkers *int `pulumi:"numberOfWorkers"`
	// Version of PHP
	PhpVersion *string `pulumi:"phpVersion"`
	// Publishing password
	PublishingPassword *string `pulumi:"publishingPassword"`
	// Publishing user name
	PublishingUsername *string `pulumi:"publishingUsername"`
	// Version of Python
	PythonVersion *string `pulumi:"pythonVersion"`
	// Remote Debugging Enabled
	RemoteDebuggingEnabled *bool `pulumi:"remoteDebuggingEnabled"`
	// Remote Debugging Version
	RemoteDebuggingVersion *string `pulumi:"remoteDebuggingVersion"`
	// Enable request tracing
	RequestTracingEnabled *bool `pulumi:"requestTracingEnabled"`
	// Request tracing expiration time
	RequestTracingExpirationTime *string `pulumi:"requestTracingExpirationTime"`
	// SCM type
	ScmType *string `pulumi:"scmType"`
	// Tracing options
	TracingOptions *string `pulumi:"tracingOptions"`
	// Use 32 bit worker process
	Use32BitWorkerProcess *bool `pulumi:"use32BitWorkerProcess"`
	// Virtual applications
	VirtualApplications []VirtualApplicationResponse `pulumi:"virtualApplications"`
	// Vnet name
	VnetName *string `pulumi:"vnetName"`
	// Web socket enabled.
	WebSocketsEnabled *bool `pulumi:"webSocketsEnabled"`
}

// SiteConfigResponsePropertiesInput is an input type that accepts SiteConfigResponsePropertiesArgs and SiteConfigResponsePropertiesOutput values.
// You can construct a concrete instance of `SiteConfigResponsePropertiesInput` via:
//
//          SiteConfigResponsePropertiesArgs{...}
type SiteConfigResponsePropertiesInput interface {
	pulumi.Input

	ToSiteConfigResponsePropertiesOutput() SiteConfigResponsePropertiesOutput
	ToSiteConfigResponsePropertiesOutputWithContext(context.Context) SiteConfigResponsePropertiesOutput
}

type SiteConfigResponsePropertiesArgs struct {
	// Always On
	AlwaysOn pulumi.BoolPtrInput `pulumi:"alwaysOn"`
	// Information about the formal API definition for the web app.
	ApiDefinition ApiDefinitionInfoResponsePtrInput `pulumi:"apiDefinition"`
	// App Command Line to launch
	AppCommandLine pulumi.StringPtrInput `pulumi:"appCommandLine"`
	// Application Settings
	AppSettings NameValuePairResponseArrayInput `pulumi:"appSettings"`
	// Auto heal enabled
	AutoHealEnabled pulumi.BoolPtrInput `pulumi:"autoHealEnabled"`
	// Auto heal rules
	AutoHealRules AutoHealRulesResponsePtrInput `pulumi:"autoHealRules"`
	// Auto swap slot name
	AutoSwapSlotName pulumi.StringPtrInput `pulumi:"autoSwapSlotName"`
	// Connection strings
	ConnectionStrings ConnStringInfoResponseArrayInput `pulumi:"connectionStrings"`
	// Cross-Origin Resource Sharing (CORS) settings.
	Cors CorsSettingsResponsePtrInput `pulumi:"cors"`
	// Default documents
	DefaultDocuments pulumi.StringArrayInput `pulumi:"defaultDocuments"`
	// Detailed error logging enabled
	DetailedErrorLoggingEnabled pulumi.BoolPtrInput `pulumi:"detailedErrorLoggingEnabled"`
	// Document root
	DocumentRoot pulumi.StringPtrInput `pulumi:"documentRoot"`
	// This is work around for polymorphic types
	Experiments ExperimentsResponsePtrInput `pulumi:"experiments"`
	// Handler mappings
	HandlerMappings HandlerMappingResponseArrayInput `pulumi:"handlerMappings"`
	// HTTP logging Enabled
	HttpLoggingEnabled pulumi.BoolPtrInput `pulumi:"httpLoggingEnabled"`
	// Ip Security restrictions
	IpSecurityRestrictions IpSecurityRestrictionResponseArrayInput `pulumi:"ipSecurityRestrictions"`
	// Java container
	JavaContainer pulumi.StringPtrInput `pulumi:"javaContainer"`
	// Java container version
	JavaContainerVersion pulumi.StringPtrInput `pulumi:"javaContainerVersion"`
	// Java version
	JavaVersion pulumi.StringPtrInput `pulumi:"javaVersion"`
	// Site limits
	Limits SiteLimitsResponsePtrInput `pulumi:"limits"`
	// Site load balancing
	LoadBalancing pulumi.StringPtrInput `pulumi:"loadBalancing"`
	// Local mysql enabled
	LocalMySqlEnabled pulumi.BoolPtrInput `pulumi:"localMySqlEnabled"`
	// HTTP Logs Directory size limit
	LogsDirectorySizeLimit pulumi.IntPtrInput `pulumi:"logsDirectorySizeLimit"`
	// Managed pipeline mode
	ManagedPipelineMode pulumi.StringPtrInput `pulumi:"managedPipelineMode"`
	// Site Metadata
	Metadata NameValuePairResponseArrayInput `pulumi:"metadata"`
	// Net Framework Version
	NetFrameworkVersion pulumi.StringPtrInput `pulumi:"netFrameworkVersion"`
	// Version of Node
	NodeVersion pulumi.StringPtrInput `pulumi:"nodeVersion"`
	// Number of workers
	NumberOfWorkers pulumi.IntPtrInput `pulumi:"numberOfWorkers"`
	// Version of PHP
	PhpVersion pulumi.StringPtrInput `pulumi:"phpVersion"`
	// Publishing password
	PublishingPassword pulumi.StringPtrInput `pulumi:"publishingPassword"`
	// Publishing user name
	PublishingUsername pulumi.StringPtrInput `pulumi:"publishingUsername"`
	// Version of Python
	PythonVersion pulumi.StringPtrInput `pulumi:"pythonVersion"`
	// Remote Debugging Enabled
	RemoteDebuggingEnabled pulumi.BoolPtrInput `pulumi:"remoteDebuggingEnabled"`
	// Remote Debugging Version
	RemoteDebuggingVersion pulumi.StringPtrInput `pulumi:"remoteDebuggingVersion"`
	// Enable request tracing
	RequestTracingEnabled pulumi.BoolPtrInput `pulumi:"requestTracingEnabled"`
	// Request tracing expiration time
	RequestTracingExpirationTime pulumi.StringPtrInput `pulumi:"requestTracingExpirationTime"`
	// SCM type
	ScmType pulumi.StringPtrInput `pulumi:"scmType"`
	// Tracing options
	TracingOptions pulumi.StringPtrInput `pulumi:"tracingOptions"`
	// Use 32 bit worker process
	Use32BitWorkerProcess pulumi.BoolPtrInput `pulumi:"use32BitWorkerProcess"`
	// Virtual applications
	VirtualApplications VirtualApplicationResponseArrayInput `pulumi:"virtualApplications"`
	// Vnet name
	VnetName pulumi.StringPtrInput `pulumi:"vnetName"`
	// Web socket enabled.
	WebSocketsEnabled pulumi.BoolPtrInput `pulumi:"webSocketsEnabled"`
}

func (SiteConfigResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteConfigResponseProperties)(nil)).Elem()
}

func (i SiteConfigResponsePropertiesArgs) ToSiteConfigResponsePropertiesOutput() SiteConfigResponsePropertiesOutput {
	return i.ToSiteConfigResponsePropertiesOutputWithContext(context.Background())
}

func (i SiteConfigResponsePropertiesArgs) ToSiteConfigResponsePropertiesOutputWithContext(ctx context.Context) SiteConfigResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteConfigResponsePropertiesOutput)
}

func (i SiteConfigResponsePropertiesArgs) ToSiteConfigResponsePropertiesPtrOutput() SiteConfigResponsePropertiesPtrOutput {
	return i.ToSiteConfigResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i SiteConfigResponsePropertiesArgs) ToSiteConfigResponsePropertiesPtrOutputWithContext(ctx context.Context) SiteConfigResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteConfigResponsePropertiesOutput).ToSiteConfigResponsePropertiesPtrOutputWithContext(ctx)
}

// SiteConfigResponsePropertiesPtrInput is an input type that accepts SiteConfigResponsePropertiesArgs, SiteConfigResponsePropertiesPtr and SiteConfigResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `SiteConfigResponsePropertiesPtrInput` via:
//
//          SiteConfigResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type SiteConfigResponsePropertiesPtrInput interface {
	pulumi.Input

	ToSiteConfigResponsePropertiesPtrOutput() SiteConfigResponsePropertiesPtrOutput
	ToSiteConfigResponsePropertiesPtrOutputWithContext(context.Context) SiteConfigResponsePropertiesPtrOutput
}

type siteConfigResponsePropertiesPtrType SiteConfigResponsePropertiesArgs

func SiteConfigResponsePropertiesPtr(v *SiteConfigResponsePropertiesArgs) SiteConfigResponsePropertiesPtrInput {
	return (*siteConfigResponsePropertiesPtrType)(v)
}

func (*siteConfigResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteConfigResponseProperties)(nil)).Elem()
}

func (i *siteConfigResponsePropertiesPtrType) ToSiteConfigResponsePropertiesPtrOutput() SiteConfigResponsePropertiesPtrOutput {
	return i.ToSiteConfigResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *siteConfigResponsePropertiesPtrType) ToSiteConfigResponsePropertiesPtrOutputWithContext(ctx context.Context) SiteConfigResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteConfigResponsePropertiesPtrOutput)
}

type SiteConfigResponsePropertiesOutput struct{ *pulumi.OutputState }

func (SiteConfigResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteConfigResponseProperties)(nil)).Elem()
}

func (o SiteConfigResponsePropertiesOutput) ToSiteConfigResponsePropertiesOutput() SiteConfigResponsePropertiesOutput {
	return o
}

func (o SiteConfigResponsePropertiesOutput) ToSiteConfigResponsePropertiesOutputWithContext(ctx context.Context) SiteConfigResponsePropertiesOutput {
	return o
}

func (o SiteConfigResponsePropertiesOutput) ToSiteConfigResponsePropertiesPtrOutput() SiteConfigResponsePropertiesPtrOutput {
	return o.ToSiteConfigResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o SiteConfigResponsePropertiesOutput) ToSiteConfigResponsePropertiesPtrOutputWithContext(ctx context.Context) SiteConfigResponsePropertiesPtrOutput {
	return o.ApplyT(func(v SiteConfigResponseProperties) *SiteConfigResponseProperties {
		return &v
	}).(SiteConfigResponsePropertiesPtrOutput)
}

// Always On
func (o SiteConfigResponsePropertiesOutput) AlwaysOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponseProperties) *bool { return v.AlwaysOn }).(pulumi.BoolPtrOutput)
}

// Information about the formal API definition for the web app.
func (o SiteConfigResponsePropertiesOutput) ApiDefinition() ApiDefinitionInfoResponsePtrOutput {
	return o.ApplyT(func(v SiteConfigResponseProperties) *ApiDefinitionInfoResponse { return v.ApiDefinition }).(ApiDefinitionInfoResponsePtrOutput)
}

// App Command Line to launch
func (o SiteConfigResponsePropertiesOutput) AppCommandLine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponseProperties) *string { return v.AppCommandLine }).(pulumi.StringPtrOutput)
}

// Application Settings
func (o SiteConfigResponsePropertiesOutput) AppSettings() NameValuePairResponseArrayOutput {
	return o.ApplyT(func(v SiteConfigResponseProperties) []NameValuePairResponse { return v.AppSettings }).(NameValuePairResponseArrayOutput)
}

// Auto heal enabled
func (o SiteConfigResponsePropertiesOutput) AutoHealEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponseProperties) *bool { return v.AutoHealEnabled }).(pulumi.BoolPtrOutput)
}

// Auto heal rules
func (o SiteConfigResponsePropertiesOutput) AutoHealRules() AutoHealRulesResponsePtrOutput {
	return o.ApplyT(func(v SiteConfigResponseProperties) *AutoHealRulesResponse { return v.AutoHealRules }).(AutoHealRulesResponsePtrOutput)
}

// Auto swap slot name
func (o SiteConfigResponsePropertiesOutput) AutoSwapSlotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponseProperties) *string { return v.AutoSwapSlotName }).(pulumi.StringPtrOutput)
}

// Connection strings
func (o SiteConfigResponsePropertiesOutput) ConnectionStrings() ConnStringInfoResponseArrayOutput {
	return o.ApplyT(func(v SiteConfigResponseProperties) []ConnStringInfoResponse { return v.ConnectionStrings }).(ConnStringInfoResponseArrayOutput)
}

// Cross-Origin Resource Sharing (CORS) settings.
func (o SiteConfigResponsePropertiesOutput) Cors() CorsSettingsResponsePtrOutput {
	return o.ApplyT(func(v SiteConfigResponseProperties) *CorsSettingsResponse { return v.Cors }).(CorsSettingsResponsePtrOutput)
}

// Default documents
func (o SiteConfigResponsePropertiesOutput) DefaultDocuments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SiteConfigResponseProperties) []string { return v.DefaultDocuments }).(pulumi.StringArrayOutput)
}

// Detailed error logging enabled
func (o SiteConfigResponsePropertiesOutput) DetailedErrorLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponseProperties) *bool { return v.DetailedErrorLoggingEnabled }).(pulumi.BoolPtrOutput)
}

// Document root
func (o SiteConfigResponsePropertiesOutput) DocumentRoot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponseProperties) *string { return v.DocumentRoot }).(pulumi.StringPtrOutput)
}

// This is work around for polymorphic types
func (o SiteConfigResponsePropertiesOutput) Experiments() ExperimentsResponsePtrOutput {
	return o.ApplyT(func(v SiteConfigResponseProperties) *ExperimentsResponse { return v.Experiments }).(ExperimentsResponsePtrOutput)
}

// Handler mappings
func (o SiteConfigResponsePropertiesOutput) HandlerMappings() HandlerMappingResponseArrayOutput {
	return o.ApplyT(func(v SiteConfigResponseProperties) []HandlerMappingResponse { return v.HandlerMappings }).(HandlerMappingResponseArrayOutput)
}

// HTTP logging Enabled
func (o SiteConfigResponsePropertiesOutput) HttpLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponseProperties) *bool { return v.HttpLoggingEnabled }).(pulumi.BoolPtrOutput)
}

// Ip Security restrictions
func (o SiteConfigResponsePropertiesOutput) IpSecurityRestrictions() IpSecurityRestrictionResponseArrayOutput {
	return o.ApplyT(func(v SiteConfigResponseProperties) []IpSecurityRestrictionResponse { return v.IpSecurityRestrictions }).(IpSecurityRestrictionResponseArrayOutput)
}

// Java container
func (o SiteConfigResponsePropertiesOutput) JavaContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponseProperties) *string { return v.JavaContainer }).(pulumi.StringPtrOutput)
}

// Java container version
func (o SiteConfigResponsePropertiesOutput) JavaContainerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponseProperties) *string { return v.JavaContainerVersion }).(pulumi.StringPtrOutput)
}

// Java version
func (o SiteConfigResponsePropertiesOutput) JavaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponseProperties) *string { return v.JavaVersion }).(pulumi.StringPtrOutput)
}

// Site limits
func (o SiteConfigResponsePropertiesOutput) Limits() SiteLimitsResponsePtrOutput {
	return o.ApplyT(func(v SiteConfigResponseProperties) *SiteLimitsResponse { return v.Limits }).(SiteLimitsResponsePtrOutput)
}

// Site load balancing
func (o SiteConfigResponsePropertiesOutput) LoadBalancing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponseProperties) *string { return v.LoadBalancing }).(pulumi.StringPtrOutput)
}

// Local mysql enabled
func (o SiteConfigResponsePropertiesOutput) LocalMySqlEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponseProperties) *bool { return v.LocalMySqlEnabled }).(pulumi.BoolPtrOutput)
}

// HTTP Logs Directory size limit
func (o SiteConfigResponsePropertiesOutput) LogsDirectorySizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfigResponseProperties) *int { return v.LogsDirectorySizeLimit }).(pulumi.IntPtrOutput)
}

// Managed pipeline mode
func (o SiteConfigResponsePropertiesOutput) ManagedPipelineMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponseProperties) *string { return v.ManagedPipelineMode }).(pulumi.StringPtrOutput)
}

// Site Metadata
func (o SiteConfigResponsePropertiesOutput) Metadata() NameValuePairResponseArrayOutput {
	return o.ApplyT(func(v SiteConfigResponseProperties) []NameValuePairResponse { return v.Metadata }).(NameValuePairResponseArrayOutput)
}

// Net Framework Version
func (o SiteConfigResponsePropertiesOutput) NetFrameworkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponseProperties) *string { return v.NetFrameworkVersion }).(pulumi.StringPtrOutput)
}

// Version of Node
func (o SiteConfigResponsePropertiesOutput) NodeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponseProperties) *string { return v.NodeVersion }).(pulumi.StringPtrOutput)
}

// Number of workers
func (o SiteConfigResponsePropertiesOutput) NumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfigResponseProperties) *int { return v.NumberOfWorkers }).(pulumi.IntPtrOutput)
}

// Version of PHP
func (o SiteConfigResponsePropertiesOutput) PhpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponseProperties) *string { return v.PhpVersion }).(pulumi.StringPtrOutput)
}

// Publishing password
func (o SiteConfigResponsePropertiesOutput) PublishingPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponseProperties) *string { return v.PublishingPassword }).(pulumi.StringPtrOutput)
}

// Publishing user name
func (o SiteConfigResponsePropertiesOutput) PublishingUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponseProperties) *string { return v.PublishingUsername }).(pulumi.StringPtrOutput)
}

// Version of Python
func (o SiteConfigResponsePropertiesOutput) PythonVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponseProperties) *string { return v.PythonVersion }).(pulumi.StringPtrOutput)
}

// Remote Debugging Enabled
func (o SiteConfigResponsePropertiesOutput) RemoteDebuggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponseProperties) *bool { return v.RemoteDebuggingEnabled }).(pulumi.BoolPtrOutput)
}

// Remote Debugging Version
func (o SiteConfigResponsePropertiesOutput) RemoteDebuggingVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponseProperties) *string { return v.RemoteDebuggingVersion }).(pulumi.StringPtrOutput)
}

// Enable request tracing
func (o SiteConfigResponsePropertiesOutput) RequestTracingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponseProperties) *bool { return v.RequestTracingEnabled }).(pulumi.BoolPtrOutput)
}

// Request tracing expiration time
func (o SiteConfigResponsePropertiesOutput) RequestTracingExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponseProperties) *string { return v.RequestTracingExpirationTime }).(pulumi.StringPtrOutput)
}

// SCM type
func (o SiteConfigResponsePropertiesOutput) ScmType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponseProperties) *string { return v.ScmType }).(pulumi.StringPtrOutput)
}

// Tracing options
func (o SiteConfigResponsePropertiesOutput) TracingOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponseProperties) *string { return v.TracingOptions }).(pulumi.StringPtrOutput)
}

// Use 32 bit worker process
func (o SiteConfigResponsePropertiesOutput) Use32BitWorkerProcess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponseProperties) *bool { return v.Use32BitWorkerProcess }).(pulumi.BoolPtrOutput)
}

// Virtual applications
func (o SiteConfigResponsePropertiesOutput) VirtualApplications() VirtualApplicationResponseArrayOutput {
	return o.ApplyT(func(v SiteConfigResponseProperties) []VirtualApplicationResponse { return v.VirtualApplications }).(VirtualApplicationResponseArrayOutput)
}

// Vnet name
func (o SiteConfigResponsePropertiesOutput) VnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponseProperties) *string { return v.VnetName }).(pulumi.StringPtrOutput)
}

// Web socket enabled.
func (o SiteConfigResponsePropertiesOutput) WebSocketsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponseProperties) *bool { return v.WebSocketsEnabled }).(pulumi.BoolPtrOutput)
}

type SiteConfigResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (SiteConfigResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteConfigResponseProperties)(nil)).Elem()
}

func (o SiteConfigResponsePropertiesPtrOutput) ToSiteConfigResponsePropertiesPtrOutput() SiteConfigResponsePropertiesPtrOutput {
	return o
}

func (o SiteConfigResponsePropertiesPtrOutput) ToSiteConfigResponsePropertiesPtrOutputWithContext(ctx context.Context) SiteConfigResponsePropertiesPtrOutput {
	return o
}

func (o SiteConfigResponsePropertiesPtrOutput) Elem() SiteConfigResponsePropertiesOutput {
	return o.ApplyT(func(v *SiteConfigResponseProperties) SiteConfigResponseProperties { return *v }).(SiteConfigResponsePropertiesOutput)
}

// Always On
func (o SiteConfigResponsePropertiesPtrOutput) AlwaysOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.AlwaysOn
	}).(pulumi.BoolPtrOutput)
}

// Information about the formal API definition for the web app.
func (o SiteConfigResponsePropertiesPtrOutput) ApiDefinition() ApiDefinitionInfoResponsePtrOutput {
	return o.ApplyT(func(v *SiteConfigResponseProperties) *ApiDefinitionInfoResponse {
		if v == nil {
			return nil
		}
		return v.ApiDefinition
	}).(ApiDefinitionInfoResponsePtrOutput)
}

// App Command Line to launch
func (o SiteConfigResponsePropertiesPtrOutput) AppCommandLine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.AppCommandLine
	}).(pulumi.StringPtrOutput)
}

// Application Settings
func (o SiteConfigResponsePropertiesPtrOutput) AppSettings() NameValuePairResponseArrayOutput {
	return o.ApplyT(func(v *SiteConfigResponseProperties) []NameValuePairResponse {
		if v == nil {
			return nil
		}
		return v.AppSettings
	}).(NameValuePairResponseArrayOutput)
}

// Auto heal enabled
func (o SiteConfigResponsePropertiesPtrOutput) AutoHealEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.AutoHealEnabled
	}).(pulumi.BoolPtrOutput)
}

// Auto heal rules
func (o SiteConfigResponsePropertiesPtrOutput) AutoHealRules() AutoHealRulesResponsePtrOutput {
	return o.ApplyT(func(v *SiteConfigResponseProperties) *AutoHealRulesResponse {
		if v == nil {
			return nil
		}
		return v.AutoHealRules
	}).(AutoHealRulesResponsePtrOutput)
}

// Auto swap slot name
func (o SiteConfigResponsePropertiesPtrOutput) AutoSwapSlotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.AutoSwapSlotName
	}).(pulumi.StringPtrOutput)
}

// Connection strings
func (o SiteConfigResponsePropertiesPtrOutput) ConnectionStrings() ConnStringInfoResponseArrayOutput {
	return o.ApplyT(func(v *SiteConfigResponseProperties) []ConnStringInfoResponse {
		if v == nil {
			return nil
		}
		return v.ConnectionStrings
	}).(ConnStringInfoResponseArrayOutput)
}

// Cross-Origin Resource Sharing (CORS) settings.
func (o SiteConfigResponsePropertiesPtrOutput) Cors() CorsSettingsResponsePtrOutput {
	return o.ApplyT(func(v *SiteConfigResponseProperties) *CorsSettingsResponse {
		if v == nil {
			return nil
		}
		return v.Cors
	}).(CorsSettingsResponsePtrOutput)
}

// Default documents
func (o SiteConfigResponsePropertiesPtrOutput) DefaultDocuments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SiteConfigResponseProperties) []string {
		if v == nil {
			return nil
		}
		return v.DefaultDocuments
	}).(pulumi.StringArrayOutput)
}

// Detailed error logging enabled
func (o SiteConfigResponsePropertiesPtrOutput) DetailedErrorLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.DetailedErrorLoggingEnabled
	}).(pulumi.BoolPtrOutput)
}

// Document root
func (o SiteConfigResponsePropertiesPtrOutput) DocumentRoot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.DocumentRoot
	}).(pulumi.StringPtrOutput)
}

// This is work around for polymorphic types
func (o SiteConfigResponsePropertiesPtrOutput) Experiments() ExperimentsResponsePtrOutput {
	return o.ApplyT(func(v *SiteConfigResponseProperties) *ExperimentsResponse {
		if v == nil {
			return nil
		}
		return v.Experiments
	}).(ExperimentsResponsePtrOutput)
}

// Handler mappings
func (o SiteConfigResponsePropertiesPtrOutput) HandlerMappings() HandlerMappingResponseArrayOutput {
	return o.ApplyT(func(v *SiteConfigResponseProperties) []HandlerMappingResponse {
		if v == nil {
			return nil
		}
		return v.HandlerMappings
	}).(HandlerMappingResponseArrayOutput)
}

// HTTP logging Enabled
func (o SiteConfigResponsePropertiesPtrOutput) HttpLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.HttpLoggingEnabled
	}).(pulumi.BoolPtrOutput)
}

// Ip Security restrictions
func (o SiteConfigResponsePropertiesPtrOutput) IpSecurityRestrictions() IpSecurityRestrictionResponseArrayOutput {
	return o.ApplyT(func(v *SiteConfigResponseProperties) []IpSecurityRestrictionResponse {
		if v == nil {
			return nil
		}
		return v.IpSecurityRestrictions
	}).(IpSecurityRestrictionResponseArrayOutput)
}

// Java container
func (o SiteConfigResponsePropertiesPtrOutput) JavaContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.JavaContainer
	}).(pulumi.StringPtrOutput)
}

// Java container version
func (o SiteConfigResponsePropertiesPtrOutput) JavaContainerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.JavaContainerVersion
	}).(pulumi.StringPtrOutput)
}

// Java version
func (o SiteConfigResponsePropertiesPtrOutput) JavaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.JavaVersion
	}).(pulumi.StringPtrOutput)
}

// Site limits
func (o SiteConfigResponsePropertiesPtrOutput) Limits() SiteLimitsResponsePtrOutput {
	return o.ApplyT(func(v *SiteConfigResponseProperties) *SiteLimitsResponse {
		if v == nil {
			return nil
		}
		return v.Limits
	}).(SiteLimitsResponsePtrOutput)
}

// Site load balancing
func (o SiteConfigResponsePropertiesPtrOutput) LoadBalancing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.LoadBalancing
	}).(pulumi.StringPtrOutput)
}

// Local mysql enabled
func (o SiteConfigResponsePropertiesPtrOutput) LocalMySqlEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.LocalMySqlEnabled
	}).(pulumi.BoolPtrOutput)
}

// HTTP Logs Directory size limit
func (o SiteConfigResponsePropertiesPtrOutput) LogsDirectorySizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.LogsDirectorySizeLimit
	}).(pulumi.IntPtrOutput)
}

// Managed pipeline mode
func (o SiteConfigResponsePropertiesPtrOutput) ManagedPipelineMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.ManagedPipelineMode
	}).(pulumi.StringPtrOutput)
}

// Site Metadata
func (o SiteConfigResponsePropertiesPtrOutput) Metadata() NameValuePairResponseArrayOutput {
	return o.ApplyT(func(v *SiteConfigResponseProperties) []NameValuePairResponse {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(NameValuePairResponseArrayOutput)
}

// Net Framework Version
func (o SiteConfigResponsePropertiesPtrOutput) NetFrameworkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.NetFrameworkVersion
	}).(pulumi.StringPtrOutput)
}

// Version of Node
func (o SiteConfigResponsePropertiesPtrOutput) NodeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.NodeVersion
	}).(pulumi.StringPtrOutput)
}

// Number of workers
func (o SiteConfigResponsePropertiesPtrOutput) NumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfWorkers
	}).(pulumi.IntPtrOutput)
}

// Version of PHP
func (o SiteConfigResponsePropertiesPtrOutput) PhpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.PhpVersion
	}).(pulumi.StringPtrOutput)
}

// Publishing password
func (o SiteConfigResponsePropertiesPtrOutput) PublishingPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublishingPassword
	}).(pulumi.StringPtrOutput)
}

// Publishing user name
func (o SiteConfigResponsePropertiesPtrOutput) PublishingUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublishingUsername
	}).(pulumi.StringPtrOutput)
}

// Version of Python
func (o SiteConfigResponsePropertiesPtrOutput) PythonVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.PythonVersion
	}).(pulumi.StringPtrOutput)
}

// Remote Debugging Enabled
func (o SiteConfigResponsePropertiesPtrOutput) RemoteDebuggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.RemoteDebuggingEnabled
	}).(pulumi.BoolPtrOutput)
}

// Remote Debugging Version
func (o SiteConfigResponsePropertiesPtrOutput) RemoteDebuggingVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.RemoteDebuggingVersion
	}).(pulumi.StringPtrOutput)
}

// Enable request tracing
func (o SiteConfigResponsePropertiesPtrOutput) RequestTracingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.RequestTracingEnabled
	}).(pulumi.BoolPtrOutput)
}

// Request tracing expiration time
func (o SiteConfigResponsePropertiesPtrOutput) RequestTracingExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.RequestTracingExpirationTime
	}).(pulumi.StringPtrOutput)
}

// SCM type
func (o SiteConfigResponsePropertiesPtrOutput) ScmType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.ScmType
	}).(pulumi.StringPtrOutput)
}

// Tracing options
func (o SiteConfigResponsePropertiesPtrOutput) TracingOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.TracingOptions
	}).(pulumi.StringPtrOutput)
}

// Use 32 bit worker process
func (o SiteConfigResponsePropertiesPtrOutput) Use32BitWorkerProcess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Use32BitWorkerProcess
	}).(pulumi.BoolPtrOutput)
}

// Virtual applications
func (o SiteConfigResponsePropertiesPtrOutput) VirtualApplications() VirtualApplicationResponseArrayOutput {
	return o.ApplyT(func(v *SiteConfigResponseProperties) []VirtualApplicationResponse {
		if v == nil {
			return nil
		}
		return v.VirtualApplications
	}).(VirtualApplicationResponseArrayOutput)
}

// Vnet name
func (o SiteConfigResponsePropertiesPtrOutput) VnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.VnetName
	}).(pulumi.StringPtrOutput)
}

// Web socket enabled.
func (o SiteConfigResponsePropertiesPtrOutput) WebSocketsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.WebSocketsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Represents user credentials used for publishing activity
type SiteDeploymentType struct {
	// Kind of resource
	Kind *string `pulumi:"kind"`
	// Resource Location
	Location string `pulumi:"location"`
	// Resource Name
	Name       *string                      `pulumi:"name"`
	Properties DeploymentResponseProperties `pulumi:"properties"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type *string `pulumi:"type"`
}

// SiteDeploymentTypeInput is an input type that accepts SiteDeploymentTypeArgs and SiteDeploymentTypeOutput values.
// You can construct a concrete instance of `SiteDeploymentTypeInput` via:
//
//          SiteDeploymentTypeArgs{...}
type SiteDeploymentTypeInput interface {
	pulumi.Input

	ToSiteDeploymentTypeOutput() SiteDeploymentTypeOutput
	ToSiteDeploymentTypeOutputWithContext(context.Context) SiteDeploymentTypeOutput
}

// Represents user credentials used for publishing activity
type SiteDeploymentTypeArgs struct {
	// Kind of resource
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource Name
	Name       pulumi.StringPtrInput             `pulumi:"name"`
	Properties DeploymentResponsePropertiesInput `pulumi:"properties"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SiteDeploymentTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteDeploymentType)(nil)).Elem()
}

func (i SiteDeploymentTypeArgs) ToSiteDeploymentTypeOutput() SiteDeploymentTypeOutput {
	return i.ToSiteDeploymentTypeOutputWithContext(context.Background())
}

func (i SiteDeploymentTypeArgs) ToSiteDeploymentTypeOutputWithContext(ctx context.Context) SiteDeploymentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteDeploymentTypeOutput)
}

// Represents user credentials used for publishing activity
type SiteDeploymentTypeOutput struct{ *pulumi.OutputState }

func (SiteDeploymentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteDeploymentType)(nil)).Elem()
}

func (o SiteDeploymentTypeOutput) ToSiteDeploymentTypeOutput() SiteDeploymentTypeOutput {
	return o
}

func (o SiteDeploymentTypeOutput) ToSiteDeploymentTypeOutputWithContext(ctx context.Context) SiteDeploymentTypeOutput {
	return o
}

// Kind of resource
func (o SiteDeploymentTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteDeploymentType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location
func (o SiteDeploymentTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v SiteDeploymentType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name
func (o SiteDeploymentTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteDeploymentType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SiteDeploymentTypeOutput) Properties() DeploymentResponsePropertiesOutput {
	return o.ApplyT(func(v SiteDeploymentType) DeploymentResponseProperties { return v.Properties }).(DeploymentResponsePropertiesOutput)
}

// Resource tags
func (o SiteDeploymentTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v SiteDeploymentType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o SiteDeploymentTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteDeploymentType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Represents user credentials used for publishing activity
type SiteDeploymentSlotType struct {
	// Kind of resource
	Kind *string `pulumi:"kind"`
	// Resource Location
	Location string `pulumi:"location"`
	// Resource Name
	Name       *string                      `pulumi:"name"`
	Properties DeploymentResponseProperties `pulumi:"properties"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type *string `pulumi:"type"`
}

// SiteDeploymentSlotTypeInput is an input type that accepts SiteDeploymentSlotTypeArgs and SiteDeploymentSlotTypeOutput values.
// You can construct a concrete instance of `SiteDeploymentSlotTypeInput` via:
//
//          SiteDeploymentSlotTypeArgs{...}
type SiteDeploymentSlotTypeInput interface {
	pulumi.Input

	ToSiteDeploymentSlotTypeOutput() SiteDeploymentSlotTypeOutput
	ToSiteDeploymentSlotTypeOutputWithContext(context.Context) SiteDeploymentSlotTypeOutput
}

// Represents user credentials used for publishing activity
type SiteDeploymentSlotTypeArgs struct {
	// Kind of resource
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource Name
	Name       pulumi.StringPtrInput             `pulumi:"name"`
	Properties DeploymentResponsePropertiesInput `pulumi:"properties"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SiteDeploymentSlotTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteDeploymentSlotType)(nil)).Elem()
}

func (i SiteDeploymentSlotTypeArgs) ToSiteDeploymentSlotTypeOutput() SiteDeploymentSlotTypeOutput {
	return i.ToSiteDeploymentSlotTypeOutputWithContext(context.Background())
}

func (i SiteDeploymentSlotTypeArgs) ToSiteDeploymentSlotTypeOutputWithContext(ctx context.Context) SiteDeploymentSlotTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteDeploymentSlotTypeOutput)
}

// Represents user credentials used for publishing activity
type SiteDeploymentSlotTypeOutput struct{ *pulumi.OutputState }

func (SiteDeploymentSlotTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteDeploymentSlotType)(nil)).Elem()
}

func (o SiteDeploymentSlotTypeOutput) ToSiteDeploymentSlotTypeOutput() SiteDeploymentSlotTypeOutput {
	return o
}

func (o SiteDeploymentSlotTypeOutput) ToSiteDeploymentSlotTypeOutputWithContext(ctx context.Context) SiteDeploymentSlotTypeOutput {
	return o
}

// Kind of resource
func (o SiteDeploymentSlotTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteDeploymentSlotType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location
func (o SiteDeploymentSlotTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v SiteDeploymentSlotType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name
func (o SiteDeploymentSlotTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteDeploymentSlotType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SiteDeploymentSlotTypeOutput) Properties() DeploymentResponsePropertiesOutput {
	return o.ApplyT(func(v SiteDeploymentSlotType) DeploymentResponseProperties { return v.Properties }).(DeploymentResponsePropertiesOutput)
}

// Resource tags
func (o SiteDeploymentSlotTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v SiteDeploymentSlotType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o SiteDeploymentSlotTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteDeploymentSlotType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// A host name binding object
type SiteHostNameBindingType struct {
	// Kind of resource
	Kind *string `pulumi:"kind"`
	// Resource Location
	Location string `pulumi:"location"`
	// Resource Name
	Name       *string                           `pulumi:"name"`
	Properties HostNameBindingResponseProperties `pulumi:"properties"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type *string `pulumi:"type"`
}

// SiteHostNameBindingTypeInput is an input type that accepts SiteHostNameBindingTypeArgs and SiteHostNameBindingTypeOutput values.
// You can construct a concrete instance of `SiteHostNameBindingTypeInput` via:
//
//          SiteHostNameBindingTypeArgs{...}
type SiteHostNameBindingTypeInput interface {
	pulumi.Input

	ToSiteHostNameBindingTypeOutput() SiteHostNameBindingTypeOutput
	ToSiteHostNameBindingTypeOutputWithContext(context.Context) SiteHostNameBindingTypeOutput
}

// A host name binding object
type SiteHostNameBindingTypeArgs struct {
	// Kind of resource
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource Name
	Name       pulumi.StringPtrInput                  `pulumi:"name"`
	Properties HostNameBindingResponsePropertiesInput `pulumi:"properties"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SiteHostNameBindingTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteHostNameBindingType)(nil)).Elem()
}

func (i SiteHostNameBindingTypeArgs) ToSiteHostNameBindingTypeOutput() SiteHostNameBindingTypeOutput {
	return i.ToSiteHostNameBindingTypeOutputWithContext(context.Background())
}

func (i SiteHostNameBindingTypeArgs) ToSiteHostNameBindingTypeOutputWithContext(ctx context.Context) SiteHostNameBindingTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteHostNameBindingTypeOutput)
}

// A host name binding object
type SiteHostNameBindingTypeOutput struct{ *pulumi.OutputState }

func (SiteHostNameBindingTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteHostNameBindingType)(nil)).Elem()
}

func (o SiteHostNameBindingTypeOutput) ToSiteHostNameBindingTypeOutput() SiteHostNameBindingTypeOutput {
	return o
}

func (o SiteHostNameBindingTypeOutput) ToSiteHostNameBindingTypeOutputWithContext(ctx context.Context) SiteHostNameBindingTypeOutput {
	return o
}

// Kind of resource
func (o SiteHostNameBindingTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteHostNameBindingType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location
func (o SiteHostNameBindingTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v SiteHostNameBindingType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name
func (o SiteHostNameBindingTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteHostNameBindingType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SiteHostNameBindingTypeOutput) Properties() HostNameBindingResponsePropertiesOutput {
	return o.ApplyT(func(v SiteHostNameBindingType) HostNameBindingResponseProperties { return v.Properties }).(HostNameBindingResponsePropertiesOutput)
}

// Resource tags
func (o SiteHostNameBindingTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v SiteHostNameBindingType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o SiteHostNameBindingTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteHostNameBindingType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// A host name binding object
type SiteHostNameBindingSlotType struct {
	// Kind of resource
	Kind *string `pulumi:"kind"`
	// Resource Location
	Location string `pulumi:"location"`
	// Resource Name
	Name       *string                           `pulumi:"name"`
	Properties HostNameBindingResponseProperties `pulumi:"properties"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type *string `pulumi:"type"`
}

// SiteHostNameBindingSlotTypeInput is an input type that accepts SiteHostNameBindingSlotTypeArgs and SiteHostNameBindingSlotTypeOutput values.
// You can construct a concrete instance of `SiteHostNameBindingSlotTypeInput` via:
//
//          SiteHostNameBindingSlotTypeArgs{...}
type SiteHostNameBindingSlotTypeInput interface {
	pulumi.Input

	ToSiteHostNameBindingSlotTypeOutput() SiteHostNameBindingSlotTypeOutput
	ToSiteHostNameBindingSlotTypeOutputWithContext(context.Context) SiteHostNameBindingSlotTypeOutput
}

// A host name binding object
type SiteHostNameBindingSlotTypeArgs struct {
	// Kind of resource
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource Name
	Name       pulumi.StringPtrInput                  `pulumi:"name"`
	Properties HostNameBindingResponsePropertiesInput `pulumi:"properties"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SiteHostNameBindingSlotTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteHostNameBindingSlotType)(nil)).Elem()
}

func (i SiteHostNameBindingSlotTypeArgs) ToSiteHostNameBindingSlotTypeOutput() SiteHostNameBindingSlotTypeOutput {
	return i.ToSiteHostNameBindingSlotTypeOutputWithContext(context.Background())
}

func (i SiteHostNameBindingSlotTypeArgs) ToSiteHostNameBindingSlotTypeOutputWithContext(ctx context.Context) SiteHostNameBindingSlotTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteHostNameBindingSlotTypeOutput)
}

// A host name binding object
type SiteHostNameBindingSlotTypeOutput struct{ *pulumi.OutputState }

func (SiteHostNameBindingSlotTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteHostNameBindingSlotType)(nil)).Elem()
}

func (o SiteHostNameBindingSlotTypeOutput) ToSiteHostNameBindingSlotTypeOutput() SiteHostNameBindingSlotTypeOutput {
	return o
}

func (o SiteHostNameBindingSlotTypeOutput) ToSiteHostNameBindingSlotTypeOutputWithContext(ctx context.Context) SiteHostNameBindingSlotTypeOutput {
	return o
}

// Kind of resource
func (o SiteHostNameBindingSlotTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteHostNameBindingSlotType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location
func (o SiteHostNameBindingSlotTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v SiteHostNameBindingSlotType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name
func (o SiteHostNameBindingSlotTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteHostNameBindingSlotType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SiteHostNameBindingSlotTypeOutput) Properties() HostNameBindingResponsePropertiesOutput {
	return o.ApplyT(func(v SiteHostNameBindingSlotType) HostNameBindingResponseProperties { return v.Properties }).(HostNameBindingResponsePropertiesOutput)
}

// Resource tags
func (o SiteHostNameBindingSlotTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v SiteHostNameBindingSlotType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o SiteHostNameBindingSlotTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteHostNameBindingSlotType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Represents user credentials used for publishing activity
type SiteInstanceDeploymentType struct {
	// Kind of resource
	Kind *string `pulumi:"kind"`
	// Resource Location
	Location string `pulumi:"location"`
	// Resource Name
	Name       *string                      `pulumi:"name"`
	Properties DeploymentResponseProperties `pulumi:"properties"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type *string `pulumi:"type"`
}

// SiteInstanceDeploymentTypeInput is an input type that accepts SiteInstanceDeploymentTypeArgs and SiteInstanceDeploymentTypeOutput values.
// You can construct a concrete instance of `SiteInstanceDeploymentTypeInput` via:
//
//          SiteInstanceDeploymentTypeArgs{...}
type SiteInstanceDeploymentTypeInput interface {
	pulumi.Input

	ToSiteInstanceDeploymentTypeOutput() SiteInstanceDeploymentTypeOutput
	ToSiteInstanceDeploymentTypeOutputWithContext(context.Context) SiteInstanceDeploymentTypeOutput
}

// Represents user credentials used for publishing activity
type SiteInstanceDeploymentTypeArgs struct {
	// Kind of resource
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource Name
	Name       pulumi.StringPtrInput             `pulumi:"name"`
	Properties DeploymentResponsePropertiesInput `pulumi:"properties"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SiteInstanceDeploymentTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteInstanceDeploymentType)(nil)).Elem()
}

func (i SiteInstanceDeploymentTypeArgs) ToSiteInstanceDeploymentTypeOutput() SiteInstanceDeploymentTypeOutput {
	return i.ToSiteInstanceDeploymentTypeOutputWithContext(context.Background())
}

func (i SiteInstanceDeploymentTypeArgs) ToSiteInstanceDeploymentTypeOutputWithContext(ctx context.Context) SiteInstanceDeploymentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteInstanceDeploymentTypeOutput)
}

// Represents user credentials used for publishing activity
type SiteInstanceDeploymentTypeOutput struct{ *pulumi.OutputState }

func (SiteInstanceDeploymentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteInstanceDeploymentType)(nil)).Elem()
}

func (o SiteInstanceDeploymentTypeOutput) ToSiteInstanceDeploymentTypeOutput() SiteInstanceDeploymentTypeOutput {
	return o
}

func (o SiteInstanceDeploymentTypeOutput) ToSiteInstanceDeploymentTypeOutputWithContext(ctx context.Context) SiteInstanceDeploymentTypeOutput {
	return o
}

// Kind of resource
func (o SiteInstanceDeploymentTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteInstanceDeploymentType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location
func (o SiteInstanceDeploymentTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v SiteInstanceDeploymentType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name
func (o SiteInstanceDeploymentTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteInstanceDeploymentType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SiteInstanceDeploymentTypeOutput) Properties() DeploymentResponsePropertiesOutput {
	return o.ApplyT(func(v SiteInstanceDeploymentType) DeploymentResponseProperties { return v.Properties }).(DeploymentResponsePropertiesOutput)
}

// Resource tags
func (o SiteInstanceDeploymentTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v SiteInstanceDeploymentType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o SiteInstanceDeploymentTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteInstanceDeploymentType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Represents user credentials used for publishing activity
type SiteInstanceDeploymentSlotType struct {
	// Kind of resource
	Kind *string `pulumi:"kind"`
	// Resource Location
	Location string `pulumi:"location"`
	// Resource Name
	Name       *string                      `pulumi:"name"`
	Properties DeploymentResponseProperties `pulumi:"properties"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type *string `pulumi:"type"`
}

// SiteInstanceDeploymentSlotTypeInput is an input type that accepts SiteInstanceDeploymentSlotTypeArgs and SiteInstanceDeploymentSlotTypeOutput values.
// You can construct a concrete instance of `SiteInstanceDeploymentSlotTypeInput` via:
//
//          SiteInstanceDeploymentSlotTypeArgs{...}
type SiteInstanceDeploymentSlotTypeInput interface {
	pulumi.Input

	ToSiteInstanceDeploymentSlotTypeOutput() SiteInstanceDeploymentSlotTypeOutput
	ToSiteInstanceDeploymentSlotTypeOutputWithContext(context.Context) SiteInstanceDeploymentSlotTypeOutput
}

// Represents user credentials used for publishing activity
type SiteInstanceDeploymentSlotTypeArgs struct {
	// Kind of resource
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource Name
	Name       pulumi.StringPtrInput             `pulumi:"name"`
	Properties DeploymentResponsePropertiesInput `pulumi:"properties"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SiteInstanceDeploymentSlotTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteInstanceDeploymentSlotType)(nil)).Elem()
}

func (i SiteInstanceDeploymentSlotTypeArgs) ToSiteInstanceDeploymentSlotTypeOutput() SiteInstanceDeploymentSlotTypeOutput {
	return i.ToSiteInstanceDeploymentSlotTypeOutputWithContext(context.Background())
}

func (i SiteInstanceDeploymentSlotTypeArgs) ToSiteInstanceDeploymentSlotTypeOutputWithContext(ctx context.Context) SiteInstanceDeploymentSlotTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteInstanceDeploymentSlotTypeOutput)
}

// Represents user credentials used for publishing activity
type SiteInstanceDeploymentSlotTypeOutput struct{ *pulumi.OutputState }

func (SiteInstanceDeploymentSlotTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteInstanceDeploymentSlotType)(nil)).Elem()
}

func (o SiteInstanceDeploymentSlotTypeOutput) ToSiteInstanceDeploymentSlotTypeOutput() SiteInstanceDeploymentSlotTypeOutput {
	return o
}

func (o SiteInstanceDeploymentSlotTypeOutput) ToSiteInstanceDeploymentSlotTypeOutputWithContext(ctx context.Context) SiteInstanceDeploymentSlotTypeOutput {
	return o
}

// Kind of resource
func (o SiteInstanceDeploymentSlotTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteInstanceDeploymentSlotType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location
func (o SiteInstanceDeploymentSlotTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v SiteInstanceDeploymentSlotType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name
func (o SiteInstanceDeploymentSlotTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteInstanceDeploymentSlotType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SiteInstanceDeploymentSlotTypeOutput) Properties() DeploymentResponsePropertiesOutput {
	return o.ApplyT(func(v SiteInstanceDeploymentSlotType) DeploymentResponseProperties { return v.Properties }).(DeploymentResponsePropertiesOutput)
}

// Resource tags
func (o SiteInstanceDeploymentSlotTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v SiteInstanceDeploymentSlotType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o SiteInstanceDeploymentSlotTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteInstanceDeploymentSlotType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Represents metric limits set on a web app.
type SiteLimits struct {
	// Maximum allowed disk size usage in MB
	MaxDiskSizeInMb *int `pulumi:"maxDiskSizeInMb"`
	// Maximum allowed memory usage in MB
	MaxMemoryInMb *int `pulumi:"maxMemoryInMb"`
	// Maximum allowed CPU usage percentage
	MaxPercentageCpu *float64 `pulumi:"maxPercentageCpu"`
}

// SiteLimitsInput is an input type that accepts SiteLimitsArgs and SiteLimitsOutput values.
// You can construct a concrete instance of `SiteLimitsInput` via:
//
//          SiteLimitsArgs{...}
type SiteLimitsInput interface {
	pulumi.Input

	ToSiteLimitsOutput() SiteLimitsOutput
	ToSiteLimitsOutputWithContext(context.Context) SiteLimitsOutput
}

// Represents metric limits set on a web app.
type SiteLimitsArgs struct {
	// Maximum allowed disk size usage in MB
	MaxDiskSizeInMb pulumi.IntPtrInput `pulumi:"maxDiskSizeInMb"`
	// Maximum allowed memory usage in MB
	MaxMemoryInMb pulumi.IntPtrInput `pulumi:"maxMemoryInMb"`
	// Maximum allowed CPU usage percentage
	MaxPercentageCpu pulumi.Float64PtrInput `pulumi:"maxPercentageCpu"`
}

func (SiteLimitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteLimits)(nil)).Elem()
}

func (i SiteLimitsArgs) ToSiteLimitsOutput() SiteLimitsOutput {
	return i.ToSiteLimitsOutputWithContext(context.Background())
}

func (i SiteLimitsArgs) ToSiteLimitsOutputWithContext(ctx context.Context) SiteLimitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteLimitsOutput)
}

func (i SiteLimitsArgs) ToSiteLimitsPtrOutput() SiteLimitsPtrOutput {
	return i.ToSiteLimitsPtrOutputWithContext(context.Background())
}

func (i SiteLimitsArgs) ToSiteLimitsPtrOutputWithContext(ctx context.Context) SiteLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteLimitsOutput).ToSiteLimitsPtrOutputWithContext(ctx)
}

// SiteLimitsPtrInput is an input type that accepts SiteLimitsArgs, SiteLimitsPtr and SiteLimitsPtrOutput values.
// You can construct a concrete instance of `SiteLimitsPtrInput` via:
//
//          SiteLimitsArgs{...}
//
//  or:
//
//          nil
type SiteLimitsPtrInput interface {
	pulumi.Input

	ToSiteLimitsPtrOutput() SiteLimitsPtrOutput
	ToSiteLimitsPtrOutputWithContext(context.Context) SiteLimitsPtrOutput
}

type siteLimitsPtrType SiteLimitsArgs

func SiteLimitsPtr(v *SiteLimitsArgs) SiteLimitsPtrInput {
	return (*siteLimitsPtrType)(v)
}

func (*siteLimitsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteLimits)(nil)).Elem()
}

func (i *siteLimitsPtrType) ToSiteLimitsPtrOutput() SiteLimitsPtrOutput {
	return i.ToSiteLimitsPtrOutputWithContext(context.Background())
}

func (i *siteLimitsPtrType) ToSiteLimitsPtrOutputWithContext(ctx context.Context) SiteLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteLimitsPtrOutput)
}

// Represents metric limits set on a web app.
type SiteLimitsOutput struct{ *pulumi.OutputState }

func (SiteLimitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteLimits)(nil)).Elem()
}

func (o SiteLimitsOutput) ToSiteLimitsOutput() SiteLimitsOutput {
	return o
}

func (o SiteLimitsOutput) ToSiteLimitsOutputWithContext(ctx context.Context) SiteLimitsOutput {
	return o
}

func (o SiteLimitsOutput) ToSiteLimitsPtrOutput() SiteLimitsPtrOutput {
	return o.ToSiteLimitsPtrOutputWithContext(context.Background())
}

func (o SiteLimitsOutput) ToSiteLimitsPtrOutputWithContext(ctx context.Context) SiteLimitsPtrOutput {
	return o.ApplyT(func(v SiteLimits) *SiteLimits {
		return &v
	}).(SiteLimitsPtrOutput)
}

// Maximum allowed disk size usage in MB
func (o SiteLimitsOutput) MaxDiskSizeInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteLimits) *int { return v.MaxDiskSizeInMb }).(pulumi.IntPtrOutput)
}

// Maximum allowed memory usage in MB
func (o SiteLimitsOutput) MaxMemoryInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteLimits) *int { return v.MaxMemoryInMb }).(pulumi.IntPtrOutput)
}

// Maximum allowed CPU usage percentage
func (o SiteLimitsOutput) MaxPercentageCpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SiteLimits) *float64 { return v.MaxPercentageCpu }).(pulumi.Float64PtrOutput)
}

type SiteLimitsPtrOutput struct{ *pulumi.OutputState }

func (SiteLimitsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteLimits)(nil)).Elem()
}

func (o SiteLimitsPtrOutput) ToSiteLimitsPtrOutput() SiteLimitsPtrOutput {
	return o
}

func (o SiteLimitsPtrOutput) ToSiteLimitsPtrOutputWithContext(ctx context.Context) SiteLimitsPtrOutput {
	return o
}

func (o SiteLimitsPtrOutput) Elem() SiteLimitsOutput {
	return o.ApplyT(func(v *SiteLimits) SiteLimits { return *v }).(SiteLimitsOutput)
}

// Maximum allowed disk size usage in MB
func (o SiteLimitsPtrOutput) MaxDiskSizeInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteLimits) *int {
		if v == nil {
			return nil
		}
		return v.MaxDiskSizeInMb
	}).(pulumi.IntPtrOutput)
}

// Maximum allowed memory usage in MB
func (o SiteLimitsPtrOutput) MaxMemoryInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteLimits) *int {
		if v == nil {
			return nil
		}
		return v.MaxMemoryInMb
	}).(pulumi.IntPtrOutput)
}

// Maximum allowed CPU usage percentage
func (o SiteLimitsPtrOutput) MaxPercentageCpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SiteLimits) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxPercentageCpu
	}).(pulumi.Float64PtrOutput)
}

// Represents metric limits set on a web app.
type SiteLimitsResponse struct {
	// Maximum allowed disk size usage in MB
	MaxDiskSizeInMb *int `pulumi:"maxDiskSizeInMb"`
	// Maximum allowed memory usage in MB
	MaxMemoryInMb *int `pulumi:"maxMemoryInMb"`
	// Maximum allowed CPU usage percentage
	MaxPercentageCpu *float64 `pulumi:"maxPercentageCpu"`
}

// SiteLimitsResponseInput is an input type that accepts SiteLimitsResponseArgs and SiteLimitsResponseOutput values.
// You can construct a concrete instance of `SiteLimitsResponseInput` via:
//
//          SiteLimitsResponseArgs{...}
type SiteLimitsResponseInput interface {
	pulumi.Input

	ToSiteLimitsResponseOutput() SiteLimitsResponseOutput
	ToSiteLimitsResponseOutputWithContext(context.Context) SiteLimitsResponseOutput
}

// Represents metric limits set on a web app.
type SiteLimitsResponseArgs struct {
	// Maximum allowed disk size usage in MB
	MaxDiskSizeInMb pulumi.IntPtrInput `pulumi:"maxDiskSizeInMb"`
	// Maximum allowed memory usage in MB
	MaxMemoryInMb pulumi.IntPtrInput `pulumi:"maxMemoryInMb"`
	// Maximum allowed CPU usage percentage
	MaxPercentageCpu pulumi.Float64PtrInput `pulumi:"maxPercentageCpu"`
}

func (SiteLimitsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteLimitsResponse)(nil)).Elem()
}

func (i SiteLimitsResponseArgs) ToSiteLimitsResponseOutput() SiteLimitsResponseOutput {
	return i.ToSiteLimitsResponseOutputWithContext(context.Background())
}

func (i SiteLimitsResponseArgs) ToSiteLimitsResponseOutputWithContext(ctx context.Context) SiteLimitsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteLimitsResponseOutput)
}

func (i SiteLimitsResponseArgs) ToSiteLimitsResponsePtrOutput() SiteLimitsResponsePtrOutput {
	return i.ToSiteLimitsResponsePtrOutputWithContext(context.Background())
}

func (i SiteLimitsResponseArgs) ToSiteLimitsResponsePtrOutputWithContext(ctx context.Context) SiteLimitsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteLimitsResponseOutput).ToSiteLimitsResponsePtrOutputWithContext(ctx)
}

// SiteLimitsResponsePtrInput is an input type that accepts SiteLimitsResponseArgs, SiteLimitsResponsePtr and SiteLimitsResponsePtrOutput values.
// You can construct a concrete instance of `SiteLimitsResponsePtrInput` via:
//
//          SiteLimitsResponseArgs{...}
//
//  or:
//
//          nil
type SiteLimitsResponsePtrInput interface {
	pulumi.Input

	ToSiteLimitsResponsePtrOutput() SiteLimitsResponsePtrOutput
	ToSiteLimitsResponsePtrOutputWithContext(context.Context) SiteLimitsResponsePtrOutput
}

type siteLimitsResponsePtrType SiteLimitsResponseArgs

func SiteLimitsResponsePtr(v *SiteLimitsResponseArgs) SiteLimitsResponsePtrInput {
	return (*siteLimitsResponsePtrType)(v)
}

func (*siteLimitsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteLimitsResponse)(nil)).Elem()
}

func (i *siteLimitsResponsePtrType) ToSiteLimitsResponsePtrOutput() SiteLimitsResponsePtrOutput {
	return i.ToSiteLimitsResponsePtrOutputWithContext(context.Background())
}

func (i *siteLimitsResponsePtrType) ToSiteLimitsResponsePtrOutputWithContext(ctx context.Context) SiteLimitsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteLimitsResponsePtrOutput)
}

// Represents metric limits set on a web app.
type SiteLimitsResponseOutput struct{ *pulumi.OutputState }

func (SiteLimitsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteLimitsResponse)(nil)).Elem()
}

func (o SiteLimitsResponseOutput) ToSiteLimitsResponseOutput() SiteLimitsResponseOutput {
	return o
}

func (o SiteLimitsResponseOutput) ToSiteLimitsResponseOutputWithContext(ctx context.Context) SiteLimitsResponseOutput {
	return o
}

func (o SiteLimitsResponseOutput) ToSiteLimitsResponsePtrOutput() SiteLimitsResponsePtrOutput {
	return o.ToSiteLimitsResponsePtrOutputWithContext(context.Background())
}

func (o SiteLimitsResponseOutput) ToSiteLimitsResponsePtrOutputWithContext(ctx context.Context) SiteLimitsResponsePtrOutput {
	return o.ApplyT(func(v SiteLimitsResponse) *SiteLimitsResponse {
		return &v
	}).(SiteLimitsResponsePtrOutput)
}

// Maximum allowed disk size usage in MB
func (o SiteLimitsResponseOutput) MaxDiskSizeInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteLimitsResponse) *int { return v.MaxDiskSizeInMb }).(pulumi.IntPtrOutput)
}

// Maximum allowed memory usage in MB
func (o SiteLimitsResponseOutput) MaxMemoryInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteLimitsResponse) *int { return v.MaxMemoryInMb }).(pulumi.IntPtrOutput)
}

// Maximum allowed CPU usage percentage
func (o SiteLimitsResponseOutput) MaxPercentageCpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SiteLimitsResponse) *float64 { return v.MaxPercentageCpu }).(pulumi.Float64PtrOutput)
}

type SiteLimitsResponsePtrOutput struct{ *pulumi.OutputState }

func (SiteLimitsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteLimitsResponse)(nil)).Elem()
}

func (o SiteLimitsResponsePtrOutput) ToSiteLimitsResponsePtrOutput() SiteLimitsResponsePtrOutput {
	return o
}

func (o SiteLimitsResponsePtrOutput) ToSiteLimitsResponsePtrOutputWithContext(ctx context.Context) SiteLimitsResponsePtrOutput {
	return o
}

func (o SiteLimitsResponsePtrOutput) Elem() SiteLimitsResponseOutput {
	return o.ApplyT(func(v *SiteLimitsResponse) SiteLimitsResponse { return *v }).(SiteLimitsResponseOutput)
}

// Maximum allowed disk size usage in MB
func (o SiteLimitsResponsePtrOutput) MaxDiskSizeInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteLimitsResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxDiskSizeInMb
	}).(pulumi.IntPtrOutput)
}

// Maximum allowed memory usage in MB
func (o SiteLimitsResponsePtrOutput) MaxMemoryInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteLimitsResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxMemoryInMb
	}).(pulumi.IntPtrOutput)
}

// Maximum allowed CPU usage percentage
func (o SiteLimitsResponsePtrOutput) MaxPercentageCpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SiteLimitsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxPercentageCpu
	}).(pulumi.Float64PtrOutput)
}

type SitePremierAddOnType struct {
}

// SitePremierAddOnTypeInput is an input type that accepts SitePremierAddOnTypeArgs and SitePremierAddOnTypeOutput values.
// You can construct a concrete instance of `SitePremierAddOnTypeInput` via:
//
//          SitePremierAddOnTypeArgs{...}
type SitePremierAddOnTypeInput interface {
	pulumi.Input

	ToSitePremierAddOnTypeOutput() SitePremierAddOnTypeOutput
	ToSitePremierAddOnTypeOutputWithContext(context.Context) SitePremierAddOnTypeOutput
}

type SitePremierAddOnTypeArgs struct {
}

func (SitePremierAddOnTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SitePremierAddOnType)(nil)).Elem()
}

func (i SitePremierAddOnTypeArgs) ToSitePremierAddOnTypeOutput() SitePremierAddOnTypeOutput {
	return i.ToSitePremierAddOnTypeOutputWithContext(context.Background())
}

func (i SitePremierAddOnTypeArgs) ToSitePremierAddOnTypeOutputWithContext(ctx context.Context) SitePremierAddOnTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SitePremierAddOnTypeOutput)
}

type SitePremierAddOnTypeOutput struct{ *pulumi.OutputState }

func (SitePremierAddOnTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SitePremierAddOnType)(nil)).Elem()
}

func (o SitePremierAddOnTypeOutput) ToSitePremierAddOnTypeOutput() SitePremierAddOnTypeOutput {
	return o
}

func (o SitePremierAddOnTypeOutput) ToSitePremierAddOnTypeOutputWithContext(ctx context.Context) SitePremierAddOnTypeOutput {
	return o
}

type SitePremierAddOnSlotType struct {
}

// SitePremierAddOnSlotTypeInput is an input type that accepts SitePremierAddOnSlotTypeArgs and SitePremierAddOnSlotTypeOutput values.
// You can construct a concrete instance of `SitePremierAddOnSlotTypeInput` via:
//
//          SitePremierAddOnSlotTypeArgs{...}
type SitePremierAddOnSlotTypeInput interface {
	pulumi.Input

	ToSitePremierAddOnSlotTypeOutput() SitePremierAddOnSlotTypeOutput
	ToSitePremierAddOnSlotTypeOutputWithContext(context.Context) SitePremierAddOnSlotTypeOutput
}

type SitePremierAddOnSlotTypeArgs struct {
}

func (SitePremierAddOnSlotTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SitePremierAddOnSlotType)(nil)).Elem()
}

func (i SitePremierAddOnSlotTypeArgs) ToSitePremierAddOnSlotTypeOutput() SitePremierAddOnSlotTypeOutput {
	return i.ToSitePremierAddOnSlotTypeOutputWithContext(context.Background())
}

func (i SitePremierAddOnSlotTypeArgs) ToSitePremierAddOnSlotTypeOutputWithContext(ctx context.Context) SitePremierAddOnSlotTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SitePremierAddOnSlotTypeOutput)
}

type SitePremierAddOnSlotTypeOutput struct{ *pulumi.OutputState }

func (SitePremierAddOnSlotTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SitePremierAddOnSlotType)(nil)).Elem()
}

func (o SitePremierAddOnSlotTypeOutput) ToSitePremierAddOnSlotTypeOutput() SitePremierAddOnSlotTypeOutput {
	return o
}

func (o SitePremierAddOnSlotTypeOutput) ToSitePremierAddOnSlotTypeOutputWithContext(ctx context.Context) SitePremierAddOnSlotTypeOutput {
	return o
}

type SiteProperties struct {
	// Specifies if the client affinity is enabled when load balancing http request for multiple instances of the web app
	ClientAffinityEnabled *bool `pulumi:"clientAffinityEnabled"`
	// Specifies if the client certificate is enabled for the web app
	ClientCertEnabled *bool `pulumi:"clientCertEnabled"`
	// This is only valid for web app creation. If specified, web app is cloned from
	//             a source web app
	CloningInfo *CloningInfo `pulumi:"cloningInfo"`
	// Size of a function container
	ContainerSize *int `pulumi:"containerSize"`
	// True if the site is enabled; otherwise, false. Setting this  value to false disables the site (takes the site off line).
	Enabled *bool `pulumi:"enabled"`
	// Name of gateway app associated with web app
	GatewaySiteName *string `pulumi:"gatewaySiteName"`
	// Hostname SSL states are  used to manage the SSL bindings for site's hostnames.
	HostNameSslStates []HostNameSslState `pulumi:"hostNameSslStates"`
	// Specifies if the public hostnames are disabled the web app.
	//             If set to true the app is only accessible via API Management process
	HostNamesDisabled *bool `pulumi:"hostNamesDisabled"`
	// Specification for the hosting environment (App Service Environment) to use for the web app
	HostingEnvironmentProfile *HostingEnvironmentProfile `pulumi:"hostingEnvironmentProfile"`
	// Maximum number of workers
	//             This only applies to function container
	MaxNumberOfWorkers *int    `pulumi:"maxNumberOfWorkers"`
	MicroService       *string `pulumi:"microService"`
	// Name of web app
	Name *string `pulumi:"name"`
	// If set indicates whether to stop SCM (KUDU) site when the web app is stopped. Default is false.
	ScmSiteAlsoStopped *bool   `pulumi:"scmSiteAlsoStopped"`
	ServerFarmId       *string `pulumi:"serverFarmId"`
	// Configuration of web app
	SiteConfig *SiteConfig `pulumi:"siteConfig"`
}

// SitePropertiesInput is an input type that accepts SitePropertiesArgs and SitePropertiesOutput values.
// You can construct a concrete instance of `SitePropertiesInput` via:
//
//          SitePropertiesArgs{...}
type SitePropertiesInput interface {
	pulumi.Input

	ToSitePropertiesOutput() SitePropertiesOutput
	ToSitePropertiesOutputWithContext(context.Context) SitePropertiesOutput
}

type SitePropertiesArgs struct {
	// Specifies if the client affinity is enabled when load balancing http request for multiple instances of the web app
	ClientAffinityEnabled pulumi.BoolPtrInput `pulumi:"clientAffinityEnabled"`
	// Specifies if the client certificate is enabled for the web app
	ClientCertEnabled pulumi.BoolPtrInput `pulumi:"clientCertEnabled"`
	// This is only valid for web app creation. If specified, web app is cloned from
	//             a source web app
	CloningInfo CloningInfoPtrInput `pulumi:"cloningInfo"`
	// Size of a function container
	ContainerSize pulumi.IntPtrInput `pulumi:"containerSize"`
	// True if the site is enabled; otherwise, false. Setting this  value to false disables the site (takes the site off line).
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Name of gateway app associated with web app
	GatewaySiteName pulumi.StringPtrInput `pulumi:"gatewaySiteName"`
	// Hostname SSL states are  used to manage the SSL bindings for site's hostnames.
	HostNameSslStates HostNameSslStateArrayInput `pulumi:"hostNameSslStates"`
	// Specifies if the public hostnames are disabled the web app.
	//             If set to true the app is only accessible via API Management process
	HostNamesDisabled pulumi.BoolPtrInput `pulumi:"hostNamesDisabled"`
	// Specification for the hosting environment (App Service Environment) to use for the web app
	HostingEnvironmentProfile HostingEnvironmentProfilePtrInput `pulumi:"hostingEnvironmentProfile"`
	// Maximum number of workers
	//             This only applies to function container
	MaxNumberOfWorkers pulumi.IntPtrInput    `pulumi:"maxNumberOfWorkers"`
	MicroService       pulumi.StringPtrInput `pulumi:"microService"`
	// Name of web app
	Name pulumi.StringPtrInput `pulumi:"name"`
	// If set indicates whether to stop SCM (KUDU) site when the web app is stopped. Default is false.
	ScmSiteAlsoStopped pulumi.BoolPtrInput   `pulumi:"scmSiteAlsoStopped"`
	ServerFarmId       pulumi.StringPtrInput `pulumi:"serverFarmId"`
	// Configuration of web app
	SiteConfig SiteConfigPtrInput `pulumi:"siteConfig"`
}

func (SitePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteProperties)(nil)).Elem()
}

func (i SitePropertiesArgs) ToSitePropertiesOutput() SitePropertiesOutput {
	return i.ToSitePropertiesOutputWithContext(context.Background())
}

func (i SitePropertiesArgs) ToSitePropertiesOutputWithContext(ctx context.Context) SitePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SitePropertiesOutput)
}

func (i SitePropertiesArgs) ToSitePropertiesPtrOutput() SitePropertiesPtrOutput {
	return i.ToSitePropertiesPtrOutputWithContext(context.Background())
}

func (i SitePropertiesArgs) ToSitePropertiesPtrOutputWithContext(ctx context.Context) SitePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SitePropertiesOutput).ToSitePropertiesPtrOutputWithContext(ctx)
}

// SitePropertiesPtrInput is an input type that accepts SitePropertiesArgs, SitePropertiesPtr and SitePropertiesPtrOutput values.
// You can construct a concrete instance of `SitePropertiesPtrInput` via:
//
//          SitePropertiesArgs{...}
//
//  or:
//
//          nil
type SitePropertiesPtrInput interface {
	pulumi.Input

	ToSitePropertiesPtrOutput() SitePropertiesPtrOutput
	ToSitePropertiesPtrOutputWithContext(context.Context) SitePropertiesPtrOutput
}

type sitePropertiesPtrType SitePropertiesArgs

func SitePropertiesPtr(v *SitePropertiesArgs) SitePropertiesPtrInput {
	return (*sitePropertiesPtrType)(v)
}

func (*sitePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteProperties)(nil)).Elem()
}

func (i *sitePropertiesPtrType) ToSitePropertiesPtrOutput() SitePropertiesPtrOutput {
	return i.ToSitePropertiesPtrOutputWithContext(context.Background())
}

func (i *sitePropertiesPtrType) ToSitePropertiesPtrOutputWithContext(ctx context.Context) SitePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SitePropertiesPtrOutput)
}

type SitePropertiesOutput struct{ *pulumi.OutputState }

func (SitePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteProperties)(nil)).Elem()
}

func (o SitePropertiesOutput) ToSitePropertiesOutput() SitePropertiesOutput {
	return o
}

func (o SitePropertiesOutput) ToSitePropertiesOutputWithContext(ctx context.Context) SitePropertiesOutput {
	return o
}

func (o SitePropertiesOutput) ToSitePropertiesPtrOutput() SitePropertiesPtrOutput {
	return o.ToSitePropertiesPtrOutputWithContext(context.Background())
}

func (o SitePropertiesOutput) ToSitePropertiesPtrOutputWithContext(ctx context.Context) SitePropertiesPtrOutput {
	return o.ApplyT(func(v SiteProperties) *SiteProperties {
		return &v
	}).(SitePropertiesPtrOutput)
}

// Specifies if the client affinity is enabled when load balancing http request for multiple instances of the web app
func (o SitePropertiesOutput) ClientAffinityEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteProperties) *bool { return v.ClientAffinityEnabled }).(pulumi.BoolPtrOutput)
}

// Specifies if the client certificate is enabled for the web app
func (o SitePropertiesOutput) ClientCertEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteProperties) *bool { return v.ClientCertEnabled }).(pulumi.BoolPtrOutput)
}

// This is only valid for web app creation. If specified, web app is cloned from
//             a source web app
func (o SitePropertiesOutput) CloningInfo() CloningInfoPtrOutput {
	return o.ApplyT(func(v SiteProperties) *CloningInfo { return v.CloningInfo }).(CloningInfoPtrOutput)
}

// Size of a function container
func (o SitePropertiesOutput) ContainerSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteProperties) *int { return v.ContainerSize }).(pulumi.IntPtrOutput)
}

// True if the site is enabled; otherwise, false. Setting this  value to false disables the site (takes the site off line).
func (o SitePropertiesOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteProperties) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Name of gateway app associated with web app
func (o SitePropertiesOutput) GatewaySiteName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteProperties) *string { return v.GatewaySiteName }).(pulumi.StringPtrOutput)
}

// Hostname SSL states are  used to manage the SSL bindings for site's hostnames.
func (o SitePropertiesOutput) HostNameSslStates() HostNameSslStateArrayOutput {
	return o.ApplyT(func(v SiteProperties) []HostNameSslState { return v.HostNameSslStates }).(HostNameSslStateArrayOutput)
}

// Specifies if the public hostnames are disabled the web app.
//             If set to true the app is only accessible via API Management process
func (o SitePropertiesOutput) HostNamesDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteProperties) *bool { return v.HostNamesDisabled }).(pulumi.BoolPtrOutput)
}

// Specification for the hosting environment (App Service Environment) to use for the web app
func (o SitePropertiesOutput) HostingEnvironmentProfile() HostingEnvironmentProfilePtrOutput {
	return o.ApplyT(func(v SiteProperties) *HostingEnvironmentProfile { return v.HostingEnvironmentProfile }).(HostingEnvironmentProfilePtrOutput)
}

// Maximum number of workers
//             This only applies to function container
func (o SitePropertiesOutput) MaxNumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteProperties) *int { return v.MaxNumberOfWorkers }).(pulumi.IntPtrOutput)
}

func (o SitePropertiesOutput) MicroService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteProperties) *string { return v.MicroService }).(pulumi.StringPtrOutput)
}

// Name of web app
func (o SitePropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// If set indicates whether to stop SCM (KUDU) site when the web app is stopped. Default is false.
func (o SitePropertiesOutput) ScmSiteAlsoStopped() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteProperties) *bool { return v.ScmSiteAlsoStopped }).(pulumi.BoolPtrOutput)
}

func (o SitePropertiesOutput) ServerFarmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteProperties) *string { return v.ServerFarmId }).(pulumi.StringPtrOutput)
}

// Configuration of web app
func (o SitePropertiesOutput) SiteConfig() SiteConfigPtrOutput {
	return o.ApplyT(func(v SiteProperties) *SiteConfig { return v.SiteConfig }).(SiteConfigPtrOutput)
}

type SitePropertiesPtrOutput struct{ *pulumi.OutputState }

func (SitePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteProperties)(nil)).Elem()
}

func (o SitePropertiesPtrOutput) ToSitePropertiesPtrOutput() SitePropertiesPtrOutput {
	return o
}

func (o SitePropertiesPtrOutput) ToSitePropertiesPtrOutputWithContext(ctx context.Context) SitePropertiesPtrOutput {
	return o
}

func (o SitePropertiesPtrOutput) Elem() SitePropertiesOutput {
	return o.ApplyT(func(v *SiteProperties) SiteProperties { return *v }).(SitePropertiesOutput)
}

// Specifies if the client affinity is enabled when load balancing http request for multiple instances of the web app
func (o SitePropertiesPtrOutput) ClientAffinityEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteProperties) *bool {
		if v == nil {
			return nil
		}
		return v.ClientAffinityEnabled
	}).(pulumi.BoolPtrOutput)
}

// Specifies if the client certificate is enabled for the web app
func (o SitePropertiesPtrOutput) ClientCertEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteProperties) *bool {
		if v == nil {
			return nil
		}
		return v.ClientCertEnabled
	}).(pulumi.BoolPtrOutput)
}

// This is only valid for web app creation. If specified, web app is cloned from
//             a source web app
func (o SitePropertiesPtrOutput) CloningInfo() CloningInfoPtrOutput {
	return o.ApplyT(func(v *SiteProperties) *CloningInfo {
		if v == nil {
			return nil
		}
		return v.CloningInfo
	}).(CloningInfoPtrOutput)
}

// Size of a function container
func (o SitePropertiesPtrOutput) ContainerSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteProperties) *int {
		if v == nil {
			return nil
		}
		return v.ContainerSize
	}).(pulumi.IntPtrOutput)
}

// True if the site is enabled; otherwise, false. Setting this  value to false disables the site (takes the site off line).
func (o SitePropertiesPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Name of gateway app associated with web app
func (o SitePropertiesPtrOutput) GatewaySiteName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteProperties) *string {
		if v == nil {
			return nil
		}
		return v.GatewaySiteName
	}).(pulumi.StringPtrOutput)
}

// Hostname SSL states are  used to manage the SSL bindings for site's hostnames.
func (o SitePropertiesPtrOutput) HostNameSslStates() HostNameSslStateArrayOutput {
	return o.ApplyT(func(v *SiteProperties) []HostNameSslState {
		if v == nil {
			return nil
		}
		return v.HostNameSslStates
	}).(HostNameSslStateArrayOutput)
}

// Specifies if the public hostnames are disabled the web app.
//             If set to true the app is only accessible via API Management process
func (o SitePropertiesPtrOutput) HostNamesDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteProperties) *bool {
		if v == nil {
			return nil
		}
		return v.HostNamesDisabled
	}).(pulumi.BoolPtrOutput)
}

// Specification for the hosting environment (App Service Environment) to use for the web app
func (o SitePropertiesPtrOutput) HostingEnvironmentProfile() HostingEnvironmentProfilePtrOutput {
	return o.ApplyT(func(v *SiteProperties) *HostingEnvironmentProfile {
		if v == nil {
			return nil
		}
		return v.HostingEnvironmentProfile
	}).(HostingEnvironmentProfilePtrOutput)
}

// Maximum number of workers
//             This only applies to function container
func (o SitePropertiesPtrOutput) MaxNumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteProperties) *int {
		if v == nil {
			return nil
		}
		return v.MaxNumberOfWorkers
	}).(pulumi.IntPtrOutput)
}

func (o SitePropertiesPtrOutput) MicroService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteProperties) *string {
		if v == nil {
			return nil
		}
		return v.MicroService
	}).(pulumi.StringPtrOutput)
}

// Name of web app
func (o SitePropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// If set indicates whether to stop SCM (KUDU) site when the web app is stopped. Default is false.
func (o SitePropertiesPtrOutput) ScmSiteAlsoStopped() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteProperties) *bool {
		if v == nil {
			return nil
		}
		return v.ScmSiteAlsoStopped
	}).(pulumi.BoolPtrOutput)
}

func (o SitePropertiesPtrOutput) ServerFarmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteProperties) *string {
		if v == nil {
			return nil
		}
		return v.ServerFarmId
	}).(pulumi.StringPtrOutput)
}

// Configuration of web app
func (o SitePropertiesPtrOutput) SiteConfig() SiteConfigPtrOutput {
	return o.ApplyT(func(v *SiteProperties) *SiteConfig {
		if v == nil {
			return nil
		}
		return v.SiteConfig
	}).(SiteConfigPtrOutput)
}

// Class that represents a BizTalk Hybrid Connection
type SiteRelayServiceConnectionType struct {
	// Kind of resource
	Kind *string `pulumi:"kind"`
	// Resource Location
	Location string `pulumi:"location"`
	// Resource Name
	Name       *string                                        `pulumi:"name"`
	Properties RelayServiceConnectionEntityResponseProperties `pulumi:"properties"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type *string `pulumi:"type"`
}

// SiteRelayServiceConnectionTypeInput is an input type that accepts SiteRelayServiceConnectionTypeArgs and SiteRelayServiceConnectionTypeOutput values.
// You can construct a concrete instance of `SiteRelayServiceConnectionTypeInput` via:
//
//          SiteRelayServiceConnectionTypeArgs{...}
type SiteRelayServiceConnectionTypeInput interface {
	pulumi.Input

	ToSiteRelayServiceConnectionTypeOutput() SiteRelayServiceConnectionTypeOutput
	ToSiteRelayServiceConnectionTypeOutputWithContext(context.Context) SiteRelayServiceConnectionTypeOutput
}

// Class that represents a BizTalk Hybrid Connection
type SiteRelayServiceConnectionTypeArgs struct {
	// Kind of resource
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource Name
	Name       pulumi.StringPtrInput                               `pulumi:"name"`
	Properties RelayServiceConnectionEntityResponsePropertiesInput `pulumi:"properties"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SiteRelayServiceConnectionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteRelayServiceConnectionType)(nil)).Elem()
}

func (i SiteRelayServiceConnectionTypeArgs) ToSiteRelayServiceConnectionTypeOutput() SiteRelayServiceConnectionTypeOutput {
	return i.ToSiteRelayServiceConnectionTypeOutputWithContext(context.Background())
}

func (i SiteRelayServiceConnectionTypeArgs) ToSiteRelayServiceConnectionTypeOutputWithContext(ctx context.Context) SiteRelayServiceConnectionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteRelayServiceConnectionTypeOutput)
}

// Class that represents a BizTalk Hybrid Connection
type SiteRelayServiceConnectionTypeOutput struct{ *pulumi.OutputState }

func (SiteRelayServiceConnectionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteRelayServiceConnectionType)(nil)).Elem()
}

func (o SiteRelayServiceConnectionTypeOutput) ToSiteRelayServiceConnectionTypeOutput() SiteRelayServiceConnectionTypeOutput {
	return o
}

func (o SiteRelayServiceConnectionTypeOutput) ToSiteRelayServiceConnectionTypeOutputWithContext(ctx context.Context) SiteRelayServiceConnectionTypeOutput {
	return o
}

// Kind of resource
func (o SiteRelayServiceConnectionTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteRelayServiceConnectionType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location
func (o SiteRelayServiceConnectionTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v SiteRelayServiceConnectionType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name
func (o SiteRelayServiceConnectionTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteRelayServiceConnectionType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SiteRelayServiceConnectionTypeOutput) Properties() RelayServiceConnectionEntityResponsePropertiesOutput {
	return o.ApplyT(func(v SiteRelayServiceConnectionType) RelayServiceConnectionEntityResponseProperties {
		return v.Properties
	}).(RelayServiceConnectionEntityResponsePropertiesOutput)
}

// Resource tags
func (o SiteRelayServiceConnectionTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v SiteRelayServiceConnectionType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o SiteRelayServiceConnectionTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteRelayServiceConnectionType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Class that represents a BizTalk Hybrid Connection
type SiteRelayServiceConnectionSlotType struct {
	// Kind of resource
	Kind *string `pulumi:"kind"`
	// Resource Location
	Location string `pulumi:"location"`
	// Resource Name
	Name       *string                                        `pulumi:"name"`
	Properties RelayServiceConnectionEntityResponseProperties `pulumi:"properties"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type *string `pulumi:"type"`
}

// SiteRelayServiceConnectionSlotTypeInput is an input type that accepts SiteRelayServiceConnectionSlotTypeArgs and SiteRelayServiceConnectionSlotTypeOutput values.
// You can construct a concrete instance of `SiteRelayServiceConnectionSlotTypeInput` via:
//
//          SiteRelayServiceConnectionSlotTypeArgs{...}
type SiteRelayServiceConnectionSlotTypeInput interface {
	pulumi.Input

	ToSiteRelayServiceConnectionSlotTypeOutput() SiteRelayServiceConnectionSlotTypeOutput
	ToSiteRelayServiceConnectionSlotTypeOutputWithContext(context.Context) SiteRelayServiceConnectionSlotTypeOutput
}

// Class that represents a BizTalk Hybrid Connection
type SiteRelayServiceConnectionSlotTypeArgs struct {
	// Kind of resource
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource Name
	Name       pulumi.StringPtrInput                               `pulumi:"name"`
	Properties RelayServiceConnectionEntityResponsePropertiesInput `pulumi:"properties"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SiteRelayServiceConnectionSlotTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteRelayServiceConnectionSlotType)(nil)).Elem()
}

func (i SiteRelayServiceConnectionSlotTypeArgs) ToSiteRelayServiceConnectionSlotTypeOutput() SiteRelayServiceConnectionSlotTypeOutput {
	return i.ToSiteRelayServiceConnectionSlotTypeOutputWithContext(context.Background())
}

func (i SiteRelayServiceConnectionSlotTypeArgs) ToSiteRelayServiceConnectionSlotTypeOutputWithContext(ctx context.Context) SiteRelayServiceConnectionSlotTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteRelayServiceConnectionSlotTypeOutput)
}

// Class that represents a BizTalk Hybrid Connection
type SiteRelayServiceConnectionSlotTypeOutput struct{ *pulumi.OutputState }

func (SiteRelayServiceConnectionSlotTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteRelayServiceConnectionSlotType)(nil)).Elem()
}

func (o SiteRelayServiceConnectionSlotTypeOutput) ToSiteRelayServiceConnectionSlotTypeOutput() SiteRelayServiceConnectionSlotTypeOutput {
	return o
}

func (o SiteRelayServiceConnectionSlotTypeOutput) ToSiteRelayServiceConnectionSlotTypeOutputWithContext(ctx context.Context) SiteRelayServiceConnectionSlotTypeOutput {
	return o
}

// Kind of resource
func (o SiteRelayServiceConnectionSlotTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteRelayServiceConnectionSlotType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location
func (o SiteRelayServiceConnectionSlotTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v SiteRelayServiceConnectionSlotType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name
func (o SiteRelayServiceConnectionSlotTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteRelayServiceConnectionSlotType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SiteRelayServiceConnectionSlotTypeOutput) Properties() RelayServiceConnectionEntityResponsePropertiesOutput {
	return o.ApplyT(func(v SiteRelayServiceConnectionSlotType) RelayServiceConnectionEntityResponseProperties {
		return v.Properties
	}).(RelayServiceConnectionEntityResponsePropertiesOutput)
}

// Resource tags
func (o SiteRelayServiceConnectionSlotTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v SiteRelayServiceConnectionSlotType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o SiteRelayServiceConnectionSlotTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteRelayServiceConnectionSlotType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SiteResponseProperties struct {
	// Management information availability state for the web app. Possible values are Normal or Limited.
	//             Normal means that the site is running correctly and that management information for the site is available.
	//             Limited means that only partial management information for the site is available and that detailed site information is unavailable.
	AvailabilityState string `pulumi:"availabilityState"`
	// Specifies if the client affinity is enabled when load balancing http request for multiple instances of the web app
	ClientAffinityEnabled *bool `pulumi:"clientAffinityEnabled"`
	// Specifies if the client certificate is enabled for the web app
	ClientCertEnabled *bool `pulumi:"clientCertEnabled"`
	// This is only valid for web app creation. If specified, web app is cloned from
	//             a source web app
	CloningInfo *CloningInfoResponse `pulumi:"cloningInfo"`
	// Size of a function container
	ContainerSize *int `pulumi:"containerSize"`
	// Default hostname of the web app
	DefaultHostName string `pulumi:"defaultHostName"`
	// True if the site is enabled; otherwise, false. Setting this  value to false disables the site (takes the site off line).
	Enabled *bool `pulumi:"enabled"`
	// Hostnames for the web app that are enabled. Hostnames need to be assigned and enabled. If some hostnames are assigned but not enabled
	//             the app is not served on those hostnames
	EnabledHostNames []string `pulumi:"enabledHostNames"`
	// Name of gateway app associated with web app
	GatewaySiteName *string `pulumi:"gatewaySiteName"`
	// Hostname SSL states are  used to manage the SSL bindings for site's hostnames.
	HostNameSslStates []HostNameSslStateResponse `pulumi:"hostNameSslStates"`
	// Hostnames associated with web app
	HostNames []string `pulumi:"hostNames"`
	// Specifies if the public hostnames are disabled the web app.
	//             If set to true the app is only accessible via API Management process
	HostNamesDisabled *bool `pulumi:"hostNamesDisabled"`
	// Specification for the hosting environment (App Service Environment) to use for the web app
	HostingEnvironmentProfile *HostingEnvironmentProfileResponse `pulumi:"hostingEnvironmentProfile"`
	// Site is a default container
	IsDefaultContainer bool `pulumi:"isDefaultContainer"`
	// Last time web app was modified in UTC
	LastModifiedTimeUtc string `pulumi:"lastModifiedTimeUtc"`
	// Maximum number of workers
	//             This only applies to function container
	MaxNumberOfWorkers *int    `pulumi:"maxNumberOfWorkers"`
	MicroService       *string `pulumi:"microService"`
	// Name of web app
	Name *string `pulumi:"name"`
	// List of comma separated IP addresses that this web app uses for outbound connections. Those can be used when configuring firewall rules for databases accessed by this web app.
	OutboundIpAddresses string `pulumi:"outboundIpAddresses"`
	// If set indicates whether web app is deployed as a premium app
	PremiumAppDeployed bool `pulumi:"premiumAppDeployed"`
	// Name of repository site
	RepositorySiteName string `pulumi:"repositorySiteName"`
	// Resource group web app belongs to
	ResourceGroup string `pulumi:"resourceGroup"`
	// If set indicates whether to stop SCM (KUDU) site when the web app is stopped. Default is false.
	ScmSiteAlsoStopped *bool   `pulumi:"scmSiteAlsoStopped"`
	ServerFarmId       *string `pulumi:"serverFarmId"`
	// Configuration of web app
	SiteConfig *SiteConfigResponse `pulumi:"siteConfig"`
	// State of the web app
	State string `pulumi:"state"`
	// Read-only property that specifies which slot this app will swap into
	TargetSwapSlot string `pulumi:"targetSwapSlot"`
	// Read-only list of Azure Traffic manager hostnames associated with web app
	TrafficManagerHostNames []string `pulumi:"trafficManagerHostNames"`
	// State indicating whether web app has exceeded its quota usage
	UsageState string `pulumi:"usageState"`
}

// SiteResponsePropertiesInput is an input type that accepts SiteResponsePropertiesArgs and SiteResponsePropertiesOutput values.
// You can construct a concrete instance of `SiteResponsePropertiesInput` via:
//
//          SiteResponsePropertiesArgs{...}
type SiteResponsePropertiesInput interface {
	pulumi.Input

	ToSiteResponsePropertiesOutput() SiteResponsePropertiesOutput
	ToSiteResponsePropertiesOutputWithContext(context.Context) SiteResponsePropertiesOutput
}

type SiteResponsePropertiesArgs struct {
	// Management information availability state for the web app. Possible values are Normal or Limited.
	//             Normal means that the site is running correctly and that management information for the site is available.
	//             Limited means that only partial management information for the site is available and that detailed site information is unavailable.
	AvailabilityState pulumi.StringInput `pulumi:"availabilityState"`
	// Specifies if the client affinity is enabled when load balancing http request for multiple instances of the web app
	ClientAffinityEnabled pulumi.BoolPtrInput `pulumi:"clientAffinityEnabled"`
	// Specifies if the client certificate is enabled for the web app
	ClientCertEnabled pulumi.BoolPtrInput `pulumi:"clientCertEnabled"`
	// This is only valid for web app creation. If specified, web app is cloned from
	//             a source web app
	CloningInfo CloningInfoResponsePtrInput `pulumi:"cloningInfo"`
	// Size of a function container
	ContainerSize pulumi.IntPtrInput `pulumi:"containerSize"`
	// Default hostname of the web app
	DefaultHostName pulumi.StringInput `pulumi:"defaultHostName"`
	// True if the site is enabled; otherwise, false. Setting this  value to false disables the site (takes the site off line).
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Hostnames for the web app that are enabled. Hostnames need to be assigned and enabled. If some hostnames are assigned but not enabled
	//             the app is not served on those hostnames
	EnabledHostNames pulumi.StringArrayInput `pulumi:"enabledHostNames"`
	// Name of gateway app associated with web app
	GatewaySiteName pulumi.StringPtrInput `pulumi:"gatewaySiteName"`
	// Hostname SSL states are  used to manage the SSL bindings for site's hostnames.
	HostNameSslStates HostNameSslStateResponseArrayInput `pulumi:"hostNameSslStates"`
	// Hostnames associated with web app
	HostNames pulumi.StringArrayInput `pulumi:"hostNames"`
	// Specifies if the public hostnames are disabled the web app.
	//             If set to true the app is only accessible via API Management process
	HostNamesDisabled pulumi.BoolPtrInput `pulumi:"hostNamesDisabled"`
	// Specification for the hosting environment (App Service Environment) to use for the web app
	HostingEnvironmentProfile HostingEnvironmentProfileResponsePtrInput `pulumi:"hostingEnvironmentProfile"`
	// Site is a default container
	IsDefaultContainer pulumi.BoolInput `pulumi:"isDefaultContainer"`
	// Last time web app was modified in UTC
	LastModifiedTimeUtc pulumi.StringInput `pulumi:"lastModifiedTimeUtc"`
	// Maximum number of workers
	//             This only applies to function container
	MaxNumberOfWorkers pulumi.IntPtrInput    `pulumi:"maxNumberOfWorkers"`
	MicroService       pulumi.StringPtrInput `pulumi:"microService"`
	// Name of web app
	Name pulumi.StringPtrInput `pulumi:"name"`
	// List of comma separated IP addresses that this web app uses for outbound connections. Those can be used when configuring firewall rules for databases accessed by this web app.
	OutboundIpAddresses pulumi.StringInput `pulumi:"outboundIpAddresses"`
	// If set indicates whether web app is deployed as a premium app
	PremiumAppDeployed pulumi.BoolInput `pulumi:"premiumAppDeployed"`
	// Name of repository site
	RepositorySiteName pulumi.StringInput `pulumi:"repositorySiteName"`
	// Resource group web app belongs to
	ResourceGroup pulumi.StringInput `pulumi:"resourceGroup"`
	// If set indicates whether to stop SCM (KUDU) site when the web app is stopped. Default is false.
	ScmSiteAlsoStopped pulumi.BoolPtrInput   `pulumi:"scmSiteAlsoStopped"`
	ServerFarmId       pulumi.StringPtrInput `pulumi:"serverFarmId"`
	// Configuration of web app
	SiteConfig SiteConfigResponsePtrInput `pulumi:"siteConfig"`
	// State of the web app
	State pulumi.StringInput `pulumi:"state"`
	// Read-only property that specifies which slot this app will swap into
	TargetSwapSlot pulumi.StringInput `pulumi:"targetSwapSlot"`
	// Read-only list of Azure Traffic manager hostnames associated with web app
	TrafficManagerHostNames pulumi.StringArrayInput `pulumi:"trafficManagerHostNames"`
	// State indicating whether web app has exceeded its quota usage
	UsageState pulumi.StringInput `pulumi:"usageState"`
}

func (SiteResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteResponseProperties)(nil)).Elem()
}

func (i SiteResponsePropertiesArgs) ToSiteResponsePropertiesOutput() SiteResponsePropertiesOutput {
	return i.ToSiteResponsePropertiesOutputWithContext(context.Background())
}

func (i SiteResponsePropertiesArgs) ToSiteResponsePropertiesOutputWithContext(ctx context.Context) SiteResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteResponsePropertiesOutput)
}

func (i SiteResponsePropertiesArgs) ToSiteResponsePropertiesPtrOutput() SiteResponsePropertiesPtrOutput {
	return i.ToSiteResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i SiteResponsePropertiesArgs) ToSiteResponsePropertiesPtrOutputWithContext(ctx context.Context) SiteResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteResponsePropertiesOutput).ToSiteResponsePropertiesPtrOutputWithContext(ctx)
}

// SiteResponsePropertiesPtrInput is an input type that accepts SiteResponsePropertiesArgs, SiteResponsePropertiesPtr and SiteResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `SiteResponsePropertiesPtrInput` via:
//
//          SiteResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type SiteResponsePropertiesPtrInput interface {
	pulumi.Input

	ToSiteResponsePropertiesPtrOutput() SiteResponsePropertiesPtrOutput
	ToSiteResponsePropertiesPtrOutputWithContext(context.Context) SiteResponsePropertiesPtrOutput
}

type siteResponsePropertiesPtrType SiteResponsePropertiesArgs

func SiteResponsePropertiesPtr(v *SiteResponsePropertiesArgs) SiteResponsePropertiesPtrInput {
	return (*siteResponsePropertiesPtrType)(v)
}

func (*siteResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteResponseProperties)(nil)).Elem()
}

func (i *siteResponsePropertiesPtrType) ToSiteResponsePropertiesPtrOutput() SiteResponsePropertiesPtrOutput {
	return i.ToSiteResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *siteResponsePropertiesPtrType) ToSiteResponsePropertiesPtrOutputWithContext(ctx context.Context) SiteResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteResponsePropertiesPtrOutput)
}

type SiteResponsePropertiesOutput struct{ *pulumi.OutputState }

func (SiteResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteResponseProperties)(nil)).Elem()
}

func (o SiteResponsePropertiesOutput) ToSiteResponsePropertiesOutput() SiteResponsePropertiesOutput {
	return o
}

func (o SiteResponsePropertiesOutput) ToSiteResponsePropertiesOutputWithContext(ctx context.Context) SiteResponsePropertiesOutput {
	return o
}

func (o SiteResponsePropertiesOutput) ToSiteResponsePropertiesPtrOutput() SiteResponsePropertiesPtrOutput {
	return o.ToSiteResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o SiteResponsePropertiesOutput) ToSiteResponsePropertiesPtrOutputWithContext(ctx context.Context) SiteResponsePropertiesPtrOutput {
	return o.ApplyT(func(v SiteResponseProperties) *SiteResponseProperties {
		return &v
	}).(SiteResponsePropertiesPtrOutput)
}

// Management information availability state for the web app. Possible values are Normal or Limited.
//             Normal means that the site is running correctly and that management information for the site is available.
//             Limited means that only partial management information for the site is available and that detailed site information is unavailable.
func (o SiteResponsePropertiesOutput) AvailabilityState() pulumi.StringOutput {
	return o.ApplyT(func(v SiteResponseProperties) string { return v.AvailabilityState }).(pulumi.StringOutput)
}

// Specifies if the client affinity is enabled when load balancing http request for multiple instances of the web app
func (o SiteResponsePropertiesOutput) ClientAffinityEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteResponseProperties) *bool { return v.ClientAffinityEnabled }).(pulumi.BoolPtrOutput)
}

// Specifies if the client certificate is enabled for the web app
func (o SiteResponsePropertiesOutput) ClientCertEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteResponseProperties) *bool { return v.ClientCertEnabled }).(pulumi.BoolPtrOutput)
}

// This is only valid for web app creation. If specified, web app is cloned from
//             a source web app
func (o SiteResponsePropertiesOutput) CloningInfo() CloningInfoResponsePtrOutput {
	return o.ApplyT(func(v SiteResponseProperties) *CloningInfoResponse { return v.CloningInfo }).(CloningInfoResponsePtrOutput)
}

// Size of a function container
func (o SiteResponsePropertiesOutput) ContainerSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteResponseProperties) *int { return v.ContainerSize }).(pulumi.IntPtrOutput)
}

// Default hostname of the web app
func (o SiteResponsePropertiesOutput) DefaultHostName() pulumi.StringOutput {
	return o.ApplyT(func(v SiteResponseProperties) string { return v.DefaultHostName }).(pulumi.StringOutput)
}

// True if the site is enabled; otherwise, false. Setting this  value to false disables the site (takes the site off line).
func (o SiteResponsePropertiesOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteResponseProperties) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Hostnames for the web app that are enabled. Hostnames need to be assigned and enabled. If some hostnames are assigned but not enabled
//             the app is not served on those hostnames
func (o SiteResponsePropertiesOutput) EnabledHostNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SiteResponseProperties) []string { return v.EnabledHostNames }).(pulumi.StringArrayOutput)
}

// Name of gateway app associated with web app
func (o SiteResponsePropertiesOutput) GatewaySiteName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteResponseProperties) *string { return v.GatewaySiteName }).(pulumi.StringPtrOutput)
}

// Hostname SSL states are  used to manage the SSL bindings for site's hostnames.
func (o SiteResponsePropertiesOutput) HostNameSslStates() HostNameSslStateResponseArrayOutput {
	return o.ApplyT(func(v SiteResponseProperties) []HostNameSslStateResponse { return v.HostNameSslStates }).(HostNameSslStateResponseArrayOutput)
}

// Hostnames associated with web app
func (o SiteResponsePropertiesOutput) HostNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SiteResponseProperties) []string { return v.HostNames }).(pulumi.StringArrayOutput)
}

// Specifies if the public hostnames are disabled the web app.
//             If set to true the app is only accessible via API Management process
func (o SiteResponsePropertiesOutput) HostNamesDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteResponseProperties) *bool { return v.HostNamesDisabled }).(pulumi.BoolPtrOutput)
}

// Specification for the hosting environment (App Service Environment) to use for the web app
func (o SiteResponsePropertiesOutput) HostingEnvironmentProfile() HostingEnvironmentProfileResponsePtrOutput {
	return o.ApplyT(func(v SiteResponseProperties) *HostingEnvironmentProfileResponse { return v.HostingEnvironmentProfile }).(HostingEnvironmentProfileResponsePtrOutput)
}

// Site is a default container
func (o SiteResponsePropertiesOutput) IsDefaultContainer() pulumi.BoolOutput {
	return o.ApplyT(func(v SiteResponseProperties) bool { return v.IsDefaultContainer }).(pulumi.BoolOutput)
}

// Last time web app was modified in UTC
func (o SiteResponsePropertiesOutput) LastModifiedTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v SiteResponseProperties) string { return v.LastModifiedTimeUtc }).(pulumi.StringOutput)
}

// Maximum number of workers
//             This only applies to function container
func (o SiteResponsePropertiesOutput) MaxNumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteResponseProperties) *int { return v.MaxNumberOfWorkers }).(pulumi.IntPtrOutput)
}

func (o SiteResponsePropertiesOutput) MicroService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteResponseProperties) *string { return v.MicroService }).(pulumi.StringPtrOutput)
}

// Name of web app
func (o SiteResponsePropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteResponseProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// List of comma separated IP addresses that this web app uses for outbound connections. Those can be used when configuring firewall rules for databases accessed by this web app.
func (o SiteResponsePropertiesOutput) OutboundIpAddresses() pulumi.StringOutput {
	return o.ApplyT(func(v SiteResponseProperties) string { return v.OutboundIpAddresses }).(pulumi.StringOutput)
}

// If set indicates whether web app is deployed as a premium app
func (o SiteResponsePropertiesOutput) PremiumAppDeployed() pulumi.BoolOutput {
	return o.ApplyT(func(v SiteResponseProperties) bool { return v.PremiumAppDeployed }).(pulumi.BoolOutput)
}

// Name of repository site
func (o SiteResponsePropertiesOutput) RepositorySiteName() pulumi.StringOutput {
	return o.ApplyT(func(v SiteResponseProperties) string { return v.RepositorySiteName }).(pulumi.StringOutput)
}

// Resource group web app belongs to
func (o SiteResponsePropertiesOutput) ResourceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v SiteResponseProperties) string { return v.ResourceGroup }).(pulumi.StringOutput)
}

// If set indicates whether to stop SCM (KUDU) site when the web app is stopped. Default is false.
func (o SiteResponsePropertiesOutput) ScmSiteAlsoStopped() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteResponseProperties) *bool { return v.ScmSiteAlsoStopped }).(pulumi.BoolPtrOutput)
}

func (o SiteResponsePropertiesOutput) ServerFarmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteResponseProperties) *string { return v.ServerFarmId }).(pulumi.StringPtrOutput)
}

// Configuration of web app
func (o SiteResponsePropertiesOutput) SiteConfig() SiteConfigResponsePtrOutput {
	return o.ApplyT(func(v SiteResponseProperties) *SiteConfigResponse { return v.SiteConfig }).(SiteConfigResponsePtrOutput)
}

// State of the web app
func (o SiteResponsePropertiesOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v SiteResponseProperties) string { return v.State }).(pulumi.StringOutput)
}

// Read-only property that specifies which slot this app will swap into
func (o SiteResponsePropertiesOutput) TargetSwapSlot() pulumi.StringOutput {
	return o.ApplyT(func(v SiteResponseProperties) string { return v.TargetSwapSlot }).(pulumi.StringOutput)
}

// Read-only list of Azure Traffic manager hostnames associated with web app
func (o SiteResponsePropertiesOutput) TrafficManagerHostNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SiteResponseProperties) []string { return v.TrafficManagerHostNames }).(pulumi.StringArrayOutput)
}

// State indicating whether web app has exceeded its quota usage
func (o SiteResponsePropertiesOutput) UsageState() pulumi.StringOutput {
	return o.ApplyT(func(v SiteResponseProperties) string { return v.UsageState }).(pulumi.StringOutput)
}

type SiteResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (SiteResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteResponseProperties)(nil)).Elem()
}

func (o SiteResponsePropertiesPtrOutput) ToSiteResponsePropertiesPtrOutput() SiteResponsePropertiesPtrOutput {
	return o
}

func (o SiteResponsePropertiesPtrOutput) ToSiteResponsePropertiesPtrOutputWithContext(ctx context.Context) SiteResponsePropertiesPtrOutput {
	return o
}

func (o SiteResponsePropertiesPtrOutput) Elem() SiteResponsePropertiesOutput {
	return o.ApplyT(func(v *SiteResponseProperties) SiteResponseProperties { return *v }).(SiteResponsePropertiesOutput)
}

// Management information availability state for the web app. Possible values are Normal or Limited.
//             Normal means that the site is running correctly and that management information for the site is available.
//             Limited means that only partial management information for the site is available and that detailed site information is unavailable.
func (o SiteResponsePropertiesPtrOutput) AvailabilityState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.AvailabilityState
	}).(pulumi.StringPtrOutput)
}

// Specifies if the client affinity is enabled when load balancing http request for multiple instances of the web app
func (o SiteResponsePropertiesPtrOutput) ClientAffinityEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.ClientAffinityEnabled
	}).(pulumi.BoolPtrOutput)
}

// Specifies if the client certificate is enabled for the web app
func (o SiteResponsePropertiesPtrOutput) ClientCertEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.ClientCertEnabled
	}).(pulumi.BoolPtrOutput)
}

// This is only valid for web app creation. If specified, web app is cloned from
//             a source web app
func (o SiteResponsePropertiesPtrOutput) CloningInfo() CloningInfoResponsePtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *CloningInfoResponse {
		if v == nil {
			return nil
		}
		return v.CloningInfo
	}).(CloningInfoResponsePtrOutput)
}

// Size of a function container
func (o SiteResponsePropertiesPtrOutput) ContainerSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.ContainerSize
	}).(pulumi.IntPtrOutput)
}

// Default hostname of the web app
func (o SiteResponsePropertiesPtrOutput) DefaultHostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.DefaultHostName
	}).(pulumi.StringPtrOutput)
}

// True if the site is enabled; otherwise, false. Setting this  value to false disables the site (takes the site off line).
func (o SiteResponsePropertiesPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Hostnames for the web app that are enabled. Hostnames need to be assigned and enabled. If some hostnames are assigned but not enabled
//             the app is not served on those hostnames
func (o SiteResponsePropertiesPtrOutput) EnabledHostNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SiteResponseProperties) []string {
		if v == nil {
			return nil
		}
		return v.EnabledHostNames
	}).(pulumi.StringArrayOutput)
}

// Name of gateway app associated with web app
func (o SiteResponsePropertiesPtrOutput) GatewaySiteName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.GatewaySiteName
	}).(pulumi.StringPtrOutput)
}

// Hostname SSL states are  used to manage the SSL bindings for site's hostnames.
func (o SiteResponsePropertiesPtrOutput) HostNameSslStates() HostNameSslStateResponseArrayOutput {
	return o.ApplyT(func(v *SiteResponseProperties) []HostNameSslStateResponse {
		if v == nil {
			return nil
		}
		return v.HostNameSslStates
	}).(HostNameSslStateResponseArrayOutput)
}

// Hostnames associated with web app
func (o SiteResponsePropertiesPtrOutput) HostNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SiteResponseProperties) []string {
		if v == nil {
			return nil
		}
		return v.HostNames
	}).(pulumi.StringArrayOutput)
}

// Specifies if the public hostnames are disabled the web app.
//             If set to true the app is only accessible via API Management process
func (o SiteResponsePropertiesPtrOutput) HostNamesDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.HostNamesDisabled
	}).(pulumi.BoolPtrOutput)
}

// Specification for the hosting environment (App Service Environment) to use for the web app
func (o SiteResponsePropertiesPtrOutput) HostingEnvironmentProfile() HostingEnvironmentProfileResponsePtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *HostingEnvironmentProfileResponse {
		if v == nil {
			return nil
		}
		return v.HostingEnvironmentProfile
	}).(HostingEnvironmentProfileResponsePtrOutput)
}

// Site is a default container
func (o SiteResponsePropertiesPtrOutput) IsDefaultContainer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return &v.IsDefaultContainer
	}).(pulumi.BoolPtrOutput)
}

// Last time web app was modified in UTC
func (o SiteResponsePropertiesPtrOutput) LastModifiedTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.LastModifiedTimeUtc
	}).(pulumi.StringPtrOutput)
}

// Maximum number of workers
//             This only applies to function container
func (o SiteResponsePropertiesPtrOutput) MaxNumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.MaxNumberOfWorkers
	}).(pulumi.IntPtrOutput)
}

func (o SiteResponsePropertiesPtrOutput) MicroService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.MicroService
	}).(pulumi.StringPtrOutput)
}

// Name of web app
func (o SiteResponsePropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// List of comma separated IP addresses that this web app uses for outbound connections. Those can be used when configuring firewall rules for databases accessed by this web app.
func (o SiteResponsePropertiesPtrOutput) OutboundIpAddresses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.OutboundIpAddresses
	}).(pulumi.StringPtrOutput)
}

// If set indicates whether web app is deployed as a premium app
func (o SiteResponsePropertiesPtrOutput) PremiumAppDeployed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return &v.PremiumAppDeployed
	}).(pulumi.BoolPtrOutput)
}

// Name of repository site
func (o SiteResponsePropertiesPtrOutput) RepositorySiteName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.RepositorySiteName
	}).(pulumi.StringPtrOutput)
}

// Resource group web app belongs to
func (o SiteResponsePropertiesPtrOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGroup
	}).(pulumi.StringPtrOutput)
}

// If set indicates whether to stop SCM (KUDU) site when the web app is stopped. Default is false.
func (o SiteResponsePropertiesPtrOutput) ScmSiteAlsoStopped() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.ScmSiteAlsoStopped
	}).(pulumi.BoolPtrOutput)
}

func (o SiteResponsePropertiesPtrOutput) ServerFarmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.ServerFarmId
	}).(pulumi.StringPtrOutput)
}

// Configuration of web app
func (o SiteResponsePropertiesPtrOutput) SiteConfig() SiteConfigResponsePtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *SiteConfigResponse {
		if v == nil {
			return nil
		}
		return v.SiteConfig
	}).(SiteConfigResponsePtrOutput)
}

// State of the web app
func (o SiteResponsePropertiesPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.State
	}).(pulumi.StringPtrOutput)
}

// Read-only property that specifies which slot this app will swap into
func (o SiteResponsePropertiesPtrOutput) TargetSwapSlot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.TargetSwapSlot
	}).(pulumi.StringPtrOutput)
}

// Read-only list of Azure Traffic manager hostnames associated with web app
func (o SiteResponsePropertiesPtrOutput) TrafficManagerHostNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SiteResponseProperties) []string {
		if v == nil {
			return nil
		}
		return v.TrafficManagerHostNames
	}).(pulumi.StringArrayOutput)
}

// State indicating whether web app has exceeded its quota usage
func (o SiteResponsePropertiesPtrOutput) UsageState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.UsageState
	}).(pulumi.StringPtrOutput)
}

// Represents a web app
type SiteSlotType struct {
	// Kind of resource
	Kind *string `pulumi:"kind"`
	// Resource Location
	Location string `pulumi:"location"`
	// Resource Name
	Name       *string                `pulumi:"name"`
	Properties SiteResponseProperties `pulumi:"properties"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type *string `pulumi:"type"`
}

// SiteSlotTypeInput is an input type that accepts SiteSlotTypeArgs and SiteSlotTypeOutput values.
// You can construct a concrete instance of `SiteSlotTypeInput` via:
//
//          SiteSlotTypeArgs{...}
type SiteSlotTypeInput interface {
	pulumi.Input

	ToSiteSlotTypeOutput() SiteSlotTypeOutput
	ToSiteSlotTypeOutputWithContext(context.Context) SiteSlotTypeOutput
}

// Represents a web app
type SiteSlotTypeArgs struct {
	// Kind of resource
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource Name
	Name       pulumi.StringPtrInput       `pulumi:"name"`
	Properties SiteResponsePropertiesInput `pulumi:"properties"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SiteSlotTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteSlotType)(nil)).Elem()
}

func (i SiteSlotTypeArgs) ToSiteSlotTypeOutput() SiteSlotTypeOutput {
	return i.ToSiteSlotTypeOutputWithContext(context.Background())
}

func (i SiteSlotTypeArgs) ToSiteSlotTypeOutputWithContext(ctx context.Context) SiteSlotTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteSlotTypeOutput)
}

// Represents a web app
type SiteSlotTypeOutput struct{ *pulumi.OutputState }

func (SiteSlotTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteSlotType)(nil)).Elem()
}

func (o SiteSlotTypeOutput) ToSiteSlotTypeOutput() SiteSlotTypeOutput {
	return o
}

func (o SiteSlotTypeOutput) ToSiteSlotTypeOutputWithContext(ctx context.Context) SiteSlotTypeOutput {
	return o
}

// Kind of resource
func (o SiteSlotTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteSlotType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location
func (o SiteSlotTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v SiteSlotType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name
func (o SiteSlotTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteSlotType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SiteSlotTypeOutput) Properties() SiteResponsePropertiesOutput {
	return o.ApplyT(func(v SiteSlotType) SiteResponseProperties { return v.Properties }).(SiteResponsePropertiesOutput)
}

// Resource tags
func (o SiteSlotTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v SiteSlotType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o SiteSlotTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteSlotType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Describes the source control configuration for web app
type SiteSourceControlType struct {
	// Kind of resource
	Kind *string `pulumi:"kind"`
	// Resource Location
	Location string `pulumi:"location"`
	// Resource Name
	Name       *string                             `pulumi:"name"`
	Properties SiteSourceControlResponseProperties `pulumi:"properties"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type *string `pulumi:"type"`
}

// SiteSourceControlTypeInput is an input type that accepts SiteSourceControlTypeArgs and SiteSourceControlTypeOutput values.
// You can construct a concrete instance of `SiteSourceControlTypeInput` via:
//
//          SiteSourceControlTypeArgs{...}
type SiteSourceControlTypeInput interface {
	pulumi.Input

	ToSiteSourceControlTypeOutput() SiteSourceControlTypeOutput
	ToSiteSourceControlTypeOutputWithContext(context.Context) SiteSourceControlTypeOutput
}

// Describes the source control configuration for web app
type SiteSourceControlTypeArgs struct {
	// Kind of resource
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource Name
	Name       pulumi.StringPtrInput                    `pulumi:"name"`
	Properties SiteSourceControlResponsePropertiesInput `pulumi:"properties"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SiteSourceControlTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteSourceControlType)(nil)).Elem()
}

func (i SiteSourceControlTypeArgs) ToSiteSourceControlTypeOutput() SiteSourceControlTypeOutput {
	return i.ToSiteSourceControlTypeOutputWithContext(context.Background())
}

func (i SiteSourceControlTypeArgs) ToSiteSourceControlTypeOutputWithContext(ctx context.Context) SiteSourceControlTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteSourceControlTypeOutput)
}

// Describes the source control configuration for web app
type SiteSourceControlTypeOutput struct{ *pulumi.OutputState }

func (SiteSourceControlTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteSourceControlType)(nil)).Elem()
}

func (o SiteSourceControlTypeOutput) ToSiteSourceControlTypeOutput() SiteSourceControlTypeOutput {
	return o
}

func (o SiteSourceControlTypeOutput) ToSiteSourceControlTypeOutputWithContext(ctx context.Context) SiteSourceControlTypeOutput {
	return o
}

// Kind of resource
func (o SiteSourceControlTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteSourceControlType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location
func (o SiteSourceControlTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v SiteSourceControlType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name
func (o SiteSourceControlTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteSourceControlType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SiteSourceControlTypeOutput) Properties() SiteSourceControlResponsePropertiesOutput {
	return o.ApplyT(func(v SiteSourceControlType) SiteSourceControlResponseProperties { return v.Properties }).(SiteSourceControlResponsePropertiesOutput)
}

// Resource tags
func (o SiteSourceControlTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v SiteSourceControlType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o SiteSourceControlTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteSourceControlType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SiteSourceControlProperties struct {
	// Name of branch to use for deployment
	Branch *string `pulumi:"branch"`
	// Whether to manual or continuous integration
	DeploymentRollbackEnabled *bool `pulumi:"deploymentRollbackEnabled"`
	// Whether to manual or continuous integration
	IsManualIntegration *bool `pulumi:"isManualIntegration"`
	// Mercurial or Git repository type
	IsMercurial *bool `pulumi:"isMercurial"`
	// Repository or source control url
	RepoUrl *string `pulumi:"repoUrl"`
}

// SiteSourceControlPropertiesInput is an input type that accepts SiteSourceControlPropertiesArgs and SiteSourceControlPropertiesOutput values.
// You can construct a concrete instance of `SiteSourceControlPropertiesInput` via:
//
//          SiteSourceControlPropertiesArgs{...}
type SiteSourceControlPropertiesInput interface {
	pulumi.Input

	ToSiteSourceControlPropertiesOutput() SiteSourceControlPropertiesOutput
	ToSiteSourceControlPropertiesOutputWithContext(context.Context) SiteSourceControlPropertiesOutput
}

type SiteSourceControlPropertiesArgs struct {
	// Name of branch to use for deployment
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// Whether to manual or continuous integration
	DeploymentRollbackEnabled pulumi.BoolPtrInput `pulumi:"deploymentRollbackEnabled"`
	// Whether to manual or continuous integration
	IsManualIntegration pulumi.BoolPtrInput `pulumi:"isManualIntegration"`
	// Mercurial or Git repository type
	IsMercurial pulumi.BoolPtrInput `pulumi:"isMercurial"`
	// Repository or source control url
	RepoUrl pulumi.StringPtrInput `pulumi:"repoUrl"`
}

func (SiteSourceControlPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteSourceControlProperties)(nil)).Elem()
}

func (i SiteSourceControlPropertiesArgs) ToSiteSourceControlPropertiesOutput() SiteSourceControlPropertiesOutput {
	return i.ToSiteSourceControlPropertiesOutputWithContext(context.Background())
}

func (i SiteSourceControlPropertiesArgs) ToSiteSourceControlPropertiesOutputWithContext(ctx context.Context) SiteSourceControlPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteSourceControlPropertiesOutput)
}

func (i SiteSourceControlPropertiesArgs) ToSiteSourceControlPropertiesPtrOutput() SiteSourceControlPropertiesPtrOutput {
	return i.ToSiteSourceControlPropertiesPtrOutputWithContext(context.Background())
}

func (i SiteSourceControlPropertiesArgs) ToSiteSourceControlPropertiesPtrOutputWithContext(ctx context.Context) SiteSourceControlPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteSourceControlPropertiesOutput).ToSiteSourceControlPropertiesPtrOutputWithContext(ctx)
}

// SiteSourceControlPropertiesPtrInput is an input type that accepts SiteSourceControlPropertiesArgs, SiteSourceControlPropertiesPtr and SiteSourceControlPropertiesPtrOutput values.
// You can construct a concrete instance of `SiteSourceControlPropertiesPtrInput` via:
//
//          SiteSourceControlPropertiesArgs{...}
//
//  or:
//
//          nil
type SiteSourceControlPropertiesPtrInput interface {
	pulumi.Input

	ToSiteSourceControlPropertiesPtrOutput() SiteSourceControlPropertiesPtrOutput
	ToSiteSourceControlPropertiesPtrOutputWithContext(context.Context) SiteSourceControlPropertiesPtrOutput
}

type siteSourceControlPropertiesPtrType SiteSourceControlPropertiesArgs

func SiteSourceControlPropertiesPtr(v *SiteSourceControlPropertiesArgs) SiteSourceControlPropertiesPtrInput {
	return (*siteSourceControlPropertiesPtrType)(v)
}

func (*siteSourceControlPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteSourceControlProperties)(nil)).Elem()
}

func (i *siteSourceControlPropertiesPtrType) ToSiteSourceControlPropertiesPtrOutput() SiteSourceControlPropertiesPtrOutput {
	return i.ToSiteSourceControlPropertiesPtrOutputWithContext(context.Background())
}

func (i *siteSourceControlPropertiesPtrType) ToSiteSourceControlPropertiesPtrOutputWithContext(ctx context.Context) SiteSourceControlPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteSourceControlPropertiesPtrOutput)
}

type SiteSourceControlPropertiesOutput struct{ *pulumi.OutputState }

func (SiteSourceControlPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteSourceControlProperties)(nil)).Elem()
}

func (o SiteSourceControlPropertiesOutput) ToSiteSourceControlPropertiesOutput() SiteSourceControlPropertiesOutput {
	return o
}

func (o SiteSourceControlPropertiesOutput) ToSiteSourceControlPropertiesOutputWithContext(ctx context.Context) SiteSourceControlPropertiesOutput {
	return o
}

func (o SiteSourceControlPropertiesOutput) ToSiteSourceControlPropertiesPtrOutput() SiteSourceControlPropertiesPtrOutput {
	return o.ToSiteSourceControlPropertiesPtrOutputWithContext(context.Background())
}

func (o SiteSourceControlPropertiesOutput) ToSiteSourceControlPropertiesPtrOutputWithContext(ctx context.Context) SiteSourceControlPropertiesPtrOutput {
	return o.ApplyT(func(v SiteSourceControlProperties) *SiteSourceControlProperties {
		return &v
	}).(SiteSourceControlPropertiesPtrOutput)
}

// Name of branch to use for deployment
func (o SiteSourceControlPropertiesOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteSourceControlProperties) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Whether to manual or continuous integration
func (o SiteSourceControlPropertiesOutput) DeploymentRollbackEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteSourceControlProperties) *bool { return v.DeploymentRollbackEnabled }).(pulumi.BoolPtrOutput)
}

// Whether to manual or continuous integration
func (o SiteSourceControlPropertiesOutput) IsManualIntegration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteSourceControlProperties) *bool { return v.IsManualIntegration }).(pulumi.BoolPtrOutput)
}

// Mercurial or Git repository type
func (o SiteSourceControlPropertiesOutput) IsMercurial() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteSourceControlProperties) *bool { return v.IsMercurial }).(pulumi.BoolPtrOutput)
}

// Repository or source control url
func (o SiteSourceControlPropertiesOutput) RepoUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteSourceControlProperties) *string { return v.RepoUrl }).(pulumi.StringPtrOutput)
}

type SiteSourceControlPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SiteSourceControlPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteSourceControlProperties)(nil)).Elem()
}

func (o SiteSourceControlPropertiesPtrOutput) ToSiteSourceControlPropertiesPtrOutput() SiteSourceControlPropertiesPtrOutput {
	return o
}

func (o SiteSourceControlPropertiesPtrOutput) ToSiteSourceControlPropertiesPtrOutputWithContext(ctx context.Context) SiteSourceControlPropertiesPtrOutput {
	return o
}

func (o SiteSourceControlPropertiesPtrOutput) Elem() SiteSourceControlPropertiesOutput {
	return o.ApplyT(func(v *SiteSourceControlProperties) SiteSourceControlProperties { return *v }).(SiteSourceControlPropertiesOutput)
}

// Name of branch to use for deployment
func (o SiteSourceControlPropertiesPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteSourceControlProperties) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// Whether to manual or continuous integration
func (o SiteSourceControlPropertiesPtrOutput) DeploymentRollbackEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteSourceControlProperties) *bool {
		if v == nil {
			return nil
		}
		return v.DeploymentRollbackEnabled
	}).(pulumi.BoolPtrOutput)
}

// Whether to manual or continuous integration
func (o SiteSourceControlPropertiesPtrOutput) IsManualIntegration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteSourceControlProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsManualIntegration
	}).(pulumi.BoolPtrOutput)
}

// Mercurial or Git repository type
func (o SiteSourceControlPropertiesPtrOutput) IsMercurial() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteSourceControlProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsMercurial
	}).(pulumi.BoolPtrOutput)
}

// Repository or source control url
func (o SiteSourceControlPropertiesPtrOutput) RepoUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteSourceControlProperties) *string {
		if v == nil {
			return nil
		}
		return v.RepoUrl
	}).(pulumi.StringPtrOutput)
}

type SiteSourceControlResponseProperties struct {
	// Name of branch to use for deployment
	Branch *string `pulumi:"branch"`
	// Whether to manual or continuous integration
	DeploymentRollbackEnabled *bool `pulumi:"deploymentRollbackEnabled"`
	// Whether to manual or continuous integration
	IsManualIntegration *bool `pulumi:"isManualIntegration"`
	// Mercurial or Git repository type
	IsMercurial *bool `pulumi:"isMercurial"`
	// Repository or source control url
	RepoUrl *string `pulumi:"repoUrl"`
}

// SiteSourceControlResponsePropertiesInput is an input type that accepts SiteSourceControlResponsePropertiesArgs and SiteSourceControlResponsePropertiesOutput values.
// You can construct a concrete instance of `SiteSourceControlResponsePropertiesInput` via:
//
//          SiteSourceControlResponsePropertiesArgs{...}
type SiteSourceControlResponsePropertiesInput interface {
	pulumi.Input

	ToSiteSourceControlResponsePropertiesOutput() SiteSourceControlResponsePropertiesOutput
	ToSiteSourceControlResponsePropertiesOutputWithContext(context.Context) SiteSourceControlResponsePropertiesOutput
}

type SiteSourceControlResponsePropertiesArgs struct {
	// Name of branch to use for deployment
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// Whether to manual or continuous integration
	DeploymentRollbackEnabled pulumi.BoolPtrInput `pulumi:"deploymentRollbackEnabled"`
	// Whether to manual or continuous integration
	IsManualIntegration pulumi.BoolPtrInput `pulumi:"isManualIntegration"`
	// Mercurial or Git repository type
	IsMercurial pulumi.BoolPtrInput `pulumi:"isMercurial"`
	// Repository or source control url
	RepoUrl pulumi.StringPtrInput `pulumi:"repoUrl"`
}

func (SiteSourceControlResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteSourceControlResponseProperties)(nil)).Elem()
}

func (i SiteSourceControlResponsePropertiesArgs) ToSiteSourceControlResponsePropertiesOutput() SiteSourceControlResponsePropertiesOutput {
	return i.ToSiteSourceControlResponsePropertiesOutputWithContext(context.Background())
}

func (i SiteSourceControlResponsePropertiesArgs) ToSiteSourceControlResponsePropertiesOutputWithContext(ctx context.Context) SiteSourceControlResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteSourceControlResponsePropertiesOutput)
}

func (i SiteSourceControlResponsePropertiesArgs) ToSiteSourceControlResponsePropertiesPtrOutput() SiteSourceControlResponsePropertiesPtrOutput {
	return i.ToSiteSourceControlResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i SiteSourceControlResponsePropertiesArgs) ToSiteSourceControlResponsePropertiesPtrOutputWithContext(ctx context.Context) SiteSourceControlResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteSourceControlResponsePropertiesOutput).ToSiteSourceControlResponsePropertiesPtrOutputWithContext(ctx)
}

// SiteSourceControlResponsePropertiesPtrInput is an input type that accepts SiteSourceControlResponsePropertiesArgs, SiteSourceControlResponsePropertiesPtr and SiteSourceControlResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `SiteSourceControlResponsePropertiesPtrInput` via:
//
//          SiteSourceControlResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type SiteSourceControlResponsePropertiesPtrInput interface {
	pulumi.Input

	ToSiteSourceControlResponsePropertiesPtrOutput() SiteSourceControlResponsePropertiesPtrOutput
	ToSiteSourceControlResponsePropertiesPtrOutputWithContext(context.Context) SiteSourceControlResponsePropertiesPtrOutput
}

type siteSourceControlResponsePropertiesPtrType SiteSourceControlResponsePropertiesArgs

func SiteSourceControlResponsePropertiesPtr(v *SiteSourceControlResponsePropertiesArgs) SiteSourceControlResponsePropertiesPtrInput {
	return (*siteSourceControlResponsePropertiesPtrType)(v)
}

func (*siteSourceControlResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteSourceControlResponseProperties)(nil)).Elem()
}

func (i *siteSourceControlResponsePropertiesPtrType) ToSiteSourceControlResponsePropertiesPtrOutput() SiteSourceControlResponsePropertiesPtrOutput {
	return i.ToSiteSourceControlResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *siteSourceControlResponsePropertiesPtrType) ToSiteSourceControlResponsePropertiesPtrOutputWithContext(ctx context.Context) SiteSourceControlResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteSourceControlResponsePropertiesPtrOutput)
}

type SiteSourceControlResponsePropertiesOutput struct{ *pulumi.OutputState }

func (SiteSourceControlResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteSourceControlResponseProperties)(nil)).Elem()
}

func (o SiteSourceControlResponsePropertiesOutput) ToSiteSourceControlResponsePropertiesOutput() SiteSourceControlResponsePropertiesOutput {
	return o
}

func (o SiteSourceControlResponsePropertiesOutput) ToSiteSourceControlResponsePropertiesOutputWithContext(ctx context.Context) SiteSourceControlResponsePropertiesOutput {
	return o
}

func (o SiteSourceControlResponsePropertiesOutput) ToSiteSourceControlResponsePropertiesPtrOutput() SiteSourceControlResponsePropertiesPtrOutput {
	return o.ToSiteSourceControlResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o SiteSourceControlResponsePropertiesOutput) ToSiteSourceControlResponsePropertiesPtrOutputWithContext(ctx context.Context) SiteSourceControlResponsePropertiesPtrOutput {
	return o.ApplyT(func(v SiteSourceControlResponseProperties) *SiteSourceControlResponseProperties {
		return &v
	}).(SiteSourceControlResponsePropertiesPtrOutput)
}

// Name of branch to use for deployment
func (o SiteSourceControlResponsePropertiesOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteSourceControlResponseProperties) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Whether to manual or continuous integration
func (o SiteSourceControlResponsePropertiesOutput) DeploymentRollbackEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteSourceControlResponseProperties) *bool { return v.DeploymentRollbackEnabled }).(pulumi.BoolPtrOutput)
}

// Whether to manual or continuous integration
func (o SiteSourceControlResponsePropertiesOutput) IsManualIntegration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteSourceControlResponseProperties) *bool { return v.IsManualIntegration }).(pulumi.BoolPtrOutput)
}

// Mercurial or Git repository type
func (o SiteSourceControlResponsePropertiesOutput) IsMercurial() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteSourceControlResponseProperties) *bool { return v.IsMercurial }).(pulumi.BoolPtrOutput)
}

// Repository or source control url
func (o SiteSourceControlResponsePropertiesOutput) RepoUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteSourceControlResponseProperties) *string { return v.RepoUrl }).(pulumi.StringPtrOutput)
}

type SiteSourceControlResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (SiteSourceControlResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteSourceControlResponseProperties)(nil)).Elem()
}

func (o SiteSourceControlResponsePropertiesPtrOutput) ToSiteSourceControlResponsePropertiesPtrOutput() SiteSourceControlResponsePropertiesPtrOutput {
	return o
}

func (o SiteSourceControlResponsePropertiesPtrOutput) ToSiteSourceControlResponsePropertiesPtrOutputWithContext(ctx context.Context) SiteSourceControlResponsePropertiesPtrOutput {
	return o
}

func (o SiteSourceControlResponsePropertiesPtrOutput) Elem() SiteSourceControlResponsePropertiesOutput {
	return o.ApplyT(func(v *SiteSourceControlResponseProperties) SiteSourceControlResponseProperties { return *v }).(SiteSourceControlResponsePropertiesOutput)
}

// Name of branch to use for deployment
func (o SiteSourceControlResponsePropertiesPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteSourceControlResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// Whether to manual or continuous integration
func (o SiteSourceControlResponsePropertiesPtrOutput) DeploymentRollbackEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteSourceControlResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.DeploymentRollbackEnabled
	}).(pulumi.BoolPtrOutput)
}

// Whether to manual or continuous integration
func (o SiteSourceControlResponsePropertiesPtrOutput) IsManualIntegration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteSourceControlResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsManualIntegration
	}).(pulumi.BoolPtrOutput)
}

// Mercurial or Git repository type
func (o SiteSourceControlResponsePropertiesPtrOutput) IsMercurial() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteSourceControlResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsMercurial
	}).(pulumi.BoolPtrOutput)
}

// Repository or source control url
func (o SiteSourceControlResponsePropertiesPtrOutput) RepoUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteSourceControlResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.RepoUrl
	}).(pulumi.StringPtrOutput)
}

// Describes the source control configuration for web app
type SiteSourceControlSlotType struct {
	// Kind of resource
	Kind *string `pulumi:"kind"`
	// Resource Location
	Location string `pulumi:"location"`
	// Resource Name
	Name       *string                             `pulumi:"name"`
	Properties SiteSourceControlResponseProperties `pulumi:"properties"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type *string `pulumi:"type"`
}

// SiteSourceControlSlotTypeInput is an input type that accepts SiteSourceControlSlotTypeArgs and SiteSourceControlSlotTypeOutput values.
// You can construct a concrete instance of `SiteSourceControlSlotTypeInput` via:
//
//          SiteSourceControlSlotTypeArgs{...}
type SiteSourceControlSlotTypeInput interface {
	pulumi.Input

	ToSiteSourceControlSlotTypeOutput() SiteSourceControlSlotTypeOutput
	ToSiteSourceControlSlotTypeOutputWithContext(context.Context) SiteSourceControlSlotTypeOutput
}

// Describes the source control configuration for web app
type SiteSourceControlSlotTypeArgs struct {
	// Kind of resource
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource Name
	Name       pulumi.StringPtrInput                    `pulumi:"name"`
	Properties SiteSourceControlResponsePropertiesInput `pulumi:"properties"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SiteSourceControlSlotTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteSourceControlSlotType)(nil)).Elem()
}

func (i SiteSourceControlSlotTypeArgs) ToSiteSourceControlSlotTypeOutput() SiteSourceControlSlotTypeOutput {
	return i.ToSiteSourceControlSlotTypeOutputWithContext(context.Background())
}

func (i SiteSourceControlSlotTypeArgs) ToSiteSourceControlSlotTypeOutputWithContext(ctx context.Context) SiteSourceControlSlotTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteSourceControlSlotTypeOutput)
}

// Describes the source control configuration for web app
type SiteSourceControlSlotTypeOutput struct{ *pulumi.OutputState }

func (SiteSourceControlSlotTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteSourceControlSlotType)(nil)).Elem()
}

func (o SiteSourceControlSlotTypeOutput) ToSiteSourceControlSlotTypeOutput() SiteSourceControlSlotTypeOutput {
	return o
}

func (o SiteSourceControlSlotTypeOutput) ToSiteSourceControlSlotTypeOutputWithContext(ctx context.Context) SiteSourceControlSlotTypeOutput {
	return o
}

// Kind of resource
func (o SiteSourceControlSlotTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteSourceControlSlotType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location
func (o SiteSourceControlSlotTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v SiteSourceControlSlotType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name
func (o SiteSourceControlSlotTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteSourceControlSlotType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SiteSourceControlSlotTypeOutput) Properties() SiteSourceControlResponsePropertiesOutput {
	return o.ApplyT(func(v SiteSourceControlSlotType) SiteSourceControlResponseProperties { return v.Properties }).(SiteSourceControlResponsePropertiesOutput)
}

// Resource tags
func (o SiteSourceControlSlotTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v SiteSourceControlSlotType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o SiteSourceControlSlotTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteSourceControlSlotType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// VNETInfo contract. This contract is public and is a stripped down version of VNETInfoInternal
type SiteVNETConnectionType struct {
	// Kind of resource
	Kind *string `pulumi:"kind"`
	// Resource Location
	Location string `pulumi:"location"`
	// Resource Name
	Name       *string                    `pulumi:"name"`
	Properties VnetInfoResponseProperties `pulumi:"properties"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type *string `pulumi:"type"`
}

// SiteVNETConnectionTypeInput is an input type that accepts SiteVNETConnectionTypeArgs and SiteVNETConnectionTypeOutput values.
// You can construct a concrete instance of `SiteVNETConnectionTypeInput` via:
//
//          SiteVNETConnectionTypeArgs{...}
type SiteVNETConnectionTypeInput interface {
	pulumi.Input

	ToSiteVNETConnectionTypeOutput() SiteVNETConnectionTypeOutput
	ToSiteVNETConnectionTypeOutputWithContext(context.Context) SiteVNETConnectionTypeOutput
}

// VNETInfo contract. This contract is public and is a stripped down version of VNETInfoInternal
type SiteVNETConnectionTypeArgs struct {
	// Kind of resource
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource Name
	Name       pulumi.StringPtrInput           `pulumi:"name"`
	Properties VnetInfoResponsePropertiesInput `pulumi:"properties"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SiteVNETConnectionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteVNETConnectionType)(nil)).Elem()
}

func (i SiteVNETConnectionTypeArgs) ToSiteVNETConnectionTypeOutput() SiteVNETConnectionTypeOutput {
	return i.ToSiteVNETConnectionTypeOutputWithContext(context.Background())
}

func (i SiteVNETConnectionTypeArgs) ToSiteVNETConnectionTypeOutputWithContext(ctx context.Context) SiteVNETConnectionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteVNETConnectionTypeOutput)
}

// VNETInfo contract. This contract is public and is a stripped down version of VNETInfoInternal
type SiteVNETConnectionTypeOutput struct{ *pulumi.OutputState }

func (SiteVNETConnectionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteVNETConnectionType)(nil)).Elem()
}

func (o SiteVNETConnectionTypeOutput) ToSiteVNETConnectionTypeOutput() SiteVNETConnectionTypeOutput {
	return o
}

func (o SiteVNETConnectionTypeOutput) ToSiteVNETConnectionTypeOutputWithContext(ctx context.Context) SiteVNETConnectionTypeOutput {
	return o
}

// Kind of resource
func (o SiteVNETConnectionTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteVNETConnectionType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location
func (o SiteVNETConnectionTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v SiteVNETConnectionType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name
func (o SiteVNETConnectionTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteVNETConnectionType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SiteVNETConnectionTypeOutput) Properties() VnetInfoResponsePropertiesOutput {
	return o.ApplyT(func(v SiteVNETConnectionType) VnetInfoResponseProperties { return v.Properties }).(VnetInfoResponsePropertiesOutput)
}

// Resource tags
func (o SiteVNETConnectionTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v SiteVNETConnectionType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o SiteVNETConnectionTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteVNETConnectionType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// VNETInfo contract. This contract is public and is a stripped down version of VNETInfoInternal
type SiteVNETConnectionSlotType struct {
	// Kind of resource
	Kind *string `pulumi:"kind"`
	// Resource Location
	Location string `pulumi:"location"`
	// Resource Name
	Name       *string                    `pulumi:"name"`
	Properties VnetInfoResponseProperties `pulumi:"properties"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type *string `pulumi:"type"`
}

// SiteVNETConnectionSlotTypeInput is an input type that accepts SiteVNETConnectionSlotTypeArgs and SiteVNETConnectionSlotTypeOutput values.
// You can construct a concrete instance of `SiteVNETConnectionSlotTypeInput` via:
//
//          SiteVNETConnectionSlotTypeArgs{...}
type SiteVNETConnectionSlotTypeInput interface {
	pulumi.Input

	ToSiteVNETConnectionSlotTypeOutput() SiteVNETConnectionSlotTypeOutput
	ToSiteVNETConnectionSlotTypeOutputWithContext(context.Context) SiteVNETConnectionSlotTypeOutput
}

// VNETInfo contract. This contract is public and is a stripped down version of VNETInfoInternal
type SiteVNETConnectionSlotTypeArgs struct {
	// Kind of resource
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource Name
	Name       pulumi.StringPtrInput           `pulumi:"name"`
	Properties VnetInfoResponsePropertiesInput `pulumi:"properties"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SiteVNETConnectionSlotTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteVNETConnectionSlotType)(nil)).Elem()
}

func (i SiteVNETConnectionSlotTypeArgs) ToSiteVNETConnectionSlotTypeOutput() SiteVNETConnectionSlotTypeOutput {
	return i.ToSiteVNETConnectionSlotTypeOutputWithContext(context.Background())
}

func (i SiteVNETConnectionSlotTypeArgs) ToSiteVNETConnectionSlotTypeOutputWithContext(ctx context.Context) SiteVNETConnectionSlotTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteVNETConnectionSlotTypeOutput)
}

// VNETInfo contract. This contract is public and is a stripped down version of VNETInfoInternal
type SiteVNETConnectionSlotTypeOutput struct{ *pulumi.OutputState }

func (SiteVNETConnectionSlotTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteVNETConnectionSlotType)(nil)).Elem()
}

func (o SiteVNETConnectionSlotTypeOutput) ToSiteVNETConnectionSlotTypeOutput() SiteVNETConnectionSlotTypeOutput {
	return o
}

func (o SiteVNETConnectionSlotTypeOutput) ToSiteVNETConnectionSlotTypeOutputWithContext(ctx context.Context) SiteVNETConnectionSlotTypeOutput {
	return o
}

// Kind of resource
func (o SiteVNETConnectionSlotTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteVNETConnectionSlotType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location
func (o SiteVNETConnectionSlotTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v SiteVNETConnectionSlotType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name
func (o SiteVNETConnectionSlotTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteVNETConnectionSlotType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SiteVNETConnectionSlotTypeOutput) Properties() VnetInfoResponsePropertiesOutput {
	return o.ApplyT(func(v SiteVNETConnectionSlotType) VnetInfoResponseProperties { return v.Properties }).(VnetInfoResponsePropertiesOutput)
}

// Resource tags
func (o SiteVNETConnectionSlotTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v SiteVNETConnectionSlotType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o SiteVNETConnectionSlotTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteVNETConnectionSlotType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Describes a sku for a scalable resource
type SkuDescription struct {
	// Current number of instances assigned to the resource
	Capacity *int `pulumi:"capacity"`
	// Family code of the resource sku
	Family *string `pulumi:"family"`
	// Name of the resource sku
	Name *string `pulumi:"name"`
	// Size specifier of the resource sku
	Size *string `pulumi:"size"`
	// Service Tier of the resource sku
	Tier *string `pulumi:"tier"`
}

// SkuDescriptionInput is an input type that accepts SkuDescriptionArgs and SkuDescriptionOutput values.
// You can construct a concrete instance of `SkuDescriptionInput` via:
//
//          SkuDescriptionArgs{...}
type SkuDescriptionInput interface {
	pulumi.Input

	ToSkuDescriptionOutput() SkuDescriptionOutput
	ToSkuDescriptionOutputWithContext(context.Context) SkuDescriptionOutput
}

// Describes a sku for a scalable resource
type SkuDescriptionArgs struct {
	// Current number of instances assigned to the resource
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Family code of the resource sku
	Family pulumi.StringPtrInput `pulumi:"family"`
	// Name of the resource sku
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Size specifier of the resource sku
	Size pulumi.StringPtrInput `pulumi:"size"`
	// Service Tier of the resource sku
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuDescriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuDescription)(nil)).Elem()
}

func (i SkuDescriptionArgs) ToSkuDescriptionOutput() SkuDescriptionOutput {
	return i.ToSkuDescriptionOutputWithContext(context.Background())
}

func (i SkuDescriptionArgs) ToSkuDescriptionOutputWithContext(ctx context.Context) SkuDescriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuDescriptionOutput)
}

func (i SkuDescriptionArgs) ToSkuDescriptionPtrOutput() SkuDescriptionPtrOutput {
	return i.ToSkuDescriptionPtrOutputWithContext(context.Background())
}

func (i SkuDescriptionArgs) ToSkuDescriptionPtrOutputWithContext(ctx context.Context) SkuDescriptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuDescriptionOutput).ToSkuDescriptionPtrOutputWithContext(ctx)
}

// SkuDescriptionPtrInput is an input type that accepts SkuDescriptionArgs, SkuDescriptionPtr and SkuDescriptionPtrOutput values.
// You can construct a concrete instance of `SkuDescriptionPtrInput` via:
//
//          SkuDescriptionArgs{...}
//
//  or:
//
//          nil
type SkuDescriptionPtrInput interface {
	pulumi.Input

	ToSkuDescriptionPtrOutput() SkuDescriptionPtrOutput
	ToSkuDescriptionPtrOutputWithContext(context.Context) SkuDescriptionPtrOutput
}

type skuDescriptionPtrType SkuDescriptionArgs

func SkuDescriptionPtr(v *SkuDescriptionArgs) SkuDescriptionPtrInput {
	return (*skuDescriptionPtrType)(v)
}

func (*skuDescriptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuDescription)(nil)).Elem()
}

func (i *skuDescriptionPtrType) ToSkuDescriptionPtrOutput() SkuDescriptionPtrOutput {
	return i.ToSkuDescriptionPtrOutputWithContext(context.Background())
}

func (i *skuDescriptionPtrType) ToSkuDescriptionPtrOutputWithContext(ctx context.Context) SkuDescriptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuDescriptionPtrOutput)
}

// Describes a sku for a scalable resource
type SkuDescriptionOutput struct{ *pulumi.OutputState }

func (SkuDescriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuDescription)(nil)).Elem()
}

func (o SkuDescriptionOutput) ToSkuDescriptionOutput() SkuDescriptionOutput {
	return o
}

func (o SkuDescriptionOutput) ToSkuDescriptionOutputWithContext(ctx context.Context) SkuDescriptionOutput {
	return o
}

func (o SkuDescriptionOutput) ToSkuDescriptionPtrOutput() SkuDescriptionPtrOutput {
	return o.ToSkuDescriptionPtrOutputWithContext(context.Background())
}

func (o SkuDescriptionOutput) ToSkuDescriptionPtrOutputWithContext(ctx context.Context) SkuDescriptionPtrOutput {
	return o.ApplyT(func(v SkuDescription) *SkuDescription {
		return &v
	}).(SkuDescriptionPtrOutput)
}

// Current number of instances assigned to the resource
func (o SkuDescriptionOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuDescription) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Family code of the resource sku
func (o SkuDescriptionOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescription) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// Name of the resource sku
func (o SkuDescriptionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescription) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Size specifier of the resource sku
func (o SkuDescriptionOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescription) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// Service Tier of the resource sku
func (o SkuDescriptionOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescription) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuDescriptionPtrOutput struct{ *pulumi.OutputState }

func (SkuDescriptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuDescription)(nil)).Elem()
}

func (o SkuDescriptionPtrOutput) ToSkuDescriptionPtrOutput() SkuDescriptionPtrOutput {
	return o
}

func (o SkuDescriptionPtrOutput) ToSkuDescriptionPtrOutputWithContext(ctx context.Context) SkuDescriptionPtrOutput {
	return o
}

func (o SkuDescriptionPtrOutput) Elem() SkuDescriptionOutput {
	return o.ApplyT(func(v *SkuDescription) SkuDescription { return *v }).(SkuDescriptionOutput)
}

// Current number of instances assigned to the resource
func (o SkuDescriptionPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuDescription) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Family code of the resource sku
func (o SkuDescriptionPtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescription) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// Name of the resource sku
func (o SkuDescriptionPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescription) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Size specifier of the resource sku
func (o SkuDescriptionPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescription) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// Service Tier of the resource sku
func (o SkuDescriptionPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescription) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Describes a sku for a scalable resource
type SkuDescriptionResponse struct {
	// Current number of instances assigned to the resource
	Capacity *int `pulumi:"capacity"`
	// Family code of the resource sku
	Family *string `pulumi:"family"`
	// Name of the resource sku
	Name *string `pulumi:"name"`
	// Size specifier of the resource sku
	Size *string `pulumi:"size"`
	// Service Tier of the resource sku
	Tier *string `pulumi:"tier"`
}

// SkuDescriptionResponseInput is an input type that accepts SkuDescriptionResponseArgs and SkuDescriptionResponseOutput values.
// You can construct a concrete instance of `SkuDescriptionResponseInput` via:
//
//          SkuDescriptionResponseArgs{...}
type SkuDescriptionResponseInput interface {
	pulumi.Input

	ToSkuDescriptionResponseOutput() SkuDescriptionResponseOutput
	ToSkuDescriptionResponseOutputWithContext(context.Context) SkuDescriptionResponseOutput
}

// Describes a sku for a scalable resource
type SkuDescriptionResponseArgs struct {
	// Current number of instances assigned to the resource
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Family code of the resource sku
	Family pulumi.StringPtrInput `pulumi:"family"`
	// Name of the resource sku
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Size specifier of the resource sku
	Size pulumi.StringPtrInput `pulumi:"size"`
	// Service Tier of the resource sku
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuDescriptionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuDescriptionResponse)(nil)).Elem()
}

func (i SkuDescriptionResponseArgs) ToSkuDescriptionResponseOutput() SkuDescriptionResponseOutput {
	return i.ToSkuDescriptionResponseOutputWithContext(context.Background())
}

func (i SkuDescriptionResponseArgs) ToSkuDescriptionResponseOutputWithContext(ctx context.Context) SkuDescriptionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuDescriptionResponseOutput)
}

func (i SkuDescriptionResponseArgs) ToSkuDescriptionResponsePtrOutput() SkuDescriptionResponsePtrOutput {
	return i.ToSkuDescriptionResponsePtrOutputWithContext(context.Background())
}

func (i SkuDescriptionResponseArgs) ToSkuDescriptionResponsePtrOutputWithContext(ctx context.Context) SkuDescriptionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuDescriptionResponseOutput).ToSkuDescriptionResponsePtrOutputWithContext(ctx)
}

// SkuDescriptionResponsePtrInput is an input type that accepts SkuDescriptionResponseArgs, SkuDescriptionResponsePtr and SkuDescriptionResponsePtrOutput values.
// You can construct a concrete instance of `SkuDescriptionResponsePtrInput` via:
//
//          SkuDescriptionResponseArgs{...}
//
//  or:
//
//          nil
type SkuDescriptionResponsePtrInput interface {
	pulumi.Input

	ToSkuDescriptionResponsePtrOutput() SkuDescriptionResponsePtrOutput
	ToSkuDescriptionResponsePtrOutputWithContext(context.Context) SkuDescriptionResponsePtrOutput
}

type skuDescriptionResponsePtrType SkuDescriptionResponseArgs

func SkuDescriptionResponsePtr(v *SkuDescriptionResponseArgs) SkuDescriptionResponsePtrInput {
	return (*skuDescriptionResponsePtrType)(v)
}

func (*skuDescriptionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuDescriptionResponse)(nil)).Elem()
}

func (i *skuDescriptionResponsePtrType) ToSkuDescriptionResponsePtrOutput() SkuDescriptionResponsePtrOutput {
	return i.ToSkuDescriptionResponsePtrOutputWithContext(context.Background())
}

func (i *skuDescriptionResponsePtrType) ToSkuDescriptionResponsePtrOutputWithContext(ctx context.Context) SkuDescriptionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuDescriptionResponsePtrOutput)
}

// Describes a sku for a scalable resource
type SkuDescriptionResponseOutput struct{ *pulumi.OutputState }

func (SkuDescriptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuDescriptionResponse)(nil)).Elem()
}

func (o SkuDescriptionResponseOutput) ToSkuDescriptionResponseOutput() SkuDescriptionResponseOutput {
	return o
}

func (o SkuDescriptionResponseOutput) ToSkuDescriptionResponseOutputWithContext(ctx context.Context) SkuDescriptionResponseOutput {
	return o
}

func (o SkuDescriptionResponseOutput) ToSkuDescriptionResponsePtrOutput() SkuDescriptionResponsePtrOutput {
	return o.ToSkuDescriptionResponsePtrOutputWithContext(context.Background())
}

func (o SkuDescriptionResponseOutput) ToSkuDescriptionResponsePtrOutputWithContext(ctx context.Context) SkuDescriptionResponsePtrOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) *SkuDescriptionResponse {
		return &v
	}).(SkuDescriptionResponsePtrOutput)
}

// Current number of instances assigned to the resource
func (o SkuDescriptionResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Family code of the resource sku
func (o SkuDescriptionResponseOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// Name of the resource sku
func (o SkuDescriptionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Size specifier of the resource sku
func (o SkuDescriptionResponseOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// Service Tier of the resource sku
func (o SkuDescriptionResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuDescriptionResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuDescriptionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuDescriptionResponse)(nil)).Elem()
}

func (o SkuDescriptionResponsePtrOutput) ToSkuDescriptionResponsePtrOutput() SkuDescriptionResponsePtrOutput {
	return o
}

func (o SkuDescriptionResponsePtrOutput) ToSkuDescriptionResponsePtrOutputWithContext(ctx context.Context) SkuDescriptionResponsePtrOutput {
	return o
}

func (o SkuDescriptionResponsePtrOutput) Elem() SkuDescriptionResponseOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) SkuDescriptionResponse { return *v }).(SkuDescriptionResponseOutput)
}

// Current number of instances assigned to the resource
func (o SkuDescriptionResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Family code of the resource sku
func (o SkuDescriptionResponsePtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// Name of the resource sku
func (o SkuDescriptionResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Size specifier of the resource sku
func (o SkuDescriptionResponsePtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// Service Tier of the resource sku
func (o SkuDescriptionResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// SlowRequestsBasedTrigger
type SlowRequestsBasedTrigger struct {
	// Count
	Count *int `pulumi:"count"`
	// TimeInterval
	TimeInterval *string `pulumi:"timeInterval"`
	// TimeTaken
	TimeTaken *string `pulumi:"timeTaken"`
}

// SlowRequestsBasedTriggerInput is an input type that accepts SlowRequestsBasedTriggerArgs and SlowRequestsBasedTriggerOutput values.
// You can construct a concrete instance of `SlowRequestsBasedTriggerInput` via:
//
//          SlowRequestsBasedTriggerArgs{...}
type SlowRequestsBasedTriggerInput interface {
	pulumi.Input

	ToSlowRequestsBasedTriggerOutput() SlowRequestsBasedTriggerOutput
	ToSlowRequestsBasedTriggerOutputWithContext(context.Context) SlowRequestsBasedTriggerOutput
}

// SlowRequestsBasedTrigger
type SlowRequestsBasedTriggerArgs struct {
	// Count
	Count pulumi.IntPtrInput `pulumi:"count"`
	// TimeInterval
	TimeInterval pulumi.StringPtrInput `pulumi:"timeInterval"`
	// TimeTaken
	TimeTaken pulumi.StringPtrInput `pulumi:"timeTaken"`
}

func (SlowRequestsBasedTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SlowRequestsBasedTrigger)(nil)).Elem()
}

func (i SlowRequestsBasedTriggerArgs) ToSlowRequestsBasedTriggerOutput() SlowRequestsBasedTriggerOutput {
	return i.ToSlowRequestsBasedTriggerOutputWithContext(context.Background())
}

func (i SlowRequestsBasedTriggerArgs) ToSlowRequestsBasedTriggerOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlowRequestsBasedTriggerOutput)
}

func (i SlowRequestsBasedTriggerArgs) ToSlowRequestsBasedTriggerPtrOutput() SlowRequestsBasedTriggerPtrOutput {
	return i.ToSlowRequestsBasedTriggerPtrOutputWithContext(context.Background())
}

func (i SlowRequestsBasedTriggerArgs) ToSlowRequestsBasedTriggerPtrOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlowRequestsBasedTriggerOutput).ToSlowRequestsBasedTriggerPtrOutputWithContext(ctx)
}

// SlowRequestsBasedTriggerPtrInput is an input type that accepts SlowRequestsBasedTriggerArgs, SlowRequestsBasedTriggerPtr and SlowRequestsBasedTriggerPtrOutput values.
// You can construct a concrete instance of `SlowRequestsBasedTriggerPtrInput` via:
//
//          SlowRequestsBasedTriggerArgs{...}
//
//  or:
//
//          nil
type SlowRequestsBasedTriggerPtrInput interface {
	pulumi.Input

	ToSlowRequestsBasedTriggerPtrOutput() SlowRequestsBasedTriggerPtrOutput
	ToSlowRequestsBasedTriggerPtrOutputWithContext(context.Context) SlowRequestsBasedTriggerPtrOutput
}

type slowRequestsBasedTriggerPtrType SlowRequestsBasedTriggerArgs

func SlowRequestsBasedTriggerPtr(v *SlowRequestsBasedTriggerArgs) SlowRequestsBasedTriggerPtrInput {
	return (*slowRequestsBasedTriggerPtrType)(v)
}

func (*slowRequestsBasedTriggerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SlowRequestsBasedTrigger)(nil)).Elem()
}

func (i *slowRequestsBasedTriggerPtrType) ToSlowRequestsBasedTriggerPtrOutput() SlowRequestsBasedTriggerPtrOutput {
	return i.ToSlowRequestsBasedTriggerPtrOutputWithContext(context.Background())
}

func (i *slowRequestsBasedTriggerPtrType) ToSlowRequestsBasedTriggerPtrOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlowRequestsBasedTriggerPtrOutput)
}

// SlowRequestsBasedTrigger
type SlowRequestsBasedTriggerOutput struct{ *pulumi.OutputState }

func (SlowRequestsBasedTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlowRequestsBasedTrigger)(nil)).Elem()
}

func (o SlowRequestsBasedTriggerOutput) ToSlowRequestsBasedTriggerOutput() SlowRequestsBasedTriggerOutput {
	return o
}

func (o SlowRequestsBasedTriggerOutput) ToSlowRequestsBasedTriggerOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerOutput {
	return o
}

func (o SlowRequestsBasedTriggerOutput) ToSlowRequestsBasedTriggerPtrOutput() SlowRequestsBasedTriggerPtrOutput {
	return o.ToSlowRequestsBasedTriggerPtrOutputWithContext(context.Background())
}

func (o SlowRequestsBasedTriggerOutput) ToSlowRequestsBasedTriggerPtrOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerPtrOutput {
	return o.ApplyT(func(v SlowRequestsBasedTrigger) *SlowRequestsBasedTrigger {
		return &v
	}).(SlowRequestsBasedTriggerPtrOutput)
}

// Count
func (o SlowRequestsBasedTriggerOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SlowRequestsBasedTrigger) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// TimeInterval
func (o SlowRequestsBasedTriggerOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlowRequestsBasedTrigger) *string { return v.TimeInterval }).(pulumi.StringPtrOutput)
}

// TimeTaken
func (o SlowRequestsBasedTriggerOutput) TimeTaken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlowRequestsBasedTrigger) *string { return v.TimeTaken }).(pulumi.StringPtrOutput)
}

type SlowRequestsBasedTriggerPtrOutput struct{ *pulumi.OutputState }

func (SlowRequestsBasedTriggerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SlowRequestsBasedTrigger)(nil)).Elem()
}

func (o SlowRequestsBasedTriggerPtrOutput) ToSlowRequestsBasedTriggerPtrOutput() SlowRequestsBasedTriggerPtrOutput {
	return o
}

func (o SlowRequestsBasedTriggerPtrOutput) ToSlowRequestsBasedTriggerPtrOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerPtrOutput {
	return o
}

func (o SlowRequestsBasedTriggerPtrOutput) Elem() SlowRequestsBasedTriggerOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTrigger) SlowRequestsBasedTrigger { return *v }).(SlowRequestsBasedTriggerOutput)
}

// Count
func (o SlowRequestsBasedTriggerPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTrigger) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// TimeInterval
func (o SlowRequestsBasedTriggerPtrOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTrigger) *string {
		if v == nil {
			return nil
		}
		return v.TimeInterval
	}).(pulumi.StringPtrOutput)
}

// TimeTaken
func (o SlowRequestsBasedTriggerPtrOutput) TimeTaken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTrigger) *string {
		if v == nil {
			return nil
		}
		return v.TimeTaken
	}).(pulumi.StringPtrOutput)
}

// SlowRequestsBasedTrigger
type SlowRequestsBasedTriggerResponse struct {
	// Count
	Count *int `pulumi:"count"`
	// TimeInterval
	TimeInterval *string `pulumi:"timeInterval"`
	// TimeTaken
	TimeTaken *string `pulumi:"timeTaken"`
}

// SlowRequestsBasedTriggerResponseInput is an input type that accepts SlowRequestsBasedTriggerResponseArgs and SlowRequestsBasedTriggerResponseOutput values.
// You can construct a concrete instance of `SlowRequestsBasedTriggerResponseInput` via:
//
//          SlowRequestsBasedTriggerResponseArgs{...}
type SlowRequestsBasedTriggerResponseInput interface {
	pulumi.Input

	ToSlowRequestsBasedTriggerResponseOutput() SlowRequestsBasedTriggerResponseOutput
	ToSlowRequestsBasedTriggerResponseOutputWithContext(context.Context) SlowRequestsBasedTriggerResponseOutput
}

// SlowRequestsBasedTrigger
type SlowRequestsBasedTriggerResponseArgs struct {
	// Count
	Count pulumi.IntPtrInput `pulumi:"count"`
	// TimeInterval
	TimeInterval pulumi.StringPtrInput `pulumi:"timeInterval"`
	// TimeTaken
	TimeTaken pulumi.StringPtrInput `pulumi:"timeTaken"`
}

func (SlowRequestsBasedTriggerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SlowRequestsBasedTriggerResponse)(nil)).Elem()
}

func (i SlowRequestsBasedTriggerResponseArgs) ToSlowRequestsBasedTriggerResponseOutput() SlowRequestsBasedTriggerResponseOutput {
	return i.ToSlowRequestsBasedTriggerResponseOutputWithContext(context.Background())
}

func (i SlowRequestsBasedTriggerResponseArgs) ToSlowRequestsBasedTriggerResponseOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlowRequestsBasedTriggerResponseOutput)
}

func (i SlowRequestsBasedTriggerResponseArgs) ToSlowRequestsBasedTriggerResponsePtrOutput() SlowRequestsBasedTriggerResponsePtrOutput {
	return i.ToSlowRequestsBasedTriggerResponsePtrOutputWithContext(context.Background())
}

func (i SlowRequestsBasedTriggerResponseArgs) ToSlowRequestsBasedTriggerResponsePtrOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlowRequestsBasedTriggerResponseOutput).ToSlowRequestsBasedTriggerResponsePtrOutputWithContext(ctx)
}

// SlowRequestsBasedTriggerResponsePtrInput is an input type that accepts SlowRequestsBasedTriggerResponseArgs, SlowRequestsBasedTriggerResponsePtr and SlowRequestsBasedTriggerResponsePtrOutput values.
// You can construct a concrete instance of `SlowRequestsBasedTriggerResponsePtrInput` via:
//
//          SlowRequestsBasedTriggerResponseArgs{...}
//
//  or:
//
//          nil
type SlowRequestsBasedTriggerResponsePtrInput interface {
	pulumi.Input

	ToSlowRequestsBasedTriggerResponsePtrOutput() SlowRequestsBasedTriggerResponsePtrOutput
	ToSlowRequestsBasedTriggerResponsePtrOutputWithContext(context.Context) SlowRequestsBasedTriggerResponsePtrOutput
}

type slowRequestsBasedTriggerResponsePtrType SlowRequestsBasedTriggerResponseArgs

func SlowRequestsBasedTriggerResponsePtr(v *SlowRequestsBasedTriggerResponseArgs) SlowRequestsBasedTriggerResponsePtrInput {
	return (*slowRequestsBasedTriggerResponsePtrType)(v)
}

func (*slowRequestsBasedTriggerResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SlowRequestsBasedTriggerResponse)(nil)).Elem()
}

func (i *slowRequestsBasedTriggerResponsePtrType) ToSlowRequestsBasedTriggerResponsePtrOutput() SlowRequestsBasedTriggerResponsePtrOutput {
	return i.ToSlowRequestsBasedTriggerResponsePtrOutputWithContext(context.Background())
}

func (i *slowRequestsBasedTriggerResponsePtrType) ToSlowRequestsBasedTriggerResponsePtrOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlowRequestsBasedTriggerResponsePtrOutput)
}

// SlowRequestsBasedTrigger
type SlowRequestsBasedTriggerResponseOutput struct{ *pulumi.OutputState }

func (SlowRequestsBasedTriggerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlowRequestsBasedTriggerResponse)(nil)).Elem()
}

func (o SlowRequestsBasedTriggerResponseOutput) ToSlowRequestsBasedTriggerResponseOutput() SlowRequestsBasedTriggerResponseOutput {
	return o
}

func (o SlowRequestsBasedTriggerResponseOutput) ToSlowRequestsBasedTriggerResponseOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerResponseOutput {
	return o
}

func (o SlowRequestsBasedTriggerResponseOutput) ToSlowRequestsBasedTriggerResponsePtrOutput() SlowRequestsBasedTriggerResponsePtrOutput {
	return o.ToSlowRequestsBasedTriggerResponsePtrOutputWithContext(context.Background())
}

func (o SlowRequestsBasedTriggerResponseOutput) ToSlowRequestsBasedTriggerResponsePtrOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerResponsePtrOutput {
	return o.ApplyT(func(v SlowRequestsBasedTriggerResponse) *SlowRequestsBasedTriggerResponse {
		return &v
	}).(SlowRequestsBasedTriggerResponsePtrOutput)
}

// Count
func (o SlowRequestsBasedTriggerResponseOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SlowRequestsBasedTriggerResponse) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// TimeInterval
func (o SlowRequestsBasedTriggerResponseOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlowRequestsBasedTriggerResponse) *string { return v.TimeInterval }).(pulumi.StringPtrOutput)
}

// TimeTaken
func (o SlowRequestsBasedTriggerResponseOutput) TimeTaken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlowRequestsBasedTriggerResponse) *string { return v.TimeTaken }).(pulumi.StringPtrOutput)
}

type SlowRequestsBasedTriggerResponsePtrOutput struct{ *pulumi.OutputState }

func (SlowRequestsBasedTriggerResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SlowRequestsBasedTriggerResponse)(nil)).Elem()
}

func (o SlowRequestsBasedTriggerResponsePtrOutput) ToSlowRequestsBasedTriggerResponsePtrOutput() SlowRequestsBasedTriggerResponsePtrOutput {
	return o
}

func (o SlowRequestsBasedTriggerResponsePtrOutput) ToSlowRequestsBasedTriggerResponsePtrOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerResponsePtrOutput {
	return o
}

func (o SlowRequestsBasedTriggerResponsePtrOutput) Elem() SlowRequestsBasedTriggerResponseOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTriggerResponse) SlowRequestsBasedTriggerResponse { return *v }).(SlowRequestsBasedTriggerResponseOutput)
}

// Count
func (o SlowRequestsBasedTriggerResponsePtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTriggerResponse) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// TimeInterval
func (o SlowRequestsBasedTriggerResponsePtrOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTriggerResponse) *string {
		if v == nil {
			return nil
		}
		return v.TimeInterval
	}).(pulumi.StringPtrOutput)
}

// TimeTaken
func (o SlowRequestsBasedTriggerResponsePtrOutput) TimeTaken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTriggerResponse) *string {
		if v == nil {
			return nil
		}
		return v.TimeTaken
	}).(pulumi.StringPtrOutput)
}

// Class containing stamp capacity information
type StampCapacity struct {
	// Available capacity (# of machines, bytes of storage etc...)
	AvailableCapacity *int `pulumi:"availableCapacity"`
	// Shared/Dedicated workers
	ComputeMode *string `pulumi:"computeMode"`
	// If true it includes basic sites
	//             Basic sites are not used for capacity allocation.
	ExcludeFromCapacityAllocation *bool `pulumi:"excludeFromCapacityAllocation"`
	// Is capacity applicable for all sites?
	IsApplicableForAllComputeModes *bool `pulumi:"isApplicableForAllComputeModes"`
	// Name of the stamp
	Name *string `pulumi:"name"`
	// Shared or Dedicated
	SiteMode *string `pulumi:"siteMode"`
	// Total capacity (# of machines, bytes of storage etc...)
	TotalCapacity *int `pulumi:"totalCapacity"`
	// Name of the unit
	Unit *string `pulumi:"unit"`
	// Size of the machines
	WorkerSize *string `pulumi:"workerSize"`
	// Size Id of machines:
	//             0 - Small
	//             1 - Medium
	//             2 - Large
	WorkerSizeId *int `pulumi:"workerSizeId"`
}

// StampCapacityInput is an input type that accepts StampCapacityArgs and StampCapacityOutput values.
// You can construct a concrete instance of `StampCapacityInput` via:
//
//          StampCapacityArgs{...}
type StampCapacityInput interface {
	pulumi.Input

	ToStampCapacityOutput() StampCapacityOutput
	ToStampCapacityOutputWithContext(context.Context) StampCapacityOutput
}

// Class containing stamp capacity information
type StampCapacityArgs struct {
	// Available capacity (# of machines, bytes of storage etc...)
	AvailableCapacity pulumi.IntPtrInput `pulumi:"availableCapacity"`
	// Shared/Dedicated workers
	ComputeMode pulumi.StringPtrInput `pulumi:"computeMode"`
	// If true it includes basic sites
	//             Basic sites are not used for capacity allocation.
	ExcludeFromCapacityAllocation pulumi.BoolPtrInput `pulumi:"excludeFromCapacityAllocation"`
	// Is capacity applicable for all sites?
	IsApplicableForAllComputeModes pulumi.BoolPtrInput `pulumi:"isApplicableForAllComputeModes"`
	// Name of the stamp
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Shared or Dedicated
	SiteMode pulumi.StringPtrInput `pulumi:"siteMode"`
	// Total capacity (# of machines, bytes of storage etc...)
	TotalCapacity pulumi.IntPtrInput `pulumi:"totalCapacity"`
	// Name of the unit
	Unit pulumi.StringPtrInput `pulumi:"unit"`
	// Size of the machines
	WorkerSize pulumi.StringPtrInput `pulumi:"workerSize"`
	// Size Id of machines:
	//             0 - Small
	//             1 - Medium
	//             2 - Large
	WorkerSizeId pulumi.IntPtrInput `pulumi:"workerSizeId"`
}

func (StampCapacityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StampCapacity)(nil)).Elem()
}

func (i StampCapacityArgs) ToStampCapacityOutput() StampCapacityOutput {
	return i.ToStampCapacityOutputWithContext(context.Background())
}

func (i StampCapacityArgs) ToStampCapacityOutputWithContext(ctx context.Context) StampCapacityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StampCapacityOutput)
}

// StampCapacityArrayInput is an input type that accepts StampCapacityArray and StampCapacityArrayOutput values.
// You can construct a concrete instance of `StampCapacityArrayInput` via:
//
//          StampCapacityArray{ StampCapacityArgs{...} }
type StampCapacityArrayInput interface {
	pulumi.Input

	ToStampCapacityArrayOutput() StampCapacityArrayOutput
	ToStampCapacityArrayOutputWithContext(context.Context) StampCapacityArrayOutput
}

type StampCapacityArray []StampCapacityInput

func (StampCapacityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StampCapacity)(nil)).Elem()
}

func (i StampCapacityArray) ToStampCapacityArrayOutput() StampCapacityArrayOutput {
	return i.ToStampCapacityArrayOutputWithContext(context.Background())
}

func (i StampCapacityArray) ToStampCapacityArrayOutputWithContext(ctx context.Context) StampCapacityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StampCapacityArrayOutput)
}

// Class containing stamp capacity information
type StampCapacityOutput struct{ *pulumi.OutputState }

func (StampCapacityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StampCapacity)(nil)).Elem()
}

func (o StampCapacityOutput) ToStampCapacityOutput() StampCapacityOutput {
	return o
}

func (o StampCapacityOutput) ToStampCapacityOutputWithContext(ctx context.Context) StampCapacityOutput {
	return o
}

// Available capacity (# of machines, bytes of storage etc...)
func (o StampCapacityOutput) AvailableCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StampCapacity) *int { return v.AvailableCapacity }).(pulumi.IntPtrOutput)
}

// Shared/Dedicated workers
func (o StampCapacityOutput) ComputeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StampCapacity) *string { return v.ComputeMode }).(pulumi.StringPtrOutput)
}

// If true it includes basic sites
//             Basic sites are not used for capacity allocation.
func (o StampCapacityOutput) ExcludeFromCapacityAllocation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StampCapacity) *bool { return v.ExcludeFromCapacityAllocation }).(pulumi.BoolPtrOutput)
}

// Is capacity applicable for all sites?
func (o StampCapacityOutput) IsApplicableForAllComputeModes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StampCapacity) *bool { return v.IsApplicableForAllComputeModes }).(pulumi.BoolPtrOutput)
}

// Name of the stamp
func (o StampCapacityOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StampCapacity) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Shared or Dedicated
func (o StampCapacityOutput) SiteMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StampCapacity) *string { return v.SiteMode }).(pulumi.StringPtrOutput)
}

// Total capacity (# of machines, bytes of storage etc...)
func (o StampCapacityOutput) TotalCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StampCapacity) *int { return v.TotalCapacity }).(pulumi.IntPtrOutput)
}

// Name of the unit
func (o StampCapacityOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StampCapacity) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

// Size of the machines
func (o StampCapacityOutput) WorkerSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StampCapacity) *string { return v.WorkerSize }).(pulumi.StringPtrOutput)
}

// Size Id of machines:
//             0 - Small
//             1 - Medium
//             2 - Large
func (o StampCapacityOutput) WorkerSizeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StampCapacity) *int { return v.WorkerSizeId }).(pulumi.IntPtrOutput)
}

type StampCapacityArrayOutput struct{ *pulumi.OutputState }

func (StampCapacityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StampCapacity)(nil)).Elem()
}

func (o StampCapacityArrayOutput) ToStampCapacityArrayOutput() StampCapacityArrayOutput {
	return o
}

func (o StampCapacityArrayOutput) ToStampCapacityArrayOutputWithContext(ctx context.Context) StampCapacityArrayOutput {
	return o
}

func (o StampCapacityArrayOutput) Index(i pulumi.IntInput) StampCapacityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StampCapacity {
		return vs[0].([]StampCapacity)[vs[1].(int)]
	}).(StampCapacityOutput)
}

// Class containing stamp capacity information
type StampCapacityResponse struct {
	// Available capacity (# of machines, bytes of storage etc...)
	AvailableCapacity *int `pulumi:"availableCapacity"`
	// Shared/Dedicated workers
	ComputeMode *string `pulumi:"computeMode"`
	// If true it includes basic sites
	//             Basic sites are not used for capacity allocation.
	ExcludeFromCapacityAllocation *bool `pulumi:"excludeFromCapacityAllocation"`
	// Is capacity applicable for all sites?
	IsApplicableForAllComputeModes *bool `pulumi:"isApplicableForAllComputeModes"`
	// Name of the stamp
	Name *string `pulumi:"name"`
	// Shared or Dedicated
	SiteMode *string `pulumi:"siteMode"`
	// Total capacity (# of machines, bytes of storage etc...)
	TotalCapacity *int `pulumi:"totalCapacity"`
	// Name of the unit
	Unit *string `pulumi:"unit"`
	// Size of the machines
	WorkerSize *string `pulumi:"workerSize"`
	// Size Id of machines:
	//             0 - Small
	//             1 - Medium
	//             2 - Large
	WorkerSizeId *int `pulumi:"workerSizeId"`
}

// StampCapacityResponseInput is an input type that accepts StampCapacityResponseArgs and StampCapacityResponseOutput values.
// You can construct a concrete instance of `StampCapacityResponseInput` via:
//
//          StampCapacityResponseArgs{...}
type StampCapacityResponseInput interface {
	pulumi.Input

	ToStampCapacityResponseOutput() StampCapacityResponseOutput
	ToStampCapacityResponseOutputWithContext(context.Context) StampCapacityResponseOutput
}

// Class containing stamp capacity information
type StampCapacityResponseArgs struct {
	// Available capacity (# of machines, bytes of storage etc...)
	AvailableCapacity pulumi.IntPtrInput `pulumi:"availableCapacity"`
	// Shared/Dedicated workers
	ComputeMode pulumi.StringPtrInput `pulumi:"computeMode"`
	// If true it includes basic sites
	//             Basic sites are not used for capacity allocation.
	ExcludeFromCapacityAllocation pulumi.BoolPtrInput `pulumi:"excludeFromCapacityAllocation"`
	// Is capacity applicable for all sites?
	IsApplicableForAllComputeModes pulumi.BoolPtrInput `pulumi:"isApplicableForAllComputeModes"`
	// Name of the stamp
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Shared or Dedicated
	SiteMode pulumi.StringPtrInput `pulumi:"siteMode"`
	// Total capacity (# of machines, bytes of storage etc...)
	TotalCapacity pulumi.IntPtrInput `pulumi:"totalCapacity"`
	// Name of the unit
	Unit pulumi.StringPtrInput `pulumi:"unit"`
	// Size of the machines
	WorkerSize pulumi.StringPtrInput `pulumi:"workerSize"`
	// Size Id of machines:
	//             0 - Small
	//             1 - Medium
	//             2 - Large
	WorkerSizeId pulumi.IntPtrInput `pulumi:"workerSizeId"`
}

func (StampCapacityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StampCapacityResponse)(nil)).Elem()
}

func (i StampCapacityResponseArgs) ToStampCapacityResponseOutput() StampCapacityResponseOutput {
	return i.ToStampCapacityResponseOutputWithContext(context.Background())
}

func (i StampCapacityResponseArgs) ToStampCapacityResponseOutputWithContext(ctx context.Context) StampCapacityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StampCapacityResponseOutput)
}

// StampCapacityResponseArrayInput is an input type that accepts StampCapacityResponseArray and StampCapacityResponseArrayOutput values.
// You can construct a concrete instance of `StampCapacityResponseArrayInput` via:
//
//          StampCapacityResponseArray{ StampCapacityResponseArgs{...} }
type StampCapacityResponseArrayInput interface {
	pulumi.Input

	ToStampCapacityResponseArrayOutput() StampCapacityResponseArrayOutput
	ToStampCapacityResponseArrayOutputWithContext(context.Context) StampCapacityResponseArrayOutput
}

type StampCapacityResponseArray []StampCapacityResponseInput

func (StampCapacityResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StampCapacityResponse)(nil)).Elem()
}

func (i StampCapacityResponseArray) ToStampCapacityResponseArrayOutput() StampCapacityResponseArrayOutput {
	return i.ToStampCapacityResponseArrayOutputWithContext(context.Background())
}

func (i StampCapacityResponseArray) ToStampCapacityResponseArrayOutputWithContext(ctx context.Context) StampCapacityResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StampCapacityResponseArrayOutput)
}

// Class containing stamp capacity information
type StampCapacityResponseOutput struct{ *pulumi.OutputState }

func (StampCapacityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StampCapacityResponse)(nil)).Elem()
}

func (o StampCapacityResponseOutput) ToStampCapacityResponseOutput() StampCapacityResponseOutput {
	return o
}

func (o StampCapacityResponseOutput) ToStampCapacityResponseOutputWithContext(ctx context.Context) StampCapacityResponseOutput {
	return o
}

// Available capacity (# of machines, bytes of storage etc...)
func (o StampCapacityResponseOutput) AvailableCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *int { return v.AvailableCapacity }).(pulumi.IntPtrOutput)
}

// Shared/Dedicated workers
func (o StampCapacityResponseOutput) ComputeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *string { return v.ComputeMode }).(pulumi.StringPtrOutput)
}

// If true it includes basic sites
//             Basic sites are not used for capacity allocation.
func (o StampCapacityResponseOutput) ExcludeFromCapacityAllocation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *bool { return v.ExcludeFromCapacityAllocation }).(pulumi.BoolPtrOutput)
}

// Is capacity applicable for all sites?
func (o StampCapacityResponseOutput) IsApplicableForAllComputeModes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *bool { return v.IsApplicableForAllComputeModes }).(pulumi.BoolPtrOutput)
}

// Name of the stamp
func (o StampCapacityResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Shared or Dedicated
func (o StampCapacityResponseOutput) SiteMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *string { return v.SiteMode }).(pulumi.StringPtrOutput)
}

// Total capacity (# of machines, bytes of storage etc...)
func (o StampCapacityResponseOutput) TotalCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *int { return v.TotalCapacity }).(pulumi.IntPtrOutput)
}

// Name of the unit
func (o StampCapacityResponseOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

// Size of the machines
func (o StampCapacityResponseOutput) WorkerSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *string { return v.WorkerSize }).(pulumi.StringPtrOutput)
}

// Size Id of machines:
//             0 - Small
//             1 - Medium
//             2 - Large
func (o StampCapacityResponseOutput) WorkerSizeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *int { return v.WorkerSizeId }).(pulumi.IntPtrOutput)
}

type StampCapacityResponseArrayOutput struct{ *pulumi.OutputState }

func (StampCapacityResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StampCapacityResponse)(nil)).Elem()
}

func (o StampCapacityResponseArrayOutput) ToStampCapacityResponseArrayOutput() StampCapacityResponseArrayOutput {
	return o
}

func (o StampCapacityResponseArrayOutput) ToStampCapacityResponseArrayOutputWithContext(ctx context.Context) StampCapacityResponseArrayOutput {
	return o
}

func (o StampCapacityResponseArrayOutput) Index(i pulumi.IntInput) StampCapacityResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StampCapacityResponse {
		return vs[0].([]StampCapacityResponse)[vs[1].(int)]
	}).(StampCapacityResponseOutput)
}

// StatusCodeBasedTrigger
type StatusCodesBasedTrigger struct {
	// Count
	Count *int `pulumi:"count"`
	// HTTP status code
	Status *int `pulumi:"status"`
	// SubStatus
	SubStatus *int `pulumi:"subStatus"`
	// TimeInterval
	TimeInterval *string `pulumi:"timeInterval"`
	// Win32 error code
	Win32Status *int `pulumi:"win32Status"`
}

// StatusCodesBasedTriggerInput is an input type that accepts StatusCodesBasedTriggerArgs and StatusCodesBasedTriggerOutput values.
// You can construct a concrete instance of `StatusCodesBasedTriggerInput` via:
//
//          StatusCodesBasedTriggerArgs{...}
type StatusCodesBasedTriggerInput interface {
	pulumi.Input

	ToStatusCodesBasedTriggerOutput() StatusCodesBasedTriggerOutput
	ToStatusCodesBasedTriggerOutputWithContext(context.Context) StatusCodesBasedTriggerOutput
}

// StatusCodeBasedTrigger
type StatusCodesBasedTriggerArgs struct {
	// Count
	Count pulumi.IntPtrInput `pulumi:"count"`
	// HTTP status code
	Status pulumi.IntPtrInput `pulumi:"status"`
	// SubStatus
	SubStatus pulumi.IntPtrInput `pulumi:"subStatus"`
	// TimeInterval
	TimeInterval pulumi.StringPtrInput `pulumi:"timeInterval"`
	// Win32 error code
	Win32Status pulumi.IntPtrInput `pulumi:"win32Status"`
}

func (StatusCodesBasedTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusCodesBasedTrigger)(nil)).Elem()
}

func (i StatusCodesBasedTriggerArgs) ToStatusCodesBasedTriggerOutput() StatusCodesBasedTriggerOutput {
	return i.ToStatusCodesBasedTriggerOutputWithContext(context.Background())
}

func (i StatusCodesBasedTriggerArgs) ToStatusCodesBasedTriggerOutputWithContext(ctx context.Context) StatusCodesBasedTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusCodesBasedTriggerOutput)
}

// StatusCodesBasedTriggerArrayInput is an input type that accepts StatusCodesBasedTriggerArray and StatusCodesBasedTriggerArrayOutput values.
// You can construct a concrete instance of `StatusCodesBasedTriggerArrayInput` via:
//
//          StatusCodesBasedTriggerArray{ StatusCodesBasedTriggerArgs{...} }
type StatusCodesBasedTriggerArrayInput interface {
	pulumi.Input

	ToStatusCodesBasedTriggerArrayOutput() StatusCodesBasedTriggerArrayOutput
	ToStatusCodesBasedTriggerArrayOutputWithContext(context.Context) StatusCodesBasedTriggerArrayOutput
}

type StatusCodesBasedTriggerArray []StatusCodesBasedTriggerInput

func (StatusCodesBasedTriggerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StatusCodesBasedTrigger)(nil)).Elem()
}

func (i StatusCodesBasedTriggerArray) ToStatusCodesBasedTriggerArrayOutput() StatusCodesBasedTriggerArrayOutput {
	return i.ToStatusCodesBasedTriggerArrayOutputWithContext(context.Background())
}

func (i StatusCodesBasedTriggerArray) ToStatusCodesBasedTriggerArrayOutputWithContext(ctx context.Context) StatusCodesBasedTriggerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusCodesBasedTriggerArrayOutput)
}

// StatusCodeBasedTrigger
type StatusCodesBasedTriggerOutput struct{ *pulumi.OutputState }

func (StatusCodesBasedTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusCodesBasedTrigger)(nil)).Elem()
}

func (o StatusCodesBasedTriggerOutput) ToStatusCodesBasedTriggerOutput() StatusCodesBasedTriggerOutput {
	return o
}

func (o StatusCodesBasedTriggerOutput) ToStatusCodesBasedTriggerOutputWithContext(ctx context.Context) StatusCodesBasedTriggerOutput {
	return o
}

// Count
func (o StatusCodesBasedTriggerOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTrigger) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// HTTP status code
func (o StatusCodesBasedTriggerOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTrigger) *int { return v.Status }).(pulumi.IntPtrOutput)
}

// SubStatus
func (o StatusCodesBasedTriggerOutput) SubStatus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTrigger) *int { return v.SubStatus }).(pulumi.IntPtrOutput)
}

// TimeInterval
func (o StatusCodesBasedTriggerOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTrigger) *string { return v.TimeInterval }).(pulumi.StringPtrOutput)
}

// Win32 error code
func (o StatusCodesBasedTriggerOutput) Win32Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTrigger) *int { return v.Win32Status }).(pulumi.IntPtrOutput)
}

type StatusCodesBasedTriggerArrayOutput struct{ *pulumi.OutputState }

func (StatusCodesBasedTriggerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StatusCodesBasedTrigger)(nil)).Elem()
}

func (o StatusCodesBasedTriggerArrayOutput) ToStatusCodesBasedTriggerArrayOutput() StatusCodesBasedTriggerArrayOutput {
	return o
}

func (o StatusCodesBasedTriggerArrayOutput) ToStatusCodesBasedTriggerArrayOutputWithContext(ctx context.Context) StatusCodesBasedTriggerArrayOutput {
	return o
}

func (o StatusCodesBasedTriggerArrayOutput) Index(i pulumi.IntInput) StatusCodesBasedTriggerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StatusCodesBasedTrigger {
		return vs[0].([]StatusCodesBasedTrigger)[vs[1].(int)]
	}).(StatusCodesBasedTriggerOutput)
}

// StatusCodeBasedTrigger
type StatusCodesBasedTriggerResponse struct {
	// Count
	Count *int `pulumi:"count"`
	// HTTP status code
	Status *int `pulumi:"status"`
	// SubStatus
	SubStatus *int `pulumi:"subStatus"`
	// TimeInterval
	TimeInterval *string `pulumi:"timeInterval"`
	// Win32 error code
	Win32Status *int `pulumi:"win32Status"`
}

// StatusCodesBasedTriggerResponseInput is an input type that accepts StatusCodesBasedTriggerResponseArgs and StatusCodesBasedTriggerResponseOutput values.
// You can construct a concrete instance of `StatusCodesBasedTriggerResponseInput` via:
//
//          StatusCodesBasedTriggerResponseArgs{...}
type StatusCodesBasedTriggerResponseInput interface {
	pulumi.Input

	ToStatusCodesBasedTriggerResponseOutput() StatusCodesBasedTriggerResponseOutput
	ToStatusCodesBasedTriggerResponseOutputWithContext(context.Context) StatusCodesBasedTriggerResponseOutput
}

// StatusCodeBasedTrigger
type StatusCodesBasedTriggerResponseArgs struct {
	// Count
	Count pulumi.IntPtrInput `pulumi:"count"`
	// HTTP status code
	Status pulumi.IntPtrInput `pulumi:"status"`
	// SubStatus
	SubStatus pulumi.IntPtrInput `pulumi:"subStatus"`
	// TimeInterval
	TimeInterval pulumi.StringPtrInput `pulumi:"timeInterval"`
	// Win32 error code
	Win32Status pulumi.IntPtrInput `pulumi:"win32Status"`
}

func (StatusCodesBasedTriggerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusCodesBasedTriggerResponse)(nil)).Elem()
}

func (i StatusCodesBasedTriggerResponseArgs) ToStatusCodesBasedTriggerResponseOutput() StatusCodesBasedTriggerResponseOutput {
	return i.ToStatusCodesBasedTriggerResponseOutputWithContext(context.Background())
}

func (i StatusCodesBasedTriggerResponseArgs) ToStatusCodesBasedTriggerResponseOutputWithContext(ctx context.Context) StatusCodesBasedTriggerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusCodesBasedTriggerResponseOutput)
}

// StatusCodesBasedTriggerResponseArrayInput is an input type that accepts StatusCodesBasedTriggerResponseArray and StatusCodesBasedTriggerResponseArrayOutput values.
// You can construct a concrete instance of `StatusCodesBasedTriggerResponseArrayInput` via:
//
//          StatusCodesBasedTriggerResponseArray{ StatusCodesBasedTriggerResponseArgs{...} }
type StatusCodesBasedTriggerResponseArrayInput interface {
	pulumi.Input

	ToStatusCodesBasedTriggerResponseArrayOutput() StatusCodesBasedTriggerResponseArrayOutput
	ToStatusCodesBasedTriggerResponseArrayOutputWithContext(context.Context) StatusCodesBasedTriggerResponseArrayOutput
}

type StatusCodesBasedTriggerResponseArray []StatusCodesBasedTriggerResponseInput

func (StatusCodesBasedTriggerResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StatusCodesBasedTriggerResponse)(nil)).Elem()
}

func (i StatusCodesBasedTriggerResponseArray) ToStatusCodesBasedTriggerResponseArrayOutput() StatusCodesBasedTriggerResponseArrayOutput {
	return i.ToStatusCodesBasedTriggerResponseArrayOutputWithContext(context.Background())
}

func (i StatusCodesBasedTriggerResponseArray) ToStatusCodesBasedTriggerResponseArrayOutputWithContext(ctx context.Context) StatusCodesBasedTriggerResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusCodesBasedTriggerResponseArrayOutput)
}

// StatusCodeBasedTrigger
type StatusCodesBasedTriggerResponseOutput struct{ *pulumi.OutputState }

func (StatusCodesBasedTriggerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusCodesBasedTriggerResponse)(nil)).Elem()
}

func (o StatusCodesBasedTriggerResponseOutput) ToStatusCodesBasedTriggerResponseOutput() StatusCodesBasedTriggerResponseOutput {
	return o
}

func (o StatusCodesBasedTriggerResponseOutput) ToStatusCodesBasedTriggerResponseOutputWithContext(ctx context.Context) StatusCodesBasedTriggerResponseOutput {
	return o
}

// Count
func (o StatusCodesBasedTriggerResponseOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTriggerResponse) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// HTTP status code
func (o StatusCodesBasedTriggerResponseOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTriggerResponse) *int { return v.Status }).(pulumi.IntPtrOutput)
}

// SubStatus
func (o StatusCodesBasedTriggerResponseOutput) SubStatus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTriggerResponse) *int { return v.SubStatus }).(pulumi.IntPtrOutput)
}

// TimeInterval
func (o StatusCodesBasedTriggerResponseOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTriggerResponse) *string { return v.TimeInterval }).(pulumi.StringPtrOutput)
}

// Win32 error code
func (o StatusCodesBasedTriggerResponseOutput) Win32Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTriggerResponse) *int { return v.Win32Status }).(pulumi.IntPtrOutput)
}

type StatusCodesBasedTriggerResponseArrayOutput struct{ *pulumi.OutputState }

func (StatusCodesBasedTriggerResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StatusCodesBasedTriggerResponse)(nil)).Elem()
}

func (o StatusCodesBasedTriggerResponseArrayOutput) ToStatusCodesBasedTriggerResponseArrayOutput() StatusCodesBasedTriggerResponseArrayOutput {
	return o
}

func (o StatusCodesBasedTriggerResponseArrayOutput) ToStatusCodesBasedTriggerResponseArrayOutputWithContext(ctx context.Context) StatusCodesBasedTriggerResponseArrayOutput {
	return o
}

func (o StatusCodesBasedTriggerResponseArrayOutput) Index(i pulumi.IntInput) StatusCodesBasedTriggerResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StatusCodesBasedTriggerResponse {
		return vs[0].([]StatusCodesBasedTriggerResponse)[vs[1].(int)]
	}).(StatusCodesBasedTriggerResponseOutput)
}

type UserResponseProperties struct {
	// Username (internal)
	Name *string `pulumi:"name"`
	// Password used for publishing
	PublishingPassword *string `pulumi:"publishingPassword"`
	// Username used for publishing
	PublishingUserName *string `pulumi:"publishingUserName"`
	// Service Control Manager URI, including username and password
	ScmUri *string `pulumi:"scmUri"`
}

// UserResponsePropertiesInput is an input type that accepts UserResponsePropertiesArgs and UserResponsePropertiesOutput values.
// You can construct a concrete instance of `UserResponsePropertiesInput` via:
//
//          UserResponsePropertiesArgs{...}
type UserResponsePropertiesInput interface {
	pulumi.Input

	ToUserResponsePropertiesOutput() UserResponsePropertiesOutput
	ToUserResponsePropertiesOutputWithContext(context.Context) UserResponsePropertiesOutput
}

type UserResponsePropertiesArgs struct {
	// Username (internal)
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Password used for publishing
	PublishingPassword pulumi.StringPtrInput `pulumi:"publishingPassword"`
	// Username used for publishing
	PublishingUserName pulumi.StringPtrInput `pulumi:"publishingUserName"`
	// Service Control Manager URI, including username and password
	ScmUri pulumi.StringPtrInput `pulumi:"scmUri"`
}

func (UserResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserResponseProperties)(nil)).Elem()
}

func (i UserResponsePropertiesArgs) ToUserResponsePropertiesOutput() UserResponsePropertiesOutput {
	return i.ToUserResponsePropertiesOutputWithContext(context.Background())
}

func (i UserResponsePropertiesArgs) ToUserResponsePropertiesOutputWithContext(ctx context.Context) UserResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserResponsePropertiesOutput)
}

type UserResponsePropertiesOutput struct{ *pulumi.OutputState }

func (UserResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserResponseProperties)(nil)).Elem()
}

func (o UserResponsePropertiesOutput) ToUserResponsePropertiesOutput() UserResponsePropertiesOutput {
	return o
}

func (o UserResponsePropertiesOutput) ToUserResponsePropertiesOutputWithContext(ctx context.Context) UserResponsePropertiesOutput {
	return o
}

// Username (internal)
func (o UserResponsePropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserResponseProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Password used for publishing
func (o UserResponsePropertiesOutput) PublishingPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserResponseProperties) *string { return v.PublishingPassword }).(pulumi.StringPtrOutput)
}

// Username used for publishing
func (o UserResponsePropertiesOutput) PublishingUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserResponseProperties) *string { return v.PublishingUserName }).(pulumi.StringPtrOutput)
}

// Service Control Manager URI, including username and password
func (o UserResponsePropertiesOutput) ScmUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserResponseProperties) *string { return v.ScmUri }).(pulumi.StringPtrOutput)
}

type VirtualApplication struct {
	PhysicalPath       *string            `pulumi:"physicalPath"`
	PreloadEnabled     *bool              `pulumi:"preloadEnabled"`
	VirtualDirectories []VirtualDirectory `pulumi:"virtualDirectories"`
	VirtualPath        *string            `pulumi:"virtualPath"`
}

// VirtualApplicationInput is an input type that accepts VirtualApplicationArgs and VirtualApplicationOutput values.
// You can construct a concrete instance of `VirtualApplicationInput` via:
//
//          VirtualApplicationArgs{...}
type VirtualApplicationInput interface {
	pulumi.Input

	ToVirtualApplicationOutput() VirtualApplicationOutput
	ToVirtualApplicationOutputWithContext(context.Context) VirtualApplicationOutput
}

type VirtualApplicationArgs struct {
	PhysicalPath       pulumi.StringPtrInput      `pulumi:"physicalPath"`
	PreloadEnabled     pulumi.BoolPtrInput        `pulumi:"preloadEnabled"`
	VirtualDirectories VirtualDirectoryArrayInput `pulumi:"virtualDirectories"`
	VirtualPath        pulumi.StringPtrInput      `pulumi:"virtualPath"`
}

func (VirtualApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplication)(nil)).Elem()
}

func (i VirtualApplicationArgs) ToVirtualApplicationOutput() VirtualApplicationOutput {
	return i.ToVirtualApplicationOutputWithContext(context.Background())
}

func (i VirtualApplicationArgs) ToVirtualApplicationOutputWithContext(ctx context.Context) VirtualApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplicationOutput)
}

// VirtualApplicationArrayInput is an input type that accepts VirtualApplicationArray and VirtualApplicationArrayOutput values.
// You can construct a concrete instance of `VirtualApplicationArrayInput` via:
//
//          VirtualApplicationArray{ VirtualApplicationArgs{...} }
type VirtualApplicationArrayInput interface {
	pulumi.Input

	ToVirtualApplicationArrayOutput() VirtualApplicationArrayOutput
	ToVirtualApplicationArrayOutputWithContext(context.Context) VirtualApplicationArrayOutput
}

type VirtualApplicationArray []VirtualApplicationInput

func (VirtualApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualApplication)(nil)).Elem()
}

func (i VirtualApplicationArray) ToVirtualApplicationArrayOutput() VirtualApplicationArrayOutput {
	return i.ToVirtualApplicationArrayOutputWithContext(context.Background())
}

func (i VirtualApplicationArray) ToVirtualApplicationArrayOutputWithContext(ctx context.Context) VirtualApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplicationArrayOutput)
}

type VirtualApplicationOutput struct{ *pulumi.OutputState }

func (VirtualApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplication)(nil)).Elem()
}

func (o VirtualApplicationOutput) ToVirtualApplicationOutput() VirtualApplicationOutput {
	return o
}

func (o VirtualApplicationOutput) ToVirtualApplicationOutputWithContext(ctx context.Context) VirtualApplicationOutput {
	return o
}

func (o VirtualApplicationOutput) PhysicalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplication) *string { return v.PhysicalPath }).(pulumi.StringPtrOutput)
}

func (o VirtualApplicationOutput) PreloadEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualApplication) *bool { return v.PreloadEnabled }).(pulumi.BoolPtrOutput)
}

func (o VirtualApplicationOutput) VirtualDirectories() VirtualDirectoryArrayOutput {
	return o.ApplyT(func(v VirtualApplication) []VirtualDirectory { return v.VirtualDirectories }).(VirtualDirectoryArrayOutput)
}

func (o VirtualApplicationOutput) VirtualPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplication) *string { return v.VirtualPath }).(pulumi.StringPtrOutput)
}

type VirtualApplicationArrayOutput struct{ *pulumi.OutputState }

func (VirtualApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualApplication)(nil)).Elem()
}

func (o VirtualApplicationArrayOutput) ToVirtualApplicationArrayOutput() VirtualApplicationArrayOutput {
	return o
}

func (o VirtualApplicationArrayOutput) ToVirtualApplicationArrayOutputWithContext(ctx context.Context) VirtualApplicationArrayOutput {
	return o
}

func (o VirtualApplicationArrayOutput) Index(i pulumi.IntInput) VirtualApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualApplication {
		return vs[0].([]VirtualApplication)[vs[1].(int)]
	}).(VirtualApplicationOutput)
}

type VirtualApplicationResponse struct {
	PhysicalPath       *string                    `pulumi:"physicalPath"`
	PreloadEnabled     *bool                      `pulumi:"preloadEnabled"`
	VirtualDirectories []VirtualDirectoryResponse `pulumi:"virtualDirectories"`
	VirtualPath        *string                    `pulumi:"virtualPath"`
}

// VirtualApplicationResponseInput is an input type that accepts VirtualApplicationResponseArgs and VirtualApplicationResponseOutput values.
// You can construct a concrete instance of `VirtualApplicationResponseInput` via:
//
//          VirtualApplicationResponseArgs{...}
type VirtualApplicationResponseInput interface {
	pulumi.Input

	ToVirtualApplicationResponseOutput() VirtualApplicationResponseOutput
	ToVirtualApplicationResponseOutputWithContext(context.Context) VirtualApplicationResponseOutput
}

type VirtualApplicationResponseArgs struct {
	PhysicalPath       pulumi.StringPtrInput              `pulumi:"physicalPath"`
	PreloadEnabled     pulumi.BoolPtrInput                `pulumi:"preloadEnabled"`
	VirtualDirectories VirtualDirectoryResponseArrayInput `pulumi:"virtualDirectories"`
	VirtualPath        pulumi.StringPtrInput              `pulumi:"virtualPath"`
}

func (VirtualApplicationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplicationResponse)(nil)).Elem()
}

func (i VirtualApplicationResponseArgs) ToVirtualApplicationResponseOutput() VirtualApplicationResponseOutput {
	return i.ToVirtualApplicationResponseOutputWithContext(context.Background())
}

func (i VirtualApplicationResponseArgs) ToVirtualApplicationResponseOutputWithContext(ctx context.Context) VirtualApplicationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplicationResponseOutput)
}

// VirtualApplicationResponseArrayInput is an input type that accepts VirtualApplicationResponseArray and VirtualApplicationResponseArrayOutput values.
// You can construct a concrete instance of `VirtualApplicationResponseArrayInput` via:
//
//          VirtualApplicationResponseArray{ VirtualApplicationResponseArgs{...} }
type VirtualApplicationResponseArrayInput interface {
	pulumi.Input

	ToVirtualApplicationResponseArrayOutput() VirtualApplicationResponseArrayOutput
	ToVirtualApplicationResponseArrayOutputWithContext(context.Context) VirtualApplicationResponseArrayOutput
}

type VirtualApplicationResponseArray []VirtualApplicationResponseInput

func (VirtualApplicationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualApplicationResponse)(nil)).Elem()
}

func (i VirtualApplicationResponseArray) ToVirtualApplicationResponseArrayOutput() VirtualApplicationResponseArrayOutput {
	return i.ToVirtualApplicationResponseArrayOutputWithContext(context.Background())
}

func (i VirtualApplicationResponseArray) ToVirtualApplicationResponseArrayOutputWithContext(ctx context.Context) VirtualApplicationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplicationResponseArrayOutput)
}

type VirtualApplicationResponseOutput struct{ *pulumi.OutputState }

func (VirtualApplicationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplicationResponse)(nil)).Elem()
}

func (o VirtualApplicationResponseOutput) ToVirtualApplicationResponseOutput() VirtualApplicationResponseOutput {
	return o
}

func (o VirtualApplicationResponseOutput) ToVirtualApplicationResponseOutputWithContext(ctx context.Context) VirtualApplicationResponseOutput {
	return o
}

func (o VirtualApplicationResponseOutput) PhysicalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplicationResponse) *string { return v.PhysicalPath }).(pulumi.StringPtrOutput)
}

func (o VirtualApplicationResponseOutput) PreloadEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualApplicationResponse) *bool { return v.PreloadEnabled }).(pulumi.BoolPtrOutput)
}

func (o VirtualApplicationResponseOutput) VirtualDirectories() VirtualDirectoryResponseArrayOutput {
	return o.ApplyT(func(v VirtualApplicationResponse) []VirtualDirectoryResponse { return v.VirtualDirectories }).(VirtualDirectoryResponseArrayOutput)
}

func (o VirtualApplicationResponseOutput) VirtualPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplicationResponse) *string { return v.VirtualPath }).(pulumi.StringPtrOutput)
}

type VirtualApplicationResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualApplicationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualApplicationResponse)(nil)).Elem()
}

func (o VirtualApplicationResponseArrayOutput) ToVirtualApplicationResponseArrayOutput() VirtualApplicationResponseArrayOutput {
	return o
}

func (o VirtualApplicationResponseArrayOutput) ToVirtualApplicationResponseArrayOutputWithContext(ctx context.Context) VirtualApplicationResponseArrayOutput {
	return o
}

func (o VirtualApplicationResponseArrayOutput) Index(i pulumi.IntInput) VirtualApplicationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualApplicationResponse {
		return vs[0].([]VirtualApplicationResponse)[vs[1].(int)]
	}).(VirtualApplicationResponseOutput)
}

type VirtualDirectory struct {
	PhysicalPath *string `pulumi:"physicalPath"`
	VirtualPath  *string `pulumi:"virtualPath"`
}

// VirtualDirectoryInput is an input type that accepts VirtualDirectoryArgs and VirtualDirectoryOutput values.
// You can construct a concrete instance of `VirtualDirectoryInput` via:
//
//          VirtualDirectoryArgs{...}
type VirtualDirectoryInput interface {
	pulumi.Input

	ToVirtualDirectoryOutput() VirtualDirectoryOutput
	ToVirtualDirectoryOutputWithContext(context.Context) VirtualDirectoryOutput
}

type VirtualDirectoryArgs struct {
	PhysicalPath pulumi.StringPtrInput `pulumi:"physicalPath"`
	VirtualPath  pulumi.StringPtrInput `pulumi:"virtualPath"`
}

func (VirtualDirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualDirectory)(nil)).Elem()
}

func (i VirtualDirectoryArgs) ToVirtualDirectoryOutput() VirtualDirectoryOutput {
	return i.ToVirtualDirectoryOutputWithContext(context.Background())
}

func (i VirtualDirectoryArgs) ToVirtualDirectoryOutputWithContext(ctx context.Context) VirtualDirectoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualDirectoryOutput)
}

// VirtualDirectoryArrayInput is an input type that accepts VirtualDirectoryArray and VirtualDirectoryArrayOutput values.
// You can construct a concrete instance of `VirtualDirectoryArrayInput` via:
//
//          VirtualDirectoryArray{ VirtualDirectoryArgs{...} }
type VirtualDirectoryArrayInput interface {
	pulumi.Input

	ToVirtualDirectoryArrayOutput() VirtualDirectoryArrayOutput
	ToVirtualDirectoryArrayOutputWithContext(context.Context) VirtualDirectoryArrayOutput
}

type VirtualDirectoryArray []VirtualDirectoryInput

func (VirtualDirectoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualDirectory)(nil)).Elem()
}

func (i VirtualDirectoryArray) ToVirtualDirectoryArrayOutput() VirtualDirectoryArrayOutput {
	return i.ToVirtualDirectoryArrayOutputWithContext(context.Background())
}

func (i VirtualDirectoryArray) ToVirtualDirectoryArrayOutputWithContext(ctx context.Context) VirtualDirectoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualDirectoryArrayOutput)
}

type VirtualDirectoryOutput struct{ *pulumi.OutputState }

func (VirtualDirectoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualDirectory)(nil)).Elem()
}

func (o VirtualDirectoryOutput) ToVirtualDirectoryOutput() VirtualDirectoryOutput {
	return o
}

func (o VirtualDirectoryOutput) ToVirtualDirectoryOutputWithContext(ctx context.Context) VirtualDirectoryOutput {
	return o
}

func (o VirtualDirectoryOutput) PhysicalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualDirectory) *string { return v.PhysicalPath }).(pulumi.StringPtrOutput)
}

func (o VirtualDirectoryOutput) VirtualPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualDirectory) *string { return v.VirtualPath }).(pulumi.StringPtrOutput)
}

type VirtualDirectoryArrayOutput struct{ *pulumi.OutputState }

func (VirtualDirectoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualDirectory)(nil)).Elem()
}

func (o VirtualDirectoryArrayOutput) ToVirtualDirectoryArrayOutput() VirtualDirectoryArrayOutput {
	return o
}

func (o VirtualDirectoryArrayOutput) ToVirtualDirectoryArrayOutputWithContext(ctx context.Context) VirtualDirectoryArrayOutput {
	return o
}

func (o VirtualDirectoryArrayOutput) Index(i pulumi.IntInput) VirtualDirectoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualDirectory {
		return vs[0].([]VirtualDirectory)[vs[1].(int)]
	}).(VirtualDirectoryOutput)
}

type VirtualDirectoryResponse struct {
	PhysicalPath *string `pulumi:"physicalPath"`
	VirtualPath  *string `pulumi:"virtualPath"`
}

// VirtualDirectoryResponseInput is an input type that accepts VirtualDirectoryResponseArgs and VirtualDirectoryResponseOutput values.
// You can construct a concrete instance of `VirtualDirectoryResponseInput` via:
//
//          VirtualDirectoryResponseArgs{...}
type VirtualDirectoryResponseInput interface {
	pulumi.Input

	ToVirtualDirectoryResponseOutput() VirtualDirectoryResponseOutput
	ToVirtualDirectoryResponseOutputWithContext(context.Context) VirtualDirectoryResponseOutput
}

type VirtualDirectoryResponseArgs struct {
	PhysicalPath pulumi.StringPtrInput `pulumi:"physicalPath"`
	VirtualPath  pulumi.StringPtrInput `pulumi:"virtualPath"`
}

func (VirtualDirectoryResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualDirectoryResponse)(nil)).Elem()
}

func (i VirtualDirectoryResponseArgs) ToVirtualDirectoryResponseOutput() VirtualDirectoryResponseOutput {
	return i.ToVirtualDirectoryResponseOutputWithContext(context.Background())
}

func (i VirtualDirectoryResponseArgs) ToVirtualDirectoryResponseOutputWithContext(ctx context.Context) VirtualDirectoryResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualDirectoryResponseOutput)
}

// VirtualDirectoryResponseArrayInput is an input type that accepts VirtualDirectoryResponseArray and VirtualDirectoryResponseArrayOutput values.
// You can construct a concrete instance of `VirtualDirectoryResponseArrayInput` via:
//
//          VirtualDirectoryResponseArray{ VirtualDirectoryResponseArgs{...} }
type VirtualDirectoryResponseArrayInput interface {
	pulumi.Input

	ToVirtualDirectoryResponseArrayOutput() VirtualDirectoryResponseArrayOutput
	ToVirtualDirectoryResponseArrayOutputWithContext(context.Context) VirtualDirectoryResponseArrayOutput
}

type VirtualDirectoryResponseArray []VirtualDirectoryResponseInput

func (VirtualDirectoryResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualDirectoryResponse)(nil)).Elem()
}

func (i VirtualDirectoryResponseArray) ToVirtualDirectoryResponseArrayOutput() VirtualDirectoryResponseArrayOutput {
	return i.ToVirtualDirectoryResponseArrayOutputWithContext(context.Background())
}

func (i VirtualDirectoryResponseArray) ToVirtualDirectoryResponseArrayOutputWithContext(ctx context.Context) VirtualDirectoryResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualDirectoryResponseArrayOutput)
}

type VirtualDirectoryResponseOutput struct{ *pulumi.OutputState }

func (VirtualDirectoryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualDirectoryResponse)(nil)).Elem()
}

func (o VirtualDirectoryResponseOutput) ToVirtualDirectoryResponseOutput() VirtualDirectoryResponseOutput {
	return o
}

func (o VirtualDirectoryResponseOutput) ToVirtualDirectoryResponseOutputWithContext(ctx context.Context) VirtualDirectoryResponseOutput {
	return o
}

func (o VirtualDirectoryResponseOutput) PhysicalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualDirectoryResponse) *string { return v.PhysicalPath }).(pulumi.StringPtrOutput)
}

func (o VirtualDirectoryResponseOutput) VirtualPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualDirectoryResponse) *string { return v.VirtualPath }).(pulumi.StringPtrOutput)
}

type VirtualDirectoryResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualDirectoryResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualDirectoryResponse)(nil)).Elem()
}

func (o VirtualDirectoryResponseArrayOutput) ToVirtualDirectoryResponseArrayOutput() VirtualDirectoryResponseArrayOutput {
	return o
}

func (o VirtualDirectoryResponseArrayOutput) ToVirtualDirectoryResponseArrayOutputWithContext(ctx context.Context) VirtualDirectoryResponseArrayOutput {
	return o
}

func (o VirtualDirectoryResponseArrayOutput) Index(i pulumi.IntInput) VirtualDirectoryResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualDirectoryResponse {
		return vs[0].([]VirtualDirectoryResponse)[vs[1].(int)]
	}).(VirtualDirectoryResponseOutput)
}

// Class that represents a VIP mapping
type VirtualIPMapping struct {
	// Is VIP mapping in use
	InUse *bool `pulumi:"inUse"`
	// Internal HTTP port
	InternalHttpPort *int `pulumi:"internalHttpPort"`
	// Internal HTTPS port
	InternalHttpsPort *int `pulumi:"internalHttpsPort"`
	// Virtual IP address
	VirtualIP *string `pulumi:"virtualIP"`
}

// VirtualIPMappingInput is an input type that accepts VirtualIPMappingArgs and VirtualIPMappingOutput values.
// You can construct a concrete instance of `VirtualIPMappingInput` via:
//
//          VirtualIPMappingArgs{...}
type VirtualIPMappingInput interface {
	pulumi.Input

	ToVirtualIPMappingOutput() VirtualIPMappingOutput
	ToVirtualIPMappingOutputWithContext(context.Context) VirtualIPMappingOutput
}

// Class that represents a VIP mapping
type VirtualIPMappingArgs struct {
	// Is VIP mapping in use
	InUse pulumi.BoolPtrInput `pulumi:"inUse"`
	// Internal HTTP port
	InternalHttpPort pulumi.IntPtrInput `pulumi:"internalHttpPort"`
	// Internal HTTPS port
	InternalHttpsPort pulumi.IntPtrInput `pulumi:"internalHttpsPort"`
	// Virtual IP address
	VirtualIP pulumi.StringPtrInput `pulumi:"virtualIP"`
}

func (VirtualIPMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualIPMapping)(nil)).Elem()
}

func (i VirtualIPMappingArgs) ToVirtualIPMappingOutput() VirtualIPMappingOutput {
	return i.ToVirtualIPMappingOutputWithContext(context.Background())
}

func (i VirtualIPMappingArgs) ToVirtualIPMappingOutputWithContext(ctx context.Context) VirtualIPMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualIPMappingOutput)
}

// VirtualIPMappingArrayInput is an input type that accepts VirtualIPMappingArray and VirtualIPMappingArrayOutput values.
// You can construct a concrete instance of `VirtualIPMappingArrayInput` via:
//
//          VirtualIPMappingArray{ VirtualIPMappingArgs{...} }
type VirtualIPMappingArrayInput interface {
	pulumi.Input

	ToVirtualIPMappingArrayOutput() VirtualIPMappingArrayOutput
	ToVirtualIPMappingArrayOutputWithContext(context.Context) VirtualIPMappingArrayOutput
}

type VirtualIPMappingArray []VirtualIPMappingInput

func (VirtualIPMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualIPMapping)(nil)).Elem()
}

func (i VirtualIPMappingArray) ToVirtualIPMappingArrayOutput() VirtualIPMappingArrayOutput {
	return i.ToVirtualIPMappingArrayOutputWithContext(context.Background())
}

func (i VirtualIPMappingArray) ToVirtualIPMappingArrayOutputWithContext(ctx context.Context) VirtualIPMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualIPMappingArrayOutput)
}

// Class that represents a VIP mapping
type VirtualIPMappingOutput struct{ *pulumi.OutputState }

func (VirtualIPMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualIPMapping)(nil)).Elem()
}

func (o VirtualIPMappingOutput) ToVirtualIPMappingOutput() VirtualIPMappingOutput {
	return o
}

func (o VirtualIPMappingOutput) ToVirtualIPMappingOutputWithContext(ctx context.Context) VirtualIPMappingOutput {
	return o
}

// Is VIP mapping in use
func (o VirtualIPMappingOutput) InUse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualIPMapping) *bool { return v.InUse }).(pulumi.BoolPtrOutput)
}

// Internal HTTP port
func (o VirtualIPMappingOutput) InternalHttpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualIPMapping) *int { return v.InternalHttpPort }).(pulumi.IntPtrOutput)
}

// Internal HTTPS port
func (o VirtualIPMappingOutput) InternalHttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualIPMapping) *int { return v.InternalHttpsPort }).(pulumi.IntPtrOutput)
}

// Virtual IP address
func (o VirtualIPMappingOutput) VirtualIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualIPMapping) *string { return v.VirtualIP }).(pulumi.StringPtrOutput)
}

type VirtualIPMappingArrayOutput struct{ *pulumi.OutputState }

func (VirtualIPMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualIPMapping)(nil)).Elem()
}

func (o VirtualIPMappingArrayOutput) ToVirtualIPMappingArrayOutput() VirtualIPMappingArrayOutput {
	return o
}

func (o VirtualIPMappingArrayOutput) ToVirtualIPMappingArrayOutputWithContext(ctx context.Context) VirtualIPMappingArrayOutput {
	return o
}

func (o VirtualIPMappingArrayOutput) Index(i pulumi.IntInput) VirtualIPMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualIPMapping {
		return vs[0].([]VirtualIPMapping)[vs[1].(int)]
	}).(VirtualIPMappingOutput)
}

// Class that represents a VIP mapping
type VirtualIPMappingResponse struct {
	// Is VIP mapping in use
	InUse *bool `pulumi:"inUse"`
	// Internal HTTP port
	InternalHttpPort *int `pulumi:"internalHttpPort"`
	// Internal HTTPS port
	InternalHttpsPort *int `pulumi:"internalHttpsPort"`
	// Virtual IP address
	VirtualIP *string `pulumi:"virtualIP"`
}

// VirtualIPMappingResponseInput is an input type that accepts VirtualIPMappingResponseArgs and VirtualIPMappingResponseOutput values.
// You can construct a concrete instance of `VirtualIPMappingResponseInput` via:
//
//          VirtualIPMappingResponseArgs{...}
type VirtualIPMappingResponseInput interface {
	pulumi.Input

	ToVirtualIPMappingResponseOutput() VirtualIPMappingResponseOutput
	ToVirtualIPMappingResponseOutputWithContext(context.Context) VirtualIPMappingResponseOutput
}

// Class that represents a VIP mapping
type VirtualIPMappingResponseArgs struct {
	// Is VIP mapping in use
	InUse pulumi.BoolPtrInput `pulumi:"inUse"`
	// Internal HTTP port
	InternalHttpPort pulumi.IntPtrInput `pulumi:"internalHttpPort"`
	// Internal HTTPS port
	InternalHttpsPort pulumi.IntPtrInput `pulumi:"internalHttpsPort"`
	// Virtual IP address
	VirtualIP pulumi.StringPtrInput `pulumi:"virtualIP"`
}

func (VirtualIPMappingResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualIPMappingResponse)(nil)).Elem()
}

func (i VirtualIPMappingResponseArgs) ToVirtualIPMappingResponseOutput() VirtualIPMappingResponseOutput {
	return i.ToVirtualIPMappingResponseOutputWithContext(context.Background())
}

func (i VirtualIPMappingResponseArgs) ToVirtualIPMappingResponseOutputWithContext(ctx context.Context) VirtualIPMappingResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualIPMappingResponseOutput)
}

// VirtualIPMappingResponseArrayInput is an input type that accepts VirtualIPMappingResponseArray and VirtualIPMappingResponseArrayOutput values.
// You can construct a concrete instance of `VirtualIPMappingResponseArrayInput` via:
//
//          VirtualIPMappingResponseArray{ VirtualIPMappingResponseArgs{...} }
type VirtualIPMappingResponseArrayInput interface {
	pulumi.Input

	ToVirtualIPMappingResponseArrayOutput() VirtualIPMappingResponseArrayOutput
	ToVirtualIPMappingResponseArrayOutputWithContext(context.Context) VirtualIPMappingResponseArrayOutput
}

type VirtualIPMappingResponseArray []VirtualIPMappingResponseInput

func (VirtualIPMappingResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualIPMappingResponse)(nil)).Elem()
}

func (i VirtualIPMappingResponseArray) ToVirtualIPMappingResponseArrayOutput() VirtualIPMappingResponseArrayOutput {
	return i.ToVirtualIPMappingResponseArrayOutputWithContext(context.Background())
}

func (i VirtualIPMappingResponseArray) ToVirtualIPMappingResponseArrayOutputWithContext(ctx context.Context) VirtualIPMappingResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualIPMappingResponseArrayOutput)
}

// Class that represents a VIP mapping
type VirtualIPMappingResponseOutput struct{ *pulumi.OutputState }

func (VirtualIPMappingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualIPMappingResponse)(nil)).Elem()
}

func (o VirtualIPMappingResponseOutput) ToVirtualIPMappingResponseOutput() VirtualIPMappingResponseOutput {
	return o
}

func (o VirtualIPMappingResponseOutput) ToVirtualIPMappingResponseOutputWithContext(ctx context.Context) VirtualIPMappingResponseOutput {
	return o
}

// Is VIP mapping in use
func (o VirtualIPMappingResponseOutput) InUse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualIPMappingResponse) *bool { return v.InUse }).(pulumi.BoolPtrOutput)
}

// Internal HTTP port
func (o VirtualIPMappingResponseOutput) InternalHttpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualIPMappingResponse) *int { return v.InternalHttpPort }).(pulumi.IntPtrOutput)
}

// Internal HTTPS port
func (o VirtualIPMappingResponseOutput) InternalHttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualIPMappingResponse) *int { return v.InternalHttpsPort }).(pulumi.IntPtrOutput)
}

// Virtual IP address
func (o VirtualIPMappingResponseOutput) VirtualIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualIPMappingResponse) *string { return v.VirtualIP }).(pulumi.StringPtrOutput)
}

type VirtualIPMappingResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualIPMappingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualIPMappingResponse)(nil)).Elem()
}

func (o VirtualIPMappingResponseArrayOutput) ToVirtualIPMappingResponseArrayOutput() VirtualIPMappingResponseArrayOutput {
	return o
}

func (o VirtualIPMappingResponseArrayOutput) ToVirtualIPMappingResponseArrayOutputWithContext(ctx context.Context) VirtualIPMappingResponseArrayOutput {
	return o
}

func (o VirtualIPMappingResponseArrayOutput) Index(i pulumi.IntInput) VirtualIPMappingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualIPMappingResponse {
		return vs[0].([]VirtualIPMappingResponse)[vs[1].(int)]
	}).(VirtualIPMappingResponseOutput)
}

// Specification for using a virtual network
type VirtualNetworkProfile struct {
	// Resource id of the virtual network
	Id *string `pulumi:"id"`
	// Name of the virtual network (read-only)
	Name *string `pulumi:"name"`
	// Subnet within the virtual network
	Subnet *string `pulumi:"subnet"`
	// Resource type of the virtual network (read-only)
	Type *string `pulumi:"type"`
}

// VirtualNetworkProfileInput is an input type that accepts VirtualNetworkProfileArgs and VirtualNetworkProfileOutput values.
// You can construct a concrete instance of `VirtualNetworkProfileInput` via:
//
//          VirtualNetworkProfileArgs{...}
type VirtualNetworkProfileInput interface {
	pulumi.Input

	ToVirtualNetworkProfileOutput() VirtualNetworkProfileOutput
	ToVirtualNetworkProfileOutputWithContext(context.Context) VirtualNetworkProfileOutput
}

// Specification for using a virtual network
type VirtualNetworkProfileArgs struct {
	// Resource id of the virtual network
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the virtual network (read-only)
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Subnet within the virtual network
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
	// Resource type of the virtual network (read-only)
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (VirtualNetworkProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkProfile)(nil)).Elem()
}

func (i VirtualNetworkProfileArgs) ToVirtualNetworkProfileOutput() VirtualNetworkProfileOutput {
	return i.ToVirtualNetworkProfileOutputWithContext(context.Background())
}

func (i VirtualNetworkProfileArgs) ToVirtualNetworkProfileOutputWithContext(ctx context.Context) VirtualNetworkProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkProfileOutput)
}

func (i VirtualNetworkProfileArgs) ToVirtualNetworkProfilePtrOutput() VirtualNetworkProfilePtrOutput {
	return i.ToVirtualNetworkProfilePtrOutputWithContext(context.Background())
}

func (i VirtualNetworkProfileArgs) ToVirtualNetworkProfilePtrOutputWithContext(ctx context.Context) VirtualNetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkProfileOutput).ToVirtualNetworkProfilePtrOutputWithContext(ctx)
}

// VirtualNetworkProfilePtrInput is an input type that accepts VirtualNetworkProfileArgs, VirtualNetworkProfilePtr and VirtualNetworkProfilePtrOutput values.
// You can construct a concrete instance of `VirtualNetworkProfilePtrInput` via:
//
//          VirtualNetworkProfileArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkProfilePtrInput interface {
	pulumi.Input

	ToVirtualNetworkProfilePtrOutput() VirtualNetworkProfilePtrOutput
	ToVirtualNetworkProfilePtrOutputWithContext(context.Context) VirtualNetworkProfilePtrOutput
}

type virtualNetworkProfilePtrType VirtualNetworkProfileArgs

func VirtualNetworkProfilePtr(v *VirtualNetworkProfileArgs) VirtualNetworkProfilePtrInput {
	return (*virtualNetworkProfilePtrType)(v)
}

func (*virtualNetworkProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkProfile)(nil)).Elem()
}

func (i *virtualNetworkProfilePtrType) ToVirtualNetworkProfilePtrOutput() VirtualNetworkProfilePtrOutput {
	return i.ToVirtualNetworkProfilePtrOutputWithContext(context.Background())
}

func (i *virtualNetworkProfilePtrType) ToVirtualNetworkProfilePtrOutputWithContext(ctx context.Context) VirtualNetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkProfilePtrOutput)
}

// Specification for using a virtual network
type VirtualNetworkProfileOutput struct{ *pulumi.OutputState }

func (VirtualNetworkProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkProfile)(nil)).Elem()
}

func (o VirtualNetworkProfileOutput) ToVirtualNetworkProfileOutput() VirtualNetworkProfileOutput {
	return o
}

func (o VirtualNetworkProfileOutput) ToVirtualNetworkProfileOutputWithContext(ctx context.Context) VirtualNetworkProfileOutput {
	return o
}

func (o VirtualNetworkProfileOutput) ToVirtualNetworkProfilePtrOutput() VirtualNetworkProfilePtrOutput {
	return o.ToVirtualNetworkProfilePtrOutputWithContext(context.Background())
}

func (o VirtualNetworkProfileOutput) ToVirtualNetworkProfilePtrOutputWithContext(ctx context.Context) VirtualNetworkProfilePtrOutput {
	return o.ApplyT(func(v VirtualNetworkProfile) *VirtualNetworkProfile {
		return &v
	}).(VirtualNetworkProfilePtrOutput)
}

// Resource id of the virtual network
func (o VirtualNetworkProfileOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkProfile) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the virtual network (read-only)
func (o VirtualNetworkProfileOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkProfile) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Subnet within the virtual network
func (o VirtualNetworkProfileOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkProfile) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

// Resource type of the virtual network (read-only)
func (o VirtualNetworkProfileOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkProfile) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type VirtualNetworkProfilePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkProfile)(nil)).Elem()
}

func (o VirtualNetworkProfilePtrOutput) ToVirtualNetworkProfilePtrOutput() VirtualNetworkProfilePtrOutput {
	return o
}

func (o VirtualNetworkProfilePtrOutput) ToVirtualNetworkProfilePtrOutputWithContext(ctx context.Context) VirtualNetworkProfilePtrOutput {
	return o
}

func (o VirtualNetworkProfilePtrOutput) Elem() VirtualNetworkProfileOutput {
	return o.ApplyT(func(v *VirtualNetworkProfile) VirtualNetworkProfile { return *v }).(VirtualNetworkProfileOutput)
}

// Resource id of the virtual network
func (o VirtualNetworkProfilePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Name of the virtual network (read-only)
func (o VirtualNetworkProfilePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Subnet within the virtual network
func (o VirtualNetworkProfilePtrOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(pulumi.StringPtrOutput)
}

// Resource type of the virtual network (read-only)
func (o VirtualNetworkProfilePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Specification for using a virtual network
type VirtualNetworkProfileResponse struct {
	// Resource id of the virtual network
	Id *string `pulumi:"id"`
	// Name of the virtual network (read-only)
	Name *string `pulumi:"name"`
	// Subnet within the virtual network
	Subnet *string `pulumi:"subnet"`
	// Resource type of the virtual network (read-only)
	Type *string `pulumi:"type"`
}

// VirtualNetworkProfileResponseInput is an input type that accepts VirtualNetworkProfileResponseArgs and VirtualNetworkProfileResponseOutput values.
// You can construct a concrete instance of `VirtualNetworkProfileResponseInput` via:
//
//          VirtualNetworkProfileResponseArgs{...}
type VirtualNetworkProfileResponseInput interface {
	pulumi.Input

	ToVirtualNetworkProfileResponseOutput() VirtualNetworkProfileResponseOutput
	ToVirtualNetworkProfileResponseOutputWithContext(context.Context) VirtualNetworkProfileResponseOutput
}

// Specification for using a virtual network
type VirtualNetworkProfileResponseArgs struct {
	// Resource id of the virtual network
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the virtual network (read-only)
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Subnet within the virtual network
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
	// Resource type of the virtual network (read-only)
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (VirtualNetworkProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkProfileResponse)(nil)).Elem()
}

func (i VirtualNetworkProfileResponseArgs) ToVirtualNetworkProfileResponseOutput() VirtualNetworkProfileResponseOutput {
	return i.ToVirtualNetworkProfileResponseOutputWithContext(context.Background())
}

func (i VirtualNetworkProfileResponseArgs) ToVirtualNetworkProfileResponseOutputWithContext(ctx context.Context) VirtualNetworkProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkProfileResponseOutput)
}

func (i VirtualNetworkProfileResponseArgs) ToVirtualNetworkProfileResponsePtrOutput() VirtualNetworkProfileResponsePtrOutput {
	return i.ToVirtualNetworkProfileResponsePtrOutputWithContext(context.Background())
}

func (i VirtualNetworkProfileResponseArgs) ToVirtualNetworkProfileResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkProfileResponseOutput).ToVirtualNetworkProfileResponsePtrOutputWithContext(ctx)
}

// VirtualNetworkProfileResponsePtrInput is an input type that accepts VirtualNetworkProfileResponseArgs, VirtualNetworkProfileResponsePtr and VirtualNetworkProfileResponsePtrOutput values.
// You can construct a concrete instance of `VirtualNetworkProfileResponsePtrInput` via:
//
//          VirtualNetworkProfileResponseArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkProfileResponsePtrInput interface {
	pulumi.Input

	ToVirtualNetworkProfileResponsePtrOutput() VirtualNetworkProfileResponsePtrOutput
	ToVirtualNetworkProfileResponsePtrOutputWithContext(context.Context) VirtualNetworkProfileResponsePtrOutput
}

type virtualNetworkProfileResponsePtrType VirtualNetworkProfileResponseArgs

func VirtualNetworkProfileResponsePtr(v *VirtualNetworkProfileResponseArgs) VirtualNetworkProfileResponsePtrInput {
	return (*virtualNetworkProfileResponsePtrType)(v)
}

func (*virtualNetworkProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkProfileResponse)(nil)).Elem()
}

func (i *virtualNetworkProfileResponsePtrType) ToVirtualNetworkProfileResponsePtrOutput() VirtualNetworkProfileResponsePtrOutput {
	return i.ToVirtualNetworkProfileResponsePtrOutputWithContext(context.Background())
}

func (i *virtualNetworkProfileResponsePtrType) ToVirtualNetworkProfileResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkProfileResponsePtrOutput)
}

// Specification for using a virtual network
type VirtualNetworkProfileResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkProfileResponse)(nil)).Elem()
}

func (o VirtualNetworkProfileResponseOutput) ToVirtualNetworkProfileResponseOutput() VirtualNetworkProfileResponseOutput {
	return o
}

func (o VirtualNetworkProfileResponseOutput) ToVirtualNetworkProfileResponseOutputWithContext(ctx context.Context) VirtualNetworkProfileResponseOutput {
	return o
}

func (o VirtualNetworkProfileResponseOutput) ToVirtualNetworkProfileResponsePtrOutput() VirtualNetworkProfileResponsePtrOutput {
	return o.ToVirtualNetworkProfileResponsePtrOutputWithContext(context.Background())
}

func (o VirtualNetworkProfileResponseOutput) ToVirtualNetworkProfileResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkProfileResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkProfileResponse) *VirtualNetworkProfileResponse {
		return &v
	}).(VirtualNetworkProfileResponsePtrOutput)
}

// Resource id of the virtual network
func (o VirtualNetworkProfileResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkProfileResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the virtual network (read-only)
func (o VirtualNetworkProfileResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkProfileResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Subnet within the virtual network
func (o VirtualNetworkProfileResponseOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkProfileResponse) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

// Resource type of the virtual network (read-only)
func (o VirtualNetworkProfileResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkProfileResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type VirtualNetworkProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkProfileResponse)(nil)).Elem()
}

func (o VirtualNetworkProfileResponsePtrOutput) ToVirtualNetworkProfileResponsePtrOutput() VirtualNetworkProfileResponsePtrOutput {
	return o
}

func (o VirtualNetworkProfileResponsePtrOutput) ToVirtualNetworkProfileResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkProfileResponsePtrOutput {
	return o
}

func (o VirtualNetworkProfileResponsePtrOutput) Elem() VirtualNetworkProfileResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkProfileResponse) VirtualNetworkProfileResponse { return *v }).(VirtualNetworkProfileResponseOutput)
}

// Resource id of the virtual network
func (o VirtualNetworkProfileResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Name of the virtual network (read-only)
func (o VirtualNetworkProfileResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Subnet within the virtual network
func (o VirtualNetworkProfileResponsePtrOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(pulumi.StringPtrOutput)
}

// Resource type of the virtual network (read-only)
func (o VirtualNetworkProfileResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type VnetInfoProperties struct {
	// A certificate file (.cer) blob containing the public key of the private key used to authenticate a
	//             Point-To-Site VPN connection.
	CertBlob *string `pulumi:"certBlob"`
	// The client certificate thumbprint
	CertThumbprint *string `pulumi:"certThumbprint"`
	// Dns servers to be used by this VNET. This should be a comma-separated list of IP addresses.
	DnsServers *string `pulumi:"dnsServers"`
	// Flag to determine if a resync is required
	ResyncRequired *bool `pulumi:"resyncRequired"`
	// The routes that this virtual network connection uses.
	Routes []VnetRoute `pulumi:"routes"`
	// The vnet resource id
	VnetResourceId *string `pulumi:"vnetResourceId"`
}

// VnetInfoPropertiesInput is an input type that accepts VnetInfoPropertiesArgs and VnetInfoPropertiesOutput values.
// You can construct a concrete instance of `VnetInfoPropertiesInput` via:
//
//          VnetInfoPropertiesArgs{...}
type VnetInfoPropertiesInput interface {
	pulumi.Input

	ToVnetInfoPropertiesOutput() VnetInfoPropertiesOutput
	ToVnetInfoPropertiesOutputWithContext(context.Context) VnetInfoPropertiesOutput
}

type VnetInfoPropertiesArgs struct {
	// A certificate file (.cer) blob containing the public key of the private key used to authenticate a
	//             Point-To-Site VPN connection.
	CertBlob pulumi.StringPtrInput `pulumi:"certBlob"`
	// The client certificate thumbprint
	CertThumbprint pulumi.StringPtrInput `pulumi:"certThumbprint"`
	// Dns servers to be used by this VNET. This should be a comma-separated list of IP addresses.
	DnsServers pulumi.StringPtrInput `pulumi:"dnsServers"`
	// Flag to determine if a resync is required
	ResyncRequired pulumi.BoolPtrInput `pulumi:"resyncRequired"`
	// The routes that this virtual network connection uses.
	Routes VnetRouteArrayInput `pulumi:"routes"`
	// The vnet resource id
	VnetResourceId pulumi.StringPtrInput `pulumi:"vnetResourceId"`
}

func (VnetInfoPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VnetInfoProperties)(nil)).Elem()
}

func (i VnetInfoPropertiesArgs) ToVnetInfoPropertiesOutput() VnetInfoPropertiesOutput {
	return i.ToVnetInfoPropertiesOutputWithContext(context.Background())
}

func (i VnetInfoPropertiesArgs) ToVnetInfoPropertiesOutputWithContext(ctx context.Context) VnetInfoPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetInfoPropertiesOutput)
}

func (i VnetInfoPropertiesArgs) ToVnetInfoPropertiesPtrOutput() VnetInfoPropertiesPtrOutput {
	return i.ToVnetInfoPropertiesPtrOutputWithContext(context.Background())
}

func (i VnetInfoPropertiesArgs) ToVnetInfoPropertiesPtrOutputWithContext(ctx context.Context) VnetInfoPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetInfoPropertiesOutput).ToVnetInfoPropertiesPtrOutputWithContext(ctx)
}

// VnetInfoPropertiesPtrInput is an input type that accepts VnetInfoPropertiesArgs, VnetInfoPropertiesPtr and VnetInfoPropertiesPtrOutput values.
// You can construct a concrete instance of `VnetInfoPropertiesPtrInput` via:
//
//          VnetInfoPropertiesArgs{...}
//
//  or:
//
//          nil
type VnetInfoPropertiesPtrInput interface {
	pulumi.Input

	ToVnetInfoPropertiesPtrOutput() VnetInfoPropertiesPtrOutput
	ToVnetInfoPropertiesPtrOutputWithContext(context.Context) VnetInfoPropertiesPtrOutput
}

type vnetInfoPropertiesPtrType VnetInfoPropertiesArgs

func VnetInfoPropertiesPtr(v *VnetInfoPropertiesArgs) VnetInfoPropertiesPtrInput {
	return (*vnetInfoPropertiesPtrType)(v)
}

func (*vnetInfoPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VnetInfoProperties)(nil)).Elem()
}

func (i *vnetInfoPropertiesPtrType) ToVnetInfoPropertiesPtrOutput() VnetInfoPropertiesPtrOutput {
	return i.ToVnetInfoPropertiesPtrOutputWithContext(context.Background())
}

func (i *vnetInfoPropertiesPtrType) ToVnetInfoPropertiesPtrOutputWithContext(ctx context.Context) VnetInfoPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetInfoPropertiesPtrOutput)
}

type VnetInfoPropertiesOutput struct{ *pulumi.OutputState }

func (VnetInfoPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VnetInfoProperties)(nil)).Elem()
}

func (o VnetInfoPropertiesOutput) ToVnetInfoPropertiesOutput() VnetInfoPropertiesOutput {
	return o
}

func (o VnetInfoPropertiesOutput) ToVnetInfoPropertiesOutputWithContext(ctx context.Context) VnetInfoPropertiesOutput {
	return o
}

func (o VnetInfoPropertiesOutput) ToVnetInfoPropertiesPtrOutput() VnetInfoPropertiesPtrOutput {
	return o.ToVnetInfoPropertiesPtrOutputWithContext(context.Background())
}

func (o VnetInfoPropertiesOutput) ToVnetInfoPropertiesPtrOutputWithContext(ctx context.Context) VnetInfoPropertiesPtrOutput {
	return o.ApplyT(func(v VnetInfoProperties) *VnetInfoProperties {
		return &v
	}).(VnetInfoPropertiesPtrOutput)
}

// A certificate file (.cer) blob containing the public key of the private key used to authenticate a
//             Point-To-Site VPN connection.
func (o VnetInfoPropertiesOutput) CertBlob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetInfoProperties) *string { return v.CertBlob }).(pulumi.StringPtrOutput)
}

// The client certificate thumbprint
func (o VnetInfoPropertiesOutput) CertThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetInfoProperties) *string { return v.CertThumbprint }).(pulumi.StringPtrOutput)
}

// Dns servers to be used by this VNET. This should be a comma-separated list of IP addresses.
func (o VnetInfoPropertiesOutput) DnsServers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetInfoProperties) *string { return v.DnsServers }).(pulumi.StringPtrOutput)
}

// Flag to determine if a resync is required
func (o VnetInfoPropertiesOutput) ResyncRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VnetInfoProperties) *bool { return v.ResyncRequired }).(pulumi.BoolPtrOutput)
}

// The routes that this virtual network connection uses.
func (o VnetInfoPropertiesOutput) Routes() VnetRouteArrayOutput {
	return o.ApplyT(func(v VnetInfoProperties) []VnetRoute { return v.Routes }).(VnetRouteArrayOutput)
}

// The vnet resource id
func (o VnetInfoPropertiesOutput) VnetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetInfoProperties) *string { return v.VnetResourceId }).(pulumi.StringPtrOutput)
}

type VnetInfoPropertiesPtrOutput struct{ *pulumi.OutputState }

func (VnetInfoPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VnetInfoProperties)(nil)).Elem()
}

func (o VnetInfoPropertiesPtrOutput) ToVnetInfoPropertiesPtrOutput() VnetInfoPropertiesPtrOutput {
	return o
}

func (o VnetInfoPropertiesPtrOutput) ToVnetInfoPropertiesPtrOutputWithContext(ctx context.Context) VnetInfoPropertiesPtrOutput {
	return o
}

func (o VnetInfoPropertiesPtrOutput) Elem() VnetInfoPropertiesOutput {
	return o.ApplyT(func(v *VnetInfoProperties) VnetInfoProperties { return *v }).(VnetInfoPropertiesOutput)
}

// A certificate file (.cer) blob containing the public key of the private key used to authenticate a
//             Point-To-Site VPN connection.
func (o VnetInfoPropertiesPtrOutput) CertBlob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VnetInfoProperties) *string {
		if v == nil {
			return nil
		}
		return v.CertBlob
	}).(pulumi.StringPtrOutput)
}

// The client certificate thumbprint
func (o VnetInfoPropertiesPtrOutput) CertThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VnetInfoProperties) *string {
		if v == nil {
			return nil
		}
		return v.CertThumbprint
	}).(pulumi.StringPtrOutput)
}

// Dns servers to be used by this VNET. This should be a comma-separated list of IP addresses.
func (o VnetInfoPropertiesPtrOutput) DnsServers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VnetInfoProperties) *string {
		if v == nil {
			return nil
		}
		return v.DnsServers
	}).(pulumi.StringPtrOutput)
}

// Flag to determine if a resync is required
func (o VnetInfoPropertiesPtrOutput) ResyncRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VnetInfoProperties) *bool {
		if v == nil {
			return nil
		}
		return v.ResyncRequired
	}).(pulumi.BoolPtrOutput)
}

// The routes that this virtual network connection uses.
func (o VnetInfoPropertiesPtrOutput) Routes() VnetRouteArrayOutput {
	return o.ApplyT(func(v *VnetInfoProperties) []VnetRoute {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(VnetRouteArrayOutput)
}

// The vnet resource id
func (o VnetInfoPropertiesPtrOutput) VnetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VnetInfoProperties) *string {
		if v == nil {
			return nil
		}
		return v.VnetResourceId
	}).(pulumi.StringPtrOutput)
}

type VnetInfoResponseProperties struct {
	// A certificate file (.cer) blob containing the public key of the private key used to authenticate a
	//             Point-To-Site VPN connection.
	CertBlob *string `pulumi:"certBlob"`
	// The client certificate thumbprint
	CertThumbprint *string `pulumi:"certThumbprint"`
	// Dns servers to be used by this VNET. This should be a comma-separated list of IP addresses.
	DnsServers *string `pulumi:"dnsServers"`
	// Flag to determine if a resync is required
	ResyncRequired *bool `pulumi:"resyncRequired"`
	// The routes that this virtual network connection uses.
	Routes []VnetRouteResponse `pulumi:"routes"`
	// The vnet resource id
	VnetResourceId *string `pulumi:"vnetResourceId"`
}

// VnetInfoResponsePropertiesInput is an input type that accepts VnetInfoResponsePropertiesArgs and VnetInfoResponsePropertiesOutput values.
// You can construct a concrete instance of `VnetInfoResponsePropertiesInput` via:
//
//          VnetInfoResponsePropertiesArgs{...}
type VnetInfoResponsePropertiesInput interface {
	pulumi.Input

	ToVnetInfoResponsePropertiesOutput() VnetInfoResponsePropertiesOutput
	ToVnetInfoResponsePropertiesOutputWithContext(context.Context) VnetInfoResponsePropertiesOutput
}

type VnetInfoResponsePropertiesArgs struct {
	// A certificate file (.cer) blob containing the public key of the private key used to authenticate a
	//             Point-To-Site VPN connection.
	CertBlob pulumi.StringPtrInput `pulumi:"certBlob"`
	// The client certificate thumbprint
	CertThumbprint pulumi.StringPtrInput `pulumi:"certThumbprint"`
	// Dns servers to be used by this VNET. This should be a comma-separated list of IP addresses.
	DnsServers pulumi.StringPtrInput `pulumi:"dnsServers"`
	// Flag to determine if a resync is required
	ResyncRequired pulumi.BoolPtrInput `pulumi:"resyncRequired"`
	// The routes that this virtual network connection uses.
	Routes VnetRouteResponseArrayInput `pulumi:"routes"`
	// The vnet resource id
	VnetResourceId pulumi.StringPtrInput `pulumi:"vnetResourceId"`
}

func (VnetInfoResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VnetInfoResponseProperties)(nil)).Elem()
}

func (i VnetInfoResponsePropertiesArgs) ToVnetInfoResponsePropertiesOutput() VnetInfoResponsePropertiesOutput {
	return i.ToVnetInfoResponsePropertiesOutputWithContext(context.Background())
}

func (i VnetInfoResponsePropertiesArgs) ToVnetInfoResponsePropertiesOutputWithContext(ctx context.Context) VnetInfoResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetInfoResponsePropertiesOutput)
}

func (i VnetInfoResponsePropertiesArgs) ToVnetInfoResponsePropertiesPtrOutput() VnetInfoResponsePropertiesPtrOutput {
	return i.ToVnetInfoResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i VnetInfoResponsePropertiesArgs) ToVnetInfoResponsePropertiesPtrOutputWithContext(ctx context.Context) VnetInfoResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetInfoResponsePropertiesOutput).ToVnetInfoResponsePropertiesPtrOutputWithContext(ctx)
}

// VnetInfoResponsePropertiesPtrInput is an input type that accepts VnetInfoResponsePropertiesArgs, VnetInfoResponsePropertiesPtr and VnetInfoResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `VnetInfoResponsePropertiesPtrInput` via:
//
//          VnetInfoResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type VnetInfoResponsePropertiesPtrInput interface {
	pulumi.Input

	ToVnetInfoResponsePropertiesPtrOutput() VnetInfoResponsePropertiesPtrOutput
	ToVnetInfoResponsePropertiesPtrOutputWithContext(context.Context) VnetInfoResponsePropertiesPtrOutput
}

type vnetInfoResponsePropertiesPtrType VnetInfoResponsePropertiesArgs

func VnetInfoResponsePropertiesPtr(v *VnetInfoResponsePropertiesArgs) VnetInfoResponsePropertiesPtrInput {
	return (*vnetInfoResponsePropertiesPtrType)(v)
}

func (*vnetInfoResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VnetInfoResponseProperties)(nil)).Elem()
}

func (i *vnetInfoResponsePropertiesPtrType) ToVnetInfoResponsePropertiesPtrOutput() VnetInfoResponsePropertiesPtrOutput {
	return i.ToVnetInfoResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *vnetInfoResponsePropertiesPtrType) ToVnetInfoResponsePropertiesPtrOutputWithContext(ctx context.Context) VnetInfoResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetInfoResponsePropertiesPtrOutput)
}

type VnetInfoResponsePropertiesOutput struct{ *pulumi.OutputState }

func (VnetInfoResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VnetInfoResponseProperties)(nil)).Elem()
}

func (o VnetInfoResponsePropertiesOutput) ToVnetInfoResponsePropertiesOutput() VnetInfoResponsePropertiesOutput {
	return o
}

func (o VnetInfoResponsePropertiesOutput) ToVnetInfoResponsePropertiesOutputWithContext(ctx context.Context) VnetInfoResponsePropertiesOutput {
	return o
}

func (o VnetInfoResponsePropertiesOutput) ToVnetInfoResponsePropertiesPtrOutput() VnetInfoResponsePropertiesPtrOutput {
	return o.ToVnetInfoResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o VnetInfoResponsePropertiesOutput) ToVnetInfoResponsePropertiesPtrOutputWithContext(ctx context.Context) VnetInfoResponsePropertiesPtrOutput {
	return o.ApplyT(func(v VnetInfoResponseProperties) *VnetInfoResponseProperties {
		return &v
	}).(VnetInfoResponsePropertiesPtrOutput)
}

// A certificate file (.cer) blob containing the public key of the private key used to authenticate a
//             Point-To-Site VPN connection.
func (o VnetInfoResponsePropertiesOutput) CertBlob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetInfoResponseProperties) *string { return v.CertBlob }).(pulumi.StringPtrOutput)
}

// The client certificate thumbprint
func (o VnetInfoResponsePropertiesOutput) CertThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetInfoResponseProperties) *string { return v.CertThumbprint }).(pulumi.StringPtrOutput)
}

// Dns servers to be used by this VNET. This should be a comma-separated list of IP addresses.
func (o VnetInfoResponsePropertiesOutput) DnsServers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetInfoResponseProperties) *string { return v.DnsServers }).(pulumi.StringPtrOutput)
}

// Flag to determine if a resync is required
func (o VnetInfoResponsePropertiesOutput) ResyncRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VnetInfoResponseProperties) *bool { return v.ResyncRequired }).(pulumi.BoolPtrOutput)
}

// The routes that this virtual network connection uses.
func (o VnetInfoResponsePropertiesOutput) Routes() VnetRouteResponseArrayOutput {
	return o.ApplyT(func(v VnetInfoResponseProperties) []VnetRouteResponse { return v.Routes }).(VnetRouteResponseArrayOutput)
}

// The vnet resource id
func (o VnetInfoResponsePropertiesOutput) VnetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetInfoResponseProperties) *string { return v.VnetResourceId }).(pulumi.StringPtrOutput)
}

type VnetInfoResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (VnetInfoResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VnetInfoResponseProperties)(nil)).Elem()
}

func (o VnetInfoResponsePropertiesPtrOutput) ToVnetInfoResponsePropertiesPtrOutput() VnetInfoResponsePropertiesPtrOutput {
	return o
}

func (o VnetInfoResponsePropertiesPtrOutput) ToVnetInfoResponsePropertiesPtrOutputWithContext(ctx context.Context) VnetInfoResponsePropertiesPtrOutput {
	return o
}

func (o VnetInfoResponsePropertiesPtrOutput) Elem() VnetInfoResponsePropertiesOutput {
	return o.ApplyT(func(v *VnetInfoResponseProperties) VnetInfoResponseProperties { return *v }).(VnetInfoResponsePropertiesOutput)
}

// A certificate file (.cer) blob containing the public key of the private key used to authenticate a
//             Point-To-Site VPN connection.
func (o VnetInfoResponsePropertiesPtrOutput) CertBlob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VnetInfoResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.CertBlob
	}).(pulumi.StringPtrOutput)
}

// The client certificate thumbprint
func (o VnetInfoResponsePropertiesPtrOutput) CertThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VnetInfoResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.CertThumbprint
	}).(pulumi.StringPtrOutput)
}

// Dns servers to be used by this VNET. This should be a comma-separated list of IP addresses.
func (o VnetInfoResponsePropertiesPtrOutput) DnsServers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VnetInfoResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.DnsServers
	}).(pulumi.StringPtrOutput)
}

// Flag to determine if a resync is required
func (o VnetInfoResponsePropertiesPtrOutput) ResyncRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VnetInfoResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.ResyncRequired
	}).(pulumi.BoolPtrOutput)
}

// The routes that this virtual network connection uses.
func (o VnetInfoResponsePropertiesPtrOutput) Routes() VnetRouteResponseArrayOutput {
	return o.ApplyT(func(v *VnetInfoResponseProperties) []VnetRouteResponse {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(VnetRouteResponseArrayOutput)
}

// The vnet resource id
func (o VnetInfoResponsePropertiesPtrOutput) VnetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VnetInfoResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.VnetResourceId
	}).(pulumi.StringPtrOutput)
}

// VnetRoute contract used to pass routing information for a vnet.
type VnetRoute struct {
	// Resource Id
	Id *string `pulumi:"id"`
	// Kind of resource
	Kind *string `pulumi:"kind"`
	// Resource Location
	Location string `pulumi:"location"`
	// Resource Name
	Name       *string              `pulumi:"name"`
	Properties *VnetRouteProperties `pulumi:"properties"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type *string `pulumi:"type"`
}

// VnetRouteInput is an input type that accepts VnetRouteArgs and VnetRouteOutput values.
// You can construct a concrete instance of `VnetRouteInput` via:
//
//          VnetRouteArgs{...}
type VnetRouteInput interface {
	pulumi.Input

	ToVnetRouteOutput() VnetRouteOutput
	ToVnetRouteOutputWithContext(context.Context) VnetRouteOutput
}

// VnetRoute contract used to pass routing information for a vnet.
type VnetRouteArgs struct {
	// Resource Id
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Kind of resource
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource Name
	Name       pulumi.StringPtrInput       `pulumi:"name"`
	Properties VnetRoutePropertiesPtrInput `pulumi:"properties"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (VnetRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VnetRoute)(nil)).Elem()
}

func (i VnetRouteArgs) ToVnetRouteOutput() VnetRouteOutput {
	return i.ToVnetRouteOutputWithContext(context.Background())
}

func (i VnetRouteArgs) ToVnetRouteOutputWithContext(ctx context.Context) VnetRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetRouteOutput)
}

// VnetRouteArrayInput is an input type that accepts VnetRouteArray and VnetRouteArrayOutput values.
// You can construct a concrete instance of `VnetRouteArrayInput` via:
//
//          VnetRouteArray{ VnetRouteArgs{...} }
type VnetRouteArrayInput interface {
	pulumi.Input

	ToVnetRouteArrayOutput() VnetRouteArrayOutput
	ToVnetRouteArrayOutputWithContext(context.Context) VnetRouteArrayOutput
}

type VnetRouteArray []VnetRouteInput

func (VnetRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VnetRoute)(nil)).Elem()
}

func (i VnetRouteArray) ToVnetRouteArrayOutput() VnetRouteArrayOutput {
	return i.ToVnetRouteArrayOutputWithContext(context.Background())
}

func (i VnetRouteArray) ToVnetRouteArrayOutputWithContext(ctx context.Context) VnetRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetRouteArrayOutput)
}

// VnetRoute contract used to pass routing information for a vnet.
type VnetRouteOutput struct{ *pulumi.OutputState }

func (VnetRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VnetRoute)(nil)).Elem()
}

func (o VnetRouteOutput) ToVnetRouteOutput() VnetRouteOutput {
	return o
}

func (o VnetRouteOutput) ToVnetRouteOutputWithContext(ctx context.Context) VnetRouteOutput {
	return o
}

// Resource Id
func (o VnetRouteOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetRoute) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Kind of resource
func (o VnetRouteOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetRoute) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location
func (o VnetRouteOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v VnetRoute) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name
func (o VnetRouteOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetRoute) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o VnetRouteOutput) Properties() VnetRoutePropertiesPtrOutput {
	return o.ApplyT(func(v VnetRoute) *VnetRouteProperties { return v.Properties }).(VnetRoutePropertiesPtrOutput)
}

// Resource tags
func (o VnetRouteOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VnetRoute) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o VnetRouteOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetRoute) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type VnetRouteArrayOutput struct{ *pulumi.OutputState }

func (VnetRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VnetRoute)(nil)).Elem()
}

func (o VnetRouteArrayOutput) ToVnetRouteArrayOutput() VnetRouteArrayOutput {
	return o
}

func (o VnetRouteArrayOutput) ToVnetRouteArrayOutputWithContext(ctx context.Context) VnetRouteArrayOutput {
	return o
}

func (o VnetRouteArrayOutput) Index(i pulumi.IntInput) VnetRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VnetRoute {
		return vs[0].([]VnetRoute)[vs[1].(int)]
	}).(VnetRouteOutput)
}

type VnetRouteProperties struct {
	// The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.
	EndAddress *string `pulumi:"endAddress"`
	// The name of this route. This is only returned by the server and does not need to be set by the client.
	Name *string `pulumi:"name"`
	// The type of route this is:
	//             DEFAULT - By default, every web app has routes to the local address ranges specified by RFC1918
	//             INHERITED - Routes inherited from the real Virtual Network routes
	//             STATIC - Static route set on the web app only
	//
	//             These values will be used for syncing a Web App's routes with those from a Virtual Network. This operation will clear all DEFAULT and INHERITED routes and replace them
	//             with new INHERITED routes.
	RouteType *string `pulumi:"routeType"`
	// The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.
	StartAddress *string `pulumi:"startAddress"`
}

// VnetRoutePropertiesInput is an input type that accepts VnetRoutePropertiesArgs and VnetRoutePropertiesOutput values.
// You can construct a concrete instance of `VnetRoutePropertiesInput` via:
//
//          VnetRoutePropertiesArgs{...}
type VnetRoutePropertiesInput interface {
	pulumi.Input

	ToVnetRoutePropertiesOutput() VnetRoutePropertiesOutput
	ToVnetRoutePropertiesOutputWithContext(context.Context) VnetRoutePropertiesOutput
}

type VnetRoutePropertiesArgs struct {
	// The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.
	EndAddress pulumi.StringPtrInput `pulumi:"endAddress"`
	// The name of this route. This is only returned by the server and does not need to be set by the client.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The type of route this is:
	//             DEFAULT - By default, every web app has routes to the local address ranges specified by RFC1918
	//             INHERITED - Routes inherited from the real Virtual Network routes
	//             STATIC - Static route set on the web app only
	//
	//             These values will be used for syncing a Web App's routes with those from a Virtual Network. This operation will clear all DEFAULT and INHERITED routes and replace them
	//             with new INHERITED routes.
	RouteType pulumi.StringPtrInput `pulumi:"routeType"`
	// The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.
	StartAddress pulumi.StringPtrInput `pulumi:"startAddress"`
}

func (VnetRoutePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VnetRouteProperties)(nil)).Elem()
}

func (i VnetRoutePropertiesArgs) ToVnetRoutePropertiesOutput() VnetRoutePropertiesOutput {
	return i.ToVnetRoutePropertiesOutputWithContext(context.Background())
}

func (i VnetRoutePropertiesArgs) ToVnetRoutePropertiesOutputWithContext(ctx context.Context) VnetRoutePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetRoutePropertiesOutput)
}

func (i VnetRoutePropertiesArgs) ToVnetRoutePropertiesPtrOutput() VnetRoutePropertiesPtrOutput {
	return i.ToVnetRoutePropertiesPtrOutputWithContext(context.Background())
}

func (i VnetRoutePropertiesArgs) ToVnetRoutePropertiesPtrOutputWithContext(ctx context.Context) VnetRoutePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetRoutePropertiesOutput).ToVnetRoutePropertiesPtrOutputWithContext(ctx)
}

// VnetRoutePropertiesPtrInput is an input type that accepts VnetRoutePropertiesArgs, VnetRoutePropertiesPtr and VnetRoutePropertiesPtrOutput values.
// You can construct a concrete instance of `VnetRoutePropertiesPtrInput` via:
//
//          VnetRoutePropertiesArgs{...}
//
//  or:
//
//          nil
type VnetRoutePropertiesPtrInput interface {
	pulumi.Input

	ToVnetRoutePropertiesPtrOutput() VnetRoutePropertiesPtrOutput
	ToVnetRoutePropertiesPtrOutputWithContext(context.Context) VnetRoutePropertiesPtrOutput
}

type vnetRoutePropertiesPtrType VnetRoutePropertiesArgs

func VnetRoutePropertiesPtr(v *VnetRoutePropertiesArgs) VnetRoutePropertiesPtrInput {
	return (*vnetRoutePropertiesPtrType)(v)
}

func (*vnetRoutePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VnetRouteProperties)(nil)).Elem()
}

func (i *vnetRoutePropertiesPtrType) ToVnetRoutePropertiesPtrOutput() VnetRoutePropertiesPtrOutput {
	return i.ToVnetRoutePropertiesPtrOutputWithContext(context.Background())
}

func (i *vnetRoutePropertiesPtrType) ToVnetRoutePropertiesPtrOutputWithContext(ctx context.Context) VnetRoutePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetRoutePropertiesPtrOutput)
}

type VnetRoutePropertiesOutput struct{ *pulumi.OutputState }

func (VnetRoutePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VnetRouteProperties)(nil)).Elem()
}

func (o VnetRoutePropertiesOutput) ToVnetRoutePropertiesOutput() VnetRoutePropertiesOutput {
	return o
}

func (o VnetRoutePropertiesOutput) ToVnetRoutePropertiesOutputWithContext(ctx context.Context) VnetRoutePropertiesOutput {
	return o
}

func (o VnetRoutePropertiesOutput) ToVnetRoutePropertiesPtrOutput() VnetRoutePropertiesPtrOutput {
	return o.ToVnetRoutePropertiesPtrOutputWithContext(context.Background())
}

func (o VnetRoutePropertiesOutput) ToVnetRoutePropertiesPtrOutputWithContext(ctx context.Context) VnetRoutePropertiesPtrOutput {
	return o.ApplyT(func(v VnetRouteProperties) *VnetRouteProperties {
		return &v
	}).(VnetRoutePropertiesPtrOutput)
}

// The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.
func (o VnetRoutePropertiesOutput) EndAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetRouteProperties) *string { return v.EndAddress }).(pulumi.StringPtrOutput)
}

// The name of this route. This is only returned by the server and does not need to be set by the client.
func (o VnetRoutePropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetRouteProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of route this is:
//             DEFAULT - By default, every web app has routes to the local address ranges specified by RFC1918
//             INHERITED - Routes inherited from the real Virtual Network routes
//             STATIC - Static route set on the web app only
//
//             These values will be used for syncing a Web App's routes with those from a Virtual Network. This operation will clear all DEFAULT and INHERITED routes and replace them
//             with new INHERITED routes.
func (o VnetRoutePropertiesOutput) RouteType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetRouteProperties) *string { return v.RouteType }).(pulumi.StringPtrOutput)
}

// The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.
func (o VnetRoutePropertiesOutput) StartAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetRouteProperties) *string { return v.StartAddress }).(pulumi.StringPtrOutput)
}

type VnetRoutePropertiesPtrOutput struct{ *pulumi.OutputState }

func (VnetRoutePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VnetRouteProperties)(nil)).Elem()
}

func (o VnetRoutePropertiesPtrOutput) ToVnetRoutePropertiesPtrOutput() VnetRoutePropertiesPtrOutput {
	return o
}

func (o VnetRoutePropertiesPtrOutput) ToVnetRoutePropertiesPtrOutputWithContext(ctx context.Context) VnetRoutePropertiesPtrOutput {
	return o
}

func (o VnetRoutePropertiesPtrOutput) Elem() VnetRoutePropertiesOutput {
	return o.ApplyT(func(v *VnetRouteProperties) VnetRouteProperties { return *v }).(VnetRoutePropertiesOutput)
}

// The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.
func (o VnetRoutePropertiesPtrOutput) EndAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VnetRouteProperties) *string {
		if v == nil {
			return nil
		}
		return v.EndAddress
	}).(pulumi.StringPtrOutput)
}

// The name of this route. This is only returned by the server and does not need to be set by the client.
func (o VnetRoutePropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VnetRouteProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The type of route this is:
//             DEFAULT - By default, every web app has routes to the local address ranges specified by RFC1918
//             INHERITED - Routes inherited from the real Virtual Network routes
//             STATIC - Static route set on the web app only
//
//             These values will be used for syncing a Web App's routes with those from a Virtual Network. This operation will clear all DEFAULT and INHERITED routes and replace them
//             with new INHERITED routes.
func (o VnetRoutePropertiesPtrOutput) RouteType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VnetRouteProperties) *string {
		if v == nil {
			return nil
		}
		return v.RouteType
	}).(pulumi.StringPtrOutput)
}

// The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.
func (o VnetRoutePropertiesPtrOutput) StartAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VnetRouteProperties) *string {
		if v == nil {
			return nil
		}
		return v.StartAddress
	}).(pulumi.StringPtrOutput)
}

// VnetRoute contract used to pass routing information for a vnet.
type VnetRouteResponse struct {
	// Resource Id
	Id *string `pulumi:"id"`
	// Kind of resource
	Kind *string `pulumi:"kind"`
	// Resource Location
	Location string `pulumi:"location"`
	// Resource Name
	Name       *string                      `pulumi:"name"`
	Properties *VnetRouteResponseProperties `pulumi:"properties"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type *string `pulumi:"type"`
}

// VnetRouteResponseInput is an input type that accepts VnetRouteResponseArgs and VnetRouteResponseOutput values.
// You can construct a concrete instance of `VnetRouteResponseInput` via:
//
//          VnetRouteResponseArgs{...}
type VnetRouteResponseInput interface {
	pulumi.Input

	ToVnetRouteResponseOutput() VnetRouteResponseOutput
	ToVnetRouteResponseOutputWithContext(context.Context) VnetRouteResponseOutput
}

// VnetRoute contract used to pass routing information for a vnet.
type VnetRouteResponseArgs struct {
	// Resource Id
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Kind of resource
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource Name
	Name       pulumi.StringPtrInput               `pulumi:"name"`
	Properties VnetRouteResponsePropertiesPtrInput `pulumi:"properties"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (VnetRouteResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VnetRouteResponse)(nil)).Elem()
}

func (i VnetRouteResponseArgs) ToVnetRouteResponseOutput() VnetRouteResponseOutput {
	return i.ToVnetRouteResponseOutputWithContext(context.Background())
}

func (i VnetRouteResponseArgs) ToVnetRouteResponseOutputWithContext(ctx context.Context) VnetRouteResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetRouteResponseOutput)
}

// VnetRouteResponseArrayInput is an input type that accepts VnetRouteResponseArray and VnetRouteResponseArrayOutput values.
// You can construct a concrete instance of `VnetRouteResponseArrayInput` via:
//
//          VnetRouteResponseArray{ VnetRouteResponseArgs{...} }
type VnetRouteResponseArrayInput interface {
	pulumi.Input

	ToVnetRouteResponseArrayOutput() VnetRouteResponseArrayOutput
	ToVnetRouteResponseArrayOutputWithContext(context.Context) VnetRouteResponseArrayOutput
}

type VnetRouteResponseArray []VnetRouteResponseInput

func (VnetRouteResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VnetRouteResponse)(nil)).Elem()
}

func (i VnetRouteResponseArray) ToVnetRouteResponseArrayOutput() VnetRouteResponseArrayOutput {
	return i.ToVnetRouteResponseArrayOutputWithContext(context.Background())
}

func (i VnetRouteResponseArray) ToVnetRouteResponseArrayOutputWithContext(ctx context.Context) VnetRouteResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetRouteResponseArrayOutput)
}

// VnetRoute contract used to pass routing information for a vnet.
type VnetRouteResponseOutput struct{ *pulumi.OutputState }

func (VnetRouteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VnetRouteResponse)(nil)).Elem()
}

func (o VnetRouteResponseOutput) ToVnetRouteResponseOutput() VnetRouteResponseOutput {
	return o
}

func (o VnetRouteResponseOutput) ToVnetRouteResponseOutputWithContext(ctx context.Context) VnetRouteResponseOutput {
	return o
}

// Resource Id
func (o VnetRouteResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetRouteResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Kind of resource
func (o VnetRouteResponseOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetRouteResponse) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location
func (o VnetRouteResponseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v VnetRouteResponse) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name
func (o VnetRouteResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetRouteResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o VnetRouteResponseOutput) Properties() VnetRouteResponsePropertiesPtrOutput {
	return o.ApplyT(func(v VnetRouteResponse) *VnetRouteResponseProperties { return v.Properties }).(VnetRouteResponsePropertiesPtrOutput)
}

// Resource tags
func (o VnetRouteResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VnetRouteResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o VnetRouteResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetRouteResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type VnetRouteResponseArrayOutput struct{ *pulumi.OutputState }

func (VnetRouteResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VnetRouteResponse)(nil)).Elem()
}

func (o VnetRouteResponseArrayOutput) ToVnetRouteResponseArrayOutput() VnetRouteResponseArrayOutput {
	return o
}

func (o VnetRouteResponseArrayOutput) ToVnetRouteResponseArrayOutputWithContext(ctx context.Context) VnetRouteResponseArrayOutput {
	return o
}

func (o VnetRouteResponseArrayOutput) Index(i pulumi.IntInput) VnetRouteResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VnetRouteResponse {
		return vs[0].([]VnetRouteResponse)[vs[1].(int)]
	}).(VnetRouteResponseOutput)
}

type VnetRouteResponseProperties struct {
	// The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.
	EndAddress *string `pulumi:"endAddress"`
	// The name of this route. This is only returned by the server and does not need to be set by the client.
	Name *string `pulumi:"name"`
	// The type of route this is:
	//             DEFAULT - By default, every web app has routes to the local address ranges specified by RFC1918
	//             INHERITED - Routes inherited from the real Virtual Network routes
	//             STATIC - Static route set on the web app only
	//
	//             These values will be used for syncing a Web App's routes with those from a Virtual Network. This operation will clear all DEFAULT and INHERITED routes and replace them
	//             with new INHERITED routes.
	RouteType *string `pulumi:"routeType"`
	// The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.
	StartAddress *string `pulumi:"startAddress"`
}

// VnetRouteResponsePropertiesInput is an input type that accepts VnetRouteResponsePropertiesArgs and VnetRouteResponsePropertiesOutput values.
// You can construct a concrete instance of `VnetRouteResponsePropertiesInput` via:
//
//          VnetRouteResponsePropertiesArgs{...}
type VnetRouteResponsePropertiesInput interface {
	pulumi.Input

	ToVnetRouteResponsePropertiesOutput() VnetRouteResponsePropertiesOutput
	ToVnetRouteResponsePropertiesOutputWithContext(context.Context) VnetRouteResponsePropertiesOutput
}

type VnetRouteResponsePropertiesArgs struct {
	// The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.
	EndAddress pulumi.StringPtrInput `pulumi:"endAddress"`
	// The name of this route. This is only returned by the server and does not need to be set by the client.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The type of route this is:
	//             DEFAULT - By default, every web app has routes to the local address ranges specified by RFC1918
	//             INHERITED - Routes inherited from the real Virtual Network routes
	//             STATIC - Static route set on the web app only
	//
	//             These values will be used for syncing a Web App's routes with those from a Virtual Network. This operation will clear all DEFAULT and INHERITED routes and replace them
	//             with new INHERITED routes.
	RouteType pulumi.StringPtrInput `pulumi:"routeType"`
	// The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.
	StartAddress pulumi.StringPtrInput `pulumi:"startAddress"`
}

func (VnetRouteResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VnetRouteResponseProperties)(nil)).Elem()
}

func (i VnetRouteResponsePropertiesArgs) ToVnetRouteResponsePropertiesOutput() VnetRouteResponsePropertiesOutput {
	return i.ToVnetRouteResponsePropertiesOutputWithContext(context.Background())
}

func (i VnetRouteResponsePropertiesArgs) ToVnetRouteResponsePropertiesOutputWithContext(ctx context.Context) VnetRouteResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetRouteResponsePropertiesOutput)
}

func (i VnetRouteResponsePropertiesArgs) ToVnetRouteResponsePropertiesPtrOutput() VnetRouteResponsePropertiesPtrOutput {
	return i.ToVnetRouteResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i VnetRouteResponsePropertiesArgs) ToVnetRouteResponsePropertiesPtrOutputWithContext(ctx context.Context) VnetRouteResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetRouteResponsePropertiesOutput).ToVnetRouteResponsePropertiesPtrOutputWithContext(ctx)
}

// VnetRouteResponsePropertiesPtrInput is an input type that accepts VnetRouteResponsePropertiesArgs, VnetRouteResponsePropertiesPtr and VnetRouteResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `VnetRouteResponsePropertiesPtrInput` via:
//
//          VnetRouteResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type VnetRouteResponsePropertiesPtrInput interface {
	pulumi.Input

	ToVnetRouteResponsePropertiesPtrOutput() VnetRouteResponsePropertiesPtrOutput
	ToVnetRouteResponsePropertiesPtrOutputWithContext(context.Context) VnetRouteResponsePropertiesPtrOutput
}

type vnetRouteResponsePropertiesPtrType VnetRouteResponsePropertiesArgs

func VnetRouteResponsePropertiesPtr(v *VnetRouteResponsePropertiesArgs) VnetRouteResponsePropertiesPtrInput {
	return (*vnetRouteResponsePropertiesPtrType)(v)
}

func (*vnetRouteResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VnetRouteResponseProperties)(nil)).Elem()
}

func (i *vnetRouteResponsePropertiesPtrType) ToVnetRouteResponsePropertiesPtrOutput() VnetRouteResponsePropertiesPtrOutput {
	return i.ToVnetRouteResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *vnetRouteResponsePropertiesPtrType) ToVnetRouteResponsePropertiesPtrOutputWithContext(ctx context.Context) VnetRouteResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetRouteResponsePropertiesPtrOutput)
}

type VnetRouteResponsePropertiesOutput struct{ *pulumi.OutputState }

func (VnetRouteResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VnetRouteResponseProperties)(nil)).Elem()
}

func (o VnetRouteResponsePropertiesOutput) ToVnetRouteResponsePropertiesOutput() VnetRouteResponsePropertiesOutput {
	return o
}

func (o VnetRouteResponsePropertiesOutput) ToVnetRouteResponsePropertiesOutputWithContext(ctx context.Context) VnetRouteResponsePropertiesOutput {
	return o
}

func (o VnetRouteResponsePropertiesOutput) ToVnetRouteResponsePropertiesPtrOutput() VnetRouteResponsePropertiesPtrOutput {
	return o.ToVnetRouteResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o VnetRouteResponsePropertiesOutput) ToVnetRouteResponsePropertiesPtrOutputWithContext(ctx context.Context) VnetRouteResponsePropertiesPtrOutput {
	return o.ApplyT(func(v VnetRouteResponseProperties) *VnetRouteResponseProperties {
		return &v
	}).(VnetRouteResponsePropertiesPtrOutput)
}

// The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.
func (o VnetRouteResponsePropertiesOutput) EndAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetRouteResponseProperties) *string { return v.EndAddress }).(pulumi.StringPtrOutput)
}

// The name of this route. This is only returned by the server and does not need to be set by the client.
func (o VnetRouteResponsePropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetRouteResponseProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of route this is:
//             DEFAULT - By default, every web app has routes to the local address ranges specified by RFC1918
//             INHERITED - Routes inherited from the real Virtual Network routes
//             STATIC - Static route set on the web app only
//
//             These values will be used for syncing a Web App's routes with those from a Virtual Network. This operation will clear all DEFAULT and INHERITED routes and replace them
//             with new INHERITED routes.
func (o VnetRouteResponsePropertiesOutput) RouteType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetRouteResponseProperties) *string { return v.RouteType }).(pulumi.StringPtrOutput)
}

// The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.
func (o VnetRouteResponsePropertiesOutput) StartAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetRouteResponseProperties) *string { return v.StartAddress }).(pulumi.StringPtrOutput)
}

type VnetRouteResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (VnetRouteResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VnetRouteResponseProperties)(nil)).Elem()
}

func (o VnetRouteResponsePropertiesPtrOutput) ToVnetRouteResponsePropertiesPtrOutput() VnetRouteResponsePropertiesPtrOutput {
	return o
}

func (o VnetRouteResponsePropertiesPtrOutput) ToVnetRouteResponsePropertiesPtrOutputWithContext(ctx context.Context) VnetRouteResponsePropertiesPtrOutput {
	return o
}

func (o VnetRouteResponsePropertiesPtrOutput) Elem() VnetRouteResponsePropertiesOutput {
	return o.ApplyT(func(v *VnetRouteResponseProperties) VnetRouteResponseProperties { return *v }).(VnetRouteResponsePropertiesOutput)
}

// The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.
func (o VnetRouteResponsePropertiesPtrOutput) EndAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VnetRouteResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.EndAddress
	}).(pulumi.StringPtrOutput)
}

// The name of this route. This is only returned by the server and does not need to be set by the client.
func (o VnetRouteResponsePropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VnetRouteResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The type of route this is:
//             DEFAULT - By default, every web app has routes to the local address ranges specified by RFC1918
//             INHERITED - Routes inherited from the real Virtual Network routes
//             STATIC - Static route set on the web app only
//
//             These values will be used for syncing a Web App's routes with those from a Virtual Network. This operation will clear all DEFAULT and INHERITED routes and replace them
//             with new INHERITED routes.
func (o VnetRouteResponsePropertiesPtrOutput) RouteType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VnetRouteResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.RouteType
	}).(pulumi.StringPtrOutput)
}

// The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.
func (o VnetRouteResponsePropertiesPtrOutput) StartAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VnetRouteResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.StartAddress
	}).(pulumi.StringPtrOutput)
}

// Worker pool of a hostingEnvironment (App Service Environment)
type WorkerPool struct {
	// Resource Id
	Id *string `pulumi:"id"`
	// Kind of resource
	Kind *string `pulumi:"kind"`
	// Resource Location
	Location string `pulumi:"location"`
	// Resource Name
	Name       *string               `pulumi:"name"`
	Properties *WorkerPoolProperties `pulumi:"properties"`
	// Describes a sku for a scalable resource
	Sku *SkuDescription `pulumi:"sku"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type *string `pulumi:"type"`
}

// WorkerPoolInput is an input type that accepts WorkerPoolArgs and WorkerPoolOutput values.
// You can construct a concrete instance of `WorkerPoolInput` via:
//
//          WorkerPoolArgs{...}
type WorkerPoolInput interface {
	pulumi.Input

	ToWorkerPoolOutput() WorkerPoolOutput
	ToWorkerPoolOutputWithContext(context.Context) WorkerPoolOutput
}

// Worker pool of a hostingEnvironment (App Service Environment)
type WorkerPoolArgs struct {
	// Resource Id
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Kind of resource
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource Name
	Name       pulumi.StringPtrInput        `pulumi:"name"`
	Properties WorkerPoolPropertiesPtrInput `pulumi:"properties"`
	// Describes a sku for a scalable resource
	Sku SkuDescriptionPtrInput `pulumi:"sku"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (WorkerPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkerPool)(nil)).Elem()
}

func (i WorkerPoolArgs) ToWorkerPoolOutput() WorkerPoolOutput {
	return i.ToWorkerPoolOutputWithContext(context.Background())
}

func (i WorkerPoolArgs) ToWorkerPoolOutputWithContext(ctx context.Context) WorkerPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerPoolOutput)
}

// WorkerPoolArrayInput is an input type that accepts WorkerPoolArray and WorkerPoolArrayOutput values.
// You can construct a concrete instance of `WorkerPoolArrayInput` via:
//
//          WorkerPoolArray{ WorkerPoolArgs{...} }
type WorkerPoolArrayInput interface {
	pulumi.Input

	ToWorkerPoolArrayOutput() WorkerPoolArrayOutput
	ToWorkerPoolArrayOutputWithContext(context.Context) WorkerPoolArrayOutput
}

type WorkerPoolArray []WorkerPoolInput

func (WorkerPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkerPool)(nil)).Elem()
}

func (i WorkerPoolArray) ToWorkerPoolArrayOutput() WorkerPoolArrayOutput {
	return i.ToWorkerPoolArrayOutputWithContext(context.Background())
}

func (i WorkerPoolArray) ToWorkerPoolArrayOutputWithContext(ctx context.Context) WorkerPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerPoolArrayOutput)
}

// Worker pool of a hostingEnvironment (App Service Environment)
type WorkerPoolOutput struct{ *pulumi.OutputState }

func (WorkerPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkerPool)(nil)).Elem()
}

func (o WorkerPoolOutput) ToWorkerPoolOutput() WorkerPoolOutput {
	return o
}

func (o WorkerPoolOutput) ToWorkerPoolOutputWithContext(ctx context.Context) WorkerPoolOutput {
	return o
}

// Resource Id
func (o WorkerPoolOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkerPool) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Kind of resource
func (o WorkerPoolOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkerPool) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location
func (o WorkerPoolOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v WorkerPool) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name
func (o WorkerPoolOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkerPool) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o WorkerPoolOutput) Properties() WorkerPoolPropertiesPtrOutput {
	return o.ApplyT(func(v WorkerPool) *WorkerPoolProperties { return v.Properties }).(WorkerPoolPropertiesPtrOutput)
}

// Describes a sku for a scalable resource
func (o WorkerPoolOutput) Sku() SkuDescriptionPtrOutput {
	return o.ApplyT(func(v WorkerPool) *SkuDescription { return v.Sku }).(SkuDescriptionPtrOutput)
}

// Resource tags
func (o WorkerPoolOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkerPool) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o WorkerPoolOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkerPool) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type WorkerPoolArrayOutput struct{ *pulumi.OutputState }

func (WorkerPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkerPool)(nil)).Elem()
}

func (o WorkerPoolArrayOutput) ToWorkerPoolArrayOutput() WorkerPoolArrayOutput {
	return o
}

func (o WorkerPoolArrayOutput) ToWorkerPoolArrayOutputWithContext(ctx context.Context) WorkerPoolArrayOutput {
	return o
}

func (o WorkerPoolArrayOutput) Index(i pulumi.IntInput) WorkerPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkerPool {
		return vs[0].([]WorkerPool)[vs[1].(int)]
	}).(WorkerPoolOutput)
}

type WorkerPoolProperties struct {
	// Shared or dedicated web app hosting
	ComputeMode *string `pulumi:"computeMode"`
	// Names of all instances in the worker pool (read only)
	InstanceNames []string `pulumi:"instanceNames"`
	// Number of instances in the worker pool
	WorkerCount *int `pulumi:"workerCount"`
	// VM size of the worker pool instances
	WorkerSize *string `pulumi:"workerSize"`
	// Worker size id for referencing this worker pool
	WorkerSizeId *int `pulumi:"workerSizeId"`
}

// WorkerPoolPropertiesInput is an input type that accepts WorkerPoolPropertiesArgs and WorkerPoolPropertiesOutput values.
// You can construct a concrete instance of `WorkerPoolPropertiesInput` via:
//
//          WorkerPoolPropertiesArgs{...}
type WorkerPoolPropertiesInput interface {
	pulumi.Input

	ToWorkerPoolPropertiesOutput() WorkerPoolPropertiesOutput
	ToWorkerPoolPropertiesOutputWithContext(context.Context) WorkerPoolPropertiesOutput
}

type WorkerPoolPropertiesArgs struct {
	// Shared or dedicated web app hosting
	ComputeMode pulumi.StringPtrInput `pulumi:"computeMode"`
	// Names of all instances in the worker pool (read only)
	InstanceNames pulumi.StringArrayInput `pulumi:"instanceNames"`
	// Number of instances in the worker pool
	WorkerCount pulumi.IntPtrInput `pulumi:"workerCount"`
	// VM size of the worker pool instances
	WorkerSize pulumi.StringPtrInput `pulumi:"workerSize"`
	// Worker size id for referencing this worker pool
	WorkerSizeId pulumi.IntPtrInput `pulumi:"workerSizeId"`
}

func (WorkerPoolPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkerPoolProperties)(nil)).Elem()
}

func (i WorkerPoolPropertiesArgs) ToWorkerPoolPropertiesOutput() WorkerPoolPropertiesOutput {
	return i.ToWorkerPoolPropertiesOutputWithContext(context.Background())
}

func (i WorkerPoolPropertiesArgs) ToWorkerPoolPropertiesOutputWithContext(ctx context.Context) WorkerPoolPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerPoolPropertiesOutput)
}

func (i WorkerPoolPropertiesArgs) ToWorkerPoolPropertiesPtrOutput() WorkerPoolPropertiesPtrOutput {
	return i.ToWorkerPoolPropertiesPtrOutputWithContext(context.Background())
}

func (i WorkerPoolPropertiesArgs) ToWorkerPoolPropertiesPtrOutputWithContext(ctx context.Context) WorkerPoolPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerPoolPropertiesOutput).ToWorkerPoolPropertiesPtrOutputWithContext(ctx)
}

// WorkerPoolPropertiesPtrInput is an input type that accepts WorkerPoolPropertiesArgs, WorkerPoolPropertiesPtr and WorkerPoolPropertiesPtrOutput values.
// You can construct a concrete instance of `WorkerPoolPropertiesPtrInput` via:
//
//          WorkerPoolPropertiesArgs{...}
//
//  or:
//
//          nil
type WorkerPoolPropertiesPtrInput interface {
	pulumi.Input

	ToWorkerPoolPropertiesPtrOutput() WorkerPoolPropertiesPtrOutput
	ToWorkerPoolPropertiesPtrOutputWithContext(context.Context) WorkerPoolPropertiesPtrOutput
}

type workerPoolPropertiesPtrType WorkerPoolPropertiesArgs

func WorkerPoolPropertiesPtr(v *WorkerPoolPropertiesArgs) WorkerPoolPropertiesPtrInput {
	return (*workerPoolPropertiesPtrType)(v)
}

func (*workerPoolPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkerPoolProperties)(nil)).Elem()
}

func (i *workerPoolPropertiesPtrType) ToWorkerPoolPropertiesPtrOutput() WorkerPoolPropertiesPtrOutput {
	return i.ToWorkerPoolPropertiesPtrOutputWithContext(context.Background())
}

func (i *workerPoolPropertiesPtrType) ToWorkerPoolPropertiesPtrOutputWithContext(ctx context.Context) WorkerPoolPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerPoolPropertiesPtrOutput)
}

type WorkerPoolPropertiesOutput struct{ *pulumi.OutputState }

func (WorkerPoolPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkerPoolProperties)(nil)).Elem()
}

func (o WorkerPoolPropertiesOutput) ToWorkerPoolPropertiesOutput() WorkerPoolPropertiesOutput {
	return o
}

func (o WorkerPoolPropertiesOutput) ToWorkerPoolPropertiesOutputWithContext(ctx context.Context) WorkerPoolPropertiesOutput {
	return o
}

func (o WorkerPoolPropertiesOutput) ToWorkerPoolPropertiesPtrOutput() WorkerPoolPropertiesPtrOutput {
	return o.ToWorkerPoolPropertiesPtrOutputWithContext(context.Background())
}

func (o WorkerPoolPropertiesOutput) ToWorkerPoolPropertiesPtrOutputWithContext(ctx context.Context) WorkerPoolPropertiesPtrOutput {
	return o.ApplyT(func(v WorkerPoolProperties) *WorkerPoolProperties {
		return &v
	}).(WorkerPoolPropertiesPtrOutput)
}

// Shared or dedicated web app hosting
func (o WorkerPoolPropertiesOutput) ComputeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkerPoolProperties) *string { return v.ComputeMode }).(pulumi.StringPtrOutput)
}

// Names of all instances in the worker pool (read only)
func (o WorkerPoolPropertiesOutput) InstanceNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkerPoolProperties) []string { return v.InstanceNames }).(pulumi.StringArrayOutput)
}

// Number of instances in the worker pool
func (o WorkerPoolPropertiesOutput) WorkerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkerPoolProperties) *int { return v.WorkerCount }).(pulumi.IntPtrOutput)
}

// VM size of the worker pool instances
func (o WorkerPoolPropertiesOutput) WorkerSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkerPoolProperties) *string { return v.WorkerSize }).(pulumi.StringPtrOutput)
}

// Worker size id for referencing this worker pool
func (o WorkerPoolPropertiesOutput) WorkerSizeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkerPoolProperties) *int { return v.WorkerSizeId }).(pulumi.IntPtrOutput)
}

type WorkerPoolPropertiesPtrOutput struct{ *pulumi.OutputState }

func (WorkerPoolPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkerPoolProperties)(nil)).Elem()
}

func (o WorkerPoolPropertiesPtrOutput) ToWorkerPoolPropertiesPtrOutput() WorkerPoolPropertiesPtrOutput {
	return o
}

func (o WorkerPoolPropertiesPtrOutput) ToWorkerPoolPropertiesPtrOutputWithContext(ctx context.Context) WorkerPoolPropertiesPtrOutput {
	return o
}

func (o WorkerPoolPropertiesPtrOutput) Elem() WorkerPoolPropertiesOutput {
	return o.ApplyT(func(v *WorkerPoolProperties) WorkerPoolProperties { return *v }).(WorkerPoolPropertiesOutput)
}

// Shared or dedicated web app hosting
func (o WorkerPoolPropertiesPtrOutput) ComputeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkerPoolProperties) *string {
		if v == nil {
			return nil
		}
		return v.ComputeMode
	}).(pulumi.StringPtrOutput)
}

// Names of all instances in the worker pool (read only)
func (o WorkerPoolPropertiesPtrOutput) InstanceNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkerPoolProperties) []string {
		if v == nil {
			return nil
		}
		return v.InstanceNames
	}).(pulumi.StringArrayOutput)
}

// Number of instances in the worker pool
func (o WorkerPoolPropertiesPtrOutput) WorkerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkerPoolProperties) *int {
		if v == nil {
			return nil
		}
		return v.WorkerCount
	}).(pulumi.IntPtrOutput)
}

// VM size of the worker pool instances
func (o WorkerPoolPropertiesPtrOutput) WorkerSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkerPoolProperties) *string {
		if v == nil {
			return nil
		}
		return v.WorkerSize
	}).(pulumi.StringPtrOutput)
}

// Worker size id for referencing this worker pool
func (o WorkerPoolPropertiesPtrOutput) WorkerSizeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkerPoolProperties) *int {
		if v == nil {
			return nil
		}
		return v.WorkerSizeId
	}).(pulumi.IntPtrOutput)
}

// Worker pool of a hostingEnvironment (App Service Environment)
type WorkerPoolResponse struct {
	// Resource Id
	Id *string `pulumi:"id"`
	// Kind of resource
	Kind *string `pulumi:"kind"`
	// Resource Location
	Location string `pulumi:"location"`
	// Resource Name
	Name       *string                       `pulumi:"name"`
	Properties *WorkerPoolResponseProperties `pulumi:"properties"`
	// Describes a sku for a scalable resource
	Sku *SkuDescriptionResponse `pulumi:"sku"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type *string `pulumi:"type"`
}

// WorkerPoolResponseInput is an input type that accepts WorkerPoolResponseArgs and WorkerPoolResponseOutput values.
// You can construct a concrete instance of `WorkerPoolResponseInput` via:
//
//          WorkerPoolResponseArgs{...}
type WorkerPoolResponseInput interface {
	pulumi.Input

	ToWorkerPoolResponseOutput() WorkerPoolResponseOutput
	ToWorkerPoolResponseOutputWithContext(context.Context) WorkerPoolResponseOutput
}

// Worker pool of a hostingEnvironment (App Service Environment)
type WorkerPoolResponseArgs struct {
	// Resource Id
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Kind of resource
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource Name
	Name       pulumi.StringPtrInput                `pulumi:"name"`
	Properties WorkerPoolResponsePropertiesPtrInput `pulumi:"properties"`
	// Describes a sku for a scalable resource
	Sku SkuDescriptionResponsePtrInput `pulumi:"sku"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (WorkerPoolResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkerPoolResponse)(nil)).Elem()
}

func (i WorkerPoolResponseArgs) ToWorkerPoolResponseOutput() WorkerPoolResponseOutput {
	return i.ToWorkerPoolResponseOutputWithContext(context.Background())
}

func (i WorkerPoolResponseArgs) ToWorkerPoolResponseOutputWithContext(ctx context.Context) WorkerPoolResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerPoolResponseOutput)
}

// WorkerPoolResponseArrayInput is an input type that accepts WorkerPoolResponseArray and WorkerPoolResponseArrayOutput values.
// You can construct a concrete instance of `WorkerPoolResponseArrayInput` via:
//
//          WorkerPoolResponseArray{ WorkerPoolResponseArgs{...} }
type WorkerPoolResponseArrayInput interface {
	pulumi.Input

	ToWorkerPoolResponseArrayOutput() WorkerPoolResponseArrayOutput
	ToWorkerPoolResponseArrayOutputWithContext(context.Context) WorkerPoolResponseArrayOutput
}

type WorkerPoolResponseArray []WorkerPoolResponseInput

func (WorkerPoolResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkerPoolResponse)(nil)).Elem()
}

func (i WorkerPoolResponseArray) ToWorkerPoolResponseArrayOutput() WorkerPoolResponseArrayOutput {
	return i.ToWorkerPoolResponseArrayOutputWithContext(context.Background())
}

func (i WorkerPoolResponseArray) ToWorkerPoolResponseArrayOutputWithContext(ctx context.Context) WorkerPoolResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerPoolResponseArrayOutput)
}

// Worker pool of a hostingEnvironment (App Service Environment)
type WorkerPoolResponseOutput struct{ *pulumi.OutputState }

func (WorkerPoolResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkerPoolResponse)(nil)).Elem()
}

func (o WorkerPoolResponseOutput) ToWorkerPoolResponseOutput() WorkerPoolResponseOutput {
	return o
}

func (o WorkerPoolResponseOutput) ToWorkerPoolResponseOutputWithContext(ctx context.Context) WorkerPoolResponseOutput {
	return o
}

// Resource Id
func (o WorkerPoolResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkerPoolResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Kind of resource
func (o WorkerPoolResponseOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkerPoolResponse) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location
func (o WorkerPoolResponseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v WorkerPoolResponse) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name
func (o WorkerPoolResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkerPoolResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o WorkerPoolResponseOutput) Properties() WorkerPoolResponsePropertiesPtrOutput {
	return o.ApplyT(func(v WorkerPoolResponse) *WorkerPoolResponseProperties { return v.Properties }).(WorkerPoolResponsePropertiesPtrOutput)
}

// Describes a sku for a scalable resource
func (o WorkerPoolResponseOutput) Sku() SkuDescriptionResponsePtrOutput {
	return o.ApplyT(func(v WorkerPoolResponse) *SkuDescriptionResponse { return v.Sku }).(SkuDescriptionResponsePtrOutput)
}

// Resource tags
func (o WorkerPoolResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkerPoolResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o WorkerPoolResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkerPoolResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type WorkerPoolResponseArrayOutput struct{ *pulumi.OutputState }

func (WorkerPoolResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkerPoolResponse)(nil)).Elem()
}

func (o WorkerPoolResponseArrayOutput) ToWorkerPoolResponseArrayOutput() WorkerPoolResponseArrayOutput {
	return o
}

func (o WorkerPoolResponseArrayOutput) ToWorkerPoolResponseArrayOutputWithContext(ctx context.Context) WorkerPoolResponseArrayOutput {
	return o
}

func (o WorkerPoolResponseArrayOutput) Index(i pulumi.IntInput) WorkerPoolResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkerPoolResponse {
		return vs[0].([]WorkerPoolResponse)[vs[1].(int)]
	}).(WorkerPoolResponseOutput)
}

type WorkerPoolResponseProperties struct {
	// Shared or dedicated web app hosting
	ComputeMode *string `pulumi:"computeMode"`
	// Names of all instances in the worker pool (read only)
	InstanceNames []string `pulumi:"instanceNames"`
	// Number of instances in the worker pool
	WorkerCount *int `pulumi:"workerCount"`
	// VM size of the worker pool instances
	WorkerSize *string `pulumi:"workerSize"`
	// Worker size id for referencing this worker pool
	WorkerSizeId *int `pulumi:"workerSizeId"`
}

// WorkerPoolResponsePropertiesInput is an input type that accepts WorkerPoolResponsePropertiesArgs and WorkerPoolResponsePropertiesOutput values.
// You can construct a concrete instance of `WorkerPoolResponsePropertiesInput` via:
//
//          WorkerPoolResponsePropertiesArgs{...}
type WorkerPoolResponsePropertiesInput interface {
	pulumi.Input

	ToWorkerPoolResponsePropertiesOutput() WorkerPoolResponsePropertiesOutput
	ToWorkerPoolResponsePropertiesOutputWithContext(context.Context) WorkerPoolResponsePropertiesOutput
}

type WorkerPoolResponsePropertiesArgs struct {
	// Shared or dedicated web app hosting
	ComputeMode pulumi.StringPtrInput `pulumi:"computeMode"`
	// Names of all instances in the worker pool (read only)
	InstanceNames pulumi.StringArrayInput `pulumi:"instanceNames"`
	// Number of instances in the worker pool
	WorkerCount pulumi.IntPtrInput `pulumi:"workerCount"`
	// VM size of the worker pool instances
	WorkerSize pulumi.StringPtrInput `pulumi:"workerSize"`
	// Worker size id for referencing this worker pool
	WorkerSizeId pulumi.IntPtrInput `pulumi:"workerSizeId"`
}

func (WorkerPoolResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkerPoolResponseProperties)(nil)).Elem()
}

func (i WorkerPoolResponsePropertiesArgs) ToWorkerPoolResponsePropertiesOutput() WorkerPoolResponsePropertiesOutput {
	return i.ToWorkerPoolResponsePropertiesOutputWithContext(context.Background())
}

func (i WorkerPoolResponsePropertiesArgs) ToWorkerPoolResponsePropertiesOutputWithContext(ctx context.Context) WorkerPoolResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerPoolResponsePropertiesOutput)
}

func (i WorkerPoolResponsePropertiesArgs) ToWorkerPoolResponsePropertiesPtrOutput() WorkerPoolResponsePropertiesPtrOutput {
	return i.ToWorkerPoolResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i WorkerPoolResponsePropertiesArgs) ToWorkerPoolResponsePropertiesPtrOutputWithContext(ctx context.Context) WorkerPoolResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerPoolResponsePropertiesOutput).ToWorkerPoolResponsePropertiesPtrOutputWithContext(ctx)
}

// WorkerPoolResponsePropertiesPtrInput is an input type that accepts WorkerPoolResponsePropertiesArgs, WorkerPoolResponsePropertiesPtr and WorkerPoolResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `WorkerPoolResponsePropertiesPtrInput` via:
//
//          WorkerPoolResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type WorkerPoolResponsePropertiesPtrInput interface {
	pulumi.Input

	ToWorkerPoolResponsePropertiesPtrOutput() WorkerPoolResponsePropertiesPtrOutput
	ToWorkerPoolResponsePropertiesPtrOutputWithContext(context.Context) WorkerPoolResponsePropertiesPtrOutput
}

type workerPoolResponsePropertiesPtrType WorkerPoolResponsePropertiesArgs

func WorkerPoolResponsePropertiesPtr(v *WorkerPoolResponsePropertiesArgs) WorkerPoolResponsePropertiesPtrInput {
	return (*workerPoolResponsePropertiesPtrType)(v)
}

func (*workerPoolResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkerPoolResponseProperties)(nil)).Elem()
}

func (i *workerPoolResponsePropertiesPtrType) ToWorkerPoolResponsePropertiesPtrOutput() WorkerPoolResponsePropertiesPtrOutput {
	return i.ToWorkerPoolResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *workerPoolResponsePropertiesPtrType) ToWorkerPoolResponsePropertiesPtrOutputWithContext(ctx context.Context) WorkerPoolResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerPoolResponsePropertiesPtrOutput)
}

type WorkerPoolResponsePropertiesOutput struct{ *pulumi.OutputState }

func (WorkerPoolResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkerPoolResponseProperties)(nil)).Elem()
}

func (o WorkerPoolResponsePropertiesOutput) ToWorkerPoolResponsePropertiesOutput() WorkerPoolResponsePropertiesOutput {
	return o
}

func (o WorkerPoolResponsePropertiesOutput) ToWorkerPoolResponsePropertiesOutputWithContext(ctx context.Context) WorkerPoolResponsePropertiesOutput {
	return o
}

func (o WorkerPoolResponsePropertiesOutput) ToWorkerPoolResponsePropertiesPtrOutput() WorkerPoolResponsePropertiesPtrOutput {
	return o.ToWorkerPoolResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o WorkerPoolResponsePropertiesOutput) ToWorkerPoolResponsePropertiesPtrOutputWithContext(ctx context.Context) WorkerPoolResponsePropertiesPtrOutput {
	return o.ApplyT(func(v WorkerPoolResponseProperties) *WorkerPoolResponseProperties {
		return &v
	}).(WorkerPoolResponsePropertiesPtrOutput)
}

// Shared or dedicated web app hosting
func (o WorkerPoolResponsePropertiesOutput) ComputeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkerPoolResponseProperties) *string { return v.ComputeMode }).(pulumi.StringPtrOutput)
}

// Names of all instances in the worker pool (read only)
func (o WorkerPoolResponsePropertiesOutput) InstanceNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkerPoolResponseProperties) []string { return v.InstanceNames }).(pulumi.StringArrayOutput)
}

// Number of instances in the worker pool
func (o WorkerPoolResponsePropertiesOutput) WorkerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkerPoolResponseProperties) *int { return v.WorkerCount }).(pulumi.IntPtrOutput)
}

// VM size of the worker pool instances
func (o WorkerPoolResponsePropertiesOutput) WorkerSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkerPoolResponseProperties) *string { return v.WorkerSize }).(pulumi.StringPtrOutput)
}

// Worker size id for referencing this worker pool
func (o WorkerPoolResponsePropertiesOutput) WorkerSizeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkerPoolResponseProperties) *int { return v.WorkerSizeId }).(pulumi.IntPtrOutput)
}

type WorkerPoolResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (WorkerPoolResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkerPoolResponseProperties)(nil)).Elem()
}

func (o WorkerPoolResponsePropertiesPtrOutput) ToWorkerPoolResponsePropertiesPtrOutput() WorkerPoolResponsePropertiesPtrOutput {
	return o
}

func (o WorkerPoolResponsePropertiesPtrOutput) ToWorkerPoolResponsePropertiesPtrOutputWithContext(ctx context.Context) WorkerPoolResponsePropertiesPtrOutput {
	return o
}

func (o WorkerPoolResponsePropertiesPtrOutput) Elem() WorkerPoolResponsePropertiesOutput {
	return o.ApplyT(func(v *WorkerPoolResponseProperties) WorkerPoolResponseProperties { return *v }).(WorkerPoolResponsePropertiesOutput)
}

// Shared or dedicated web app hosting
func (o WorkerPoolResponsePropertiesPtrOutput) ComputeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkerPoolResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.ComputeMode
	}).(pulumi.StringPtrOutput)
}

// Names of all instances in the worker pool (read only)
func (o WorkerPoolResponsePropertiesPtrOutput) InstanceNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkerPoolResponseProperties) []string {
		if v == nil {
			return nil
		}
		return v.InstanceNames
	}).(pulumi.StringArrayOutput)
}

// Number of instances in the worker pool
func (o WorkerPoolResponsePropertiesPtrOutput) WorkerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkerPoolResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.WorkerCount
	}).(pulumi.IntPtrOutput)
}

// VM size of the worker pool instances
func (o WorkerPoolResponsePropertiesPtrOutput) WorkerSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkerPoolResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.WorkerSize
	}).(pulumi.StringPtrOutput)
}

// Worker size id for referencing this worker pool
func (o WorkerPoolResponsePropertiesPtrOutput) WorkerSizeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkerPoolResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.WorkerSizeId
	}).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ApiDefinitionInfoOutput{})
	pulumi.RegisterOutputType(ApiDefinitionInfoPtrOutput{})
	pulumi.RegisterOutputType(ApiDefinitionInfoResponseOutput{})
	pulumi.RegisterOutputType(ApiDefinitionInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(ArmPlanOutput{})
	pulumi.RegisterOutputType(ArmPlanPtrOutput{})
	pulumi.RegisterOutputType(AutoHealActionsOutput{})
	pulumi.RegisterOutputType(AutoHealActionsPtrOutput{})
	pulumi.RegisterOutputType(AutoHealActionsResponseOutput{})
	pulumi.RegisterOutputType(AutoHealActionsResponsePtrOutput{})
	pulumi.RegisterOutputType(AutoHealCustomActionOutput{})
	pulumi.RegisterOutputType(AutoHealCustomActionPtrOutput{})
	pulumi.RegisterOutputType(AutoHealCustomActionResponseOutput{})
	pulumi.RegisterOutputType(AutoHealCustomActionResponsePtrOutput{})
	pulumi.RegisterOutputType(AutoHealRulesOutput{})
	pulumi.RegisterOutputType(AutoHealRulesPtrOutput{})
	pulumi.RegisterOutputType(AutoHealRulesResponseOutput{})
	pulumi.RegisterOutputType(AutoHealRulesResponsePtrOutput{})
	pulumi.RegisterOutputType(AutoHealTriggersOutput{})
	pulumi.RegisterOutputType(AutoHealTriggersPtrOutput{})
	pulumi.RegisterOutputType(AutoHealTriggersResponseOutput{})
	pulumi.RegisterOutputType(AutoHealTriggersResponsePtrOutput{})
	pulumi.RegisterOutputType(BackupItemResponsePropertiesOutput{})
	pulumi.RegisterOutputType(BackupRequestPropertiesOutput{})
	pulumi.RegisterOutputType(BackupRequestResponsePropertiesOutput{})
	pulumi.RegisterOutputType(BackupScheduleOutput{})
	pulumi.RegisterOutputType(BackupSchedulePtrOutput{})
	pulumi.RegisterOutputType(BackupScheduleResponseOutput{})
	pulumi.RegisterOutputType(BackupScheduleResponsePtrOutput{})
	pulumi.RegisterOutputType(CertificateTypeOutput{})
	pulumi.RegisterOutputType(CertificateCsrTypeOutput{})
	pulumi.RegisterOutputType(CertificatePropertiesOutput{})
	pulumi.RegisterOutputType(CertificatePropertiesPtrOutput{})
	pulumi.RegisterOutputType(CertificateResponsePropertiesOutput{})
	pulumi.RegisterOutputType(CertificateResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(CloningInfoOutput{})
	pulumi.RegisterOutputType(CloningInfoPtrOutput{})
	pulumi.RegisterOutputType(CloningInfoResponseOutput{})
	pulumi.RegisterOutputType(CloningInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnStringInfoOutput{})
	pulumi.RegisterOutputType(ConnStringInfoArrayOutput{})
	pulumi.RegisterOutputType(ConnStringInfoResponseOutput{})
	pulumi.RegisterOutputType(ConnStringInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(CorsSettingsOutput{})
	pulumi.RegisterOutputType(CorsSettingsPtrOutput{})
	pulumi.RegisterOutputType(CorsSettingsResponseOutput{})
	pulumi.RegisterOutputType(CorsSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(CsrPropertiesOutput{})
	pulumi.RegisterOutputType(CsrPropertiesPtrOutput{})
	pulumi.RegisterOutputType(CsrResponsePropertiesOutput{})
	pulumi.RegisterOutputType(CsrResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(DatabaseBackupSettingOutput{})
	pulumi.RegisterOutputType(DatabaseBackupSettingArrayOutput{})
	pulumi.RegisterOutputType(DatabaseBackupSettingResponseOutput{})
	pulumi.RegisterOutputType(DatabaseBackupSettingResponseArrayOutput{})
	pulumi.RegisterOutputType(DeploymentPropertiesOutput{})
	pulumi.RegisterOutputType(DeploymentPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DeploymentResponsePropertiesOutput{})
	pulumi.RegisterOutputType(DeploymentResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(ExperimentsOutput{})
	pulumi.RegisterOutputType(ExperimentsPtrOutput{})
	pulumi.RegisterOutputType(ExperimentsResponseOutput{})
	pulumi.RegisterOutputType(ExperimentsResponsePtrOutput{})
	pulumi.RegisterOutputType(HandlerMappingOutput{})
	pulumi.RegisterOutputType(HandlerMappingArrayOutput{})
	pulumi.RegisterOutputType(HandlerMappingResponseOutput{})
	pulumi.RegisterOutputType(HandlerMappingResponseArrayOutput{})
	pulumi.RegisterOutputType(HostNameBindingPropertiesOutput{})
	pulumi.RegisterOutputType(HostNameBindingPropertiesPtrOutput{})
	pulumi.RegisterOutputType(HostNameBindingResponsePropertiesOutput{})
	pulumi.RegisterOutputType(HostNameBindingResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(HostNameSslStateOutput{})
	pulumi.RegisterOutputType(HostNameSslStateArrayOutput{})
	pulumi.RegisterOutputType(HostNameSslStateResponseOutput{})
	pulumi.RegisterOutputType(HostNameSslStateResponseArrayOutput{})
	pulumi.RegisterOutputType(HostingEnvironmentTypeOutput{})
	pulumi.RegisterOutputType(HostingEnvironmentProfileOutput{})
	pulumi.RegisterOutputType(HostingEnvironmentProfilePtrOutput{})
	pulumi.RegisterOutputType(HostingEnvironmentProfileResponseOutput{})
	pulumi.RegisterOutputType(HostingEnvironmentProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(HostingEnvironmentPropertiesOutput{})
	pulumi.RegisterOutputType(HostingEnvironmentPropertiesPtrOutput{})
	pulumi.RegisterOutputType(HostingEnvironmentResponsePropertiesOutput{})
	pulumi.RegisterOutputType(HostingEnvironmentResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(IpSecurityRestrictionOutput{})
	pulumi.RegisterOutputType(IpSecurityRestrictionArrayOutput{})
	pulumi.RegisterOutputType(IpSecurityRestrictionResponseOutput{})
	pulumi.RegisterOutputType(IpSecurityRestrictionResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagedHostingEnvironmentTypeOutput{})
	pulumi.RegisterOutputType(ManagedHostingEnvironmentResponsePropertiesOutput{})
	pulumi.RegisterOutputType(NameValuePairOutput{})
	pulumi.RegisterOutputType(NameValuePairArrayOutput{})
	pulumi.RegisterOutputType(NameValuePairResponseOutput{})
	pulumi.RegisterOutputType(NameValuePairResponseArrayOutput{})
	pulumi.RegisterOutputType(NetworkAccessControlEntryOutput{})
	pulumi.RegisterOutputType(NetworkAccessControlEntryArrayOutput{})
	pulumi.RegisterOutputType(NetworkAccessControlEntryResponseOutput{})
	pulumi.RegisterOutputType(NetworkAccessControlEntryResponseArrayOutput{})
	pulumi.RegisterOutputType(ObjectOutput{})
	pulumi.RegisterOutputType(ObjectPtrOutput{})
	pulumi.RegisterOutputType(RampUpRuleOutput{})
	pulumi.RegisterOutputType(RampUpRuleArrayOutput{})
	pulumi.RegisterOutputType(RampUpRuleResponseOutput{})
	pulumi.RegisterOutputType(RampUpRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(RelayServiceConnectionEntityPropertiesOutput{})
	pulumi.RegisterOutputType(RelayServiceConnectionEntityPropertiesPtrOutput{})
	pulumi.RegisterOutputType(RelayServiceConnectionEntityResponsePropertiesOutput{})
	pulumi.RegisterOutputType(RelayServiceConnectionEntityResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(RequestsBasedTriggerOutput{})
	pulumi.RegisterOutputType(RequestsBasedTriggerPtrOutput{})
	pulumi.RegisterOutputType(RequestsBasedTriggerResponseOutput{})
	pulumi.RegisterOutputType(RequestsBasedTriggerResponsePtrOutput{})
	pulumi.RegisterOutputType(ServerFarmTypeOutput{})
	pulumi.RegisterOutputType(ServerFarmRouteForVnetTypeOutput{})
	pulumi.RegisterOutputType(ServerFarmWithRichSkuPropertiesOutput{})
	pulumi.RegisterOutputType(ServerFarmWithRichSkuPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ServerFarmWithRichSkuResponsePropertiesOutput{})
	pulumi.RegisterOutputType(ServerFarmWithRichSkuResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(SiteTypeOutput{})
	pulumi.RegisterOutputType(SiteConfigOutput{})
	pulumi.RegisterOutputType(SiteConfigPtrOutput{})
	pulumi.RegisterOutputType(SiteConfigPropertiesOutput{})
	pulumi.RegisterOutputType(SiteConfigPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SiteConfigResponseOutput{})
	pulumi.RegisterOutputType(SiteConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(SiteConfigResponsePropertiesOutput{})
	pulumi.RegisterOutputType(SiteConfigResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(SiteDeploymentTypeOutput{})
	pulumi.RegisterOutputType(SiteDeploymentSlotTypeOutput{})
	pulumi.RegisterOutputType(SiteHostNameBindingTypeOutput{})
	pulumi.RegisterOutputType(SiteHostNameBindingSlotTypeOutput{})
	pulumi.RegisterOutputType(SiteInstanceDeploymentTypeOutput{})
	pulumi.RegisterOutputType(SiteInstanceDeploymentSlotTypeOutput{})
	pulumi.RegisterOutputType(SiteLimitsOutput{})
	pulumi.RegisterOutputType(SiteLimitsPtrOutput{})
	pulumi.RegisterOutputType(SiteLimitsResponseOutput{})
	pulumi.RegisterOutputType(SiteLimitsResponsePtrOutput{})
	pulumi.RegisterOutputType(SitePremierAddOnTypeOutput{})
	pulumi.RegisterOutputType(SitePremierAddOnSlotTypeOutput{})
	pulumi.RegisterOutputType(SitePropertiesOutput{})
	pulumi.RegisterOutputType(SitePropertiesPtrOutput{})
	pulumi.RegisterOutputType(SiteRelayServiceConnectionTypeOutput{})
	pulumi.RegisterOutputType(SiteRelayServiceConnectionSlotTypeOutput{})
	pulumi.RegisterOutputType(SiteResponsePropertiesOutput{})
	pulumi.RegisterOutputType(SiteResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(SiteSlotTypeOutput{})
	pulumi.RegisterOutputType(SiteSourceControlTypeOutput{})
	pulumi.RegisterOutputType(SiteSourceControlPropertiesOutput{})
	pulumi.RegisterOutputType(SiteSourceControlPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SiteSourceControlResponsePropertiesOutput{})
	pulumi.RegisterOutputType(SiteSourceControlResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(SiteSourceControlSlotTypeOutput{})
	pulumi.RegisterOutputType(SiteVNETConnectionTypeOutput{})
	pulumi.RegisterOutputType(SiteVNETConnectionSlotTypeOutput{})
	pulumi.RegisterOutputType(SkuDescriptionOutput{})
	pulumi.RegisterOutputType(SkuDescriptionPtrOutput{})
	pulumi.RegisterOutputType(SkuDescriptionResponseOutput{})
	pulumi.RegisterOutputType(SkuDescriptionResponsePtrOutput{})
	pulumi.RegisterOutputType(SlowRequestsBasedTriggerOutput{})
	pulumi.RegisterOutputType(SlowRequestsBasedTriggerPtrOutput{})
	pulumi.RegisterOutputType(SlowRequestsBasedTriggerResponseOutput{})
	pulumi.RegisterOutputType(SlowRequestsBasedTriggerResponsePtrOutput{})
	pulumi.RegisterOutputType(StampCapacityOutput{})
	pulumi.RegisterOutputType(StampCapacityArrayOutput{})
	pulumi.RegisterOutputType(StampCapacityResponseOutput{})
	pulumi.RegisterOutputType(StampCapacityResponseArrayOutput{})
	pulumi.RegisterOutputType(StatusCodesBasedTriggerOutput{})
	pulumi.RegisterOutputType(StatusCodesBasedTriggerArrayOutput{})
	pulumi.RegisterOutputType(StatusCodesBasedTriggerResponseOutput{})
	pulumi.RegisterOutputType(StatusCodesBasedTriggerResponseArrayOutput{})
	pulumi.RegisterOutputType(UserResponsePropertiesOutput{})
	pulumi.RegisterOutputType(VirtualApplicationOutput{})
	pulumi.RegisterOutputType(VirtualApplicationArrayOutput{})
	pulumi.RegisterOutputType(VirtualApplicationResponseOutput{})
	pulumi.RegisterOutputType(VirtualApplicationResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualDirectoryOutput{})
	pulumi.RegisterOutputType(VirtualDirectoryArrayOutput{})
	pulumi.RegisterOutputType(VirtualDirectoryResponseOutput{})
	pulumi.RegisterOutputType(VirtualDirectoryResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualIPMappingOutput{})
	pulumi.RegisterOutputType(VirtualIPMappingArrayOutput{})
	pulumi.RegisterOutputType(VirtualIPMappingResponseOutput{})
	pulumi.RegisterOutputType(VirtualIPMappingResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkProfileOutput{})
	pulumi.RegisterOutputType(VirtualNetworkProfilePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkProfileResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(VnetInfoPropertiesOutput{})
	pulumi.RegisterOutputType(VnetInfoPropertiesPtrOutput{})
	pulumi.RegisterOutputType(VnetInfoResponsePropertiesOutput{})
	pulumi.RegisterOutputType(VnetInfoResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(VnetRouteOutput{})
	pulumi.RegisterOutputType(VnetRouteArrayOutput{})
	pulumi.RegisterOutputType(VnetRoutePropertiesOutput{})
	pulumi.RegisterOutputType(VnetRoutePropertiesPtrOutput{})
	pulumi.RegisterOutputType(VnetRouteResponseOutput{})
	pulumi.RegisterOutputType(VnetRouteResponseArrayOutput{})
	pulumi.RegisterOutputType(VnetRouteResponsePropertiesOutput{})
	pulumi.RegisterOutputType(VnetRouteResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(WorkerPoolOutput{})
	pulumi.RegisterOutputType(WorkerPoolArrayOutput{})
	pulumi.RegisterOutputType(WorkerPoolPropertiesOutput{})
	pulumi.RegisterOutputType(WorkerPoolPropertiesPtrOutput{})
	pulumi.RegisterOutputType(WorkerPoolResponseOutput{})
	pulumi.RegisterOutputType(WorkerPoolResponseArrayOutput{})
	pulumi.RegisterOutputType(WorkerPoolResponsePropertiesOutput{})
	pulumi.RegisterOutputType(WorkerPoolResponsePropertiesPtrOutput{})
}
