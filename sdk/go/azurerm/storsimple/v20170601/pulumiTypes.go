// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20170601

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The properties of access control record.
type AccessControlRecordPropertiesResponse struct {
	// The iSCSI initiator name (IQN).
	InitiatorName string `pulumi:"initiatorName"`
	// The number of volumes using the access control record.
	VolumeCount int `pulumi:"volumeCount"`
}

// AccessControlRecordPropertiesResponseInput is an input type that accepts AccessControlRecordPropertiesResponseArgs and AccessControlRecordPropertiesResponseOutput values.
// You can construct a concrete instance of `AccessControlRecordPropertiesResponseInput` via:
//
//          AccessControlRecordPropertiesResponseArgs{...}
type AccessControlRecordPropertiesResponseInput interface {
	pulumi.Input

	ToAccessControlRecordPropertiesResponseOutput() AccessControlRecordPropertiesResponseOutput
	ToAccessControlRecordPropertiesResponseOutputWithContext(context.Context) AccessControlRecordPropertiesResponseOutput
}

// The properties of access control record.
type AccessControlRecordPropertiesResponseArgs struct {
	// The iSCSI initiator name (IQN).
	InitiatorName pulumi.StringInput `pulumi:"initiatorName"`
	// The number of volumes using the access control record.
	VolumeCount pulumi.IntInput `pulumi:"volumeCount"`
}

func (AccessControlRecordPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessControlRecordPropertiesResponse)(nil)).Elem()
}

func (i AccessControlRecordPropertiesResponseArgs) ToAccessControlRecordPropertiesResponseOutput() AccessControlRecordPropertiesResponseOutput {
	return i.ToAccessControlRecordPropertiesResponseOutputWithContext(context.Background())
}

func (i AccessControlRecordPropertiesResponseArgs) ToAccessControlRecordPropertiesResponseOutputWithContext(ctx context.Context) AccessControlRecordPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessControlRecordPropertiesResponseOutput)
}

func (i AccessControlRecordPropertiesResponseArgs) ToAccessControlRecordPropertiesResponsePtrOutput() AccessControlRecordPropertiesResponsePtrOutput {
	return i.ToAccessControlRecordPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i AccessControlRecordPropertiesResponseArgs) ToAccessControlRecordPropertiesResponsePtrOutputWithContext(ctx context.Context) AccessControlRecordPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessControlRecordPropertiesResponseOutput).ToAccessControlRecordPropertiesResponsePtrOutputWithContext(ctx)
}

// AccessControlRecordPropertiesResponsePtrInput is an input type that accepts AccessControlRecordPropertiesResponseArgs, AccessControlRecordPropertiesResponsePtr and AccessControlRecordPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `AccessControlRecordPropertiesResponsePtrInput` via:
//
//          AccessControlRecordPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type AccessControlRecordPropertiesResponsePtrInput interface {
	pulumi.Input

	ToAccessControlRecordPropertiesResponsePtrOutput() AccessControlRecordPropertiesResponsePtrOutput
	ToAccessControlRecordPropertiesResponsePtrOutputWithContext(context.Context) AccessControlRecordPropertiesResponsePtrOutput
}

type accessControlRecordPropertiesResponsePtrType AccessControlRecordPropertiesResponseArgs

func AccessControlRecordPropertiesResponsePtr(v *AccessControlRecordPropertiesResponseArgs) AccessControlRecordPropertiesResponsePtrInput {
	return (*accessControlRecordPropertiesResponsePtrType)(v)
}

func (*accessControlRecordPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessControlRecordPropertiesResponse)(nil)).Elem()
}

func (i *accessControlRecordPropertiesResponsePtrType) ToAccessControlRecordPropertiesResponsePtrOutput() AccessControlRecordPropertiesResponsePtrOutput {
	return i.ToAccessControlRecordPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *accessControlRecordPropertiesResponsePtrType) ToAccessControlRecordPropertiesResponsePtrOutputWithContext(ctx context.Context) AccessControlRecordPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessControlRecordPropertiesResponsePtrOutput)
}

// The properties of access control record.
type AccessControlRecordPropertiesResponseOutput struct{ *pulumi.OutputState }

func (AccessControlRecordPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessControlRecordPropertiesResponse)(nil)).Elem()
}

func (o AccessControlRecordPropertiesResponseOutput) ToAccessControlRecordPropertiesResponseOutput() AccessControlRecordPropertiesResponseOutput {
	return o
}

func (o AccessControlRecordPropertiesResponseOutput) ToAccessControlRecordPropertiesResponseOutputWithContext(ctx context.Context) AccessControlRecordPropertiesResponseOutput {
	return o
}

func (o AccessControlRecordPropertiesResponseOutput) ToAccessControlRecordPropertiesResponsePtrOutput() AccessControlRecordPropertiesResponsePtrOutput {
	return o.ToAccessControlRecordPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o AccessControlRecordPropertiesResponseOutput) ToAccessControlRecordPropertiesResponsePtrOutputWithContext(ctx context.Context) AccessControlRecordPropertiesResponsePtrOutput {
	return o.ApplyT(func(v AccessControlRecordPropertiesResponse) *AccessControlRecordPropertiesResponse {
		return &v
	}).(AccessControlRecordPropertiesResponsePtrOutput)
}

// The iSCSI initiator name (IQN).
func (o AccessControlRecordPropertiesResponseOutput) InitiatorName() pulumi.StringOutput {
	return o.ApplyT(func(v AccessControlRecordPropertiesResponse) string { return v.InitiatorName }).(pulumi.StringOutput)
}

// The number of volumes using the access control record.
func (o AccessControlRecordPropertiesResponseOutput) VolumeCount() pulumi.IntOutput {
	return o.ApplyT(func(v AccessControlRecordPropertiesResponse) int { return v.VolumeCount }).(pulumi.IntOutput)
}

type AccessControlRecordPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (AccessControlRecordPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessControlRecordPropertiesResponse)(nil)).Elem()
}

func (o AccessControlRecordPropertiesResponsePtrOutput) ToAccessControlRecordPropertiesResponsePtrOutput() AccessControlRecordPropertiesResponsePtrOutput {
	return o
}

func (o AccessControlRecordPropertiesResponsePtrOutput) ToAccessControlRecordPropertiesResponsePtrOutputWithContext(ctx context.Context) AccessControlRecordPropertiesResponsePtrOutput {
	return o
}

func (o AccessControlRecordPropertiesResponsePtrOutput) Elem() AccessControlRecordPropertiesResponseOutput {
	return o.ApplyT(func(v *AccessControlRecordPropertiesResponse) AccessControlRecordPropertiesResponse { return *v }).(AccessControlRecordPropertiesResponseOutput)
}

// The iSCSI initiator name (IQN).
func (o AccessControlRecordPropertiesResponsePtrOutput) InitiatorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessControlRecordPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InitiatorName
	}).(pulumi.StringPtrOutput)
}

// The number of volumes using the access control record.
func (o AccessControlRecordPropertiesResponsePtrOutput) VolumeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AccessControlRecordPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.VolumeCount
	}).(pulumi.IntPtrOutput)
}

// Represent the secrets intended for encryption with asymmetric key pair.
type AsymmetricEncryptedSecret struct {
	// The algorithm used to encrypt "Value".
	EncryptionAlgorithm string `pulumi:"encryptionAlgorithm"`
	// Thumbprint certificate that was used to encrypt "Value". If the value in unencrypted, it will be null.
	EncryptionCertThumbprint *string `pulumi:"encryptionCertThumbprint"`
	// The value of the secret.
	Value string `pulumi:"value"`
}

// AsymmetricEncryptedSecretInput is an input type that accepts AsymmetricEncryptedSecretArgs and AsymmetricEncryptedSecretOutput values.
// You can construct a concrete instance of `AsymmetricEncryptedSecretInput` via:
//
//          AsymmetricEncryptedSecretArgs{...}
type AsymmetricEncryptedSecretInput interface {
	pulumi.Input

	ToAsymmetricEncryptedSecretOutput() AsymmetricEncryptedSecretOutput
	ToAsymmetricEncryptedSecretOutputWithContext(context.Context) AsymmetricEncryptedSecretOutput
}

// Represent the secrets intended for encryption with asymmetric key pair.
type AsymmetricEncryptedSecretArgs struct {
	// The algorithm used to encrypt "Value".
	EncryptionAlgorithm pulumi.StringInput `pulumi:"encryptionAlgorithm"`
	// Thumbprint certificate that was used to encrypt "Value". If the value in unencrypted, it will be null.
	EncryptionCertThumbprint pulumi.StringPtrInput `pulumi:"encryptionCertThumbprint"`
	// The value of the secret.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AsymmetricEncryptedSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AsymmetricEncryptedSecret)(nil)).Elem()
}

func (i AsymmetricEncryptedSecretArgs) ToAsymmetricEncryptedSecretOutput() AsymmetricEncryptedSecretOutput {
	return i.ToAsymmetricEncryptedSecretOutputWithContext(context.Background())
}

func (i AsymmetricEncryptedSecretArgs) ToAsymmetricEncryptedSecretOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsymmetricEncryptedSecretOutput)
}

func (i AsymmetricEncryptedSecretArgs) ToAsymmetricEncryptedSecretPtrOutput() AsymmetricEncryptedSecretPtrOutput {
	return i.ToAsymmetricEncryptedSecretPtrOutputWithContext(context.Background())
}

func (i AsymmetricEncryptedSecretArgs) ToAsymmetricEncryptedSecretPtrOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsymmetricEncryptedSecretOutput).ToAsymmetricEncryptedSecretPtrOutputWithContext(ctx)
}

// AsymmetricEncryptedSecretPtrInput is an input type that accepts AsymmetricEncryptedSecretArgs, AsymmetricEncryptedSecretPtr and AsymmetricEncryptedSecretPtrOutput values.
// You can construct a concrete instance of `AsymmetricEncryptedSecretPtrInput` via:
//
//          AsymmetricEncryptedSecretArgs{...}
//
//  or:
//
//          nil
type AsymmetricEncryptedSecretPtrInput interface {
	pulumi.Input

	ToAsymmetricEncryptedSecretPtrOutput() AsymmetricEncryptedSecretPtrOutput
	ToAsymmetricEncryptedSecretPtrOutputWithContext(context.Context) AsymmetricEncryptedSecretPtrOutput
}

type asymmetricEncryptedSecretPtrType AsymmetricEncryptedSecretArgs

func AsymmetricEncryptedSecretPtr(v *AsymmetricEncryptedSecretArgs) AsymmetricEncryptedSecretPtrInput {
	return (*asymmetricEncryptedSecretPtrType)(v)
}

func (*asymmetricEncryptedSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AsymmetricEncryptedSecret)(nil)).Elem()
}

func (i *asymmetricEncryptedSecretPtrType) ToAsymmetricEncryptedSecretPtrOutput() AsymmetricEncryptedSecretPtrOutput {
	return i.ToAsymmetricEncryptedSecretPtrOutputWithContext(context.Background())
}

func (i *asymmetricEncryptedSecretPtrType) ToAsymmetricEncryptedSecretPtrOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsymmetricEncryptedSecretPtrOutput)
}

// Represent the secrets intended for encryption with asymmetric key pair.
type AsymmetricEncryptedSecretOutput struct{ *pulumi.OutputState }

func (AsymmetricEncryptedSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AsymmetricEncryptedSecret)(nil)).Elem()
}

func (o AsymmetricEncryptedSecretOutput) ToAsymmetricEncryptedSecretOutput() AsymmetricEncryptedSecretOutput {
	return o
}

func (o AsymmetricEncryptedSecretOutput) ToAsymmetricEncryptedSecretOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretOutput {
	return o
}

func (o AsymmetricEncryptedSecretOutput) ToAsymmetricEncryptedSecretPtrOutput() AsymmetricEncryptedSecretPtrOutput {
	return o.ToAsymmetricEncryptedSecretPtrOutputWithContext(context.Background())
}

func (o AsymmetricEncryptedSecretOutput) ToAsymmetricEncryptedSecretPtrOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretPtrOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecret) *AsymmetricEncryptedSecret {
		return &v
	}).(AsymmetricEncryptedSecretPtrOutput)
}

// The algorithm used to encrypt "Value".
func (o AsymmetricEncryptedSecretOutput) EncryptionAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecret) string { return v.EncryptionAlgorithm }).(pulumi.StringOutput)
}

// Thumbprint certificate that was used to encrypt "Value". If the value in unencrypted, it will be null.
func (o AsymmetricEncryptedSecretOutput) EncryptionCertThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecret) *string { return v.EncryptionCertThumbprint }).(pulumi.StringPtrOutput)
}

// The value of the secret.
func (o AsymmetricEncryptedSecretOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecret) string { return v.Value }).(pulumi.StringOutput)
}

type AsymmetricEncryptedSecretPtrOutput struct{ *pulumi.OutputState }

func (AsymmetricEncryptedSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AsymmetricEncryptedSecret)(nil)).Elem()
}

func (o AsymmetricEncryptedSecretPtrOutput) ToAsymmetricEncryptedSecretPtrOutput() AsymmetricEncryptedSecretPtrOutput {
	return o
}

func (o AsymmetricEncryptedSecretPtrOutput) ToAsymmetricEncryptedSecretPtrOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretPtrOutput {
	return o
}

func (o AsymmetricEncryptedSecretPtrOutput) Elem() AsymmetricEncryptedSecretOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecret) AsymmetricEncryptedSecret { return *v }).(AsymmetricEncryptedSecretOutput)
}

// The algorithm used to encrypt "Value".
func (o AsymmetricEncryptedSecretPtrOutput) EncryptionAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecret) *string {
		if v == nil {
			return nil
		}
		return &v.EncryptionAlgorithm
	}).(pulumi.StringPtrOutput)
}

// Thumbprint certificate that was used to encrypt "Value". If the value in unencrypted, it will be null.
func (o AsymmetricEncryptedSecretPtrOutput) EncryptionCertThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecret) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionCertThumbprint
	}).(pulumi.StringPtrOutput)
}

// The value of the secret.
func (o AsymmetricEncryptedSecretPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecret) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

// Represent the secrets intended for encryption with asymmetric key pair.
type AsymmetricEncryptedSecretResponse struct {
	// The algorithm used to encrypt "Value".
	EncryptionAlgorithm string `pulumi:"encryptionAlgorithm"`
	// Thumbprint certificate that was used to encrypt "Value". If the value in unencrypted, it will be null.
	EncryptionCertThumbprint *string `pulumi:"encryptionCertThumbprint"`
	// The value of the secret.
	Value string `pulumi:"value"`
}

// AsymmetricEncryptedSecretResponseInput is an input type that accepts AsymmetricEncryptedSecretResponseArgs and AsymmetricEncryptedSecretResponseOutput values.
// You can construct a concrete instance of `AsymmetricEncryptedSecretResponseInput` via:
//
//          AsymmetricEncryptedSecretResponseArgs{...}
type AsymmetricEncryptedSecretResponseInput interface {
	pulumi.Input

	ToAsymmetricEncryptedSecretResponseOutput() AsymmetricEncryptedSecretResponseOutput
	ToAsymmetricEncryptedSecretResponseOutputWithContext(context.Context) AsymmetricEncryptedSecretResponseOutput
}

// Represent the secrets intended for encryption with asymmetric key pair.
type AsymmetricEncryptedSecretResponseArgs struct {
	// The algorithm used to encrypt "Value".
	EncryptionAlgorithm pulumi.StringInput `pulumi:"encryptionAlgorithm"`
	// Thumbprint certificate that was used to encrypt "Value". If the value in unencrypted, it will be null.
	EncryptionCertThumbprint pulumi.StringPtrInput `pulumi:"encryptionCertThumbprint"`
	// The value of the secret.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AsymmetricEncryptedSecretResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AsymmetricEncryptedSecretResponse)(nil)).Elem()
}

func (i AsymmetricEncryptedSecretResponseArgs) ToAsymmetricEncryptedSecretResponseOutput() AsymmetricEncryptedSecretResponseOutput {
	return i.ToAsymmetricEncryptedSecretResponseOutputWithContext(context.Background())
}

func (i AsymmetricEncryptedSecretResponseArgs) ToAsymmetricEncryptedSecretResponseOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsymmetricEncryptedSecretResponseOutput)
}

func (i AsymmetricEncryptedSecretResponseArgs) ToAsymmetricEncryptedSecretResponsePtrOutput() AsymmetricEncryptedSecretResponsePtrOutput {
	return i.ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(context.Background())
}

func (i AsymmetricEncryptedSecretResponseArgs) ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsymmetricEncryptedSecretResponseOutput).ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(ctx)
}

// AsymmetricEncryptedSecretResponsePtrInput is an input type that accepts AsymmetricEncryptedSecretResponseArgs, AsymmetricEncryptedSecretResponsePtr and AsymmetricEncryptedSecretResponsePtrOutput values.
// You can construct a concrete instance of `AsymmetricEncryptedSecretResponsePtrInput` via:
//
//          AsymmetricEncryptedSecretResponseArgs{...}
//
//  or:
//
//          nil
type AsymmetricEncryptedSecretResponsePtrInput interface {
	pulumi.Input

	ToAsymmetricEncryptedSecretResponsePtrOutput() AsymmetricEncryptedSecretResponsePtrOutput
	ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(context.Context) AsymmetricEncryptedSecretResponsePtrOutput
}

type asymmetricEncryptedSecretResponsePtrType AsymmetricEncryptedSecretResponseArgs

func AsymmetricEncryptedSecretResponsePtr(v *AsymmetricEncryptedSecretResponseArgs) AsymmetricEncryptedSecretResponsePtrInput {
	return (*asymmetricEncryptedSecretResponsePtrType)(v)
}

func (*asymmetricEncryptedSecretResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AsymmetricEncryptedSecretResponse)(nil)).Elem()
}

func (i *asymmetricEncryptedSecretResponsePtrType) ToAsymmetricEncryptedSecretResponsePtrOutput() AsymmetricEncryptedSecretResponsePtrOutput {
	return i.ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(context.Background())
}

func (i *asymmetricEncryptedSecretResponsePtrType) ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsymmetricEncryptedSecretResponsePtrOutput)
}

// Represent the secrets intended for encryption with asymmetric key pair.
type AsymmetricEncryptedSecretResponseOutput struct{ *pulumi.OutputState }

func (AsymmetricEncryptedSecretResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AsymmetricEncryptedSecretResponse)(nil)).Elem()
}

func (o AsymmetricEncryptedSecretResponseOutput) ToAsymmetricEncryptedSecretResponseOutput() AsymmetricEncryptedSecretResponseOutput {
	return o
}

func (o AsymmetricEncryptedSecretResponseOutput) ToAsymmetricEncryptedSecretResponseOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretResponseOutput {
	return o
}

func (o AsymmetricEncryptedSecretResponseOutput) ToAsymmetricEncryptedSecretResponsePtrOutput() AsymmetricEncryptedSecretResponsePtrOutput {
	return o.ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(context.Background())
}

func (o AsymmetricEncryptedSecretResponseOutput) ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretResponsePtrOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecretResponse) *AsymmetricEncryptedSecretResponse {
		return &v
	}).(AsymmetricEncryptedSecretResponsePtrOutput)
}

// The algorithm used to encrypt "Value".
func (o AsymmetricEncryptedSecretResponseOutput) EncryptionAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecretResponse) string { return v.EncryptionAlgorithm }).(pulumi.StringOutput)
}

// Thumbprint certificate that was used to encrypt "Value". If the value in unencrypted, it will be null.
func (o AsymmetricEncryptedSecretResponseOutput) EncryptionCertThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecretResponse) *string { return v.EncryptionCertThumbprint }).(pulumi.StringPtrOutput)
}

// The value of the secret.
func (o AsymmetricEncryptedSecretResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecretResponse) string { return v.Value }).(pulumi.StringOutput)
}

type AsymmetricEncryptedSecretResponsePtrOutput struct{ *pulumi.OutputState }

func (AsymmetricEncryptedSecretResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AsymmetricEncryptedSecretResponse)(nil)).Elem()
}

func (o AsymmetricEncryptedSecretResponsePtrOutput) ToAsymmetricEncryptedSecretResponsePtrOutput() AsymmetricEncryptedSecretResponsePtrOutput {
	return o
}

func (o AsymmetricEncryptedSecretResponsePtrOutput) ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretResponsePtrOutput {
	return o
}

func (o AsymmetricEncryptedSecretResponsePtrOutput) Elem() AsymmetricEncryptedSecretResponseOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecretResponse) AsymmetricEncryptedSecretResponse { return *v }).(AsymmetricEncryptedSecretResponseOutput)
}

// The algorithm used to encrypt "Value".
func (o AsymmetricEncryptedSecretResponsePtrOutput) EncryptionAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecretResponse) *string {
		if v == nil {
			return nil
		}
		return &v.EncryptionAlgorithm
	}).(pulumi.StringPtrOutput)
}

// Thumbprint certificate that was used to encrypt "Value". If the value in unencrypted, it will be null.
func (o AsymmetricEncryptedSecretResponsePtrOutput) EncryptionCertThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecretResponse) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionCertThumbprint
	}).(pulumi.StringPtrOutput)
}

// The value of the secret.
func (o AsymmetricEncryptedSecretResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecretResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

// The properties of the backup policy.
type BackupPolicyPropertiesResponse struct {
	// The backup policy creation type. Indicates whether this was created through SaaS or through StorSimple Snapshot Manager.
	BackupPolicyCreationType string `pulumi:"backupPolicyCreationType"`
	// The time of the last backup for the backup policy.
	LastBackupTime string `pulumi:"lastBackupTime"`
	// The time of the next backup for the backup policy.
	NextBackupTime string `pulumi:"nextBackupTime"`
	// Indicates whether at least one of the schedules in the backup policy is active or not.
	ScheduledBackupStatus string `pulumi:"scheduledBackupStatus"`
	// The count of schedules the backup policy contains.
	SchedulesCount int `pulumi:"schedulesCount"`
	// If the backup policy was created by StorSimple Snapshot Manager, then this field indicates the hostname of the StorSimple Snapshot Manager.
	SsmHostName string `pulumi:"ssmHostName"`
	// The path IDs of the volumes which are part of the backup policy.
	VolumeIds []string `pulumi:"volumeIds"`
}

// BackupPolicyPropertiesResponseInput is an input type that accepts BackupPolicyPropertiesResponseArgs and BackupPolicyPropertiesResponseOutput values.
// You can construct a concrete instance of `BackupPolicyPropertiesResponseInput` via:
//
//          BackupPolicyPropertiesResponseArgs{...}
type BackupPolicyPropertiesResponseInput interface {
	pulumi.Input

	ToBackupPolicyPropertiesResponseOutput() BackupPolicyPropertiesResponseOutput
	ToBackupPolicyPropertiesResponseOutputWithContext(context.Context) BackupPolicyPropertiesResponseOutput
}

// The properties of the backup policy.
type BackupPolicyPropertiesResponseArgs struct {
	// The backup policy creation type. Indicates whether this was created through SaaS or through StorSimple Snapshot Manager.
	BackupPolicyCreationType pulumi.StringInput `pulumi:"backupPolicyCreationType"`
	// The time of the last backup for the backup policy.
	LastBackupTime pulumi.StringInput `pulumi:"lastBackupTime"`
	// The time of the next backup for the backup policy.
	NextBackupTime pulumi.StringInput `pulumi:"nextBackupTime"`
	// Indicates whether at least one of the schedules in the backup policy is active or not.
	ScheduledBackupStatus pulumi.StringInput `pulumi:"scheduledBackupStatus"`
	// The count of schedules the backup policy contains.
	SchedulesCount pulumi.IntInput `pulumi:"schedulesCount"`
	// If the backup policy was created by StorSimple Snapshot Manager, then this field indicates the hostname of the StorSimple Snapshot Manager.
	SsmHostName pulumi.StringInput `pulumi:"ssmHostName"`
	// The path IDs of the volumes which are part of the backup policy.
	VolumeIds pulumi.StringArrayInput `pulumi:"volumeIds"`
}

func (BackupPolicyPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupPolicyPropertiesResponse)(nil)).Elem()
}

func (i BackupPolicyPropertiesResponseArgs) ToBackupPolicyPropertiesResponseOutput() BackupPolicyPropertiesResponseOutput {
	return i.ToBackupPolicyPropertiesResponseOutputWithContext(context.Background())
}

func (i BackupPolicyPropertiesResponseArgs) ToBackupPolicyPropertiesResponseOutputWithContext(ctx context.Context) BackupPolicyPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPolicyPropertiesResponseOutput)
}

func (i BackupPolicyPropertiesResponseArgs) ToBackupPolicyPropertiesResponsePtrOutput() BackupPolicyPropertiesResponsePtrOutput {
	return i.ToBackupPolicyPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i BackupPolicyPropertiesResponseArgs) ToBackupPolicyPropertiesResponsePtrOutputWithContext(ctx context.Context) BackupPolicyPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPolicyPropertiesResponseOutput).ToBackupPolicyPropertiesResponsePtrOutputWithContext(ctx)
}

// BackupPolicyPropertiesResponsePtrInput is an input type that accepts BackupPolicyPropertiesResponseArgs, BackupPolicyPropertiesResponsePtr and BackupPolicyPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `BackupPolicyPropertiesResponsePtrInput` via:
//
//          BackupPolicyPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type BackupPolicyPropertiesResponsePtrInput interface {
	pulumi.Input

	ToBackupPolicyPropertiesResponsePtrOutput() BackupPolicyPropertiesResponsePtrOutput
	ToBackupPolicyPropertiesResponsePtrOutputWithContext(context.Context) BackupPolicyPropertiesResponsePtrOutput
}

type backupPolicyPropertiesResponsePtrType BackupPolicyPropertiesResponseArgs

func BackupPolicyPropertiesResponsePtr(v *BackupPolicyPropertiesResponseArgs) BackupPolicyPropertiesResponsePtrInput {
	return (*backupPolicyPropertiesResponsePtrType)(v)
}

func (*backupPolicyPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupPolicyPropertiesResponse)(nil)).Elem()
}

func (i *backupPolicyPropertiesResponsePtrType) ToBackupPolicyPropertiesResponsePtrOutput() BackupPolicyPropertiesResponsePtrOutput {
	return i.ToBackupPolicyPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *backupPolicyPropertiesResponsePtrType) ToBackupPolicyPropertiesResponsePtrOutputWithContext(ctx context.Context) BackupPolicyPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPolicyPropertiesResponsePtrOutput)
}

// The properties of the backup policy.
type BackupPolicyPropertiesResponseOutput struct{ *pulumi.OutputState }

func (BackupPolicyPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupPolicyPropertiesResponse)(nil)).Elem()
}

func (o BackupPolicyPropertiesResponseOutput) ToBackupPolicyPropertiesResponseOutput() BackupPolicyPropertiesResponseOutput {
	return o
}

func (o BackupPolicyPropertiesResponseOutput) ToBackupPolicyPropertiesResponseOutputWithContext(ctx context.Context) BackupPolicyPropertiesResponseOutput {
	return o
}

func (o BackupPolicyPropertiesResponseOutput) ToBackupPolicyPropertiesResponsePtrOutput() BackupPolicyPropertiesResponsePtrOutput {
	return o.ToBackupPolicyPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o BackupPolicyPropertiesResponseOutput) ToBackupPolicyPropertiesResponsePtrOutputWithContext(ctx context.Context) BackupPolicyPropertiesResponsePtrOutput {
	return o.ApplyT(func(v BackupPolicyPropertiesResponse) *BackupPolicyPropertiesResponse {
		return &v
	}).(BackupPolicyPropertiesResponsePtrOutput)
}

// The backup policy creation type. Indicates whether this was created through SaaS or through StorSimple Snapshot Manager.
func (o BackupPolicyPropertiesResponseOutput) BackupPolicyCreationType() pulumi.StringOutput {
	return o.ApplyT(func(v BackupPolicyPropertiesResponse) string { return v.BackupPolicyCreationType }).(pulumi.StringOutput)
}

// The time of the last backup for the backup policy.
func (o BackupPolicyPropertiesResponseOutput) LastBackupTime() pulumi.StringOutput {
	return o.ApplyT(func(v BackupPolicyPropertiesResponse) string { return v.LastBackupTime }).(pulumi.StringOutput)
}

// The time of the next backup for the backup policy.
func (o BackupPolicyPropertiesResponseOutput) NextBackupTime() pulumi.StringOutput {
	return o.ApplyT(func(v BackupPolicyPropertiesResponse) string { return v.NextBackupTime }).(pulumi.StringOutput)
}

// Indicates whether at least one of the schedules in the backup policy is active or not.
func (o BackupPolicyPropertiesResponseOutput) ScheduledBackupStatus() pulumi.StringOutput {
	return o.ApplyT(func(v BackupPolicyPropertiesResponse) string { return v.ScheduledBackupStatus }).(pulumi.StringOutput)
}

// The count of schedules the backup policy contains.
func (o BackupPolicyPropertiesResponseOutput) SchedulesCount() pulumi.IntOutput {
	return o.ApplyT(func(v BackupPolicyPropertiesResponse) int { return v.SchedulesCount }).(pulumi.IntOutput)
}

// If the backup policy was created by StorSimple Snapshot Manager, then this field indicates the hostname of the StorSimple Snapshot Manager.
func (o BackupPolicyPropertiesResponseOutput) SsmHostName() pulumi.StringOutput {
	return o.ApplyT(func(v BackupPolicyPropertiesResponse) string { return v.SsmHostName }).(pulumi.StringOutput)
}

// The path IDs of the volumes which are part of the backup policy.
func (o BackupPolicyPropertiesResponseOutput) VolumeIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BackupPolicyPropertiesResponse) []string { return v.VolumeIds }).(pulumi.StringArrayOutput)
}

type BackupPolicyPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (BackupPolicyPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupPolicyPropertiesResponse)(nil)).Elem()
}

func (o BackupPolicyPropertiesResponsePtrOutput) ToBackupPolicyPropertiesResponsePtrOutput() BackupPolicyPropertiesResponsePtrOutput {
	return o
}

func (o BackupPolicyPropertiesResponsePtrOutput) ToBackupPolicyPropertiesResponsePtrOutputWithContext(ctx context.Context) BackupPolicyPropertiesResponsePtrOutput {
	return o
}

func (o BackupPolicyPropertiesResponsePtrOutput) Elem() BackupPolicyPropertiesResponseOutput {
	return o.ApplyT(func(v *BackupPolicyPropertiesResponse) BackupPolicyPropertiesResponse { return *v }).(BackupPolicyPropertiesResponseOutput)
}

// The backup policy creation type. Indicates whether this was created through SaaS or through StorSimple Snapshot Manager.
func (o BackupPolicyPropertiesResponsePtrOutput) BackupPolicyCreationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupPolicyPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.BackupPolicyCreationType
	}).(pulumi.StringPtrOutput)
}

// The time of the last backup for the backup policy.
func (o BackupPolicyPropertiesResponsePtrOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupPolicyPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastBackupTime
	}).(pulumi.StringPtrOutput)
}

// The time of the next backup for the backup policy.
func (o BackupPolicyPropertiesResponsePtrOutput) NextBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupPolicyPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.NextBackupTime
	}).(pulumi.StringPtrOutput)
}

// Indicates whether at least one of the schedules in the backup policy is active or not.
func (o BackupPolicyPropertiesResponsePtrOutput) ScheduledBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupPolicyPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ScheduledBackupStatus
	}).(pulumi.StringPtrOutput)
}

// The count of schedules the backup policy contains.
func (o BackupPolicyPropertiesResponsePtrOutput) SchedulesCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackupPolicyPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.SchedulesCount
	}).(pulumi.IntPtrOutput)
}

// If the backup policy was created by StorSimple Snapshot Manager, then this field indicates the hostname of the StorSimple Snapshot Manager.
func (o BackupPolicyPropertiesResponsePtrOutput) SsmHostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupPolicyPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SsmHostName
	}).(pulumi.StringPtrOutput)
}

// The path IDs of the volumes which are part of the backup policy.
func (o BackupPolicyPropertiesResponsePtrOutput) VolumeIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BackupPolicyPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.VolumeIds
	}).(pulumi.StringArrayOutput)
}

// The properties of the backup schedule.
type BackupSchedulePropertiesResponse struct {
	// The type of backup which needs to be taken.
	BackupType string `pulumi:"backupType"`
	// The last successful backup run which was triggered for the schedule.
	LastSuccessfulRun string `pulumi:"lastSuccessfulRun"`
	// The number of backups to be retained.
	RetentionCount int `pulumi:"retentionCount"`
	// The schedule recurrence.
	ScheduleRecurrence ScheduleRecurrenceResponse `pulumi:"scheduleRecurrence"`
	// The schedule status.
	ScheduleStatus string `pulumi:"scheduleStatus"`
	// The start time of the schedule.
	StartTime string `pulumi:"startTime"`
}

// BackupSchedulePropertiesResponseInput is an input type that accepts BackupSchedulePropertiesResponseArgs and BackupSchedulePropertiesResponseOutput values.
// You can construct a concrete instance of `BackupSchedulePropertiesResponseInput` via:
//
//          BackupSchedulePropertiesResponseArgs{...}
type BackupSchedulePropertiesResponseInput interface {
	pulumi.Input

	ToBackupSchedulePropertiesResponseOutput() BackupSchedulePropertiesResponseOutput
	ToBackupSchedulePropertiesResponseOutputWithContext(context.Context) BackupSchedulePropertiesResponseOutput
}

// The properties of the backup schedule.
type BackupSchedulePropertiesResponseArgs struct {
	// The type of backup which needs to be taken.
	BackupType pulumi.StringInput `pulumi:"backupType"`
	// The last successful backup run which was triggered for the schedule.
	LastSuccessfulRun pulumi.StringInput `pulumi:"lastSuccessfulRun"`
	// The number of backups to be retained.
	RetentionCount pulumi.IntInput `pulumi:"retentionCount"`
	// The schedule recurrence.
	ScheduleRecurrence ScheduleRecurrenceResponseInput `pulumi:"scheduleRecurrence"`
	// The schedule status.
	ScheduleStatus pulumi.StringInput `pulumi:"scheduleStatus"`
	// The start time of the schedule.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (BackupSchedulePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupSchedulePropertiesResponse)(nil)).Elem()
}

func (i BackupSchedulePropertiesResponseArgs) ToBackupSchedulePropertiesResponseOutput() BackupSchedulePropertiesResponseOutput {
	return i.ToBackupSchedulePropertiesResponseOutputWithContext(context.Background())
}

func (i BackupSchedulePropertiesResponseArgs) ToBackupSchedulePropertiesResponseOutputWithContext(ctx context.Context) BackupSchedulePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupSchedulePropertiesResponseOutput)
}

func (i BackupSchedulePropertiesResponseArgs) ToBackupSchedulePropertiesResponsePtrOutput() BackupSchedulePropertiesResponsePtrOutput {
	return i.ToBackupSchedulePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i BackupSchedulePropertiesResponseArgs) ToBackupSchedulePropertiesResponsePtrOutputWithContext(ctx context.Context) BackupSchedulePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupSchedulePropertiesResponseOutput).ToBackupSchedulePropertiesResponsePtrOutputWithContext(ctx)
}

// BackupSchedulePropertiesResponsePtrInput is an input type that accepts BackupSchedulePropertiesResponseArgs, BackupSchedulePropertiesResponsePtr and BackupSchedulePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `BackupSchedulePropertiesResponsePtrInput` via:
//
//          BackupSchedulePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type BackupSchedulePropertiesResponsePtrInput interface {
	pulumi.Input

	ToBackupSchedulePropertiesResponsePtrOutput() BackupSchedulePropertiesResponsePtrOutput
	ToBackupSchedulePropertiesResponsePtrOutputWithContext(context.Context) BackupSchedulePropertiesResponsePtrOutput
}

type backupSchedulePropertiesResponsePtrType BackupSchedulePropertiesResponseArgs

func BackupSchedulePropertiesResponsePtr(v *BackupSchedulePropertiesResponseArgs) BackupSchedulePropertiesResponsePtrInput {
	return (*backupSchedulePropertiesResponsePtrType)(v)
}

func (*backupSchedulePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupSchedulePropertiesResponse)(nil)).Elem()
}

func (i *backupSchedulePropertiesResponsePtrType) ToBackupSchedulePropertiesResponsePtrOutput() BackupSchedulePropertiesResponsePtrOutput {
	return i.ToBackupSchedulePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *backupSchedulePropertiesResponsePtrType) ToBackupSchedulePropertiesResponsePtrOutputWithContext(ctx context.Context) BackupSchedulePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupSchedulePropertiesResponsePtrOutput)
}

// The properties of the backup schedule.
type BackupSchedulePropertiesResponseOutput struct{ *pulumi.OutputState }

func (BackupSchedulePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupSchedulePropertiesResponse)(nil)).Elem()
}

func (o BackupSchedulePropertiesResponseOutput) ToBackupSchedulePropertiesResponseOutput() BackupSchedulePropertiesResponseOutput {
	return o
}

func (o BackupSchedulePropertiesResponseOutput) ToBackupSchedulePropertiesResponseOutputWithContext(ctx context.Context) BackupSchedulePropertiesResponseOutput {
	return o
}

func (o BackupSchedulePropertiesResponseOutput) ToBackupSchedulePropertiesResponsePtrOutput() BackupSchedulePropertiesResponsePtrOutput {
	return o.ToBackupSchedulePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o BackupSchedulePropertiesResponseOutput) ToBackupSchedulePropertiesResponsePtrOutputWithContext(ctx context.Context) BackupSchedulePropertiesResponsePtrOutput {
	return o.ApplyT(func(v BackupSchedulePropertiesResponse) *BackupSchedulePropertiesResponse {
		return &v
	}).(BackupSchedulePropertiesResponsePtrOutput)
}

// The type of backup which needs to be taken.
func (o BackupSchedulePropertiesResponseOutput) BackupType() pulumi.StringOutput {
	return o.ApplyT(func(v BackupSchedulePropertiesResponse) string { return v.BackupType }).(pulumi.StringOutput)
}

// The last successful backup run which was triggered for the schedule.
func (o BackupSchedulePropertiesResponseOutput) LastSuccessfulRun() pulumi.StringOutput {
	return o.ApplyT(func(v BackupSchedulePropertiesResponse) string { return v.LastSuccessfulRun }).(pulumi.StringOutput)
}

// The number of backups to be retained.
func (o BackupSchedulePropertiesResponseOutput) RetentionCount() pulumi.IntOutput {
	return o.ApplyT(func(v BackupSchedulePropertiesResponse) int { return v.RetentionCount }).(pulumi.IntOutput)
}

// The schedule recurrence.
func (o BackupSchedulePropertiesResponseOutput) ScheduleRecurrence() ScheduleRecurrenceResponseOutput {
	return o.ApplyT(func(v BackupSchedulePropertiesResponse) ScheduleRecurrenceResponse { return v.ScheduleRecurrence }).(ScheduleRecurrenceResponseOutput)
}

// The schedule status.
func (o BackupSchedulePropertiesResponseOutput) ScheduleStatus() pulumi.StringOutput {
	return o.ApplyT(func(v BackupSchedulePropertiesResponse) string { return v.ScheduleStatus }).(pulumi.StringOutput)
}

// The start time of the schedule.
func (o BackupSchedulePropertiesResponseOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v BackupSchedulePropertiesResponse) string { return v.StartTime }).(pulumi.StringOutput)
}

type BackupSchedulePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (BackupSchedulePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupSchedulePropertiesResponse)(nil)).Elem()
}

func (o BackupSchedulePropertiesResponsePtrOutput) ToBackupSchedulePropertiesResponsePtrOutput() BackupSchedulePropertiesResponsePtrOutput {
	return o
}

func (o BackupSchedulePropertiesResponsePtrOutput) ToBackupSchedulePropertiesResponsePtrOutputWithContext(ctx context.Context) BackupSchedulePropertiesResponsePtrOutput {
	return o
}

func (o BackupSchedulePropertiesResponsePtrOutput) Elem() BackupSchedulePropertiesResponseOutput {
	return o.ApplyT(func(v *BackupSchedulePropertiesResponse) BackupSchedulePropertiesResponse { return *v }).(BackupSchedulePropertiesResponseOutput)
}

// The type of backup which needs to be taken.
func (o BackupSchedulePropertiesResponsePtrOutput) BackupType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupSchedulePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.BackupType
	}).(pulumi.StringPtrOutput)
}

// The last successful backup run which was triggered for the schedule.
func (o BackupSchedulePropertiesResponsePtrOutput) LastSuccessfulRun() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupSchedulePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastSuccessfulRun
	}).(pulumi.StringPtrOutput)
}

// The number of backups to be retained.
func (o BackupSchedulePropertiesResponsePtrOutput) RetentionCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackupSchedulePropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.RetentionCount
	}).(pulumi.IntPtrOutput)
}

// The schedule recurrence.
func (o BackupSchedulePropertiesResponsePtrOutput) ScheduleRecurrence() ScheduleRecurrenceResponsePtrOutput {
	return o.ApplyT(func(v *BackupSchedulePropertiesResponse) *ScheduleRecurrenceResponse {
		if v == nil {
			return nil
		}
		return &v.ScheduleRecurrence
	}).(ScheduleRecurrenceResponsePtrOutput)
}

// The schedule status.
func (o BackupSchedulePropertiesResponsePtrOutput) ScheduleStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupSchedulePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ScheduleStatus
	}).(pulumi.StringPtrOutput)
}

// The start time of the schedule.
func (o BackupSchedulePropertiesResponsePtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupSchedulePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StartTime
	}).(pulumi.StringPtrOutput)
}

// The properties of the bandwidth setting.
type BandwidthRateSettingPropertiesResponse struct {
	// The schedules.
	Schedules []BandwidthScheduleResponse `pulumi:"schedules"`
	// The number of volumes that uses the bandwidth setting.
	VolumeCount int `pulumi:"volumeCount"`
}

// BandwidthRateSettingPropertiesResponseInput is an input type that accepts BandwidthRateSettingPropertiesResponseArgs and BandwidthRateSettingPropertiesResponseOutput values.
// You can construct a concrete instance of `BandwidthRateSettingPropertiesResponseInput` via:
//
//          BandwidthRateSettingPropertiesResponseArgs{...}
type BandwidthRateSettingPropertiesResponseInput interface {
	pulumi.Input

	ToBandwidthRateSettingPropertiesResponseOutput() BandwidthRateSettingPropertiesResponseOutput
	ToBandwidthRateSettingPropertiesResponseOutputWithContext(context.Context) BandwidthRateSettingPropertiesResponseOutput
}

// The properties of the bandwidth setting.
type BandwidthRateSettingPropertiesResponseArgs struct {
	// The schedules.
	Schedules BandwidthScheduleResponseArrayInput `pulumi:"schedules"`
	// The number of volumes that uses the bandwidth setting.
	VolumeCount pulumi.IntInput `pulumi:"volumeCount"`
}

func (BandwidthRateSettingPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthRateSettingPropertiesResponse)(nil)).Elem()
}

func (i BandwidthRateSettingPropertiesResponseArgs) ToBandwidthRateSettingPropertiesResponseOutput() BandwidthRateSettingPropertiesResponseOutput {
	return i.ToBandwidthRateSettingPropertiesResponseOutputWithContext(context.Background())
}

func (i BandwidthRateSettingPropertiesResponseArgs) ToBandwidthRateSettingPropertiesResponseOutputWithContext(ctx context.Context) BandwidthRateSettingPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthRateSettingPropertiesResponseOutput)
}

func (i BandwidthRateSettingPropertiesResponseArgs) ToBandwidthRateSettingPropertiesResponsePtrOutput() BandwidthRateSettingPropertiesResponsePtrOutput {
	return i.ToBandwidthRateSettingPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i BandwidthRateSettingPropertiesResponseArgs) ToBandwidthRateSettingPropertiesResponsePtrOutputWithContext(ctx context.Context) BandwidthRateSettingPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthRateSettingPropertiesResponseOutput).ToBandwidthRateSettingPropertiesResponsePtrOutputWithContext(ctx)
}

// BandwidthRateSettingPropertiesResponsePtrInput is an input type that accepts BandwidthRateSettingPropertiesResponseArgs, BandwidthRateSettingPropertiesResponsePtr and BandwidthRateSettingPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `BandwidthRateSettingPropertiesResponsePtrInput` via:
//
//          BandwidthRateSettingPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type BandwidthRateSettingPropertiesResponsePtrInput interface {
	pulumi.Input

	ToBandwidthRateSettingPropertiesResponsePtrOutput() BandwidthRateSettingPropertiesResponsePtrOutput
	ToBandwidthRateSettingPropertiesResponsePtrOutputWithContext(context.Context) BandwidthRateSettingPropertiesResponsePtrOutput
}

type bandwidthRateSettingPropertiesResponsePtrType BandwidthRateSettingPropertiesResponseArgs

func BandwidthRateSettingPropertiesResponsePtr(v *BandwidthRateSettingPropertiesResponseArgs) BandwidthRateSettingPropertiesResponsePtrInput {
	return (*bandwidthRateSettingPropertiesResponsePtrType)(v)
}

func (*bandwidthRateSettingPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BandwidthRateSettingPropertiesResponse)(nil)).Elem()
}

func (i *bandwidthRateSettingPropertiesResponsePtrType) ToBandwidthRateSettingPropertiesResponsePtrOutput() BandwidthRateSettingPropertiesResponsePtrOutput {
	return i.ToBandwidthRateSettingPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *bandwidthRateSettingPropertiesResponsePtrType) ToBandwidthRateSettingPropertiesResponsePtrOutputWithContext(ctx context.Context) BandwidthRateSettingPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthRateSettingPropertiesResponsePtrOutput)
}

// The properties of the bandwidth setting.
type BandwidthRateSettingPropertiesResponseOutput struct{ *pulumi.OutputState }

func (BandwidthRateSettingPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthRateSettingPropertiesResponse)(nil)).Elem()
}

func (o BandwidthRateSettingPropertiesResponseOutput) ToBandwidthRateSettingPropertiesResponseOutput() BandwidthRateSettingPropertiesResponseOutput {
	return o
}

func (o BandwidthRateSettingPropertiesResponseOutput) ToBandwidthRateSettingPropertiesResponseOutputWithContext(ctx context.Context) BandwidthRateSettingPropertiesResponseOutput {
	return o
}

func (o BandwidthRateSettingPropertiesResponseOutput) ToBandwidthRateSettingPropertiesResponsePtrOutput() BandwidthRateSettingPropertiesResponsePtrOutput {
	return o.ToBandwidthRateSettingPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o BandwidthRateSettingPropertiesResponseOutput) ToBandwidthRateSettingPropertiesResponsePtrOutputWithContext(ctx context.Context) BandwidthRateSettingPropertiesResponsePtrOutput {
	return o.ApplyT(func(v BandwidthRateSettingPropertiesResponse) *BandwidthRateSettingPropertiesResponse {
		return &v
	}).(BandwidthRateSettingPropertiesResponsePtrOutput)
}

// The schedules.
func (o BandwidthRateSettingPropertiesResponseOutput) Schedules() BandwidthScheduleResponseArrayOutput {
	return o.ApplyT(func(v BandwidthRateSettingPropertiesResponse) []BandwidthScheduleResponse { return v.Schedules }).(BandwidthScheduleResponseArrayOutput)
}

// The number of volumes that uses the bandwidth setting.
func (o BandwidthRateSettingPropertiesResponseOutput) VolumeCount() pulumi.IntOutput {
	return o.ApplyT(func(v BandwidthRateSettingPropertiesResponse) int { return v.VolumeCount }).(pulumi.IntOutput)
}

type BandwidthRateSettingPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (BandwidthRateSettingPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BandwidthRateSettingPropertiesResponse)(nil)).Elem()
}

func (o BandwidthRateSettingPropertiesResponsePtrOutput) ToBandwidthRateSettingPropertiesResponsePtrOutput() BandwidthRateSettingPropertiesResponsePtrOutput {
	return o
}

func (o BandwidthRateSettingPropertiesResponsePtrOutput) ToBandwidthRateSettingPropertiesResponsePtrOutputWithContext(ctx context.Context) BandwidthRateSettingPropertiesResponsePtrOutput {
	return o
}

func (o BandwidthRateSettingPropertiesResponsePtrOutput) Elem() BandwidthRateSettingPropertiesResponseOutput {
	return o.ApplyT(func(v *BandwidthRateSettingPropertiesResponse) BandwidthRateSettingPropertiesResponse { return *v }).(BandwidthRateSettingPropertiesResponseOutput)
}

// The schedules.
func (o BandwidthRateSettingPropertiesResponsePtrOutput) Schedules() BandwidthScheduleResponseArrayOutput {
	return o.ApplyT(func(v *BandwidthRateSettingPropertiesResponse) []BandwidthScheduleResponse {
		if v == nil {
			return nil
		}
		return v.Schedules
	}).(BandwidthScheduleResponseArrayOutput)
}

// The number of volumes that uses the bandwidth setting.
func (o BandwidthRateSettingPropertiesResponsePtrOutput) VolumeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BandwidthRateSettingPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.VolumeCount
	}).(pulumi.IntPtrOutput)
}

// The schedule for bandwidth setting.
type BandwidthSchedule struct {
	// The days of the week when this schedule is applicable.
	Days []string `pulumi:"days"`
	// The rate in Mbps.
	RateInMbps int `pulumi:"rateInMbps"`
	// The start time of the schedule.
	Start Time `pulumi:"start"`
	// The stop time of the schedule.
	Stop Time `pulumi:"stop"`
}

// BandwidthScheduleInput is an input type that accepts BandwidthScheduleArgs and BandwidthScheduleOutput values.
// You can construct a concrete instance of `BandwidthScheduleInput` via:
//
//          BandwidthScheduleArgs{...}
type BandwidthScheduleInput interface {
	pulumi.Input

	ToBandwidthScheduleOutput() BandwidthScheduleOutput
	ToBandwidthScheduleOutputWithContext(context.Context) BandwidthScheduleOutput
}

// The schedule for bandwidth setting.
type BandwidthScheduleArgs struct {
	// The days of the week when this schedule is applicable.
	Days pulumi.StringArrayInput `pulumi:"days"`
	// The rate in Mbps.
	RateInMbps pulumi.IntInput `pulumi:"rateInMbps"`
	// The start time of the schedule.
	Start TimeInput `pulumi:"start"`
	// The stop time of the schedule.
	Stop TimeInput `pulumi:"stop"`
}

func (BandwidthScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthSchedule)(nil)).Elem()
}

func (i BandwidthScheduleArgs) ToBandwidthScheduleOutput() BandwidthScheduleOutput {
	return i.ToBandwidthScheduleOutputWithContext(context.Background())
}

func (i BandwidthScheduleArgs) ToBandwidthScheduleOutputWithContext(ctx context.Context) BandwidthScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthScheduleOutput)
}

// BandwidthScheduleArrayInput is an input type that accepts BandwidthScheduleArray and BandwidthScheduleArrayOutput values.
// You can construct a concrete instance of `BandwidthScheduleArrayInput` via:
//
//          BandwidthScheduleArray{ BandwidthScheduleArgs{...} }
type BandwidthScheduleArrayInput interface {
	pulumi.Input

	ToBandwidthScheduleArrayOutput() BandwidthScheduleArrayOutput
	ToBandwidthScheduleArrayOutputWithContext(context.Context) BandwidthScheduleArrayOutput
}

type BandwidthScheduleArray []BandwidthScheduleInput

func (BandwidthScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BandwidthSchedule)(nil)).Elem()
}

func (i BandwidthScheduleArray) ToBandwidthScheduleArrayOutput() BandwidthScheduleArrayOutput {
	return i.ToBandwidthScheduleArrayOutputWithContext(context.Background())
}

func (i BandwidthScheduleArray) ToBandwidthScheduleArrayOutputWithContext(ctx context.Context) BandwidthScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthScheduleArrayOutput)
}

// The schedule for bandwidth setting.
type BandwidthScheduleOutput struct{ *pulumi.OutputState }

func (BandwidthScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthSchedule)(nil)).Elem()
}

func (o BandwidthScheduleOutput) ToBandwidthScheduleOutput() BandwidthScheduleOutput {
	return o
}

func (o BandwidthScheduleOutput) ToBandwidthScheduleOutputWithContext(ctx context.Context) BandwidthScheduleOutput {
	return o
}

// The days of the week when this schedule is applicable.
func (o BandwidthScheduleOutput) Days() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BandwidthSchedule) []string { return v.Days }).(pulumi.StringArrayOutput)
}

// The rate in Mbps.
func (o BandwidthScheduleOutput) RateInMbps() pulumi.IntOutput {
	return o.ApplyT(func(v BandwidthSchedule) int { return v.RateInMbps }).(pulumi.IntOutput)
}

// The start time of the schedule.
func (o BandwidthScheduleOutput) Start() TimeOutput {
	return o.ApplyT(func(v BandwidthSchedule) Time { return v.Start }).(TimeOutput)
}

// The stop time of the schedule.
func (o BandwidthScheduleOutput) Stop() TimeOutput {
	return o.ApplyT(func(v BandwidthSchedule) Time { return v.Stop }).(TimeOutput)
}

type BandwidthScheduleArrayOutput struct{ *pulumi.OutputState }

func (BandwidthScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BandwidthSchedule)(nil)).Elem()
}

func (o BandwidthScheduleArrayOutput) ToBandwidthScheduleArrayOutput() BandwidthScheduleArrayOutput {
	return o
}

func (o BandwidthScheduleArrayOutput) ToBandwidthScheduleArrayOutputWithContext(ctx context.Context) BandwidthScheduleArrayOutput {
	return o
}

func (o BandwidthScheduleArrayOutput) Index(i pulumi.IntInput) BandwidthScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BandwidthSchedule {
		return vs[0].([]BandwidthSchedule)[vs[1].(int)]
	}).(BandwidthScheduleOutput)
}

// The schedule for bandwidth setting.
type BandwidthScheduleResponse struct {
	// The days of the week when this schedule is applicable.
	Days []string `pulumi:"days"`
	// The rate in Mbps.
	RateInMbps int `pulumi:"rateInMbps"`
	// The start time of the schedule.
	Start TimeResponse `pulumi:"start"`
	// The stop time of the schedule.
	Stop TimeResponse `pulumi:"stop"`
}

// BandwidthScheduleResponseInput is an input type that accepts BandwidthScheduleResponseArgs and BandwidthScheduleResponseOutput values.
// You can construct a concrete instance of `BandwidthScheduleResponseInput` via:
//
//          BandwidthScheduleResponseArgs{...}
type BandwidthScheduleResponseInput interface {
	pulumi.Input

	ToBandwidthScheduleResponseOutput() BandwidthScheduleResponseOutput
	ToBandwidthScheduleResponseOutputWithContext(context.Context) BandwidthScheduleResponseOutput
}

// The schedule for bandwidth setting.
type BandwidthScheduleResponseArgs struct {
	// The days of the week when this schedule is applicable.
	Days pulumi.StringArrayInput `pulumi:"days"`
	// The rate in Mbps.
	RateInMbps pulumi.IntInput `pulumi:"rateInMbps"`
	// The start time of the schedule.
	Start TimeResponseInput `pulumi:"start"`
	// The stop time of the schedule.
	Stop TimeResponseInput `pulumi:"stop"`
}

func (BandwidthScheduleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthScheduleResponse)(nil)).Elem()
}

func (i BandwidthScheduleResponseArgs) ToBandwidthScheduleResponseOutput() BandwidthScheduleResponseOutput {
	return i.ToBandwidthScheduleResponseOutputWithContext(context.Background())
}

func (i BandwidthScheduleResponseArgs) ToBandwidthScheduleResponseOutputWithContext(ctx context.Context) BandwidthScheduleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthScheduleResponseOutput)
}

// BandwidthScheduleResponseArrayInput is an input type that accepts BandwidthScheduleResponseArray and BandwidthScheduleResponseArrayOutput values.
// You can construct a concrete instance of `BandwidthScheduleResponseArrayInput` via:
//
//          BandwidthScheduleResponseArray{ BandwidthScheduleResponseArgs{...} }
type BandwidthScheduleResponseArrayInput interface {
	pulumi.Input

	ToBandwidthScheduleResponseArrayOutput() BandwidthScheduleResponseArrayOutput
	ToBandwidthScheduleResponseArrayOutputWithContext(context.Context) BandwidthScheduleResponseArrayOutput
}

type BandwidthScheduleResponseArray []BandwidthScheduleResponseInput

func (BandwidthScheduleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BandwidthScheduleResponse)(nil)).Elem()
}

func (i BandwidthScheduleResponseArray) ToBandwidthScheduleResponseArrayOutput() BandwidthScheduleResponseArrayOutput {
	return i.ToBandwidthScheduleResponseArrayOutputWithContext(context.Background())
}

func (i BandwidthScheduleResponseArray) ToBandwidthScheduleResponseArrayOutputWithContext(ctx context.Context) BandwidthScheduleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthScheduleResponseArrayOutput)
}

// The schedule for bandwidth setting.
type BandwidthScheduleResponseOutput struct{ *pulumi.OutputState }

func (BandwidthScheduleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthScheduleResponse)(nil)).Elem()
}

func (o BandwidthScheduleResponseOutput) ToBandwidthScheduleResponseOutput() BandwidthScheduleResponseOutput {
	return o
}

func (o BandwidthScheduleResponseOutput) ToBandwidthScheduleResponseOutputWithContext(ctx context.Context) BandwidthScheduleResponseOutput {
	return o
}

// The days of the week when this schedule is applicable.
func (o BandwidthScheduleResponseOutput) Days() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BandwidthScheduleResponse) []string { return v.Days }).(pulumi.StringArrayOutput)
}

// The rate in Mbps.
func (o BandwidthScheduleResponseOutput) RateInMbps() pulumi.IntOutput {
	return o.ApplyT(func(v BandwidthScheduleResponse) int { return v.RateInMbps }).(pulumi.IntOutput)
}

// The start time of the schedule.
func (o BandwidthScheduleResponseOutput) Start() TimeResponseOutput {
	return o.ApplyT(func(v BandwidthScheduleResponse) TimeResponse { return v.Start }).(TimeResponseOutput)
}

// The stop time of the schedule.
func (o BandwidthScheduleResponseOutput) Stop() TimeResponseOutput {
	return o.ApplyT(func(v BandwidthScheduleResponse) TimeResponse { return v.Stop }).(TimeResponseOutput)
}

type BandwidthScheduleResponseArrayOutput struct{ *pulumi.OutputState }

func (BandwidthScheduleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BandwidthScheduleResponse)(nil)).Elem()
}

func (o BandwidthScheduleResponseArrayOutput) ToBandwidthScheduleResponseArrayOutput() BandwidthScheduleResponseArrayOutput {
	return o
}

func (o BandwidthScheduleResponseArrayOutput) ToBandwidthScheduleResponseArrayOutputWithContext(ctx context.Context) BandwidthScheduleResponseArrayOutput {
	return o
}

func (o BandwidthScheduleResponseArrayOutput) Index(i pulumi.IntInput) BandwidthScheduleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BandwidthScheduleResponse {
		return vs[0].([]BandwidthScheduleResponse)[vs[1].(int)]
	}).(BandwidthScheduleResponseOutput)
}

// The eligibility result of failover set, for failover.
type FailoverSetEligibilityResultResponse struct {
	// The error message, if the failover set is not eligible for failover.
	ErrorMessage *string `pulumi:"errorMessage"`
	// Represents if this failover set is eligible for failover or not.
	IsEligibleForFailover *bool `pulumi:"isEligibleForFailover"`
}

// FailoverSetEligibilityResultResponseInput is an input type that accepts FailoverSetEligibilityResultResponseArgs and FailoverSetEligibilityResultResponseOutput values.
// You can construct a concrete instance of `FailoverSetEligibilityResultResponseInput` via:
//
//          FailoverSetEligibilityResultResponseArgs{...}
type FailoverSetEligibilityResultResponseInput interface {
	pulumi.Input

	ToFailoverSetEligibilityResultResponseOutput() FailoverSetEligibilityResultResponseOutput
	ToFailoverSetEligibilityResultResponseOutputWithContext(context.Context) FailoverSetEligibilityResultResponseOutput
}

// The eligibility result of failover set, for failover.
type FailoverSetEligibilityResultResponseArgs struct {
	// The error message, if the failover set is not eligible for failover.
	ErrorMessage pulumi.StringPtrInput `pulumi:"errorMessage"`
	// Represents if this failover set is eligible for failover or not.
	IsEligibleForFailover pulumi.BoolPtrInput `pulumi:"isEligibleForFailover"`
}

func (FailoverSetEligibilityResultResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FailoverSetEligibilityResultResponse)(nil)).Elem()
}

func (i FailoverSetEligibilityResultResponseArgs) ToFailoverSetEligibilityResultResponseOutput() FailoverSetEligibilityResultResponseOutput {
	return i.ToFailoverSetEligibilityResultResponseOutputWithContext(context.Background())
}

func (i FailoverSetEligibilityResultResponseArgs) ToFailoverSetEligibilityResultResponseOutputWithContext(ctx context.Context) FailoverSetEligibilityResultResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FailoverSetEligibilityResultResponseOutput)
}

func (i FailoverSetEligibilityResultResponseArgs) ToFailoverSetEligibilityResultResponsePtrOutput() FailoverSetEligibilityResultResponsePtrOutput {
	return i.ToFailoverSetEligibilityResultResponsePtrOutputWithContext(context.Background())
}

func (i FailoverSetEligibilityResultResponseArgs) ToFailoverSetEligibilityResultResponsePtrOutputWithContext(ctx context.Context) FailoverSetEligibilityResultResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FailoverSetEligibilityResultResponseOutput).ToFailoverSetEligibilityResultResponsePtrOutputWithContext(ctx)
}

// FailoverSetEligibilityResultResponsePtrInput is an input type that accepts FailoverSetEligibilityResultResponseArgs, FailoverSetEligibilityResultResponsePtr and FailoverSetEligibilityResultResponsePtrOutput values.
// You can construct a concrete instance of `FailoverSetEligibilityResultResponsePtrInput` via:
//
//          FailoverSetEligibilityResultResponseArgs{...}
//
//  or:
//
//          nil
type FailoverSetEligibilityResultResponsePtrInput interface {
	pulumi.Input

	ToFailoverSetEligibilityResultResponsePtrOutput() FailoverSetEligibilityResultResponsePtrOutput
	ToFailoverSetEligibilityResultResponsePtrOutputWithContext(context.Context) FailoverSetEligibilityResultResponsePtrOutput
}

type failoverSetEligibilityResultResponsePtrType FailoverSetEligibilityResultResponseArgs

func FailoverSetEligibilityResultResponsePtr(v *FailoverSetEligibilityResultResponseArgs) FailoverSetEligibilityResultResponsePtrInput {
	return (*failoverSetEligibilityResultResponsePtrType)(v)
}

func (*failoverSetEligibilityResultResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FailoverSetEligibilityResultResponse)(nil)).Elem()
}

func (i *failoverSetEligibilityResultResponsePtrType) ToFailoverSetEligibilityResultResponsePtrOutput() FailoverSetEligibilityResultResponsePtrOutput {
	return i.ToFailoverSetEligibilityResultResponsePtrOutputWithContext(context.Background())
}

func (i *failoverSetEligibilityResultResponsePtrType) ToFailoverSetEligibilityResultResponsePtrOutputWithContext(ctx context.Context) FailoverSetEligibilityResultResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FailoverSetEligibilityResultResponsePtrOutput)
}

// The eligibility result of failover set, for failover.
type FailoverSetEligibilityResultResponseOutput struct{ *pulumi.OutputState }

func (FailoverSetEligibilityResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FailoverSetEligibilityResultResponse)(nil)).Elem()
}

func (o FailoverSetEligibilityResultResponseOutput) ToFailoverSetEligibilityResultResponseOutput() FailoverSetEligibilityResultResponseOutput {
	return o
}

func (o FailoverSetEligibilityResultResponseOutput) ToFailoverSetEligibilityResultResponseOutputWithContext(ctx context.Context) FailoverSetEligibilityResultResponseOutput {
	return o
}

func (o FailoverSetEligibilityResultResponseOutput) ToFailoverSetEligibilityResultResponsePtrOutput() FailoverSetEligibilityResultResponsePtrOutput {
	return o.ToFailoverSetEligibilityResultResponsePtrOutputWithContext(context.Background())
}

func (o FailoverSetEligibilityResultResponseOutput) ToFailoverSetEligibilityResultResponsePtrOutputWithContext(ctx context.Context) FailoverSetEligibilityResultResponsePtrOutput {
	return o.ApplyT(func(v FailoverSetEligibilityResultResponse) *FailoverSetEligibilityResultResponse {
		return &v
	}).(FailoverSetEligibilityResultResponsePtrOutput)
}

// The error message, if the failover set is not eligible for failover.
func (o FailoverSetEligibilityResultResponseOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FailoverSetEligibilityResultResponse) *string { return v.ErrorMessage }).(pulumi.StringPtrOutput)
}

// Represents if this failover set is eligible for failover or not.
func (o FailoverSetEligibilityResultResponseOutput) IsEligibleForFailover() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FailoverSetEligibilityResultResponse) *bool { return v.IsEligibleForFailover }).(pulumi.BoolPtrOutput)
}

type FailoverSetEligibilityResultResponsePtrOutput struct{ *pulumi.OutputState }

func (FailoverSetEligibilityResultResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FailoverSetEligibilityResultResponse)(nil)).Elem()
}

func (o FailoverSetEligibilityResultResponsePtrOutput) ToFailoverSetEligibilityResultResponsePtrOutput() FailoverSetEligibilityResultResponsePtrOutput {
	return o
}

func (o FailoverSetEligibilityResultResponsePtrOutput) ToFailoverSetEligibilityResultResponsePtrOutputWithContext(ctx context.Context) FailoverSetEligibilityResultResponsePtrOutput {
	return o
}

func (o FailoverSetEligibilityResultResponsePtrOutput) Elem() FailoverSetEligibilityResultResponseOutput {
	return o.ApplyT(func(v *FailoverSetEligibilityResultResponse) FailoverSetEligibilityResultResponse { return *v }).(FailoverSetEligibilityResultResponseOutput)
}

// The error message, if the failover set is not eligible for failover.
func (o FailoverSetEligibilityResultResponsePtrOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FailoverSetEligibilityResultResponse) *string {
		if v == nil {
			return nil
		}
		return v.ErrorMessage
	}).(pulumi.StringPtrOutput)
}

// Represents if this failover set is eligible for failover or not.
func (o FailoverSetEligibilityResultResponsePtrOutput) IsEligibleForFailover() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FailoverSetEligibilityResultResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsEligibleForFailover
	}).(pulumi.BoolPtrOutput)
}

// The failover set on a device.
type FailoverSetResponse struct {
	// The eligibility result of the failover set, for failover.
	EligibilityResult *FailoverSetEligibilityResultResponse `pulumi:"eligibilityResult"`
	// The list of meta data of volume containers, which are part of the failover set.
	VolumeContainers []VolumeContainerFailoverMetadataResponse `pulumi:"volumeContainers"`
}

// FailoverSetResponseInput is an input type that accepts FailoverSetResponseArgs and FailoverSetResponseOutput values.
// You can construct a concrete instance of `FailoverSetResponseInput` via:
//
//          FailoverSetResponseArgs{...}
type FailoverSetResponseInput interface {
	pulumi.Input

	ToFailoverSetResponseOutput() FailoverSetResponseOutput
	ToFailoverSetResponseOutputWithContext(context.Context) FailoverSetResponseOutput
}

// The failover set on a device.
type FailoverSetResponseArgs struct {
	// The eligibility result of the failover set, for failover.
	EligibilityResult FailoverSetEligibilityResultResponsePtrInput `pulumi:"eligibilityResult"`
	// The list of meta data of volume containers, which are part of the failover set.
	VolumeContainers VolumeContainerFailoverMetadataResponseArrayInput `pulumi:"volumeContainers"`
}

func (FailoverSetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FailoverSetResponse)(nil)).Elem()
}

func (i FailoverSetResponseArgs) ToFailoverSetResponseOutput() FailoverSetResponseOutput {
	return i.ToFailoverSetResponseOutputWithContext(context.Background())
}

func (i FailoverSetResponseArgs) ToFailoverSetResponseOutputWithContext(ctx context.Context) FailoverSetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FailoverSetResponseOutput)
}

// FailoverSetResponseArrayInput is an input type that accepts FailoverSetResponseArray and FailoverSetResponseArrayOutput values.
// You can construct a concrete instance of `FailoverSetResponseArrayInput` via:
//
//          FailoverSetResponseArray{ FailoverSetResponseArgs{...} }
type FailoverSetResponseArrayInput interface {
	pulumi.Input

	ToFailoverSetResponseArrayOutput() FailoverSetResponseArrayOutput
	ToFailoverSetResponseArrayOutputWithContext(context.Context) FailoverSetResponseArrayOutput
}

type FailoverSetResponseArray []FailoverSetResponseInput

func (FailoverSetResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FailoverSetResponse)(nil)).Elem()
}

func (i FailoverSetResponseArray) ToFailoverSetResponseArrayOutput() FailoverSetResponseArrayOutput {
	return i.ToFailoverSetResponseArrayOutputWithContext(context.Background())
}

func (i FailoverSetResponseArray) ToFailoverSetResponseArrayOutputWithContext(ctx context.Context) FailoverSetResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FailoverSetResponseArrayOutput)
}

// The failover set on a device.
type FailoverSetResponseOutput struct{ *pulumi.OutputState }

func (FailoverSetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FailoverSetResponse)(nil)).Elem()
}

func (o FailoverSetResponseOutput) ToFailoverSetResponseOutput() FailoverSetResponseOutput {
	return o
}

func (o FailoverSetResponseOutput) ToFailoverSetResponseOutputWithContext(ctx context.Context) FailoverSetResponseOutput {
	return o
}

// The eligibility result of the failover set, for failover.
func (o FailoverSetResponseOutput) EligibilityResult() FailoverSetEligibilityResultResponsePtrOutput {
	return o.ApplyT(func(v FailoverSetResponse) *FailoverSetEligibilityResultResponse { return v.EligibilityResult }).(FailoverSetEligibilityResultResponsePtrOutput)
}

// The list of meta data of volume containers, which are part of the failover set.
func (o FailoverSetResponseOutput) VolumeContainers() VolumeContainerFailoverMetadataResponseArrayOutput {
	return o.ApplyT(func(v FailoverSetResponse) []VolumeContainerFailoverMetadataResponse { return v.VolumeContainers }).(VolumeContainerFailoverMetadataResponseArrayOutput)
}

type FailoverSetResponseArrayOutput struct{ *pulumi.OutputState }

func (FailoverSetResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FailoverSetResponse)(nil)).Elem()
}

func (o FailoverSetResponseArrayOutput) ToFailoverSetResponseArrayOutput() FailoverSetResponseArrayOutput {
	return o
}

func (o FailoverSetResponseArrayOutput) ToFailoverSetResponseArrayOutputWithContext(ctx context.Context) FailoverSetResponseArrayOutput {
	return o
}

func (o FailoverSetResponseArrayOutput) Index(i pulumi.IntInput) FailoverSetResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FailoverSetResponse {
		return vs[0].([]FailoverSetResponse)[vs[1].(int)]
	}).(FailoverSetResponseOutput)
}

// Represents the eligibility of a device as a failover target device.
type FailoverTargetResponse struct {
	// The amount of free local storage available on the device in bytes.
	AvailableLocalStorageInBytes *int `pulumi:"availableLocalStorageInBytes"`
	// The amount of free tiered storage available for the device in bytes.
	AvailableTieredStorageInBytes *int `pulumi:"availableTieredStorageInBytes"`
	// The count of data containers on the device.
	DataContainersCount *int `pulumi:"dataContainersCount"`
	// The path ID of the device.
	DeviceId *string `pulumi:"deviceId"`
	// The geo location (applicable only for cloud appliances) of the device.
	DeviceLocation *string `pulumi:"deviceLocation"`
	// The software version of the device.
	DeviceSoftwareVersion *string `pulumi:"deviceSoftwareVersion"`
	// The status of the device.
	DeviceStatus *string `pulumi:"deviceStatus"`
	// The eligibility result of the device, as a failover target device.
	EligibilityResult *TargetEligibilityResultResponse `pulumi:"eligibilityResult"`
	// The friendly name for the current version of software on the device.
	FriendlyDeviceSoftwareVersion *string `pulumi:"friendlyDeviceSoftwareVersion"`
	// The model number of the device.
	ModelDescription *string `pulumi:"modelDescription"`
	// The count of volumes on the device.
	VolumesCount *int `pulumi:"volumesCount"`
}

// FailoverTargetResponseInput is an input type that accepts FailoverTargetResponseArgs and FailoverTargetResponseOutput values.
// You can construct a concrete instance of `FailoverTargetResponseInput` via:
//
//          FailoverTargetResponseArgs{...}
type FailoverTargetResponseInput interface {
	pulumi.Input

	ToFailoverTargetResponseOutput() FailoverTargetResponseOutput
	ToFailoverTargetResponseOutputWithContext(context.Context) FailoverTargetResponseOutput
}

// Represents the eligibility of a device as a failover target device.
type FailoverTargetResponseArgs struct {
	// The amount of free local storage available on the device in bytes.
	AvailableLocalStorageInBytes pulumi.IntPtrInput `pulumi:"availableLocalStorageInBytes"`
	// The amount of free tiered storage available for the device in bytes.
	AvailableTieredStorageInBytes pulumi.IntPtrInput `pulumi:"availableTieredStorageInBytes"`
	// The count of data containers on the device.
	DataContainersCount pulumi.IntPtrInput `pulumi:"dataContainersCount"`
	// The path ID of the device.
	DeviceId pulumi.StringPtrInput `pulumi:"deviceId"`
	// The geo location (applicable only for cloud appliances) of the device.
	DeviceLocation pulumi.StringPtrInput `pulumi:"deviceLocation"`
	// The software version of the device.
	DeviceSoftwareVersion pulumi.StringPtrInput `pulumi:"deviceSoftwareVersion"`
	// The status of the device.
	DeviceStatus pulumi.StringPtrInput `pulumi:"deviceStatus"`
	// The eligibility result of the device, as a failover target device.
	EligibilityResult TargetEligibilityResultResponsePtrInput `pulumi:"eligibilityResult"`
	// The friendly name for the current version of software on the device.
	FriendlyDeviceSoftwareVersion pulumi.StringPtrInput `pulumi:"friendlyDeviceSoftwareVersion"`
	// The model number of the device.
	ModelDescription pulumi.StringPtrInput `pulumi:"modelDescription"`
	// The count of volumes on the device.
	VolumesCount pulumi.IntPtrInput `pulumi:"volumesCount"`
}

func (FailoverTargetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FailoverTargetResponse)(nil)).Elem()
}

func (i FailoverTargetResponseArgs) ToFailoverTargetResponseOutput() FailoverTargetResponseOutput {
	return i.ToFailoverTargetResponseOutputWithContext(context.Background())
}

func (i FailoverTargetResponseArgs) ToFailoverTargetResponseOutputWithContext(ctx context.Context) FailoverTargetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FailoverTargetResponseOutput)
}

// FailoverTargetResponseArrayInput is an input type that accepts FailoverTargetResponseArray and FailoverTargetResponseArrayOutput values.
// You can construct a concrete instance of `FailoverTargetResponseArrayInput` via:
//
//          FailoverTargetResponseArray{ FailoverTargetResponseArgs{...} }
type FailoverTargetResponseArrayInput interface {
	pulumi.Input

	ToFailoverTargetResponseArrayOutput() FailoverTargetResponseArrayOutput
	ToFailoverTargetResponseArrayOutputWithContext(context.Context) FailoverTargetResponseArrayOutput
}

type FailoverTargetResponseArray []FailoverTargetResponseInput

func (FailoverTargetResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FailoverTargetResponse)(nil)).Elem()
}

func (i FailoverTargetResponseArray) ToFailoverTargetResponseArrayOutput() FailoverTargetResponseArrayOutput {
	return i.ToFailoverTargetResponseArrayOutputWithContext(context.Background())
}

func (i FailoverTargetResponseArray) ToFailoverTargetResponseArrayOutputWithContext(ctx context.Context) FailoverTargetResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FailoverTargetResponseArrayOutput)
}

// Represents the eligibility of a device as a failover target device.
type FailoverTargetResponseOutput struct{ *pulumi.OutputState }

func (FailoverTargetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FailoverTargetResponse)(nil)).Elem()
}

func (o FailoverTargetResponseOutput) ToFailoverTargetResponseOutput() FailoverTargetResponseOutput {
	return o
}

func (o FailoverTargetResponseOutput) ToFailoverTargetResponseOutputWithContext(ctx context.Context) FailoverTargetResponseOutput {
	return o
}

// The amount of free local storage available on the device in bytes.
func (o FailoverTargetResponseOutput) AvailableLocalStorageInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FailoverTargetResponse) *int { return v.AvailableLocalStorageInBytes }).(pulumi.IntPtrOutput)
}

// The amount of free tiered storage available for the device in bytes.
func (o FailoverTargetResponseOutput) AvailableTieredStorageInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FailoverTargetResponse) *int { return v.AvailableTieredStorageInBytes }).(pulumi.IntPtrOutput)
}

// The count of data containers on the device.
func (o FailoverTargetResponseOutput) DataContainersCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FailoverTargetResponse) *int { return v.DataContainersCount }).(pulumi.IntPtrOutput)
}

// The path ID of the device.
func (o FailoverTargetResponseOutput) DeviceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FailoverTargetResponse) *string { return v.DeviceId }).(pulumi.StringPtrOutput)
}

// The geo location (applicable only for cloud appliances) of the device.
func (o FailoverTargetResponseOutput) DeviceLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FailoverTargetResponse) *string { return v.DeviceLocation }).(pulumi.StringPtrOutput)
}

// The software version of the device.
func (o FailoverTargetResponseOutput) DeviceSoftwareVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FailoverTargetResponse) *string { return v.DeviceSoftwareVersion }).(pulumi.StringPtrOutput)
}

// The status of the device.
func (o FailoverTargetResponseOutput) DeviceStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FailoverTargetResponse) *string { return v.DeviceStatus }).(pulumi.StringPtrOutput)
}

// The eligibility result of the device, as a failover target device.
func (o FailoverTargetResponseOutput) EligibilityResult() TargetEligibilityResultResponsePtrOutput {
	return o.ApplyT(func(v FailoverTargetResponse) *TargetEligibilityResultResponse { return v.EligibilityResult }).(TargetEligibilityResultResponsePtrOutput)
}

// The friendly name for the current version of software on the device.
func (o FailoverTargetResponseOutput) FriendlyDeviceSoftwareVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FailoverTargetResponse) *string { return v.FriendlyDeviceSoftwareVersion }).(pulumi.StringPtrOutput)
}

// The model number of the device.
func (o FailoverTargetResponseOutput) ModelDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FailoverTargetResponse) *string { return v.ModelDescription }).(pulumi.StringPtrOutput)
}

// The count of volumes on the device.
func (o FailoverTargetResponseOutput) VolumesCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FailoverTargetResponse) *int { return v.VolumesCount }).(pulumi.IntPtrOutput)
}

type FailoverTargetResponseArrayOutput struct{ *pulumi.OutputState }

func (FailoverTargetResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FailoverTargetResponse)(nil)).Elem()
}

func (o FailoverTargetResponseArrayOutput) ToFailoverTargetResponseArrayOutput() FailoverTargetResponseArrayOutput {
	return o
}

func (o FailoverTargetResponseArrayOutput) ToFailoverTargetResponseArrayOutputWithContext(ctx context.Context) FailoverTargetResponseArrayOutput {
	return o
}

func (o FailoverTargetResponseArrayOutput) Index(i pulumi.IntInput) FailoverTargetResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FailoverTargetResponse {
		return vs[0].([]FailoverTargetResponse)[vs[1].(int)]
	}).(FailoverTargetResponseOutput)
}

// The properties of the manager extended info.
type ManagerExtendedInfoPropertiesResponse struct {
	// Represents the encryption algorithm used to encrypt the keys. None - if Key is saved in plain text format. Algorithm name - if key is encrypted
	Algorithm string `pulumi:"algorithm"`
	// Represents the CEK of the resource.
	EncryptionKey *string `pulumi:"encryptionKey"`
	// Represents the Cert thumbprint that was used to encrypt the CEK.
	EncryptionKeyThumbprint *string `pulumi:"encryptionKeyThumbprint"`
	// Represents the CIK of the resource.
	IntegrityKey string `pulumi:"integrityKey"`
	// Represents the portal thumbprint which can be used optionally to encrypt the entire data before storing it.
	PortalCertificateThumbprint *string `pulumi:"portalCertificateThumbprint"`
	// The version of the extended info being persisted.
	Version *string `pulumi:"version"`
}

// ManagerExtendedInfoPropertiesResponseInput is an input type that accepts ManagerExtendedInfoPropertiesResponseArgs and ManagerExtendedInfoPropertiesResponseOutput values.
// You can construct a concrete instance of `ManagerExtendedInfoPropertiesResponseInput` via:
//
//          ManagerExtendedInfoPropertiesResponseArgs{...}
type ManagerExtendedInfoPropertiesResponseInput interface {
	pulumi.Input

	ToManagerExtendedInfoPropertiesResponseOutput() ManagerExtendedInfoPropertiesResponseOutput
	ToManagerExtendedInfoPropertiesResponseOutputWithContext(context.Context) ManagerExtendedInfoPropertiesResponseOutput
}

// The properties of the manager extended info.
type ManagerExtendedInfoPropertiesResponseArgs struct {
	// Represents the encryption algorithm used to encrypt the keys. None - if Key is saved in plain text format. Algorithm name - if key is encrypted
	Algorithm pulumi.StringInput `pulumi:"algorithm"`
	// Represents the CEK of the resource.
	EncryptionKey pulumi.StringPtrInput `pulumi:"encryptionKey"`
	// Represents the Cert thumbprint that was used to encrypt the CEK.
	EncryptionKeyThumbprint pulumi.StringPtrInput `pulumi:"encryptionKeyThumbprint"`
	// Represents the CIK of the resource.
	IntegrityKey pulumi.StringInput `pulumi:"integrityKey"`
	// Represents the portal thumbprint which can be used optionally to encrypt the entire data before storing it.
	PortalCertificateThumbprint pulumi.StringPtrInput `pulumi:"portalCertificateThumbprint"`
	// The version of the extended info being persisted.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ManagerExtendedInfoPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerExtendedInfoPropertiesResponse)(nil)).Elem()
}

func (i ManagerExtendedInfoPropertiesResponseArgs) ToManagerExtendedInfoPropertiesResponseOutput() ManagerExtendedInfoPropertiesResponseOutput {
	return i.ToManagerExtendedInfoPropertiesResponseOutputWithContext(context.Background())
}

func (i ManagerExtendedInfoPropertiesResponseArgs) ToManagerExtendedInfoPropertiesResponseOutputWithContext(ctx context.Context) ManagerExtendedInfoPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerExtendedInfoPropertiesResponseOutput)
}

func (i ManagerExtendedInfoPropertiesResponseArgs) ToManagerExtendedInfoPropertiesResponsePtrOutput() ManagerExtendedInfoPropertiesResponsePtrOutput {
	return i.ToManagerExtendedInfoPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ManagerExtendedInfoPropertiesResponseArgs) ToManagerExtendedInfoPropertiesResponsePtrOutputWithContext(ctx context.Context) ManagerExtendedInfoPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerExtendedInfoPropertiesResponseOutput).ToManagerExtendedInfoPropertiesResponsePtrOutputWithContext(ctx)
}

// ManagerExtendedInfoPropertiesResponsePtrInput is an input type that accepts ManagerExtendedInfoPropertiesResponseArgs, ManagerExtendedInfoPropertiesResponsePtr and ManagerExtendedInfoPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ManagerExtendedInfoPropertiesResponsePtrInput` via:
//
//          ManagerExtendedInfoPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ManagerExtendedInfoPropertiesResponsePtrInput interface {
	pulumi.Input

	ToManagerExtendedInfoPropertiesResponsePtrOutput() ManagerExtendedInfoPropertiesResponsePtrOutput
	ToManagerExtendedInfoPropertiesResponsePtrOutputWithContext(context.Context) ManagerExtendedInfoPropertiesResponsePtrOutput
}

type managerExtendedInfoPropertiesResponsePtrType ManagerExtendedInfoPropertiesResponseArgs

func ManagerExtendedInfoPropertiesResponsePtr(v *ManagerExtendedInfoPropertiesResponseArgs) ManagerExtendedInfoPropertiesResponsePtrInput {
	return (*managerExtendedInfoPropertiesResponsePtrType)(v)
}

func (*managerExtendedInfoPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagerExtendedInfoPropertiesResponse)(nil)).Elem()
}

func (i *managerExtendedInfoPropertiesResponsePtrType) ToManagerExtendedInfoPropertiesResponsePtrOutput() ManagerExtendedInfoPropertiesResponsePtrOutput {
	return i.ToManagerExtendedInfoPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *managerExtendedInfoPropertiesResponsePtrType) ToManagerExtendedInfoPropertiesResponsePtrOutputWithContext(ctx context.Context) ManagerExtendedInfoPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerExtendedInfoPropertiesResponsePtrOutput)
}

// The properties of the manager extended info.
type ManagerExtendedInfoPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ManagerExtendedInfoPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerExtendedInfoPropertiesResponse)(nil)).Elem()
}

func (o ManagerExtendedInfoPropertiesResponseOutput) ToManagerExtendedInfoPropertiesResponseOutput() ManagerExtendedInfoPropertiesResponseOutput {
	return o
}

func (o ManagerExtendedInfoPropertiesResponseOutput) ToManagerExtendedInfoPropertiesResponseOutputWithContext(ctx context.Context) ManagerExtendedInfoPropertiesResponseOutput {
	return o
}

func (o ManagerExtendedInfoPropertiesResponseOutput) ToManagerExtendedInfoPropertiesResponsePtrOutput() ManagerExtendedInfoPropertiesResponsePtrOutput {
	return o.ToManagerExtendedInfoPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ManagerExtendedInfoPropertiesResponseOutput) ToManagerExtendedInfoPropertiesResponsePtrOutputWithContext(ctx context.Context) ManagerExtendedInfoPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ManagerExtendedInfoPropertiesResponse) *ManagerExtendedInfoPropertiesResponse {
		return &v
	}).(ManagerExtendedInfoPropertiesResponsePtrOutput)
}

// Represents the encryption algorithm used to encrypt the keys. None - if Key is saved in plain text format. Algorithm name - if key is encrypted
func (o ManagerExtendedInfoPropertiesResponseOutput) Algorithm() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerExtendedInfoPropertiesResponse) string { return v.Algorithm }).(pulumi.StringOutput)
}

// Represents the CEK of the resource.
func (o ManagerExtendedInfoPropertiesResponseOutput) EncryptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagerExtendedInfoPropertiesResponse) *string { return v.EncryptionKey }).(pulumi.StringPtrOutput)
}

// Represents the Cert thumbprint that was used to encrypt the CEK.
func (o ManagerExtendedInfoPropertiesResponseOutput) EncryptionKeyThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagerExtendedInfoPropertiesResponse) *string { return v.EncryptionKeyThumbprint }).(pulumi.StringPtrOutput)
}

// Represents the CIK of the resource.
func (o ManagerExtendedInfoPropertiesResponseOutput) IntegrityKey() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerExtendedInfoPropertiesResponse) string { return v.IntegrityKey }).(pulumi.StringOutput)
}

// Represents the portal thumbprint which can be used optionally to encrypt the entire data before storing it.
func (o ManagerExtendedInfoPropertiesResponseOutput) PortalCertificateThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagerExtendedInfoPropertiesResponse) *string { return v.PortalCertificateThumbprint }).(pulumi.StringPtrOutput)
}

// The version of the extended info being persisted.
func (o ManagerExtendedInfoPropertiesResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagerExtendedInfoPropertiesResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ManagerExtendedInfoPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagerExtendedInfoPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagerExtendedInfoPropertiesResponse)(nil)).Elem()
}

func (o ManagerExtendedInfoPropertiesResponsePtrOutput) ToManagerExtendedInfoPropertiesResponsePtrOutput() ManagerExtendedInfoPropertiesResponsePtrOutput {
	return o
}

func (o ManagerExtendedInfoPropertiesResponsePtrOutput) ToManagerExtendedInfoPropertiesResponsePtrOutputWithContext(ctx context.Context) ManagerExtendedInfoPropertiesResponsePtrOutput {
	return o
}

func (o ManagerExtendedInfoPropertiesResponsePtrOutput) Elem() ManagerExtendedInfoPropertiesResponseOutput {
	return o.ApplyT(func(v *ManagerExtendedInfoPropertiesResponse) ManagerExtendedInfoPropertiesResponse { return *v }).(ManagerExtendedInfoPropertiesResponseOutput)
}

// Represents the encryption algorithm used to encrypt the keys. None - if Key is saved in plain text format. Algorithm name - if key is encrypted
func (o ManagerExtendedInfoPropertiesResponsePtrOutput) Algorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagerExtendedInfoPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Algorithm
	}).(pulumi.StringPtrOutput)
}

// Represents the CEK of the resource.
func (o ManagerExtendedInfoPropertiesResponsePtrOutput) EncryptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagerExtendedInfoPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionKey
	}).(pulumi.StringPtrOutput)
}

// Represents the Cert thumbprint that was used to encrypt the CEK.
func (o ManagerExtendedInfoPropertiesResponsePtrOutput) EncryptionKeyThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagerExtendedInfoPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionKeyThumbprint
	}).(pulumi.StringPtrOutput)
}

// Represents the CIK of the resource.
func (o ManagerExtendedInfoPropertiesResponsePtrOutput) IntegrityKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagerExtendedInfoPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.IntegrityKey
	}).(pulumi.StringPtrOutput)
}

// Represents the portal thumbprint which can be used optionally to encrypt the entire data before storing it.
func (o ManagerExtendedInfoPropertiesResponsePtrOutput) PortalCertificateThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagerExtendedInfoPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PortalCertificateThumbprint
	}).(pulumi.StringPtrOutput)
}

// The version of the extended info being persisted.
func (o ManagerExtendedInfoPropertiesResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagerExtendedInfoPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Intrinsic settings which refers to the type of the StorSimple Manager.
type ManagerIntrinsicSettings struct {
	// The type of StorSimple Manager.
	Type string `pulumi:"type"`
}

// ManagerIntrinsicSettingsInput is an input type that accepts ManagerIntrinsicSettingsArgs and ManagerIntrinsicSettingsOutput values.
// You can construct a concrete instance of `ManagerIntrinsicSettingsInput` via:
//
//          ManagerIntrinsicSettingsArgs{...}
type ManagerIntrinsicSettingsInput interface {
	pulumi.Input

	ToManagerIntrinsicSettingsOutput() ManagerIntrinsicSettingsOutput
	ToManagerIntrinsicSettingsOutputWithContext(context.Context) ManagerIntrinsicSettingsOutput
}

// Intrinsic settings which refers to the type of the StorSimple Manager.
type ManagerIntrinsicSettingsArgs struct {
	// The type of StorSimple Manager.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ManagerIntrinsicSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerIntrinsicSettings)(nil)).Elem()
}

func (i ManagerIntrinsicSettingsArgs) ToManagerIntrinsicSettingsOutput() ManagerIntrinsicSettingsOutput {
	return i.ToManagerIntrinsicSettingsOutputWithContext(context.Background())
}

func (i ManagerIntrinsicSettingsArgs) ToManagerIntrinsicSettingsOutputWithContext(ctx context.Context) ManagerIntrinsicSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerIntrinsicSettingsOutput)
}

func (i ManagerIntrinsicSettingsArgs) ToManagerIntrinsicSettingsPtrOutput() ManagerIntrinsicSettingsPtrOutput {
	return i.ToManagerIntrinsicSettingsPtrOutputWithContext(context.Background())
}

func (i ManagerIntrinsicSettingsArgs) ToManagerIntrinsicSettingsPtrOutputWithContext(ctx context.Context) ManagerIntrinsicSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerIntrinsicSettingsOutput).ToManagerIntrinsicSettingsPtrOutputWithContext(ctx)
}

// ManagerIntrinsicSettingsPtrInput is an input type that accepts ManagerIntrinsicSettingsArgs, ManagerIntrinsicSettingsPtr and ManagerIntrinsicSettingsPtrOutput values.
// You can construct a concrete instance of `ManagerIntrinsicSettingsPtrInput` via:
//
//          ManagerIntrinsicSettingsArgs{...}
//
//  or:
//
//          nil
type ManagerIntrinsicSettingsPtrInput interface {
	pulumi.Input

	ToManagerIntrinsicSettingsPtrOutput() ManagerIntrinsicSettingsPtrOutput
	ToManagerIntrinsicSettingsPtrOutputWithContext(context.Context) ManagerIntrinsicSettingsPtrOutput
}

type managerIntrinsicSettingsPtrType ManagerIntrinsicSettingsArgs

func ManagerIntrinsicSettingsPtr(v *ManagerIntrinsicSettingsArgs) ManagerIntrinsicSettingsPtrInput {
	return (*managerIntrinsicSettingsPtrType)(v)
}

func (*managerIntrinsicSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagerIntrinsicSettings)(nil)).Elem()
}

func (i *managerIntrinsicSettingsPtrType) ToManagerIntrinsicSettingsPtrOutput() ManagerIntrinsicSettingsPtrOutput {
	return i.ToManagerIntrinsicSettingsPtrOutputWithContext(context.Background())
}

func (i *managerIntrinsicSettingsPtrType) ToManagerIntrinsicSettingsPtrOutputWithContext(ctx context.Context) ManagerIntrinsicSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerIntrinsicSettingsPtrOutput)
}

// Intrinsic settings which refers to the type of the StorSimple Manager.
type ManagerIntrinsicSettingsOutput struct{ *pulumi.OutputState }

func (ManagerIntrinsicSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerIntrinsicSettings)(nil)).Elem()
}

func (o ManagerIntrinsicSettingsOutput) ToManagerIntrinsicSettingsOutput() ManagerIntrinsicSettingsOutput {
	return o
}

func (o ManagerIntrinsicSettingsOutput) ToManagerIntrinsicSettingsOutputWithContext(ctx context.Context) ManagerIntrinsicSettingsOutput {
	return o
}

func (o ManagerIntrinsicSettingsOutput) ToManagerIntrinsicSettingsPtrOutput() ManagerIntrinsicSettingsPtrOutput {
	return o.ToManagerIntrinsicSettingsPtrOutputWithContext(context.Background())
}

func (o ManagerIntrinsicSettingsOutput) ToManagerIntrinsicSettingsPtrOutputWithContext(ctx context.Context) ManagerIntrinsicSettingsPtrOutput {
	return o.ApplyT(func(v ManagerIntrinsicSettings) *ManagerIntrinsicSettings {
		return &v
	}).(ManagerIntrinsicSettingsPtrOutput)
}

// The type of StorSimple Manager.
func (o ManagerIntrinsicSettingsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerIntrinsicSettings) string { return v.Type }).(pulumi.StringOutput)
}

type ManagerIntrinsicSettingsPtrOutput struct{ *pulumi.OutputState }

func (ManagerIntrinsicSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagerIntrinsicSettings)(nil)).Elem()
}

func (o ManagerIntrinsicSettingsPtrOutput) ToManagerIntrinsicSettingsPtrOutput() ManagerIntrinsicSettingsPtrOutput {
	return o
}

func (o ManagerIntrinsicSettingsPtrOutput) ToManagerIntrinsicSettingsPtrOutputWithContext(ctx context.Context) ManagerIntrinsicSettingsPtrOutput {
	return o
}

func (o ManagerIntrinsicSettingsPtrOutput) Elem() ManagerIntrinsicSettingsOutput {
	return o.ApplyT(func(v *ManagerIntrinsicSettings) ManagerIntrinsicSettings { return *v }).(ManagerIntrinsicSettingsOutput)
}

// The type of StorSimple Manager.
func (o ManagerIntrinsicSettingsPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagerIntrinsicSettings) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Intrinsic settings which refers to the type of the StorSimple Manager.
type ManagerIntrinsicSettingsResponse struct {
	// The type of StorSimple Manager.
	Type string `pulumi:"type"`
}

// ManagerIntrinsicSettingsResponseInput is an input type that accepts ManagerIntrinsicSettingsResponseArgs and ManagerIntrinsicSettingsResponseOutput values.
// You can construct a concrete instance of `ManagerIntrinsicSettingsResponseInput` via:
//
//          ManagerIntrinsicSettingsResponseArgs{...}
type ManagerIntrinsicSettingsResponseInput interface {
	pulumi.Input

	ToManagerIntrinsicSettingsResponseOutput() ManagerIntrinsicSettingsResponseOutput
	ToManagerIntrinsicSettingsResponseOutputWithContext(context.Context) ManagerIntrinsicSettingsResponseOutput
}

// Intrinsic settings which refers to the type of the StorSimple Manager.
type ManagerIntrinsicSettingsResponseArgs struct {
	// The type of StorSimple Manager.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ManagerIntrinsicSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerIntrinsicSettingsResponse)(nil)).Elem()
}

func (i ManagerIntrinsicSettingsResponseArgs) ToManagerIntrinsicSettingsResponseOutput() ManagerIntrinsicSettingsResponseOutput {
	return i.ToManagerIntrinsicSettingsResponseOutputWithContext(context.Background())
}

func (i ManagerIntrinsicSettingsResponseArgs) ToManagerIntrinsicSettingsResponseOutputWithContext(ctx context.Context) ManagerIntrinsicSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerIntrinsicSettingsResponseOutput)
}

func (i ManagerIntrinsicSettingsResponseArgs) ToManagerIntrinsicSettingsResponsePtrOutput() ManagerIntrinsicSettingsResponsePtrOutput {
	return i.ToManagerIntrinsicSettingsResponsePtrOutputWithContext(context.Background())
}

func (i ManagerIntrinsicSettingsResponseArgs) ToManagerIntrinsicSettingsResponsePtrOutputWithContext(ctx context.Context) ManagerIntrinsicSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerIntrinsicSettingsResponseOutput).ToManagerIntrinsicSettingsResponsePtrOutputWithContext(ctx)
}

// ManagerIntrinsicSettingsResponsePtrInput is an input type that accepts ManagerIntrinsicSettingsResponseArgs, ManagerIntrinsicSettingsResponsePtr and ManagerIntrinsicSettingsResponsePtrOutput values.
// You can construct a concrete instance of `ManagerIntrinsicSettingsResponsePtrInput` via:
//
//          ManagerIntrinsicSettingsResponseArgs{...}
//
//  or:
//
//          nil
type ManagerIntrinsicSettingsResponsePtrInput interface {
	pulumi.Input

	ToManagerIntrinsicSettingsResponsePtrOutput() ManagerIntrinsicSettingsResponsePtrOutput
	ToManagerIntrinsicSettingsResponsePtrOutputWithContext(context.Context) ManagerIntrinsicSettingsResponsePtrOutput
}

type managerIntrinsicSettingsResponsePtrType ManagerIntrinsicSettingsResponseArgs

func ManagerIntrinsicSettingsResponsePtr(v *ManagerIntrinsicSettingsResponseArgs) ManagerIntrinsicSettingsResponsePtrInput {
	return (*managerIntrinsicSettingsResponsePtrType)(v)
}

func (*managerIntrinsicSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagerIntrinsicSettingsResponse)(nil)).Elem()
}

func (i *managerIntrinsicSettingsResponsePtrType) ToManagerIntrinsicSettingsResponsePtrOutput() ManagerIntrinsicSettingsResponsePtrOutput {
	return i.ToManagerIntrinsicSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *managerIntrinsicSettingsResponsePtrType) ToManagerIntrinsicSettingsResponsePtrOutputWithContext(ctx context.Context) ManagerIntrinsicSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerIntrinsicSettingsResponsePtrOutput)
}

// Intrinsic settings which refers to the type of the StorSimple Manager.
type ManagerIntrinsicSettingsResponseOutput struct{ *pulumi.OutputState }

func (ManagerIntrinsicSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerIntrinsicSettingsResponse)(nil)).Elem()
}

func (o ManagerIntrinsicSettingsResponseOutput) ToManagerIntrinsicSettingsResponseOutput() ManagerIntrinsicSettingsResponseOutput {
	return o
}

func (o ManagerIntrinsicSettingsResponseOutput) ToManagerIntrinsicSettingsResponseOutputWithContext(ctx context.Context) ManagerIntrinsicSettingsResponseOutput {
	return o
}

func (o ManagerIntrinsicSettingsResponseOutput) ToManagerIntrinsicSettingsResponsePtrOutput() ManagerIntrinsicSettingsResponsePtrOutput {
	return o.ToManagerIntrinsicSettingsResponsePtrOutputWithContext(context.Background())
}

func (o ManagerIntrinsicSettingsResponseOutput) ToManagerIntrinsicSettingsResponsePtrOutputWithContext(ctx context.Context) ManagerIntrinsicSettingsResponsePtrOutput {
	return o.ApplyT(func(v ManagerIntrinsicSettingsResponse) *ManagerIntrinsicSettingsResponse {
		return &v
	}).(ManagerIntrinsicSettingsResponsePtrOutput)
}

// The type of StorSimple Manager.
func (o ManagerIntrinsicSettingsResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerIntrinsicSettingsResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ManagerIntrinsicSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagerIntrinsicSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagerIntrinsicSettingsResponse)(nil)).Elem()
}

func (o ManagerIntrinsicSettingsResponsePtrOutput) ToManagerIntrinsicSettingsResponsePtrOutput() ManagerIntrinsicSettingsResponsePtrOutput {
	return o
}

func (o ManagerIntrinsicSettingsResponsePtrOutput) ToManagerIntrinsicSettingsResponsePtrOutputWithContext(ctx context.Context) ManagerIntrinsicSettingsResponsePtrOutput {
	return o
}

func (o ManagerIntrinsicSettingsResponsePtrOutput) Elem() ManagerIntrinsicSettingsResponseOutput {
	return o.ApplyT(func(v *ManagerIntrinsicSettingsResponse) ManagerIntrinsicSettingsResponse { return *v }).(ManagerIntrinsicSettingsResponseOutput)
}

// The type of StorSimple Manager.
func (o ManagerIntrinsicSettingsResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagerIntrinsicSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The properties of the StorSimple Manager.
type ManagerPropertiesResponse struct {
	// Represents the type of StorSimple Manager.
	CisIntrinsicSettings *ManagerIntrinsicSettingsResponse `pulumi:"cisIntrinsicSettings"`
	// Specifies the state of the resource as it is getting provisioned. Value of "Succeeded" means the Manager was successfully created.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Specifies the Sku.
	Sku *ManagerSkuResponse `pulumi:"sku"`
}

// ManagerPropertiesResponseInput is an input type that accepts ManagerPropertiesResponseArgs and ManagerPropertiesResponseOutput values.
// You can construct a concrete instance of `ManagerPropertiesResponseInput` via:
//
//          ManagerPropertiesResponseArgs{...}
type ManagerPropertiesResponseInput interface {
	pulumi.Input

	ToManagerPropertiesResponseOutput() ManagerPropertiesResponseOutput
	ToManagerPropertiesResponseOutputWithContext(context.Context) ManagerPropertiesResponseOutput
}

// The properties of the StorSimple Manager.
type ManagerPropertiesResponseArgs struct {
	// Represents the type of StorSimple Manager.
	CisIntrinsicSettings ManagerIntrinsicSettingsResponsePtrInput `pulumi:"cisIntrinsicSettings"`
	// Specifies the state of the resource as it is getting provisioned. Value of "Succeeded" means the Manager was successfully created.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Specifies the Sku.
	Sku ManagerSkuResponsePtrInput `pulumi:"sku"`
}

func (ManagerPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerPropertiesResponse)(nil)).Elem()
}

func (i ManagerPropertiesResponseArgs) ToManagerPropertiesResponseOutput() ManagerPropertiesResponseOutput {
	return i.ToManagerPropertiesResponseOutputWithContext(context.Background())
}

func (i ManagerPropertiesResponseArgs) ToManagerPropertiesResponseOutputWithContext(ctx context.Context) ManagerPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerPropertiesResponseOutput)
}

func (i ManagerPropertiesResponseArgs) ToManagerPropertiesResponsePtrOutput() ManagerPropertiesResponsePtrOutput {
	return i.ToManagerPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ManagerPropertiesResponseArgs) ToManagerPropertiesResponsePtrOutputWithContext(ctx context.Context) ManagerPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerPropertiesResponseOutput).ToManagerPropertiesResponsePtrOutputWithContext(ctx)
}

// ManagerPropertiesResponsePtrInput is an input type that accepts ManagerPropertiesResponseArgs, ManagerPropertiesResponsePtr and ManagerPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ManagerPropertiesResponsePtrInput` via:
//
//          ManagerPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ManagerPropertiesResponsePtrInput interface {
	pulumi.Input

	ToManagerPropertiesResponsePtrOutput() ManagerPropertiesResponsePtrOutput
	ToManagerPropertiesResponsePtrOutputWithContext(context.Context) ManagerPropertiesResponsePtrOutput
}

type managerPropertiesResponsePtrType ManagerPropertiesResponseArgs

func ManagerPropertiesResponsePtr(v *ManagerPropertiesResponseArgs) ManagerPropertiesResponsePtrInput {
	return (*managerPropertiesResponsePtrType)(v)
}

func (*managerPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagerPropertiesResponse)(nil)).Elem()
}

func (i *managerPropertiesResponsePtrType) ToManagerPropertiesResponsePtrOutput() ManagerPropertiesResponsePtrOutput {
	return i.ToManagerPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *managerPropertiesResponsePtrType) ToManagerPropertiesResponsePtrOutputWithContext(ctx context.Context) ManagerPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerPropertiesResponsePtrOutput)
}

// The properties of the StorSimple Manager.
type ManagerPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ManagerPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerPropertiesResponse)(nil)).Elem()
}

func (o ManagerPropertiesResponseOutput) ToManagerPropertiesResponseOutput() ManagerPropertiesResponseOutput {
	return o
}

func (o ManagerPropertiesResponseOutput) ToManagerPropertiesResponseOutputWithContext(ctx context.Context) ManagerPropertiesResponseOutput {
	return o
}

func (o ManagerPropertiesResponseOutput) ToManagerPropertiesResponsePtrOutput() ManagerPropertiesResponsePtrOutput {
	return o.ToManagerPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ManagerPropertiesResponseOutput) ToManagerPropertiesResponsePtrOutputWithContext(ctx context.Context) ManagerPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ManagerPropertiesResponse) *ManagerPropertiesResponse {
		return &v
	}).(ManagerPropertiesResponsePtrOutput)
}

// Represents the type of StorSimple Manager.
func (o ManagerPropertiesResponseOutput) CisIntrinsicSettings() ManagerIntrinsicSettingsResponsePtrOutput {
	return o.ApplyT(func(v ManagerPropertiesResponse) *ManagerIntrinsicSettingsResponse { return v.CisIntrinsicSettings }).(ManagerIntrinsicSettingsResponsePtrOutput)
}

// Specifies the state of the resource as it is getting provisioned. Value of "Succeeded" means the Manager was successfully created.
func (o ManagerPropertiesResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagerPropertiesResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Specifies the Sku.
func (o ManagerPropertiesResponseOutput) Sku() ManagerSkuResponsePtrOutput {
	return o.ApplyT(func(v ManagerPropertiesResponse) *ManagerSkuResponse { return v.Sku }).(ManagerSkuResponsePtrOutput)
}

type ManagerPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagerPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagerPropertiesResponse)(nil)).Elem()
}

func (o ManagerPropertiesResponsePtrOutput) ToManagerPropertiesResponsePtrOutput() ManagerPropertiesResponsePtrOutput {
	return o
}

func (o ManagerPropertiesResponsePtrOutput) ToManagerPropertiesResponsePtrOutputWithContext(ctx context.Context) ManagerPropertiesResponsePtrOutput {
	return o
}

func (o ManagerPropertiesResponsePtrOutput) Elem() ManagerPropertiesResponseOutput {
	return o.ApplyT(func(v *ManagerPropertiesResponse) ManagerPropertiesResponse { return *v }).(ManagerPropertiesResponseOutput)
}

// Represents the type of StorSimple Manager.
func (o ManagerPropertiesResponsePtrOutput) CisIntrinsicSettings() ManagerIntrinsicSettingsResponsePtrOutput {
	return o.ApplyT(func(v *ManagerPropertiesResponse) *ManagerIntrinsicSettingsResponse {
		if v == nil {
			return nil
		}
		return v.CisIntrinsicSettings
	}).(ManagerIntrinsicSettingsResponsePtrOutput)
}

// Specifies the state of the resource as it is getting provisioned. Value of "Succeeded" means the Manager was successfully created.
func (o ManagerPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagerPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Specifies the Sku.
func (o ManagerPropertiesResponsePtrOutput) Sku() ManagerSkuResponsePtrOutput {
	return o.ApplyT(func(v *ManagerPropertiesResponse) *ManagerSkuResponse {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(ManagerSkuResponsePtrOutput)
}

// The Sku.
type ManagerSku struct {
	// Refers to the sku name which should be "Standard"
	Name string `pulumi:"name"`
}

// ManagerSkuInput is an input type that accepts ManagerSkuArgs and ManagerSkuOutput values.
// You can construct a concrete instance of `ManagerSkuInput` via:
//
//          ManagerSkuArgs{...}
type ManagerSkuInput interface {
	pulumi.Input

	ToManagerSkuOutput() ManagerSkuOutput
	ToManagerSkuOutputWithContext(context.Context) ManagerSkuOutput
}

// The Sku.
type ManagerSkuArgs struct {
	// Refers to the sku name which should be "Standard"
	Name pulumi.StringInput `pulumi:"name"`
}

func (ManagerSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerSku)(nil)).Elem()
}

func (i ManagerSkuArgs) ToManagerSkuOutput() ManagerSkuOutput {
	return i.ToManagerSkuOutputWithContext(context.Background())
}

func (i ManagerSkuArgs) ToManagerSkuOutputWithContext(ctx context.Context) ManagerSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerSkuOutput)
}

func (i ManagerSkuArgs) ToManagerSkuPtrOutput() ManagerSkuPtrOutput {
	return i.ToManagerSkuPtrOutputWithContext(context.Background())
}

func (i ManagerSkuArgs) ToManagerSkuPtrOutputWithContext(ctx context.Context) ManagerSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerSkuOutput).ToManagerSkuPtrOutputWithContext(ctx)
}

// ManagerSkuPtrInput is an input type that accepts ManagerSkuArgs, ManagerSkuPtr and ManagerSkuPtrOutput values.
// You can construct a concrete instance of `ManagerSkuPtrInput` via:
//
//          ManagerSkuArgs{...}
//
//  or:
//
//          nil
type ManagerSkuPtrInput interface {
	pulumi.Input

	ToManagerSkuPtrOutput() ManagerSkuPtrOutput
	ToManagerSkuPtrOutputWithContext(context.Context) ManagerSkuPtrOutput
}

type managerSkuPtrType ManagerSkuArgs

func ManagerSkuPtr(v *ManagerSkuArgs) ManagerSkuPtrInput {
	return (*managerSkuPtrType)(v)
}

func (*managerSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagerSku)(nil)).Elem()
}

func (i *managerSkuPtrType) ToManagerSkuPtrOutput() ManagerSkuPtrOutput {
	return i.ToManagerSkuPtrOutputWithContext(context.Background())
}

func (i *managerSkuPtrType) ToManagerSkuPtrOutputWithContext(ctx context.Context) ManagerSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerSkuPtrOutput)
}

// The Sku.
type ManagerSkuOutput struct{ *pulumi.OutputState }

func (ManagerSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerSku)(nil)).Elem()
}

func (o ManagerSkuOutput) ToManagerSkuOutput() ManagerSkuOutput {
	return o
}

func (o ManagerSkuOutput) ToManagerSkuOutputWithContext(ctx context.Context) ManagerSkuOutput {
	return o
}

func (o ManagerSkuOutput) ToManagerSkuPtrOutput() ManagerSkuPtrOutput {
	return o.ToManagerSkuPtrOutputWithContext(context.Background())
}

func (o ManagerSkuOutput) ToManagerSkuPtrOutputWithContext(ctx context.Context) ManagerSkuPtrOutput {
	return o.ApplyT(func(v ManagerSku) *ManagerSku {
		return &v
	}).(ManagerSkuPtrOutput)
}

// Refers to the sku name which should be "Standard"
func (o ManagerSkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerSku) string { return v.Name }).(pulumi.StringOutput)
}

type ManagerSkuPtrOutput struct{ *pulumi.OutputState }

func (ManagerSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagerSku)(nil)).Elem()
}

func (o ManagerSkuPtrOutput) ToManagerSkuPtrOutput() ManagerSkuPtrOutput {
	return o
}

func (o ManagerSkuPtrOutput) ToManagerSkuPtrOutputWithContext(ctx context.Context) ManagerSkuPtrOutput {
	return o
}

func (o ManagerSkuPtrOutput) Elem() ManagerSkuOutput {
	return o.ApplyT(func(v *ManagerSku) ManagerSku { return *v }).(ManagerSkuOutput)
}

// Refers to the sku name which should be "Standard"
func (o ManagerSkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagerSku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The Sku.
type ManagerSkuResponse struct {
	// Refers to the sku name which should be "Standard"
	Name string `pulumi:"name"`
}

// ManagerSkuResponseInput is an input type that accepts ManagerSkuResponseArgs and ManagerSkuResponseOutput values.
// You can construct a concrete instance of `ManagerSkuResponseInput` via:
//
//          ManagerSkuResponseArgs{...}
type ManagerSkuResponseInput interface {
	pulumi.Input

	ToManagerSkuResponseOutput() ManagerSkuResponseOutput
	ToManagerSkuResponseOutputWithContext(context.Context) ManagerSkuResponseOutput
}

// The Sku.
type ManagerSkuResponseArgs struct {
	// Refers to the sku name which should be "Standard"
	Name pulumi.StringInput `pulumi:"name"`
}

func (ManagerSkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerSkuResponse)(nil)).Elem()
}

func (i ManagerSkuResponseArgs) ToManagerSkuResponseOutput() ManagerSkuResponseOutput {
	return i.ToManagerSkuResponseOutputWithContext(context.Background())
}

func (i ManagerSkuResponseArgs) ToManagerSkuResponseOutputWithContext(ctx context.Context) ManagerSkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerSkuResponseOutput)
}

func (i ManagerSkuResponseArgs) ToManagerSkuResponsePtrOutput() ManagerSkuResponsePtrOutput {
	return i.ToManagerSkuResponsePtrOutputWithContext(context.Background())
}

func (i ManagerSkuResponseArgs) ToManagerSkuResponsePtrOutputWithContext(ctx context.Context) ManagerSkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerSkuResponseOutput).ToManagerSkuResponsePtrOutputWithContext(ctx)
}

// ManagerSkuResponsePtrInput is an input type that accepts ManagerSkuResponseArgs, ManagerSkuResponsePtr and ManagerSkuResponsePtrOutput values.
// You can construct a concrete instance of `ManagerSkuResponsePtrInput` via:
//
//          ManagerSkuResponseArgs{...}
//
//  or:
//
//          nil
type ManagerSkuResponsePtrInput interface {
	pulumi.Input

	ToManagerSkuResponsePtrOutput() ManagerSkuResponsePtrOutput
	ToManagerSkuResponsePtrOutputWithContext(context.Context) ManagerSkuResponsePtrOutput
}

type managerSkuResponsePtrType ManagerSkuResponseArgs

func ManagerSkuResponsePtr(v *ManagerSkuResponseArgs) ManagerSkuResponsePtrInput {
	return (*managerSkuResponsePtrType)(v)
}

func (*managerSkuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagerSkuResponse)(nil)).Elem()
}

func (i *managerSkuResponsePtrType) ToManagerSkuResponsePtrOutput() ManagerSkuResponsePtrOutput {
	return i.ToManagerSkuResponsePtrOutputWithContext(context.Background())
}

func (i *managerSkuResponsePtrType) ToManagerSkuResponsePtrOutputWithContext(ctx context.Context) ManagerSkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerSkuResponsePtrOutput)
}

// The Sku.
type ManagerSkuResponseOutput struct{ *pulumi.OutputState }

func (ManagerSkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerSkuResponse)(nil)).Elem()
}

func (o ManagerSkuResponseOutput) ToManagerSkuResponseOutput() ManagerSkuResponseOutput {
	return o
}

func (o ManagerSkuResponseOutput) ToManagerSkuResponseOutputWithContext(ctx context.Context) ManagerSkuResponseOutput {
	return o
}

func (o ManagerSkuResponseOutput) ToManagerSkuResponsePtrOutput() ManagerSkuResponsePtrOutput {
	return o.ToManagerSkuResponsePtrOutputWithContext(context.Background())
}

func (o ManagerSkuResponseOutput) ToManagerSkuResponsePtrOutputWithContext(ctx context.Context) ManagerSkuResponsePtrOutput {
	return o.ApplyT(func(v ManagerSkuResponse) *ManagerSkuResponse {
		return &v
	}).(ManagerSkuResponsePtrOutput)
}

// Refers to the sku name which should be "Standard"
func (o ManagerSkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerSkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

type ManagerSkuResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagerSkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagerSkuResponse)(nil)).Elem()
}

func (o ManagerSkuResponsePtrOutput) ToManagerSkuResponsePtrOutput() ManagerSkuResponsePtrOutput {
	return o
}

func (o ManagerSkuResponsePtrOutput) ToManagerSkuResponsePtrOutputWithContext(ctx context.Context) ManagerSkuResponsePtrOutput {
	return o
}

func (o ManagerSkuResponsePtrOutput) Elem() ManagerSkuResponseOutput {
	return o.ApplyT(func(v *ManagerSkuResponse) ManagerSkuResponse { return *v }).(ManagerSkuResponseOutput)
}

// Refers to the sku name which should be "Standard"
func (o ManagerSkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagerSkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The schedule recurrence.
type ScheduleRecurrence struct {
	// The recurrence type.
	RecurrenceType string `pulumi:"recurrenceType"`
	// The recurrence value.
	RecurrenceValue int `pulumi:"recurrenceValue"`
	// The week days list. Applicable only for schedules of recurrence type 'weekly'.
	WeeklyDaysList []string `pulumi:"weeklyDaysList"`
}

// ScheduleRecurrenceInput is an input type that accepts ScheduleRecurrenceArgs and ScheduleRecurrenceOutput values.
// You can construct a concrete instance of `ScheduleRecurrenceInput` via:
//
//          ScheduleRecurrenceArgs{...}
type ScheduleRecurrenceInput interface {
	pulumi.Input

	ToScheduleRecurrenceOutput() ScheduleRecurrenceOutput
	ToScheduleRecurrenceOutputWithContext(context.Context) ScheduleRecurrenceOutput
}

// The schedule recurrence.
type ScheduleRecurrenceArgs struct {
	// The recurrence type.
	RecurrenceType pulumi.StringInput `pulumi:"recurrenceType"`
	// The recurrence value.
	RecurrenceValue pulumi.IntInput `pulumi:"recurrenceValue"`
	// The week days list. Applicable only for schedules of recurrence type 'weekly'.
	WeeklyDaysList pulumi.StringArrayInput `pulumi:"weeklyDaysList"`
}

func (ScheduleRecurrenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleRecurrence)(nil)).Elem()
}

func (i ScheduleRecurrenceArgs) ToScheduleRecurrenceOutput() ScheduleRecurrenceOutput {
	return i.ToScheduleRecurrenceOutputWithContext(context.Background())
}

func (i ScheduleRecurrenceArgs) ToScheduleRecurrenceOutputWithContext(ctx context.Context) ScheduleRecurrenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleRecurrenceOutput)
}

func (i ScheduleRecurrenceArgs) ToScheduleRecurrencePtrOutput() ScheduleRecurrencePtrOutput {
	return i.ToScheduleRecurrencePtrOutputWithContext(context.Background())
}

func (i ScheduleRecurrenceArgs) ToScheduleRecurrencePtrOutputWithContext(ctx context.Context) ScheduleRecurrencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleRecurrenceOutput).ToScheduleRecurrencePtrOutputWithContext(ctx)
}

// ScheduleRecurrencePtrInput is an input type that accepts ScheduleRecurrenceArgs, ScheduleRecurrencePtr and ScheduleRecurrencePtrOutput values.
// You can construct a concrete instance of `ScheduleRecurrencePtrInput` via:
//
//          ScheduleRecurrenceArgs{...}
//
//  or:
//
//          nil
type ScheduleRecurrencePtrInput interface {
	pulumi.Input

	ToScheduleRecurrencePtrOutput() ScheduleRecurrencePtrOutput
	ToScheduleRecurrencePtrOutputWithContext(context.Context) ScheduleRecurrencePtrOutput
}

type scheduleRecurrencePtrType ScheduleRecurrenceArgs

func ScheduleRecurrencePtr(v *ScheduleRecurrenceArgs) ScheduleRecurrencePtrInput {
	return (*scheduleRecurrencePtrType)(v)
}

func (*scheduleRecurrencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleRecurrence)(nil)).Elem()
}

func (i *scheduleRecurrencePtrType) ToScheduleRecurrencePtrOutput() ScheduleRecurrencePtrOutput {
	return i.ToScheduleRecurrencePtrOutputWithContext(context.Background())
}

func (i *scheduleRecurrencePtrType) ToScheduleRecurrencePtrOutputWithContext(ctx context.Context) ScheduleRecurrencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleRecurrencePtrOutput)
}

// The schedule recurrence.
type ScheduleRecurrenceOutput struct{ *pulumi.OutputState }

func (ScheduleRecurrenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleRecurrence)(nil)).Elem()
}

func (o ScheduleRecurrenceOutput) ToScheduleRecurrenceOutput() ScheduleRecurrenceOutput {
	return o
}

func (o ScheduleRecurrenceOutput) ToScheduleRecurrenceOutputWithContext(ctx context.Context) ScheduleRecurrenceOutput {
	return o
}

func (o ScheduleRecurrenceOutput) ToScheduleRecurrencePtrOutput() ScheduleRecurrencePtrOutput {
	return o.ToScheduleRecurrencePtrOutputWithContext(context.Background())
}

func (o ScheduleRecurrenceOutput) ToScheduleRecurrencePtrOutputWithContext(ctx context.Context) ScheduleRecurrencePtrOutput {
	return o.ApplyT(func(v ScheduleRecurrence) *ScheduleRecurrence {
		return &v
	}).(ScheduleRecurrencePtrOutput)
}

// The recurrence type.
func (o ScheduleRecurrenceOutput) RecurrenceType() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleRecurrence) string { return v.RecurrenceType }).(pulumi.StringOutput)
}

// The recurrence value.
func (o ScheduleRecurrenceOutput) RecurrenceValue() pulumi.IntOutput {
	return o.ApplyT(func(v ScheduleRecurrence) int { return v.RecurrenceValue }).(pulumi.IntOutput)
}

// The week days list. Applicable only for schedules of recurrence type 'weekly'.
func (o ScheduleRecurrenceOutput) WeeklyDaysList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScheduleRecurrence) []string { return v.WeeklyDaysList }).(pulumi.StringArrayOutput)
}

type ScheduleRecurrencePtrOutput struct{ *pulumi.OutputState }

func (ScheduleRecurrencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleRecurrence)(nil)).Elem()
}

func (o ScheduleRecurrencePtrOutput) ToScheduleRecurrencePtrOutput() ScheduleRecurrencePtrOutput {
	return o
}

func (o ScheduleRecurrencePtrOutput) ToScheduleRecurrencePtrOutputWithContext(ctx context.Context) ScheduleRecurrencePtrOutput {
	return o
}

func (o ScheduleRecurrencePtrOutput) Elem() ScheduleRecurrenceOutput {
	return o.ApplyT(func(v *ScheduleRecurrence) ScheduleRecurrence { return *v }).(ScheduleRecurrenceOutput)
}

// The recurrence type.
func (o ScheduleRecurrencePtrOutput) RecurrenceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleRecurrence) *string {
		if v == nil {
			return nil
		}
		return &v.RecurrenceType
	}).(pulumi.StringPtrOutput)
}

// The recurrence value.
func (o ScheduleRecurrencePtrOutput) RecurrenceValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScheduleRecurrence) *int {
		if v == nil {
			return nil
		}
		return &v.RecurrenceValue
	}).(pulumi.IntPtrOutput)
}

// The week days list. Applicable only for schedules of recurrence type 'weekly'.
func (o ScheduleRecurrencePtrOutput) WeeklyDaysList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ScheduleRecurrence) []string {
		if v == nil {
			return nil
		}
		return v.WeeklyDaysList
	}).(pulumi.StringArrayOutput)
}

// The schedule recurrence.
type ScheduleRecurrenceResponse struct {
	// The recurrence type.
	RecurrenceType string `pulumi:"recurrenceType"`
	// The recurrence value.
	RecurrenceValue int `pulumi:"recurrenceValue"`
	// The week days list. Applicable only for schedules of recurrence type 'weekly'.
	WeeklyDaysList []string `pulumi:"weeklyDaysList"`
}

// ScheduleRecurrenceResponseInput is an input type that accepts ScheduleRecurrenceResponseArgs and ScheduleRecurrenceResponseOutput values.
// You can construct a concrete instance of `ScheduleRecurrenceResponseInput` via:
//
//          ScheduleRecurrenceResponseArgs{...}
type ScheduleRecurrenceResponseInput interface {
	pulumi.Input

	ToScheduleRecurrenceResponseOutput() ScheduleRecurrenceResponseOutput
	ToScheduleRecurrenceResponseOutputWithContext(context.Context) ScheduleRecurrenceResponseOutput
}

// The schedule recurrence.
type ScheduleRecurrenceResponseArgs struct {
	// The recurrence type.
	RecurrenceType pulumi.StringInput `pulumi:"recurrenceType"`
	// The recurrence value.
	RecurrenceValue pulumi.IntInput `pulumi:"recurrenceValue"`
	// The week days list. Applicable only for schedules of recurrence type 'weekly'.
	WeeklyDaysList pulumi.StringArrayInput `pulumi:"weeklyDaysList"`
}

func (ScheduleRecurrenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleRecurrenceResponse)(nil)).Elem()
}

func (i ScheduleRecurrenceResponseArgs) ToScheduleRecurrenceResponseOutput() ScheduleRecurrenceResponseOutput {
	return i.ToScheduleRecurrenceResponseOutputWithContext(context.Background())
}

func (i ScheduleRecurrenceResponseArgs) ToScheduleRecurrenceResponseOutputWithContext(ctx context.Context) ScheduleRecurrenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleRecurrenceResponseOutput)
}

func (i ScheduleRecurrenceResponseArgs) ToScheduleRecurrenceResponsePtrOutput() ScheduleRecurrenceResponsePtrOutput {
	return i.ToScheduleRecurrenceResponsePtrOutputWithContext(context.Background())
}

func (i ScheduleRecurrenceResponseArgs) ToScheduleRecurrenceResponsePtrOutputWithContext(ctx context.Context) ScheduleRecurrenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleRecurrenceResponseOutput).ToScheduleRecurrenceResponsePtrOutputWithContext(ctx)
}

// ScheduleRecurrenceResponsePtrInput is an input type that accepts ScheduleRecurrenceResponseArgs, ScheduleRecurrenceResponsePtr and ScheduleRecurrenceResponsePtrOutput values.
// You can construct a concrete instance of `ScheduleRecurrenceResponsePtrInput` via:
//
//          ScheduleRecurrenceResponseArgs{...}
//
//  or:
//
//          nil
type ScheduleRecurrenceResponsePtrInput interface {
	pulumi.Input

	ToScheduleRecurrenceResponsePtrOutput() ScheduleRecurrenceResponsePtrOutput
	ToScheduleRecurrenceResponsePtrOutputWithContext(context.Context) ScheduleRecurrenceResponsePtrOutput
}

type scheduleRecurrenceResponsePtrType ScheduleRecurrenceResponseArgs

func ScheduleRecurrenceResponsePtr(v *ScheduleRecurrenceResponseArgs) ScheduleRecurrenceResponsePtrInput {
	return (*scheduleRecurrenceResponsePtrType)(v)
}

func (*scheduleRecurrenceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleRecurrenceResponse)(nil)).Elem()
}

func (i *scheduleRecurrenceResponsePtrType) ToScheduleRecurrenceResponsePtrOutput() ScheduleRecurrenceResponsePtrOutput {
	return i.ToScheduleRecurrenceResponsePtrOutputWithContext(context.Background())
}

func (i *scheduleRecurrenceResponsePtrType) ToScheduleRecurrenceResponsePtrOutputWithContext(ctx context.Context) ScheduleRecurrenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleRecurrenceResponsePtrOutput)
}

// The schedule recurrence.
type ScheduleRecurrenceResponseOutput struct{ *pulumi.OutputState }

func (ScheduleRecurrenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleRecurrenceResponse)(nil)).Elem()
}

func (o ScheduleRecurrenceResponseOutput) ToScheduleRecurrenceResponseOutput() ScheduleRecurrenceResponseOutput {
	return o
}

func (o ScheduleRecurrenceResponseOutput) ToScheduleRecurrenceResponseOutputWithContext(ctx context.Context) ScheduleRecurrenceResponseOutput {
	return o
}

func (o ScheduleRecurrenceResponseOutput) ToScheduleRecurrenceResponsePtrOutput() ScheduleRecurrenceResponsePtrOutput {
	return o.ToScheduleRecurrenceResponsePtrOutputWithContext(context.Background())
}

func (o ScheduleRecurrenceResponseOutput) ToScheduleRecurrenceResponsePtrOutputWithContext(ctx context.Context) ScheduleRecurrenceResponsePtrOutput {
	return o.ApplyT(func(v ScheduleRecurrenceResponse) *ScheduleRecurrenceResponse {
		return &v
	}).(ScheduleRecurrenceResponsePtrOutput)
}

// The recurrence type.
func (o ScheduleRecurrenceResponseOutput) RecurrenceType() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleRecurrenceResponse) string { return v.RecurrenceType }).(pulumi.StringOutput)
}

// The recurrence value.
func (o ScheduleRecurrenceResponseOutput) RecurrenceValue() pulumi.IntOutput {
	return o.ApplyT(func(v ScheduleRecurrenceResponse) int { return v.RecurrenceValue }).(pulumi.IntOutput)
}

// The week days list. Applicable only for schedules of recurrence type 'weekly'.
func (o ScheduleRecurrenceResponseOutput) WeeklyDaysList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScheduleRecurrenceResponse) []string { return v.WeeklyDaysList }).(pulumi.StringArrayOutput)
}

type ScheduleRecurrenceResponsePtrOutput struct{ *pulumi.OutputState }

func (ScheduleRecurrenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleRecurrenceResponse)(nil)).Elem()
}

func (o ScheduleRecurrenceResponsePtrOutput) ToScheduleRecurrenceResponsePtrOutput() ScheduleRecurrenceResponsePtrOutput {
	return o
}

func (o ScheduleRecurrenceResponsePtrOutput) ToScheduleRecurrenceResponsePtrOutputWithContext(ctx context.Context) ScheduleRecurrenceResponsePtrOutput {
	return o
}

func (o ScheduleRecurrenceResponsePtrOutput) Elem() ScheduleRecurrenceResponseOutput {
	return o.ApplyT(func(v *ScheduleRecurrenceResponse) ScheduleRecurrenceResponse { return *v }).(ScheduleRecurrenceResponseOutput)
}

// The recurrence type.
func (o ScheduleRecurrenceResponsePtrOutput) RecurrenceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleRecurrenceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RecurrenceType
	}).(pulumi.StringPtrOutput)
}

// The recurrence value.
func (o ScheduleRecurrenceResponsePtrOutput) RecurrenceValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScheduleRecurrenceResponse) *int {
		if v == nil {
			return nil
		}
		return &v.RecurrenceValue
	}).(pulumi.IntPtrOutput)
}

// The week days list. Applicable only for schedules of recurrence type 'weekly'.
func (o ScheduleRecurrenceResponsePtrOutput) WeeklyDaysList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ScheduleRecurrenceResponse) []string {
		if v == nil {
			return nil
		}
		return v.WeeklyDaysList
	}).(pulumi.StringArrayOutput)
}

// The storage account credential properties.
type StorageAccountCredentialPropertiesResponse struct {
	// The details of the storage account password.
	AccessKey *AsymmetricEncryptedSecretResponse `pulumi:"accessKey"`
	// The storage endpoint
	EndPoint string `pulumi:"endPoint"`
	// Signifies whether SSL needs to be enabled or not.
	SslStatus string `pulumi:"sslStatus"`
	// The count of volumes using this storage account credential.
	VolumesCount int `pulumi:"volumesCount"`
}

// StorageAccountCredentialPropertiesResponseInput is an input type that accepts StorageAccountCredentialPropertiesResponseArgs and StorageAccountCredentialPropertiesResponseOutput values.
// You can construct a concrete instance of `StorageAccountCredentialPropertiesResponseInput` via:
//
//          StorageAccountCredentialPropertiesResponseArgs{...}
type StorageAccountCredentialPropertiesResponseInput interface {
	pulumi.Input

	ToStorageAccountCredentialPropertiesResponseOutput() StorageAccountCredentialPropertiesResponseOutput
	ToStorageAccountCredentialPropertiesResponseOutputWithContext(context.Context) StorageAccountCredentialPropertiesResponseOutput
}

// The storage account credential properties.
type StorageAccountCredentialPropertiesResponseArgs struct {
	// The details of the storage account password.
	AccessKey AsymmetricEncryptedSecretResponsePtrInput `pulumi:"accessKey"`
	// The storage endpoint
	EndPoint pulumi.StringInput `pulumi:"endPoint"`
	// Signifies whether SSL needs to be enabled or not.
	SslStatus pulumi.StringInput `pulumi:"sslStatus"`
	// The count of volumes using this storage account credential.
	VolumesCount pulumi.IntInput `pulumi:"volumesCount"`
}

func (StorageAccountCredentialPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountCredentialPropertiesResponse)(nil)).Elem()
}

func (i StorageAccountCredentialPropertiesResponseArgs) ToStorageAccountCredentialPropertiesResponseOutput() StorageAccountCredentialPropertiesResponseOutput {
	return i.ToStorageAccountCredentialPropertiesResponseOutputWithContext(context.Background())
}

func (i StorageAccountCredentialPropertiesResponseArgs) ToStorageAccountCredentialPropertiesResponseOutputWithContext(ctx context.Context) StorageAccountCredentialPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountCredentialPropertiesResponseOutput)
}

func (i StorageAccountCredentialPropertiesResponseArgs) ToStorageAccountCredentialPropertiesResponsePtrOutput() StorageAccountCredentialPropertiesResponsePtrOutput {
	return i.ToStorageAccountCredentialPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i StorageAccountCredentialPropertiesResponseArgs) ToStorageAccountCredentialPropertiesResponsePtrOutputWithContext(ctx context.Context) StorageAccountCredentialPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountCredentialPropertiesResponseOutput).ToStorageAccountCredentialPropertiesResponsePtrOutputWithContext(ctx)
}

// StorageAccountCredentialPropertiesResponsePtrInput is an input type that accepts StorageAccountCredentialPropertiesResponseArgs, StorageAccountCredentialPropertiesResponsePtr and StorageAccountCredentialPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `StorageAccountCredentialPropertiesResponsePtrInput` via:
//
//          StorageAccountCredentialPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type StorageAccountCredentialPropertiesResponsePtrInput interface {
	pulumi.Input

	ToStorageAccountCredentialPropertiesResponsePtrOutput() StorageAccountCredentialPropertiesResponsePtrOutput
	ToStorageAccountCredentialPropertiesResponsePtrOutputWithContext(context.Context) StorageAccountCredentialPropertiesResponsePtrOutput
}

type storageAccountCredentialPropertiesResponsePtrType StorageAccountCredentialPropertiesResponseArgs

func StorageAccountCredentialPropertiesResponsePtr(v *StorageAccountCredentialPropertiesResponseArgs) StorageAccountCredentialPropertiesResponsePtrInput {
	return (*storageAccountCredentialPropertiesResponsePtrType)(v)
}

func (*storageAccountCredentialPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAccountCredentialPropertiesResponse)(nil)).Elem()
}

func (i *storageAccountCredentialPropertiesResponsePtrType) ToStorageAccountCredentialPropertiesResponsePtrOutput() StorageAccountCredentialPropertiesResponsePtrOutput {
	return i.ToStorageAccountCredentialPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *storageAccountCredentialPropertiesResponsePtrType) ToStorageAccountCredentialPropertiesResponsePtrOutputWithContext(ctx context.Context) StorageAccountCredentialPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountCredentialPropertiesResponsePtrOutput)
}

// The storage account credential properties.
type StorageAccountCredentialPropertiesResponseOutput struct{ *pulumi.OutputState }

func (StorageAccountCredentialPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountCredentialPropertiesResponse)(nil)).Elem()
}

func (o StorageAccountCredentialPropertiesResponseOutput) ToStorageAccountCredentialPropertiesResponseOutput() StorageAccountCredentialPropertiesResponseOutput {
	return o
}

func (o StorageAccountCredentialPropertiesResponseOutput) ToStorageAccountCredentialPropertiesResponseOutputWithContext(ctx context.Context) StorageAccountCredentialPropertiesResponseOutput {
	return o
}

func (o StorageAccountCredentialPropertiesResponseOutput) ToStorageAccountCredentialPropertiesResponsePtrOutput() StorageAccountCredentialPropertiesResponsePtrOutput {
	return o.ToStorageAccountCredentialPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o StorageAccountCredentialPropertiesResponseOutput) ToStorageAccountCredentialPropertiesResponsePtrOutputWithContext(ctx context.Context) StorageAccountCredentialPropertiesResponsePtrOutput {
	return o.ApplyT(func(v StorageAccountCredentialPropertiesResponse) *StorageAccountCredentialPropertiesResponse {
		return &v
	}).(StorageAccountCredentialPropertiesResponsePtrOutput)
}

// The details of the storage account password.
func (o StorageAccountCredentialPropertiesResponseOutput) AccessKey() AsymmetricEncryptedSecretResponsePtrOutput {
	return o.ApplyT(func(v StorageAccountCredentialPropertiesResponse) *AsymmetricEncryptedSecretResponse {
		return v.AccessKey
	}).(AsymmetricEncryptedSecretResponsePtrOutput)
}

// The storage endpoint
func (o StorageAccountCredentialPropertiesResponseOutput) EndPoint() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountCredentialPropertiesResponse) string { return v.EndPoint }).(pulumi.StringOutput)
}

// Signifies whether SSL needs to be enabled or not.
func (o StorageAccountCredentialPropertiesResponseOutput) SslStatus() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountCredentialPropertiesResponse) string { return v.SslStatus }).(pulumi.StringOutput)
}

// The count of volumes using this storage account credential.
func (o StorageAccountCredentialPropertiesResponseOutput) VolumesCount() pulumi.IntOutput {
	return o.ApplyT(func(v StorageAccountCredentialPropertiesResponse) int { return v.VolumesCount }).(pulumi.IntOutput)
}

type StorageAccountCredentialPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (StorageAccountCredentialPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAccountCredentialPropertiesResponse)(nil)).Elem()
}

func (o StorageAccountCredentialPropertiesResponsePtrOutput) ToStorageAccountCredentialPropertiesResponsePtrOutput() StorageAccountCredentialPropertiesResponsePtrOutput {
	return o
}

func (o StorageAccountCredentialPropertiesResponsePtrOutput) ToStorageAccountCredentialPropertiesResponsePtrOutputWithContext(ctx context.Context) StorageAccountCredentialPropertiesResponsePtrOutput {
	return o
}

func (o StorageAccountCredentialPropertiesResponsePtrOutput) Elem() StorageAccountCredentialPropertiesResponseOutput {
	return o.ApplyT(func(v *StorageAccountCredentialPropertiesResponse) StorageAccountCredentialPropertiesResponse {
		return *v
	}).(StorageAccountCredentialPropertiesResponseOutput)
}

// The details of the storage account password.
func (o StorageAccountCredentialPropertiesResponsePtrOutput) AccessKey() AsymmetricEncryptedSecretResponsePtrOutput {
	return o.ApplyT(func(v *StorageAccountCredentialPropertiesResponse) *AsymmetricEncryptedSecretResponse {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(AsymmetricEncryptedSecretResponsePtrOutput)
}

// The storage endpoint
func (o StorageAccountCredentialPropertiesResponsePtrOutput) EndPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountCredentialPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.EndPoint
	}).(pulumi.StringPtrOutput)
}

// Signifies whether SSL needs to be enabled or not.
func (o StorageAccountCredentialPropertiesResponsePtrOutput) SslStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountCredentialPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SslStatus
	}).(pulumi.StringPtrOutput)
}

// The count of volumes using this storage account credential.
func (o StorageAccountCredentialPropertiesResponsePtrOutput) VolumesCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StorageAccountCredentialPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.VolumesCount
	}).(pulumi.IntPtrOutput)
}

// The error/warning message due to which the device is ineligible as a failover target device.
type TargetEligibilityErrorMessageResponse struct {
	// The localized error message stating the reason why the device is not eligible as a target device.
	Message *string `pulumi:"message"`
	// The localized resolution message for the error.
	Resolution *string `pulumi:"resolution"`
	// The result code for the error, due to which the device does not qualify as a failover target device.
	ResultCode *string `pulumi:"resultCode"`
}

// TargetEligibilityErrorMessageResponseInput is an input type that accepts TargetEligibilityErrorMessageResponseArgs and TargetEligibilityErrorMessageResponseOutput values.
// You can construct a concrete instance of `TargetEligibilityErrorMessageResponseInput` via:
//
//          TargetEligibilityErrorMessageResponseArgs{...}
type TargetEligibilityErrorMessageResponseInput interface {
	pulumi.Input

	ToTargetEligibilityErrorMessageResponseOutput() TargetEligibilityErrorMessageResponseOutput
	ToTargetEligibilityErrorMessageResponseOutputWithContext(context.Context) TargetEligibilityErrorMessageResponseOutput
}

// The error/warning message due to which the device is ineligible as a failover target device.
type TargetEligibilityErrorMessageResponseArgs struct {
	// The localized error message stating the reason why the device is not eligible as a target device.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// The localized resolution message for the error.
	Resolution pulumi.StringPtrInput `pulumi:"resolution"`
	// The result code for the error, due to which the device does not qualify as a failover target device.
	ResultCode pulumi.StringPtrInput `pulumi:"resultCode"`
}

func (TargetEligibilityErrorMessageResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetEligibilityErrorMessageResponse)(nil)).Elem()
}

func (i TargetEligibilityErrorMessageResponseArgs) ToTargetEligibilityErrorMessageResponseOutput() TargetEligibilityErrorMessageResponseOutput {
	return i.ToTargetEligibilityErrorMessageResponseOutputWithContext(context.Background())
}

func (i TargetEligibilityErrorMessageResponseArgs) ToTargetEligibilityErrorMessageResponseOutputWithContext(ctx context.Context) TargetEligibilityErrorMessageResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetEligibilityErrorMessageResponseOutput)
}

// TargetEligibilityErrorMessageResponseArrayInput is an input type that accepts TargetEligibilityErrorMessageResponseArray and TargetEligibilityErrorMessageResponseArrayOutput values.
// You can construct a concrete instance of `TargetEligibilityErrorMessageResponseArrayInput` via:
//
//          TargetEligibilityErrorMessageResponseArray{ TargetEligibilityErrorMessageResponseArgs{...} }
type TargetEligibilityErrorMessageResponseArrayInput interface {
	pulumi.Input

	ToTargetEligibilityErrorMessageResponseArrayOutput() TargetEligibilityErrorMessageResponseArrayOutput
	ToTargetEligibilityErrorMessageResponseArrayOutputWithContext(context.Context) TargetEligibilityErrorMessageResponseArrayOutput
}

type TargetEligibilityErrorMessageResponseArray []TargetEligibilityErrorMessageResponseInput

func (TargetEligibilityErrorMessageResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetEligibilityErrorMessageResponse)(nil)).Elem()
}

func (i TargetEligibilityErrorMessageResponseArray) ToTargetEligibilityErrorMessageResponseArrayOutput() TargetEligibilityErrorMessageResponseArrayOutput {
	return i.ToTargetEligibilityErrorMessageResponseArrayOutputWithContext(context.Background())
}

func (i TargetEligibilityErrorMessageResponseArray) ToTargetEligibilityErrorMessageResponseArrayOutputWithContext(ctx context.Context) TargetEligibilityErrorMessageResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetEligibilityErrorMessageResponseArrayOutput)
}

// The error/warning message due to which the device is ineligible as a failover target device.
type TargetEligibilityErrorMessageResponseOutput struct{ *pulumi.OutputState }

func (TargetEligibilityErrorMessageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetEligibilityErrorMessageResponse)(nil)).Elem()
}

func (o TargetEligibilityErrorMessageResponseOutput) ToTargetEligibilityErrorMessageResponseOutput() TargetEligibilityErrorMessageResponseOutput {
	return o
}

func (o TargetEligibilityErrorMessageResponseOutput) ToTargetEligibilityErrorMessageResponseOutputWithContext(ctx context.Context) TargetEligibilityErrorMessageResponseOutput {
	return o
}

// The localized error message stating the reason why the device is not eligible as a target device.
func (o TargetEligibilityErrorMessageResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetEligibilityErrorMessageResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The localized resolution message for the error.
func (o TargetEligibilityErrorMessageResponseOutput) Resolution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetEligibilityErrorMessageResponse) *string { return v.Resolution }).(pulumi.StringPtrOutput)
}

// The result code for the error, due to which the device does not qualify as a failover target device.
func (o TargetEligibilityErrorMessageResponseOutput) ResultCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetEligibilityErrorMessageResponse) *string { return v.ResultCode }).(pulumi.StringPtrOutput)
}

type TargetEligibilityErrorMessageResponseArrayOutput struct{ *pulumi.OutputState }

func (TargetEligibilityErrorMessageResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetEligibilityErrorMessageResponse)(nil)).Elem()
}

func (o TargetEligibilityErrorMessageResponseArrayOutput) ToTargetEligibilityErrorMessageResponseArrayOutput() TargetEligibilityErrorMessageResponseArrayOutput {
	return o
}

func (o TargetEligibilityErrorMessageResponseArrayOutput) ToTargetEligibilityErrorMessageResponseArrayOutputWithContext(ctx context.Context) TargetEligibilityErrorMessageResponseArrayOutput {
	return o
}

func (o TargetEligibilityErrorMessageResponseArrayOutput) Index(i pulumi.IntInput) TargetEligibilityErrorMessageResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetEligibilityErrorMessageResponse {
		return vs[0].([]TargetEligibilityErrorMessageResponse)[vs[1].(int)]
	}).(TargetEligibilityErrorMessageResponseOutput)
}

// The eligibility result of device, as a failover target device.
type TargetEligibilityResultResponse struct {
	// The eligibility status of device, as a failover target device.
	EligibilityStatus *string `pulumi:"eligibilityStatus"`
	// The list of error messages, if a device does not qualify as a failover target device.
	Messages []TargetEligibilityErrorMessageResponse `pulumi:"messages"`
}

// TargetEligibilityResultResponseInput is an input type that accepts TargetEligibilityResultResponseArgs and TargetEligibilityResultResponseOutput values.
// You can construct a concrete instance of `TargetEligibilityResultResponseInput` via:
//
//          TargetEligibilityResultResponseArgs{...}
type TargetEligibilityResultResponseInput interface {
	pulumi.Input

	ToTargetEligibilityResultResponseOutput() TargetEligibilityResultResponseOutput
	ToTargetEligibilityResultResponseOutputWithContext(context.Context) TargetEligibilityResultResponseOutput
}

// The eligibility result of device, as a failover target device.
type TargetEligibilityResultResponseArgs struct {
	// The eligibility status of device, as a failover target device.
	EligibilityStatus pulumi.StringPtrInput `pulumi:"eligibilityStatus"`
	// The list of error messages, if a device does not qualify as a failover target device.
	Messages TargetEligibilityErrorMessageResponseArrayInput `pulumi:"messages"`
}

func (TargetEligibilityResultResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetEligibilityResultResponse)(nil)).Elem()
}

func (i TargetEligibilityResultResponseArgs) ToTargetEligibilityResultResponseOutput() TargetEligibilityResultResponseOutput {
	return i.ToTargetEligibilityResultResponseOutputWithContext(context.Background())
}

func (i TargetEligibilityResultResponseArgs) ToTargetEligibilityResultResponseOutputWithContext(ctx context.Context) TargetEligibilityResultResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetEligibilityResultResponseOutput)
}

func (i TargetEligibilityResultResponseArgs) ToTargetEligibilityResultResponsePtrOutput() TargetEligibilityResultResponsePtrOutput {
	return i.ToTargetEligibilityResultResponsePtrOutputWithContext(context.Background())
}

func (i TargetEligibilityResultResponseArgs) ToTargetEligibilityResultResponsePtrOutputWithContext(ctx context.Context) TargetEligibilityResultResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetEligibilityResultResponseOutput).ToTargetEligibilityResultResponsePtrOutputWithContext(ctx)
}

// TargetEligibilityResultResponsePtrInput is an input type that accepts TargetEligibilityResultResponseArgs, TargetEligibilityResultResponsePtr and TargetEligibilityResultResponsePtrOutput values.
// You can construct a concrete instance of `TargetEligibilityResultResponsePtrInput` via:
//
//          TargetEligibilityResultResponseArgs{...}
//
//  or:
//
//          nil
type TargetEligibilityResultResponsePtrInput interface {
	pulumi.Input

	ToTargetEligibilityResultResponsePtrOutput() TargetEligibilityResultResponsePtrOutput
	ToTargetEligibilityResultResponsePtrOutputWithContext(context.Context) TargetEligibilityResultResponsePtrOutput
}

type targetEligibilityResultResponsePtrType TargetEligibilityResultResponseArgs

func TargetEligibilityResultResponsePtr(v *TargetEligibilityResultResponseArgs) TargetEligibilityResultResponsePtrInput {
	return (*targetEligibilityResultResponsePtrType)(v)
}

func (*targetEligibilityResultResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetEligibilityResultResponse)(nil)).Elem()
}

func (i *targetEligibilityResultResponsePtrType) ToTargetEligibilityResultResponsePtrOutput() TargetEligibilityResultResponsePtrOutput {
	return i.ToTargetEligibilityResultResponsePtrOutputWithContext(context.Background())
}

func (i *targetEligibilityResultResponsePtrType) ToTargetEligibilityResultResponsePtrOutputWithContext(ctx context.Context) TargetEligibilityResultResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetEligibilityResultResponsePtrOutput)
}

// The eligibility result of device, as a failover target device.
type TargetEligibilityResultResponseOutput struct{ *pulumi.OutputState }

func (TargetEligibilityResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetEligibilityResultResponse)(nil)).Elem()
}

func (o TargetEligibilityResultResponseOutput) ToTargetEligibilityResultResponseOutput() TargetEligibilityResultResponseOutput {
	return o
}

func (o TargetEligibilityResultResponseOutput) ToTargetEligibilityResultResponseOutputWithContext(ctx context.Context) TargetEligibilityResultResponseOutput {
	return o
}

func (o TargetEligibilityResultResponseOutput) ToTargetEligibilityResultResponsePtrOutput() TargetEligibilityResultResponsePtrOutput {
	return o.ToTargetEligibilityResultResponsePtrOutputWithContext(context.Background())
}

func (o TargetEligibilityResultResponseOutput) ToTargetEligibilityResultResponsePtrOutputWithContext(ctx context.Context) TargetEligibilityResultResponsePtrOutput {
	return o.ApplyT(func(v TargetEligibilityResultResponse) *TargetEligibilityResultResponse {
		return &v
	}).(TargetEligibilityResultResponsePtrOutput)
}

// The eligibility status of device, as a failover target device.
func (o TargetEligibilityResultResponseOutput) EligibilityStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetEligibilityResultResponse) *string { return v.EligibilityStatus }).(pulumi.StringPtrOutput)
}

// The list of error messages, if a device does not qualify as a failover target device.
func (o TargetEligibilityResultResponseOutput) Messages() TargetEligibilityErrorMessageResponseArrayOutput {
	return o.ApplyT(func(v TargetEligibilityResultResponse) []TargetEligibilityErrorMessageResponse { return v.Messages }).(TargetEligibilityErrorMessageResponseArrayOutput)
}

type TargetEligibilityResultResponsePtrOutput struct{ *pulumi.OutputState }

func (TargetEligibilityResultResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetEligibilityResultResponse)(nil)).Elem()
}

func (o TargetEligibilityResultResponsePtrOutput) ToTargetEligibilityResultResponsePtrOutput() TargetEligibilityResultResponsePtrOutput {
	return o
}

func (o TargetEligibilityResultResponsePtrOutput) ToTargetEligibilityResultResponsePtrOutputWithContext(ctx context.Context) TargetEligibilityResultResponsePtrOutput {
	return o
}

func (o TargetEligibilityResultResponsePtrOutput) Elem() TargetEligibilityResultResponseOutput {
	return o.ApplyT(func(v *TargetEligibilityResultResponse) TargetEligibilityResultResponse { return *v }).(TargetEligibilityResultResponseOutput)
}

// The eligibility status of device, as a failover target device.
func (o TargetEligibilityResultResponsePtrOutput) EligibilityStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetEligibilityResultResponse) *string {
		if v == nil {
			return nil
		}
		return v.EligibilityStatus
	}).(pulumi.StringPtrOutput)
}

// The list of error messages, if a device does not qualify as a failover target device.
func (o TargetEligibilityResultResponsePtrOutput) Messages() TargetEligibilityErrorMessageResponseArrayOutput {
	return o.ApplyT(func(v *TargetEligibilityResultResponse) []TargetEligibilityErrorMessageResponse {
		if v == nil {
			return nil
		}
		return v.Messages
	}).(TargetEligibilityErrorMessageResponseArrayOutput)
}

// The time.
type Time struct {
	// The hour.
	Hours int `pulumi:"hours"`
	// The minute.
	Minutes int `pulumi:"minutes"`
	// The second.
	Seconds int `pulumi:"seconds"`
}

// TimeInput is an input type that accepts TimeArgs and TimeOutput values.
// You can construct a concrete instance of `TimeInput` via:
//
//          TimeArgs{...}
type TimeInput interface {
	pulumi.Input

	ToTimeOutput() TimeOutput
	ToTimeOutputWithContext(context.Context) TimeOutput
}

// The time.
type TimeArgs struct {
	// The hour.
	Hours pulumi.IntInput `pulumi:"hours"`
	// The minute.
	Minutes pulumi.IntInput `pulumi:"minutes"`
	// The second.
	Seconds pulumi.IntInput `pulumi:"seconds"`
}

func (TimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Time)(nil)).Elem()
}

func (i TimeArgs) ToTimeOutput() TimeOutput {
	return i.ToTimeOutputWithContext(context.Background())
}

func (i TimeArgs) ToTimeOutputWithContext(ctx context.Context) TimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeOutput)
}

// The time.
type TimeOutput struct{ *pulumi.OutputState }

func (TimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Time)(nil)).Elem()
}

func (o TimeOutput) ToTimeOutput() TimeOutput {
	return o
}

func (o TimeOutput) ToTimeOutputWithContext(ctx context.Context) TimeOutput {
	return o
}

// The hour.
func (o TimeOutput) Hours() pulumi.IntOutput {
	return o.ApplyT(func(v Time) int { return v.Hours }).(pulumi.IntOutput)
}

// The minute.
func (o TimeOutput) Minutes() pulumi.IntOutput {
	return o.ApplyT(func(v Time) int { return v.Minutes }).(pulumi.IntOutput)
}

// The second.
func (o TimeOutput) Seconds() pulumi.IntOutput {
	return o.ApplyT(func(v Time) int { return v.Seconds }).(pulumi.IntOutput)
}

// The time.
type TimeResponse struct {
	// The hour.
	Hours int `pulumi:"hours"`
	// The minute.
	Minutes int `pulumi:"minutes"`
	// The second.
	Seconds int `pulumi:"seconds"`
}

// TimeResponseInput is an input type that accepts TimeResponseArgs and TimeResponseOutput values.
// You can construct a concrete instance of `TimeResponseInput` via:
//
//          TimeResponseArgs{...}
type TimeResponseInput interface {
	pulumi.Input

	ToTimeResponseOutput() TimeResponseOutput
	ToTimeResponseOutputWithContext(context.Context) TimeResponseOutput
}

// The time.
type TimeResponseArgs struct {
	// The hour.
	Hours pulumi.IntInput `pulumi:"hours"`
	// The minute.
	Minutes pulumi.IntInput `pulumi:"minutes"`
	// The second.
	Seconds pulumi.IntInput `pulumi:"seconds"`
}

func (TimeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeResponse)(nil)).Elem()
}

func (i TimeResponseArgs) ToTimeResponseOutput() TimeResponseOutput {
	return i.ToTimeResponseOutputWithContext(context.Background())
}

func (i TimeResponseArgs) ToTimeResponseOutputWithContext(ctx context.Context) TimeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeResponseOutput)
}

// The time.
type TimeResponseOutput struct{ *pulumi.OutputState }

func (TimeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeResponse)(nil)).Elem()
}

func (o TimeResponseOutput) ToTimeResponseOutput() TimeResponseOutput {
	return o
}

func (o TimeResponseOutput) ToTimeResponseOutputWithContext(ctx context.Context) TimeResponseOutput {
	return o
}

// The hour.
func (o TimeResponseOutput) Hours() pulumi.IntOutput {
	return o.ApplyT(func(v TimeResponse) int { return v.Hours }).(pulumi.IntOutput)
}

// The minute.
func (o TimeResponseOutput) Minutes() pulumi.IntOutput {
	return o.ApplyT(func(v TimeResponse) int { return v.Minutes }).(pulumi.IntOutput)
}

// The second.
func (o TimeResponseOutput) Seconds() pulumi.IntOutput {
	return o.ApplyT(func(v TimeResponse) int { return v.Seconds }).(pulumi.IntOutput)
}

// The metadata of the volume container, that is being considered as part of a failover set.
type VolumeContainerFailoverMetadataResponse struct {
	// The path ID of the volume container.
	VolumeContainerId *string `pulumi:"volumeContainerId"`
	// The list of metadata of volumes inside the volume container, which contains valid cloud snapshots.
	Volumes []VolumeFailoverMetadataResponse `pulumi:"volumes"`
}

// VolumeContainerFailoverMetadataResponseInput is an input type that accepts VolumeContainerFailoverMetadataResponseArgs and VolumeContainerFailoverMetadataResponseOutput values.
// You can construct a concrete instance of `VolumeContainerFailoverMetadataResponseInput` via:
//
//          VolumeContainerFailoverMetadataResponseArgs{...}
type VolumeContainerFailoverMetadataResponseInput interface {
	pulumi.Input

	ToVolumeContainerFailoverMetadataResponseOutput() VolumeContainerFailoverMetadataResponseOutput
	ToVolumeContainerFailoverMetadataResponseOutputWithContext(context.Context) VolumeContainerFailoverMetadataResponseOutput
}

// The metadata of the volume container, that is being considered as part of a failover set.
type VolumeContainerFailoverMetadataResponseArgs struct {
	// The path ID of the volume container.
	VolumeContainerId pulumi.StringPtrInput `pulumi:"volumeContainerId"`
	// The list of metadata of volumes inside the volume container, which contains valid cloud snapshots.
	Volumes VolumeFailoverMetadataResponseArrayInput `pulumi:"volumes"`
}

func (VolumeContainerFailoverMetadataResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeContainerFailoverMetadataResponse)(nil)).Elem()
}

func (i VolumeContainerFailoverMetadataResponseArgs) ToVolumeContainerFailoverMetadataResponseOutput() VolumeContainerFailoverMetadataResponseOutput {
	return i.ToVolumeContainerFailoverMetadataResponseOutputWithContext(context.Background())
}

func (i VolumeContainerFailoverMetadataResponseArgs) ToVolumeContainerFailoverMetadataResponseOutputWithContext(ctx context.Context) VolumeContainerFailoverMetadataResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeContainerFailoverMetadataResponseOutput)
}

// VolumeContainerFailoverMetadataResponseArrayInput is an input type that accepts VolumeContainerFailoverMetadataResponseArray and VolumeContainerFailoverMetadataResponseArrayOutput values.
// You can construct a concrete instance of `VolumeContainerFailoverMetadataResponseArrayInput` via:
//
//          VolumeContainerFailoverMetadataResponseArray{ VolumeContainerFailoverMetadataResponseArgs{...} }
type VolumeContainerFailoverMetadataResponseArrayInput interface {
	pulumi.Input

	ToVolumeContainerFailoverMetadataResponseArrayOutput() VolumeContainerFailoverMetadataResponseArrayOutput
	ToVolumeContainerFailoverMetadataResponseArrayOutputWithContext(context.Context) VolumeContainerFailoverMetadataResponseArrayOutput
}

type VolumeContainerFailoverMetadataResponseArray []VolumeContainerFailoverMetadataResponseInput

func (VolumeContainerFailoverMetadataResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VolumeContainerFailoverMetadataResponse)(nil)).Elem()
}

func (i VolumeContainerFailoverMetadataResponseArray) ToVolumeContainerFailoverMetadataResponseArrayOutput() VolumeContainerFailoverMetadataResponseArrayOutput {
	return i.ToVolumeContainerFailoverMetadataResponseArrayOutputWithContext(context.Background())
}

func (i VolumeContainerFailoverMetadataResponseArray) ToVolumeContainerFailoverMetadataResponseArrayOutputWithContext(ctx context.Context) VolumeContainerFailoverMetadataResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeContainerFailoverMetadataResponseArrayOutput)
}

// The metadata of the volume container, that is being considered as part of a failover set.
type VolumeContainerFailoverMetadataResponseOutput struct{ *pulumi.OutputState }

func (VolumeContainerFailoverMetadataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeContainerFailoverMetadataResponse)(nil)).Elem()
}

func (o VolumeContainerFailoverMetadataResponseOutput) ToVolumeContainerFailoverMetadataResponseOutput() VolumeContainerFailoverMetadataResponseOutput {
	return o
}

func (o VolumeContainerFailoverMetadataResponseOutput) ToVolumeContainerFailoverMetadataResponseOutputWithContext(ctx context.Context) VolumeContainerFailoverMetadataResponseOutput {
	return o
}

// The path ID of the volume container.
func (o VolumeContainerFailoverMetadataResponseOutput) VolumeContainerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeContainerFailoverMetadataResponse) *string { return v.VolumeContainerId }).(pulumi.StringPtrOutput)
}

// The list of metadata of volumes inside the volume container, which contains valid cloud snapshots.
func (o VolumeContainerFailoverMetadataResponseOutput) Volumes() VolumeFailoverMetadataResponseArrayOutput {
	return o.ApplyT(func(v VolumeContainerFailoverMetadataResponse) []VolumeFailoverMetadataResponse { return v.Volumes }).(VolumeFailoverMetadataResponseArrayOutput)
}

type VolumeContainerFailoverMetadataResponseArrayOutput struct{ *pulumi.OutputState }

func (VolumeContainerFailoverMetadataResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VolumeContainerFailoverMetadataResponse)(nil)).Elem()
}

func (o VolumeContainerFailoverMetadataResponseArrayOutput) ToVolumeContainerFailoverMetadataResponseArrayOutput() VolumeContainerFailoverMetadataResponseArrayOutput {
	return o
}

func (o VolumeContainerFailoverMetadataResponseArrayOutput) ToVolumeContainerFailoverMetadataResponseArrayOutputWithContext(ctx context.Context) VolumeContainerFailoverMetadataResponseArrayOutput {
	return o
}

func (o VolumeContainerFailoverMetadataResponseArrayOutput) Index(i pulumi.IntInput) VolumeContainerFailoverMetadataResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VolumeContainerFailoverMetadataResponse {
		return vs[0].([]VolumeContainerFailoverMetadataResponse)[vs[1].(int)]
	}).(VolumeContainerFailoverMetadataResponseOutput)
}

// The properties of volume container.
type VolumeContainerPropertiesResponse struct {
	// The bandwidth-rate set on the volume container.
	BandWidthRateInMbps *int `pulumi:"bandWidthRateInMbps"`
	// The ID of the bandwidth setting associated with the volume container.
	BandwidthSettingId *string `pulumi:"bandwidthSettingId"`
	// The key used to encrypt data in the volume container. It is required when property 'EncryptionStatus' is "Enabled".
	EncryptionKey *AsymmetricEncryptedSecretResponse `pulumi:"encryptionKey"`
	// The flag to denote whether encryption is enabled or not.
	EncryptionStatus string `pulumi:"encryptionStatus"`
	// The owner ship status of the volume container. Only when the status is "NotOwned", the delete operation on the volume container is permitted.
	OwnerShipStatus string `pulumi:"ownerShipStatus"`
	// The path ID of storage account associated with the volume container.
	StorageAccountCredentialId string `pulumi:"storageAccountCredentialId"`
	// The total cloud storage for the volume container.
	TotalCloudStorageUsageInBytes int `pulumi:"totalCloudStorageUsageInBytes"`
	// The number of volumes in the volume Container.
	VolumeCount int `pulumi:"volumeCount"`
}

// VolumeContainerPropertiesResponseInput is an input type that accepts VolumeContainerPropertiesResponseArgs and VolumeContainerPropertiesResponseOutput values.
// You can construct a concrete instance of `VolumeContainerPropertiesResponseInput` via:
//
//          VolumeContainerPropertiesResponseArgs{...}
type VolumeContainerPropertiesResponseInput interface {
	pulumi.Input

	ToVolumeContainerPropertiesResponseOutput() VolumeContainerPropertiesResponseOutput
	ToVolumeContainerPropertiesResponseOutputWithContext(context.Context) VolumeContainerPropertiesResponseOutput
}

// The properties of volume container.
type VolumeContainerPropertiesResponseArgs struct {
	// The bandwidth-rate set on the volume container.
	BandWidthRateInMbps pulumi.IntPtrInput `pulumi:"bandWidthRateInMbps"`
	// The ID of the bandwidth setting associated with the volume container.
	BandwidthSettingId pulumi.StringPtrInput `pulumi:"bandwidthSettingId"`
	// The key used to encrypt data in the volume container. It is required when property 'EncryptionStatus' is "Enabled".
	EncryptionKey AsymmetricEncryptedSecretResponsePtrInput `pulumi:"encryptionKey"`
	// The flag to denote whether encryption is enabled or not.
	EncryptionStatus pulumi.StringInput `pulumi:"encryptionStatus"`
	// The owner ship status of the volume container. Only when the status is "NotOwned", the delete operation on the volume container is permitted.
	OwnerShipStatus pulumi.StringInput `pulumi:"ownerShipStatus"`
	// The path ID of storage account associated with the volume container.
	StorageAccountCredentialId pulumi.StringInput `pulumi:"storageAccountCredentialId"`
	// The total cloud storage for the volume container.
	TotalCloudStorageUsageInBytes pulumi.IntInput `pulumi:"totalCloudStorageUsageInBytes"`
	// The number of volumes in the volume Container.
	VolumeCount pulumi.IntInput `pulumi:"volumeCount"`
}

func (VolumeContainerPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeContainerPropertiesResponse)(nil)).Elem()
}

func (i VolumeContainerPropertiesResponseArgs) ToVolumeContainerPropertiesResponseOutput() VolumeContainerPropertiesResponseOutput {
	return i.ToVolumeContainerPropertiesResponseOutputWithContext(context.Background())
}

func (i VolumeContainerPropertiesResponseArgs) ToVolumeContainerPropertiesResponseOutputWithContext(ctx context.Context) VolumeContainerPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeContainerPropertiesResponseOutput)
}

func (i VolumeContainerPropertiesResponseArgs) ToVolumeContainerPropertiesResponsePtrOutput() VolumeContainerPropertiesResponsePtrOutput {
	return i.ToVolumeContainerPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i VolumeContainerPropertiesResponseArgs) ToVolumeContainerPropertiesResponsePtrOutputWithContext(ctx context.Context) VolumeContainerPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeContainerPropertiesResponseOutput).ToVolumeContainerPropertiesResponsePtrOutputWithContext(ctx)
}

// VolumeContainerPropertiesResponsePtrInput is an input type that accepts VolumeContainerPropertiesResponseArgs, VolumeContainerPropertiesResponsePtr and VolumeContainerPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `VolumeContainerPropertiesResponsePtrInput` via:
//
//          VolumeContainerPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type VolumeContainerPropertiesResponsePtrInput interface {
	pulumi.Input

	ToVolumeContainerPropertiesResponsePtrOutput() VolumeContainerPropertiesResponsePtrOutput
	ToVolumeContainerPropertiesResponsePtrOutputWithContext(context.Context) VolumeContainerPropertiesResponsePtrOutput
}

type volumeContainerPropertiesResponsePtrType VolumeContainerPropertiesResponseArgs

func VolumeContainerPropertiesResponsePtr(v *VolumeContainerPropertiesResponseArgs) VolumeContainerPropertiesResponsePtrInput {
	return (*volumeContainerPropertiesResponsePtrType)(v)
}

func (*volumeContainerPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeContainerPropertiesResponse)(nil)).Elem()
}

func (i *volumeContainerPropertiesResponsePtrType) ToVolumeContainerPropertiesResponsePtrOutput() VolumeContainerPropertiesResponsePtrOutput {
	return i.ToVolumeContainerPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *volumeContainerPropertiesResponsePtrType) ToVolumeContainerPropertiesResponsePtrOutputWithContext(ctx context.Context) VolumeContainerPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeContainerPropertiesResponsePtrOutput)
}

// The properties of volume container.
type VolumeContainerPropertiesResponseOutput struct{ *pulumi.OutputState }

func (VolumeContainerPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeContainerPropertiesResponse)(nil)).Elem()
}

func (o VolumeContainerPropertiesResponseOutput) ToVolumeContainerPropertiesResponseOutput() VolumeContainerPropertiesResponseOutput {
	return o
}

func (o VolumeContainerPropertiesResponseOutput) ToVolumeContainerPropertiesResponseOutputWithContext(ctx context.Context) VolumeContainerPropertiesResponseOutput {
	return o
}

func (o VolumeContainerPropertiesResponseOutput) ToVolumeContainerPropertiesResponsePtrOutput() VolumeContainerPropertiesResponsePtrOutput {
	return o.ToVolumeContainerPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o VolumeContainerPropertiesResponseOutput) ToVolumeContainerPropertiesResponsePtrOutputWithContext(ctx context.Context) VolumeContainerPropertiesResponsePtrOutput {
	return o.ApplyT(func(v VolumeContainerPropertiesResponse) *VolumeContainerPropertiesResponse {
		return &v
	}).(VolumeContainerPropertiesResponsePtrOutput)
}

// The bandwidth-rate set on the volume container.
func (o VolumeContainerPropertiesResponseOutput) BandWidthRateInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VolumeContainerPropertiesResponse) *int { return v.BandWidthRateInMbps }).(pulumi.IntPtrOutput)
}

// The ID of the bandwidth setting associated with the volume container.
func (o VolumeContainerPropertiesResponseOutput) BandwidthSettingId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeContainerPropertiesResponse) *string { return v.BandwidthSettingId }).(pulumi.StringPtrOutput)
}

// The key used to encrypt data in the volume container. It is required when property 'EncryptionStatus' is "Enabled".
func (o VolumeContainerPropertiesResponseOutput) EncryptionKey() AsymmetricEncryptedSecretResponsePtrOutput {
	return o.ApplyT(func(v VolumeContainerPropertiesResponse) *AsymmetricEncryptedSecretResponse { return v.EncryptionKey }).(AsymmetricEncryptedSecretResponsePtrOutput)
}

// The flag to denote whether encryption is enabled or not.
func (o VolumeContainerPropertiesResponseOutput) EncryptionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v VolumeContainerPropertiesResponse) string { return v.EncryptionStatus }).(pulumi.StringOutput)
}

// The owner ship status of the volume container. Only when the status is "NotOwned", the delete operation on the volume container is permitted.
func (o VolumeContainerPropertiesResponseOutput) OwnerShipStatus() pulumi.StringOutput {
	return o.ApplyT(func(v VolumeContainerPropertiesResponse) string { return v.OwnerShipStatus }).(pulumi.StringOutput)
}

// The path ID of storage account associated with the volume container.
func (o VolumeContainerPropertiesResponseOutput) StorageAccountCredentialId() pulumi.StringOutput {
	return o.ApplyT(func(v VolumeContainerPropertiesResponse) string { return v.StorageAccountCredentialId }).(pulumi.StringOutput)
}

// The total cloud storage for the volume container.
func (o VolumeContainerPropertiesResponseOutput) TotalCloudStorageUsageInBytes() pulumi.IntOutput {
	return o.ApplyT(func(v VolumeContainerPropertiesResponse) int { return v.TotalCloudStorageUsageInBytes }).(pulumi.IntOutput)
}

// The number of volumes in the volume Container.
func (o VolumeContainerPropertiesResponseOutput) VolumeCount() pulumi.IntOutput {
	return o.ApplyT(func(v VolumeContainerPropertiesResponse) int { return v.VolumeCount }).(pulumi.IntOutput)
}

type VolumeContainerPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (VolumeContainerPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeContainerPropertiesResponse)(nil)).Elem()
}

func (o VolumeContainerPropertiesResponsePtrOutput) ToVolumeContainerPropertiesResponsePtrOutput() VolumeContainerPropertiesResponsePtrOutput {
	return o
}

func (o VolumeContainerPropertiesResponsePtrOutput) ToVolumeContainerPropertiesResponsePtrOutputWithContext(ctx context.Context) VolumeContainerPropertiesResponsePtrOutput {
	return o
}

func (o VolumeContainerPropertiesResponsePtrOutput) Elem() VolumeContainerPropertiesResponseOutput {
	return o.ApplyT(func(v *VolumeContainerPropertiesResponse) VolumeContainerPropertiesResponse { return *v }).(VolumeContainerPropertiesResponseOutput)
}

// The bandwidth-rate set on the volume container.
func (o VolumeContainerPropertiesResponsePtrOutput) BandWidthRateInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VolumeContainerPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.BandWidthRateInMbps
	}).(pulumi.IntPtrOutput)
}

// The ID of the bandwidth setting associated with the volume container.
func (o VolumeContainerPropertiesResponsePtrOutput) BandwidthSettingId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumeContainerPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.BandwidthSettingId
	}).(pulumi.StringPtrOutput)
}

// The key used to encrypt data in the volume container. It is required when property 'EncryptionStatus' is "Enabled".
func (o VolumeContainerPropertiesResponsePtrOutput) EncryptionKey() AsymmetricEncryptedSecretResponsePtrOutput {
	return o.ApplyT(func(v *VolumeContainerPropertiesResponse) *AsymmetricEncryptedSecretResponse {
		if v == nil {
			return nil
		}
		return v.EncryptionKey
	}).(AsymmetricEncryptedSecretResponsePtrOutput)
}

// The flag to denote whether encryption is enabled or not.
func (o VolumeContainerPropertiesResponsePtrOutput) EncryptionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumeContainerPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.EncryptionStatus
	}).(pulumi.StringPtrOutput)
}

// The owner ship status of the volume container. Only when the status is "NotOwned", the delete operation on the volume container is permitted.
func (o VolumeContainerPropertiesResponsePtrOutput) OwnerShipStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumeContainerPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.OwnerShipStatus
	}).(pulumi.StringPtrOutput)
}

// The path ID of storage account associated with the volume container.
func (o VolumeContainerPropertiesResponsePtrOutput) StorageAccountCredentialId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumeContainerPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StorageAccountCredentialId
	}).(pulumi.StringPtrOutput)
}

// The total cloud storage for the volume container.
func (o VolumeContainerPropertiesResponsePtrOutput) TotalCloudStorageUsageInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VolumeContainerPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.TotalCloudStorageUsageInBytes
	}).(pulumi.IntPtrOutput)
}

// The number of volumes in the volume Container.
func (o VolumeContainerPropertiesResponsePtrOutput) VolumeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VolumeContainerPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.VolumeCount
	}).(pulumi.IntPtrOutput)
}

// The metadata of a volume that has valid cloud snapshot.
type VolumeFailoverMetadataResponse struct {
	// The date at which the snapshot was taken.
	BackupCreatedDate *string `pulumi:"backupCreatedDate"`
	// The path ID of the backup-element for this volume, inside the backup set.
	BackupElementId *string `pulumi:"backupElementId"`
	// The path ID of the backup set.
	BackupId *string `pulumi:"backupId"`
	// The path ID of the backup policy using which the snapshot was taken.
	BackupPolicyId *string `pulumi:"backupPolicyId"`
	// The size of the volume in bytes at the time the snapshot was taken.
	SizeInBytes *int `pulumi:"sizeInBytes"`
	// The path ID of the volume.
	VolumeId *string `pulumi:"volumeId"`
	// The type of the volume.
	VolumeType *string `pulumi:"volumeType"`
}

// VolumeFailoverMetadataResponseInput is an input type that accepts VolumeFailoverMetadataResponseArgs and VolumeFailoverMetadataResponseOutput values.
// You can construct a concrete instance of `VolumeFailoverMetadataResponseInput` via:
//
//          VolumeFailoverMetadataResponseArgs{...}
type VolumeFailoverMetadataResponseInput interface {
	pulumi.Input

	ToVolumeFailoverMetadataResponseOutput() VolumeFailoverMetadataResponseOutput
	ToVolumeFailoverMetadataResponseOutputWithContext(context.Context) VolumeFailoverMetadataResponseOutput
}

// The metadata of a volume that has valid cloud snapshot.
type VolumeFailoverMetadataResponseArgs struct {
	// The date at which the snapshot was taken.
	BackupCreatedDate pulumi.StringPtrInput `pulumi:"backupCreatedDate"`
	// The path ID of the backup-element for this volume, inside the backup set.
	BackupElementId pulumi.StringPtrInput `pulumi:"backupElementId"`
	// The path ID of the backup set.
	BackupId pulumi.StringPtrInput `pulumi:"backupId"`
	// The path ID of the backup policy using which the snapshot was taken.
	BackupPolicyId pulumi.StringPtrInput `pulumi:"backupPolicyId"`
	// The size of the volume in bytes at the time the snapshot was taken.
	SizeInBytes pulumi.IntPtrInput `pulumi:"sizeInBytes"`
	// The path ID of the volume.
	VolumeId pulumi.StringPtrInput `pulumi:"volumeId"`
	// The type of the volume.
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (VolumeFailoverMetadataResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeFailoverMetadataResponse)(nil)).Elem()
}

func (i VolumeFailoverMetadataResponseArgs) ToVolumeFailoverMetadataResponseOutput() VolumeFailoverMetadataResponseOutput {
	return i.ToVolumeFailoverMetadataResponseOutputWithContext(context.Background())
}

func (i VolumeFailoverMetadataResponseArgs) ToVolumeFailoverMetadataResponseOutputWithContext(ctx context.Context) VolumeFailoverMetadataResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeFailoverMetadataResponseOutput)
}

// VolumeFailoverMetadataResponseArrayInput is an input type that accepts VolumeFailoverMetadataResponseArray and VolumeFailoverMetadataResponseArrayOutput values.
// You can construct a concrete instance of `VolumeFailoverMetadataResponseArrayInput` via:
//
//          VolumeFailoverMetadataResponseArray{ VolumeFailoverMetadataResponseArgs{...} }
type VolumeFailoverMetadataResponseArrayInput interface {
	pulumi.Input

	ToVolumeFailoverMetadataResponseArrayOutput() VolumeFailoverMetadataResponseArrayOutput
	ToVolumeFailoverMetadataResponseArrayOutputWithContext(context.Context) VolumeFailoverMetadataResponseArrayOutput
}

type VolumeFailoverMetadataResponseArray []VolumeFailoverMetadataResponseInput

func (VolumeFailoverMetadataResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VolumeFailoverMetadataResponse)(nil)).Elem()
}

func (i VolumeFailoverMetadataResponseArray) ToVolumeFailoverMetadataResponseArrayOutput() VolumeFailoverMetadataResponseArrayOutput {
	return i.ToVolumeFailoverMetadataResponseArrayOutputWithContext(context.Background())
}

func (i VolumeFailoverMetadataResponseArray) ToVolumeFailoverMetadataResponseArrayOutputWithContext(ctx context.Context) VolumeFailoverMetadataResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeFailoverMetadataResponseArrayOutput)
}

// The metadata of a volume that has valid cloud snapshot.
type VolumeFailoverMetadataResponseOutput struct{ *pulumi.OutputState }

func (VolumeFailoverMetadataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeFailoverMetadataResponse)(nil)).Elem()
}

func (o VolumeFailoverMetadataResponseOutput) ToVolumeFailoverMetadataResponseOutput() VolumeFailoverMetadataResponseOutput {
	return o
}

func (o VolumeFailoverMetadataResponseOutput) ToVolumeFailoverMetadataResponseOutputWithContext(ctx context.Context) VolumeFailoverMetadataResponseOutput {
	return o
}

// The date at which the snapshot was taken.
func (o VolumeFailoverMetadataResponseOutput) BackupCreatedDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeFailoverMetadataResponse) *string { return v.BackupCreatedDate }).(pulumi.StringPtrOutput)
}

// The path ID of the backup-element for this volume, inside the backup set.
func (o VolumeFailoverMetadataResponseOutput) BackupElementId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeFailoverMetadataResponse) *string { return v.BackupElementId }).(pulumi.StringPtrOutput)
}

// The path ID of the backup set.
func (o VolumeFailoverMetadataResponseOutput) BackupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeFailoverMetadataResponse) *string { return v.BackupId }).(pulumi.StringPtrOutput)
}

// The path ID of the backup policy using which the snapshot was taken.
func (o VolumeFailoverMetadataResponseOutput) BackupPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeFailoverMetadataResponse) *string { return v.BackupPolicyId }).(pulumi.StringPtrOutput)
}

// The size of the volume in bytes at the time the snapshot was taken.
func (o VolumeFailoverMetadataResponseOutput) SizeInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VolumeFailoverMetadataResponse) *int { return v.SizeInBytes }).(pulumi.IntPtrOutput)
}

// The path ID of the volume.
func (o VolumeFailoverMetadataResponseOutput) VolumeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeFailoverMetadataResponse) *string { return v.VolumeId }).(pulumi.StringPtrOutput)
}

// The type of the volume.
func (o VolumeFailoverMetadataResponseOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeFailoverMetadataResponse) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type VolumeFailoverMetadataResponseArrayOutput struct{ *pulumi.OutputState }

func (VolumeFailoverMetadataResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VolumeFailoverMetadataResponse)(nil)).Elem()
}

func (o VolumeFailoverMetadataResponseArrayOutput) ToVolumeFailoverMetadataResponseArrayOutput() VolumeFailoverMetadataResponseArrayOutput {
	return o
}

func (o VolumeFailoverMetadataResponseArrayOutput) ToVolumeFailoverMetadataResponseArrayOutputWithContext(ctx context.Context) VolumeFailoverMetadataResponseArrayOutput {
	return o
}

func (o VolumeFailoverMetadataResponseArrayOutput) Index(i pulumi.IntInput) VolumeFailoverMetadataResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VolumeFailoverMetadataResponse {
		return vs[0].([]VolumeFailoverMetadataResponse)[vs[1].(int)]
	}).(VolumeFailoverMetadataResponseOutput)
}

// The properties of volume.
type VolumePropertiesResponse struct {
	// The IDs of the access control records, associated with the volume.
	AccessControlRecordIds []string `pulumi:"accessControlRecordIds"`
	// The IDs of the backup policies, in which this volume is part of.
	BackupPolicyIds []string `pulumi:"backupPolicyIds"`
	// The backup status of the volume.
	BackupStatus string `pulumi:"backupStatus"`
	// The monitoring status of the volume.
	MonitoringStatus string `pulumi:"monitoringStatus"`
	// The operation status on the volume.
	OperationStatus string `pulumi:"operationStatus"`
	// The size of the volume in bytes.
	SizeInBytes int `pulumi:"sizeInBytes"`
	// The ID of the volume container, in which this volume is created.
	VolumeContainerId string `pulumi:"volumeContainerId"`
	// The volume status.
	VolumeStatus string `pulumi:"volumeStatus"`
	// The type of the volume.
	VolumeType string `pulumi:"volumeType"`
}

// VolumePropertiesResponseInput is an input type that accepts VolumePropertiesResponseArgs and VolumePropertiesResponseOutput values.
// You can construct a concrete instance of `VolumePropertiesResponseInput` via:
//
//          VolumePropertiesResponseArgs{...}
type VolumePropertiesResponseInput interface {
	pulumi.Input

	ToVolumePropertiesResponseOutput() VolumePropertiesResponseOutput
	ToVolumePropertiesResponseOutputWithContext(context.Context) VolumePropertiesResponseOutput
}

// The properties of volume.
type VolumePropertiesResponseArgs struct {
	// The IDs of the access control records, associated with the volume.
	AccessControlRecordIds pulumi.StringArrayInput `pulumi:"accessControlRecordIds"`
	// The IDs of the backup policies, in which this volume is part of.
	BackupPolicyIds pulumi.StringArrayInput `pulumi:"backupPolicyIds"`
	// The backup status of the volume.
	BackupStatus pulumi.StringInput `pulumi:"backupStatus"`
	// The monitoring status of the volume.
	MonitoringStatus pulumi.StringInput `pulumi:"monitoringStatus"`
	// The operation status on the volume.
	OperationStatus pulumi.StringInput `pulumi:"operationStatus"`
	// The size of the volume in bytes.
	SizeInBytes pulumi.IntInput `pulumi:"sizeInBytes"`
	// The ID of the volume container, in which this volume is created.
	VolumeContainerId pulumi.StringInput `pulumi:"volumeContainerId"`
	// The volume status.
	VolumeStatus pulumi.StringInput `pulumi:"volumeStatus"`
	// The type of the volume.
	VolumeType pulumi.StringInput `pulumi:"volumeType"`
}

func (VolumePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumePropertiesResponse)(nil)).Elem()
}

func (i VolumePropertiesResponseArgs) ToVolumePropertiesResponseOutput() VolumePropertiesResponseOutput {
	return i.ToVolumePropertiesResponseOutputWithContext(context.Background())
}

func (i VolumePropertiesResponseArgs) ToVolumePropertiesResponseOutputWithContext(ctx context.Context) VolumePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumePropertiesResponseOutput)
}

func (i VolumePropertiesResponseArgs) ToVolumePropertiesResponsePtrOutput() VolumePropertiesResponsePtrOutput {
	return i.ToVolumePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i VolumePropertiesResponseArgs) ToVolumePropertiesResponsePtrOutputWithContext(ctx context.Context) VolumePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumePropertiesResponseOutput).ToVolumePropertiesResponsePtrOutputWithContext(ctx)
}

// VolumePropertiesResponsePtrInput is an input type that accepts VolumePropertiesResponseArgs, VolumePropertiesResponsePtr and VolumePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `VolumePropertiesResponsePtrInput` via:
//
//          VolumePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type VolumePropertiesResponsePtrInput interface {
	pulumi.Input

	ToVolumePropertiesResponsePtrOutput() VolumePropertiesResponsePtrOutput
	ToVolumePropertiesResponsePtrOutputWithContext(context.Context) VolumePropertiesResponsePtrOutput
}

type volumePropertiesResponsePtrType VolumePropertiesResponseArgs

func VolumePropertiesResponsePtr(v *VolumePropertiesResponseArgs) VolumePropertiesResponsePtrInput {
	return (*volumePropertiesResponsePtrType)(v)
}

func (*volumePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumePropertiesResponse)(nil)).Elem()
}

func (i *volumePropertiesResponsePtrType) ToVolumePropertiesResponsePtrOutput() VolumePropertiesResponsePtrOutput {
	return i.ToVolumePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *volumePropertiesResponsePtrType) ToVolumePropertiesResponsePtrOutputWithContext(ctx context.Context) VolumePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumePropertiesResponsePtrOutput)
}

// The properties of volume.
type VolumePropertiesResponseOutput struct{ *pulumi.OutputState }

func (VolumePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumePropertiesResponse)(nil)).Elem()
}

func (o VolumePropertiesResponseOutput) ToVolumePropertiesResponseOutput() VolumePropertiesResponseOutput {
	return o
}

func (o VolumePropertiesResponseOutput) ToVolumePropertiesResponseOutputWithContext(ctx context.Context) VolumePropertiesResponseOutput {
	return o
}

func (o VolumePropertiesResponseOutput) ToVolumePropertiesResponsePtrOutput() VolumePropertiesResponsePtrOutput {
	return o.ToVolumePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o VolumePropertiesResponseOutput) ToVolumePropertiesResponsePtrOutputWithContext(ctx context.Context) VolumePropertiesResponsePtrOutput {
	return o.ApplyT(func(v VolumePropertiesResponse) *VolumePropertiesResponse {
		return &v
	}).(VolumePropertiesResponsePtrOutput)
}

// The IDs of the access control records, associated with the volume.
func (o VolumePropertiesResponseOutput) AccessControlRecordIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VolumePropertiesResponse) []string { return v.AccessControlRecordIds }).(pulumi.StringArrayOutput)
}

// The IDs of the backup policies, in which this volume is part of.
func (o VolumePropertiesResponseOutput) BackupPolicyIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VolumePropertiesResponse) []string { return v.BackupPolicyIds }).(pulumi.StringArrayOutput)
}

// The backup status of the volume.
func (o VolumePropertiesResponseOutput) BackupStatus() pulumi.StringOutput {
	return o.ApplyT(func(v VolumePropertiesResponse) string { return v.BackupStatus }).(pulumi.StringOutput)
}

// The monitoring status of the volume.
func (o VolumePropertiesResponseOutput) MonitoringStatus() pulumi.StringOutput {
	return o.ApplyT(func(v VolumePropertiesResponse) string { return v.MonitoringStatus }).(pulumi.StringOutput)
}

// The operation status on the volume.
func (o VolumePropertiesResponseOutput) OperationStatus() pulumi.StringOutput {
	return o.ApplyT(func(v VolumePropertiesResponse) string { return v.OperationStatus }).(pulumi.StringOutput)
}

// The size of the volume in bytes.
func (o VolumePropertiesResponseOutput) SizeInBytes() pulumi.IntOutput {
	return o.ApplyT(func(v VolumePropertiesResponse) int { return v.SizeInBytes }).(pulumi.IntOutput)
}

// The ID of the volume container, in which this volume is created.
func (o VolumePropertiesResponseOutput) VolumeContainerId() pulumi.StringOutput {
	return o.ApplyT(func(v VolumePropertiesResponse) string { return v.VolumeContainerId }).(pulumi.StringOutput)
}

// The volume status.
func (o VolumePropertiesResponseOutput) VolumeStatus() pulumi.StringOutput {
	return o.ApplyT(func(v VolumePropertiesResponse) string { return v.VolumeStatus }).(pulumi.StringOutput)
}

// The type of the volume.
func (o VolumePropertiesResponseOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v VolumePropertiesResponse) string { return v.VolumeType }).(pulumi.StringOutput)
}

type VolumePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (VolumePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumePropertiesResponse)(nil)).Elem()
}

func (o VolumePropertiesResponsePtrOutput) ToVolumePropertiesResponsePtrOutput() VolumePropertiesResponsePtrOutput {
	return o
}

func (o VolumePropertiesResponsePtrOutput) ToVolumePropertiesResponsePtrOutputWithContext(ctx context.Context) VolumePropertiesResponsePtrOutput {
	return o
}

func (o VolumePropertiesResponsePtrOutput) Elem() VolumePropertiesResponseOutput {
	return o.ApplyT(func(v *VolumePropertiesResponse) VolumePropertiesResponse { return *v }).(VolumePropertiesResponseOutput)
}

// The IDs of the access control records, associated with the volume.
func (o VolumePropertiesResponsePtrOutput) AccessControlRecordIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VolumePropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.AccessControlRecordIds
	}).(pulumi.StringArrayOutput)
}

// The IDs of the backup policies, in which this volume is part of.
func (o VolumePropertiesResponsePtrOutput) BackupPolicyIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VolumePropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.BackupPolicyIds
	}).(pulumi.StringArrayOutput)
}

// The backup status of the volume.
func (o VolumePropertiesResponsePtrOutput) BackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.BackupStatus
	}).(pulumi.StringPtrOutput)
}

// The monitoring status of the volume.
func (o VolumePropertiesResponsePtrOutput) MonitoringStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MonitoringStatus
	}).(pulumi.StringPtrOutput)
}

// The operation status on the volume.
func (o VolumePropertiesResponsePtrOutput) OperationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.OperationStatus
	}).(pulumi.StringPtrOutput)
}

// The size of the volume in bytes.
func (o VolumePropertiesResponsePtrOutput) SizeInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VolumePropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.SizeInBytes
	}).(pulumi.IntPtrOutput)
}

// The ID of the volume container, in which this volume is created.
func (o VolumePropertiesResponsePtrOutput) VolumeContainerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.VolumeContainerId
	}).(pulumi.StringPtrOutput)
}

// The volume status.
func (o VolumePropertiesResponsePtrOutput) VolumeStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.VolumeStatus
	}).(pulumi.StringPtrOutput)
}

// The type of the volume.
func (o VolumePropertiesResponsePtrOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.VolumeType
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AccessControlRecordPropertiesResponseOutput{})
	pulumi.RegisterOutputType(AccessControlRecordPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(AsymmetricEncryptedSecretOutput{})
	pulumi.RegisterOutputType(AsymmetricEncryptedSecretPtrOutput{})
	pulumi.RegisterOutputType(AsymmetricEncryptedSecretResponseOutput{})
	pulumi.RegisterOutputType(AsymmetricEncryptedSecretResponsePtrOutput{})
	pulumi.RegisterOutputType(BackupPolicyPropertiesResponseOutput{})
	pulumi.RegisterOutputType(BackupPolicyPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(BackupSchedulePropertiesResponseOutput{})
	pulumi.RegisterOutputType(BackupSchedulePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(BandwidthRateSettingPropertiesResponseOutput{})
	pulumi.RegisterOutputType(BandwidthRateSettingPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(BandwidthScheduleOutput{})
	pulumi.RegisterOutputType(BandwidthScheduleArrayOutput{})
	pulumi.RegisterOutputType(BandwidthScheduleResponseOutput{})
	pulumi.RegisterOutputType(BandwidthScheduleResponseArrayOutput{})
	pulumi.RegisterOutputType(FailoverSetEligibilityResultResponseOutput{})
	pulumi.RegisterOutputType(FailoverSetEligibilityResultResponsePtrOutput{})
	pulumi.RegisterOutputType(FailoverSetResponseOutput{})
	pulumi.RegisterOutputType(FailoverSetResponseArrayOutput{})
	pulumi.RegisterOutputType(FailoverTargetResponseOutput{})
	pulumi.RegisterOutputType(FailoverTargetResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagerExtendedInfoPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ManagerExtendedInfoPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagerIntrinsicSettingsOutput{})
	pulumi.RegisterOutputType(ManagerIntrinsicSettingsPtrOutput{})
	pulumi.RegisterOutputType(ManagerIntrinsicSettingsResponseOutput{})
	pulumi.RegisterOutputType(ManagerIntrinsicSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagerPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ManagerPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagerSkuOutput{})
	pulumi.RegisterOutputType(ManagerSkuPtrOutput{})
	pulumi.RegisterOutputType(ManagerSkuResponseOutput{})
	pulumi.RegisterOutputType(ManagerSkuResponsePtrOutput{})
	pulumi.RegisterOutputType(ScheduleRecurrenceOutput{})
	pulumi.RegisterOutputType(ScheduleRecurrencePtrOutput{})
	pulumi.RegisterOutputType(ScheduleRecurrenceResponseOutput{})
	pulumi.RegisterOutputType(ScheduleRecurrenceResponsePtrOutput{})
	pulumi.RegisterOutputType(StorageAccountCredentialPropertiesResponseOutput{})
	pulumi.RegisterOutputType(StorageAccountCredentialPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(TargetEligibilityErrorMessageResponseOutput{})
	pulumi.RegisterOutputType(TargetEligibilityErrorMessageResponseArrayOutput{})
	pulumi.RegisterOutputType(TargetEligibilityResultResponseOutput{})
	pulumi.RegisterOutputType(TargetEligibilityResultResponsePtrOutput{})
	pulumi.RegisterOutputType(TimeOutput{})
	pulumi.RegisterOutputType(TimeResponseOutput{})
	pulumi.RegisterOutputType(VolumeContainerFailoverMetadataResponseOutput{})
	pulumi.RegisterOutputType(VolumeContainerFailoverMetadataResponseArrayOutput{})
	pulumi.RegisterOutputType(VolumeContainerPropertiesResponseOutput{})
	pulumi.RegisterOutputType(VolumeContainerPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(VolumeFailoverMetadataResponseOutput{})
	pulumi.RegisterOutputType(VolumeFailoverMetadataResponseArrayOutput{})
	pulumi.RegisterOutputType(VolumePropertiesResponseOutput{})
	pulumi.RegisterOutputType(VolumePropertiesResponsePtrOutput{})
}
