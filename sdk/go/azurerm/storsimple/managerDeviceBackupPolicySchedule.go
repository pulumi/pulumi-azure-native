// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package storsimple

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The backup schedule.
type ManagerDeviceBackupPolicySchedule struct {
	pulumi.CustomResourceState

	// The Kind of the object. Currently only Series8000 is supported
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// The name of the object.
	Name pulumi.StringOutput `pulumi:"name"`
	// The properties of the backup schedule.
	Properties BackupSchedulePropertiesResponseOutput `pulumi:"properties"`
	// The hierarchical type of the object.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewManagerDeviceBackupPolicySchedule registers a new resource with the given unique name, arguments, and options.
func NewManagerDeviceBackupPolicySchedule(ctx *pulumi.Context,
	name string, args *ManagerDeviceBackupPolicyScheduleArgs, opts ...pulumi.ResourceOption) (*ManagerDeviceBackupPolicySchedule, error) {
	if args == nil || args.BackupPolicyName == nil {
		return nil, errors.New("missing required argument 'BackupPolicyName'")
	}
	if args == nil || args.DeviceName == nil {
		return nil, errors.New("missing required argument 'DeviceName'")
	}
	if args == nil || args.ManagerName == nil {
		return nil, errors.New("missing required argument 'ManagerName'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.Properties == nil {
		return nil, errors.New("missing required argument 'Properties'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &ManagerDeviceBackupPolicyScheduleArgs{}
	}
	var resource ManagerDeviceBackupPolicySchedule
	err := ctx.RegisterResource("azurerm:storsimple:ManagerDeviceBackupPolicySchedule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetManagerDeviceBackupPolicySchedule gets an existing ManagerDeviceBackupPolicySchedule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetManagerDeviceBackupPolicySchedule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ManagerDeviceBackupPolicyScheduleState, opts ...pulumi.ResourceOption) (*ManagerDeviceBackupPolicySchedule, error) {
	var resource ManagerDeviceBackupPolicySchedule
	err := ctx.ReadResource("azurerm:storsimple:ManagerDeviceBackupPolicySchedule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ManagerDeviceBackupPolicySchedule resources.
type managerDeviceBackupPolicyScheduleState struct {
	// The Kind of the object. Currently only Series8000 is supported
	Kind *string `pulumi:"kind"`
	// The name of the object.
	Name *string `pulumi:"name"`
	// The properties of the backup schedule.
	Properties *BackupSchedulePropertiesResponse `pulumi:"properties"`
	// The hierarchical type of the object.
	Type *string `pulumi:"type"`
}

type ManagerDeviceBackupPolicyScheduleState struct {
	// The Kind of the object. Currently only Series8000 is supported
	Kind pulumi.StringPtrInput
	// The name of the object.
	Name pulumi.StringPtrInput
	// The properties of the backup schedule.
	Properties BackupSchedulePropertiesResponsePtrInput
	// The hierarchical type of the object.
	Type pulumi.StringPtrInput
}

func (ManagerDeviceBackupPolicyScheduleState) ElementType() reflect.Type {
	return reflect.TypeOf((*managerDeviceBackupPolicyScheduleState)(nil)).Elem()
}

type managerDeviceBackupPolicyScheduleArgs struct {
	// The backup policy name.
	BackupPolicyName string `pulumi:"backupPolicyName"`
	// The device name
	DeviceName string `pulumi:"deviceName"`
	// The Kind of the object. Currently only Series8000 is supported
	Kind *string `pulumi:"kind"`
	// The manager name
	ManagerName string `pulumi:"managerName"`
	// The backup schedule name.
	Name string `pulumi:"name"`
	// The properties of the backup schedule.
	Properties BackupScheduleProperties `pulumi:"properties"`
	// The resource group name
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a ManagerDeviceBackupPolicySchedule resource.
type ManagerDeviceBackupPolicyScheduleArgs struct {
	// The backup policy name.
	BackupPolicyName pulumi.StringInput
	// The device name
	DeviceName pulumi.StringInput
	// The Kind of the object. Currently only Series8000 is supported
	Kind pulumi.StringPtrInput
	// The manager name
	ManagerName pulumi.StringInput
	// The backup schedule name.
	Name pulumi.StringInput
	// The properties of the backup schedule.
	Properties BackupSchedulePropertiesInput
	// The resource group name
	ResourceGroupName pulumi.StringInput
}

func (ManagerDeviceBackupPolicyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*managerDeviceBackupPolicyScheduleArgs)(nil)).Elem()
}
