// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package storsimple

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The properties of access control record.
type AccessControlRecordProperties struct {
	// The iSCSI initiator name (IQN).
	InitiatorName string `pulumi:"initiatorName"`
}

// AccessControlRecordPropertiesInput is an input type that accepts AccessControlRecordPropertiesArgs and AccessControlRecordPropertiesOutput values.
// You can construct a concrete instance of `AccessControlRecordPropertiesInput` via:
//
//          AccessControlRecordPropertiesArgs{...}
type AccessControlRecordPropertiesInput interface {
	pulumi.Input

	ToAccessControlRecordPropertiesOutput() AccessControlRecordPropertiesOutput
	ToAccessControlRecordPropertiesOutputWithContext(context.Context) AccessControlRecordPropertiesOutput
}

// The properties of access control record.
type AccessControlRecordPropertiesArgs struct {
	// The iSCSI initiator name (IQN).
	InitiatorName pulumi.StringInput `pulumi:"initiatorName"`
}

func (AccessControlRecordPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessControlRecordProperties)(nil)).Elem()
}

func (i AccessControlRecordPropertiesArgs) ToAccessControlRecordPropertiesOutput() AccessControlRecordPropertiesOutput {
	return i.ToAccessControlRecordPropertiesOutputWithContext(context.Background())
}

func (i AccessControlRecordPropertiesArgs) ToAccessControlRecordPropertiesOutputWithContext(ctx context.Context) AccessControlRecordPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessControlRecordPropertiesOutput)
}

func (i AccessControlRecordPropertiesArgs) ToAccessControlRecordPropertiesPtrOutput() AccessControlRecordPropertiesPtrOutput {
	return i.ToAccessControlRecordPropertiesPtrOutputWithContext(context.Background())
}

func (i AccessControlRecordPropertiesArgs) ToAccessControlRecordPropertiesPtrOutputWithContext(ctx context.Context) AccessControlRecordPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessControlRecordPropertiesOutput).ToAccessControlRecordPropertiesPtrOutputWithContext(ctx)
}

// AccessControlRecordPropertiesPtrInput is an input type that accepts AccessControlRecordPropertiesArgs, AccessControlRecordPropertiesPtr and AccessControlRecordPropertiesPtrOutput values.
// You can construct a concrete instance of `AccessControlRecordPropertiesPtrInput` via:
//
//          AccessControlRecordPropertiesArgs{...}
//
//  or:
//
//          nil
type AccessControlRecordPropertiesPtrInput interface {
	pulumi.Input

	ToAccessControlRecordPropertiesPtrOutput() AccessControlRecordPropertiesPtrOutput
	ToAccessControlRecordPropertiesPtrOutputWithContext(context.Context) AccessControlRecordPropertiesPtrOutput
}

type accessControlRecordPropertiesPtrType AccessControlRecordPropertiesArgs

func AccessControlRecordPropertiesPtr(v *AccessControlRecordPropertiesArgs) AccessControlRecordPropertiesPtrInput {
	return (*accessControlRecordPropertiesPtrType)(v)
}

func (*accessControlRecordPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessControlRecordProperties)(nil)).Elem()
}

func (i *accessControlRecordPropertiesPtrType) ToAccessControlRecordPropertiesPtrOutput() AccessControlRecordPropertiesPtrOutput {
	return i.ToAccessControlRecordPropertiesPtrOutputWithContext(context.Background())
}

func (i *accessControlRecordPropertiesPtrType) ToAccessControlRecordPropertiesPtrOutputWithContext(ctx context.Context) AccessControlRecordPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessControlRecordPropertiesPtrOutput)
}

// The properties of access control record.
type AccessControlRecordPropertiesOutput struct{ *pulumi.OutputState }

func (AccessControlRecordPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessControlRecordProperties)(nil)).Elem()
}

func (o AccessControlRecordPropertiesOutput) ToAccessControlRecordPropertiesOutput() AccessControlRecordPropertiesOutput {
	return o
}

func (o AccessControlRecordPropertiesOutput) ToAccessControlRecordPropertiesOutputWithContext(ctx context.Context) AccessControlRecordPropertiesOutput {
	return o
}

func (o AccessControlRecordPropertiesOutput) ToAccessControlRecordPropertiesPtrOutput() AccessControlRecordPropertiesPtrOutput {
	return o.ToAccessControlRecordPropertiesPtrOutputWithContext(context.Background())
}

func (o AccessControlRecordPropertiesOutput) ToAccessControlRecordPropertiesPtrOutputWithContext(ctx context.Context) AccessControlRecordPropertiesPtrOutput {
	return o.ApplyT(func(v AccessControlRecordProperties) *AccessControlRecordProperties {
		return &v
	}).(AccessControlRecordPropertiesPtrOutput)
}

// The iSCSI initiator name (IQN).
func (o AccessControlRecordPropertiesOutput) InitiatorName() pulumi.StringOutput {
	return o.ApplyT(func(v AccessControlRecordProperties) string { return v.InitiatorName }).(pulumi.StringOutput)
}

type AccessControlRecordPropertiesPtrOutput struct{ *pulumi.OutputState }

func (AccessControlRecordPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessControlRecordProperties)(nil)).Elem()
}

func (o AccessControlRecordPropertiesPtrOutput) ToAccessControlRecordPropertiesPtrOutput() AccessControlRecordPropertiesPtrOutput {
	return o
}

func (o AccessControlRecordPropertiesPtrOutput) ToAccessControlRecordPropertiesPtrOutputWithContext(ctx context.Context) AccessControlRecordPropertiesPtrOutput {
	return o
}

func (o AccessControlRecordPropertiesPtrOutput) Elem() AccessControlRecordPropertiesOutput {
	return o.ApplyT(func(v *AccessControlRecordProperties) AccessControlRecordProperties { return *v }).(AccessControlRecordPropertiesOutput)
}

// The iSCSI initiator name (IQN).
func (o AccessControlRecordPropertiesPtrOutput) InitiatorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessControlRecordProperties) *string {
		if v == nil {
			return nil
		}
		return &v.InitiatorName
	}).(pulumi.StringPtrOutput)
}

// The properties of access control record.
type AccessControlRecordPropertiesResponse struct {
	// The iSCSI initiator name (IQN).
	InitiatorName string `pulumi:"initiatorName"`
	// The number of volumes using the access control record.
	VolumeCount int `pulumi:"volumeCount"`
}

// AccessControlRecordPropertiesResponseInput is an input type that accepts AccessControlRecordPropertiesResponseArgs and AccessControlRecordPropertiesResponseOutput values.
// You can construct a concrete instance of `AccessControlRecordPropertiesResponseInput` via:
//
//          AccessControlRecordPropertiesResponseArgs{...}
type AccessControlRecordPropertiesResponseInput interface {
	pulumi.Input

	ToAccessControlRecordPropertiesResponseOutput() AccessControlRecordPropertiesResponseOutput
	ToAccessControlRecordPropertiesResponseOutputWithContext(context.Context) AccessControlRecordPropertiesResponseOutput
}

// The properties of access control record.
type AccessControlRecordPropertiesResponseArgs struct {
	// The iSCSI initiator name (IQN).
	InitiatorName pulumi.StringInput `pulumi:"initiatorName"`
	// The number of volumes using the access control record.
	VolumeCount pulumi.IntInput `pulumi:"volumeCount"`
}

func (AccessControlRecordPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessControlRecordPropertiesResponse)(nil)).Elem()
}

func (i AccessControlRecordPropertiesResponseArgs) ToAccessControlRecordPropertiesResponseOutput() AccessControlRecordPropertiesResponseOutput {
	return i.ToAccessControlRecordPropertiesResponseOutputWithContext(context.Background())
}

func (i AccessControlRecordPropertiesResponseArgs) ToAccessControlRecordPropertiesResponseOutputWithContext(ctx context.Context) AccessControlRecordPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessControlRecordPropertiesResponseOutput)
}

func (i AccessControlRecordPropertiesResponseArgs) ToAccessControlRecordPropertiesResponsePtrOutput() AccessControlRecordPropertiesResponsePtrOutput {
	return i.ToAccessControlRecordPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i AccessControlRecordPropertiesResponseArgs) ToAccessControlRecordPropertiesResponsePtrOutputWithContext(ctx context.Context) AccessControlRecordPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessControlRecordPropertiesResponseOutput).ToAccessControlRecordPropertiesResponsePtrOutputWithContext(ctx)
}

// AccessControlRecordPropertiesResponsePtrInput is an input type that accepts AccessControlRecordPropertiesResponseArgs, AccessControlRecordPropertiesResponsePtr and AccessControlRecordPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `AccessControlRecordPropertiesResponsePtrInput` via:
//
//          AccessControlRecordPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type AccessControlRecordPropertiesResponsePtrInput interface {
	pulumi.Input

	ToAccessControlRecordPropertiesResponsePtrOutput() AccessControlRecordPropertiesResponsePtrOutput
	ToAccessControlRecordPropertiesResponsePtrOutputWithContext(context.Context) AccessControlRecordPropertiesResponsePtrOutput
}

type accessControlRecordPropertiesResponsePtrType AccessControlRecordPropertiesResponseArgs

func AccessControlRecordPropertiesResponsePtr(v *AccessControlRecordPropertiesResponseArgs) AccessControlRecordPropertiesResponsePtrInput {
	return (*accessControlRecordPropertiesResponsePtrType)(v)
}

func (*accessControlRecordPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessControlRecordPropertiesResponse)(nil)).Elem()
}

func (i *accessControlRecordPropertiesResponsePtrType) ToAccessControlRecordPropertiesResponsePtrOutput() AccessControlRecordPropertiesResponsePtrOutput {
	return i.ToAccessControlRecordPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *accessControlRecordPropertiesResponsePtrType) ToAccessControlRecordPropertiesResponsePtrOutputWithContext(ctx context.Context) AccessControlRecordPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessControlRecordPropertiesResponsePtrOutput)
}

// The properties of access control record.
type AccessControlRecordPropertiesResponseOutput struct{ *pulumi.OutputState }

func (AccessControlRecordPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessControlRecordPropertiesResponse)(nil)).Elem()
}

func (o AccessControlRecordPropertiesResponseOutput) ToAccessControlRecordPropertiesResponseOutput() AccessControlRecordPropertiesResponseOutput {
	return o
}

func (o AccessControlRecordPropertiesResponseOutput) ToAccessControlRecordPropertiesResponseOutputWithContext(ctx context.Context) AccessControlRecordPropertiesResponseOutput {
	return o
}

func (o AccessControlRecordPropertiesResponseOutput) ToAccessControlRecordPropertiesResponsePtrOutput() AccessControlRecordPropertiesResponsePtrOutput {
	return o.ToAccessControlRecordPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o AccessControlRecordPropertiesResponseOutput) ToAccessControlRecordPropertiesResponsePtrOutputWithContext(ctx context.Context) AccessControlRecordPropertiesResponsePtrOutput {
	return o.ApplyT(func(v AccessControlRecordPropertiesResponse) *AccessControlRecordPropertiesResponse {
		return &v
	}).(AccessControlRecordPropertiesResponsePtrOutput)
}

// The iSCSI initiator name (IQN).
func (o AccessControlRecordPropertiesResponseOutput) InitiatorName() pulumi.StringOutput {
	return o.ApplyT(func(v AccessControlRecordPropertiesResponse) string { return v.InitiatorName }).(pulumi.StringOutput)
}

// The number of volumes using the access control record.
func (o AccessControlRecordPropertiesResponseOutput) VolumeCount() pulumi.IntOutput {
	return o.ApplyT(func(v AccessControlRecordPropertiesResponse) int { return v.VolumeCount }).(pulumi.IntOutput)
}

type AccessControlRecordPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (AccessControlRecordPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessControlRecordPropertiesResponse)(nil)).Elem()
}

func (o AccessControlRecordPropertiesResponsePtrOutput) ToAccessControlRecordPropertiesResponsePtrOutput() AccessControlRecordPropertiesResponsePtrOutput {
	return o
}

func (o AccessControlRecordPropertiesResponsePtrOutput) ToAccessControlRecordPropertiesResponsePtrOutputWithContext(ctx context.Context) AccessControlRecordPropertiesResponsePtrOutput {
	return o
}

func (o AccessControlRecordPropertiesResponsePtrOutput) Elem() AccessControlRecordPropertiesResponseOutput {
	return o.ApplyT(func(v *AccessControlRecordPropertiesResponse) AccessControlRecordPropertiesResponse { return *v }).(AccessControlRecordPropertiesResponseOutput)
}

// The iSCSI initiator name (IQN).
func (o AccessControlRecordPropertiesResponsePtrOutput) InitiatorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessControlRecordPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InitiatorName
	}).(pulumi.StringPtrOutput)
}

// The number of volumes using the access control record.
func (o AccessControlRecordPropertiesResponsePtrOutput) VolumeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AccessControlRecordPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.VolumeCount
	}).(pulumi.IntPtrOutput)
}

// Represent the secrets intended for encryption with asymmetric key pair.
type AsymmetricEncryptedSecret struct {
	// The algorithm used to encrypt "Value".
	EncryptionAlgorithm string `pulumi:"encryptionAlgorithm"`
	// Thumbprint certificate that was used to encrypt "Value". If the value in unencrypted, it will be null.
	EncryptionCertThumbprint *string `pulumi:"encryptionCertThumbprint"`
	// The value of the secret.
	Value string `pulumi:"value"`
}

// AsymmetricEncryptedSecretInput is an input type that accepts AsymmetricEncryptedSecretArgs and AsymmetricEncryptedSecretOutput values.
// You can construct a concrete instance of `AsymmetricEncryptedSecretInput` via:
//
//          AsymmetricEncryptedSecretArgs{...}
type AsymmetricEncryptedSecretInput interface {
	pulumi.Input

	ToAsymmetricEncryptedSecretOutput() AsymmetricEncryptedSecretOutput
	ToAsymmetricEncryptedSecretOutputWithContext(context.Context) AsymmetricEncryptedSecretOutput
}

// Represent the secrets intended for encryption with asymmetric key pair.
type AsymmetricEncryptedSecretArgs struct {
	// The algorithm used to encrypt "Value".
	EncryptionAlgorithm pulumi.StringInput `pulumi:"encryptionAlgorithm"`
	// Thumbprint certificate that was used to encrypt "Value". If the value in unencrypted, it will be null.
	EncryptionCertThumbprint pulumi.StringPtrInput `pulumi:"encryptionCertThumbprint"`
	// The value of the secret.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AsymmetricEncryptedSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AsymmetricEncryptedSecret)(nil)).Elem()
}

func (i AsymmetricEncryptedSecretArgs) ToAsymmetricEncryptedSecretOutput() AsymmetricEncryptedSecretOutput {
	return i.ToAsymmetricEncryptedSecretOutputWithContext(context.Background())
}

func (i AsymmetricEncryptedSecretArgs) ToAsymmetricEncryptedSecretOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsymmetricEncryptedSecretOutput)
}

func (i AsymmetricEncryptedSecretArgs) ToAsymmetricEncryptedSecretPtrOutput() AsymmetricEncryptedSecretPtrOutput {
	return i.ToAsymmetricEncryptedSecretPtrOutputWithContext(context.Background())
}

func (i AsymmetricEncryptedSecretArgs) ToAsymmetricEncryptedSecretPtrOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsymmetricEncryptedSecretOutput).ToAsymmetricEncryptedSecretPtrOutputWithContext(ctx)
}

// AsymmetricEncryptedSecretPtrInput is an input type that accepts AsymmetricEncryptedSecretArgs, AsymmetricEncryptedSecretPtr and AsymmetricEncryptedSecretPtrOutput values.
// You can construct a concrete instance of `AsymmetricEncryptedSecretPtrInput` via:
//
//          AsymmetricEncryptedSecretArgs{...}
//
//  or:
//
//          nil
type AsymmetricEncryptedSecretPtrInput interface {
	pulumi.Input

	ToAsymmetricEncryptedSecretPtrOutput() AsymmetricEncryptedSecretPtrOutput
	ToAsymmetricEncryptedSecretPtrOutputWithContext(context.Context) AsymmetricEncryptedSecretPtrOutput
}

type asymmetricEncryptedSecretPtrType AsymmetricEncryptedSecretArgs

func AsymmetricEncryptedSecretPtr(v *AsymmetricEncryptedSecretArgs) AsymmetricEncryptedSecretPtrInput {
	return (*asymmetricEncryptedSecretPtrType)(v)
}

func (*asymmetricEncryptedSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AsymmetricEncryptedSecret)(nil)).Elem()
}

func (i *asymmetricEncryptedSecretPtrType) ToAsymmetricEncryptedSecretPtrOutput() AsymmetricEncryptedSecretPtrOutput {
	return i.ToAsymmetricEncryptedSecretPtrOutputWithContext(context.Background())
}

func (i *asymmetricEncryptedSecretPtrType) ToAsymmetricEncryptedSecretPtrOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsymmetricEncryptedSecretPtrOutput)
}

// Represent the secrets intended for encryption with asymmetric key pair.
type AsymmetricEncryptedSecretOutput struct{ *pulumi.OutputState }

func (AsymmetricEncryptedSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AsymmetricEncryptedSecret)(nil)).Elem()
}

func (o AsymmetricEncryptedSecretOutput) ToAsymmetricEncryptedSecretOutput() AsymmetricEncryptedSecretOutput {
	return o
}

func (o AsymmetricEncryptedSecretOutput) ToAsymmetricEncryptedSecretOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretOutput {
	return o
}

func (o AsymmetricEncryptedSecretOutput) ToAsymmetricEncryptedSecretPtrOutput() AsymmetricEncryptedSecretPtrOutput {
	return o.ToAsymmetricEncryptedSecretPtrOutputWithContext(context.Background())
}

func (o AsymmetricEncryptedSecretOutput) ToAsymmetricEncryptedSecretPtrOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretPtrOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecret) *AsymmetricEncryptedSecret {
		return &v
	}).(AsymmetricEncryptedSecretPtrOutput)
}

// The algorithm used to encrypt "Value".
func (o AsymmetricEncryptedSecretOutput) EncryptionAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecret) string { return v.EncryptionAlgorithm }).(pulumi.StringOutput)
}

// Thumbprint certificate that was used to encrypt "Value". If the value in unencrypted, it will be null.
func (o AsymmetricEncryptedSecretOutput) EncryptionCertThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecret) *string { return v.EncryptionCertThumbprint }).(pulumi.StringPtrOutput)
}

// The value of the secret.
func (o AsymmetricEncryptedSecretOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecret) string { return v.Value }).(pulumi.StringOutput)
}

type AsymmetricEncryptedSecretPtrOutput struct{ *pulumi.OutputState }

func (AsymmetricEncryptedSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AsymmetricEncryptedSecret)(nil)).Elem()
}

func (o AsymmetricEncryptedSecretPtrOutput) ToAsymmetricEncryptedSecretPtrOutput() AsymmetricEncryptedSecretPtrOutput {
	return o
}

func (o AsymmetricEncryptedSecretPtrOutput) ToAsymmetricEncryptedSecretPtrOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretPtrOutput {
	return o
}

func (o AsymmetricEncryptedSecretPtrOutput) Elem() AsymmetricEncryptedSecretOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecret) AsymmetricEncryptedSecret { return *v }).(AsymmetricEncryptedSecretOutput)
}

// The algorithm used to encrypt "Value".
func (o AsymmetricEncryptedSecretPtrOutput) EncryptionAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecret) *string {
		if v == nil {
			return nil
		}
		return &v.EncryptionAlgorithm
	}).(pulumi.StringPtrOutput)
}

// Thumbprint certificate that was used to encrypt "Value". If the value in unencrypted, it will be null.
func (o AsymmetricEncryptedSecretPtrOutput) EncryptionCertThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecret) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionCertThumbprint
	}).(pulumi.StringPtrOutput)
}

// The value of the secret.
func (o AsymmetricEncryptedSecretPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecret) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

// Represent the secrets intended for encryption with asymmetric key pair.
type AsymmetricEncryptedSecretResponse struct {
	// The algorithm used to encrypt "Value".
	EncryptionAlgorithm string `pulumi:"encryptionAlgorithm"`
	// Thumbprint certificate that was used to encrypt "Value". If the value in unencrypted, it will be null.
	EncryptionCertThumbprint *string `pulumi:"encryptionCertThumbprint"`
	// The value of the secret.
	Value string `pulumi:"value"`
}

// AsymmetricEncryptedSecretResponseInput is an input type that accepts AsymmetricEncryptedSecretResponseArgs and AsymmetricEncryptedSecretResponseOutput values.
// You can construct a concrete instance of `AsymmetricEncryptedSecretResponseInput` via:
//
//          AsymmetricEncryptedSecretResponseArgs{...}
type AsymmetricEncryptedSecretResponseInput interface {
	pulumi.Input

	ToAsymmetricEncryptedSecretResponseOutput() AsymmetricEncryptedSecretResponseOutput
	ToAsymmetricEncryptedSecretResponseOutputWithContext(context.Context) AsymmetricEncryptedSecretResponseOutput
}

// Represent the secrets intended for encryption with asymmetric key pair.
type AsymmetricEncryptedSecretResponseArgs struct {
	// The algorithm used to encrypt "Value".
	EncryptionAlgorithm pulumi.StringInput `pulumi:"encryptionAlgorithm"`
	// Thumbprint certificate that was used to encrypt "Value". If the value in unencrypted, it will be null.
	EncryptionCertThumbprint pulumi.StringPtrInput `pulumi:"encryptionCertThumbprint"`
	// The value of the secret.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AsymmetricEncryptedSecretResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AsymmetricEncryptedSecretResponse)(nil)).Elem()
}

func (i AsymmetricEncryptedSecretResponseArgs) ToAsymmetricEncryptedSecretResponseOutput() AsymmetricEncryptedSecretResponseOutput {
	return i.ToAsymmetricEncryptedSecretResponseOutputWithContext(context.Background())
}

func (i AsymmetricEncryptedSecretResponseArgs) ToAsymmetricEncryptedSecretResponseOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsymmetricEncryptedSecretResponseOutput)
}

func (i AsymmetricEncryptedSecretResponseArgs) ToAsymmetricEncryptedSecretResponsePtrOutput() AsymmetricEncryptedSecretResponsePtrOutput {
	return i.ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(context.Background())
}

func (i AsymmetricEncryptedSecretResponseArgs) ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsymmetricEncryptedSecretResponseOutput).ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(ctx)
}

// AsymmetricEncryptedSecretResponsePtrInput is an input type that accepts AsymmetricEncryptedSecretResponseArgs, AsymmetricEncryptedSecretResponsePtr and AsymmetricEncryptedSecretResponsePtrOutput values.
// You can construct a concrete instance of `AsymmetricEncryptedSecretResponsePtrInput` via:
//
//          AsymmetricEncryptedSecretResponseArgs{...}
//
//  or:
//
//          nil
type AsymmetricEncryptedSecretResponsePtrInput interface {
	pulumi.Input

	ToAsymmetricEncryptedSecretResponsePtrOutput() AsymmetricEncryptedSecretResponsePtrOutput
	ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(context.Context) AsymmetricEncryptedSecretResponsePtrOutput
}

type asymmetricEncryptedSecretResponsePtrType AsymmetricEncryptedSecretResponseArgs

func AsymmetricEncryptedSecretResponsePtr(v *AsymmetricEncryptedSecretResponseArgs) AsymmetricEncryptedSecretResponsePtrInput {
	return (*asymmetricEncryptedSecretResponsePtrType)(v)
}

func (*asymmetricEncryptedSecretResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AsymmetricEncryptedSecretResponse)(nil)).Elem()
}

func (i *asymmetricEncryptedSecretResponsePtrType) ToAsymmetricEncryptedSecretResponsePtrOutput() AsymmetricEncryptedSecretResponsePtrOutput {
	return i.ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(context.Background())
}

func (i *asymmetricEncryptedSecretResponsePtrType) ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsymmetricEncryptedSecretResponsePtrOutput)
}

// Represent the secrets intended for encryption with asymmetric key pair.
type AsymmetricEncryptedSecretResponseOutput struct{ *pulumi.OutputState }

func (AsymmetricEncryptedSecretResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AsymmetricEncryptedSecretResponse)(nil)).Elem()
}

func (o AsymmetricEncryptedSecretResponseOutput) ToAsymmetricEncryptedSecretResponseOutput() AsymmetricEncryptedSecretResponseOutput {
	return o
}

func (o AsymmetricEncryptedSecretResponseOutput) ToAsymmetricEncryptedSecretResponseOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretResponseOutput {
	return o
}

func (o AsymmetricEncryptedSecretResponseOutput) ToAsymmetricEncryptedSecretResponsePtrOutput() AsymmetricEncryptedSecretResponsePtrOutput {
	return o.ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(context.Background())
}

func (o AsymmetricEncryptedSecretResponseOutput) ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretResponsePtrOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecretResponse) *AsymmetricEncryptedSecretResponse {
		return &v
	}).(AsymmetricEncryptedSecretResponsePtrOutput)
}

// The algorithm used to encrypt "Value".
func (o AsymmetricEncryptedSecretResponseOutput) EncryptionAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecretResponse) string { return v.EncryptionAlgorithm }).(pulumi.StringOutput)
}

// Thumbprint certificate that was used to encrypt "Value". If the value in unencrypted, it will be null.
func (o AsymmetricEncryptedSecretResponseOutput) EncryptionCertThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecretResponse) *string { return v.EncryptionCertThumbprint }).(pulumi.StringPtrOutput)
}

// The value of the secret.
func (o AsymmetricEncryptedSecretResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecretResponse) string { return v.Value }).(pulumi.StringOutput)
}

type AsymmetricEncryptedSecretResponsePtrOutput struct{ *pulumi.OutputState }

func (AsymmetricEncryptedSecretResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AsymmetricEncryptedSecretResponse)(nil)).Elem()
}

func (o AsymmetricEncryptedSecretResponsePtrOutput) ToAsymmetricEncryptedSecretResponsePtrOutput() AsymmetricEncryptedSecretResponsePtrOutput {
	return o
}

func (o AsymmetricEncryptedSecretResponsePtrOutput) ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretResponsePtrOutput {
	return o
}

func (o AsymmetricEncryptedSecretResponsePtrOutput) Elem() AsymmetricEncryptedSecretResponseOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecretResponse) AsymmetricEncryptedSecretResponse { return *v }).(AsymmetricEncryptedSecretResponseOutput)
}

// The algorithm used to encrypt "Value".
func (o AsymmetricEncryptedSecretResponsePtrOutput) EncryptionAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecretResponse) *string {
		if v == nil {
			return nil
		}
		return &v.EncryptionAlgorithm
	}).(pulumi.StringPtrOutput)
}

// Thumbprint certificate that was used to encrypt "Value". If the value in unencrypted, it will be null.
func (o AsymmetricEncryptedSecretResponsePtrOutput) EncryptionCertThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecretResponse) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionCertThumbprint
	}).(pulumi.StringPtrOutput)
}

// The value of the secret.
func (o AsymmetricEncryptedSecretResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecretResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

// The properties of the backup policy.
type BackupPolicyProperties struct {
	// The path IDs of the volumes which are part of the backup policy.
	VolumeIds []string `pulumi:"volumeIds"`
}

// BackupPolicyPropertiesInput is an input type that accepts BackupPolicyPropertiesArgs and BackupPolicyPropertiesOutput values.
// You can construct a concrete instance of `BackupPolicyPropertiesInput` via:
//
//          BackupPolicyPropertiesArgs{...}
type BackupPolicyPropertiesInput interface {
	pulumi.Input

	ToBackupPolicyPropertiesOutput() BackupPolicyPropertiesOutput
	ToBackupPolicyPropertiesOutputWithContext(context.Context) BackupPolicyPropertiesOutput
}

// The properties of the backup policy.
type BackupPolicyPropertiesArgs struct {
	// The path IDs of the volumes which are part of the backup policy.
	VolumeIds pulumi.StringArrayInput `pulumi:"volumeIds"`
}

func (BackupPolicyPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupPolicyProperties)(nil)).Elem()
}

func (i BackupPolicyPropertiesArgs) ToBackupPolicyPropertiesOutput() BackupPolicyPropertiesOutput {
	return i.ToBackupPolicyPropertiesOutputWithContext(context.Background())
}

func (i BackupPolicyPropertiesArgs) ToBackupPolicyPropertiesOutputWithContext(ctx context.Context) BackupPolicyPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPolicyPropertiesOutput)
}

func (i BackupPolicyPropertiesArgs) ToBackupPolicyPropertiesPtrOutput() BackupPolicyPropertiesPtrOutput {
	return i.ToBackupPolicyPropertiesPtrOutputWithContext(context.Background())
}

func (i BackupPolicyPropertiesArgs) ToBackupPolicyPropertiesPtrOutputWithContext(ctx context.Context) BackupPolicyPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPolicyPropertiesOutput).ToBackupPolicyPropertiesPtrOutputWithContext(ctx)
}

// BackupPolicyPropertiesPtrInput is an input type that accepts BackupPolicyPropertiesArgs, BackupPolicyPropertiesPtr and BackupPolicyPropertiesPtrOutput values.
// You can construct a concrete instance of `BackupPolicyPropertiesPtrInput` via:
//
//          BackupPolicyPropertiesArgs{...}
//
//  or:
//
//          nil
type BackupPolicyPropertiesPtrInput interface {
	pulumi.Input

	ToBackupPolicyPropertiesPtrOutput() BackupPolicyPropertiesPtrOutput
	ToBackupPolicyPropertiesPtrOutputWithContext(context.Context) BackupPolicyPropertiesPtrOutput
}

type backupPolicyPropertiesPtrType BackupPolicyPropertiesArgs

func BackupPolicyPropertiesPtr(v *BackupPolicyPropertiesArgs) BackupPolicyPropertiesPtrInput {
	return (*backupPolicyPropertiesPtrType)(v)
}

func (*backupPolicyPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupPolicyProperties)(nil)).Elem()
}

func (i *backupPolicyPropertiesPtrType) ToBackupPolicyPropertiesPtrOutput() BackupPolicyPropertiesPtrOutput {
	return i.ToBackupPolicyPropertiesPtrOutputWithContext(context.Background())
}

func (i *backupPolicyPropertiesPtrType) ToBackupPolicyPropertiesPtrOutputWithContext(ctx context.Context) BackupPolicyPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPolicyPropertiesPtrOutput)
}

// The properties of the backup policy.
type BackupPolicyPropertiesOutput struct{ *pulumi.OutputState }

func (BackupPolicyPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupPolicyProperties)(nil)).Elem()
}

func (o BackupPolicyPropertiesOutput) ToBackupPolicyPropertiesOutput() BackupPolicyPropertiesOutput {
	return o
}

func (o BackupPolicyPropertiesOutput) ToBackupPolicyPropertiesOutputWithContext(ctx context.Context) BackupPolicyPropertiesOutput {
	return o
}

func (o BackupPolicyPropertiesOutput) ToBackupPolicyPropertiesPtrOutput() BackupPolicyPropertiesPtrOutput {
	return o.ToBackupPolicyPropertiesPtrOutputWithContext(context.Background())
}

func (o BackupPolicyPropertiesOutput) ToBackupPolicyPropertiesPtrOutputWithContext(ctx context.Context) BackupPolicyPropertiesPtrOutput {
	return o.ApplyT(func(v BackupPolicyProperties) *BackupPolicyProperties {
		return &v
	}).(BackupPolicyPropertiesPtrOutput)
}

// The path IDs of the volumes which are part of the backup policy.
func (o BackupPolicyPropertiesOutput) VolumeIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BackupPolicyProperties) []string { return v.VolumeIds }).(pulumi.StringArrayOutput)
}

type BackupPolicyPropertiesPtrOutput struct{ *pulumi.OutputState }

func (BackupPolicyPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupPolicyProperties)(nil)).Elem()
}

func (o BackupPolicyPropertiesPtrOutput) ToBackupPolicyPropertiesPtrOutput() BackupPolicyPropertiesPtrOutput {
	return o
}

func (o BackupPolicyPropertiesPtrOutput) ToBackupPolicyPropertiesPtrOutputWithContext(ctx context.Context) BackupPolicyPropertiesPtrOutput {
	return o
}

func (o BackupPolicyPropertiesPtrOutput) Elem() BackupPolicyPropertiesOutput {
	return o.ApplyT(func(v *BackupPolicyProperties) BackupPolicyProperties { return *v }).(BackupPolicyPropertiesOutput)
}

// The path IDs of the volumes which are part of the backup policy.
func (o BackupPolicyPropertiesPtrOutput) VolumeIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BackupPolicyProperties) []string {
		if v == nil {
			return nil
		}
		return v.VolumeIds
	}).(pulumi.StringArrayOutput)
}

// The properties of the backup policy.
type BackupPolicyPropertiesResponse struct {
	// The backup policy creation type. Indicates whether this was created through SaaS or through StorSimple Snapshot Manager.
	BackupPolicyCreationType string `pulumi:"backupPolicyCreationType"`
	// The time of the last backup for the backup policy.
	LastBackupTime string `pulumi:"lastBackupTime"`
	// The time of the next backup for the backup policy.
	NextBackupTime string `pulumi:"nextBackupTime"`
	// Indicates whether at least one of the schedules in the backup policy is active or not.
	ScheduledBackupStatus string `pulumi:"scheduledBackupStatus"`
	// The count of schedules the backup policy contains.
	SchedulesCount int `pulumi:"schedulesCount"`
	// If the backup policy was created by StorSimple Snapshot Manager, then this field indicates the hostname of the StorSimple Snapshot Manager.
	SsmHostName string `pulumi:"ssmHostName"`
	// The path IDs of the volumes which are part of the backup policy.
	VolumeIds []string `pulumi:"volumeIds"`
}

// BackupPolicyPropertiesResponseInput is an input type that accepts BackupPolicyPropertiesResponseArgs and BackupPolicyPropertiesResponseOutput values.
// You can construct a concrete instance of `BackupPolicyPropertiesResponseInput` via:
//
//          BackupPolicyPropertiesResponseArgs{...}
type BackupPolicyPropertiesResponseInput interface {
	pulumi.Input

	ToBackupPolicyPropertiesResponseOutput() BackupPolicyPropertiesResponseOutput
	ToBackupPolicyPropertiesResponseOutputWithContext(context.Context) BackupPolicyPropertiesResponseOutput
}

// The properties of the backup policy.
type BackupPolicyPropertiesResponseArgs struct {
	// The backup policy creation type. Indicates whether this was created through SaaS or through StorSimple Snapshot Manager.
	BackupPolicyCreationType pulumi.StringInput `pulumi:"backupPolicyCreationType"`
	// The time of the last backup for the backup policy.
	LastBackupTime pulumi.StringInput `pulumi:"lastBackupTime"`
	// The time of the next backup for the backup policy.
	NextBackupTime pulumi.StringInput `pulumi:"nextBackupTime"`
	// Indicates whether at least one of the schedules in the backup policy is active or not.
	ScheduledBackupStatus pulumi.StringInput `pulumi:"scheduledBackupStatus"`
	// The count of schedules the backup policy contains.
	SchedulesCount pulumi.IntInput `pulumi:"schedulesCount"`
	// If the backup policy was created by StorSimple Snapshot Manager, then this field indicates the hostname of the StorSimple Snapshot Manager.
	SsmHostName pulumi.StringInput `pulumi:"ssmHostName"`
	// The path IDs of the volumes which are part of the backup policy.
	VolumeIds pulumi.StringArrayInput `pulumi:"volumeIds"`
}

func (BackupPolicyPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupPolicyPropertiesResponse)(nil)).Elem()
}

func (i BackupPolicyPropertiesResponseArgs) ToBackupPolicyPropertiesResponseOutput() BackupPolicyPropertiesResponseOutput {
	return i.ToBackupPolicyPropertiesResponseOutputWithContext(context.Background())
}

func (i BackupPolicyPropertiesResponseArgs) ToBackupPolicyPropertiesResponseOutputWithContext(ctx context.Context) BackupPolicyPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPolicyPropertiesResponseOutput)
}

func (i BackupPolicyPropertiesResponseArgs) ToBackupPolicyPropertiesResponsePtrOutput() BackupPolicyPropertiesResponsePtrOutput {
	return i.ToBackupPolicyPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i BackupPolicyPropertiesResponseArgs) ToBackupPolicyPropertiesResponsePtrOutputWithContext(ctx context.Context) BackupPolicyPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPolicyPropertiesResponseOutput).ToBackupPolicyPropertiesResponsePtrOutputWithContext(ctx)
}

// BackupPolicyPropertiesResponsePtrInput is an input type that accepts BackupPolicyPropertiesResponseArgs, BackupPolicyPropertiesResponsePtr and BackupPolicyPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `BackupPolicyPropertiesResponsePtrInput` via:
//
//          BackupPolicyPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type BackupPolicyPropertiesResponsePtrInput interface {
	pulumi.Input

	ToBackupPolicyPropertiesResponsePtrOutput() BackupPolicyPropertiesResponsePtrOutput
	ToBackupPolicyPropertiesResponsePtrOutputWithContext(context.Context) BackupPolicyPropertiesResponsePtrOutput
}

type backupPolicyPropertiesResponsePtrType BackupPolicyPropertiesResponseArgs

func BackupPolicyPropertiesResponsePtr(v *BackupPolicyPropertiesResponseArgs) BackupPolicyPropertiesResponsePtrInput {
	return (*backupPolicyPropertiesResponsePtrType)(v)
}

func (*backupPolicyPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupPolicyPropertiesResponse)(nil)).Elem()
}

func (i *backupPolicyPropertiesResponsePtrType) ToBackupPolicyPropertiesResponsePtrOutput() BackupPolicyPropertiesResponsePtrOutput {
	return i.ToBackupPolicyPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *backupPolicyPropertiesResponsePtrType) ToBackupPolicyPropertiesResponsePtrOutputWithContext(ctx context.Context) BackupPolicyPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPolicyPropertiesResponsePtrOutput)
}

// The properties of the backup policy.
type BackupPolicyPropertiesResponseOutput struct{ *pulumi.OutputState }

func (BackupPolicyPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupPolicyPropertiesResponse)(nil)).Elem()
}

func (o BackupPolicyPropertiesResponseOutput) ToBackupPolicyPropertiesResponseOutput() BackupPolicyPropertiesResponseOutput {
	return o
}

func (o BackupPolicyPropertiesResponseOutput) ToBackupPolicyPropertiesResponseOutputWithContext(ctx context.Context) BackupPolicyPropertiesResponseOutput {
	return o
}

func (o BackupPolicyPropertiesResponseOutput) ToBackupPolicyPropertiesResponsePtrOutput() BackupPolicyPropertiesResponsePtrOutput {
	return o.ToBackupPolicyPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o BackupPolicyPropertiesResponseOutput) ToBackupPolicyPropertiesResponsePtrOutputWithContext(ctx context.Context) BackupPolicyPropertiesResponsePtrOutput {
	return o.ApplyT(func(v BackupPolicyPropertiesResponse) *BackupPolicyPropertiesResponse {
		return &v
	}).(BackupPolicyPropertiesResponsePtrOutput)
}

// The backup policy creation type. Indicates whether this was created through SaaS or through StorSimple Snapshot Manager.
func (o BackupPolicyPropertiesResponseOutput) BackupPolicyCreationType() pulumi.StringOutput {
	return o.ApplyT(func(v BackupPolicyPropertiesResponse) string { return v.BackupPolicyCreationType }).(pulumi.StringOutput)
}

// The time of the last backup for the backup policy.
func (o BackupPolicyPropertiesResponseOutput) LastBackupTime() pulumi.StringOutput {
	return o.ApplyT(func(v BackupPolicyPropertiesResponse) string { return v.LastBackupTime }).(pulumi.StringOutput)
}

// The time of the next backup for the backup policy.
func (o BackupPolicyPropertiesResponseOutput) NextBackupTime() pulumi.StringOutput {
	return o.ApplyT(func(v BackupPolicyPropertiesResponse) string { return v.NextBackupTime }).(pulumi.StringOutput)
}

// Indicates whether at least one of the schedules in the backup policy is active or not.
func (o BackupPolicyPropertiesResponseOutput) ScheduledBackupStatus() pulumi.StringOutput {
	return o.ApplyT(func(v BackupPolicyPropertiesResponse) string { return v.ScheduledBackupStatus }).(pulumi.StringOutput)
}

// The count of schedules the backup policy contains.
func (o BackupPolicyPropertiesResponseOutput) SchedulesCount() pulumi.IntOutput {
	return o.ApplyT(func(v BackupPolicyPropertiesResponse) int { return v.SchedulesCount }).(pulumi.IntOutput)
}

// If the backup policy was created by StorSimple Snapshot Manager, then this field indicates the hostname of the StorSimple Snapshot Manager.
func (o BackupPolicyPropertiesResponseOutput) SsmHostName() pulumi.StringOutput {
	return o.ApplyT(func(v BackupPolicyPropertiesResponse) string { return v.SsmHostName }).(pulumi.StringOutput)
}

// The path IDs of the volumes which are part of the backup policy.
func (o BackupPolicyPropertiesResponseOutput) VolumeIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BackupPolicyPropertiesResponse) []string { return v.VolumeIds }).(pulumi.StringArrayOutput)
}

type BackupPolicyPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (BackupPolicyPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupPolicyPropertiesResponse)(nil)).Elem()
}

func (o BackupPolicyPropertiesResponsePtrOutput) ToBackupPolicyPropertiesResponsePtrOutput() BackupPolicyPropertiesResponsePtrOutput {
	return o
}

func (o BackupPolicyPropertiesResponsePtrOutput) ToBackupPolicyPropertiesResponsePtrOutputWithContext(ctx context.Context) BackupPolicyPropertiesResponsePtrOutput {
	return o
}

func (o BackupPolicyPropertiesResponsePtrOutput) Elem() BackupPolicyPropertiesResponseOutput {
	return o.ApplyT(func(v *BackupPolicyPropertiesResponse) BackupPolicyPropertiesResponse { return *v }).(BackupPolicyPropertiesResponseOutput)
}

// The backup policy creation type. Indicates whether this was created through SaaS or through StorSimple Snapshot Manager.
func (o BackupPolicyPropertiesResponsePtrOutput) BackupPolicyCreationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupPolicyPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.BackupPolicyCreationType
	}).(pulumi.StringPtrOutput)
}

// The time of the last backup for the backup policy.
func (o BackupPolicyPropertiesResponsePtrOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupPolicyPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastBackupTime
	}).(pulumi.StringPtrOutput)
}

// The time of the next backup for the backup policy.
func (o BackupPolicyPropertiesResponsePtrOutput) NextBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupPolicyPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.NextBackupTime
	}).(pulumi.StringPtrOutput)
}

// Indicates whether at least one of the schedules in the backup policy is active or not.
func (o BackupPolicyPropertiesResponsePtrOutput) ScheduledBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupPolicyPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ScheduledBackupStatus
	}).(pulumi.StringPtrOutput)
}

// The count of schedules the backup policy contains.
func (o BackupPolicyPropertiesResponsePtrOutput) SchedulesCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackupPolicyPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.SchedulesCount
	}).(pulumi.IntPtrOutput)
}

// If the backup policy was created by StorSimple Snapshot Manager, then this field indicates the hostname of the StorSimple Snapshot Manager.
func (o BackupPolicyPropertiesResponsePtrOutput) SsmHostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupPolicyPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SsmHostName
	}).(pulumi.StringPtrOutput)
}

// The path IDs of the volumes which are part of the backup policy.
func (o BackupPolicyPropertiesResponsePtrOutput) VolumeIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BackupPolicyPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.VolumeIds
	}).(pulumi.StringArrayOutput)
}

// The Backup Schedule Group Properties
type BackupScheduleGroupProperties struct {
	// The start time. When this field is specified we will generate Default GrandFather Father Son Backup Schedules.
	StartTime Time `pulumi:"startTime"`
}

// BackupScheduleGroupPropertiesInput is an input type that accepts BackupScheduleGroupPropertiesArgs and BackupScheduleGroupPropertiesOutput values.
// You can construct a concrete instance of `BackupScheduleGroupPropertiesInput` via:
//
//          BackupScheduleGroupPropertiesArgs{...}
type BackupScheduleGroupPropertiesInput interface {
	pulumi.Input

	ToBackupScheduleGroupPropertiesOutput() BackupScheduleGroupPropertiesOutput
	ToBackupScheduleGroupPropertiesOutputWithContext(context.Context) BackupScheduleGroupPropertiesOutput
}

// The Backup Schedule Group Properties
type BackupScheduleGroupPropertiesArgs struct {
	// The start time. When this field is specified we will generate Default GrandFather Father Son Backup Schedules.
	StartTime TimeInput `pulumi:"startTime"`
}

func (BackupScheduleGroupPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupScheduleGroupProperties)(nil)).Elem()
}

func (i BackupScheduleGroupPropertiesArgs) ToBackupScheduleGroupPropertiesOutput() BackupScheduleGroupPropertiesOutput {
	return i.ToBackupScheduleGroupPropertiesOutputWithContext(context.Background())
}

func (i BackupScheduleGroupPropertiesArgs) ToBackupScheduleGroupPropertiesOutputWithContext(ctx context.Context) BackupScheduleGroupPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupScheduleGroupPropertiesOutput)
}

func (i BackupScheduleGroupPropertiesArgs) ToBackupScheduleGroupPropertiesPtrOutput() BackupScheduleGroupPropertiesPtrOutput {
	return i.ToBackupScheduleGroupPropertiesPtrOutputWithContext(context.Background())
}

func (i BackupScheduleGroupPropertiesArgs) ToBackupScheduleGroupPropertiesPtrOutputWithContext(ctx context.Context) BackupScheduleGroupPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupScheduleGroupPropertiesOutput).ToBackupScheduleGroupPropertiesPtrOutputWithContext(ctx)
}

// BackupScheduleGroupPropertiesPtrInput is an input type that accepts BackupScheduleGroupPropertiesArgs, BackupScheduleGroupPropertiesPtr and BackupScheduleGroupPropertiesPtrOutput values.
// You can construct a concrete instance of `BackupScheduleGroupPropertiesPtrInput` via:
//
//          BackupScheduleGroupPropertiesArgs{...}
//
//  or:
//
//          nil
type BackupScheduleGroupPropertiesPtrInput interface {
	pulumi.Input

	ToBackupScheduleGroupPropertiesPtrOutput() BackupScheduleGroupPropertiesPtrOutput
	ToBackupScheduleGroupPropertiesPtrOutputWithContext(context.Context) BackupScheduleGroupPropertiesPtrOutput
}

type backupScheduleGroupPropertiesPtrType BackupScheduleGroupPropertiesArgs

func BackupScheduleGroupPropertiesPtr(v *BackupScheduleGroupPropertiesArgs) BackupScheduleGroupPropertiesPtrInput {
	return (*backupScheduleGroupPropertiesPtrType)(v)
}

func (*backupScheduleGroupPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupScheduleGroupProperties)(nil)).Elem()
}

func (i *backupScheduleGroupPropertiesPtrType) ToBackupScheduleGroupPropertiesPtrOutput() BackupScheduleGroupPropertiesPtrOutput {
	return i.ToBackupScheduleGroupPropertiesPtrOutputWithContext(context.Background())
}

func (i *backupScheduleGroupPropertiesPtrType) ToBackupScheduleGroupPropertiesPtrOutputWithContext(ctx context.Context) BackupScheduleGroupPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupScheduleGroupPropertiesPtrOutput)
}

// The Backup Schedule Group Properties
type BackupScheduleGroupPropertiesOutput struct{ *pulumi.OutputState }

func (BackupScheduleGroupPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupScheduleGroupProperties)(nil)).Elem()
}

func (o BackupScheduleGroupPropertiesOutput) ToBackupScheduleGroupPropertiesOutput() BackupScheduleGroupPropertiesOutput {
	return o
}

func (o BackupScheduleGroupPropertiesOutput) ToBackupScheduleGroupPropertiesOutputWithContext(ctx context.Context) BackupScheduleGroupPropertiesOutput {
	return o
}

func (o BackupScheduleGroupPropertiesOutput) ToBackupScheduleGroupPropertiesPtrOutput() BackupScheduleGroupPropertiesPtrOutput {
	return o.ToBackupScheduleGroupPropertiesPtrOutputWithContext(context.Background())
}

func (o BackupScheduleGroupPropertiesOutput) ToBackupScheduleGroupPropertiesPtrOutputWithContext(ctx context.Context) BackupScheduleGroupPropertiesPtrOutput {
	return o.ApplyT(func(v BackupScheduleGroupProperties) *BackupScheduleGroupProperties {
		return &v
	}).(BackupScheduleGroupPropertiesPtrOutput)
}

// The start time. When this field is specified we will generate Default GrandFather Father Son Backup Schedules.
func (o BackupScheduleGroupPropertiesOutput) StartTime() TimeOutput {
	return o.ApplyT(func(v BackupScheduleGroupProperties) Time { return v.StartTime }).(TimeOutput)
}

type BackupScheduleGroupPropertiesPtrOutput struct{ *pulumi.OutputState }

func (BackupScheduleGroupPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupScheduleGroupProperties)(nil)).Elem()
}

func (o BackupScheduleGroupPropertiesPtrOutput) ToBackupScheduleGroupPropertiesPtrOutput() BackupScheduleGroupPropertiesPtrOutput {
	return o
}

func (o BackupScheduleGroupPropertiesPtrOutput) ToBackupScheduleGroupPropertiesPtrOutputWithContext(ctx context.Context) BackupScheduleGroupPropertiesPtrOutput {
	return o
}

func (o BackupScheduleGroupPropertiesPtrOutput) Elem() BackupScheduleGroupPropertiesOutput {
	return o.ApplyT(func(v *BackupScheduleGroupProperties) BackupScheduleGroupProperties { return *v }).(BackupScheduleGroupPropertiesOutput)
}

// The start time. When this field is specified we will generate Default GrandFather Father Son Backup Schedules.
func (o BackupScheduleGroupPropertiesPtrOutput) StartTime() TimePtrOutput {
	return o.ApplyT(func(v *BackupScheduleGroupProperties) *Time {
		if v == nil {
			return nil
		}
		return &v.StartTime
	}).(TimePtrOutput)
}

// The Backup Schedule Group Properties
type BackupScheduleGroupPropertiesResponse struct {
	// The start time. When this field is specified we will generate Default GrandFather Father Son Backup Schedules.
	StartTime TimeResponse `pulumi:"startTime"`
}

// BackupScheduleGroupPropertiesResponseInput is an input type that accepts BackupScheduleGroupPropertiesResponseArgs and BackupScheduleGroupPropertiesResponseOutput values.
// You can construct a concrete instance of `BackupScheduleGroupPropertiesResponseInput` via:
//
//          BackupScheduleGroupPropertiesResponseArgs{...}
type BackupScheduleGroupPropertiesResponseInput interface {
	pulumi.Input

	ToBackupScheduleGroupPropertiesResponseOutput() BackupScheduleGroupPropertiesResponseOutput
	ToBackupScheduleGroupPropertiesResponseOutputWithContext(context.Context) BackupScheduleGroupPropertiesResponseOutput
}

// The Backup Schedule Group Properties
type BackupScheduleGroupPropertiesResponseArgs struct {
	// The start time. When this field is specified we will generate Default GrandFather Father Son Backup Schedules.
	StartTime TimeResponseInput `pulumi:"startTime"`
}

func (BackupScheduleGroupPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupScheduleGroupPropertiesResponse)(nil)).Elem()
}

func (i BackupScheduleGroupPropertiesResponseArgs) ToBackupScheduleGroupPropertiesResponseOutput() BackupScheduleGroupPropertiesResponseOutput {
	return i.ToBackupScheduleGroupPropertiesResponseOutputWithContext(context.Background())
}

func (i BackupScheduleGroupPropertiesResponseArgs) ToBackupScheduleGroupPropertiesResponseOutputWithContext(ctx context.Context) BackupScheduleGroupPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupScheduleGroupPropertiesResponseOutput)
}

func (i BackupScheduleGroupPropertiesResponseArgs) ToBackupScheduleGroupPropertiesResponsePtrOutput() BackupScheduleGroupPropertiesResponsePtrOutput {
	return i.ToBackupScheduleGroupPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i BackupScheduleGroupPropertiesResponseArgs) ToBackupScheduleGroupPropertiesResponsePtrOutputWithContext(ctx context.Context) BackupScheduleGroupPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupScheduleGroupPropertiesResponseOutput).ToBackupScheduleGroupPropertiesResponsePtrOutputWithContext(ctx)
}

// BackupScheduleGroupPropertiesResponsePtrInput is an input type that accepts BackupScheduleGroupPropertiesResponseArgs, BackupScheduleGroupPropertiesResponsePtr and BackupScheduleGroupPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `BackupScheduleGroupPropertiesResponsePtrInput` via:
//
//          BackupScheduleGroupPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type BackupScheduleGroupPropertiesResponsePtrInput interface {
	pulumi.Input

	ToBackupScheduleGroupPropertiesResponsePtrOutput() BackupScheduleGroupPropertiesResponsePtrOutput
	ToBackupScheduleGroupPropertiesResponsePtrOutputWithContext(context.Context) BackupScheduleGroupPropertiesResponsePtrOutput
}

type backupScheduleGroupPropertiesResponsePtrType BackupScheduleGroupPropertiesResponseArgs

func BackupScheduleGroupPropertiesResponsePtr(v *BackupScheduleGroupPropertiesResponseArgs) BackupScheduleGroupPropertiesResponsePtrInput {
	return (*backupScheduleGroupPropertiesResponsePtrType)(v)
}

func (*backupScheduleGroupPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupScheduleGroupPropertiesResponse)(nil)).Elem()
}

func (i *backupScheduleGroupPropertiesResponsePtrType) ToBackupScheduleGroupPropertiesResponsePtrOutput() BackupScheduleGroupPropertiesResponsePtrOutput {
	return i.ToBackupScheduleGroupPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *backupScheduleGroupPropertiesResponsePtrType) ToBackupScheduleGroupPropertiesResponsePtrOutputWithContext(ctx context.Context) BackupScheduleGroupPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupScheduleGroupPropertiesResponsePtrOutput)
}

// The Backup Schedule Group Properties
type BackupScheduleGroupPropertiesResponseOutput struct{ *pulumi.OutputState }

func (BackupScheduleGroupPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupScheduleGroupPropertiesResponse)(nil)).Elem()
}

func (o BackupScheduleGroupPropertiesResponseOutput) ToBackupScheduleGroupPropertiesResponseOutput() BackupScheduleGroupPropertiesResponseOutput {
	return o
}

func (o BackupScheduleGroupPropertiesResponseOutput) ToBackupScheduleGroupPropertiesResponseOutputWithContext(ctx context.Context) BackupScheduleGroupPropertiesResponseOutput {
	return o
}

func (o BackupScheduleGroupPropertiesResponseOutput) ToBackupScheduleGroupPropertiesResponsePtrOutput() BackupScheduleGroupPropertiesResponsePtrOutput {
	return o.ToBackupScheduleGroupPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o BackupScheduleGroupPropertiesResponseOutput) ToBackupScheduleGroupPropertiesResponsePtrOutputWithContext(ctx context.Context) BackupScheduleGroupPropertiesResponsePtrOutput {
	return o.ApplyT(func(v BackupScheduleGroupPropertiesResponse) *BackupScheduleGroupPropertiesResponse {
		return &v
	}).(BackupScheduleGroupPropertiesResponsePtrOutput)
}

// The start time. When this field is specified we will generate Default GrandFather Father Son Backup Schedules.
func (o BackupScheduleGroupPropertiesResponseOutput) StartTime() TimeResponseOutput {
	return o.ApplyT(func(v BackupScheduleGroupPropertiesResponse) TimeResponse { return v.StartTime }).(TimeResponseOutput)
}

type BackupScheduleGroupPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (BackupScheduleGroupPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupScheduleGroupPropertiesResponse)(nil)).Elem()
}

func (o BackupScheduleGroupPropertiesResponsePtrOutput) ToBackupScheduleGroupPropertiesResponsePtrOutput() BackupScheduleGroupPropertiesResponsePtrOutput {
	return o
}

func (o BackupScheduleGroupPropertiesResponsePtrOutput) ToBackupScheduleGroupPropertiesResponsePtrOutputWithContext(ctx context.Context) BackupScheduleGroupPropertiesResponsePtrOutput {
	return o
}

func (o BackupScheduleGroupPropertiesResponsePtrOutput) Elem() BackupScheduleGroupPropertiesResponseOutput {
	return o.ApplyT(func(v *BackupScheduleGroupPropertiesResponse) BackupScheduleGroupPropertiesResponse { return *v }).(BackupScheduleGroupPropertiesResponseOutput)
}

// The start time. When this field is specified we will generate Default GrandFather Father Son Backup Schedules.
func (o BackupScheduleGroupPropertiesResponsePtrOutput) StartTime() TimeResponsePtrOutput {
	return o.ApplyT(func(v *BackupScheduleGroupPropertiesResponse) *TimeResponse {
		if v == nil {
			return nil
		}
		return &v.StartTime
	}).(TimeResponsePtrOutput)
}

// The properties of the backup schedule.
type BackupScheduleProperties struct {
	// The type of backup which needs to be taken.
	BackupType string `pulumi:"backupType"`
	// The number of backups to be retained.
	RetentionCount int `pulumi:"retentionCount"`
	// The schedule recurrence.
	ScheduleRecurrence ScheduleRecurrence `pulumi:"scheduleRecurrence"`
	// The schedule status.
	ScheduleStatus string `pulumi:"scheduleStatus"`
	// The start time of the schedule.
	StartTime string `pulumi:"startTime"`
}

// BackupSchedulePropertiesInput is an input type that accepts BackupSchedulePropertiesArgs and BackupSchedulePropertiesOutput values.
// You can construct a concrete instance of `BackupSchedulePropertiesInput` via:
//
//          BackupSchedulePropertiesArgs{...}
type BackupSchedulePropertiesInput interface {
	pulumi.Input

	ToBackupSchedulePropertiesOutput() BackupSchedulePropertiesOutput
	ToBackupSchedulePropertiesOutputWithContext(context.Context) BackupSchedulePropertiesOutput
}

// The properties of the backup schedule.
type BackupSchedulePropertiesArgs struct {
	// The type of backup which needs to be taken.
	BackupType pulumi.StringInput `pulumi:"backupType"`
	// The number of backups to be retained.
	RetentionCount pulumi.IntInput `pulumi:"retentionCount"`
	// The schedule recurrence.
	ScheduleRecurrence ScheduleRecurrenceInput `pulumi:"scheduleRecurrence"`
	// The schedule status.
	ScheduleStatus pulumi.StringInput `pulumi:"scheduleStatus"`
	// The start time of the schedule.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (BackupSchedulePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupScheduleProperties)(nil)).Elem()
}

func (i BackupSchedulePropertiesArgs) ToBackupSchedulePropertiesOutput() BackupSchedulePropertiesOutput {
	return i.ToBackupSchedulePropertiesOutputWithContext(context.Background())
}

func (i BackupSchedulePropertiesArgs) ToBackupSchedulePropertiesOutputWithContext(ctx context.Context) BackupSchedulePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupSchedulePropertiesOutput)
}

func (i BackupSchedulePropertiesArgs) ToBackupSchedulePropertiesPtrOutput() BackupSchedulePropertiesPtrOutput {
	return i.ToBackupSchedulePropertiesPtrOutputWithContext(context.Background())
}

func (i BackupSchedulePropertiesArgs) ToBackupSchedulePropertiesPtrOutputWithContext(ctx context.Context) BackupSchedulePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupSchedulePropertiesOutput).ToBackupSchedulePropertiesPtrOutputWithContext(ctx)
}

// BackupSchedulePropertiesPtrInput is an input type that accepts BackupSchedulePropertiesArgs, BackupSchedulePropertiesPtr and BackupSchedulePropertiesPtrOutput values.
// You can construct a concrete instance of `BackupSchedulePropertiesPtrInput` via:
//
//          BackupSchedulePropertiesArgs{...}
//
//  or:
//
//          nil
type BackupSchedulePropertiesPtrInput interface {
	pulumi.Input

	ToBackupSchedulePropertiesPtrOutput() BackupSchedulePropertiesPtrOutput
	ToBackupSchedulePropertiesPtrOutputWithContext(context.Context) BackupSchedulePropertiesPtrOutput
}

type backupSchedulePropertiesPtrType BackupSchedulePropertiesArgs

func BackupSchedulePropertiesPtr(v *BackupSchedulePropertiesArgs) BackupSchedulePropertiesPtrInput {
	return (*backupSchedulePropertiesPtrType)(v)
}

func (*backupSchedulePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupScheduleProperties)(nil)).Elem()
}

func (i *backupSchedulePropertiesPtrType) ToBackupSchedulePropertiesPtrOutput() BackupSchedulePropertiesPtrOutput {
	return i.ToBackupSchedulePropertiesPtrOutputWithContext(context.Background())
}

func (i *backupSchedulePropertiesPtrType) ToBackupSchedulePropertiesPtrOutputWithContext(ctx context.Context) BackupSchedulePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupSchedulePropertiesPtrOutput)
}

// The properties of the backup schedule.
type BackupSchedulePropertiesOutput struct{ *pulumi.OutputState }

func (BackupSchedulePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupScheduleProperties)(nil)).Elem()
}

func (o BackupSchedulePropertiesOutput) ToBackupSchedulePropertiesOutput() BackupSchedulePropertiesOutput {
	return o
}

func (o BackupSchedulePropertiesOutput) ToBackupSchedulePropertiesOutputWithContext(ctx context.Context) BackupSchedulePropertiesOutput {
	return o
}

func (o BackupSchedulePropertiesOutput) ToBackupSchedulePropertiesPtrOutput() BackupSchedulePropertiesPtrOutput {
	return o.ToBackupSchedulePropertiesPtrOutputWithContext(context.Background())
}

func (o BackupSchedulePropertiesOutput) ToBackupSchedulePropertiesPtrOutputWithContext(ctx context.Context) BackupSchedulePropertiesPtrOutput {
	return o.ApplyT(func(v BackupScheduleProperties) *BackupScheduleProperties {
		return &v
	}).(BackupSchedulePropertiesPtrOutput)
}

// The type of backup which needs to be taken.
func (o BackupSchedulePropertiesOutput) BackupType() pulumi.StringOutput {
	return o.ApplyT(func(v BackupScheduleProperties) string { return v.BackupType }).(pulumi.StringOutput)
}

// The number of backups to be retained.
func (o BackupSchedulePropertiesOutput) RetentionCount() pulumi.IntOutput {
	return o.ApplyT(func(v BackupScheduleProperties) int { return v.RetentionCount }).(pulumi.IntOutput)
}

// The schedule recurrence.
func (o BackupSchedulePropertiesOutput) ScheduleRecurrence() ScheduleRecurrenceOutput {
	return o.ApplyT(func(v BackupScheduleProperties) ScheduleRecurrence { return v.ScheduleRecurrence }).(ScheduleRecurrenceOutput)
}

// The schedule status.
func (o BackupSchedulePropertiesOutput) ScheduleStatus() pulumi.StringOutput {
	return o.ApplyT(func(v BackupScheduleProperties) string { return v.ScheduleStatus }).(pulumi.StringOutput)
}

// The start time of the schedule.
func (o BackupSchedulePropertiesOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v BackupScheduleProperties) string { return v.StartTime }).(pulumi.StringOutput)
}

type BackupSchedulePropertiesPtrOutput struct{ *pulumi.OutputState }

func (BackupSchedulePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupScheduleProperties)(nil)).Elem()
}

func (o BackupSchedulePropertiesPtrOutput) ToBackupSchedulePropertiesPtrOutput() BackupSchedulePropertiesPtrOutput {
	return o
}

func (o BackupSchedulePropertiesPtrOutput) ToBackupSchedulePropertiesPtrOutputWithContext(ctx context.Context) BackupSchedulePropertiesPtrOutput {
	return o
}

func (o BackupSchedulePropertiesPtrOutput) Elem() BackupSchedulePropertiesOutput {
	return o.ApplyT(func(v *BackupScheduleProperties) BackupScheduleProperties { return *v }).(BackupSchedulePropertiesOutput)
}

// The type of backup which needs to be taken.
func (o BackupSchedulePropertiesPtrOutput) BackupType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupScheduleProperties) *string {
		if v == nil {
			return nil
		}
		return &v.BackupType
	}).(pulumi.StringPtrOutput)
}

// The number of backups to be retained.
func (o BackupSchedulePropertiesPtrOutput) RetentionCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackupScheduleProperties) *int {
		if v == nil {
			return nil
		}
		return &v.RetentionCount
	}).(pulumi.IntPtrOutput)
}

// The schedule recurrence.
func (o BackupSchedulePropertiesPtrOutput) ScheduleRecurrence() ScheduleRecurrencePtrOutput {
	return o.ApplyT(func(v *BackupScheduleProperties) *ScheduleRecurrence {
		if v == nil {
			return nil
		}
		return &v.ScheduleRecurrence
	}).(ScheduleRecurrencePtrOutput)
}

// The schedule status.
func (o BackupSchedulePropertiesPtrOutput) ScheduleStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupScheduleProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ScheduleStatus
	}).(pulumi.StringPtrOutput)
}

// The start time of the schedule.
func (o BackupSchedulePropertiesPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupScheduleProperties) *string {
		if v == nil {
			return nil
		}
		return &v.StartTime
	}).(pulumi.StringPtrOutput)
}

// The properties of the backup schedule.
type BackupSchedulePropertiesResponse struct {
	// The type of backup which needs to be taken.
	BackupType string `pulumi:"backupType"`
	// The last successful backup run which was triggered for the schedule.
	LastSuccessfulRun string `pulumi:"lastSuccessfulRun"`
	// The number of backups to be retained.
	RetentionCount int `pulumi:"retentionCount"`
	// The schedule recurrence.
	ScheduleRecurrence ScheduleRecurrenceResponse `pulumi:"scheduleRecurrence"`
	// The schedule status.
	ScheduleStatus string `pulumi:"scheduleStatus"`
	// The start time of the schedule.
	StartTime string `pulumi:"startTime"`
}

// BackupSchedulePropertiesResponseInput is an input type that accepts BackupSchedulePropertiesResponseArgs and BackupSchedulePropertiesResponseOutput values.
// You can construct a concrete instance of `BackupSchedulePropertiesResponseInput` via:
//
//          BackupSchedulePropertiesResponseArgs{...}
type BackupSchedulePropertiesResponseInput interface {
	pulumi.Input

	ToBackupSchedulePropertiesResponseOutput() BackupSchedulePropertiesResponseOutput
	ToBackupSchedulePropertiesResponseOutputWithContext(context.Context) BackupSchedulePropertiesResponseOutput
}

// The properties of the backup schedule.
type BackupSchedulePropertiesResponseArgs struct {
	// The type of backup which needs to be taken.
	BackupType pulumi.StringInput `pulumi:"backupType"`
	// The last successful backup run which was triggered for the schedule.
	LastSuccessfulRun pulumi.StringInput `pulumi:"lastSuccessfulRun"`
	// The number of backups to be retained.
	RetentionCount pulumi.IntInput `pulumi:"retentionCount"`
	// The schedule recurrence.
	ScheduleRecurrence ScheduleRecurrenceResponseInput `pulumi:"scheduleRecurrence"`
	// The schedule status.
	ScheduleStatus pulumi.StringInput `pulumi:"scheduleStatus"`
	// The start time of the schedule.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (BackupSchedulePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupSchedulePropertiesResponse)(nil)).Elem()
}

func (i BackupSchedulePropertiesResponseArgs) ToBackupSchedulePropertiesResponseOutput() BackupSchedulePropertiesResponseOutput {
	return i.ToBackupSchedulePropertiesResponseOutputWithContext(context.Background())
}

func (i BackupSchedulePropertiesResponseArgs) ToBackupSchedulePropertiesResponseOutputWithContext(ctx context.Context) BackupSchedulePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupSchedulePropertiesResponseOutput)
}

func (i BackupSchedulePropertiesResponseArgs) ToBackupSchedulePropertiesResponsePtrOutput() BackupSchedulePropertiesResponsePtrOutput {
	return i.ToBackupSchedulePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i BackupSchedulePropertiesResponseArgs) ToBackupSchedulePropertiesResponsePtrOutputWithContext(ctx context.Context) BackupSchedulePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupSchedulePropertiesResponseOutput).ToBackupSchedulePropertiesResponsePtrOutputWithContext(ctx)
}

// BackupSchedulePropertiesResponsePtrInput is an input type that accepts BackupSchedulePropertiesResponseArgs, BackupSchedulePropertiesResponsePtr and BackupSchedulePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `BackupSchedulePropertiesResponsePtrInput` via:
//
//          BackupSchedulePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type BackupSchedulePropertiesResponsePtrInput interface {
	pulumi.Input

	ToBackupSchedulePropertiesResponsePtrOutput() BackupSchedulePropertiesResponsePtrOutput
	ToBackupSchedulePropertiesResponsePtrOutputWithContext(context.Context) BackupSchedulePropertiesResponsePtrOutput
}

type backupSchedulePropertiesResponsePtrType BackupSchedulePropertiesResponseArgs

func BackupSchedulePropertiesResponsePtr(v *BackupSchedulePropertiesResponseArgs) BackupSchedulePropertiesResponsePtrInput {
	return (*backupSchedulePropertiesResponsePtrType)(v)
}

func (*backupSchedulePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupSchedulePropertiesResponse)(nil)).Elem()
}

func (i *backupSchedulePropertiesResponsePtrType) ToBackupSchedulePropertiesResponsePtrOutput() BackupSchedulePropertiesResponsePtrOutput {
	return i.ToBackupSchedulePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *backupSchedulePropertiesResponsePtrType) ToBackupSchedulePropertiesResponsePtrOutputWithContext(ctx context.Context) BackupSchedulePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupSchedulePropertiesResponsePtrOutput)
}

// The properties of the backup schedule.
type BackupSchedulePropertiesResponseOutput struct{ *pulumi.OutputState }

func (BackupSchedulePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupSchedulePropertiesResponse)(nil)).Elem()
}

func (o BackupSchedulePropertiesResponseOutput) ToBackupSchedulePropertiesResponseOutput() BackupSchedulePropertiesResponseOutput {
	return o
}

func (o BackupSchedulePropertiesResponseOutput) ToBackupSchedulePropertiesResponseOutputWithContext(ctx context.Context) BackupSchedulePropertiesResponseOutput {
	return o
}

func (o BackupSchedulePropertiesResponseOutput) ToBackupSchedulePropertiesResponsePtrOutput() BackupSchedulePropertiesResponsePtrOutput {
	return o.ToBackupSchedulePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o BackupSchedulePropertiesResponseOutput) ToBackupSchedulePropertiesResponsePtrOutputWithContext(ctx context.Context) BackupSchedulePropertiesResponsePtrOutput {
	return o.ApplyT(func(v BackupSchedulePropertiesResponse) *BackupSchedulePropertiesResponse {
		return &v
	}).(BackupSchedulePropertiesResponsePtrOutput)
}

// The type of backup which needs to be taken.
func (o BackupSchedulePropertiesResponseOutput) BackupType() pulumi.StringOutput {
	return o.ApplyT(func(v BackupSchedulePropertiesResponse) string { return v.BackupType }).(pulumi.StringOutput)
}

// The last successful backup run which was triggered for the schedule.
func (o BackupSchedulePropertiesResponseOutput) LastSuccessfulRun() pulumi.StringOutput {
	return o.ApplyT(func(v BackupSchedulePropertiesResponse) string { return v.LastSuccessfulRun }).(pulumi.StringOutput)
}

// The number of backups to be retained.
func (o BackupSchedulePropertiesResponseOutput) RetentionCount() pulumi.IntOutput {
	return o.ApplyT(func(v BackupSchedulePropertiesResponse) int { return v.RetentionCount }).(pulumi.IntOutput)
}

// The schedule recurrence.
func (o BackupSchedulePropertiesResponseOutput) ScheduleRecurrence() ScheduleRecurrenceResponseOutput {
	return o.ApplyT(func(v BackupSchedulePropertiesResponse) ScheduleRecurrenceResponse { return v.ScheduleRecurrence }).(ScheduleRecurrenceResponseOutput)
}

// The schedule status.
func (o BackupSchedulePropertiesResponseOutput) ScheduleStatus() pulumi.StringOutput {
	return o.ApplyT(func(v BackupSchedulePropertiesResponse) string { return v.ScheduleStatus }).(pulumi.StringOutput)
}

// The start time of the schedule.
func (o BackupSchedulePropertiesResponseOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v BackupSchedulePropertiesResponse) string { return v.StartTime }).(pulumi.StringOutput)
}

type BackupSchedulePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (BackupSchedulePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupSchedulePropertiesResponse)(nil)).Elem()
}

func (o BackupSchedulePropertiesResponsePtrOutput) ToBackupSchedulePropertiesResponsePtrOutput() BackupSchedulePropertiesResponsePtrOutput {
	return o
}

func (o BackupSchedulePropertiesResponsePtrOutput) ToBackupSchedulePropertiesResponsePtrOutputWithContext(ctx context.Context) BackupSchedulePropertiesResponsePtrOutput {
	return o
}

func (o BackupSchedulePropertiesResponsePtrOutput) Elem() BackupSchedulePropertiesResponseOutput {
	return o.ApplyT(func(v *BackupSchedulePropertiesResponse) BackupSchedulePropertiesResponse { return *v }).(BackupSchedulePropertiesResponseOutput)
}

// The type of backup which needs to be taken.
func (o BackupSchedulePropertiesResponsePtrOutput) BackupType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupSchedulePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.BackupType
	}).(pulumi.StringPtrOutput)
}

// The last successful backup run which was triggered for the schedule.
func (o BackupSchedulePropertiesResponsePtrOutput) LastSuccessfulRun() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupSchedulePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastSuccessfulRun
	}).(pulumi.StringPtrOutput)
}

// The number of backups to be retained.
func (o BackupSchedulePropertiesResponsePtrOutput) RetentionCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackupSchedulePropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.RetentionCount
	}).(pulumi.IntPtrOutput)
}

// The schedule recurrence.
func (o BackupSchedulePropertiesResponsePtrOutput) ScheduleRecurrence() ScheduleRecurrenceResponsePtrOutput {
	return o.ApplyT(func(v *BackupSchedulePropertiesResponse) *ScheduleRecurrenceResponse {
		if v == nil {
			return nil
		}
		return &v.ScheduleRecurrence
	}).(ScheduleRecurrenceResponsePtrOutput)
}

// The schedule status.
func (o BackupSchedulePropertiesResponsePtrOutput) ScheduleStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupSchedulePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ScheduleStatus
	}).(pulumi.StringPtrOutput)
}

// The start time of the schedule.
func (o BackupSchedulePropertiesResponsePtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupSchedulePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StartTime
	}).(pulumi.StringPtrOutput)
}

// The properties of the bandwidth setting.
type BandwidthRateSettingProperties struct {
	// The schedules.
	Schedules []BandwidthSchedule `pulumi:"schedules"`
}

// BandwidthRateSettingPropertiesInput is an input type that accepts BandwidthRateSettingPropertiesArgs and BandwidthRateSettingPropertiesOutput values.
// You can construct a concrete instance of `BandwidthRateSettingPropertiesInput` via:
//
//          BandwidthRateSettingPropertiesArgs{...}
type BandwidthRateSettingPropertiesInput interface {
	pulumi.Input

	ToBandwidthRateSettingPropertiesOutput() BandwidthRateSettingPropertiesOutput
	ToBandwidthRateSettingPropertiesOutputWithContext(context.Context) BandwidthRateSettingPropertiesOutput
}

// The properties of the bandwidth setting.
type BandwidthRateSettingPropertiesArgs struct {
	// The schedules.
	Schedules BandwidthScheduleArrayInput `pulumi:"schedules"`
}

func (BandwidthRateSettingPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthRateSettingProperties)(nil)).Elem()
}

func (i BandwidthRateSettingPropertiesArgs) ToBandwidthRateSettingPropertiesOutput() BandwidthRateSettingPropertiesOutput {
	return i.ToBandwidthRateSettingPropertiesOutputWithContext(context.Background())
}

func (i BandwidthRateSettingPropertiesArgs) ToBandwidthRateSettingPropertiesOutputWithContext(ctx context.Context) BandwidthRateSettingPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthRateSettingPropertiesOutput)
}

func (i BandwidthRateSettingPropertiesArgs) ToBandwidthRateSettingPropertiesPtrOutput() BandwidthRateSettingPropertiesPtrOutput {
	return i.ToBandwidthRateSettingPropertiesPtrOutputWithContext(context.Background())
}

func (i BandwidthRateSettingPropertiesArgs) ToBandwidthRateSettingPropertiesPtrOutputWithContext(ctx context.Context) BandwidthRateSettingPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthRateSettingPropertiesOutput).ToBandwidthRateSettingPropertiesPtrOutputWithContext(ctx)
}

// BandwidthRateSettingPropertiesPtrInput is an input type that accepts BandwidthRateSettingPropertiesArgs, BandwidthRateSettingPropertiesPtr and BandwidthRateSettingPropertiesPtrOutput values.
// You can construct a concrete instance of `BandwidthRateSettingPropertiesPtrInput` via:
//
//          BandwidthRateSettingPropertiesArgs{...}
//
//  or:
//
//          nil
type BandwidthRateSettingPropertiesPtrInput interface {
	pulumi.Input

	ToBandwidthRateSettingPropertiesPtrOutput() BandwidthRateSettingPropertiesPtrOutput
	ToBandwidthRateSettingPropertiesPtrOutputWithContext(context.Context) BandwidthRateSettingPropertiesPtrOutput
}

type bandwidthRateSettingPropertiesPtrType BandwidthRateSettingPropertiesArgs

func BandwidthRateSettingPropertiesPtr(v *BandwidthRateSettingPropertiesArgs) BandwidthRateSettingPropertiesPtrInput {
	return (*bandwidthRateSettingPropertiesPtrType)(v)
}

func (*bandwidthRateSettingPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BandwidthRateSettingProperties)(nil)).Elem()
}

func (i *bandwidthRateSettingPropertiesPtrType) ToBandwidthRateSettingPropertiesPtrOutput() BandwidthRateSettingPropertiesPtrOutput {
	return i.ToBandwidthRateSettingPropertiesPtrOutputWithContext(context.Background())
}

func (i *bandwidthRateSettingPropertiesPtrType) ToBandwidthRateSettingPropertiesPtrOutputWithContext(ctx context.Context) BandwidthRateSettingPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthRateSettingPropertiesPtrOutput)
}

// The properties of the bandwidth setting.
type BandwidthRateSettingPropertiesOutput struct{ *pulumi.OutputState }

func (BandwidthRateSettingPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthRateSettingProperties)(nil)).Elem()
}

func (o BandwidthRateSettingPropertiesOutput) ToBandwidthRateSettingPropertiesOutput() BandwidthRateSettingPropertiesOutput {
	return o
}

func (o BandwidthRateSettingPropertiesOutput) ToBandwidthRateSettingPropertiesOutputWithContext(ctx context.Context) BandwidthRateSettingPropertiesOutput {
	return o
}

func (o BandwidthRateSettingPropertiesOutput) ToBandwidthRateSettingPropertiesPtrOutput() BandwidthRateSettingPropertiesPtrOutput {
	return o.ToBandwidthRateSettingPropertiesPtrOutputWithContext(context.Background())
}

func (o BandwidthRateSettingPropertiesOutput) ToBandwidthRateSettingPropertiesPtrOutputWithContext(ctx context.Context) BandwidthRateSettingPropertiesPtrOutput {
	return o.ApplyT(func(v BandwidthRateSettingProperties) *BandwidthRateSettingProperties {
		return &v
	}).(BandwidthRateSettingPropertiesPtrOutput)
}

// The schedules.
func (o BandwidthRateSettingPropertiesOutput) Schedules() BandwidthScheduleArrayOutput {
	return o.ApplyT(func(v BandwidthRateSettingProperties) []BandwidthSchedule { return v.Schedules }).(BandwidthScheduleArrayOutput)
}

type BandwidthRateSettingPropertiesPtrOutput struct{ *pulumi.OutputState }

func (BandwidthRateSettingPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BandwidthRateSettingProperties)(nil)).Elem()
}

func (o BandwidthRateSettingPropertiesPtrOutput) ToBandwidthRateSettingPropertiesPtrOutput() BandwidthRateSettingPropertiesPtrOutput {
	return o
}

func (o BandwidthRateSettingPropertiesPtrOutput) ToBandwidthRateSettingPropertiesPtrOutputWithContext(ctx context.Context) BandwidthRateSettingPropertiesPtrOutput {
	return o
}

func (o BandwidthRateSettingPropertiesPtrOutput) Elem() BandwidthRateSettingPropertiesOutput {
	return o.ApplyT(func(v *BandwidthRateSettingProperties) BandwidthRateSettingProperties { return *v }).(BandwidthRateSettingPropertiesOutput)
}

// The schedules.
func (o BandwidthRateSettingPropertiesPtrOutput) Schedules() BandwidthScheduleArrayOutput {
	return o.ApplyT(func(v *BandwidthRateSettingProperties) []BandwidthSchedule {
		if v == nil {
			return nil
		}
		return v.Schedules
	}).(BandwidthScheduleArrayOutput)
}

// The properties of the bandwidth setting.
type BandwidthRateSettingPropertiesResponse struct {
	// The schedules.
	Schedules []BandwidthScheduleResponse `pulumi:"schedules"`
	// The number of volumes that uses the bandwidth setting.
	VolumeCount int `pulumi:"volumeCount"`
}

// BandwidthRateSettingPropertiesResponseInput is an input type that accepts BandwidthRateSettingPropertiesResponseArgs and BandwidthRateSettingPropertiesResponseOutput values.
// You can construct a concrete instance of `BandwidthRateSettingPropertiesResponseInput` via:
//
//          BandwidthRateSettingPropertiesResponseArgs{...}
type BandwidthRateSettingPropertiesResponseInput interface {
	pulumi.Input

	ToBandwidthRateSettingPropertiesResponseOutput() BandwidthRateSettingPropertiesResponseOutput
	ToBandwidthRateSettingPropertiesResponseOutputWithContext(context.Context) BandwidthRateSettingPropertiesResponseOutput
}

// The properties of the bandwidth setting.
type BandwidthRateSettingPropertiesResponseArgs struct {
	// The schedules.
	Schedules BandwidthScheduleResponseArrayInput `pulumi:"schedules"`
	// The number of volumes that uses the bandwidth setting.
	VolumeCount pulumi.IntInput `pulumi:"volumeCount"`
}

func (BandwidthRateSettingPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthRateSettingPropertiesResponse)(nil)).Elem()
}

func (i BandwidthRateSettingPropertiesResponseArgs) ToBandwidthRateSettingPropertiesResponseOutput() BandwidthRateSettingPropertiesResponseOutput {
	return i.ToBandwidthRateSettingPropertiesResponseOutputWithContext(context.Background())
}

func (i BandwidthRateSettingPropertiesResponseArgs) ToBandwidthRateSettingPropertiesResponseOutputWithContext(ctx context.Context) BandwidthRateSettingPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthRateSettingPropertiesResponseOutput)
}

func (i BandwidthRateSettingPropertiesResponseArgs) ToBandwidthRateSettingPropertiesResponsePtrOutput() BandwidthRateSettingPropertiesResponsePtrOutput {
	return i.ToBandwidthRateSettingPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i BandwidthRateSettingPropertiesResponseArgs) ToBandwidthRateSettingPropertiesResponsePtrOutputWithContext(ctx context.Context) BandwidthRateSettingPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthRateSettingPropertiesResponseOutput).ToBandwidthRateSettingPropertiesResponsePtrOutputWithContext(ctx)
}

// BandwidthRateSettingPropertiesResponsePtrInput is an input type that accepts BandwidthRateSettingPropertiesResponseArgs, BandwidthRateSettingPropertiesResponsePtr and BandwidthRateSettingPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `BandwidthRateSettingPropertiesResponsePtrInput` via:
//
//          BandwidthRateSettingPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type BandwidthRateSettingPropertiesResponsePtrInput interface {
	pulumi.Input

	ToBandwidthRateSettingPropertiesResponsePtrOutput() BandwidthRateSettingPropertiesResponsePtrOutput
	ToBandwidthRateSettingPropertiesResponsePtrOutputWithContext(context.Context) BandwidthRateSettingPropertiesResponsePtrOutput
}

type bandwidthRateSettingPropertiesResponsePtrType BandwidthRateSettingPropertiesResponseArgs

func BandwidthRateSettingPropertiesResponsePtr(v *BandwidthRateSettingPropertiesResponseArgs) BandwidthRateSettingPropertiesResponsePtrInput {
	return (*bandwidthRateSettingPropertiesResponsePtrType)(v)
}

func (*bandwidthRateSettingPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BandwidthRateSettingPropertiesResponse)(nil)).Elem()
}

func (i *bandwidthRateSettingPropertiesResponsePtrType) ToBandwidthRateSettingPropertiesResponsePtrOutput() BandwidthRateSettingPropertiesResponsePtrOutput {
	return i.ToBandwidthRateSettingPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *bandwidthRateSettingPropertiesResponsePtrType) ToBandwidthRateSettingPropertiesResponsePtrOutputWithContext(ctx context.Context) BandwidthRateSettingPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthRateSettingPropertiesResponsePtrOutput)
}

// The properties of the bandwidth setting.
type BandwidthRateSettingPropertiesResponseOutput struct{ *pulumi.OutputState }

func (BandwidthRateSettingPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthRateSettingPropertiesResponse)(nil)).Elem()
}

func (o BandwidthRateSettingPropertiesResponseOutput) ToBandwidthRateSettingPropertiesResponseOutput() BandwidthRateSettingPropertiesResponseOutput {
	return o
}

func (o BandwidthRateSettingPropertiesResponseOutput) ToBandwidthRateSettingPropertiesResponseOutputWithContext(ctx context.Context) BandwidthRateSettingPropertiesResponseOutput {
	return o
}

func (o BandwidthRateSettingPropertiesResponseOutput) ToBandwidthRateSettingPropertiesResponsePtrOutput() BandwidthRateSettingPropertiesResponsePtrOutput {
	return o.ToBandwidthRateSettingPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o BandwidthRateSettingPropertiesResponseOutput) ToBandwidthRateSettingPropertiesResponsePtrOutputWithContext(ctx context.Context) BandwidthRateSettingPropertiesResponsePtrOutput {
	return o.ApplyT(func(v BandwidthRateSettingPropertiesResponse) *BandwidthRateSettingPropertiesResponse {
		return &v
	}).(BandwidthRateSettingPropertiesResponsePtrOutput)
}

// The schedules.
func (o BandwidthRateSettingPropertiesResponseOutput) Schedules() BandwidthScheduleResponseArrayOutput {
	return o.ApplyT(func(v BandwidthRateSettingPropertiesResponse) []BandwidthScheduleResponse { return v.Schedules }).(BandwidthScheduleResponseArrayOutput)
}

// The number of volumes that uses the bandwidth setting.
func (o BandwidthRateSettingPropertiesResponseOutput) VolumeCount() pulumi.IntOutput {
	return o.ApplyT(func(v BandwidthRateSettingPropertiesResponse) int { return v.VolumeCount }).(pulumi.IntOutput)
}

type BandwidthRateSettingPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (BandwidthRateSettingPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BandwidthRateSettingPropertiesResponse)(nil)).Elem()
}

func (o BandwidthRateSettingPropertiesResponsePtrOutput) ToBandwidthRateSettingPropertiesResponsePtrOutput() BandwidthRateSettingPropertiesResponsePtrOutput {
	return o
}

func (o BandwidthRateSettingPropertiesResponsePtrOutput) ToBandwidthRateSettingPropertiesResponsePtrOutputWithContext(ctx context.Context) BandwidthRateSettingPropertiesResponsePtrOutput {
	return o
}

func (o BandwidthRateSettingPropertiesResponsePtrOutput) Elem() BandwidthRateSettingPropertiesResponseOutput {
	return o.ApplyT(func(v *BandwidthRateSettingPropertiesResponse) BandwidthRateSettingPropertiesResponse { return *v }).(BandwidthRateSettingPropertiesResponseOutput)
}

// The schedules.
func (o BandwidthRateSettingPropertiesResponsePtrOutput) Schedules() BandwidthScheduleResponseArrayOutput {
	return o.ApplyT(func(v *BandwidthRateSettingPropertiesResponse) []BandwidthScheduleResponse {
		if v == nil {
			return nil
		}
		return v.Schedules
	}).(BandwidthScheduleResponseArrayOutput)
}

// The number of volumes that uses the bandwidth setting.
func (o BandwidthRateSettingPropertiesResponsePtrOutput) VolumeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BandwidthRateSettingPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.VolumeCount
	}).(pulumi.IntPtrOutput)
}

// The schedule for bandwidth setting.
type BandwidthSchedule struct {
	// The days of the week when this schedule is applicable.
	Days []string `pulumi:"days"`
	// The rate in Mbps.
	RateInMbps int `pulumi:"rateInMbps"`
	// The start time of the schedule.
	Start Time `pulumi:"start"`
	// The stop time of the schedule.
	Stop Time `pulumi:"stop"`
}

// BandwidthScheduleInput is an input type that accepts BandwidthScheduleArgs and BandwidthScheduleOutput values.
// You can construct a concrete instance of `BandwidthScheduleInput` via:
//
//          BandwidthScheduleArgs{...}
type BandwidthScheduleInput interface {
	pulumi.Input

	ToBandwidthScheduleOutput() BandwidthScheduleOutput
	ToBandwidthScheduleOutputWithContext(context.Context) BandwidthScheduleOutput
}

// The schedule for bandwidth setting.
type BandwidthScheduleArgs struct {
	// The days of the week when this schedule is applicable.
	Days pulumi.StringArrayInput `pulumi:"days"`
	// The rate in Mbps.
	RateInMbps pulumi.IntInput `pulumi:"rateInMbps"`
	// The start time of the schedule.
	Start TimeInput `pulumi:"start"`
	// The stop time of the schedule.
	Stop TimeInput `pulumi:"stop"`
}

func (BandwidthScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthSchedule)(nil)).Elem()
}

func (i BandwidthScheduleArgs) ToBandwidthScheduleOutput() BandwidthScheduleOutput {
	return i.ToBandwidthScheduleOutputWithContext(context.Background())
}

func (i BandwidthScheduleArgs) ToBandwidthScheduleOutputWithContext(ctx context.Context) BandwidthScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthScheduleOutput)
}

// BandwidthScheduleArrayInput is an input type that accepts BandwidthScheduleArray and BandwidthScheduleArrayOutput values.
// You can construct a concrete instance of `BandwidthScheduleArrayInput` via:
//
//          BandwidthScheduleArray{ BandwidthScheduleArgs{...} }
type BandwidthScheduleArrayInput interface {
	pulumi.Input

	ToBandwidthScheduleArrayOutput() BandwidthScheduleArrayOutput
	ToBandwidthScheduleArrayOutputWithContext(context.Context) BandwidthScheduleArrayOutput
}

type BandwidthScheduleArray []BandwidthScheduleInput

func (BandwidthScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BandwidthSchedule)(nil)).Elem()
}

func (i BandwidthScheduleArray) ToBandwidthScheduleArrayOutput() BandwidthScheduleArrayOutput {
	return i.ToBandwidthScheduleArrayOutputWithContext(context.Background())
}

func (i BandwidthScheduleArray) ToBandwidthScheduleArrayOutputWithContext(ctx context.Context) BandwidthScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthScheduleArrayOutput)
}

// The schedule for bandwidth setting.
type BandwidthScheduleOutput struct{ *pulumi.OutputState }

func (BandwidthScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthSchedule)(nil)).Elem()
}

func (o BandwidthScheduleOutput) ToBandwidthScheduleOutput() BandwidthScheduleOutput {
	return o
}

func (o BandwidthScheduleOutput) ToBandwidthScheduleOutputWithContext(ctx context.Context) BandwidthScheduleOutput {
	return o
}

// The days of the week when this schedule is applicable.
func (o BandwidthScheduleOutput) Days() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BandwidthSchedule) []string { return v.Days }).(pulumi.StringArrayOutput)
}

// The rate in Mbps.
func (o BandwidthScheduleOutput) RateInMbps() pulumi.IntOutput {
	return o.ApplyT(func(v BandwidthSchedule) int { return v.RateInMbps }).(pulumi.IntOutput)
}

// The start time of the schedule.
func (o BandwidthScheduleOutput) Start() TimeOutput {
	return o.ApplyT(func(v BandwidthSchedule) Time { return v.Start }).(TimeOutput)
}

// The stop time of the schedule.
func (o BandwidthScheduleOutput) Stop() TimeOutput {
	return o.ApplyT(func(v BandwidthSchedule) Time { return v.Stop }).(TimeOutput)
}

type BandwidthScheduleArrayOutput struct{ *pulumi.OutputState }

func (BandwidthScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BandwidthSchedule)(nil)).Elem()
}

func (o BandwidthScheduleArrayOutput) ToBandwidthScheduleArrayOutput() BandwidthScheduleArrayOutput {
	return o
}

func (o BandwidthScheduleArrayOutput) ToBandwidthScheduleArrayOutputWithContext(ctx context.Context) BandwidthScheduleArrayOutput {
	return o
}

func (o BandwidthScheduleArrayOutput) Index(i pulumi.IntInput) BandwidthScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BandwidthSchedule {
		return vs[0].([]BandwidthSchedule)[vs[1].(int)]
	}).(BandwidthScheduleOutput)
}

// The schedule for bandwidth setting.
type BandwidthScheduleResponse struct {
	// The days of the week when this schedule is applicable.
	Days []string `pulumi:"days"`
	// The rate in Mbps.
	RateInMbps int `pulumi:"rateInMbps"`
	// The start time of the schedule.
	Start TimeResponse `pulumi:"start"`
	// The stop time of the schedule.
	Stop TimeResponse `pulumi:"stop"`
}

// BandwidthScheduleResponseInput is an input type that accepts BandwidthScheduleResponseArgs and BandwidthScheduleResponseOutput values.
// You can construct a concrete instance of `BandwidthScheduleResponseInput` via:
//
//          BandwidthScheduleResponseArgs{...}
type BandwidthScheduleResponseInput interface {
	pulumi.Input

	ToBandwidthScheduleResponseOutput() BandwidthScheduleResponseOutput
	ToBandwidthScheduleResponseOutputWithContext(context.Context) BandwidthScheduleResponseOutput
}

// The schedule for bandwidth setting.
type BandwidthScheduleResponseArgs struct {
	// The days of the week when this schedule is applicable.
	Days pulumi.StringArrayInput `pulumi:"days"`
	// The rate in Mbps.
	RateInMbps pulumi.IntInput `pulumi:"rateInMbps"`
	// The start time of the schedule.
	Start TimeResponseInput `pulumi:"start"`
	// The stop time of the schedule.
	Stop TimeResponseInput `pulumi:"stop"`
}

func (BandwidthScheduleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthScheduleResponse)(nil)).Elem()
}

func (i BandwidthScheduleResponseArgs) ToBandwidthScheduleResponseOutput() BandwidthScheduleResponseOutput {
	return i.ToBandwidthScheduleResponseOutputWithContext(context.Background())
}

func (i BandwidthScheduleResponseArgs) ToBandwidthScheduleResponseOutputWithContext(ctx context.Context) BandwidthScheduleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthScheduleResponseOutput)
}

// BandwidthScheduleResponseArrayInput is an input type that accepts BandwidthScheduleResponseArray and BandwidthScheduleResponseArrayOutput values.
// You can construct a concrete instance of `BandwidthScheduleResponseArrayInput` via:
//
//          BandwidthScheduleResponseArray{ BandwidthScheduleResponseArgs{...} }
type BandwidthScheduleResponseArrayInput interface {
	pulumi.Input

	ToBandwidthScheduleResponseArrayOutput() BandwidthScheduleResponseArrayOutput
	ToBandwidthScheduleResponseArrayOutputWithContext(context.Context) BandwidthScheduleResponseArrayOutput
}

type BandwidthScheduleResponseArray []BandwidthScheduleResponseInput

func (BandwidthScheduleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BandwidthScheduleResponse)(nil)).Elem()
}

func (i BandwidthScheduleResponseArray) ToBandwidthScheduleResponseArrayOutput() BandwidthScheduleResponseArrayOutput {
	return i.ToBandwidthScheduleResponseArrayOutputWithContext(context.Background())
}

func (i BandwidthScheduleResponseArray) ToBandwidthScheduleResponseArrayOutputWithContext(ctx context.Context) BandwidthScheduleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthScheduleResponseArrayOutput)
}

// The schedule for bandwidth setting.
type BandwidthScheduleResponseOutput struct{ *pulumi.OutputState }

func (BandwidthScheduleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthScheduleResponse)(nil)).Elem()
}

func (o BandwidthScheduleResponseOutput) ToBandwidthScheduleResponseOutput() BandwidthScheduleResponseOutput {
	return o
}

func (o BandwidthScheduleResponseOutput) ToBandwidthScheduleResponseOutputWithContext(ctx context.Context) BandwidthScheduleResponseOutput {
	return o
}

// The days of the week when this schedule is applicable.
func (o BandwidthScheduleResponseOutput) Days() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BandwidthScheduleResponse) []string { return v.Days }).(pulumi.StringArrayOutput)
}

// The rate in Mbps.
func (o BandwidthScheduleResponseOutput) RateInMbps() pulumi.IntOutput {
	return o.ApplyT(func(v BandwidthScheduleResponse) int { return v.RateInMbps }).(pulumi.IntOutput)
}

// The start time of the schedule.
func (o BandwidthScheduleResponseOutput) Start() TimeResponseOutput {
	return o.ApplyT(func(v BandwidthScheduleResponse) TimeResponse { return v.Start }).(TimeResponseOutput)
}

// The stop time of the schedule.
func (o BandwidthScheduleResponseOutput) Stop() TimeResponseOutput {
	return o.ApplyT(func(v BandwidthScheduleResponse) TimeResponse { return v.Stop }).(TimeResponseOutput)
}

type BandwidthScheduleResponseArrayOutput struct{ *pulumi.OutputState }

func (BandwidthScheduleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BandwidthScheduleResponse)(nil)).Elem()
}

func (o BandwidthScheduleResponseArrayOutput) ToBandwidthScheduleResponseArrayOutput() BandwidthScheduleResponseArrayOutput {
	return o
}

func (o BandwidthScheduleResponseArrayOutput) ToBandwidthScheduleResponseArrayOutputWithContext(ctx context.Context) BandwidthScheduleResponseArrayOutput {
	return o
}

func (o BandwidthScheduleResponseArrayOutput) Index(i pulumi.IntInput) BandwidthScheduleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BandwidthScheduleResponse {
		return vs[0].([]BandwidthScheduleResponse)[vs[1].(int)]
	}).(BandwidthScheduleResponseOutput)
}

// Chap properties
type ChapProperties struct {
	// The chap password.
	Password AsymmetricEncryptedSecret `pulumi:"password"`
}

// ChapPropertiesInput is an input type that accepts ChapPropertiesArgs and ChapPropertiesOutput values.
// You can construct a concrete instance of `ChapPropertiesInput` via:
//
//          ChapPropertiesArgs{...}
type ChapPropertiesInput interface {
	pulumi.Input

	ToChapPropertiesOutput() ChapPropertiesOutput
	ToChapPropertiesOutputWithContext(context.Context) ChapPropertiesOutput
}

// Chap properties
type ChapPropertiesArgs struct {
	// The chap password.
	Password AsymmetricEncryptedSecretInput `pulumi:"password"`
}

func (ChapPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChapProperties)(nil)).Elem()
}

func (i ChapPropertiesArgs) ToChapPropertiesOutput() ChapPropertiesOutput {
	return i.ToChapPropertiesOutputWithContext(context.Background())
}

func (i ChapPropertiesArgs) ToChapPropertiesOutputWithContext(ctx context.Context) ChapPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChapPropertiesOutput)
}

func (i ChapPropertiesArgs) ToChapPropertiesPtrOutput() ChapPropertiesPtrOutput {
	return i.ToChapPropertiesPtrOutputWithContext(context.Background())
}

func (i ChapPropertiesArgs) ToChapPropertiesPtrOutputWithContext(ctx context.Context) ChapPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChapPropertiesOutput).ToChapPropertiesPtrOutputWithContext(ctx)
}

// ChapPropertiesPtrInput is an input type that accepts ChapPropertiesArgs, ChapPropertiesPtr and ChapPropertiesPtrOutput values.
// You can construct a concrete instance of `ChapPropertiesPtrInput` via:
//
//          ChapPropertiesArgs{...}
//
//  or:
//
//          nil
type ChapPropertiesPtrInput interface {
	pulumi.Input

	ToChapPropertiesPtrOutput() ChapPropertiesPtrOutput
	ToChapPropertiesPtrOutputWithContext(context.Context) ChapPropertiesPtrOutput
}

type chapPropertiesPtrType ChapPropertiesArgs

func ChapPropertiesPtr(v *ChapPropertiesArgs) ChapPropertiesPtrInput {
	return (*chapPropertiesPtrType)(v)
}

func (*chapPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChapProperties)(nil)).Elem()
}

func (i *chapPropertiesPtrType) ToChapPropertiesPtrOutput() ChapPropertiesPtrOutput {
	return i.ToChapPropertiesPtrOutputWithContext(context.Background())
}

func (i *chapPropertiesPtrType) ToChapPropertiesPtrOutputWithContext(ctx context.Context) ChapPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChapPropertiesPtrOutput)
}

// Chap properties
type ChapPropertiesOutput struct{ *pulumi.OutputState }

func (ChapPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChapProperties)(nil)).Elem()
}

func (o ChapPropertiesOutput) ToChapPropertiesOutput() ChapPropertiesOutput {
	return o
}

func (o ChapPropertiesOutput) ToChapPropertiesOutputWithContext(ctx context.Context) ChapPropertiesOutput {
	return o
}

func (o ChapPropertiesOutput) ToChapPropertiesPtrOutput() ChapPropertiesPtrOutput {
	return o.ToChapPropertiesPtrOutputWithContext(context.Background())
}

func (o ChapPropertiesOutput) ToChapPropertiesPtrOutputWithContext(ctx context.Context) ChapPropertiesPtrOutput {
	return o.ApplyT(func(v ChapProperties) *ChapProperties {
		return &v
	}).(ChapPropertiesPtrOutput)
}

// The chap password.
func (o ChapPropertiesOutput) Password() AsymmetricEncryptedSecretOutput {
	return o.ApplyT(func(v ChapProperties) AsymmetricEncryptedSecret { return v.Password }).(AsymmetricEncryptedSecretOutput)
}

type ChapPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ChapPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChapProperties)(nil)).Elem()
}

func (o ChapPropertiesPtrOutput) ToChapPropertiesPtrOutput() ChapPropertiesPtrOutput {
	return o
}

func (o ChapPropertiesPtrOutput) ToChapPropertiesPtrOutputWithContext(ctx context.Context) ChapPropertiesPtrOutput {
	return o
}

func (o ChapPropertiesPtrOutput) Elem() ChapPropertiesOutput {
	return o.ApplyT(func(v *ChapProperties) ChapProperties { return *v }).(ChapPropertiesOutput)
}

// The chap password.
func (o ChapPropertiesPtrOutput) Password() AsymmetricEncryptedSecretPtrOutput {
	return o.ApplyT(func(v *ChapProperties) *AsymmetricEncryptedSecret {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(AsymmetricEncryptedSecretPtrOutput)
}

// Chap properties
type ChapPropertiesResponse struct {
	// The chap password.
	Password AsymmetricEncryptedSecretResponse `pulumi:"password"`
}

// ChapPropertiesResponseInput is an input type that accepts ChapPropertiesResponseArgs and ChapPropertiesResponseOutput values.
// You can construct a concrete instance of `ChapPropertiesResponseInput` via:
//
//          ChapPropertiesResponseArgs{...}
type ChapPropertiesResponseInput interface {
	pulumi.Input

	ToChapPropertiesResponseOutput() ChapPropertiesResponseOutput
	ToChapPropertiesResponseOutputWithContext(context.Context) ChapPropertiesResponseOutput
}

// Chap properties
type ChapPropertiesResponseArgs struct {
	// The chap password.
	Password AsymmetricEncryptedSecretResponseInput `pulumi:"password"`
}

func (ChapPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChapPropertiesResponse)(nil)).Elem()
}

func (i ChapPropertiesResponseArgs) ToChapPropertiesResponseOutput() ChapPropertiesResponseOutput {
	return i.ToChapPropertiesResponseOutputWithContext(context.Background())
}

func (i ChapPropertiesResponseArgs) ToChapPropertiesResponseOutputWithContext(ctx context.Context) ChapPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChapPropertiesResponseOutput)
}

func (i ChapPropertiesResponseArgs) ToChapPropertiesResponsePtrOutput() ChapPropertiesResponsePtrOutput {
	return i.ToChapPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ChapPropertiesResponseArgs) ToChapPropertiesResponsePtrOutputWithContext(ctx context.Context) ChapPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChapPropertiesResponseOutput).ToChapPropertiesResponsePtrOutputWithContext(ctx)
}

// ChapPropertiesResponsePtrInput is an input type that accepts ChapPropertiesResponseArgs, ChapPropertiesResponsePtr and ChapPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ChapPropertiesResponsePtrInput` via:
//
//          ChapPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ChapPropertiesResponsePtrInput interface {
	pulumi.Input

	ToChapPropertiesResponsePtrOutput() ChapPropertiesResponsePtrOutput
	ToChapPropertiesResponsePtrOutputWithContext(context.Context) ChapPropertiesResponsePtrOutput
}

type chapPropertiesResponsePtrType ChapPropertiesResponseArgs

func ChapPropertiesResponsePtr(v *ChapPropertiesResponseArgs) ChapPropertiesResponsePtrInput {
	return (*chapPropertiesResponsePtrType)(v)
}

func (*chapPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChapPropertiesResponse)(nil)).Elem()
}

func (i *chapPropertiesResponsePtrType) ToChapPropertiesResponsePtrOutput() ChapPropertiesResponsePtrOutput {
	return i.ToChapPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *chapPropertiesResponsePtrType) ToChapPropertiesResponsePtrOutputWithContext(ctx context.Context) ChapPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChapPropertiesResponsePtrOutput)
}

// Chap properties
type ChapPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ChapPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChapPropertiesResponse)(nil)).Elem()
}

func (o ChapPropertiesResponseOutput) ToChapPropertiesResponseOutput() ChapPropertiesResponseOutput {
	return o
}

func (o ChapPropertiesResponseOutput) ToChapPropertiesResponseOutputWithContext(ctx context.Context) ChapPropertiesResponseOutput {
	return o
}

func (o ChapPropertiesResponseOutput) ToChapPropertiesResponsePtrOutput() ChapPropertiesResponsePtrOutput {
	return o.ToChapPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ChapPropertiesResponseOutput) ToChapPropertiesResponsePtrOutputWithContext(ctx context.Context) ChapPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ChapPropertiesResponse) *ChapPropertiesResponse {
		return &v
	}).(ChapPropertiesResponsePtrOutput)
}

// The chap password.
func (o ChapPropertiesResponseOutput) Password() AsymmetricEncryptedSecretResponseOutput {
	return o.ApplyT(func(v ChapPropertiesResponse) AsymmetricEncryptedSecretResponse { return v.Password }).(AsymmetricEncryptedSecretResponseOutput)
}

type ChapPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ChapPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChapPropertiesResponse)(nil)).Elem()
}

func (o ChapPropertiesResponsePtrOutput) ToChapPropertiesResponsePtrOutput() ChapPropertiesResponsePtrOutput {
	return o
}

func (o ChapPropertiesResponsePtrOutput) ToChapPropertiesResponsePtrOutputWithContext(ctx context.Context) ChapPropertiesResponsePtrOutput {
	return o
}

func (o ChapPropertiesResponsePtrOutput) Elem() ChapPropertiesResponseOutput {
	return o.ApplyT(func(v *ChapPropertiesResponse) ChapPropertiesResponse { return *v }).(ChapPropertiesResponseOutput)
}

// The chap password.
func (o ChapPropertiesResponsePtrOutput) Password() AsymmetricEncryptedSecretResponsePtrOutput {
	return o.ApplyT(func(v *ChapPropertiesResponse) *AsymmetricEncryptedSecretResponse {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(AsymmetricEncryptedSecretResponsePtrOutput)
}

// The file server properties.
type FileServerProperties struct {
	// The backup policy id.
	BackupScheduleGroupId string `pulumi:"backupScheduleGroupId"`
	// The description of the file server
	Description *string `pulumi:"description"`
	// Domain of the file server
	DomainName string `pulumi:"domainName"`
	// The storage domain id.
	StorageDomainId string `pulumi:"storageDomainId"`
}

// FileServerPropertiesInput is an input type that accepts FileServerPropertiesArgs and FileServerPropertiesOutput values.
// You can construct a concrete instance of `FileServerPropertiesInput` via:
//
//          FileServerPropertiesArgs{...}
type FileServerPropertiesInput interface {
	pulumi.Input

	ToFileServerPropertiesOutput() FileServerPropertiesOutput
	ToFileServerPropertiesOutputWithContext(context.Context) FileServerPropertiesOutput
}

// The file server properties.
type FileServerPropertiesArgs struct {
	// The backup policy id.
	BackupScheduleGroupId pulumi.StringInput `pulumi:"backupScheduleGroupId"`
	// The description of the file server
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Domain of the file server
	DomainName pulumi.StringInput `pulumi:"domainName"`
	// The storage domain id.
	StorageDomainId pulumi.StringInput `pulumi:"storageDomainId"`
}

func (FileServerPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileServerProperties)(nil)).Elem()
}

func (i FileServerPropertiesArgs) ToFileServerPropertiesOutput() FileServerPropertiesOutput {
	return i.ToFileServerPropertiesOutputWithContext(context.Background())
}

func (i FileServerPropertiesArgs) ToFileServerPropertiesOutputWithContext(ctx context.Context) FileServerPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileServerPropertiesOutput)
}

func (i FileServerPropertiesArgs) ToFileServerPropertiesPtrOutput() FileServerPropertiesPtrOutput {
	return i.ToFileServerPropertiesPtrOutputWithContext(context.Background())
}

func (i FileServerPropertiesArgs) ToFileServerPropertiesPtrOutputWithContext(ctx context.Context) FileServerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileServerPropertiesOutput).ToFileServerPropertiesPtrOutputWithContext(ctx)
}

// FileServerPropertiesPtrInput is an input type that accepts FileServerPropertiesArgs, FileServerPropertiesPtr and FileServerPropertiesPtrOutput values.
// You can construct a concrete instance of `FileServerPropertiesPtrInput` via:
//
//          FileServerPropertiesArgs{...}
//
//  or:
//
//          nil
type FileServerPropertiesPtrInput interface {
	pulumi.Input

	ToFileServerPropertiesPtrOutput() FileServerPropertiesPtrOutput
	ToFileServerPropertiesPtrOutputWithContext(context.Context) FileServerPropertiesPtrOutput
}

type fileServerPropertiesPtrType FileServerPropertiesArgs

func FileServerPropertiesPtr(v *FileServerPropertiesArgs) FileServerPropertiesPtrInput {
	return (*fileServerPropertiesPtrType)(v)
}

func (*fileServerPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FileServerProperties)(nil)).Elem()
}

func (i *fileServerPropertiesPtrType) ToFileServerPropertiesPtrOutput() FileServerPropertiesPtrOutput {
	return i.ToFileServerPropertiesPtrOutputWithContext(context.Background())
}

func (i *fileServerPropertiesPtrType) ToFileServerPropertiesPtrOutputWithContext(ctx context.Context) FileServerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileServerPropertiesPtrOutput)
}

// The file server properties.
type FileServerPropertiesOutput struct{ *pulumi.OutputState }

func (FileServerPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileServerProperties)(nil)).Elem()
}

func (o FileServerPropertiesOutput) ToFileServerPropertiesOutput() FileServerPropertiesOutput {
	return o
}

func (o FileServerPropertiesOutput) ToFileServerPropertiesOutputWithContext(ctx context.Context) FileServerPropertiesOutput {
	return o
}

func (o FileServerPropertiesOutput) ToFileServerPropertiesPtrOutput() FileServerPropertiesPtrOutput {
	return o.ToFileServerPropertiesPtrOutputWithContext(context.Background())
}

func (o FileServerPropertiesOutput) ToFileServerPropertiesPtrOutputWithContext(ctx context.Context) FileServerPropertiesPtrOutput {
	return o.ApplyT(func(v FileServerProperties) *FileServerProperties {
		return &v
	}).(FileServerPropertiesPtrOutput)
}

// The backup policy id.
func (o FileServerPropertiesOutput) BackupScheduleGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v FileServerProperties) string { return v.BackupScheduleGroupId }).(pulumi.StringOutput)
}

// The description of the file server
func (o FileServerPropertiesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileServerProperties) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Domain of the file server
func (o FileServerPropertiesOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v FileServerProperties) string { return v.DomainName }).(pulumi.StringOutput)
}

// The storage domain id.
func (o FileServerPropertiesOutput) StorageDomainId() pulumi.StringOutput {
	return o.ApplyT(func(v FileServerProperties) string { return v.StorageDomainId }).(pulumi.StringOutput)
}

type FileServerPropertiesPtrOutput struct{ *pulumi.OutputState }

func (FileServerPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FileServerProperties)(nil)).Elem()
}

func (o FileServerPropertiesPtrOutput) ToFileServerPropertiesPtrOutput() FileServerPropertiesPtrOutput {
	return o
}

func (o FileServerPropertiesPtrOutput) ToFileServerPropertiesPtrOutputWithContext(ctx context.Context) FileServerPropertiesPtrOutput {
	return o
}

func (o FileServerPropertiesPtrOutput) Elem() FileServerPropertiesOutput {
	return o.ApplyT(func(v *FileServerProperties) FileServerProperties { return *v }).(FileServerPropertiesOutput)
}

// The backup policy id.
func (o FileServerPropertiesPtrOutput) BackupScheduleGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileServerProperties) *string {
		if v == nil {
			return nil
		}
		return &v.BackupScheduleGroupId
	}).(pulumi.StringPtrOutput)
}

// The description of the file server
func (o FileServerPropertiesPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileServerProperties) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Domain of the file server
func (o FileServerPropertiesPtrOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileServerProperties) *string {
		if v == nil {
			return nil
		}
		return &v.DomainName
	}).(pulumi.StringPtrOutput)
}

// The storage domain id.
func (o FileServerPropertiesPtrOutput) StorageDomainId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileServerProperties) *string {
		if v == nil {
			return nil
		}
		return &v.StorageDomainId
	}).(pulumi.StringPtrOutput)
}

// The file server properties.
type FileServerPropertiesResponse struct {
	// The backup policy id.
	BackupScheduleGroupId string `pulumi:"backupScheduleGroupId"`
	// The description of the file server
	Description *string `pulumi:"description"`
	// Domain of the file server
	DomainName string `pulumi:"domainName"`
	// The storage domain id.
	StorageDomainId string `pulumi:"storageDomainId"`
}

// FileServerPropertiesResponseInput is an input type that accepts FileServerPropertiesResponseArgs and FileServerPropertiesResponseOutput values.
// You can construct a concrete instance of `FileServerPropertiesResponseInput` via:
//
//          FileServerPropertiesResponseArgs{...}
type FileServerPropertiesResponseInput interface {
	pulumi.Input

	ToFileServerPropertiesResponseOutput() FileServerPropertiesResponseOutput
	ToFileServerPropertiesResponseOutputWithContext(context.Context) FileServerPropertiesResponseOutput
}

// The file server properties.
type FileServerPropertiesResponseArgs struct {
	// The backup policy id.
	BackupScheduleGroupId pulumi.StringInput `pulumi:"backupScheduleGroupId"`
	// The description of the file server
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Domain of the file server
	DomainName pulumi.StringInput `pulumi:"domainName"`
	// The storage domain id.
	StorageDomainId pulumi.StringInput `pulumi:"storageDomainId"`
}

func (FileServerPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileServerPropertiesResponse)(nil)).Elem()
}

func (i FileServerPropertiesResponseArgs) ToFileServerPropertiesResponseOutput() FileServerPropertiesResponseOutput {
	return i.ToFileServerPropertiesResponseOutputWithContext(context.Background())
}

func (i FileServerPropertiesResponseArgs) ToFileServerPropertiesResponseOutputWithContext(ctx context.Context) FileServerPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileServerPropertiesResponseOutput)
}

func (i FileServerPropertiesResponseArgs) ToFileServerPropertiesResponsePtrOutput() FileServerPropertiesResponsePtrOutput {
	return i.ToFileServerPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i FileServerPropertiesResponseArgs) ToFileServerPropertiesResponsePtrOutputWithContext(ctx context.Context) FileServerPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileServerPropertiesResponseOutput).ToFileServerPropertiesResponsePtrOutputWithContext(ctx)
}

// FileServerPropertiesResponsePtrInput is an input type that accepts FileServerPropertiesResponseArgs, FileServerPropertiesResponsePtr and FileServerPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `FileServerPropertiesResponsePtrInput` via:
//
//          FileServerPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type FileServerPropertiesResponsePtrInput interface {
	pulumi.Input

	ToFileServerPropertiesResponsePtrOutput() FileServerPropertiesResponsePtrOutput
	ToFileServerPropertiesResponsePtrOutputWithContext(context.Context) FileServerPropertiesResponsePtrOutput
}

type fileServerPropertiesResponsePtrType FileServerPropertiesResponseArgs

func FileServerPropertiesResponsePtr(v *FileServerPropertiesResponseArgs) FileServerPropertiesResponsePtrInput {
	return (*fileServerPropertiesResponsePtrType)(v)
}

func (*fileServerPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FileServerPropertiesResponse)(nil)).Elem()
}

func (i *fileServerPropertiesResponsePtrType) ToFileServerPropertiesResponsePtrOutput() FileServerPropertiesResponsePtrOutput {
	return i.ToFileServerPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *fileServerPropertiesResponsePtrType) ToFileServerPropertiesResponsePtrOutputWithContext(ctx context.Context) FileServerPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileServerPropertiesResponsePtrOutput)
}

// The file server properties.
type FileServerPropertiesResponseOutput struct{ *pulumi.OutputState }

func (FileServerPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileServerPropertiesResponse)(nil)).Elem()
}

func (o FileServerPropertiesResponseOutput) ToFileServerPropertiesResponseOutput() FileServerPropertiesResponseOutput {
	return o
}

func (o FileServerPropertiesResponseOutput) ToFileServerPropertiesResponseOutputWithContext(ctx context.Context) FileServerPropertiesResponseOutput {
	return o
}

func (o FileServerPropertiesResponseOutput) ToFileServerPropertiesResponsePtrOutput() FileServerPropertiesResponsePtrOutput {
	return o.ToFileServerPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o FileServerPropertiesResponseOutput) ToFileServerPropertiesResponsePtrOutputWithContext(ctx context.Context) FileServerPropertiesResponsePtrOutput {
	return o.ApplyT(func(v FileServerPropertiesResponse) *FileServerPropertiesResponse {
		return &v
	}).(FileServerPropertiesResponsePtrOutput)
}

// The backup policy id.
func (o FileServerPropertiesResponseOutput) BackupScheduleGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v FileServerPropertiesResponse) string { return v.BackupScheduleGroupId }).(pulumi.StringOutput)
}

// The description of the file server
func (o FileServerPropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileServerPropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Domain of the file server
func (o FileServerPropertiesResponseOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v FileServerPropertiesResponse) string { return v.DomainName }).(pulumi.StringOutput)
}

// The storage domain id.
func (o FileServerPropertiesResponseOutput) StorageDomainId() pulumi.StringOutput {
	return o.ApplyT(func(v FileServerPropertiesResponse) string { return v.StorageDomainId }).(pulumi.StringOutput)
}

type FileServerPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (FileServerPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FileServerPropertiesResponse)(nil)).Elem()
}

func (o FileServerPropertiesResponsePtrOutput) ToFileServerPropertiesResponsePtrOutput() FileServerPropertiesResponsePtrOutput {
	return o
}

func (o FileServerPropertiesResponsePtrOutput) ToFileServerPropertiesResponsePtrOutputWithContext(ctx context.Context) FileServerPropertiesResponsePtrOutput {
	return o
}

func (o FileServerPropertiesResponsePtrOutput) Elem() FileServerPropertiesResponseOutput {
	return o.ApplyT(func(v *FileServerPropertiesResponse) FileServerPropertiesResponse { return *v }).(FileServerPropertiesResponseOutput)
}

// The backup policy id.
func (o FileServerPropertiesResponsePtrOutput) BackupScheduleGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileServerPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.BackupScheduleGroupId
	}).(pulumi.StringPtrOutput)
}

// The description of the file server
func (o FileServerPropertiesResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileServerPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Domain of the file server
func (o FileServerPropertiesResponsePtrOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileServerPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DomainName
	}).(pulumi.StringPtrOutput)
}

// The storage domain id.
func (o FileServerPropertiesResponsePtrOutput) StorageDomainId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileServerPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StorageDomainId
	}).(pulumi.StringPtrOutput)
}

// The File Share.
type FileShareProperties struct {
	// The user/group who will have full permission in this share. Active directory email address. Example: xyz@contoso.com or Contoso\xyz.
	AdminUser string `pulumi:"adminUser"`
	// The data policy
	DataPolicy string `pulumi:"dataPolicy"`
	// Description for file share
	Description *string `pulumi:"description"`
	// The monitoring status
	MonitoringStatus string `pulumi:"monitoringStatus"`
	// The total provisioned capacity in Bytes
	ProvisionedCapacityInBytes int `pulumi:"provisionedCapacityInBytes"`
	// The Share Status
	ShareStatus string `pulumi:"shareStatus"`
}

// FileSharePropertiesInput is an input type that accepts FileSharePropertiesArgs and FileSharePropertiesOutput values.
// You can construct a concrete instance of `FileSharePropertiesInput` via:
//
//          FileSharePropertiesArgs{...}
type FileSharePropertiesInput interface {
	pulumi.Input

	ToFileSharePropertiesOutput() FileSharePropertiesOutput
	ToFileSharePropertiesOutputWithContext(context.Context) FileSharePropertiesOutput
}

// The File Share.
type FileSharePropertiesArgs struct {
	// The user/group who will have full permission in this share. Active directory email address. Example: xyz@contoso.com or Contoso\xyz.
	AdminUser pulumi.StringInput `pulumi:"adminUser"`
	// The data policy
	DataPolicy pulumi.StringInput `pulumi:"dataPolicy"`
	// Description for file share
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The monitoring status
	MonitoringStatus pulumi.StringInput `pulumi:"monitoringStatus"`
	// The total provisioned capacity in Bytes
	ProvisionedCapacityInBytes pulumi.IntInput `pulumi:"provisionedCapacityInBytes"`
	// The Share Status
	ShareStatus pulumi.StringInput `pulumi:"shareStatus"`
}

func (FileSharePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileShareProperties)(nil)).Elem()
}

func (i FileSharePropertiesArgs) ToFileSharePropertiesOutput() FileSharePropertiesOutput {
	return i.ToFileSharePropertiesOutputWithContext(context.Background())
}

func (i FileSharePropertiesArgs) ToFileSharePropertiesOutputWithContext(ctx context.Context) FileSharePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSharePropertiesOutput)
}

func (i FileSharePropertiesArgs) ToFileSharePropertiesPtrOutput() FileSharePropertiesPtrOutput {
	return i.ToFileSharePropertiesPtrOutputWithContext(context.Background())
}

func (i FileSharePropertiesArgs) ToFileSharePropertiesPtrOutputWithContext(ctx context.Context) FileSharePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSharePropertiesOutput).ToFileSharePropertiesPtrOutputWithContext(ctx)
}

// FileSharePropertiesPtrInput is an input type that accepts FileSharePropertiesArgs, FileSharePropertiesPtr and FileSharePropertiesPtrOutput values.
// You can construct a concrete instance of `FileSharePropertiesPtrInput` via:
//
//          FileSharePropertiesArgs{...}
//
//  or:
//
//          nil
type FileSharePropertiesPtrInput interface {
	pulumi.Input

	ToFileSharePropertiesPtrOutput() FileSharePropertiesPtrOutput
	ToFileSharePropertiesPtrOutputWithContext(context.Context) FileSharePropertiesPtrOutput
}

type fileSharePropertiesPtrType FileSharePropertiesArgs

func FileSharePropertiesPtr(v *FileSharePropertiesArgs) FileSharePropertiesPtrInput {
	return (*fileSharePropertiesPtrType)(v)
}

func (*fileSharePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FileShareProperties)(nil)).Elem()
}

func (i *fileSharePropertiesPtrType) ToFileSharePropertiesPtrOutput() FileSharePropertiesPtrOutput {
	return i.ToFileSharePropertiesPtrOutputWithContext(context.Background())
}

func (i *fileSharePropertiesPtrType) ToFileSharePropertiesPtrOutputWithContext(ctx context.Context) FileSharePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSharePropertiesPtrOutput)
}

// The File Share.
type FileSharePropertiesOutput struct{ *pulumi.OutputState }

func (FileSharePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileShareProperties)(nil)).Elem()
}

func (o FileSharePropertiesOutput) ToFileSharePropertiesOutput() FileSharePropertiesOutput {
	return o
}

func (o FileSharePropertiesOutput) ToFileSharePropertiesOutputWithContext(ctx context.Context) FileSharePropertiesOutput {
	return o
}

func (o FileSharePropertiesOutput) ToFileSharePropertiesPtrOutput() FileSharePropertiesPtrOutput {
	return o.ToFileSharePropertiesPtrOutputWithContext(context.Background())
}

func (o FileSharePropertiesOutput) ToFileSharePropertiesPtrOutputWithContext(ctx context.Context) FileSharePropertiesPtrOutput {
	return o.ApplyT(func(v FileShareProperties) *FileShareProperties {
		return &v
	}).(FileSharePropertiesPtrOutput)
}

// The user/group who will have full permission in this share. Active directory email address. Example: xyz@contoso.com or Contoso\xyz.
func (o FileSharePropertiesOutput) AdminUser() pulumi.StringOutput {
	return o.ApplyT(func(v FileShareProperties) string { return v.AdminUser }).(pulumi.StringOutput)
}

// The data policy
func (o FileSharePropertiesOutput) DataPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v FileShareProperties) string { return v.DataPolicy }).(pulumi.StringOutput)
}

// Description for file share
func (o FileSharePropertiesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileShareProperties) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The monitoring status
func (o FileSharePropertiesOutput) MonitoringStatus() pulumi.StringOutput {
	return o.ApplyT(func(v FileShareProperties) string { return v.MonitoringStatus }).(pulumi.StringOutput)
}

// The total provisioned capacity in Bytes
func (o FileSharePropertiesOutput) ProvisionedCapacityInBytes() pulumi.IntOutput {
	return o.ApplyT(func(v FileShareProperties) int { return v.ProvisionedCapacityInBytes }).(pulumi.IntOutput)
}

// The Share Status
func (o FileSharePropertiesOutput) ShareStatus() pulumi.StringOutput {
	return o.ApplyT(func(v FileShareProperties) string { return v.ShareStatus }).(pulumi.StringOutput)
}

type FileSharePropertiesPtrOutput struct{ *pulumi.OutputState }

func (FileSharePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FileShareProperties)(nil)).Elem()
}

func (o FileSharePropertiesPtrOutput) ToFileSharePropertiesPtrOutput() FileSharePropertiesPtrOutput {
	return o
}

func (o FileSharePropertiesPtrOutput) ToFileSharePropertiesPtrOutputWithContext(ctx context.Context) FileSharePropertiesPtrOutput {
	return o
}

func (o FileSharePropertiesPtrOutput) Elem() FileSharePropertiesOutput {
	return o.ApplyT(func(v *FileShareProperties) FileShareProperties { return *v }).(FileSharePropertiesOutput)
}

// The user/group who will have full permission in this share. Active directory email address. Example: xyz@contoso.com or Contoso\xyz.
func (o FileSharePropertiesPtrOutput) AdminUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileShareProperties) *string {
		if v == nil {
			return nil
		}
		return &v.AdminUser
	}).(pulumi.StringPtrOutput)
}

// The data policy
func (o FileSharePropertiesPtrOutput) DataPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileShareProperties) *string {
		if v == nil {
			return nil
		}
		return &v.DataPolicy
	}).(pulumi.StringPtrOutput)
}

// Description for file share
func (o FileSharePropertiesPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileShareProperties) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The monitoring status
func (o FileSharePropertiesPtrOutput) MonitoringStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileShareProperties) *string {
		if v == nil {
			return nil
		}
		return &v.MonitoringStatus
	}).(pulumi.StringPtrOutput)
}

// The total provisioned capacity in Bytes
func (o FileSharePropertiesPtrOutput) ProvisionedCapacityInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FileShareProperties) *int {
		if v == nil {
			return nil
		}
		return &v.ProvisionedCapacityInBytes
	}).(pulumi.IntPtrOutput)
}

// The Share Status
func (o FileSharePropertiesPtrOutput) ShareStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileShareProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ShareStatus
	}).(pulumi.StringPtrOutput)
}

// The File Share.
type FileSharePropertiesResponse struct {
	// The user/group who will have full permission in this share. Active directory email address. Example: xyz@contoso.com or Contoso\xyz.
	AdminUser string `pulumi:"adminUser"`
	// The data policy
	DataPolicy string `pulumi:"dataPolicy"`
	// Description for file share
	Description *string `pulumi:"description"`
	// The local used capacity in Bytes.
	LocalUsedCapacityInBytes int `pulumi:"localUsedCapacityInBytes"`
	// The monitoring status
	MonitoringStatus string `pulumi:"monitoringStatus"`
	// The total provisioned capacity in Bytes
	ProvisionedCapacityInBytes int `pulumi:"provisionedCapacityInBytes"`
	// The Share Status
	ShareStatus string `pulumi:"shareStatus"`
	// The used capacity in Bytes.
	UsedCapacityInBytes int `pulumi:"usedCapacityInBytes"`
}

// FileSharePropertiesResponseInput is an input type that accepts FileSharePropertiesResponseArgs and FileSharePropertiesResponseOutput values.
// You can construct a concrete instance of `FileSharePropertiesResponseInput` via:
//
//          FileSharePropertiesResponseArgs{...}
type FileSharePropertiesResponseInput interface {
	pulumi.Input

	ToFileSharePropertiesResponseOutput() FileSharePropertiesResponseOutput
	ToFileSharePropertiesResponseOutputWithContext(context.Context) FileSharePropertiesResponseOutput
}

// The File Share.
type FileSharePropertiesResponseArgs struct {
	// The user/group who will have full permission in this share. Active directory email address. Example: xyz@contoso.com or Contoso\xyz.
	AdminUser pulumi.StringInput `pulumi:"adminUser"`
	// The data policy
	DataPolicy pulumi.StringInput `pulumi:"dataPolicy"`
	// Description for file share
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The local used capacity in Bytes.
	LocalUsedCapacityInBytes pulumi.IntInput `pulumi:"localUsedCapacityInBytes"`
	// The monitoring status
	MonitoringStatus pulumi.StringInput `pulumi:"monitoringStatus"`
	// The total provisioned capacity in Bytes
	ProvisionedCapacityInBytes pulumi.IntInput `pulumi:"provisionedCapacityInBytes"`
	// The Share Status
	ShareStatus pulumi.StringInput `pulumi:"shareStatus"`
	// The used capacity in Bytes.
	UsedCapacityInBytes pulumi.IntInput `pulumi:"usedCapacityInBytes"`
}

func (FileSharePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSharePropertiesResponse)(nil)).Elem()
}

func (i FileSharePropertiesResponseArgs) ToFileSharePropertiesResponseOutput() FileSharePropertiesResponseOutput {
	return i.ToFileSharePropertiesResponseOutputWithContext(context.Background())
}

func (i FileSharePropertiesResponseArgs) ToFileSharePropertiesResponseOutputWithContext(ctx context.Context) FileSharePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSharePropertiesResponseOutput)
}

func (i FileSharePropertiesResponseArgs) ToFileSharePropertiesResponsePtrOutput() FileSharePropertiesResponsePtrOutput {
	return i.ToFileSharePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i FileSharePropertiesResponseArgs) ToFileSharePropertiesResponsePtrOutputWithContext(ctx context.Context) FileSharePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSharePropertiesResponseOutput).ToFileSharePropertiesResponsePtrOutputWithContext(ctx)
}

// FileSharePropertiesResponsePtrInput is an input type that accepts FileSharePropertiesResponseArgs, FileSharePropertiesResponsePtr and FileSharePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `FileSharePropertiesResponsePtrInput` via:
//
//          FileSharePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type FileSharePropertiesResponsePtrInput interface {
	pulumi.Input

	ToFileSharePropertiesResponsePtrOutput() FileSharePropertiesResponsePtrOutput
	ToFileSharePropertiesResponsePtrOutputWithContext(context.Context) FileSharePropertiesResponsePtrOutput
}

type fileSharePropertiesResponsePtrType FileSharePropertiesResponseArgs

func FileSharePropertiesResponsePtr(v *FileSharePropertiesResponseArgs) FileSharePropertiesResponsePtrInput {
	return (*fileSharePropertiesResponsePtrType)(v)
}

func (*fileSharePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FileSharePropertiesResponse)(nil)).Elem()
}

func (i *fileSharePropertiesResponsePtrType) ToFileSharePropertiesResponsePtrOutput() FileSharePropertiesResponsePtrOutput {
	return i.ToFileSharePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *fileSharePropertiesResponsePtrType) ToFileSharePropertiesResponsePtrOutputWithContext(ctx context.Context) FileSharePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSharePropertiesResponsePtrOutput)
}

// The File Share.
type FileSharePropertiesResponseOutput struct{ *pulumi.OutputState }

func (FileSharePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSharePropertiesResponse)(nil)).Elem()
}

func (o FileSharePropertiesResponseOutput) ToFileSharePropertiesResponseOutput() FileSharePropertiesResponseOutput {
	return o
}

func (o FileSharePropertiesResponseOutput) ToFileSharePropertiesResponseOutputWithContext(ctx context.Context) FileSharePropertiesResponseOutput {
	return o
}

func (o FileSharePropertiesResponseOutput) ToFileSharePropertiesResponsePtrOutput() FileSharePropertiesResponsePtrOutput {
	return o.ToFileSharePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o FileSharePropertiesResponseOutput) ToFileSharePropertiesResponsePtrOutputWithContext(ctx context.Context) FileSharePropertiesResponsePtrOutput {
	return o.ApplyT(func(v FileSharePropertiesResponse) *FileSharePropertiesResponse {
		return &v
	}).(FileSharePropertiesResponsePtrOutput)
}

// The user/group who will have full permission in this share. Active directory email address. Example: xyz@contoso.com or Contoso\xyz.
func (o FileSharePropertiesResponseOutput) AdminUser() pulumi.StringOutput {
	return o.ApplyT(func(v FileSharePropertiesResponse) string { return v.AdminUser }).(pulumi.StringOutput)
}

// The data policy
func (o FileSharePropertiesResponseOutput) DataPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v FileSharePropertiesResponse) string { return v.DataPolicy }).(pulumi.StringOutput)
}

// Description for file share
func (o FileSharePropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileSharePropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The local used capacity in Bytes.
func (o FileSharePropertiesResponseOutput) LocalUsedCapacityInBytes() pulumi.IntOutput {
	return o.ApplyT(func(v FileSharePropertiesResponse) int { return v.LocalUsedCapacityInBytes }).(pulumi.IntOutput)
}

// The monitoring status
func (o FileSharePropertiesResponseOutput) MonitoringStatus() pulumi.StringOutput {
	return o.ApplyT(func(v FileSharePropertiesResponse) string { return v.MonitoringStatus }).(pulumi.StringOutput)
}

// The total provisioned capacity in Bytes
func (o FileSharePropertiesResponseOutput) ProvisionedCapacityInBytes() pulumi.IntOutput {
	return o.ApplyT(func(v FileSharePropertiesResponse) int { return v.ProvisionedCapacityInBytes }).(pulumi.IntOutput)
}

// The Share Status
func (o FileSharePropertiesResponseOutput) ShareStatus() pulumi.StringOutput {
	return o.ApplyT(func(v FileSharePropertiesResponse) string { return v.ShareStatus }).(pulumi.StringOutput)
}

// The used capacity in Bytes.
func (o FileSharePropertiesResponseOutput) UsedCapacityInBytes() pulumi.IntOutput {
	return o.ApplyT(func(v FileSharePropertiesResponse) int { return v.UsedCapacityInBytes }).(pulumi.IntOutput)
}

type FileSharePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (FileSharePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FileSharePropertiesResponse)(nil)).Elem()
}

func (o FileSharePropertiesResponsePtrOutput) ToFileSharePropertiesResponsePtrOutput() FileSharePropertiesResponsePtrOutput {
	return o
}

func (o FileSharePropertiesResponsePtrOutput) ToFileSharePropertiesResponsePtrOutputWithContext(ctx context.Context) FileSharePropertiesResponsePtrOutput {
	return o
}

func (o FileSharePropertiesResponsePtrOutput) Elem() FileSharePropertiesResponseOutput {
	return o.ApplyT(func(v *FileSharePropertiesResponse) FileSharePropertiesResponse { return *v }).(FileSharePropertiesResponseOutput)
}

// The user/group who will have full permission in this share. Active directory email address. Example: xyz@contoso.com or Contoso\xyz.
func (o FileSharePropertiesResponsePtrOutput) AdminUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileSharePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AdminUser
	}).(pulumi.StringPtrOutput)
}

// The data policy
func (o FileSharePropertiesResponsePtrOutput) DataPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileSharePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DataPolicy
	}).(pulumi.StringPtrOutput)
}

// Description for file share
func (o FileSharePropertiesResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileSharePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The local used capacity in Bytes.
func (o FileSharePropertiesResponsePtrOutput) LocalUsedCapacityInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FileSharePropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.LocalUsedCapacityInBytes
	}).(pulumi.IntPtrOutput)
}

// The monitoring status
func (o FileSharePropertiesResponsePtrOutput) MonitoringStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileSharePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MonitoringStatus
	}).(pulumi.StringPtrOutput)
}

// The total provisioned capacity in Bytes
func (o FileSharePropertiesResponsePtrOutput) ProvisionedCapacityInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FileSharePropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.ProvisionedCapacityInBytes
	}).(pulumi.IntPtrOutput)
}

// The Share Status
func (o FileSharePropertiesResponsePtrOutput) ShareStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileSharePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ShareStatus
	}).(pulumi.StringPtrOutput)
}

// The used capacity in Bytes.
func (o FileSharePropertiesResponsePtrOutput) UsedCapacityInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FileSharePropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.UsedCapacityInBytes
	}).(pulumi.IntPtrOutput)
}

// The iSCSI disk properties.
type ISCSIDiskProperties struct {
	// The access control records.
	AccessControlRecords []string `pulumi:"accessControlRecords"`
	// The data policy.
	DataPolicy string `pulumi:"dataPolicy"`
	// The description.
	Description *string `pulumi:"description"`
	// The disk status.
	DiskStatus string `pulumi:"diskStatus"`
	// The monitoring.
	MonitoringStatus string `pulumi:"monitoringStatus"`
	// The provisioned capacity in bytes.
	ProvisionedCapacityInBytes int `pulumi:"provisionedCapacityInBytes"`
}

// ISCSIDiskPropertiesInput is an input type that accepts ISCSIDiskPropertiesArgs and ISCSIDiskPropertiesOutput values.
// You can construct a concrete instance of `ISCSIDiskPropertiesInput` via:
//
//          ISCSIDiskPropertiesArgs{...}
type ISCSIDiskPropertiesInput interface {
	pulumi.Input

	ToISCSIDiskPropertiesOutput() ISCSIDiskPropertiesOutput
	ToISCSIDiskPropertiesOutputWithContext(context.Context) ISCSIDiskPropertiesOutput
}

// The iSCSI disk properties.
type ISCSIDiskPropertiesArgs struct {
	// The access control records.
	AccessControlRecords pulumi.StringArrayInput `pulumi:"accessControlRecords"`
	// The data policy.
	DataPolicy pulumi.StringInput `pulumi:"dataPolicy"`
	// The description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The disk status.
	DiskStatus pulumi.StringInput `pulumi:"diskStatus"`
	// The monitoring.
	MonitoringStatus pulumi.StringInput `pulumi:"monitoringStatus"`
	// The provisioned capacity in bytes.
	ProvisionedCapacityInBytes pulumi.IntInput `pulumi:"provisionedCapacityInBytes"`
}

func (ISCSIDiskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ISCSIDiskProperties)(nil)).Elem()
}

func (i ISCSIDiskPropertiesArgs) ToISCSIDiskPropertiesOutput() ISCSIDiskPropertiesOutput {
	return i.ToISCSIDiskPropertiesOutputWithContext(context.Background())
}

func (i ISCSIDiskPropertiesArgs) ToISCSIDiskPropertiesOutputWithContext(ctx context.Context) ISCSIDiskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ISCSIDiskPropertiesOutput)
}

func (i ISCSIDiskPropertiesArgs) ToISCSIDiskPropertiesPtrOutput() ISCSIDiskPropertiesPtrOutput {
	return i.ToISCSIDiskPropertiesPtrOutputWithContext(context.Background())
}

func (i ISCSIDiskPropertiesArgs) ToISCSIDiskPropertiesPtrOutputWithContext(ctx context.Context) ISCSIDiskPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ISCSIDiskPropertiesOutput).ToISCSIDiskPropertiesPtrOutputWithContext(ctx)
}

// ISCSIDiskPropertiesPtrInput is an input type that accepts ISCSIDiskPropertiesArgs, ISCSIDiskPropertiesPtr and ISCSIDiskPropertiesPtrOutput values.
// You can construct a concrete instance of `ISCSIDiskPropertiesPtrInput` via:
//
//          ISCSIDiskPropertiesArgs{...}
//
//  or:
//
//          nil
type ISCSIDiskPropertiesPtrInput interface {
	pulumi.Input

	ToISCSIDiskPropertiesPtrOutput() ISCSIDiskPropertiesPtrOutput
	ToISCSIDiskPropertiesPtrOutputWithContext(context.Context) ISCSIDiskPropertiesPtrOutput
}

type iscsidiskPropertiesPtrType ISCSIDiskPropertiesArgs

func ISCSIDiskPropertiesPtr(v *ISCSIDiskPropertiesArgs) ISCSIDiskPropertiesPtrInput {
	return (*iscsidiskPropertiesPtrType)(v)
}

func (*iscsidiskPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ISCSIDiskProperties)(nil)).Elem()
}

func (i *iscsidiskPropertiesPtrType) ToISCSIDiskPropertiesPtrOutput() ISCSIDiskPropertiesPtrOutput {
	return i.ToISCSIDiskPropertiesPtrOutputWithContext(context.Background())
}

func (i *iscsidiskPropertiesPtrType) ToISCSIDiskPropertiesPtrOutputWithContext(ctx context.Context) ISCSIDiskPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ISCSIDiskPropertiesPtrOutput)
}

// The iSCSI disk properties.
type ISCSIDiskPropertiesOutput struct{ *pulumi.OutputState }

func (ISCSIDiskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ISCSIDiskProperties)(nil)).Elem()
}

func (o ISCSIDiskPropertiesOutput) ToISCSIDiskPropertiesOutput() ISCSIDiskPropertiesOutput {
	return o
}

func (o ISCSIDiskPropertiesOutput) ToISCSIDiskPropertiesOutputWithContext(ctx context.Context) ISCSIDiskPropertiesOutput {
	return o
}

func (o ISCSIDiskPropertiesOutput) ToISCSIDiskPropertiesPtrOutput() ISCSIDiskPropertiesPtrOutput {
	return o.ToISCSIDiskPropertiesPtrOutputWithContext(context.Background())
}

func (o ISCSIDiskPropertiesOutput) ToISCSIDiskPropertiesPtrOutputWithContext(ctx context.Context) ISCSIDiskPropertiesPtrOutput {
	return o.ApplyT(func(v ISCSIDiskProperties) *ISCSIDiskProperties {
		return &v
	}).(ISCSIDiskPropertiesPtrOutput)
}

// The access control records.
func (o ISCSIDiskPropertiesOutput) AccessControlRecords() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ISCSIDiskProperties) []string { return v.AccessControlRecords }).(pulumi.StringArrayOutput)
}

// The data policy.
func (o ISCSIDiskPropertiesOutput) DataPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v ISCSIDiskProperties) string { return v.DataPolicy }).(pulumi.StringOutput)
}

// The description.
func (o ISCSIDiskPropertiesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ISCSIDiskProperties) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The disk status.
func (o ISCSIDiskPropertiesOutput) DiskStatus() pulumi.StringOutput {
	return o.ApplyT(func(v ISCSIDiskProperties) string { return v.DiskStatus }).(pulumi.StringOutput)
}

// The monitoring.
func (o ISCSIDiskPropertiesOutput) MonitoringStatus() pulumi.StringOutput {
	return o.ApplyT(func(v ISCSIDiskProperties) string { return v.MonitoringStatus }).(pulumi.StringOutput)
}

// The provisioned capacity in bytes.
func (o ISCSIDiskPropertiesOutput) ProvisionedCapacityInBytes() pulumi.IntOutput {
	return o.ApplyT(func(v ISCSIDiskProperties) int { return v.ProvisionedCapacityInBytes }).(pulumi.IntOutput)
}

type ISCSIDiskPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ISCSIDiskPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ISCSIDiskProperties)(nil)).Elem()
}

func (o ISCSIDiskPropertiesPtrOutput) ToISCSIDiskPropertiesPtrOutput() ISCSIDiskPropertiesPtrOutput {
	return o
}

func (o ISCSIDiskPropertiesPtrOutput) ToISCSIDiskPropertiesPtrOutputWithContext(ctx context.Context) ISCSIDiskPropertiesPtrOutput {
	return o
}

func (o ISCSIDiskPropertiesPtrOutput) Elem() ISCSIDiskPropertiesOutput {
	return o.ApplyT(func(v *ISCSIDiskProperties) ISCSIDiskProperties { return *v }).(ISCSIDiskPropertiesOutput)
}

// The access control records.
func (o ISCSIDiskPropertiesPtrOutput) AccessControlRecords() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ISCSIDiskProperties) []string {
		if v == nil {
			return nil
		}
		return v.AccessControlRecords
	}).(pulumi.StringArrayOutput)
}

// The data policy.
func (o ISCSIDiskPropertiesPtrOutput) DataPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ISCSIDiskProperties) *string {
		if v == nil {
			return nil
		}
		return &v.DataPolicy
	}).(pulumi.StringPtrOutput)
}

// The description.
func (o ISCSIDiskPropertiesPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ISCSIDiskProperties) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The disk status.
func (o ISCSIDiskPropertiesPtrOutput) DiskStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ISCSIDiskProperties) *string {
		if v == nil {
			return nil
		}
		return &v.DiskStatus
	}).(pulumi.StringPtrOutput)
}

// The monitoring.
func (o ISCSIDiskPropertiesPtrOutput) MonitoringStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ISCSIDiskProperties) *string {
		if v == nil {
			return nil
		}
		return &v.MonitoringStatus
	}).(pulumi.StringPtrOutput)
}

// The provisioned capacity in bytes.
func (o ISCSIDiskPropertiesPtrOutput) ProvisionedCapacityInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ISCSIDiskProperties) *int {
		if v == nil {
			return nil
		}
		return &v.ProvisionedCapacityInBytes
	}).(pulumi.IntPtrOutput)
}

// The iSCSI disk properties.
type ISCSIDiskPropertiesResponse struct {
	// The access control records.
	AccessControlRecords []string `pulumi:"accessControlRecords"`
	// The data policy.
	DataPolicy string `pulumi:"dataPolicy"`
	// The description.
	Description *string `pulumi:"description"`
	// The disk status.
	DiskStatus string `pulumi:"diskStatus"`
	// The local used capacity in bytes.
	LocalUsedCapacityInBytes int `pulumi:"localUsedCapacityInBytes"`
	// The monitoring.
	MonitoringStatus string `pulumi:"monitoringStatus"`
	// The provisioned capacity in bytes.
	ProvisionedCapacityInBytes int `pulumi:"provisionedCapacityInBytes"`
	// The used capacity in bytes.
	UsedCapacityInBytes int `pulumi:"usedCapacityInBytes"`
}

// ISCSIDiskPropertiesResponseInput is an input type that accepts ISCSIDiskPropertiesResponseArgs and ISCSIDiskPropertiesResponseOutput values.
// You can construct a concrete instance of `ISCSIDiskPropertiesResponseInput` via:
//
//          ISCSIDiskPropertiesResponseArgs{...}
type ISCSIDiskPropertiesResponseInput interface {
	pulumi.Input

	ToISCSIDiskPropertiesResponseOutput() ISCSIDiskPropertiesResponseOutput
	ToISCSIDiskPropertiesResponseOutputWithContext(context.Context) ISCSIDiskPropertiesResponseOutput
}

// The iSCSI disk properties.
type ISCSIDiskPropertiesResponseArgs struct {
	// The access control records.
	AccessControlRecords pulumi.StringArrayInput `pulumi:"accessControlRecords"`
	// The data policy.
	DataPolicy pulumi.StringInput `pulumi:"dataPolicy"`
	// The description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The disk status.
	DiskStatus pulumi.StringInput `pulumi:"diskStatus"`
	// The local used capacity in bytes.
	LocalUsedCapacityInBytes pulumi.IntInput `pulumi:"localUsedCapacityInBytes"`
	// The monitoring.
	MonitoringStatus pulumi.StringInput `pulumi:"monitoringStatus"`
	// The provisioned capacity in bytes.
	ProvisionedCapacityInBytes pulumi.IntInput `pulumi:"provisionedCapacityInBytes"`
	// The used capacity in bytes.
	UsedCapacityInBytes pulumi.IntInput `pulumi:"usedCapacityInBytes"`
}

func (ISCSIDiskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ISCSIDiskPropertiesResponse)(nil)).Elem()
}

func (i ISCSIDiskPropertiesResponseArgs) ToISCSIDiskPropertiesResponseOutput() ISCSIDiskPropertiesResponseOutput {
	return i.ToISCSIDiskPropertiesResponseOutputWithContext(context.Background())
}

func (i ISCSIDiskPropertiesResponseArgs) ToISCSIDiskPropertiesResponseOutputWithContext(ctx context.Context) ISCSIDiskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ISCSIDiskPropertiesResponseOutput)
}

func (i ISCSIDiskPropertiesResponseArgs) ToISCSIDiskPropertiesResponsePtrOutput() ISCSIDiskPropertiesResponsePtrOutput {
	return i.ToISCSIDiskPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ISCSIDiskPropertiesResponseArgs) ToISCSIDiskPropertiesResponsePtrOutputWithContext(ctx context.Context) ISCSIDiskPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ISCSIDiskPropertiesResponseOutput).ToISCSIDiskPropertiesResponsePtrOutputWithContext(ctx)
}

// ISCSIDiskPropertiesResponsePtrInput is an input type that accepts ISCSIDiskPropertiesResponseArgs, ISCSIDiskPropertiesResponsePtr and ISCSIDiskPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ISCSIDiskPropertiesResponsePtrInput` via:
//
//          ISCSIDiskPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ISCSIDiskPropertiesResponsePtrInput interface {
	pulumi.Input

	ToISCSIDiskPropertiesResponsePtrOutput() ISCSIDiskPropertiesResponsePtrOutput
	ToISCSIDiskPropertiesResponsePtrOutputWithContext(context.Context) ISCSIDiskPropertiesResponsePtrOutput
}

type iscsidiskPropertiesResponsePtrType ISCSIDiskPropertiesResponseArgs

func ISCSIDiskPropertiesResponsePtr(v *ISCSIDiskPropertiesResponseArgs) ISCSIDiskPropertiesResponsePtrInput {
	return (*iscsidiskPropertiesResponsePtrType)(v)
}

func (*iscsidiskPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ISCSIDiskPropertiesResponse)(nil)).Elem()
}

func (i *iscsidiskPropertiesResponsePtrType) ToISCSIDiskPropertiesResponsePtrOutput() ISCSIDiskPropertiesResponsePtrOutput {
	return i.ToISCSIDiskPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *iscsidiskPropertiesResponsePtrType) ToISCSIDiskPropertiesResponsePtrOutputWithContext(ctx context.Context) ISCSIDiskPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ISCSIDiskPropertiesResponsePtrOutput)
}

// The iSCSI disk properties.
type ISCSIDiskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ISCSIDiskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ISCSIDiskPropertiesResponse)(nil)).Elem()
}

func (o ISCSIDiskPropertiesResponseOutput) ToISCSIDiskPropertiesResponseOutput() ISCSIDiskPropertiesResponseOutput {
	return o
}

func (o ISCSIDiskPropertiesResponseOutput) ToISCSIDiskPropertiesResponseOutputWithContext(ctx context.Context) ISCSIDiskPropertiesResponseOutput {
	return o
}

func (o ISCSIDiskPropertiesResponseOutput) ToISCSIDiskPropertiesResponsePtrOutput() ISCSIDiskPropertiesResponsePtrOutput {
	return o.ToISCSIDiskPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ISCSIDiskPropertiesResponseOutput) ToISCSIDiskPropertiesResponsePtrOutputWithContext(ctx context.Context) ISCSIDiskPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ISCSIDiskPropertiesResponse) *ISCSIDiskPropertiesResponse {
		return &v
	}).(ISCSIDiskPropertiesResponsePtrOutput)
}

// The access control records.
func (o ISCSIDiskPropertiesResponseOutput) AccessControlRecords() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ISCSIDiskPropertiesResponse) []string { return v.AccessControlRecords }).(pulumi.StringArrayOutput)
}

// The data policy.
func (o ISCSIDiskPropertiesResponseOutput) DataPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v ISCSIDiskPropertiesResponse) string { return v.DataPolicy }).(pulumi.StringOutput)
}

// The description.
func (o ISCSIDiskPropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ISCSIDiskPropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The disk status.
func (o ISCSIDiskPropertiesResponseOutput) DiskStatus() pulumi.StringOutput {
	return o.ApplyT(func(v ISCSIDiskPropertiesResponse) string { return v.DiskStatus }).(pulumi.StringOutput)
}

// The local used capacity in bytes.
func (o ISCSIDiskPropertiesResponseOutput) LocalUsedCapacityInBytes() pulumi.IntOutput {
	return o.ApplyT(func(v ISCSIDiskPropertiesResponse) int { return v.LocalUsedCapacityInBytes }).(pulumi.IntOutput)
}

// The monitoring.
func (o ISCSIDiskPropertiesResponseOutput) MonitoringStatus() pulumi.StringOutput {
	return o.ApplyT(func(v ISCSIDiskPropertiesResponse) string { return v.MonitoringStatus }).(pulumi.StringOutput)
}

// The provisioned capacity in bytes.
func (o ISCSIDiskPropertiesResponseOutput) ProvisionedCapacityInBytes() pulumi.IntOutput {
	return o.ApplyT(func(v ISCSIDiskPropertiesResponse) int { return v.ProvisionedCapacityInBytes }).(pulumi.IntOutput)
}

// The used capacity in bytes.
func (o ISCSIDiskPropertiesResponseOutput) UsedCapacityInBytes() pulumi.IntOutput {
	return o.ApplyT(func(v ISCSIDiskPropertiesResponse) int { return v.UsedCapacityInBytes }).(pulumi.IntOutput)
}

type ISCSIDiskPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ISCSIDiskPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ISCSIDiskPropertiesResponse)(nil)).Elem()
}

func (o ISCSIDiskPropertiesResponsePtrOutput) ToISCSIDiskPropertiesResponsePtrOutput() ISCSIDiskPropertiesResponsePtrOutput {
	return o
}

func (o ISCSIDiskPropertiesResponsePtrOutput) ToISCSIDiskPropertiesResponsePtrOutputWithContext(ctx context.Context) ISCSIDiskPropertiesResponsePtrOutput {
	return o
}

func (o ISCSIDiskPropertiesResponsePtrOutput) Elem() ISCSIDiskPropertiesResponseOutput {
	return o.ApplyT(func(v *ISCSIDiskPropertiesResponse) ISCSIDiskPropertiesResponse { return *v }).(ISCSIDiskPropertiesResponseOutput)
}

// The access control records.
func (o ISCSIDiskPropertiesResponsePtrOutput) AccessControlRecords() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ISCSIDiskPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.AccessControlRecords
	}).(pulumi.StringArrayOutput)
}

// The data policy.
func (o ISCSIDiskPropertiesResponsePtrOutput) DataPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ISCSIDiskPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DataPolicy
	}).(pulumi.StringPtrOutput)
}

// The description.
func (o ISCSIDiskPropertiesResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ISCSIDiskPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The disk status.
func (o ISCSIDiskPropertiesResponsePtrOutput) DiskStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ISCSIDiskPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DiskStatus
	}).(pulumi.StringPtrOutput)
}

// The local used capacity in bytes.
func (o ISCSIDiskPropertiesResponsePtrOutput) LocalUsedCapacityInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ISCSIDiskPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.LocalUsedCapacityInBytes
	}).(pulumi.IntPtrOutput)
}

// The monitoring.
func (o ISCSIDiskPropertiesResponsePtrOutput) MonitoringStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ISCSIDiskPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MonitoringStatus
	}).(pulumi.StringPtrOutput)
}

// The provisioned capacity in bytes.
func (o ISCSIDiskPropertiesResponsePtrOutput) ProvisionedCapacityInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ISCSIDiskPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.ProvisionedCapacityInBytes
	}).(pulumi.IntPtrOutput)
}

// The used capacity in bytes.
func (o ISCSIDiskPropertiesResponsePtrOutput) UsedCapacityInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ISCSIDiskPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.UsedCapacityInBytes
	}).(pulumi.IntPtrOutput)
}

// The iSCSI server properties.
type ISCSIServerProperties struct {
	// The backup policy id.
	BackupScheduleGroupId string `pulumi:"backupScheduleGroupId"`
	// The chap id.
	ChapId *string `pulumi:"chapId"`
	// The description.
	Description *string `pulumi:"description"`
	// The reverse chap id.
	ReverseChapId *string `pulumi:"reverseChapId"`
	// The storage domain id.
	StorageDomainId string `pulumi:"storageDomainId"`
}

// ISCSIServerPropertiesInput is an input type that accepts ISCSIServerPropertiesArgs and ISCSIServerPropertiesOutput values.
// You can construct a concrete instance of `ISCSIServerPropertiesInput` via:
//
//          ISCSIServerPropertiesArgs{...}
type ISCSIServerPropertiesInput interface {
	pulumi.Input

	ToISCSIServerPropertiesOutput() ISCSIServerPropertiesOutput
	ToISCSIServerPropertiesOutputWithContext(context.Context) ISCSIServerPropertiesOutput
}

// The iSCSI server properties.
type ISCSIServerPropertiesArgs struct {
	// The backup policy id.
	BackupScheduleGroupId pulumi.StringInput `pulumi:"backupScheduleGroupId"`
	// The chap id.
	ChapId pulumi.StringPtrInput `pulumi:"chapId"`
	// The description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The reverse chap id.
	ReverseChapId pulumi.StringPtrInput `pulumi:"reverseChapId"`
	// The storage domain id.
	StorageDomainId pulumi.StringInput `pulumi:"storageDomainId"`
}

func (ISCSIServerPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ISCSIServerProperties)(nil)).Elem()
}

func (i ISCSIServerPropertiesArgs) ToISCSIServerPropertiesOutput() ISCSIServerPropertiesOutput {
	return i.ToISCSIServerPropertiesOutputWithContext(context.Background())
}

func (i ISCSIServerPropertiesArgs) ToISCSIServerPropertiesOutputWithContext(ctx context.Context) ISCSIServerPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ISCSIServerPropertiesOutput)
}

func (i ISCSIServerPropertiesArgs) ToISCSIServerPropertiesPtrOutput() ISCSIServerPropertiesPtrOutput {
	return i.ToISCSIServerPropertiesPtrOutputWithContext(context.Background())
}

func (i ISCSIServerPropertiesArgs) ToISCSIServerPropertiesPtrOutputWithContext(ctx context.Context) ISCSIServerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ISCSIServerPropertiesOutput).ToISCSIServerPropertiesPtrOutputWithContext(ctx)
}

// ISCSIServerPropertiesPtrInput is an input type that accepts ISCSIServerPropertiesArgs, ISCSIServerPropertiesPtr and ISCSIServerPropertiesPtrOutput values.
// You can construct a concrete instance of `ISCSIServerPropertiesPtrInput` via:
//
//          ISCSIServerPropertiesArgs{...}
//
//  or:
//
//          nil
type ISCSIServerPropertiesPtrInput interface {
	pulumi.Input

	ToISCSIServerPropertiesPtrOutput() ISCSIServerPropertiesPtrOutput
	ToISCSIServerPropertiesPtrOutputWithContext(context.Context) ISCSIServerPropertiesPtrOutput
}

type iscsiserverPropertiesPtrType ISCSIServerPropertiesArgs

func ISCSIServerPropertiesPtr(v *ISCSIServerPropertiesArgs) ISCSIServerPropertiesPtrInput {
	return (*iscsiserverPropertiesPtrType)(v)
}

func (*iscsiserverPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ISCSIServerProperties)(nil)).Elem()
}

func (i *iscsiserverPropertiesPtrType) ToISCSIServerPropertiesPtrOutput() ISCSIServerPropertiesPtrOutput {
	return i.ToISCSIServerPropertiesPtrOutputWithContext(context.Background())
}

func (i *iscsiserverPropertiesPtrType) ToISCSIServerPropertiesPtrOutputWithContext(ctx context.Context) ISCSIServerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ISCSIServerPropertiesPtrOutput)
}

// The iSCSI server properties.
type ISCSIServerPropertiesOutput struct{ *pulumi.OutputState }

func (ISCSIServerPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ISCSIServerProperties)(nil)).Elem()
}

func (o ISCSIServerPropertiesOutput) ToISCSIServerPropertiesOutput() ISCSIServerPropertiesOutput {
	return o
}

func (o ISCSIServerPropertiesOutput) ToISCSIServerPropertiesOutputWithContext(ctx context.Context) ISCSIServerPropertiesOutput {
	return o
}

func (o ISCSIServerPropertiesOutput) ToISCSIServerPropertiesPtrOutput() ISCSIServerPropertiesPtrOutput {
	return o.ToISCSIServerPropertiesPtrOutputWithContext(context.Background())
}

func (o ISCSIServerPropertiesOutput) ToISCSIServerPropertiesPtrOutputWithContext(ctx context.Context) ISCSIServerPropertiesPtrOutput {
	return o.ApplyT(func(v ISCSIServerProperties) *ISCSIServerProperties {
		return &v
	}).(ISCSIServerPropertiesPtrOutput)
}

// The backup policy id.
func (o ISCSIServerPropertiesOutput) BackupScheduleGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v ISCSIServerProperties) string { return v.BackupScheduleGroupId }).(pulumi.StringOutput)
}

// The chap id.
func (o ISCSIServerPropertiesOutput) ChapId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ISCSIServerProperties) *string { return v.ChapId }).(pulumi.StringPtrOutput)
}

// The description.
func (o ISCSIServerPropertiesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ISCSIServerProperties) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The reverse chap id.
func (o ISCSIServerPropertiesOutput) ReverseChapId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ISCSIServerProperties) *string { return v.ReverseChapId }).(pulumi.StringPtrOutput)
}

// The storage domain id.
func (o ISCSIServerPropertiesOutput) StorageDomainId() pulumi.StringOutput {
	return o.ApplyT(func(v ISCSIServerProperties) string { return v.StorageDomainId }).(pulumi.StringOutput)
}

type ISCSIServerPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ISCSIServerPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ISCSIServerProperties)(nil)).Elem()
}

func (o ISCSIServerPropertiesPtrOutput) ToISCSIServerPropertiesPtrOutput() ISCSIServerPropertiesPtrOutput {
	return o
}

func (o ISCSIServerPropertiesPtrOutput) ToISCSIServerPropertiesPtrOutputWithContext(ctx context.Context) ISCSIServerPropertiesPtrOutput {
	return o
}

func (o ISCSIServerPropertiesPtrOutput) Elem() ISCSIServerPropertiesOutput {
	return o.ApplyT(func(v *ISCSIServerProperties) ISCSIServerProperties { return *v }).(ISCSIServerPropertiesOutput)
}

// The backup policy id.
func (o ISCSIServerPropertiesPtrOutput) BackupScheduleGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ISCSIServerProperties) *string {
		if v == nil {
			return nil
		}
		return &v.BackupScheduleGroupId
	}).(pulumi.StringPtrOutput)
}

// The chap id.
func (o ISCSIServerPropertiesPtrOutput) ChapId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ISCSIServerProperties) *string {
		if v == nil {
			return nil
		}
		return v.ChapId
	}).(pulumi.StringPtrOutput)
}

// The description.
func (o ISCSIServerPropertiesPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ISCSIServerProperties) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The reverse chap id.
func (o ISCSIServerPropertiesPtrOutput) ReverseChapId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ISCSIServerProperties) *string {
		if v == nil {
			return nil
		}
		return v.ReverseChapId
	}).(pulumi.StringPtrOutput)
}

// The storage domain id.
func (o ISCSIServerPropertiesPtrOutput) StorageDomainId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ISCSIServerProperties) *string {
		if v == nil {
			return nil
		}
		return &v.StorageDomainId
	}).(pulumi.StringPtrOutput)
}

// The iSCSI server properties.
type ISCSIServerPropertiesResponse struct {
	// The backup policy id.
	BackupScheduleGroupId string `pulumi:"backupScheduleGroupId"`
	// The chap id.
	ChapId *string `pulumi:"chapId"`
	// The description.
	Description *string `pulumi:"description"`
	// The reverse chap id.
	ReverseChapId *string `pulumi:"reverseChapId"`
	// The storage domain id.
	StorageDomainId string `pulumi:"storageDomainId"`
}

// ISCSIServerPropertiesResponseInput is an input type that accepts ISCSIServerPropertiesResponseArgs and ISCSIServerPropertiesResponseOutput values.
// You can construct a concrete instance of `ISCSIServerPropertiesResponseInput` via:
//
//          ISCSIServerPropertiesResponseArgs{...}
type ISCSIServerPropertiesResponseInput interface {
	pulumi.Input

	ToISCSIServerPropertiesResponseOutput() ISCSIServerPropertiesResponseOutput
	ToISCSIServerPropertiesResponseOutputWithContext(context.Context) ISCSIServerPropertiesResponseOutput
}

// The iSCSI server properties.
type ISCSIServerPropertiesResponseArgs struct {
	// The backup policy id.
	BackupScheduleGroupId pulumi.StringInput `pulumi:"backupScheduleGroupId"`
	// The chap id.
	ChapId pulumi.StringPtrInput `pulumi:"chapId"`
	// The description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The reverse chap id.
	ReverseChapId pulumi.StringPtrInput `pulumi:"reverseChapId"`
	// The storage domain id.
	StorageDomainId pulumi.StringInput `pulumi:"storageDomainId"`
}

func (ISCSIServerPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ISCSIServerPropertiesResponse)(nil)).Elem()
}

func (i ISCSIServerPropertiesResponseArgs) ToISCSIServerPropertiesResponseOutput() ISCSIServerPropertiesResponseOutput {
	return i.ToISCSIServerPropertiesResponseOutputWithContext(context.Background())
}

func (i ISCSIServerPropertiesResponseArgs) ToISCSIServerPropertiesResponseOutputWithContext(ctx context.Context) ISCSIServerPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ISCSIServerPropertiesResponseOutput)
}

func (i ISCSIServerPropertiesResponseArgs) ToISCSIServerPropertiesResponsePtrOutput() ISCSIServerPropertiesResponsePtrOutput {
	return i.ToISCSIServerPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ISCSIServerPropertiesResponseArgs) ToISCSIServerPropertiesResponsePtrOutputWithContext(ctx context.Context) ISCSIServerPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ISCSIServerPropertiesResponseOutput).ToISCSIServerPropertiesResponsePtrOutputWithContext(ctx)
}

// ISCSIServerPropertiesResponsePtrInput is an input type that accepts ISCSIServerPropertiesResponseArgs, ISCSIServerPropertiesResponsePtr and ISCSIServerPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ISCSIServerPropertiesResponsePtrInput` via:
//
//          ISCSIServerPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ISCSIServerPropertiesResponsePtrInput interface {
	pulumi.Input

	ToISCSIServerPropertiesResponsePtrOutput() ISCSIServerPropertiesResponsePtrOutput
	ToISCSIServerPropertiesResponsePtrOutputWithContext(context.Context) ISCSIServerPropertiesResponsePtrOutput
}

type iscsiserverPropertiesResponsePtrType ISCSIServerPropertiesResponseArgs

func ISCSIServerPropertiesResponsePtr(v *ISCSIServerPropertiesResponseArgs) ISCSIServerPropertiesResponsePtrInput {
	return (*iscsiserverPropertiesResponsePtrType)(v)
}

func (*iscsiserverPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ISCSIServerPropertiesResponse)(nil)).Elem()
}

func (i *iscsiserverPropertiesResponsePtrType) ToISCSIServerPropertiesResponsePtrOutput() ISCSIServerPropertiesResponsePtrOutput {
	return i.ToISCSIServerPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *iscsiserverPropertiesResponsePtrType) ToISCSIServerPropertiesResponsePtrOutputWithContext(ctx context.Context) ISCSIServerPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ISCSIServerPropertiesResponsePtrOutput)
}

// The iSCSI server properties.
type ISCSIServerPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ISCSIServerPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ISCSIServerPropertiesResponse)(nil)).Elem()
}

func (o ISCSIServerPropertiesResponseOutput) ToISCSIServerPropertiesResponseOutput() ISCSIServerPropertiesResponseOutput {
	return o
}

func (o ISCSIServerPropertiesResponseOutput) ToISCSIServerPropertiesResponseOutputWithContext(ctx context.Context) ISCSIServerPropertiesResponseOutput {
	return o
}

func (o ISCSIServerPropertiesResponseOutput) ToISCSIServerPropertiesResponsePtrOutput() ISCSIServerPropertiesResponsePtrOutput {
	return o.ToISCSIServerPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ISCSIServerPropertiesResponseOutput) ToISCSIServerPropertiesResponsePtrOutputWithContext(ctx context.Context) ISCSIServerPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ISCSIServerPropertiesResponse) *ISCSIServerPropertiesResponse {
		return &v
	}).(ISCSIServerPropertiesResponsePtrOutput)
}

// The backup policy id.
func (o ISCSIServerPropertiesResponseOutput) BackupScheduleGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v ISCSIServerPropertiesResponse) string { return v.BackupScheduleGroupId }).(pulumi.StringOutput)
}

// The chap id.
func (o ISCSIServerPropertiesResponseOutput) ChapId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ISCSIServerPropertiesResponse) *string { return v.ChapId }).(pulumi.StringPtrOutput)
}

// The description.
func (o ISCSIServerPropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ISCSIServerPropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The reverse chap id.
func (o ISCSIServerPropertiesResponseOutput) ReverseChapId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ISCSIServerPropertiesResponse) *string { return v.ReverseChapId }).(pulumi.StringPtrOutput)
}

// The storage domain id.
func (o ISCSIServerPropertiesResponseOutput) StorageDomainId() pulumi.StringOutput {
	return o.ApplyT(func(v ISCSIServerPropertiesResponse) string { return v.StorageDomainId }).(pulumi.StringOutput)
}

type ISCSIServerPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ISCSIServerPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ISCSIServerPropertiesResponse)(nil)).Elem()
}

func (o ISCSIServerPropertiesResponsePtrOutput) ToISCSIServerPropertiesResponsePtrOutput() ISCSIServerPropertiesResponsePtrOutput {
	return o
}

func (o ISCSIServerPropertiesResponsePtrOutput) ToISCSIServerPropertiesResponsePtrOutputWithContext(ctx context.Context) ISCSIServerPropertiesResponsePtrOutput {
	return o
}

func (o ISCSIServerPropertiesResponsePtrOutput) Elem() ISCSIServerPropertiesResponseOutput {
	return o.ApplyT(func(v *ISCSIServerPropertiesResponse) ISCSIServerPropertiesResponse { return *v }).(ISCSIServerPropertiesResponseOutput)
}

// The backup policy id.
func (o ISCSIServerPropertiesResponsePtrOutput) BackupScheduleGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ISCSIServerPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.BackupScheduleGroupId
	}).(pulumi.StringPtrOutput)
}

// The chap id.
func (o ISCSIServerPropertiesResponsePtrOutput) ChapId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ISCSIServerPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ChapId
	}).(pulumi.StringPtrOutput)
}

// The description.
func (o ISCSIServerPropertiesResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ISCSIServerPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The reverse chap id.
func (o ISCSIServerPropertiesResponsePtrOutput) ReverseChapId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ISCSIServerPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ReverseChapId
	}).(pulumi.StringPtrOutput)
}

// The storage domain id.
func (o ISCSIServerPropertiesResponsePtrOutput) StorageDomainId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ISCSIServerPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StorageDomainId
	}).(pulumi.StringPtrOutput)
}

// The StorSimple Manager.
type ManagerType struct {
	// The etag of the manager.
	Etag *string `pulumi:"etag"`
	// The geo location of the resource.
	Location string `pulumi:"location"`
	// The resource name.
	Name string `pulumi:"name"`
	// The properties of the StorSimple Manager.
	Properties ManagerPropertiesResponse `pulumi:"properties"`
	// The tags attached to the resource.
	Tags map[string]string `pulumi:"tags"`
	// The resource type.
	Type string `pulumi:"type"`
}

// ManagerTypeInput is an input type that accepts ManagerTypeArgs and ManagerTypeOutput values.
// You can construct a concrete instance of `ManagerTypeInput` via:
//
//          ManagerTypeArgs{...}
type ManagerTypeInput interface {
	pulumi.Input

	ToManagerTypeOutput() ManagerTypeOutput
	ToManagerTypeOutputWithContext(context.Context) ManagerTypeOutput
}

// The StorSimple Manager.
type ManagerTypeArgs struct {
	// The etag of the manager.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// The geo location of the resource.
	Location pulumi.StringInput `pulumi:"location"`
	// The resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// The properties of the StorSimple Manager.
	Properties ManagerPropertiesResponseInput `pulumi:"properties"`
	// The tags attached to the resource.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ManagerTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerType)(nil)).Elem()
}

func (i ManagerTypeArgs) ToManagerTypeOutput() ManagerTypeOutput {
	return i.ToManagerTypeOutputWithContext(context.Background())
}

func (i ManagerTypeArgs) ToManagerTypeOutputWithContext(ctx context.Context) ManagerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerTypeOutput)
}

// The StorSimple Manager.
type ManagerTypeOutput struct{ *pulumi.OutputState }

func (ManagerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerType)(nil)).Elem()
}

func (o ManagerTypeOutput) ToManagerTypeOutput() ManagerTypeOutput {
	return o
}

func (o ManagerTypeOutput) ToManagerTypeOutputWithContext(ctx context.Context) ManagerTypeOutput {
	return o
}

// The etag of the manager.
func (o ManagerTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagerType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// The geo location of the resource.
func (o ManagerTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerType) string { return v.Location }).(pulumi.StringOutput)
}

// The resource name.
func (o ManagerTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerType) string { return v.Name }).(pulumi.StringOutput)
}

// The properties of the StorSimple Manager.
func (o ManagerTypeOutput) Properties() ManagerPropertiesResponseOutput {
	return o.ApplyT(func(v ManagerType) ManagerPropertiesResponse { return v.Properties }).(ManagerPropertiesResponseOutput)
}

// The tags attached to the resource.
func (o ManagerTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ManagerType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The resource type.
func (o ManagerTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerType) string { return v.Type }).(pulumi.StringOutput)
}

// The access control record.
type ManagerAccessControlRecordType struct {
	// The Kind of the object. Currently only Series8000 is supported
	Kind *string `pulumi:"kind"`
	// The name of the object.
	Name string `pulumi:"name"`
	// The properties of access control record.
	Properties AccessControlRecordPropertiesResponse `pulumi:"properties"`
	// The hierarchical type of the object.
	Type string `pulumi:"type"`
}

// ManagerAccessControlRecordTypeInput is an input type that accepts ManagerAccessControlRecordTypeArgs and ManagerAccessControlRecordTypeOutput values.
// You can construct a concrete instance of `ManagerAccessControlRecordTypeInput` via:
//
//          ManagerAccessControlRecordTypeArgs{...}
type ManagerAccessControlRecordTypeInput interface {
	pulumi.Input

	ToManagerAccessControlRecordTypeOutput() ManagerAccessControlRecordTypeOutput
	ToManagerAccessControlRecordTypeOutputWithContext(context.Context) ManagerAccessControlRecordTypeOutput
}

// The access control record.
type ManagerAccessControlRecordTypeArgs struct {
	// The Kind of the object. Currently only Series8000 is supported
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name of the object.
	Name pulumi.StringInput `pulumi:"name"`
	// The properties of access control record.
	Properties AccessControlRecordPropertiesResponseInput `pulumi:"properties"`
	// The hierarchical type of the object.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ManagerAccessControlRecordTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerAccessControlRecordType)(nil)).Elem()
}

func (i ManagerAccessControlRecordTypeArgs) ToManagerAccessControlRecordTypeOutput() ManagerAccessControlRecordTypeOutput {
	return i.ToManagerAccessControlRecordTypeOutputWithContext(context.Background())
}

func (i ManagerAccessControlRecordTypeArgs) ToManagerAccessControlRecordTypeOutputWithContext(ctx context.Context) ManagerAccessControlRecordTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerAccessControlRecordTypeOutput)
}

// The access control record.
type ManagerAccessControlRecordTypeOutput struct{ *pulumi.OutputState }

func (ManagerAccessControlRecordTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerAccessControlRecordType)(nil)).Elem()
}

func (o ManagerAccessControlRecordTypeOutput) ToManagerAccessControlRecordTypeOutput() ManagerAccessControlRecordTypeOutput {
	return o
}

func (o ManagerAccessControlRecordTypeOutput) ToManagerAccessControlRecordTypeOutputWithContext(ctx context.Context) ManagerAccessControlRecordTypeOutput {
	return o
}

// The Kind of the object. Currently only Series8000 is supported
func (o ManagerAccessControlRecordTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagerAccessControlRecordType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name of the object.
func (o ManagerAccessControlRecordTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerAccessControlRecordType) string { return v.Name }).(pulumi.StringOutput)
}

// The properties of access control record.
func (o ManagerAccessControlRecordTypeOutput) Properties() AccessControlRecordPropertiesResponseOutput {
	return o.ApplyT(func(v ManagerAccessControlRecordType) AccessControlRecordPropertiesResponse { return v.Properties }).(AccessControlRecordPropertiesResponseOutput)
}

// The hierarchical type of the object.
func (o ManagerAccessControlRecordTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerAccessControlRecordType) string { return v.Type }).(pulumi.StringOutput)
}

// The bandwidth setting.
type ManagerBandwidthSettingType struct {
	// The Kind of the object. Currently only Series8000 is supported
	Kind *string `pulumi:"kind"`
	// The name of the object.
	Name string `pulumi:"name"`
	// The properties of the bandwidth setting.
	Properties BandwidthRateSettingPropertiesResponse `pulumi:"properties"`
	// The hierarchical type of the object.
	Type string `pulumi:"type"`
}

// ManagerBandwidthSettingTypeInput is an input type that accepts ManagerBandwidthSettingTypeArgs and ManagerBandwidthSettingTypeOutput values.
// You can construct a concrete instance of `ManagerBandwidthSettingTypeInput` via:
//
//          ManagerBandwidthSettingTypeArgs{...}
type ManagerBandwidthSettingTypeInput interface {
	pulumi.Input

	ToManagerBandwidthSettingTypeOutput() ManagerBandwidthSettingTypeOutput
	ToManagerBandwidthSettingTypeOutputWithContext(context.Context) ManagerBandwidthSettingTypeOutput
}

// The bandwidth setting.
type ManagerBandwidthSettingTypeArgs struct {
	// The Kind of the object. Currently only Series8000 is supported
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name of the object.
	Name pulumi.StringInput `pulumi:"name"`
	// The properties of the bandwidth setting.
	Properties BandwidthRateSettingPropertiesResponseInput `pulumi:"properties"`
	// The hierarchical type of the object.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ManagerBandwidthSettingTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerBandwidthSettingType)(nil)).Elem()
}

func (i ManagerBandwidthSettingTypeArgs) ToManagerBandwidthSettingTypeOutput() ManagerBandwidthSettingTypeOutput {
	return i.ToManagerBandwidthSettingTypeOutputWithContext(context.Background())
}

func (i ManagerBandwidthSettingTypeArgs) ToManagerBandwidthSettingTypeOutputWithContext(ctx context.Context) ManagerBandwidthSettingTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerBandwidthSettingTypeOutput)
}

// The bandwidth setting.
type ManagerBandwidthSettingTypeOutput struct{ *pulumi.OutputState }

func (ManagerBandwidthSettingTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerBandwidthSettingType)(nil)).Elem()
}

func (o ManagerBandwidthSettingTypeOutput) ToManagerBandwidthSettingTypeOutput() ManagerBandwidthSettingTypeOutput {
	return o
}

func (o ManagerBandwidthSettingTypeOutput) ToManagerBandwidthSettingTypeOutputWithContext(ctx context.Context) ManagerBandwidthSettingTypeOutput {
	return o
}

// The Kind of the object. Currently only Series8000 is supported
func (o ManagerBandwidthSettingTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagerBandwidthSettingType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name of the object.
func (o ManagerBandwidthSettingTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerBandwidthSettingType) string { return v.Name }).(pulumi.StringOutput)
}

// The properties of the bandwidth setting.
func (o ManagerBandwidthSettingTypeOutput) Properties() BandwidthRateSettingPropertiesResponseOutput {
	return o.ApplyT(func(v ManagerBandwidthSettingType) BandwidthRateSettingPropertiesResponse { return v.Properties }).(BandwidthRateSettingPropertiesResponseOutput)
}

// The hierarchical type of the object.
func (o ManagerBandwidthSettingTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerBandwidthSettingType) string { return v.Type }).(pulumi.StringOutput)
}

// The backup policy.
type ManagerDeviceBackupPolicyType struct {
	// The Kind of the object. Currently only Series8000 is supported
	Kind *string `pulumi:"kind"`
	// The name of the object.
	Name string `pulumi:"name"`
	// The properties of the backup policy.
	Properties BackupPolicyPropertiesResponse `pulumi:"properties"`
	// The hierarchical type of the object.
	Type string `pulumi:"type"`
}

// ManagerDeviceBackupPolicyTypeInput is an input type that accepts ManagerDeviceBackupPolicyTypeArgs and ManagerDeviceBackupPolicyTypeOutput values.
// You can construct a concrete instance of `ManagerDeviceBackupPolicyTypeInput` via:
//
//          ManagerDeviceBackupPolicyTypeArgs{...}
type ManagerDeviceBackupPolicyTypeInput interface {
	pulumi.Input

	ToManagerDeviceBackupPolicyTypeOutput() ManagerDeviceBackupPolicyTypeOutput
	ToManagerDeviceBackupPolicyTypeOutputWithContext(context.Context) ManagerDeviceBackupPolicyTypeOutput
}

// The backup policy.
type ManagerDeviceBackupPolicyTypeArgs struct {
	// The Kind of the object. Currently only Series8000 is supported
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name of the object.
	Name pulumi.StringInput `pulumi:"name"`
	// The properties of the backup policy.
	Properties BackupPolicyPropertiesResponseInput `pulumi:"properties"`
	// The hierarchical type of the object.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ManagerDeviceBackupPolicyTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerDeviceBackupPolicyType)(nil)).Elem()
}

func (i ManagerDeviceBackupPolicyTypeArgs) ToManagerDeviceBackupPolicyTypeOutput() ManagerDeviceBackupPolicyTypeOutput {
	return i.ToManagerDeviceBackupPolicyTypeOutputWithContext(context.Background())
}

func (i ManagerDeviceBackupPolicyTypeArgs) ToManagerDeviceBackupPolicyTypeOutputWithContext(ctx context.Context) ManagerDeviceBackupPolicyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerDeviceBackupPolicyTypeOutput)
}

// The backup policy.
type ManagerDeviceBackupPolicyTypeOutput struct{ *pulumi.OutputState }

func (ManagerDeviceBackupPolicyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerDeviceBackupPolicyType)(nil)).Elem()
}

func (o ManagerDeviceBackupPolicyTypeOutput) ToManagerDeviceBackupPolicyTypeOutput() ManagerDeviceBackupPolicyTypeOutput {
	return o
}

func (o ManagerDeviceBackupPolicyTypeOutput) ToManagerDeviceBackupPolicyTypeOutputWithContext(ctx context.Context) ManagerDeviceBackupPolicyTypeOutput {
	return o
}

// The Kind of the object. Currently only Series8000 is supported
func (o ManagerDeviceBackupPolicyTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagerDeviceBackupPolicyType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name of the object.
func (o ManagerDeviceBackupPolicyTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerDeviceBackupPolicyType) string { return v.Name }).(pulumi.StringOutput)
}

// The properties of the backup policy.
func (o ManagerDeviceBackupPolicyTypeOutput) Properties() BackupPolicyPropertiesResponseOutput {
	return o.ApplyT(func(v ManagerDeviceBackupPolicyType) BackupPolicyPropertiesResponse { return v.Properties }).(BackupPolicyPropertiesResponseOutput)
}

// The hierarchical type of the object.
func (o ManagerDeviceBackupPolicyTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerDeviceBackupPolicyType) string { return v.Type }).(pulumi.StringOutput)
}

// The backup schedule.
type ManagerDeviceBackupPolicyScheduleType struct {
	// The Kind of the object. Currently only Series8000 is supported
	Kind *string `pulumi:"kind"`
	// The name of the object.
	Name string `pulumi:"name"`
	// The properties of the backup schedule.
	Properties BackupSchedulePropertiesResponse `pulumi:"properties"`
	// The hierarchical type of the object.
	Type string `pulumi:"type"`
}

// ManagerDeviceBackupPolicyScheduleTypeInput is an input type that accepts ManagerDeviceBackupPolicyScheduleTypeArgs and ManagerDeviceBackupPolicyScheduleTypeOutput values.
// You can construct a concrete instance of `ManagerDeviceBackupPolicyScheduleTypeInput` via:
//
//          ManagerDeviceBackupPolicyScheduleTypeArgs{...}
type ManagerDeviceBackupPolicyScheduleTypeInput interface {
	pulumi.Input

	ToManagerDeviceBackupPolicyScheduleTypeOutput() ManagerDeviceBackupPolicyScheduleTypeOutput
	ToManagerDeviceBackupPolicyScheduleTypeOutputWithContext(context.Context) ManagerDeviceBackupPolicyScheduleTypeOutput
}

// The backup schedule.
type ManagerDeviceBackupPolicyScheduleTypeArgs struct {
	// The Kind of the object. Currently only Series8000 is supported
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name of the object.
	Name pulumi.StringInput `pulumi:"name"`
	// The properties of the backup schedule.
	Properties BackupSchedulePropertiesResponseInput `pulumi:"properties"`
	// The hierarchical type of the object.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ManagerDeviceBackupPolicyScheduleTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerDeviceBackupPolicyScheduleType)(nil)).Elem()
}

func (i ManagerDeviceBackupPolicyScheduleTypeArgs) ToManagerDeviceBackupPolicyScheduleTypeOutput() ManagerDeviceBackupPolicyScheduleTypeOutput {
	return i.ToManagerDeviceBackupPolicyScheduleTypeOutputWithContext(context.Background())
}

func (i ManagerDeviceBackupPolicyScheduleTypeArgs) ToManagerDeviceBackupPolicyScheduleTypeOutputWithContext(ctx context.Context) ManagerDeviceBackupPolicyScheduleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerDeviceBackupPolicyScheduleTypeOutput)
}

// The backup schedule.
type ManagerDeviceBackupPolicyScheduleTypeOutput struct{ *pulumi.OutputState }

func (ManagerDeviceBackupPolicyScheduleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerDeviceBackupPolicyScheduleType)(nil)).Elem()
}

func (o ManagerDeviceBackupPolicyScheduleTypeOutput) ToManagerDeviceBackupPolicyScheduleTypeOutput() ManagerDeviceBackupPolicyScheduleTypeOutput {
	return o
}

func (o ManagerDeviceBackupPolicyScheduleTypeOutput) ToManagerDeviceBackupPolicyScheduleTypeOutputWithContext(ctx context.Context) ManagerDeviceBackupPolicyScheduleTypeOutput {
	return o
}

// The Kind of the object. Currently only Series8000 is supported
func (o ManagerDeviceBackupPolicyScheduleTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagerDeviceBackupPolicyScheduleType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name of the object.
func (o ManagerDeviceBackupPolicyScheduleTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerDeviceBackupPolicyScheduleType) string { return v.Name }).(pulumi.StringOutput)
}

// The properties of the backup schedule.
func (o ManagerDeviceBackupPolicyScheduleTypeOutput) Properties() BackupSchedulePropertiesResponseOutput {
	return o.ApplyT(func(v ManagerDeviceBackupPolicyScheduleType) BackupSchedulePropertiesResponse { return v.Properties }).(BackupSchedulePropertiesResponseOutput)
}

// The hierarchical type of the object.
func (o ManagerDeviceBackupPolicyScheduleTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerDeviceBackupPolicyScheduleType) string { return v.Type }).(pulumi.StringOutput)
}

// The Backup Schedule Group
type ManagerDeviceBackupScheduleGroupType struct {
	// The name.
	Name string `pulumi:"name"`
	// Properties of BackupScheduleGroup
	Properties BackupScheduleGroupPropertiesResponse `pulumi:"properties"`
	// The type.
	Type string `pulumi:"type"`
}

// ManagerDeviceBackupScheduleGroupTypeInput is an input type that accepts ManagerDeviceBackupScheduleGroupTypeArgs and ManagerDeviceBackupScheduleGroupTypeOutput values.
// You can construct a concrete instance of `ManagerDeviceBackupScheduleGroupTypeInput` via:
//
//          ManagerDeviceBackupScheduleGroupTypeArgs{...}
type ManagerDeviceBackupScheduleGroupTypeInput interface {
	pulumi.Input

	ToManagerDeviceBackupScheduleGroupTypeOutput() ManagerDeviceBackupScheduleGroupTypeOutput
	ToManagerDeviceBackupScheduleGroupTypeOutputWithContext(context.Context) ManagerDeviceBackupScheduleGroupTypeOutput
}

// The Backup Schedule Group
type ManagerDeviceBackupScheduleGroupTypeArgs struct {
	// The name.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of BackupScheduleGroup
	Properties BackupScheduleGroupPropertiesResponseInput `pulumi:"properties"`
	// The type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ManagerDeviceBackupScheduleGroupTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerDeviceBackupScheduleGroupType)(nil)).Elem()
}

func (i ManagerDeviceBackupScheduleGroupTypeArgs) ToManagerDeviceBackupScheduleGroupTypeOutput() ManagerDeviceBackupScheduleGroupTypeOutput {
	return i.ToManagerDeviceBackupScheduleGroupTypeOutputWithContext(context.Background())
}

func (i ManagerDeviceBackupScheduleGroupTypeArgs) ToManagerDeviceBackupScheduleGroupTypeOutputWithContext(ctx context.Context) ManagerDeviceBackupScheduleGroupTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerDeviceBackupScheduleGroupTypeOutput)
}

// The Backup Schedule Group
type ManagerDeviceBackupScheduleGroupTypeOutput struct{ *pulumi.OutputState }

func (ManagerDeviceBackupScheduleGroupTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerDeviceBackupScheduleGroupType)(nil)).Elem()
}

func (o ManagerDeviceBackupScheduleGroupTypeOutput) ToManagerDeviceBackupScheduleGroupTypeOutput() ManagerDeviceBackupScheduleGroupTypeOutput {
	return o
}

func (o ManagerDeviceBackupScheduleGroupTypeOutput) ToManagerDeviceBackupScheduleGroupTypeOutputWithContext(ctx context.Context) ManagerDeviceBackupScheduleGroupTypeOutput {
	return o
}

// The name.
func (o ManagerDeviceBackupScheduleGroupTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerDeviceBackupScheduleGroupType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of BackupScheduleGroup
func (o ManagerDeviceBackupScheduleGroupTypeOutput) Properties() BackupScheduleGroupPropertiesResponseOutput {
	return o.ApplyT(func(v ManagerDeviceBackupScheduleGroupType) BackupScheduleGroupPropertiesResponse {
		return v.Properties
	}).(BackupScheduleGroupPropertiesResponseOutput)
}

// The type.
func (o ManagerDeviceBackupScheduleGroupTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerDeviceBackupScheduleGroupType) string { return v.Type }).(pulumi.StringOutput)
}

// Challenge-Handshake Authentication Protocol (CHAP) setting
type ManagerDeviceChapSettingType struct {
	// The name.
	Name string `pulumi:"name"`
	// Chap properties
	Properties ChapPropertiesResponse `pulumi:"properties"`
	// The type.
	Type string `pulumi:"type"`
}

// ManagerDeviceChapSettingTypeInput is an input type that accepts ManagerDeviceChapSettingTypeArgs and ManagerDeviceChapSettingTypeOutput values.
// You can construct a concrete instance of `ManagerDeviceChapSettingTypeInput` via:
//
//          ManagerDeviceChapSettingTypeArgs{...}
type ManagerDeviceChapSettingTypeInput interface {
	pulumi.Input

	ToManagerDeviceChapSettingTypeOutput() ManagerDeviceChapSettingTypeOutput
	ToManagerDeviceChapSettingTypeOutputWithContext(context.Context) ManagerDeviceChapSettingTypeOutput
}

// Challenge-Handshake Authentication Protocol (CHAP) setting
type ManagerDeviceChapSettingTypeArgs struct {
	// The name.
	Name pulumi.StringInput `pulumi:"name"`
	// Chap properties
	Properties ChapPropertiesResponseInput `pulumi:"properties"`
	// The type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ManagerDeviceChapSettingTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerDeviceChapSettingType)(nil)).Elem()
}

func (i ManagerDeviceChapSettingTypeArgs) ToManagerDeviceChapSettingTypeOutput() ManagerDeviceChapSettingTypeOutput {
	return i.ToManagerDeviceChapSettingTypeOutputWithContext(context.Background())
}

func (i ManagerDeviceChapSettingTypeArgs) ToManagerDeviceChapSettingTypeOutputWithContext(ctx context.Context) ManagerDeviceChapSettingTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerDeviceChapSettingTypeOutput)
}

// Challenge-Handshake Authentication Protocol (CHAP) setting
type ManagerDeviceChapSettingTypeOutput struct{ *pulumi.OutputState }

func (ManagerDeviceChapSettingTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerDeviceChapSettingType)(nil)).Elem()
}

func (o ManagerDeviceChapSettingTypeOutput) ToManagerDeviceChapSettingTypeOutput() ManagerDeviceChapSettingTypeOutput {
	return o
}

func (o ManagerDeviceChapSettingTypeOutput) ToManagerDeviceChapSettingTypeOutputWithContext(ctx context.Context) ManagerDeviceChapSettingTypeOutput {
	return o
}

// The name.
func (o ManagerDeviceChapSettingTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerDeviceChapSettingType) string { return v.Name }).(pulumi.StringOutput)
}

// Chap properties
func (o ManagerDeviceChapSettingTypeOutput) Properties() ChapPropertiesResponseOutput {
	return o.ApplyT(func(v ManagerDeviceChapSettingType) ChapPropertiesResponse { return v.Properties }).(ChapPropertiesResponseOutput)
}

// The type.
func (o ManagerDeviceChapSettingTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerDeviceChapSettingType) string { return v.Type }).(pulumi.StringOutput)
}

// The file server.
type ManagerDeviceFileserverType struct {
	// The name.
	Name string `pulumi:"name"`
	// The properties.
	Properties FileServerPropertiesResponse `pulumi:"properties"`
	// The type.
	Type string `pulumi:"type"`
}

// ManagerDeviceFileserverTypeInput is an input type that accepts ManagerDeviceFileserverTypeArgs and ManagerDeviceFileserverTypeOutput values.
// You can construct a concrete instance of `ManagerDeviceFileserverTypeInput` via:
//
//          ManagerDeviceFileserverTypeArgs{...}
type ManagerDeviceFileserverTypeInput interface {
	pulumi.Input

	ToManagerDeviceFileserverTypeOutput() ManagerDeviceFileserverTypeOutput
	ToManagerDeviceFileserverTypeOutputWithContext(context.Context) ManagerDeviceFileserverTypeOutput
}

// The file server.
type ManagerDeviceFileserverTypeArgs struct {
	// The name.
	Name pulumi.StringInput `pulumi:"name"`
	// The properties.
	Properties FileServerPropertiesResponseInput `pulumi:"properties"`
	// The type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ManagerDeviceFileserverTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerDeviceFileserverType)(nil)).Elem()
}

func (i ManagerDeviceFileserverTypeArgs) ToManagerDeviceFileserverTypeOutput() ManagerDeviceFileserverTypeOutput {
	return i.ToManagerDeviceFileserverTypeOutputWithContext(context.Background())
}

func (i ManagerDeviceFileserverTypeArgs) ToManagerDeviceFileserverTypeOutputWithContext(ctx context.Context) ManagerDeviceFileserverTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerDeviceFileserverTypeOutput)
}

// The file server.
type ManagerDeviceFileserverTypeOutput struct{ *pulumi.OutputState }

func (ManagerDeviceFileserverTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerDeviceFileserverType)(nil)).Elem()
}

func (o ManagerDeviceFileserverTypeOutput) ToManagerDeviceFileserverTypeOutput() ManagerDeviceFileserverTypeOutput {
	return o
}

func (o ManagerDeviceFileserverTypeOutput) ToManagerDeviceFileserverTypeOutputWithContext(ctx context.Context) ManagerDeviceFileserverTypeOutput {
	return o
}

// The name.
func (o ManagerDeviceFileserverTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerDeviceFileserverType) string { return v.Name }).(pulumi.StringOutput)
}

// The properties.
func (o ManagerDeviceFileserverTypeOutput) Properties() FileServerPropertiesResponseOutput {
	return o.ApplyT(func(v ManagerDeviceFileserverType) FileServerPropertiesResponse { return v.Properties }).(FileServerPropertiesResponseOutput)
}

// The type.
func (o ManagerDeviceFileserverTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerDeviceFileserverType) string { return v.Type }).(pulumi.StringOutput)
}

// The File Share.
type ManagerDeviceFileserverShareType struct {
	// The name.
	Name string `pulumi:"name"`
	// The properties.
	Properties FileSharePropertiesResponse `pulumi:"properties"`
	// The type.
	Type string `pulumi:"type"`
}

// ManagerDeviceFileserverShareTypeInput is an input type that accepts ManagerDeviceFileserverShareTypeArgs and ManagerDeviceFileserverShareTypeOutput values.
// You can construct a concrete instance of `ManagerDeviceFileserverShareTypeInput` via:
//
//          ManagerDeviceFileserverShareTypeArgs{...}
type ManagerDeviceFileserverShareTypeInput interface {
	pulumi.Input

	ToManagerDeviceFileserverShareTypeOutput() ManagerDeviceFileserverShareTypeOutput
	ToManagerDeviceFileserverShareTypeOutputWithContext(context.Context) ManagerDeviceFileserverShareTypeOutput
}

// The File Share.
type ManagerDeviceFileserverShareTypeArgs struct {
	// The name.
	Name pulumi.StringInput `pulumi:"name"`
	// The properties.
	Properties FileSharePropertiesResponseInput `pulumi:"properties"`
	// The type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ManagerDeviceFileserverShareTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerDeviceFileserverShareType)(nil)).Elem()
}

func (i ManagerDeviceFileserverShareTypeArgs) ToManagerDeviceFileserverShareTypeOutput() ManagerDeviceFileserverShareTypeOutput {
	return i.ToManagerDeviceFileserverShareTypeOutputWithContext(context.Background())
}

func (i ManagerDeviceFileserverShareTypeArgs) ToManagerDeviceFileserverShareTypeOutputWithContext(ctx context.Context) ManagerDeviceFileserverShareTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerDeviceFileserverShareTypeOutput)
}

// The File Share.
type ManagerDeviceFileserverShareTypeOutput struct{ *pulumi.OutputState }

func (ManagerDeviceFileserverShareTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerDeviceFileserverShareType)(nil)).Elem()
}

func (o ManagerDeviceFileserverShareTypeOutput) ToManagerDeviceFileserverShareTypeOutput() ManagerDeviceFileserverShareTypeOutput {
	return o
}

func (o ManagerDeviceFileserverShareTypeOutput) ToManagerDeviceFileserverShareTypeOutputWithContext(ctx context.Context) ManagerDeviceFileserverShareTypeOutput {
	return o
}

// The name.
func (o ManagerDeviceFileserverShareTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerDeviceFileserverShareType) string { return v.Name }).(pulumi.StringOutput)
}

// The properties.
func (o ManagerDeviceFileserverShareTypeOutput) Properties() FileSharePropertiesResponseOutput {
	return o.ApplyT(func(v ManagerDeviceFileserverShareType) FileSharePropertiesResponse { return v.Properties }).(FileSharePropertiesResponseOutput)
}

// The type.
func (o ManagerDeviceFileserverShareTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerDeviceFileserverShareType) string { return v.Type }).(pulumi.StringOutput)
}

// The iSCSI server.
type ManagerDeviceIscsiserverType struct {
	// The name.
	Name string `pulumi:"name"`
	// The properties.
	Properties ISCSIServerPropertiesResponse `pulumi:"properties"`
	// The type.
	Type string `pulumi:"type"`
}

// ManagerDeviceIscsiserverTypeInput is an input type that accepts ManagerDeviceIscsiserverTypeArgs and ManagerDeviceIscsiserverTypeOutput values.
// You can construct a concrete instance of `ManagerDeviceIscsiserverTypeInput` via:
//
//          ManagerDeviceIscsiserverTypeArgs{...}
type ManagerDeviceIscsiserverTypeInput interface {
	pulumi.Input

	ToManagerDeviceIscsiserverTypeOutput() ManagerDeviceIscsiserverTypeOutput
	ToManagerDeviceIscsiserverTypeOutputWithContext(context.Context) ManagerDeviceIscsiserverTypeOutput
}

// The iSCSI server.
type ManagerDeviceIscsiserverTypeArgs struct {
	// The name.
	Name pulumi.StringInput `pulumi:"name"`
	// The properties.
	Properties ISCSIServerPropertiesResponseInput `pulumi:"properties"`
	// The type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ManagerDeviceIscsiserverTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerDeviceIscsiserverType)(nil)).Elem()
}

func (i ManagerDeviceIscsiserverTypeArgs) ToManagerDeviceIscsiserverTypeOutput() ManagerDeviceIscsiserverTypeOutput {
	return i.ToManagerDeviceIscsiserverTypeOutputWithContext(context.Background())
}

func (i ManagerDeviceIscsiserverTypeArgs) ToManagerDeviceIscsiserverTypeOutputWithContext(ctx context.Context) ManagerDeviceIscsiserverTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerDeviceIscsiserverTypeOutput)
}

// The iSCSI server.
type ManagerDeviceIscsiserverTypeOutput struct{ *pulumi.OutputState }

func (ManagerDeviceIscsiserverTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerDeviceIscsiserverType)(nil)).Elem()
}

func (o ManagerDeviceIscsiserverTypeOutput) ToManagerDeviceIscsiserverTypeOutput() ManagerDeviceIscsiserverTypeOutput {
	return o
}

func (o ManagerDeviceIscsiserverTypeOutput) ToManagerDeviceIscsiserverTypeOutputWithContext(ctx context.Context) ManagerDeviceIscsiserverTypeOutput {
	return o
}

// The name.
func (o ManagerDeviceIscsiserverTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerDeviceIscsiserverType) string { return v.Name }).(pulumi.StringOutput)
}

// The properties.
func (o ManagerDeviceIscsiserverTypeOutput) Properties() ISCSIServerPropertiesResponseOutput {
	return o.ApplyT(func(v ManagerDeviceIscsiserverType) ISCSIServerPropertiesResponse { return v.Properties }).(ISCSIServerPropertiesResponseOutput)
}

// The type.
func (o ManagerDeviceIscsiserverTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerDeviceIscsiserverType) string { return v.Type }).(pulumi.StringOutput)
}

// The iSCSI disk.
type ManagerDeviceIscsiserverDiskType struct {
	// The name.
	Name string `pulumi:"name"`
	// The properties.
	Properties ISCSIDiskPropertiesResponse `pulumi:"properties"`
	// The type.
	Type string `pulumi:"type"`
}

// ManagerDeviceIscsiserverDiskTypeInput is an input type that accepts ManagerDeviceIscsiserverDiskTypeArgs and ManagerDeviceIscsiserverDiskTypeOutput values.
// You can construct a concrete instance of `ManagerDeviceIscsiserverDiskTypeInput` via:
//
//          ManagerDeviceIscsiserverDiskTypeArgs{...}
type ManagerDeviceIscsiserverDiskTypeInput interface {
	pulumi.Input

	ToManagerDeviceIscsiserverDiskTypeOutput() ManagerDeviceIscsiserverDiskTypeOutput
	ToManagerDeviceIscsiserverDiskTypeOutputWithContext(context.Context) ManagerDeviceIscsiserverDiskTypeOutput
}

// The iSCSI disk.
type ManagerDeviceIscsiserverDiskTypeArgs struct {
	// The name.
	Name pulumi.StringInput `pulumi:"name"`
	// The properties.
	Properties ISCSIDiskPropertiesResponseInput `pulumi:"properties"`
	// The type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ManagerDeviceIscsiserverDiskTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerDeviceIscsiserverDiskType)(nil)).Elem()
}

func (i ManagerDeviceIscsiserverDiskTypeArgs) ToManagerDeviceIscsiserverDiskTypeOutput() ManagerDeviceIscsiserverDiskTypeOutput {
	return i.ToManagerDeviceIscsiserverDiskTypeOutputWithContext(context.Background())
}

func (i ManagerDeviceIscsiserverDiskTypeArgs) ToManagerDeviceIscsiserverDiskTypeOutputWithContext(ctx context.Context) ManagerDeviceIscsiserverDiskTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerDeviceIscsiserverDiskTypeOutput)
}

// The iSCSI disk.
type ManagerDeviceIscsiserverDiskTypeOutput struct{ *pulumi.OutputState }

func (ManagerDeviceIscsiserverDiskTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerDeviceIscsiserverDiskType)(nil)).Elem()
}

func (o ManagerDeviceIscsiserverDiskTypeOutput) ToManagerDeviceIscsiserverDiskTypeOutput() ManagerDeviceIscsiserverDiskTypeOutput {
	return o
}

func (o ManagerDeviceIscsiserverDiskTypeOutput) ToManagerDeviceIscsiserverDiskTypeOutputWithContext(ctx context.Context) ManagerDeviceIscsiserverDiskTypeOutput {
	return o
}

// The name.
func (o ManagerDeviceIscsiserverDiskTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerDeviceIscsiserverDiskType) string { return v.Name }).(pulumi.StringOutput)
}

// The properties.
func (o ManagerDeviceIscsiserverDiskTypeOutput) Properties() ISCSIDiskPropertiesResponseOutput {
	return o.ApplyT(func(v ManagerDeviceIscsiserverDiskType) ISCSIDiskPropertiesResponse { return v.Properties }).(ISCSIDiskPropertiesResponseOutput)
}

// The type.
func (o ManagerDeviceIscsiserverDiskTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerDeviceIscsiserverDiskType) string { return v.Type }).(pulumi.StringOutput)
}

// The volume container.
type ManagerDeviceVolumeContainerType struct {
	// The Kind of the object. Currently only Series8000 is supported
	Kind *string `pulumi:"kind"`
	// The name of the object.
	Name string `pulumi:"name"`
	// The volume container properties.
	Properties VolumeContainerPropertiesResponse `pulumi:"properties"`
	// The hierarchical type of the object.
	Type string `pulumi:"type"`
}

// ManagerDeviceVolumeContainerTypeInput is an input type that accepts ManagerDeviceVolumeContainerTypeArgs and ManagerDeviceVolumeContainerTypeOutput values.
// You can construct a concrete instance of `ManagerDeviceVolumeContainerTypeInput` via:
//
//          ManagerDeviceVolumeContainerTypeArgs{...}
type ManagerDeviceVolumeContainerTypeInput interface {
	pulumi.Input

	ToManagerDeviceVolumeContainerTypeOutput() ManagerDeviceVolumeContainerTypeOutput
	ToManagerDeviceVolumeContainerTypeOutputWithContext(context.Context) ManagerDeviceVolumeContainerTypeOutput
}

// The volume container.
type ManagerDeviceVolumeContainerTypeArgs struct {
	// The Kind of the object. Currently only Series8000 is supported
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name of the object.
	Name pulumi.StringInput `pulumi:"name"`
	// The volume container properties.
	Properties VolumeContainerPropertiesResponseInput `pulumi:"properties"`
	// The hierarchical type of the object.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ManagerDeviceVolumeContainerTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerDeviceVolumeContainerType)(nil)).Elem()
}

func (i ManagerDeviceVolumeContainerTypeArgs) ToManagerDeviceVolumeContainerTypeOutput() ManagerDeviceVolumeContainerTypeOutput {
	return i.ToManagerDeviceVolumeContainerTypeOutputWithContext(context.Background())
}

func (i ManagerDeviceVolumeContainerTypeArgs) ToManagerDeviceVolumeContainerTypeOutputWithContext(ctx context.Context) ManagerDeviceVolumeContainerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerDeviceVolumeContainerTypeOutput)
}

// The volume container.
type ManagerDeviceVolumeContainerTypeOutput struct{ *pulumi.OutputState }

func (ManagerDeviceVolumeContainerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerDeviceVolumeContainerType)(nil)).Elem()
}

func (o ManagerDeviceVolumeContainerTypeOutput) ToManagerDeviceVolumeContainerTypeOutput() ManagerDeviceVolumeContainerTypeOutput {
	return o
}

func (o ManagerDeviceVolumeContainerTypeOutput) ToManagerDeviceVolumeContainerTypeOutputWithContext(ctx context.Context) ManagerDeviceVolumeContainerTypeOutput {
	return o
}

// The Kind of the object. Currently only Series8000 is supported
func (o ManagerDeviceVolumeContainerTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagerDeviceVolumeContainerType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name of the object.
func (o ManagerDeviceVolumeContainerTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerDeviceVolumeContainerType) string { return v.Name }).(pulumi.StringOutput)
}

// The volume container properties.
func (o ManagerDeviceVolumeContainerTypeOutput) Properties() VolumeContainerPropertiesResponseOutput {
	return o.ApplyT(func(v ManagerDeviceVolumeContainerType) VolumeContainerPropertiesResponse { return v.Properties }).(VolumeContainerPropertiesResponseOutput)
}

// The hierarchical type of the object.
func (o ManagerDeviceVolumeContainerTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerDeviceVolumeContainerType) string { return v.Type }).(pulumi.StringOutput)
}

// The volume.
type ManagerDeviceVolumeContainerVolumeType struct {
	// The Kind of the object. Currently only Series8000 is supported
	Kind *string `pulumi:"kind"`
	// The name of the object.
	Name string `pulumi:"name"`
	// The properties of the volume.
	Properties VolumePropertiesResponse `pulumi:"properties"`
	// The hierarchical type of the object.
	Type string `pulumi:"type"`
}

// ManagerDeviceVolumeContainerVolumeTypeInput is an input type that accepts ManagerDeviceVolumeContainerVolumeTypeArgs and ManagerDeviceVolumeContainerVolumeTypeOutput values.
// You can construct a concrete instance of `ManagerDeviceVolumeContainerVolumeTypeInput` via:
//
//          ManagerDeviceVolumeContainerVolumeTypeArgs{...}
type ManagerDeviceVolumeContainerVolumeTypeInput interface {
	pulumi.Input

	ToManagerDeviceVolumeContainerVolumeTypeOutput() ManagerDeviceVolumeContainerVolumeTypeOutput
	ToManagerDeviceVolumeContainerVolumeTypeOutputWithContext(context.Context) ManagerDeviceVolumeContainerVolumeTypeOutput
}

// The volume.
type ManagerDeviceVolumeContainerVolumeTypeArgs struct {
	// The Kind of the object. Currently only Series8000 is supported
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name of the object.
	Name pulumi.StringInput `pulumi:"name"`
	// The properties of the volume.
	Properties VolumePropertiesResponseInput `pulumi:"properties"`
	// The hierarchical type of the object.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ManagerDeviceVolumeContainerVolumeTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerDeviceVolumeContainerVolumeType)(nil)).Elem()
}

func (i ManagerDeviceVolumeContainerVolumeTypeArgs) ToManagerDeviceVolumeContainerVolumeTypeOutput() ManagerDeviceVolumeContainerVolumeTypeOutput {
	return i.ToManagerDeviceVolumeContainerVolumeTypeOutputWithContext(context.Background())
}

func (i ManagerDeviceVolumeContainerVolumeTypeArgs) ToManagerDeviceVolumeContainerVolumeTypeOutputWithContext(ctx context.Context) ManagerDeviceVolumeContainerVolumeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerDeviceVolumeContainerVolumeTypeOutput)
}

// The volume.
type ManagerDeviceVolumeContainerVolumeTypeOutput struct{ *pulumi.OutputState }

func (ManagerDeviceVolumeContainerVolumeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerDeviceVolumeContainerVolumeType)(nil)).Elem()
}

func (o ManagerDeviceVolumeContainerVolumeTypeOutput) ToManagerDeviceVolumeContainerVolumeTypeOutput() ManagerDeviceVolumeContainerVolumeTypeOutput {
	return o
}

func (o ManagerDeviceVolumeContainerVolumeTypeOutput) ToManagerDeviceVolumeContainerVolumeTypeOutputWithContext(ctx context.Context) ManagerDeviceVolumeContainerVolumeTypeOutput {
	return o
}

// The Kind of the object. Currently only Series8000 is supported
func (o ManagerDeviceVolumeContainerVolumeTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagerDeviceVolumeContainerVolumeType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name of the object.
func (o ManagerDeviceVolumeContainerVolumeTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerDeviceVolumeContainerVolumeType) string { return v.Name }).(pulumi.StringOutput)
}

// The properties of the volume.
func (o ManagerDeviceVolumeContainerVolumeTypeOutput) Properties() VolumePropertiesResponseOutput {
	return o.ApplyT(func(v ManagerDeviceVolumeContainerVolumeType) VolumePropertiesResponse { return v.Properties }).(VolumePropertiesResponseOutput)
}

// The hierarchical type of the object.
func (o ManagerDeviceVolumeContainerVolumeTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerDeviceVolumeContainerVolumeType) string { return v.Type }).(pulumi.StringOutput)
}

// The properties of the manager extended info.
type ManagerExtendedInfoProperties struct {
	// Represents the encryption algorithm used to encrypt the keys. None - if Key is saved in plain text format. Algorithm name - if key is encrypted
	Algorithm string `pulumi:"algorithm"`
	// Represents the CEK of the resource.
	EncryptionKey *string `pulumi:"encryptionKey"`
	// Represents the Cert thumbprint that was used to encrypt the CEK.
	EncryptionKeyThumbprint *string `pulumi:"encryptionKeyThumbprint"`
	// Represents the CIK of the resource.
	IntegrityKey string `pulumi:"integrityKey"`
	// Represents the portal thumbprint which can be used optionally to encrypt the entire data before storing it.
	PortalCertificateThumbprint *string `pulumi:"portalCertificateThumbprint"`
	// The version of the extended info being persisted.
	Version *string `pulumi:"version"`
}

// ManagerExtendedInfoPropertiesInput is an input type that accepts ManagerExtendedInfoPropertiesArgs and ManagerExtendedInfoPropertiesOutput values.
// You can construct a concrete instance of `ManagerExtendedInfoPropertiesInput` via:
//
//          ManagerExtendedInfoPropertiesArgs{...}
type ManagerExtendedInfoPropertiesInput interface {
	pulumi.Input

	ToManagerExtendedInfoPropertiesOutput() ManagerExtendedInfoPropertiesOutput
	ToManagerExtendedInfoPropertiesOutputWithContext(context.Context) ManagerExtendedInfoPropertiesOutput
}

// The properties of the manager extended info.
type ManagerExtendedInfoPropertiesArgs struct {
	// Represents the encryption algorithm used to encrypt the keys. None - if Key is saved in plain text format. Algorithm name - if key is encrypted
	Algorithm pulumi.StringInput `pulumi:"algorithm"`
	// Represents the CEK of the resource.
	EncryptionKey pulumi.StringPtrInput `pulumi:"encryptionKey"`
	// Represents the Cert thumbprint that was used to encrypt the CEK.
	EncryptionKeyThumbprint pulumi.StringPtrInput `pulumi:"encryptionKeyThumbprint"`
	// Represents the CIK of the resource.
	IntegrityKey pulumi.StringInput `pulumi:"integrityKey"`
	// Represents the portal thumbprint which can be used optionally to encrypt the entire data before storing it.
	PortalCertificateThumbprint pulumi.StringPtrInput `pulumi:"portalCertificateThumbprint"`
	// The version of the extended info being persisted.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ManagerExtendedInfoPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerExtendedInfoProperties)(nil)).Elem()
}

func (i ManagerExtendedInfoPropertiesArgs) ToManagerExtendedInfoPropertiesOutput() ManagerExtendedInfoPropertiesOutput {
	return i.ToManagerExtendedInfoPropertiesOutputWithContext(context.Background())
}

func (i ManagerExtendedInfoPropertiesArgs) ToManagerExtendedInfoPropertiesOutputWithContext(ctx context.Context) ManagerExtendedInfoPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerExtendedInfoPropertiesOutput)
}

func (i ManagerExtendedInfoPropertiesArgs) ToManagerExtendedInfoPropertiesPtrOutput() ManagerExtendedInfoPropertiesPtrOutput {
	return i.ToManagerExtendedInfoPropertiesPtrOutputWithContext(context.Background())
}

func (i ManagerExtendedInfoPropertiesArgs) ToManagerExtendedInfoPropertiesPtrOutputWithContext(ctx context.Context) ManagerExtendedInfoPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerExtendedInfoPropertiesOutput).ToManagerExtendedInfoPropertiesPtrOutputWithContext(ctx)
}

// ManagerExtendedInfoPropertiesPtrInput is an input type that accepts ManagerExtendedInfoPropertiesArgs, ManagerExtendedInfoPropertiesPtr and ManagerExtendedInfoPropertiesPtrOutput values.
// You can construct a concrete instance of `ManagerExtendedInfoPropertiesPtrInput` via:
//
//          ManagerExtendedInfoPropertiesArgs{...}
//
//  or:
//
//          nil
type ManagerExtendedInfoPropertiesPtrInput interface {
	pulumi.Input

	ToManagerExtendedInfoPropertiesPtrOutput() ManagerExtendedInfoPropertiesPtrOutput
	ToManagerExtendedInfoPropertiesPtrOutputWithContext(context.Context) ManagerExtendedInfoPropertiesPtrOutput
}

type managerExtendedInfoPropertiesPtrType ManagerExtendedInfoPropertiesArgs

func ManagerExtendedInfoPropertiesPtr(v *ManagerExtendedInfoPropertiesArgs) ManagerExtendedInfoPropertiesPtrInput {
	return (*managerExtendedInfoPropertiesPtrType)(v)
}

func (*managerExtendedInfoPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagerExtendedInfoProperties)(nil)).Elem()
}

func (i *managerExtendedInfoPropertiesPtrType) ToManagerExtendedInfoPropertiesPtrOutput() ManagerExtendedInfoPropertiesPtrOutput {
	return i.ToManagerExtendedInfoPropertiesPtrOutputWithContext(context.Background())
}

func (i *managerExtendedInfoPropertiesPtrType) ToManagerExtendedInfoPropertiesPtrOutputWithContext(ctx context.Context) ManagerExtendedInfoPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerExtendedInfoPropertiesPtrOutput)
}

// The properties of the manager extended info.
type ManagerExtendedInfoPropertiesOutput struct{ *pulumi.OutputState }

func (ManagerExtendedInfoPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerExtendedInfoProperties)(nil)).Elem()
}

func (o ManagerExtendedInfoPropertiesOutput) ToManagerExtendedInfoPropertiesOutput() ManagerExtendedInfoPropertiesOutput {
	return o
}

func (o ManagerExtendedInfoPropertiesOutput) ToManagerExtendedInfoPropertiesOutputWithContext(ctx context.Context) ManagerExtendedInfoPropertiesOutput {
	return o
}

func (o ManagerExtendedInfoPropertiesOutput) ToManagerExtendedInfoPropertiesPtrOutput() ManagerExtendedInfoPropertiesPtrOutput {
	return o.ToManagerExtendedInfoPropertiesPtrOutputWithContext(context.Background())
}

func (o ManagerExtendedInfoPropertiesOutput) ToManagerExtendedInfoPropertiesPtrOutputWithContext(ctx context.Context) ManagerExtendedInfoPropertiesPtrOutput {
	return o.ApplyT(func(v ManagerExtendedInfoProperties) *ManagerExtendedInfoProperties {
		return &v
	}).(ManagerExtendedInfoPropertiesPtrOutput)
}

// Represents the encryption algorithm used to encrypt the keys. None - if Key is saved in plain text format. Algorithm name - if key is encrypted
func (o ManagerExtendedInfoPropertiesOutput) Algorithm() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerExtendedInfoProperties) string { return v.Algorithm }).(pulumi.StringOutput)
}

// Represents the CEK of the resource.
func (o ManagerExtendedInfoPropertiesOutput) EncryptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagerExtendedInfoProperties) *string { return v.EncryptionKey }).(pulumi.StringPtrOutput)
}

// Represents the Cert thumbprint that was used to encrypt the CEK.
func (o ManagerExtendedInfoPropertiesOutput) EncryptionKeyThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagerExtendedInfoProperties) *string { return v.EncryptionKeyThumbprint }).(pulumi.StringPtrOutput)
}

// Represents the CIK of the resource.
func (o ManagerExtendedInfoPropertiesOutput) IntegrityKey() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerExtendedInfoProperties) string { return v.IntegrityKey }).(pulumi.StringOutput)
}

// Represents the portal thumbprint which can be used optionally to encrypt the entire data before storing it.
func (o ManagerExtendedInfoPropertiesOutput) PortalCertificateThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagerExtendedInfoProperties) *string { return v.PortalCertificateThumbprint }).(pulumi.StringPtrOutput)
}

// The version of the extended info being persisted.
func (o ManagerExtendedInfoPropertiesOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagerExtendedInfoProperties) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ManagerExtendedInfoPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ManagerExtendedInfoPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagerExtendedInfoProperties)(nil)).Elem()
}

func (o ManagerExtendedInfoPropertiesPtrOutput) ToManagerExtendedInfoPropertiesPtrOutput() ManagerExtendedInfoPropertiesPtrOutput {
	return o
}

func (o ManagerExtendedInfoPropertiesPtrOutput) ToManagerExtendedInfoPropertiesPtrOutputWithContext(ctx context.Context) ManagerExtendedInfoPropertiesPtrOutput {
	return o
}

func (o ManagerExtendedInfoPropertiesPtrOutput) Elem() ManagerExtendedInfoPropertiesOutput {
	return o.ApplyT(func(v *ManagerExtendedInfoProperties) ManagerExtendedInfoProperties { return *v }).(ManagerExtendedInfoPropertiesOutput)
}

// Represents the encryption algorithm used to encrypt the keys. None - if Key is saved in plain text format. Algorithm name - if key is encrypted
func (o ManagerExtendedInfoPropertiesPtrOutput) Algorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagerExtendedInfoProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Algorithm
	}).(pulumi.StringPtrOutput)
}

// Represents the CEK of the resource.
func (o ManagerExtendedInfoPropertiesPtrOutput) EncryptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagerExtendedInfoProperties) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionKey
	}).(pulumi.StringPtrOutput)
}

// Represents the Cert thumbprint that was used to encrypt the CEK.
func (o ManagerExtendedInfoPropertiesPtrOutput) EncryptionKeyThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagerExtendedInfoProperties) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionKeyThumbprint
	}).(pulumi.StringPtrOutput)
}

// Represents the CIK of the resource.
func (o ManagerExtendedInfoPropertiesPtrOutput) IntegrityKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagerExtendedInfoProperties) *string {
		if v == nil {
			return nil
		}
		return &v.IntegrityKey
	}).(pulumi.StringPtrOutput)
}

// Represents the portal thumbprint which can be used optionally to encrypt the entire data before storing it.
func (o ManagerExtendedInfoPropertiesPtrOutput) PortalCertificateThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagerExtendedInfoProperties) *string {
		if v == nil {
			return nil
		}
		return v.PortalCertificateThumbprint
	}).(pulumi.StringPtrOutput)
}

// The version of the extended info being persisted.
func (o ManagerExtendedInfoPropertiesPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagerExtendedInfoProperties) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// The properties of the manager extended info.
type ManagerExtendedInfoPropertiesResponse struct {
	// Represents the encryption algorithm used to encrypt the keys. None - if Key is saved in plain text format. Algorithm name - if key is encrypted
	Algorithm string `pulumi:"algorithm"`
	// Represents the CEK of the resource.
	EncryptionKey *string `pulumi:"encryptionKey"`
	// Represents the Cert thumbprint that was used to encrypt the CEK.
	EncryptionKeyThumbprint *string `pulumi:"encryptionKeyThumbprint"`
	// Represents the CIK of the resource.
	IntegrityKey string `pulumi:"integrityKey"`
	// Represents the portal thumbprint which can be used optionally to encrypt the entire data before storing it.
	PortalCertificateThumbprint *string `pulumi:"portalCertificateThumbprint"`
	// The version of the extended info being persisted.
	Version *string `pulumi:"version"`
}

// ManagerExtendedInfoPropertiesResponseInput is an input type that accepts ManagerExtendedInfoPropertiesResponseArgs and ManagerExtendedInfoPropertiesResponseOutput values.
// You can construct a concrete instance of `ManagerExtendedInfoPropertiesResponseInput` via:
//
//          ManagerExtendedInfoPropertiesResponseArgs{...}
type ManagerExtendedInfoPropertiesResponseInput interface {
	pulumi.Input

	ToManagerExtendedInfoPropertiesResponseOutput() ManagerExtendedInfoPropertiesResponseOutput
	ToManagerExtendedInfoPropertiesResponseOutputWithContext(context.Context) ManagerExtendedInfoPropertiesResponseOutput
}

// The properties of the manager extended info.
type ManagerExtendedInfoPropertiesResponseArgs struct {
	// Represents the encryption algorithm used to encrypt the keys. None - if Key is saved in plain text format. Algorithm name - if key is encrypted
	Algorithm pulumi.StringInput `pulumi:"algorithm"`
	// Represents the CEK of the resource.
	EncryptionKey pulumi.StringPtrInput `pulumi:"encryptionKey"`
	// Represents the Cert thumbprint that was used to encrypt the CEK.
	EncryptionKeyThumbprint pulumi.StringPtrInput `pulumi:"encryptionKeyThumbprint"`
	// Represents the CIK of the resource.
	IntegrityKey pulumi.StringInput `pulumi:"integrityKey"`
	// Represents the portal thumbprint which can be used optionally to encrypt the entire data before storing it.
	PortalCertificateThumbprint pulumi.StringPtrInput `pulumi:"portalCertificateThumbprint"`
	// The version of the extended info being persisted.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ManagerExtendedInfoPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerExtendedInfoPropertiesResponse)(nil)).Elem()
}

func (i ManagerExtendedInfoPropertiesResponseArgs) ToManagerExtendedInfoPropertiesResponseOutput() ManagerExtendedInfoPropertiesResponseOutput {
	return i.ToManagerExtendedInfoPropertiesResponseOutputWithContext(context.Background())
}

func (i ManagerExtendedInfoPropertiesResponseArgs) ToManagerExtendedInfoPropertiesResponseOutputWithContext(ctx context.Context) ManagerExtendedInfoPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerExtendedInfoPropertiesResponseOutput)
}

func (i ManagerExtendedInfoPropertiesResponseArgs) ToManagerExtendedInfoPropertiesResponsePtrOutput() ManagerExtendedInfoPropertiesResponsePtrOutput {
	return i.ToManagerExtendedInfoPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ManagerExtendedInfoPropertiesResponseArgs) ToManagerExtendedInfoPropertiesResponsePtrOutputWithContext(ctx context.Context) ManagerExtendedInfoPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerExtendedInfoPropertiesResponseOutput).ToManagerExtendedInfoPropertiesResponsePtrOutputWithContext(ctx)
}

// ManagerExtendedInfoPropertiesResponsePtrInput is an input type that accepts ManagerExtendedInfoPropertiesResponseArgs, ManagerExtendedInfoPropertiesResponsePtr and ManagerExtendedInfoPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ManagerExtendedInfoPropertiesResponsePtrInput` via:
//
//          ManagerExtendedInfoPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ManagerExtendedInfoPropertiesResponsePtrInput interface {
	pulumi.Input

	ToManagerExtendedInfoPropertiesResponsePtrOutput() ManagerExtendedInfoPropertiesResponsePtrOutput
	ToManagerExtendedInfoPropertiesResponsePtrOutputWithContext(context.Context) ManagerExtendedInfoPropertiesResponsePtrOutput
}

type managerExtendedInfoPropertiesResponsePtrType ManagerExtendedInfoPropertiesResponseArgs

func ManagerExtendedInfoPropertiesResponsePtr(v *ManagerExtendedInfoPropertiesResponseArgs) ManagerExtendedInfoPropertiesResponsePtrInput {
	return (*managerExtendedInfoPropertiesResponsePtrType)(v)
}

func (*managerExtendedInfoPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagerExtendedInfoPropertiesResponse)(nil)).Elem()
}

func (i *managerExtendedInfoPropertiesResponsePtrType) ToManagerExtendedInfoPropertiesResponsePtrOutput() ManagerExtendedInfoPropertiesResponsePtrOutput {
	return i.ToManagerExtendedInfoPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *managerExtendedInfoPropertiesResponsePtrType) ToManagerExtendedInfoPropertiesResponsePtrOutputWithContext(ctx context.Context) ManagerExtendedInfoPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerExtendedInfoPropertiesResponsePtrOutput)
}

// The properties of the manager extended info.
type ManagerExtendedInfoPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ManagerExtendedInfoPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerExtendedInfoPropertiesResponse)(nil)).Elem()
}

func (o ManagerExtendedInfoPropertiesResponseOutput) ToManagerExtendedInfoPropertiesResponseOutput() ManagerExtendedInfoPropertiesResponseOutput {
	return o
}

func (o ManagerExtendedInfoPropertiesResponseOutput) ToManagerExtendedInfoPropertiesResponseOutputWithContext(ctx context.Context) ManagerExtendedInfoPropertiesResponseOutput {
	return o
}

func (o ManagerExtendedInfoPropertiesResponseOutput) ToManagerExtendedInfoPropertiesResponsePtrOutput() ManagerExtendedInfoPropertiesResponsePtrOutput {
	return o.ToManagerExtendedInfoPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ManagerExtendedInfoPropertiesResponseOutput) ToManagerExtendedInfoPropertiesResponsePtrOutputWithContext(ctx context.Context) ManagerExtendedInfoPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ManagerExtendedInfoPropertiesResponse) *ManagerExtendedInfoPropertiesResponse {
		return &v
	}).(ManagerExtendedInfoPropertiesResponsePtrOutput)
}

// Represents the encryption algorithm used to encrypt the keys. None - if Key is saved in plain text format. Algorithm name - if key is encrypted
func (o ManagerExtendedInfoPropertiesResponseOutput) Algorithm() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerExtendedInfoPropertiesResponse) string { return v.Algorithm }).(pulumi.StringOutput)
}

// Represents the CEK of the resource.
func (o ManagerExtendedInfoPropertiesResponseOutput) EncryptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagerExtendedInfoPropertiesResponse) *string { return v.EncryptionKey }).(pulumi.StringPtrOutput)
}

// Represents the Cert thumbprint that was used to encrypt the CEK.
func (o ManagerExtendedInfoPropertiesResponseOutput) EncryptionKeyThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagerExtendedInfoPropertiesResponse) *string { return v.EncryptionKeyThumbprint }).(pulumi.StringPtrOutput)
}

// Represents the CIK of the resource.
func (o ManagerExtendedInfoPropertiesResponseOutput) IntegrityKey() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerExtendedInfoPropertiesResponse) string { return v.IntegrityKey }).(pulumi.StringOutput)
}

// Represents the portal thumbprint which can be used optionally to encrypt the entire data before storing it.
func (o ManagerExtendedInfoPropertiesResponseOutput) PortalCertificateThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagerExtendedInfoPropertiesResponse) *string { return v.PortalCertificateThumbprint }).(pulumi.StringPtrOutput)
}

// The version of the extended info being persisted.
func (o ManagerExtendedInfoPropertiesResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagerExtendedInfoPropertiesResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ManagerExtendedInfoPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagerExtendedInfoPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagerExtendedInfoPropertiesResponse)(nil)).Elem()
}

func (o ManagerExtendedInfoPropertiesResponsePtrOutput) ToManagerExtendedInfoPropertiesResponsePtrOutput() ManagerExtendedInfoPropertiesResponsePtrOutput {
	return o
}

func (o ManagerExtendedInfoPropertiesResponsePtrOutput) ToManagerExtendedInfoPropertiesResponsePtrOutputWithContext(ctx context.Context) ManagerExtendedInfoPropertiesResponsePtrOutput {
	return o
}

func (o ManagerExtendedInfoPropertiesResponsePtrOutput) Elem() ManagerExtendedInfoPropertiesResponseOutput {
	return o.ApplyT(func(v *ManagerExtendedInfoPropertiesResponse) ManagerExtendedInfoPropertiesResponse { return *v }).(ManagerExtendedInfoPropertiesResponseOutput)
}

// Represents the encryption algorithm used to encrypt the keys. None - if Key is saved in plain text format. Algorithm name - if key is encrypted
func (o ManagerExtendedInfoPropertiesResponsePtrOutput) Algorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagerExtendedInfoPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Algorithm
	}).(pulumi.StringPtrOutput)
}

// Represents the CEK of the resource.
func (o ManagerExtendedInfoPropertiesResponsePtrOutput) EncryptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagerExtendedInfoPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionKey
	}).(pulumi.StringPtrOutput)
}

// Represents the Cert thumbprint that was used to encrypt the CEK.
func (o ManagerExtendedInfoPropertiesResponsePtrOutput) EncryptionKeyThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagerExtendedInfoPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionKeyThumbprint
	}).(pulumi.StringPtrOutput)
}

// Represents the CIK of the resource.
func (o ManagerExtendedInfoPropertiesResponsePtrOutput) IntegrityKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagerExtendedInfoPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.IntegrityKey
	}).(pulumi.StringPtrOutput)
}

// Represents the portal thumbprint which can be used optionally to encrypt the entire data before storing it.
func (o ManagerExtendedInfoPropertiesResponsePtrOutput) PortalCertificateThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagerExtendedInfoPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PortalCertificateThumbprint
	}).(pulumi.StringPtrOutput)
}

// The version of the extended info being persisted.
func (o ManagerExtendedInfoPropertiesResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagerExtendedInfoPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// The extended info of the manager.
type ManagerExtendedInformationType struct {
	// The etag of the resource.
	Etag *string `pulumi:"etag"`
	// The Kind of the object. Currently only Series8000 is supported
	Kind *string `pulumi:"kind"`
	// The name of the object.
	Name string `pulumi:"name"`
	// The extended info properties.
	Properties ManagerExtendedInfoPropertiesResponse `pulumi:"properties"`
	// The hierarchical type of the object.
	Type string `pulumi:"type"`
}

// ManagerExtendedInformationTypeInput is an input type that accepts ManagerExtendedInformationTypeArgs and ManagerExtendedInformationTypeOutput values.
// You can construct a concrete instance of `ManagerExtendedInformationTypeInput` via:
//
//          ManagerExtendedInformationTypeArgs{...}
type ManagerExtendedInformationTypeInput interface {
	pulumi.Input

	ToManagerExtendedInformationTypeOutput() ManagerExtendedInformationTypeOutput
	ToManagerExtendedInformationTypeOutputWithContext(context.Context) ManagerExtendedInformationTypeOutput
}

// The extended info of the manager.
type ManagerExtendedInformationTypeArgs struct {
	// The etag of the resource.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// The Kind of the object. Currently only Series8000 is supported
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name of the object.
	Name pulumi.StringInput `pulumi:"name"`
	// The extended info properties.
	Properties ManagerExtendedInfoPropertiesResponseInput `pulumi:"properties"`
	// The hierarchical type of the object.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ManagerExtendedInformationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerExtendedInformationType)(nil)).Elem()
}

func (i ManagerExtendedInformationTypeArgs) ToManagerExtendedInformationTypeOutput() ManagerExtendedInformationTypeOutput {
	return i.ToManagerExtendedInformationTypeOutputWithContext(context.Background())
}

func (i ManagerExtendedInformationTypeArgs) ToManagerExtendedInformationTypeOutputWithContext(ctx context.Context) ManagerExtendedInformationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerExtendedInformationTypeOutput)
}

// The extended info of the manager.
type ManagerExtendedInformationTypeOutput struct{ *pulumi.OutputState }

func (ManagerExtendedInformationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerExtendedInformationType)(nil)).Elem()
}

func (o ManagerExtendedInformationTypeOutput) ToManagerExtendedInformationTypeOutput() ManagerExtendedInformationTypeOutput {
	return o
}

func (o ManagerExtendedInformationTypeOutput) ToManagerExtendedInformationTypeOutputWithContext(ctx context.Context) ManagerExtendedInformationTypeOutput {
	return o
}

// The etag of the resource.
func (o ManagerExtendedInformationTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagerExtendedInformationType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// The Kind of the object. Currently only Series8000 is supported
func (o ManagerExtendedInformationTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagerExtendedInformationType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name of the object.
func (o ManagerExtendedInformationTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerExtendedInformationType) string { return v.Name }).(pulumi.StringOutput)
}

// The extended info properties.
func (o ManagerExtendedInformationTypeOutput) Properties() ManagerExtendedInfoPropertiesResponseOutput {
	return o.ApplyT(func(v ManagerExtendedInformationType) ManagerExtendedInfoPropertiesResponse { return v.Properties }).(ManagerExtendedInfoPropertiesResponseOutput)
}

// The hierarchical type of the object.
func (o ManagerExtendedInformationTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerExtendedInformationType) string { return v.Type }).(pulumi.StringOutput)
}

// Intrinsic settings which refers to the type of the StorSimple Manager.
type ManagerIntrinsicSettings struct {
	// The type of StorSimple Manager.
	Type string `pulumi:"type"`
}

// ManagerIntrinsicSettingsInput is an input type that accepts ManagerIntrinsicSettingsArgs and ManagerIntrinsicSettingsOutput values.
// You can construct a concrete instance of `ManagerIntrinsicSettingsInput` via:
//
//          ManagerIntrinsicSettingsArgs{...}
type ManagerIntrinsicSettingsInput interface {
	pulumi.Input

	ToManagerIntrinsicSettingsOutput() ManagerIntrinsicSettingsOutput
	ToManagerIntrinsicSettingsOutputWithContext(context.Context) ManagerIntrinsicSettingsOutput
}

// Intrinsic settings which refers to the type of the StorSimple Manager.
type ManagerIntrinsicSettingsArgs struct {
	// The type of StorSimple Manager.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ManagerIntrinsicSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerIntrinsicSettings)(nil)).Elem()
}

func (i ManagerIntrinsicSettingsArgs) ToManagerIntrinsicSettingsOutput() ManagerIntrinsicSettingsOutput {
	return i.ToManagerIntrinsicSettingsOutputWithContext(context.Background())
}

func (i ManagerIntrinsicSettingsArgs) ToManagerIntrinsicSettingsOutputWithContext(ctx context.Context) ManagerIntrinsicSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerIntrinsicSettingsOutput)
}

func (i ManagerIntrinsicSettingsArgs) ToManagerIntrinsicSettingsPtrOutput() ManagerIntrinsicSettingsPtrOutput {
	return i.ToManagerIntrinsicSettingsPtrOutputWithContext(context.Background())
}

func (i ManagerIntrinsicSettingsArgs) ToManagerIntrinsicSettingsPtrOutputWithContext(ctx context.Context) ManagerIntrinsicSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerIntrinsicSettingsOutput).ToManagerIntrinsicSettingsPtrOutputWithContext(ctx)
}

// ManagerIntrinsicSettingsPtrInput is an input type that accepts ManagerIntrinsicSettingsArgs, ManagerIntrinsicSettingsPtr and ManagerIntrinsicSettingsPtrOutput values.
// You can construct a concrete instance of `ManagerIntrinsicSettingsPtrInput` via:
//
//          ManagerIntrinsicSettingsArgs{...}
//
//  or:
//
//          nil
type ManagerIntrinsicSettingsPtrInput interface {
	pulumi.Input

	ToManagerIntrinsicSettingsPtrOutput() ManagerIntrinsicSettingsPtrOutput
	ToManagerIntrinsicSettingsPtrOutputWithContext(context.Context) ManagerIntrinsicSettingsPtrOutput
}

type managerIntrinsicSettingsPtrType ManagerIntrinsicSettingsArgs

func ManagerIntrinsicSettingsPtr(v *ManagerIntrinsicSettingsArgs) ManagerIntrinsicSettingsPtrInput {
	return (*managerIntrinsicSettingsPtrType)(v)
}

func (*managerIntrinsicSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagerIntrinsicSettings)(nil)).Elem()
}

func (i *managerIntrinsicSettingsPtrType) ToManagerIntrinsicSettingsPtrOutput() ManagerIntrinsicSettingsPtrOutput {
	return i.ToManagerIntrinsicSettingsPtrOutputWithContext(context.Background())
}

func (i *managerIntrinsicSettingsPtrType) ToManagerIntrinsicSettingsPtrOutputWithContext(ctx context.Context) ManagerIntrinsicSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerIntrinsicSettingsPtrOutput)
}

// Intrinsic settings which refers to the type of the StorSimple Manager.
type ManagerIntrinsicSettingsOutput struct{ *pulumi.OutputState }

func (ManagerIntrinsicSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerIntrinsicSettings)(nil)).Elem()
}

func (o ManagerIntrinsicSettingsOutput) ToManagerIntrinsicSettingsOutput() ManagerIntrinsicSettingsOutput {
	return o
}

func (o ManagerIntrinsicSettingsOutput) ToManagerIntrinsicSettingsOutputWithContext(ctx context.Context) ManagerIntrinsicSettingsOutput {
	return o
}

func (o ManagerIntrinsicSettingsOutput) ToManagerIntrinsicSettingsPtrOutput() ManagerIntrinsicSettingsPtrOutput {
	return o.ToManagerIntrinsicSettingsPtrOutputWithContext(context.Background())
}

func (o ManagerIntrinsicSettingsOutput) ToManagerIntrinsicSettingsPtrOutputWithContext(ctx context.Context) ManagerIntrinsicSettingsPtrOutput {
	return o.ApplyT(func(v ManagerIntrinsicSettings) *ManagerIntrinsicSettings {
		return &v
	}).(ManagerIntrinsicSettingsPtrOutput)
}

// The type of StorSimple Manager.
func (o ManagerIntrinsicSettingsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerIntrinsicSettings) string { return v.Type }).(pulumi.StringOutput)
}

type ManagerIntrinsicSettingsPtrOutput struct{ *pulumi.OutputState }

func (ManagerIntrinsicSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagerIntrinsicSettings)(nil)).Elem()
}

func (o ManagerIntrinsicSettingsPtrOutput) ToManagerIntrinsicSettingsPtrOutput() ManagerIntrinsicSettingsPtrOutput {
	return o
}

func (o ManagerIntrinsicSettingsPtrOutput) ToManagerIntrinsicSettingsPtrOutputWithContext(ctx context.Context) ManagerIntrinsicSettingsPtrOutput {
	return o
}

func (o ManagerIntrinsicSettingsPtrOutput) Elem() ManagerIntrinsicSettingsOutput {
	return o.ApplyT(func(v *ManagerIntrinsicSettings) ManagerIntrinsicSettings { return *v }).(ManagerIntrinsicSettingsOutput)
}

// The type of StorSimple Manager.
func (o ManagerIntrinsicSettingsPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagerIntrinsicSettings) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Intrinsic settings which refers to the type of the StorSimple Manager.
type ManagerIntrinsicSettingsResponse struct {
	// The type of StorSimple Manager.
	Type string `pulumi:"type"`
}

// ManagerIntrinsicSettingsResponseInput is an input type that accepts ManagerIntrinsicSettingsResponseArgs and ManagerIntrinsicSettingsResponseOutput values.
// You can construct a concrete instance of `ManagerIntrinsicSettingsResponseInput` via:
//
//          ManagerIntrinsicSettingsResponseArgs{...}
type ManagerIntrinsicSettingsResponseInput interface {
	pulumi.Input

	ToManagerIntrinsicSettingsResponseOutput() ManagerIntrinsicSettingsResponseOutput
	ToManagerIntrinsicSettingsResponseOutputWithContext(context.Context) ManagerIntrinsicSettingsResponseOutput
}

// Intrinsic settings which refers to the type of the StorSimple Manager.
type ManagerIntrinsicSettingsResponseArgs struct {
	// The type of StorSimple Manager.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ManagerIntrinsicSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerIntrinsicSettingsResponse)(nil)).Elem()
}

func (i ManagerIntrinsicSettingsResponseArgs) ToManagerIntrinsicSettingsResponseOutput() ManagerIntrinsicSettingsResponseOutput {
	return i.ToManagerIntrinsicSettingsResponseOutputWithContext(context.Background())
}

func (i ManagerIntrinsicSettingsResponseArgs) ToManagerIntrinsicSettingsResponseOutputWithContext(ctx context.Context) ManagerIntrinsicSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerIntrinsicSettingsResponseOutput)
}

func (i ManagerIntrinsicSettingsResponseArgs) ToManagerIntrinsicSettingsResponsePtrOutput() ManagerIntrinsicSettingsResponsePtrOutput {
	return i.ToManagerIntrinsicSettingsResponsePtrOutputWithContext(context.Background())
}

func (i ManagerIntrinsicSettingsResponseArgs) ToManagerIntrinsicSettingsResponsePtrOutputWithContext(ctx context.Context) ManagerIntrinsicSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerIntrinsicSettingsResponseOutput).ToManagerIntrinsicSettingsResponsePtrOutputWithContext(ctx)
}

// ManagerIntrinsicSettingsResponsePtrInput is an input type that accepts ManagerIntrinsicSettingsResponseArgs, ManagerIntrinsicSettingsResponsePtr and ManagerIntrinsicSettingsResponsePtrOutput values.
// You can construct a concrete instance of `ManagerIntrinsicSettingsResponsePtrInput` via:
//
//          ManagerIntrinsicSettingsResponseArgs{...}
//
//  or:
//
//          nil
type ManagerIntrinsicSettingsResponsePtrInput interface {
	pulumi.Input

	ToManagerIntrinsicSettingsResponsePtrOutput() ManagerIntrinsicSettingsResponsePtrOutput
	ToManagerIntrinsicSettingsResponsePtrOutputWithContext(context.Context) ManagerIntrinsicSettingsResponsePtrOutput
}

type managerIntrinsicSettingsResponsePtrType ManagerIntrinsicSettingsResponseArgs

func ManagerIntrinsicSettingsResponsePtr(v *ManagerIntrinsicSettingsResponseArgs) ManagerIntrinsicSettingsResponsePtrInput {
	return (*managerIntrinsicSettingsResponsePtrType)(v)
}

func (*managerIntrinsicSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagerIntrinsicSettingsResponse)(nil)).Elem()
}

func (i *managerIntrinsicSettingsResponsePtrType) ToManagerIntrinsicSettingsResponsePtrOutput() ManagerIntrinsicSettingsResponsePtrOutput {
	return i.ToManagerIntrinsicSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *managerIntrinsicSettingsResponsePtrType) ToManagerIntrinsicSettingsResponsePtrOutputWithContext(ctx context.Context) ManagerIntrinsicSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerIntrinsicSettingsResponsePtrOutput)
}

// Intrinsic settings which refers to the type of the StorSimple Manager.
type ManagerIntrinsicSettingsResponseOutput struct{ *pulumi.OutputState }

func (ManagerIntrinsicSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerIntrinsicSettingsResponse)(nil)).Elem()
}

func (o ManagerIntrinsicSettingsResponseOutput) ToManagerIntrinsicSettingsResponseOutput() ManagerIntrinsicSettingsResponseOutput {
	return o
}

func (o ManagerIntrinsicSettingsResponseOutput) ToManagerIntrinsicSettingsResponseOutputWithContext(ctx context.Context) ManagerIntrinsicSettingsResponseOutput {
	return o
}

func (o ManagerIntrinsicSettingsResponseOutput) ToManagerIntrinsicSettingsResponsePtrOutput() ManagerIntrinsicSettingsResponsePtrOutput {
	return o.ToManagerIntrinsicSettingsResponsePtrOutputWithContext(context.Background())
}

func (o ManagerIntrinsicSettingsResponseOutput) ToManagerIntrinsicSettingsResponsePtrOutputWithContext(ctx context.Context) ManagerIntrinsicSettingsResponsePtrOutput {
	return o.ApplyT(func(v ManagerIntrinsicSettingsResponse) *ManagerIntrinsicSettingsResponse {
		return &v
	}).(ManagerIntrinsicSettingsResponsePtrOutput)
}

// The type of StorSimple Manager.
func (o ManagerIntrinsicSettingsResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerIntrinsicSettingsResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ManagerIntrinsicSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagerIntrinsicSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagerIntrinsicSettingsResponse)(nil)).Elem()
}

func (o ManagerIntrinsicSettingsResponsePtrOutput) ToManagerIntrinsicSettingsResponsePtrOutput() ManagerIntrinsicSettingsResponsePtrOutput {
	return o
}

func (o ManagerIntrinsicSettingsResponsePtrOutput) ToManagerIntrinsicSettingsResponsePtrOutputWithContext(ctx context.Context) ManagerIntrinsicSettingsResponsePtrOutput {
	return o
}

func (o ManagerIntrinsicSettingsResponsePtrOutput) Elem() ManagerIntrinsicSettingsResponseOutput {
	return o.ApplyT(func(v *ManagerIntrinsicSettingsResponse) ManagerIntrinsicSettingsResponse { return *v }).(ManagerIntrinsicSettingsResponseOutput)
}

// The type of StorSimple Manager.
func (o ManagerIntrinsicSettingsResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagerIntrinsicSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The properties of the StorSimple Manager.
type ManagerProperties struct {
	// Represents the type of StorSimple Manager.
	CisIntrinsicSettings *ManagerIntrinsicSettings `pulumi:"cisIntrinsicSettings"`
	// Specifies the state of the resource as it is getting provisioned. Value of "Succeeded" means the Manager was successfully created.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Specifies the Sku.
	Sku *ManagerSku `pulumi:"sku"`
}

// ManagerPropertiesInput is an input type that accepts ManagerPropertiesArgs and ManagerPropertiesOutput values.
// You can construct a concrete instance of `ManagerPropertiesInput` via:
//
//          ManagerPropertiesArgs{...}
type ManagerPropertiesInput interface {
	pulumi.Input

	ToManagerPropertiesOutput() ManagerPropertiesOutput
	ToManagerPropertiesOutputWithContext(context.Context) ManagerPropertiesOutput
}

// The properties of the StorSimple Manager.
type ManagerPropertiesArgs struct {
	// Represents the type of StorSimple Manager.
	CisIntrinsicSettings ManagerIntrinsicSettingsPtrInput `pulumi:"cisIntrinsicSettings"`
	// Specifies the state of the resource as it is getting provisioned. Value of "Succeeded" means the Manager was successfully created.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Specifies the Sku.
	Sku ManagerSkuPtrInput `pulumi:"sku"`
}

func (ManagerPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerProperties)(nil)).Elem()
}

func (i ManagerPropertiesArgs) ToManagerPropertiesOutput() ManagerPropertiesOutput {
	return i.ToManagerPropertiesOutputWithContext(context.Background())
}

func (i ManagerPropertiesArgs) ToManagerPropertiesOutputWithContext(ctx context.Context) ManagerPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerPropertiesOutput)
}

func (i ManagerPropertiesArgs) ToManagerPropertiesPtrOutput() ManagerPropertiesPtrOutput {
	return i.ToManagerPropertiesPtrOutputWithContext(context.Background())
}

func (i ManagerPropertiesArgs) ToManagerPropertiesPtrOutputWithContext(ctx context.Context) ManagerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerPropertiesOutput).ToManagerPropertiesPtrOutputWithContext(ctx)
}

// ManagerPropertiesPtrInput is an input type that accepts ManagerPropertiesArgs, ManagerPropertiesPtr and ManagerPropertiesPtrOutput values.
// You can construct a concrete instance of `ManagerPropertiesPtrInput` via:
//
//          ManagerPropertiesArgs{...}
//
//  or:
//
//          nil
type ManagerPropertiesPtrInput interface {
	pulumi.Input

	ToManagerPropertiesPtrOutput() ManagerPropertiesPtrOutput
	ToManagerPropertiesPtrOutputWithContext(context.Context) ManagerPropertiesPtrOutput
}

type managerPropertiesPtrType ManagerPropertiesArgs

func ManagerPropertiesPtr(v *ManagerPropertiesArgs) ManagerPropertiesPtrInput {
	return (*managerPropertiesPtrType)(v)
}

func (*managerPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagerProperties)(nil)).Elem()
}

func (i *managerPropertiesPtrType) ToManagerPropertiesPtrOutput() ManagerPropertiesPtrOutput {
	return i.ToManagerPropertiesPtrOutputWithContext(context.Background())
}

func (i *managerPropertiesPtrType) ToManagerPropertiesPtrOutputWithContext(ctx context.Context) ManagerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerPropertiesPtrOutput)
}

// The properties of the StorSimple Manager.
type ManagerPropertiesOutput struct{ *pulumi.OutputState }

func (ManagerPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerProperties)(nil)).Elem()
}

func (o ManagerPropertiesOutput) ToManagerPropertiesOutput() ManagerPropertiesOutput {
	return o
}

func (o ManagerPropertiesOutput) ToManagerPropertiesOutputWithContext(ctx context.Context) ManagerPropertiesOutput {
	return o
}

func (o ManagerPropertiesOutput) ToManagerPropertiesPtrOutput() ManagerPropertiesPtrOutput {
	return o.ToManagerPropertiesPtrOutputWithContext(context.Background())
}

func (o ManagerPropertiesOutput) ToManagerPropertiesPtrOutputWithContext(ctx context.Context) ManagerPropertiesPtrOutput {
	return o.ApplyT(func(v ManagerProperties) *ManagerProperties {
		return &v
	}).(ManagerPropertiesPtrOutput)
}

// Represents the type of StorSimple Manager.
func (o ManagerPropertiesOutput) CisIntrinsicSettings() ManagerIntrinsicSettingsPtrOutput {
	return o.ApplyT(func(v ManagerProperties) *ManagerIntrinsicSettings { return v.CisIntrinsicSettings }).(ManagerIntrinsicSettingsPtrOutput)
}

// Specifies the state of the resource as it is getting provisioned. Value of "Succeeded" means the Manager was successfully created.
func (o ManagerPropertiesOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagerProperties) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Specifies the Sku.
func (o ManagerPropertiesOutput) Sku() ManagerSkuPtrOutput {
	return o.ApplyT(func(v ManagerProperties) *ManagerSku { return v.Sku }).(ManagerSkuPtrOutput)
}

type ManagerPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ManagerPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagerProperties)(nil)).Elem()
}

func (o ManagerPropertiesPtrOutput) ToManagerPropertiesPtrOutput() ManagerPropertiesPtrOutput {
	return o
}

func (o ManagerPropertiesPtrOutput) ToManagerPropertiesPtrOutputWithContext(ctx context.Context) ManagerPropertiesPtrOutput {
	return o
}

func (o ManagerPropertiesPtrOutput) Elem() ManagerPropertiesOutput {
	return o.ApplyT(func(v *ManagerProperties) ManagerProperties { return *v }).(ManagerPropertiesOutput)
}

// Represents the type of StorSimple Manager.
func (o ManagerPropertiesPtrOutput) CisIntrinsicSettings() ManagerIntrinsicSettingsPtrOutput {
	return o.ApplyT(func(v *ManagerProperties) *ManagerIntrinsicSettings {
		if v == nil {
			return nil
		}
		return v.CisIntrinsicSettings
	}).(ManagerIntrinsicSettingsPtrOutput)
}

// Specifies the state of the resource as it is getting provisioned. Value of "Succeeded" means the Manager was successfully created.
func (o ManagerPropertiesPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagerProperties) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Specifies the Sku.
func (o ManagerPropertiesPtrOutput) Sku() ManagerSkuPtrOutput {
	return o.ApplyT(func(v *ManagerProperties) *ManagerSku {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(ManagerSkuPtrOutput)
}

// The properties of the StorSimple Manager.
type ManagerPropertiesResponse struct {
	// Represents the type of StorSimple Manager.
	CisIntrinsicSettings *ManagerIntrinsicSettingsResponse `pulumi:"cisIntrinsicSettings"`
	// Specifies the state of the resource as it is getting provisioned. Value of "Succeeded" means the Manager was successfully created.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Specifies the Sku.
	Sku *ManagerSkuResponse `pulumi:"sku"`
}

// ManagerPropertiesResponseInput is an input type that accepts ManagerPropertiesResponseArgs and ManagerPropertiesResponseOutput values.
// You can construct a concrete instance of `ManagerPropertiesResponseInput` via:
//
//          ManagerPropertiesResponseArgs{...}
type ManagerPropertiesResponseInput interface {
	pulumi.Input

	ToManagerPropertiesResponseOutput() ManagerPropertiesResponseOutput
	ToManagerPropertiesResponseOutputWithContext(context.Context) ManagerPropertiesResponseOutput
}

// The properties of the StorSimple Manager.
type ManagerPropertiesResponseArgs struct {
	// Represents the type of StorSimple Manager.
	CisIntrinsicSettings ManagerIntrinsicSettingsResponsePtrInput `pulumi:"cisIntrinsicSettings"`
	// Specifies the state of the resource as it is getting provisioned. Value of "Succeeded" means the Manager was successfully created.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Specifies the Sku.
	Sku ManagerSkuResponsePtrInput `pulumi:"sku"`
}

func (ManagerPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerPropertiesResponse)(nil)).Elem()
}

func (i ManagerPropertiesResponseArgs) ToManagerPropertiesResponseOutput() ManagerPropertiesResponseOutput {
	return i.ToManagerPropertiesResponseOutputWithContext(context.Background())
}

func (i ManagerPropertiesResponseArgs) ToManagerPropertiesResponseOutputWithContext(ctx context.Context) ManagerPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerPropertiesResponseOutput)
}

func (i ManagerPropertiesResponseArgs) ToManagerPropertiesResponsePtrOutput() ManagerPropertiesResponsePtrOutput {
	return i.ToManagerPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ManagerPropertiesResponseArgs) ToManagerPropertiesResponsePtrOutputWithContext(ctx context.Context) ManagerPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerPropertiesResponseOutput).ToManagerPropertiesResponsePtrOutputWithContext(ctx)
}

// ManagerPropertiesResponsePtrInput is an input type that accepts ManagerPropertiesResponseArgs, ManagerPropertiesResponsePtr and ManagerPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ManagerPropertiesResponsePtrInput` via:
//
//          ManagerPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ManagerPropertiesResponsePtrInput interface {
	pulumi.Input

	ToManagerPropertiesResponsePtrOutput() ManagerPropertiesResponsePtrOutput
	ToManagerPropertiesResponsePtrOutputWithContext(context.Context) ManagerPropertiesResponsePtrOutput
}

type managerPropertiesResponsePtrType ManagerPropertiesResponseArgs

func ManagerPropertiesResponsePtr(v *ManagerPropertiesResponseArgs) ManagerPropertiesResponsePtrInput {
	return (*managerPropertiesResponsePtrType)(v)
}

func (*managerPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagerPropertiesResponse)(nil)).Elem()
}

func (i *managerPropertiesResponsePtrType) ToManagerPropertiesResponsePtrOutput() ManagerPropertiesResponsePtrOutput {
	return i.ToManagerPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *managerPropertiesResponsePtrType) ToManagerPropertiesResponsePtrOutputWithContext(ctx context.Context) ManagerPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerPropertiesResponsePtrOutput)
}

// The properties of the StorSimple Manager.
type ManagerPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ManagerPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerPropertiesResponse)(nil)).Elem()
}

func (o ManagerPropertiesResponseOutput) ToManagerPropertiesResponseOutput() ManagerPropertiesResponseOutput {
	return o
}

func (o ManagerPropertiesResponseOutput) ToManagerPropertiesResponseOutputWithContext(ctx context.Context) ManagerPropertiesResponseOutput {
	return o
}

func (o ManagerPropertiesResponseOutput) ToManagerPropertiesResponsePtrOutput() ManagerPropertiesResponsePtrOutput {
	return o.ToManagerPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ManagerPropertiesResponseOutput) ToManagerPropertiesResponsePtrOutputWithContext(ctx context.Context) ManagerPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ManagerPropertiesResponse) *ManagerPropertiesResponse {
		return &v
	}).(ManagerPropertiesResponsePtrOutput)
}

// Represents the type of StorSimple Manager.
func (o ManagerPropertiesResponseOutput) CisIntrinsicSettings() ManagerIntrinsicSettingsResponsePtrOutput {
	return o.ApplyT(func(v ManagerPropertiesResponse) *ManagerIntrinsicSettingsResponse { return v.CisIntrinsicSettings }).(ManagerIntrinsicSettingsResponsePtrOutput)
}

// Specifies the state of the resource as it is getting provisioned. Value of "Succeeded" means the Manager was successfully created.
func (o ManagerPropertiesResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagerPropertiesResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Specifies the Sku.
func (o ManagerPropertiesResponseOutput) Sku() ManagerSkuResponsePtrOutput {
	return o.ApplyT(func(v ManagerPropertiesResponse) *ManagerSkuResponse { return v.Sku }).(ManagerSkuResponsePtrOutput)
}

type ManagerPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagerPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagerPropertiesResponse)(nil)).Elem()
}

func (o ManagerPropertiesResponsePtrOutput) ToManagerPropertiesResponsePtrOutput() ManagerPropertiesResponsePtrOutput {
	return o
}

func (o ManagerPropertiesResponsePtrOutput) ToManagerPropertiesResponsePtrOutputWithContext(ctx context.Context) ManagerPropertiesResponsePtrOutput {
	return o
}

func (o ManagerPropertiesResponsePtrOutput) Elem() ManagerPropertiesResponseOutput {
	return o.ApplyT(func(v *ManagerPropertiesResponse) ManagerPropertiesResponse { return *v }).(ManagerPropertiesResponseOutput)
}

// Represents the type of StorSimple Manager.
func (o ManagerPropertiesResponsePtrOutput) CisIntrinsicSettings() ManagerIntrinsicSettingsResponsePtrOutput {
	return o.ApplyT(func(v *ManagerPropertiesResponse) *ManagerIntrinsicSettingsResponse {
		if v == nil {
			return nil
		}
		return v.CisIntrinsicSettings
	}).(ManagerIntrinsicSettingsResponsePtrOutput)
}

// Specifies the state of the resource as it is getting provisioned. Value of "Succeeded" means the Manager was successfully created.
func (o ManagerPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagerPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Specifies the Sku.
func (o ManagerPropertiesResponsePtrOutput) Sku() ManagerSkuResponsePtrOutput {
	return o.ApplyT(func(v *ManagerPropertiesResponse) *ManagerSkuResponse {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(ManagerSkuResponsePtrOutput)
}

// The Sku.
type ManagerSku struct {
	// Refers to the sku name which should be "Standard"
	Name string `pulumi:"name"`
}

// ManagerSkuInput is an input type that accepts ManagerSkuArgs and ManagerSkuOutput values.
// You can construct a concrete instance of `ManagerSkuInput` via:
//
//          ManagerSkuArgs{...}
type ManagerSkuInput interface {
	pulumi.Input

	ToManagerSkuOutput() ManagerSkuOutput
	ToManagerSkuOutputWithContext(context.Context) ManagerSkuOutput
}

// The Sku.
type ManagerSkuArgs struct {
	// Refers to the sku name which should be "Standard"
	Name pulumi.StringInput `pulumi:"name"`
}

func (ManagerSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerSku)(nil)).Elem()
}

func (i ManagerSkuArgs) ToManagerSkuOutput() ManagerSkuOutput {
	return i.ToManagerSkuOutputWithContext(context.Background())
}

func (i ManagerSkuArgs) ToManagerSkuOutputWithContext(ctx context.Context) ManagerSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerSkuOutput)
}

func (i ManagerSkuArgs) ToManagerSkuPtrOutput() ManagerSkuPtrOutput {
	return i.ToManagerSkuPtrOutputWithContext(context.Background())
}

func (i ManagerSkuArgs) ToManagerSkuPtrOutputWithContext(ctx context.Context) ManagerSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerSkuOutput).ToManagerSkuPtrOutputWithContext(ctx)
}

// ManagerSkuPtrInput is an input type that accepts ManagerSkuArgs, ManagerSkuPtr and ManagerSkuPtrOutput values.
// You can construct a concrete instance of `ManagerSkuPtrInput` via:
//
//          ManagerSkuArgs{...}
//
//  or:
//
//          nil
type ManagerSkuPtrInput interface {
	pulumi.Input

	ToManagerSkuPtrOutput() ManagerSkuPtrOutput
	ToManagerSkuPtrOutputWithContext(context.Context) ManagerSkuPtrOutput
}

type managerSkuPtrType ManagerSkuArgs

func ManagerSkuPtr(v *ManagerSkuArgs) ManagerSkuPtrInput {
	return (*managerSkuPtrType)(v)
}

func (*managerSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagerSku)(nil)).Elem()
}

func (i *managerSkuPtrType) ToManagerSkuPtrOutput() ManagerSkuPtrOutput {
	return i.ToManagerSkuPtrOutputWithContext(context.Background())
}

func (i *managerSkuPtrType) ToManagerSkuPtrOutputWithContext(ctx context.Context) ManagerSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerSkuPtrOutput)
}

// The Sku.
type ManagerSkuOutput struct{ *pulumi.OutputState }

func (ManagerSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerSku)(nil)).Elem()
}

func (o ManagerSkuOutput) ToManagerSkuOutput() ManagerSkuOutput {
	return o
}

func (o ManagerSkuOutput) ToManagerSkuOutputWithContext(ctx context.Context) ManagerSkuOutput {
	return o
}

func (o ManagerSkuOutput) ToManagerSkuPtrOutput() ManagerSkuPtrOutput {
	return o.ToManagerSkuPtrOutputWithContext(context.Background())
}

func (o ManagerSkuOutput) ToManagerSkuPtrOutputWithContext(ctx context.Context) ManagerSkuPtrOutput {
	return o.ApplyT(func(v ManagerSku) *ManagerSku {
		return &v
	}).(ManagerSkuPtrOutput)
}

// Refers to the sku name which should be "Standard"
func (o ManagerSkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerSku) string { return v.Name }).(pulumi.StringOutput)
}

type ManagerSkuPtrOutput struct{ *pulumi.OutputState }

func (ManagerSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagerSku)(nil)).Elem()
}

func (o ManagerSkuPtrOutput) ToManagerSkuPtrOutput() ManagerSkuPtrOutput {
	return o
}

func (o ManagerSkuPtrOutput) ToManagerSkuPtrOutputWithContext(ctx context.Context) ManagerSkuPtrOutput {
	return o
}

func (o ManagerSkuPtrOutput) Elem() ManagerSkuOutput {
	return o.ApplyT(func(v *ManagerSku) ManagerSku { return *v }).(ManagerSkuOutput)
}

// Refers to the sku name which should be "Standard"
func (o ManagerSkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagerSku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The Sku.
type ManagerSkuResponse struct {
	// Refers to the sku name which should be "Standard"
	Name string `pulumi:"name"`
}

// ManagerSkuResponseInput is an input type that accepts ManagerSkuResponseArgs and ManagerSkuResponseOutput values.
// You can construct a concrete instance of `ManagerSkuResponseInput` via:
//
//          ManagerSkuResponseArgs{...}
type ManagerSkuResponseInput interface {
	pulumi.Input

	ToManagerSkuResponseOutput() ManagerSkuResponseOutput
	ToManagerSkuResponseOutputWithContext(context.Context) ManagerSkuResponseOutput
}

// The Sku.
type ManagerSkuResponseArgs struct {
	// Refers to the sku name which should be "Standard"
	Name pulumi.StringInput `pulumi:"name"`
}

func (ManagerSkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerSkuResponse)(nil)).Elem()
}

func (i ManagerSkuResponseArgs) ToManagerSkuResponseOutput() ManagerSkuResponseOutput {
	return i.ToManagerSkuResponseOutputWithContext(context.Background())
}

func (i ManagerSkuResponseArgs) ToManagerSkuResponseOutputWithContext(ctx context.Context) ManagerSkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerSkuResponseOutput)
}

func (i ManagerSkuResponseArgs) ToManagerSkuResponsePtrOutput() ManagerSkuResponsePtrOutput {
	return i.ToManagerSkuResponsePtrOutputWithContext(context.Background())
}

func (i ManagerSkuResponseArgs) ToManagerSkuResponsePtrOutputWithContext(ctx context.Context) ManagerSkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerSkuResponseOutput).ToManagerSkuResponsePtrOutputWithContext(ctx)
}

// ManagerSkuResponsePtrInput is an input type that accepts ManagerSkuResponseArgs, ManagerSkuResponsePtr and ManagerSkuResponsePtrOutput values.
// You can construct a concrete instance of `ManagerSkuResponsePtrInput` via:
//
//          ManagerSkuResponseArgs{...}
//
//  or:
//
//          nil
type ManagerSkuResponsePtrInput interface {
	pulumi.Input

	ToManagerSkuResponsePtrOutput() ManagerSkuResponsePtrOutput
	ToManagerSkuResponsePtrOutputWithContext(context.Context) ManagerSkuResponsePtrOutput
}

type managerSkuResponsePtrType ManagerSkuResponseArgs

func ManagerSkuResponsePtr(v *ManagerSkuResponseArgs) ManagerSkuResponsePtrInput {
	return (*managerSkuResponsePtrType)(v)
}

func (*managerSkuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagerSkuResponse)(nil)).Elem()
}

func (i *managerSkuResponsePtrType) ToManagerSkuResponsePtrOutput() ManagerSkuResponsePtrOutput {
	return i.ToManagerSkuResponsePtrOutputWithContext(context.Background())
}

func (i *managerSkuResponsePtrType) ToManagerSkuResponsePtrOutputWithContext(ctx context.Context) ManagerSkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerSkuResponsePtrOutput)
}

// The Sku.
type ManagerSkuResponseOutput struct{ *pulumi.OutputState }

func (ManagerSkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerSkuResponse)(nil)).Elem()
}

func (o ManagerSkuResponseOutput) ToManagerSkuResponseOutput() ManagerSkuResponseOutput {
	return o
}

func (o ManagerSkuResponseOutput) ToManagerSkuResponseOutputWithContext(ctx context.Context) ManagerSkuResponseOutput {
	return o
}

func (o ManagerSkuResponseOutput) ToManagerSkuResponsePtrOutput() ManagerSkuResponsePtrOutput {
	return o.ToManagerSkuResponsePtrOutputWithContext(context.Background())
}

func (o ManagerSkuResponseOutput) ToManagerSkuResponsePtrOutputWithContext(ctx context.Context) ManagerSkuResponsePtrOutput {
	return o.ApplyT(func(v ManagerSkuResponse) *ManagerSkuResponse {
		return &v
	}).(ManagerSkuResponsePtrOutput)
}

// Refers to the sku name which should be "Standard"
func (o ManagerSkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerSkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

type ManagerSkuResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagerSkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagerSkuResponse)(nil)).Elem()
}

func (o ManagerSkuResponsePtrOutput) ToManagerSkuResponsePtrOutput() ManagerSkuResponsePtrOutput {
	return o
}

func (o ManagerSkuResponsePtrOutput) ToManagerSkuResponsePtrOutputWithContext(ctx context.Context) ManagerSkuResponsePtrOutput {
	return o
}

func (o ManagerSkuResponsePtrOutput) Elem() ManagerSkuResponseOutput {
	return o.ApplyT(func(v *ManagerSkuResponse) ManagerSkuResponse { return *v }).(ManagerSkuResponseOutput)
}

// Refers to the sku name which should be "Standard"
func (o ManagerSkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagerSkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The storage account credential.
type ManagerStorageAccountCredentialType struct {
	// The Kind of the object. Currently only Series8000 is supported
	Kind *string `pulumi:"kind"`
	// The name of the object.
	Name string `pulumi:"name"`
	// The storage account credential properties.
	Properties StorageAccountCredentialPropertiesResponse `pulumi:"properties"`
	// The hierarchical type of the object.
	Type string `pulumi:"type"`
}

// ManagerStorageAccountCredentialTypeInput is an input type that accepts ManagerStorageAccountCredentialTypeArgs and ManagerStorageAccountCredentialTypeOutput values.
// You can construct a concrete instance of `ManagerStorageAccountCredentialTypeInput` via:
//
//          ManagerStorageAccountCredentialTypeArgs{...}
type ManagerStorageAccountCredentialTypeInput interface {
	pulumi.Input

	ToManagerStorageAccountCredentialTypeOutput() ManagerStorageAccountCredentialTypeOutput
	ToManagerStorageAccountCredentialTypeOutputWithContext(context.Context) ManagerStorageAccountCredentialTypeOutput
}

// The storage account credential.
type ManagerStorageAccountCredentialTypeArgs struct {
	// The Kind of the object. Currently only Series8000 is supported
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name of the object.
	Name pulumi.StringInput `pulumi:"name"`
	// The storage account credential properties.
	Properties StorageAccountCredentialPropertiesResponseInput `pulumi:"properties"`
	// The hierarchical type of the object.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ManagerStorageAccountCredentialTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerStorageAccountCredentialType)(nil)).Elem()
}

func (i ManagerStorageAccountCredentialTypeArgs) ToManagerStorageAccountCredentialTypeOutput() ManagerStorageAccountCredentialTypeOutput {
	return i.ToManagerStorageAccountCredentialTypeOutputWithContext(context.Background())
}

func (i ManagerStorageAccountCredentialTypeArgs) ToManagerStorageAccountCredentialTypeOutputWithContext(ctx context.Context) ManagerStorageAccountCredentialTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerStorageAccountCredentialTypeOutput)
}

// The storage account credential.
type ManagerStorageAccountCredentialTypeOutput struct{ *pulumi.OutputState }

func (ManagerStorageAccountCredentialTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerStorageAccountCredentialType)(nil)).Elem()
}

func (o ManagerStorageAccountCredentialTypeOutput) ToManagerStorageAccountCredentialTypeOutput() ManagerStorageAccountCredentialTypeOutput {
	return o
}

func (o ManagerStorageAccountCredentialTypeOutput) ToManagerStorageAccountCredentialTypeOutputWithContext(ctx context.Context) ManagerStorageAccountCredentialTypeOutput {
	return o
}

// The Kind of the object. Currently only Series8000 is supported
func (o ManagerStorageAccountCredentialTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagerStorageAccountCredentialType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name of the object.
func (o ManagerStorageAccountCredentialTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerStorageAccountCredentialType) string { return v.Name }).(pulumi.StringOutput)
}

// The storage account credential properties.
func (o ManagerStorageAccountCredentialTypeOutput) Properties() StorageAccountCredentialPropertiesResponseOutput {
	return o.ApplyT(func(v ManagerStorageAccountCredentialType) StorageAccountCredentialPropertiesResponse {
		return v.Properties
	}).(StorageAccountCredentialPropertiesResponseOutput)
}

// The hierarchical type of the object.
func (o ManagerStorageAccountCredentialTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerStorageAccountCredentialType) string { return v.Type }).(pulumi.StringOutput)
}

// The storage domain.
type ManagerStorageDomainType struct {
	// The name.
	Name string `pulumi:"name"`
	// The properties.
	Properties StorageDomainPropertiesResponse `pulumi:"properties"`
	// The type.
	Type string `pulumi:"type"`
}

// ManagerStorageDomainTypeInput is an input type that accepts ManagerStorageDomainTypeArgs and ManagerStorageDomainTypeOutput values.
// You can construct a concrete instance of `ManagerStorageDomainTypeInput` via:
//
//          ManagerStorageDomainTypeArgs{...}
type ManagerStorageDomainTypeInput interface {
	pulumi.Input

	ToManagerStorageDomainTypeOutput() ManagerStorageDomainTypeOutput
	ToManagerStorageDomainTypeOutputWithContext(context.Context) ManagerStorageDomainTypeOutput
}

// The storage domain.
type ManagerStorageDomainTypeArgs struct {
	// The name.
	Name pulumi.StringInput `pulumi:"name"`
	// The properties.
	Properties StorageDomainPropertiesResponseInput `pulumi:"properties"`
	// The type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ManagerStorageDomainTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerStorageDomainType)(nil)).Elem()
}

func (i ManagerStorageDomainTypeArgs) ToManagerStorageDomainTypeOutput() ManagerStorageDomainTypeOutput {
	return i.ToManagerStorageDomainTypeOutputWithContext(context.Background())
}

func (i ManagerStorageDomainTypeArgs) ToManagerStorageDomainTypeOutputWithContext(ctx context.Context) ManagerStorageDomainTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerStorageDomainTypeOutput)
}

// The storage domain.
type ManagerStorageDomainTypeOutput struct{ *pulumi.OutputState }

func (ManagerStorageDomainTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerStorageDomainType)(nil)).Elem()
}

func (o ManagerStorageDomainTypeOutput) ToManagerStorageDomainTypeOutput() ManagerStorageDomainTypeOutput {
	return o
}

func (o ManagerStorageDomainTypeOutput) ToManagerStorageDomainTypeOutputWithContext(ctx context.Context) ManagerStorageDomainTypeOutput {
	return o
}

// The name.
func (o ManagerStorageDomainTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerStorageDomainType) string { return v.Name }).(pulumi.StringOutput)
}

// The properties.
func (o ManagerStorageDomainTypeOutput) Properties() StorageDomainPropertiesResponseOutput {
	return o.ApplyT(func(v ManagerStorageDomainType) StorageDomainPropertiesResponse { return v.Properties }).(StorageDomainPropertiesResponseOutput)
}

// The type.
func (o ManagerStorageDomainTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerStorageDomainType) string { return v.Type }).(pulumi.StringOutput)
}

// The schedule recurrence.
type ScheduleRecurrence struct {
	// The recurrence type.
	RecurrenceType string `pulumi:"recurrenceType"`
	// The recurrence value.
	RecurrenceValue int `pulumi:"recurrenceValue"`
	// The week days list. Applicable only for schedules of recurrence type 'weekly'.
	WeeklyDaysList []string `pulumi:"weeklyDaysList"`
}

// ScheduleRecurrenceInput is an input type that accepts ScheduleRecurrenceArgs and ScheduleRecurrenceOutput values.
// You can construct a concrete instance of `ScheduleRecurrenceInput` via:
//
//          ScheduleRecurrenceArgs{...}
type ScheduleRecurrenceInput interface {
	pulumi.Input

	ToScheduleRecurrenceOutput() ScheduleRecurrenceOutput
	ToScheduleRecurrenceOutputWithContext(context.Context) ScheduleRecurrenceOutput
}

// The schedule recurrence.
type ScheduleRecurrenceArgs struct {
	// The recurrence type.
	RecurrenceType pulumi.StringInput `pulumi:"recurrenceType"`
	// The recurrence value.
	RecurrenceValue pulumi.IntInput `pulumi:"recurrenceValue"`
	// The week days list. Applicable only for schedules of recurrence type 'weekly'.
	WeeklyDaysList pulumi.StringArrayInput `pulumi:"weeklyDaysList"`
}

func (ScheduleRecurrenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleRecurrence)(nil)).Elem()
}

func (i ScheduleRecurrenceArgs) ToScheduleRecurrenceOutput() ScheduleRecurrenceOutput {
	return i.ToScheduleRecurrenceOutputWithContext(context.Background())
}

func (i ScheduleRecurrenceArgs) ToScheduleRecurrenceOutputWithContext(ctx context.Context) ScheduleRecurrenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleRecurrenceOutput)
}

func (i ScheduleRecurrenceArgs) ToScheduleRecurrencePtrOutput() ScheduleRecurrencePtrOutput {
	return i.ToScheduleRecurrencePtrOutputWithContext(context.Background())
}

func (i ScheduleRecurrenceArgs) ToScheduleRecurrencePtrOutputWithContext(ctx context.Context) ScheduleRecurrencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleRecurrenceOutput).ToScheduleRecurrencePtrOutputWithContext(ctx)
}

// ScheduleRecurrencePtrInput is an input type that accepts ScheduleRecurrenceArgs, ScheduleRecurrencePtr and ScheduleRecurrencePtrOutput values.
// You can construct a concrete instance of `ScheduleRecurrencePtrInput` via:
//
//          ScheduleRecurrenceArgs{...}
//
//  or:
//
//          nil
type ScheduleRecurrencePtrInput interface {
	pulumi.Input

	ToScheduleRecurrencePtrOutput() ScheduleRecurrencePtrOutput
	ToScheduleRecurrencePtrOutputWithContext(context.Context) ScheduleRecurrencePtrOutput
}

type scheduleRecurrencePtrType ScheduleRecurrenceArgs

func ScheduleRecurrencePtr(v *ScheduleRecurrenceArgs) ScheduleRecurrencePtrInput {
	return (*scheduleRecurrencePtrType)(v)
}

func (*scheduleRecurrencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleRecurrence)(nil)).Elem()
}

func (i *scheduleRecurrencePtrType) ToScheduleRecurrencePtrOutput() ScheduleRecurrencePtrOutput {
	return i.ToScheduleRecurrencePtrOutputWithContext(context.Background())
}

func (i *scheduleRecurrencePtrType) ToScheduleRecurrencePtrOutputWithContext(ctx context.Context) ScheduleRecurrencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleRecurrencePtrOutput)
}

// The schedule recurrence.
type ScheduleRecurrenceOutput struct{ *pulumi.OutputState }

func (ScheduleRecurrenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleRecurrence)(nil)).Elem()
}

func (o ScheduleRecurrenceOutput) ToScheduleRecurrenceOutput() ScheduleRecurrenceOutput {
	return o
}

func (o ScheduleRecurrenceOutput) ToScheduleRecurrenceOutputWithContext(ctx context.Context) ScheduleRecurrenceOutput {
	return o
}

func (o ScheduleRecurrenceOutput) ToScheduleRecurrencePtrOutput() ScheduleRecurrencePtrOutput {
	return o.ToScheduleRecurrencePtrOutputWithContext(context.Background())
}

func (o ScheduleRecurrenceOutput) ToScheduleRecurrencePtrOutputWithContext(ctx context.Context) ScheduleRecurrencePtrOutput {
	return o.ApplyT(func(v ScheduleRecurrence) *ScheduleRecurrence {
		return &v
	}).(ScheduleRecurrencePtrOutput)
}

// The recurrence type.
func (o ScheduleRecurrenceOutput) RecurrenceType() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleRecurrence) string { return v.RecurrenceType }).(pulumi.StringOutput)
}

// The recurrence value.
func (o ScheduleRecurrenceOutput) RecurrenceValue() pulumi.IntOutput {
	return o.ApplyT(func(v ScheduleRecurrence) int { return v.RecurrenceValue }).(pulumi.IntOutput)
}

// The week days list. Applicable only for schedules of recurrence type 'weekly'.
func (o ScheduleRecurrenceOutput) WeeklyDaysList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScheduleRecurrence) []string { return v.WeeklyDaysList }).(pulumi.StringArrayOutput)
}

type ScheduleRecurrencePtrOutput struct{ *pulumi.OutputState }

func (ScheduleRecurrencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleRecurrence)(nil)).Elem()
}

func (o ScheduleRecurrencePtrOutput) ToScheduleRecurrencePtrOutput() ScheduleRecurrencePtrOutput {
	return o
}

func (o ScheduleRecurrencePtrOutput) ToScheduleRecurrencePtrOutputWithContext(ctx context.Context) ScheduleRecurrencePtrOutput {
	return o
}

func (o ScheduleRecurrencePtrOutput) Elem() ScheduleRecurrenceOutput {
	return o.ApplyT(func(v *ScheduleRecurrence) ScheduleRecurrence { return *v }).(ScheduleRecurrenceOutput)
}

// The recurrence type.
func (o ScheduleRecurrencePtrOutput) RecurrenceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleRecurrence) *string {
		if v == nil {
			return nil
		}
		return &v.RecurrenceType
	}).(pulumi.StringPtrOutput)
}

// The recurrence value.
func (o ScheduleRecurrencePtrOutput) RecurrenceValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScheduleRecurrence) *int {
		if v == nil {
			return nil
		}
		return &v.RecurrenceValue
	}).(pulumi.IntPtrOutput)
}

// The week days list. Applicable only for schedules of recurrence type 'weekly'.
func (o ScheduleRecurrencePtrOutput) WeeklyDaysList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ScheduleRecurrence) []string {
		if v == nil {
			return nil
		}
		return v.WeeklyDaysList
	}).(pulumi.StringArrayOutput)
}

// The schedule recurrence.
type ScheduleRecurrenceResponse struct {
	// The recurrence type.
	RecurrenceType string `pulumi:"recurrenceType"`
	// The recurrence value.
	RecurrenceValue int `pulumi:"recurrenceValue"`
	// The week days list. Applicable only for schedules of recurrence type 'weekly'.
	WeeklyDaysList []string `pulumi:"weeklyDaysList"`
}

// ScheduleRecurrenceResponseInput is an input type that accepts ScheduleRecurrenceResponseArgs and ScheduleRecurrenceResponseOutput values.
// You can construct a concrete instance of `ScheduleRecurrenceResponseInput` via:
//
//          ScheduleRecurrenceResponseArgs{...}
type ScheduleRecurrenceResponseInput interface {
	pulumi.Input

	ToScheduleRecurrenceResponseOutput() ScheduleRecurrenceResponseOutput
	ToScheduleRecurrenceResponseOutputWithContext(context.Context) ScheduleRecurrenceResponseOutput
}

// The schedule recurrence.
type ScheduleRecurrenceResponseArgs struct {
	// The recurrence type.
	RecurrenceType pulumi.StringInput `pulumi:"recurrenceType"`
	// The recurrence value.
	RecurrenceValue pulumi.IntInput `pulumi:"recurrenceValue"`
	// The week days list. Applicable only for schedules of recurrence type 'weekly'.
	WeeklyDaysList pulumi.StringArrayInput `pulumi:"weeklyDaysList"`
}

func (ScheduleRecurrenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleRecurrenceResponse)(nil)).Elem()
}

func (i ScheduleRecurrenceResponseArgs) ToScheduleRecurrenceResponseOutput() ScheduleRecurrenceResponseOutput {
	return i.ToScheduleRecurrenceResponseOutputWithContext(context.Background())
}

func (i ScheduleRecurrenceResponseArgs) ToScheduleRecurrenceResponseOutputWithContext(ctx context.Context) ScheduleRecurrenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleRecurrenceResponseOutput)
}

func (i ScheduleRecurrenceResponseArgs) ToScheduleRecurrenceResponsePtrOutput() ScheduleRecurrenceResponsePtrOutput {
	return i.ToScheduleRecurrenceResponsePtrOutputWithContext(context.Background())
}

func (i ScheduleRecurrenceResponseArgs) ToScheduleRecurrenceResponsePtrOutputWithContext(ctx context.Context) ScheduleRecurrenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleRecurrenceResponseOutput).ToScheduleRecurrenceResponsePtrOutputWithContext(ctx)
}

// ScheduleRecurrenceResponsePtrInput is an input type that accepts ScheduleRecurrenceResponseArgs, ScheduleRecurrenceResponsePtr and ScheduleRecurrenceResponsePtrOutput values.
// You can construct a concrete instance of `ScheduleRecurrenceResponsePtrInput` via:
//
//          ScheduleRecurrenceResponseArgs{...}
//
//  or:
//
//          nil
type ScheduleRecurrenceResponsePtrInput interface {
	pulumi.Input

	ToScheduleRecurrenceResponsePtrOutput() ScheduleRecurrenceResponsePtrOutput
	ToScheduleRecurrenceResponsePtrOutputWithContext(context.Context) ScheduleRecurrenceResponsePtrOutput
}

type scheduleRecurrenceResponsePtrType ScheduleRecurrenceResponseArgs

func ScheduleRecurrenceResponsePtr(v *ScheduleRecurrenceResponseArgs) ScheduleRecurrenceResponsePtrInput {
	return (*scheduleRecurrenceResponsePtrType)(v)
}

func (*scheduleRecurrenceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleRecurrenceResponse)(nil)).Elem()
}

func (i *scheduleRecurrenceResponsePtrType) ToScheduleRecurrenceResponsePtrOutput() ScheduleRecurrenceResponsePtrOutput {
	return i.ToScheduleRecurrenceResponsePtrOutputWithContext(context.Background())
}

func (i *scheduleRecurrenceResponsePtrType) ToScheduleRecurrenceResponsePtrOutputWithContext(ctx context.Context) ScheduleRecurrenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleRecurrenceResponsePtrOutput)
}

// The schedule recurrence.
type ScheduleRecurrenceResponseOutput struct{ *pulumi.OutputState }

func (ScheduleRecurrenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleRecurrenceResponse)(nil)).Elem()
}

func (o ScheduleRecurrenceResponseOutput) ToScheduleRecurrenceResponseOutput() ScheduleRecurrenceResponseOutput {
	return o
}

func (o ScheduleRecurrenceResponseOutput) ToScheduleRecurrenceResponseOutputWithContext(ctx context.Context) ScheduleRecurrenceResponseOutput {
	return o
}

func (o ScheduleRecurrenceResponseOutput) ToScheduleRecurrenceResponsePtrOutput() ScheduleRecurrenceResponsePtrOutput {
	return o.ToScheduleRecurrenceResponsePtrOutputWithContext(context.Background())
}

func (o ScheduleRecurrenceResponseOutput) ToScheduleRecurrenceResponsePtrOutputWithContext(ctx context.Context) ScheduleRecurrenceResponsePtrOutput {
	return o.ApplyT(func(v ScheduleRecurrenceResponse) *ScheduleRecurrenceResponse {
		return &v
	}).(ScheduleRecurrenceResponsePtrOutput)
}

// The recurrence type.
func (o ScheduleRecurrenceResponseOutput) RecurrenceType() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleRecurrenceResponse) string { return v.RecurrenceType }).(pulumi.StringOutput)
}

// The recurrence value.
func (o ScheduleRecurrenceResponseOutput) RecurrenceValue() pulumi.IntOutput {
	return o.ApplyT(func(v ScheduleRecurrenceResponse) int { return v.RecurrenceValue }).(pulumi.IntOutput)
}

// The week days list. Applicable only for schedules of recurrence type 'weekly'.
func (o ScheduleRecurrenceResponseOutput) WeeklyDaysList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScheduleRecurrenceResponse) []string { return v.WeeklyDaysList }).(pulumi.StringArrayOutput)
}

type ScheduleRecurrenceResponsePtrOutput struct{ *pulumi.OutputState }

func (ScheduleRecurrenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleRecurrenceResponse)(nil)).Elem()
}

func (o ScheduleRecurrenceResponsePtrOutput) ToScheduleRecurrenceResponsePtrOutput() ScheduleRecurrenceResponsePtrOutput {
	return o
}

func (o ScheduleRecurrenceResponsePtrOutput) ToScheduleRecurrenceResponsePtrOutputWithContext(ctx context.Context) ScheduleRecurrenceResponsePtrOutput {
	return o
}

func (o ScheduleRecurrenceResponsePtrOutput) Elem() ScheduleRecurrenceResponseOutput {
	return o.ApplyT(func(v *ScheduleRecurrenceResponse) ScheduleRecurrenceResponse { return *v }).(ScheduleRecurrenceResponseOutput)
}

// The recurrence type.
func (o ScheduleRecurrenceResponsePtrOutput) RecurrenceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleRecurrenceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RecurrenceType
	}).(pulumi.StringPtrOutput)
}

// The recurrence value.
func (o ScheduleRecurrenceResponsePtrOutput) RecurrenceValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScheduleRecurrenceResponse) *int {
		if v == nil {
			return nil
		}
		return &v.RecurrenceValue
	}).(pulumi.IntPtrOutput)
}

// The week days list. Applicable only for schedules of recurrence type 'weekly'.
func (o ScheduleRecurrenceResponsePtrOutput) WeeklyDaysList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ScheduleRecurrenceResponse) []string {
		if v == nil {
			return nil
		}
		return v.WeeklyDaysList
	}).(pulumi.StringArrayOutput)
}

// The storage account credential properties.
type StorageAccountCredentialProperties struct {
	// The details of the storage account password.
	AccessKey *AsymmetricEncryptedSecret `pulumi:"accessKey"`
	// The storage endpoint
	EndPoint string `pulumi:"endPoint"`
	// Signifies whether SSL needs to be enabled or not.
	SslStatus string `pulumi:"sslStatus"`
}

// StorageAccountCredentialPropertiesInput is an input type that accepts StorageAccountCredentialPropertiesArgs and StorageAccountCredentialPropertiesOutput values.
// You can construct a concrete instance of `StorageAccountCredentialPropertiesInput` via:
//
//          StorageAccountCredentialPropertiesArgs{...}
type StorageAccountCredentialPropertiesInput interface {
	pulumi.Input

	ToStorageAccountCredentialPropertiesOutput() StorageAccountCredentialPropertiesOutput
	ToStorageAccountCredentialPropertiesOutputWithContext(context.Context) StorageAccountCredentialPropertiesOutput
}

// The storage account credential properties.
type StorageAccountCredentialPropertiesArgs struct {
	// The details of the storage account password.
	AccessKey AsymmetricEncryptedSecretPtrInput `pulumi:"accessKey"`
	// The storage endpoint
	EndPoint pulumi.StringInput `pulumi:"endPoint"`
	// Signifies whether SSL needs to be enabled or not.
	SslStatus pulumi.StringInput `pulumi:"sslStatus"`
}

func (StorageAccountCredentialPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountCredentialProperties)(nil)).Elem()
}

func (i StorageAccountCredentialPropertiesArgs) ToStorageAccountCredentialPropertiesOutput() StorageAccountCredentialPropertiesOutput {
	return i.ToStorageAccountCredentialPropertiesOutputWithContext(context.Background())
}

func (i StorageAccountCredentialPropertiesArgs) ToStorageAccountCredentialPropertiesOutputWithContext(ctx context.Context) StorageAccountCredentialPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountCredentialPropertiesOutput)
}

func (i StorageAccountCredentialPropertiesArgs) ToStorageAccountCredentialPropertiesPtrOutput() StorageAccountCredentialPropertiesPtrOutput {
	return i.ToStorageAccountCredentialPropertiesPtrOutputWithContext(context.Background())
}

func (i StorageAccountCredentialPropertiesArgs) ToStorageAccountCredentialPropertiesPtrOutputWithContext(ctx context.Context) StorageAccountCredentialPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountCredentialPropertiesOutput).ToStorageAccountCredentialPropertiesPtrOutputWithContext(ctx)
}

// StorageAccountCredentialPropertiesPtrInput is an input type that accepts StorageAccountCredentialPropertiesArgs, StorageAccountCredentialPropertiesPtr and StorageAccountCredentialPropertiesPtrOutput values.
// You can construct a concrete instance of `StorageAccountCredentialPropertiesPtrInput` via:
//
//          StorageAccountCredentialPropertiesArgs{...}
//
//  or:
//
//          nil
type StorageAccountCredentialPropertiesPtrInput interface {
	pulumi.Input

	ToStorageAccountCredentialPropertiesPtrOutput() StorageAccountCredentialPropertiesPtrOutput
	ToStorageAccountCredentialPropertiesPtrOutputWithContext(context.Context) StorageAccountCredentialPropertiesPtrOutput
}

type storageAccountCredentialPropertiesPtrType StorageAccountCredentialPropertiesArgs

func StorageAccountCredentialPropertiesPtr(v *StorageAccountCredentialPropertiesArgs) StorageAccountCredentialPropertiesPtrInput {
	return (*storageAccountCredentialPropertiesPtrType)(v)
}

func (*storageAccountCredentialPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAccountCredentialProperties)(nil)).Elem()
}

func (i *storageAccountCredentialPropertiesPtrType) ToStorageAccountCredentialPropertiesPtrOutput() StorageAccountCredentialPropertiesPtrOutput {
	return i.ToStorageAccountCredentialPropertiesPtrOutputWithContext(context.Background())
}

func (i *storageAccountCredentialPropertiesPtrType) ToStorageAccountCredentialPropertiesPtrOutputWithContext(ctx context.Context) StorageAccountCredentialPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountCredentialPropertiesPtrOutput)
}

// The storage account credential properties.
type StorageAccountCredentialPropertiesOutput struct{ *pulumi.OutputState }

func (StorageAccountCredentialPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountCredentialProperties)(nil)).Elem()
}

func (o StorageAccountCredentialPropertiesOutput) ToStorageAccountCredentialPropertiesOutput() StorageAccountCredentialPropertiesOutput {
	return o
}

func (o StorageAccountCredentialPropertiesOutput) ToStorageAccountCredentialPropertiesOutputWithContext(ctx context.Context) StorageAccountCredentialPropertiesOutput {
	return o
}

func (o StorageAccountCredentialPropertiesOutput) ToStorageAccountCredentialPropertiesPtrOutput() StorageAccountCredentialPropertiesPtrOutput {
	return o.ToStorageAccountCredentialPropertiesPtrOutputWithContext(context.Background())
}

func (o StorageAccountCredentialPropertiesOutput) ToStorageAccountCredentialPropertiesPtrOutputWithContext(ctx context.Context) StorageAccountCredentialPropertiesPtrOutput {
	return o.ApplyT(func(v StorageAccountCredentialProperties) *StorageAccountCredentialProperties {
		return &v
	}).(StorageAccountCredentialPropertiesPtrOutput)
}

// The details of the storage account password.
func (o StorageAccountCredentialPropertiesOutput) AccessKey() AsymmetricEncryptedSecretPtrOutput {
	return o.ApplyT(func(v StorageAccountCredentialProperties) *AsymmetricEncryptedSecret { return v.AccessKey }).(AsymmetricEncryptedSecretPtrOutput)
}

// The storage endpoint
func (o StorageAccountCredentialPropertiesOutput) EndPoint() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountCredentialProperties) string { return v.EndPoint }).(pulumi.StringOutput)
}

// Signifies whether SSL needs to be enabled or not.
func (o StorageAccountCredentialPropertiesOutput) SslStatus() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountCredentialProperties) string { return v.SslStatus }).(pulumi.StringOutput)
}

type StorageAccountCredentialPropertiesPtrOutput struct{ *pulumi.OutputState }

func (StorageAccountCredentialPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAccountCredentialProperties)(nil)).Elem()
}

func (o StorageAccountCredentialPropertiesPtrOutput) ToStorageAccountCredentialPropertiesPtrOutput() StorageAccountCredentialPropertiesPtrOutput {
	return o
}

func (o StorageAccountCredentialPropertiesPtrOutput) ToStorageAccountCredentialPropertiesPtrOutputWithContext(ctx context.Context) StorageAccountCredentialPropertiesPtrOutput {
	return o
}

func (o StorageAccountCredentialPropertiesPtrOutput) Elem() StorageAccountCredentialPropertiesOutput {
	return o.ApplyT(func(v *StorageAccountCredentialProperties) StorageAccountCredentialProperties { return *v }).(StorageAccountCredentialPropertiesOutput)
}

// The details of the storage account password.
func (o StorageAccountCredentialPropertiesPtrOutput) AccessKey() AsymmetricEncryptedSecretPtrOutput {
	return o.ApplyT(func(v *StorageAccountCredentialProperties) *AsymmetricEncryptedSecret {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(AsymmetricEncryptedSecretPtrOutput)
}

// The storage endpoint
func (o StorageAccountCredentialPropertiesPtrOutput) EndPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountCredentialProperties) *string {
		if v == nil {
			return nil
		}
		return &v.EndPoint
	}).(pulumi.StringPtrOutput)
}

// Signifies whether SSL needs to be enabled or not.
func (o StorageAccountCredentialPropertiesPtrOutput) SslStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountCredentialProperties) *string {
		if v == nil {
			return nil
		}
		return &v.SslStatus
	}).(pulumi.StringPtrOutput)
}

// The storage account credential properties.
type StorageAccountCredentialPropertiesResponse struct {
	// The details of the storage account password.
	AccessKey *AsymmetricEncryptedSecretResponse `pulumi:"accessKey"`
	// The storage endpoint
	EndPoint string `pulumi:"endPoint"`
	// Signifies whether SSL needs to be enabled or not.
	SslStatus string `pulumi:"sslStatus"`
	// The count of volumes using this storage account credential.
	VolumesCount int `pulumi:"volumesCount"`
}

// StorageAccountCredentialPropertiesResponseInput is an input type that accepts StorageAccountCredentialPropertiesResponseArgs and StorageAccountCredentialPropertiesResponseOutput values.
// You can construct a concrete instance of `StorageAccountCredentialPropertiesResponseInput` via:
//
//          StorageAccountCredentialPropertiesResponseArgs{...}
type StorageAccountCredentialPropertiesResponseInput interface {
	pulumi.Input

	ToStorageAccountCredentialPropertiesResponseOutput() StorageAccountCredentialPropertiesResponseOutput
	ToStorageAccountCredentialPropertiesResponseOutputWithContext(context.Context) StorageAccountCredentialPropertiesResponseOutput
}

// The storage account credential properties.
type StorageAccountCredentialPropertiesResponseArgs struct {
	// The details of the storage account password.
	AccessKey AsymmetricEncryptedSecretResponsePtrInput `pulumi:"accessKey"`
	// The storage endpoint
	EndPoint pulumi.StringInput `pulumi:"endPoint"`
	// Signifies whether SSL needs to be enabled or not.
	SslStatus pulumi.StringInput `pulumi:"sslStatus"`
	// The count of volumes using this storage account credential.
	VolumesCount pulumi.IntInput `pulumi:"volumesCount"`
}

func (StorageAccountCredentialPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountCredentialPropertiesResponse)(nil)).Elem()
}

func (i StorageAccountCredentialPropertiesResponseArgs) ToStorageAccountCredentialPropertiesResponseOutput() StorageAccountCredentialPropertiesResponseOutput {
	return i.ToStorageAccountCredentialPropertiesResponseOutputWithContext(context.Background())
}

func (i StorageAccountCredentialPropertiesResponseArgs) ToStorageAccountCredentialPropertiesResponseOutputWithContext(ctx context.Context) StorageAccountCredentialPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountCredentialPropertiesResponseOutput)
}

func (i StorageAccountCredentialPropertiesResponseArgs) ToStorageAccountCredentialPropertiesResponsePtrOutput() StorageAccountCredentialPropertiesResponsePtrOutput {
	return i.ToStorageAccountCredentialPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i StorageAccountCredentialPropertiesResponseArgs) ToStorageAccountCredentialPropertiesResponsePtrOutputWithContext(ctx context.Context) StorageAccountCredentialPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountCredentialPropertiesResponseOutput).ToStorageAccountCredentialPropertiesResponsePtrOutputWithContext(ctx)
}

// StorageAccountCredentialPropertiesResponsePtrInput is an input type that accepts StorageAccountCredentialPropertiesResponseArgs, StorageAccountCredentialPropertiesResponsePtr and StorageAccountCredentialPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `StorageAccountCredentialPropertiesResponsePtrInput` via:
//
//          StorageAccountCredentialPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type StorageAccountCredentialPropertiesResponsePtrInput interface {
	pulumi.Input

	ToStorageAccountCredentialPropertiesResponsePtrOutput() StorageAccountCredentialPropertiesResponsePtrOutput
	ToStorageAccountCredentialPropertiesResponsePtrOutputWithContext(context.Context) StorageAccountCredentialPropertiesResponsePtrOutput
}

type storageAccountCredentialPropertiesResponsePtrType StorageAccountCredentialPropertiesResponseArgs

func StorageAccountCredentialPropertiesResponsePtr(v *StorageAccountCredentialPropertiesResponseArgs) StorageAccountCredentialPropertiesResponsePtrInput {
	return (*storageAccountCredentialPropertiesResponsePtrType)(v)
}

func (*storageAccountCredentialPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAccountCredentialPropertiesResponse)(nil)).Elem()
}

func (i *storageAccountCredentialPropertiesResponsePtrType) ToStorageAccountCredentialPropertiesResponsePtrOutput() StorageAccountCredentialPropertiesResponsePtrOutput {
	return i.ToStorageAccountCredentialPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *storageAccountCredentialPropertiesResponsePtrType) ToStorageAccountCredentialPropertiesResponsePtrOutputWithContext(ctx context.Context) StorageAccountCredentialPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountCredentialPropertiesResponsePtrOutput)
}

// The storage account credential properties.
type StorageAccountCredentialPropertiesResponseOutput struct{ *pulumi.OutputState }

func (StorageAccountCredentialPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountCredentialPropertiesResponse)(nil)).Elem()
}

func (o StorageAccountCredentialPropertiesResponseOutput) ToStorageAccountCredentialPropertiesResponseOutput() StorageAccountCredentialPropertiesResponseOutput {
	return o
}

func (o StorageAccountCredentialPropertiesResponseOutput) ToStorageAccountCredentialPropertiesResponseOutputWithContext(ctx context.Context) StorageAccountCredentialPropertiesResponseOutput {
	return o
}

func (o StorageAccountCredentialPropertiesResponseOutput) ToStorageAccountCredentialPropertiesResponsePtrOutput() StorageAccountCredentialPropertiesResponsePtrOutput {
	return o.ToStorageAccountCredentialPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o StorageAccountCredentialPropertiesResponseOutput) ToStorageAccountCredentialPropertiesResponsePtrOutputWithContext(ctx context.Context) StorageAccountCredentialPropertiesResponsePtrOutput {
	return o.ApplyT(func(v StorageAccountCredentialPropertiesResponse) *StorageAccountCredentialPropertiesResponse {
		return &v
	}).(StorageAccountCredentialPropertiesResponsePtrOutput)
}

// The details of the storage account password.
func (o StorageAccountCredentialPropertiesResponseOutput) AccessKey() AsymmetricEncryptedSecretResponsePtrOutput {
	return o.ApplyT(func(v StorageAccountCredentialPropertiesResponse) *AsymmetricEncryptedSecretResponse {
		return v.AccessKey
	}).(AsymmetricEncryptedSecretResponsePtrOutput)
}

// The storage endpoint
func (o StorageAccountCredentialPropertiesResponseOutput) EndPoint() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountCredentialPropertiesResponse) string { return v.EndPoint }).(pulumi.StringOutput)
}

// Signifies whether SSL needs to be enabled or not.
func (o StorageAccountCredentialPropertiesResponseOutput) SslStatus() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountCredentialPropertiesResponse) string { return v.SslStatus }).(pulumi.StringOutput)
}

// The count of volumes using this storage account credential.
func (o StorageAccountCredentialPropertiesResponseOutput) VolumesCount() pulumi.IntOutput {
	return o.ApplyT(func(v StorageAccountCredentialPropertiesResponse) int { return v.VolumesCount }).(pulumi.IntOutput)
}

type StorageAccountCredentialPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (StorageAccountCredentialPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAccountCredentialPropertiesResponse)(nil)).Elem()
}

func (o StorageAccountCredentialPropertiesResponsePtrOutput) ToStorageAccountCredentialPropertiesResponsePtrOutput() StorageAccountCredentialPropertiesResponsePtrOutput {
	return o
}

func (o StorageAccountCredentialPropertiesResponsePtrOutput) ToStorageAccountCredentialPropertiesResponsePtrOutputWithContext(ctx context.Context) StorageAccountCredentialPropertiesResponsePtrOutput {
	return o
}

func (o StorageAccountCredentialPropertiesResponsePtrOutput) Elem() StorageAccountCredentialPropertiesResponseOutput {
	return o.ApplyT(func(v *StorageAccountCredentialPropertiesResponse) StorageAccountCredentialPropertiesResponse {
		return *v
	}).(StorageAccountCredentialPropertiesResponseOutput)
}

// The details of the storage account password.
func (o StorageAccountCredentialPropertiesResponsePtrOutput) AccessKey() AsymmetricEncryptedSecretResponsePtrOutput {
	return o.ApplyT(func(v *StorageAccountCredentialPropertiesResponse) *AsymmetricEncryptedSecretResponse {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(AsymmetricEncryptedSecretResponsePtrOutput)
}

// The storage endpoint
func (o StorageAccountCredentialPropertiesResponsePtrOutput) EndPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountCredentialPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.EndPoint
	}).(pulumi.StringPtrOutput)
}

// Signifies whether SSL needs to be enabled or not.
func (o StorageAccountCredentialPropertiesResponsePtrOutput) SslStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountCredentialPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SslStatus
	}).(pulumi.StringPtrOutput)
}

// The count of volumes using this storage account credential.
func (o StorageAccountCredentialPropertiesResponsePtrOutput) VolumesCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StorageAccountCredentialPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.VolumesCount
	}).(pulumi.IntPtrOutput)
}

// The storage domain properties.
type StorageDomainProperties struct {
	// The encryption key used to encrypt the data. This is a user secret.
	EncryptionKey *AsymmetricEncryptedSecret `pulumi:"encryptionKey"`
	// The encryption status "Enabled | Disabled".
	EncryptionStatus string `pulumi:"encryptionStatus"`
	// The storage account credentials.
	StorageAccountCredentialIds []string `pulumi:"storageAccountCredentialIds"`
}

// StorageDomainPropertiesInput is an input type that accepts StorageDomainPropertiesArgs and StorageDomainPropertiesOutput values.
// You can construct a concrete instance of `StorageDomainPropertiesInput` via:
//
//          StorageDomainPropertiesArgs{...}
type StorageDomainPropertiesInput interface {
	pulumi.Input

	ToStorageDomainPropertiesOutput() StorageDomainPropertiesOutput
	ToStorageDomainPropertiesOutputWithContext(context.Context) StorageDomainPropertiesOutput
}

// The storage domain properties.
type StorageDomainPropertiesArgs struct {
	// The encryption key used to encrypt the data. This is a user secret.
	EncryptionKey AsymmetricEncryptedSecretPtrInput `pulumi:"encryptionKey"`
	// The encryption status "Enabled | Disabled".
	EncryptionStatus pulumi.StringInput `pulumi:"encryptionStatus"`
	// The storage account credentials.
	StorageAccountCredentialIds pulumi.StringArrayInput `pulumi:"storageAccountCredentialIds"`
}

func (StorageDomainPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageDomainProperties)(nil)).Elem()
}

func (i StorageDomainPropertiesArgs) ToStorageDomainPropertiesOutput() StorageDomainPropertiesOutput {
	return i.ToStorageDomainPropertiesOutputWithContext(context.Background())
}

func (i StorageDomainPropertiesArgs) ToStorageDomainPropertiesOutputWithContext(ctx context.Context) StorageDomainPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageDomainPropertiesOutput)
}

func (i StorageDomainPropertiesArgs) ToStorageDomainPropertiesPtrOutput() StorageDomainPropertiesPtrOutput {
	return i.ToStorageDomainPropertiesPtrOutputWithContext(context.Background())
}

func (i StorageDomainPropertiesArgs) ToStorageDomainPropertiesPtrOutputWithContext(ctx context.Context) StorageDomainPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageDomainPropertiesOutput).ToStorageDomainPropertiesPtrOutputWithContext(ctx)
}

// StorageDomainPropertiesPtrInput is an input type that accepts StorageDomainPropertiesArgs, StorageDomainPropertiesPtr and StorageDomainPropertiesPtrOutput values.
// You can construct a concrete instance of `StorageDomainPropertiesPtrInput` via:
//
//          StorageDomainPropertiesArgs{...}
//
//  or:
//
//          nil
type StorageDomainPropertiesPtrInput interface {
	pulumi.Input

	ToStorageDomainPropertiesPtrOutput() StorageDomainPropertiesPtrOutput
	ToStorageDomainPropertiesPtrOutputWithContext(context.Context) StorageDomainPropertiesPtrOutput
}

type storageDomainPropertiesPtrType StorageDomainPropertiesArgs

func StorageDomainPropertiesPtr(v *StorageDomainPropertiesArgs) StorageDomainPropertiesPtrInput {
	return (*storageDomainPropertiesPtrType)(v)
}

func (*storageDomainPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageDomainProperties)(nil)).Elem()
}

func (i *storageDomainPropertiesPtrType) ToStorageDomainPropertiesPtrOutput() StorageDomainPropertiesPtrOutput {
	return i.ToStorageDomainPropertiesPtrOutputWithContext(context.Background())
}

func (i *storageDomainPropertiesPtrType) ToStorageDomainPropertiesPtrOutputWithContext(ctx context.Context) StorageDomainPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageDomainPropertiesPtrOutput)
}

// The storage domain properties.
type StorageDomainPropertiesOutput struct{ *pulumi.OutputState }

func (StorageDomainPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageDomainProperties)(nil)).Elem()
}

func (o StorageDomainPropertiesOutput) ToStorageDomainPropertiesOutput() StorageDomainPropertiesOutput {
	return o
}

func (o StorageDomainPropertiesOutput) ToStorageDomainPropertiesOutputWithContext(ctx context.Context) StorageDomainPropertiesOutput {
	return o
}

func (o StorageDomainPropertiesOutput) ToStorageDomainPropertiesPtrOutput() StorageDomainPropertiesPtrOutput {
	return o.ToStorageDomainPropertiesPtrOutputWithContext(context.Background())
}

func (o StorageDomainPropertiesOutput) ToStorageDomainPropertiesPtrOutputWithContext(ctx context.Context) StorageDomainPropertiesPtrOutput {
	return o.ApplyT(func(v StorageDomainProperties) *StorageDomainProperties {
		return &v
	}).(StorageDomainPropertiesPtrOutput)
}

// The encryption key used to encrypt the data. This is a user secret.
func (o StorageDomainPropertiesOutput) EncryptionKey() AsymmetricEncryptedSecretPtrOutput {
	return o.ApplyT(func(v StorageDomainProperties) *AsymmetricEncryptedSecret { return v.EncryptionKey }).(AsymmetricEncryptedSecretPtrOutput)
}

// The encryption status "Enabled | Disabled".
func (o StorageDomainPropertiesOutput) EncryptionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v StorageDomainProperties) string { return v.EncryptionStatus }).(pulumi.StringOutput)
}

// The storage account credentials.
func (o StorageDomainPropertiesOutput) StorageAccountCredentialIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StorageDomainProperties) []string { return v.StorageAccountCredentialIds }).(pulumi.StringArrayOutput)
}

type StorageDomainPropertiesPtrOutput struct{ *pulumi.OutputState }

func (StorageDomainPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageDomainProperties)(nil)).Elem()
}

func (o StorageDomainPropertiesPtrOutput) ToStorageDomainPropertiesPtrOutput() StorageDomainPropertiesPtrOutput {
	return o
}

func (o StorageDomainPropertiesPtrOutput) ToStorageDomainPropertiesPtrOutputWithContext(ctx context.Context) StorageDomainPropertiesPtrOutput {
	return o
}

func (o StorageDomainPropertiesPtrOutput) Elem() StorageDomainPropertiesOutput {
	return o.ApplyT(func(v *StorageDomainProperties) StorageDomainProperties { return *v }).(StorageDomainPropertiesOutput)
}

// The encryption key used to encrypt the data. This is a user secret.
func (o StorageDomainPropertiesPtrOutput) EncryptionKey() AsymmetricEncryptedSecretPtrOutput {
	return o.ApplyT(func(v *StorageDomainProperties) *AsymmetricEncryptedSecret {
		if v == nil {
			return nil
		}
		return v.EncryptionKey
	}).(AsymmetricEncryptedSecretPtrOutput)
}

// The encryption status "Enabled | Disabled".
func (o StorageDomainPropertiesPtrOutput) EncryptionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageDomainProperties) *string {
		if v == nil {
			return nil
		}
		return &v.EncryptionStatus
	}).(pulumi.StringPtrOutput)
}

// The storage account credentials.
func (o StorageDomainPropertiesPtrOutput) StorageAccountCredentialIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StorageDomainProperties) []string {
		if v == nil {
			return nil
		}
		return v.StorageAccountCredentialIds
	}).(pulumi.StringArrayOutput)
}

// The storage domain properties.
type StorageDomainPropertiesResponse struct {
	// The encryption key used to encrypt the data. This is a user secret.
	EncryptionKey *AsymmetricEncryptedSecretResponse `pulumi:"encryptionKey"`
	// The encryption status "Enabled | Disabled".
	EncryptionStatus string `pulumi:"encryptionStatus"`
	// The storage account credentials.
	StorageAccountCredentialIds []string `pulumi:"storageAccountCredentialIds"`
}

// StorageDomainPropertiesResponseInput is an input type that accepts StorageDomainPropertiesResponseArgs and StorageDomainPropertiesResponseOutput values.
// You can construct a concrete instance of `StorageDomainPropertiesResponseInput` via:
//
//          StorageDomainPropertiesResponseArgs{...}
type StorageDomainPropertiesResponseInput interface {
	pulumi.Input

	ToStorageDomainPropertiesResponseOutput() StorageDomainPropertiesResponseOutput
	ToStorageDomainPropertiesResponseOutputWithContext(context.Context) StorageDomainPropertiesResponseOutput
}

// The storage domain properties.
type StorageDomainPropertiesResponseArgs struct {
	// The encryption key used to encrypt the data. This is a user secret.
	EncryptionKey AsymmetricEncryptedSecretResponsePtrInput `pulumi:"encryptionKey"`
	// The encryption status "Enabled | Disabled".
	EncryptionStatus pulumi.StringInput `pulumi:"encryptionStatus"`
	// The storage account credentials.
	StorageAccountCredentialIds pulumi.StringArrayInput `pulumi:"storageAccountCredentialIds"`
}

func (StorageDomainPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageDomainPropertiesResponse)(nil)).Elem()
}

func (i StorageDomainPropertiesResponseArgs) ToStorageDomainPropertiesResponseOutput() StorageDomainPropertiesResponseOutput {
	return i.ToStorageDomainPropertiesResponseOutputWithContext(context.Background())
}

func (i StorageDomainPropertiesResponseArgs) ToStorageDomainPropertiesResponseOutputWithContext(ctx context.Context) StorageDomainPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageDomainPropertiesResponseOutput)
}

func (i StorageDomainPropertiesResponseArgs) ToStorageDomainPropertiesResponsePtrOutput() StorageDomainPropertiesResponsePtrOutput {
	return i.ToStorageDomainPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i StorageDomainPropertiesResponseArgs) ToStorageDomainPropertiesResponsePtrOutputWithContext(ctx context.Context) StorageDomainPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageDomainPropertiesResponseOutput).ToStorageDomainPropertiesResponsePtrOutputWithContext(ctx)
}

// StorageDomainPropertiesResponsePtrInput is an input type that accepts StorageDomainPropertiesResponseArgs, StorageDomainPropertiesResponsePtr and StorageDomainPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `StorageDomainPropertiesResponsePtrInput` via:
//
//          StorageDomainPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type StorageDomainPropertiesResponsePtrInput interface {
	pulumi.Input

	ToStorageDomainPropertiesResponsePtrOutput() StorageDomainPropertiesResponsePtrOutput
	ToStorageDomainPropertiesResponsePtrOutputWithContext(context.Context) StorageDomainPropertiesResponsePtrOutput
}

type storageDomainPropertiesResponsePtrType StorageDomainPropertiesResponseArgs

func StorageDomainPropertiesResponsePtr(v *StorageDomainPropertiesResponseArgs) StorageDomainPropertiesResponsePtrInput {
	return (*storageDomainPropertiesResponsePtrType)(v)
}

func (*storageDomainPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageDomainPropertiesResponse)(nil)).Elem()
}

func (i *storageDomainPropertiesResponsePtrType) ToStorageDomainPropertiesResponsePtrOutput() StorageDomainPropertiesResponsePtrOutput {
	return i.ToStorageDomainPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *storageDomainPropertiesResponsePtrType) ToStorageDomainPropertiesResponsePtrOutputWithContext(ctx context.Context) StorageDomainPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageDomainPropertiesResponsePtrOutput)
}

// The storage domain properties.
type StorageDomainPropertiesResponseOutput struct{ *pulumi.OutputState }

func (StorageDomainPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageDomainPropertiesResponse)(nil)).Elem()
}

func (o StorageDomainPropertiesResponseOutput) ToStorageDomainPropertiesResponseOutput() StorageDomainPropertiesResponseOutput {
	return o
}

func (o StorageDomainPropertiesResponseOutput) ToStorageDomainPropertiesResponseOutputWithContext(ctx context.Context) StorageDomainPropertiesResponseOutput {
	return o
}

func (o StorageDomainPropertiesResponseOutput) ToStorageDomainPropertiesResponsePtrOutput() StorageDomainPropertiesResponsePtrOutput {
	return o.ToStorageDomainPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o StorageDomainPropertiesResponseOutput) ToStorageDomainPropertiesResponsePtrOutputWithContext(ctx context.Context) StorageDomainPropertiesResponsePtrOutput {
	return o.ApplyT(func(v StorageDomainPropertiesResponse) *StorageDomainPropertiesResponse {
		return &v
	}).(StorageDomainPropertiesResponsePtrOutput)
}

// The encryption key used to encrypt the data. This is a user secret.
func (o StorageDomainPropertiesResponseOutput) EncryptionKey() AsymmetricEncryptedSecretResponsePtrOutput {
	return o.ApplyT(func(v StorageDomainPropertiesResponse) *AsymmetricEncryptedSecretResponse { return v.EncryptionKey }).(AsymmetricEncryptedSecretResponsePtrOutput)
}

// The encryption status "Enabled | Disabled".
func (o StorageDomainPropertiesResponseOutput) EncryptionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v StorageDomainPropertiesResponse) string { return v.EncryptionStatus }).(pulumi.StringOutput)
}

// The storage account credentials.
func (o StorageDomainPropertiesResponseOutput) StorageAccountCredentialIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StorageDomainPropertiesResponse) []string { return v.StorageAccountCredentialIds }).(pulumi.StringArrayOutput)
}

type StorageDomainPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (StorageDomainPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageDomainPropertiesResponse)(nil)).Elem()
}

func (o StorageDomainPropertiesResponsePtrOutput) ToStorageDomainPropertiesResponsePtrOutput() StorageDomainPropertiesResponsePtrOutput {
	return o
}

func (o StorageDomainPropertiesResponsePtrOutput) ToStorageDomainPropertiesResponsePtrOutputWithContext(ctx context.Context) StorageDomainPropertiesResponsePtrOutput {
	return o
}

func (o StorageDomainPropertiesResponsePtrOutput) Elem() StorageDomainPropertiesResponseOutput {
	return o.ApplyT(func(v *StorageDomainPropertiesResponse) StorageDomainPropertiesResponse { return *v }).(StorageDomainPropertiesResponseOutput)
}

// The encryption key used to encrypt the data. This is a user secret.
func (o StorageDomainPropertiesResponsePtrOutput) EncryptionKey() AsymmetricEncryptedSecretResponsePtrOutput {
	return o.ApplyT(func(v *StorageDomainPropertiesResponse) *AsymmetricEncryptedSecretResponse {
		if v == nil {
			return nil
		}
		return v.EncryptionKey
	}).(AsymmetricEncryptedSecretResponsePtrOutput)
}

// The encryption status "Enabled | Disabled".
func (o StorageDomainPropertiesResponsePtrOutput) EncryptionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageDomainPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.EncryptionStatus
	}).(pulumi.StringPtrOutput)
}

// The storage account credentials.
func (o StorageDomainPropertiesResponsePtrOutput) StorageAccountCredentialIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StorageDomainPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.StorageAccountCredentialIds
	}).(pulumi.StringArrayOutput)
}

// The time.
type Time struct {
	// The hour.
	Hours int `pulumi:"hours"`
	// The minute.
	Minutes int `pulumi:"minutes"`
	// The second.
	Seconds int `pulumi:"seconds"`
}

// TimeInput is an input type that accepts TimeArgs and TimeOutput values.
// You can construct a concrete instance of `TimeInput` via:
//
//          TimeArgs{...}
type TimeInput interface {
	pulumi.Input

	ToTimeOutput() TimeOutput
	ToTimeOutputWithContext(context.Context) TimeOutput
}

// The time.
type TimeArgs struct {
	// The hour.
	Hours pulumi.IntInput `pulumi:"hours"`
	// The minute.
	Minutes pulumi.IntInput `pulumi:"minutes"`
	// The second.
	Seconds pulumi.IntInput `pulumi:"seconds"`
}

func (TimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Time)(nil)).Elem()
}

func (i TimeArgs) ToTimeOutput() TimeOutput {
	return i.ToTimeOutputWithContext(context.Background())
}

func (i TimeArgs) ToTimeOutputWithContext(ctx context.Context) TimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeOutput)
}

func (i TimeArgs) ToTimePtrOutput() TimePtrOutput {
	return i.ToTimePtrOutputWithContext(context.Background())
}

func (i TimeArgs) ToTimePtrOutputWithContext(ctx context.Context) TimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeOutput).ToTimePtrOutputWithContext(ctx)
}

// TimePtrInput is an input type that accepts TimeArgs, TimePtr and TimePtrOutput values.
// You can construct a concrete instance of `TimePtrInput` via:
//
//          TimeArgs{...}
//
//  or:
//
//          nil
type TimePtrInput interface {
	pulumi.Input

	ToTimePtrOutput() TimePtrOutput
	ToTimePtrOutputWithContext(context.Context) TimePtrOutput
}

type timePtrType TimeArgs

func TimePtr(v *TimeArgs) TimePtrInput {
	return (*timePtrType)(v)
}

func (*timePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Time)(nil)).Elem()
}

func (i *timePtrType) ToTimePtrOutput() TimePtrOutput {
	return i.ToTimePtrOutputWithContext(context.Background())
}

func (i *timePtrType) ToTimePtrOutputWithContext(ctx context.Context) TimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimePtrOutput)
}

// The time.
type TimeOutput struct{ *pulumi.OutputState }

func (TimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Time)(nil)).Elem()
}

func (o TimeOutput) ToTimeOutput() TimeOutput {
	return o
}

func (o TimeOutput) ToTimeOutputWithContext(ctx context.Context) TimeOutput {
	return o
}

func (o TimeOutput) ToTimePtrOutput() TimePtrOutput {
	return o.ToTimePtrOutputWithContext(context.Background())
}

func (o TimeOutput) ToTimePtrOutputWithContext(ctx context.Context) TimePtrOutput {
	return o.ApplyT(func(v Time) *Time {
		return &v
	}).(TimePtrOutput)
}

// The hour.
func (o TimeOutput) Hours() pulumi.IntOutput {
	return o.ApplyT(func(v Time) int { return v.Hours }).(pulumi.IntOutput)
}

// The minute.
func (o TimeOutput) Minutes() pulumi.IntOutput {
	return o.ApplyT(func(v Time) int { return v.Minutes }).(pulumi.IntOutput)
}

// The second.
func (o TimeOutput) Seconds() pulumi.IntOutput {
	return o.ApplyT(func(v Time) int { return v.Seconds }).(pulumi.IntOutput)
}

type TimePtrOutput struct{ *pulumi.OutputState }

func (TimePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Time)(nil)).Elem()
}

func (o TimePtrOutput) ToTimePtrOutput() TimePtrOutput {
	return o
}

func (o TimePtrOutput) ToTimePtrOutputWithContext(ctx context.Context) TimePtrOutput {
	return o
}

func (o TimePtrOutput) Elem() TimeOutput {
	return o.ApplyT(func(v *Time) Time { return *v }).(TimeOutput)
}

// The hour.
func (o TimePtrOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Time) *int {
		if v == nil {
			return nil
		}
		return &v.Hours
	}).(pulumi.IntPtrOutput)
}

// The minute.
func (o TimePtrOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Time) *int {
		if v == nil {
			return nil
		}
		return &v.Minutes
	}).(pulumi.IntPtrOutput)
}

// The second.
func (o TimePtrOutput) Seconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Time) *int {
		if v == nil {
			return nil
		}
		return &v.Seconds
	}).(pulumi.IntPtrOutput)
}

// The time.
type TimeResponse struct {
	// The hour.
	Hours int `pulumi:"hours"`
	// The minute.
	Minutes int `pulumi:"minutes"`
	// The second.
	Seconds int `pulumi:"seconds"`
}

// TimeResponseInput is an input type that accepts TimeResponseArgs and TimeResponseOutput values.
// You can construct a concrete instance of `TimeResponseInput` via:
//
//          TimeResponseArgs{...}
type TimeResponseInput interface {
	pulumi.Input

	ToTimeResponseOutput() TimeResponseOutput
	ToTimeResponseOutputWithContext(context.Context) TimeResponseOutput
}

// The time.
type TimeResponseArgs struct {
	// The hour.
	Hours pulumi.IntInput `pulumi:"hours"`
	// The minute.
	Minutes pulumi.IntInput `pulumi:"minutes"`
	// The second.
	Seconds pulumi.IntInput `pulumi:"seconds"`
}

func (TimeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeResponse)(nil)).Elem()
}

func (i TimeResponseArgs) ToTimeResponseOutput() TimeResponseOutput {
	return i.ToTimeResponseOutputWithContext(context.Background())
}

func (i TimeResponseArgs) ToTimeResponseOutputWithContext(ctx context.Context) TimeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeResponseOutput)
}

func (i TimeResponseArgs) ToTimeResponsePtrOutput() TimeResponsePtrOutput {
	return i.ToTimeResponsePtrOutputWithContext(context.Background())
}

func (i TimeResponseArgs) ToTimeResponsePtrOutputWithContext(ctx context.Context) TimeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeResponseOutput).ToTimeResponsePtrOutputWithContext(ctx)
}

// TimeResponsePtrInput is an input type that accepts TimeResponseArgs, TimeResponsePtr and TimeResponsePtrOutput values.
// You can construct a concrete instance of `TimeResponsePtrInput` via:
//
//          TimeResponseArgs{...}
//
//  or:
//
//          nil
type TimeResponsePtrInput interface {
	pulumi.Input

	ToTimeResponsePtrOutput() TimeResponsePtrOutput
	ToTimeResponsePtrOutputWithContext(context.Context) TimeResponsePtrOutput
}

type timeResponsePtrType TimeResponseArgs

func TimeResponsePtr(v *TimeResponseArgs) TimeResponsePtrInput {
	return (*timeResponsePtrType)(v)
}

func (*timeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TimeResponse)(nil)).Elem()
}

func (i *timeResponsePtrType) ToTimeResponsePtrOutput() TimeResponsePtrOutput {
	return i.ToTimeResponsePtrOutputWithContext(context.Background())
}

func (i *timeResponsePtrType) ToTimeResponsePtrOutputWithContext(ctx context.Context) TimeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeResponsePtrOutput)
}

// The time.
type TimeResponseOutput struct{ *pulumi.OutputState }

func (TimeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeResponse)(nil)).Elem()
}

func (o TimeResponseOutput) ToTimeResponseOutput() TimeResponseOutput {
	return o
}

func (o TimeResponseOutput) ToTimeResponseOutputWithContext(ctx context.Context) TimeResponseOutput {
	return o
}

func (o TimeResponseOutput) ToTimeResponsePtrOutput() TimeResponsePtrOutput {
	return o.ToTimeResponsePtrOutputWithContext(context.Background())
}

func (o TimeResponseOutput) ToTimeResponsePtrOutputWithContext(ctx context.Context) TimeResponsePtrOutput {
	return o.ApplyT(func(v TimeResponse) *TimeResponse {
		return &v
	}).(TimeResponsePtrOutput)
}

// The hour.
func (o TimeResponseOutput) Hours() pulumi.IntOutput {
	return o.ApplyT(func(v TimeResponse) int { return v.Hours }).(pulumi.IntOutput)
}

// The minute.
func (o TimeResponseOutput) Minutes() pulumi.IntOutput {
	return o.ApplyT(func(v TimeResponse) int { return v.Minutes }).(pulumi.IntOutput)
}

// The second.
func (o TimeResponseOutput) Seconds() pulumi.IntOutput {
	return o.ApplyT(func(v TimeResponse) int { return v.Seconds }).(pulumi.IntOutput)
}

type TimeResponsePtrOutput struct{ *pulumi.OutputState }

func (TimeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TimeResponse)(nil)).Elem()
}

func (o TimeResponsePtrOutput) ToTimeResponsePtrOutput() TimeResponsePtrOutput {
	return o
}

func (o TimeResponsePtrOutput) ToTimeResponsePtrOutputWithContext(ctx context.Context) TimeResponsePtrOutput {
	return o
}

func (o TimeResponsePtrOutput) Elem() TimeResponseOutput {
	return o.ApplyT(func(v *TimeResponse) TimeResponse { return *v }).(TimeResponseOutput)
}

// The hour.
func (o TimeResponsePtrOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TimeResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Hours
	}).(pulumi.IntPtrOutput)
}

// The minute.
func (o TimeResponsePtrOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TimeResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Minutes
	}).(pulumi.IntPtrOutput)
}

// The second.
func (o TimeResponsePtrOutput) Seconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TimeResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Seconds
	}).(pulumi.IntPtrOutput)
}

// The properties of volume container.
type VolumeContainerProperties struct {
	// The bandwidth-rate set on the volume container.
	BandWidthRateInMbps *int `pulumi:"bandWidthRateInMbps"`
	// The ID of the bandwidth setting associated with the volume container.
	BandwidthSettingId *string `pulumi:"bandwidthSettingId"`
	// The key used to encrypt data in the volume container. It is required when property 'EncryptionStatus' is "Enabled".
	EncryptionKey *AsymmetricEncryptedSecret `pulumi:"encryptionKey"`
	// The path ID of storage account associated with the volume container.
	StorageAccountCredentialId string `pulumi:"storageAccountCredentialId"`
}

// VolumeContainerPropertiesInput is an input type that accepts VolumeContainerPropertiesArgs and VolumeContainerPropertiesOutput values.
// You can construct a concrete instance of `VolumeContainerPropertiesInput` via:
//
//          VolumeContainerPropertiesArgs{...}
type VolumeContainerPropertiesInput interface {
	pulumi.Input

	ToVolumeContainerPropertiesOutput() VolumeContainerPropertiesOutput
	ToVolumeContainerPropertiesOutputWithContext(context.Context) VolumeContainerPropertiesOutput
}

// The properties of volume container.
type VolumeContainerPropertiesArgs struct {
	// The bandwidth-rate set on the volume container.
	BandWidthRateInMbps pulumi.IntPtrInput `pulumi:"bandWidthRateInMbps"`
	// The ID of the bandwidth setting associated with the volume container.
	BandwidthSettingId pulumi.StringPtrInput `pulumi:"bandwidthSettingId"`
	// The key used to encrypt data in the volume container. It is required when property 'EncryptionStatus' is "Enabled".
	EncryptionKey AsymmetricEncryptedSecretPtrInput `pulumi:"encryptionKey"`
	// The path ID of storage account associated with the volume container.
	StorageAccountCredentialId pulumi.StringInput `pulumi:"storageAccountCredentialId"`
}

func (VolumeContainerPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeContainerProperties)(nil)).Elem()
}

func (i VolumeContainerPropertiesArgs) ToVolumeContainerPropertiesOutput() VolumeContainerPropertiesOutput {
	return i.ToVolumeContainerPropertiesOutputWithContext(context.Background())
}

func (i VolumeContainerPropertiesArgs) ToVolumeContainerPropertiesOutputWithContext(ctx context.Context) VolumeContainerPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeContainerPropertiesOutput)
}

func (i VolumeContainerPropertiesArgs) ToVolumeContainerPropertiesPtrOutput() VolumeContainerPropertiesPtrOutput {
	return i.ToVolumeContainerPropertiesPtrOutputWithContext(context.Background())
}

func (i VolumeContainerPropertiesArgs) ToVolumeContainerPropertiesPtrOutputWithContext(ctx context.Context) VolumeContainerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeContainerPropertiesOutput).ToVolumeContainerPropertiesPtrOutputWithContext(ctx)
}

// VolumeContainerPropertiesPtrInput is an input type that accepts VolumeContainerPropertiesArgs, VolumeContainerPropertiesPtr and VolumeContainerPropertiesPtrOutput values.
// You can construct a concrete instance of `VolumeContainerPropertiesPtrInput` via:
//
//          VolumeContainerPropertiesArgs{...}
//
//  or:
//
//          nil
type VolumeContainerPropertiesPtrInput interface {
	pulumi.Input

	ToVolumeContainerPropertiesPtrOutput() VolumeContainerPropertiesPtrOutput
	ToVolumeContainerPropertiesPtrOutputWithContext(context.Context) VolumeContainerPropertiesPtrOutput
}

type volumeContainerPropertiesPtrType VolumeContainerPropertiesArgs

func VolumeContainerPropertiesPtr(v *VolumeContainerPropertiesArgs) VolumeContainerPropertiesPtrInput {
	return (*volumeContainerPropertiesPtrType)(v)
}

func (*volumeContainerPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeContainerProperties)(nil)).Elem()
}

func (i *volumeContainerPropertiesPtrType) ToVolumeContainerPropertiesPtrOutput() VolumeContainerPropertiesPtrOutput {
	return i.ToVolumeContainerPropertiesPtrOutputWithContext(context.Background())
}

func (i *volumeContainerPropertiesPtrType) ToVolumeContainerPropertiesPtrOutputWithContext(ctx context.Context) VolumeContainerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeContainerPropertiesPtrOutput)
}

// The properties of volume container.
type VolumeContainerPropertiesOutput struct{ *pulumi.OutputState }

func (VolumeContainerPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeContainerProperties)(nil)).Elem()
}

func (o VolumeContainerPropertiesOutput) ToVolumeContainerPropertiesOutput() VolumeContainerPropertiesOutput {
	return o
}

func (o VolumeContainerPropertiesOutput) ToVolumeContainerPropertiesOutputWithContext(ctx context.Context) VolumeContainerPropertiesOutput {
	return o
}

func (o VolumeContainerPropertiesOutput) ToVolumeContainerPropertiesPtrOutput() VolumeContainerPropertiesPtrOutput {
	return o.ToVolumeContainerPropertiesPtrOutputWithContext(context.Background())
}

func (o VolumeContainerPropertiesOutput) ToVolumeContainerPropertiesPtrOutputWithContext(ctx context.Context) VolumeContainerPropertiesPtrOutput {
	return o.ApplyT(func(v VolumeContainerProperties) *VolumeContainerProperties {
		return &v
	}).(VolumeContainerPropertiesPtrOutput)
}

// The bandwidth-rate set on the volume container.
func (o VolumeContainerPropertiesOutput) BandWidthRateInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VolumeContainerProperties) *int { return v.BandWidthRateInMbps }).(pulumi.IntPtrOutput)
}

// The ID of the bandwidth setting associated with the volume container.
func (o VolumeContainerPropertiesOutput) BandwidthSettingId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeContainerProperties) *string { return v.BandwidthSettingId }).(pulumi.StringPtrOutput)
}

// The key used to encrypt data in the volume container. It is required when property 'EncryptionStatus' is "Enabled".
func (o VolumeContainerPropertiesOutput) EncryptionKey() AsymmetricEncryptedSecretPtrOutput {
	return o.ApplyT(func(v VolumeContainerProperties) *AsymmetricEncryptedSecret { return v.EncryptionKey }).(AsymmetricEncryptedSecretPtrOutput)
}

// The path ID of storage account associated with the volume container.
func (o VolumeContainerPropertiesOutput) StorageAccountCredentialId() pulumi.StringOutput {
	return o.ApplyT(func(v VolumeContainerProperties) string { return v.StorageAccountCredentialId }).(pulumi.StringOutput)
}

type VolumeContainerPropertiesPtrOutput struct{ *pulumi.OutputState }

func (VolumeContainerPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeContainerProperties)(nil)).Elem()
}

func (o VolumeContainerPropertiesPtrOutput) ToVolumeContainerPropertiesPtrOutput() VolumeContainerPropertiesPtrOutput {
	return o
}

func (o VolumeContainerPropertiesPtrOutput) ToVolumeContainerPropertiesPtrOutputWithContext(ctx context.Context) VolumeContainerPropertiesPtrOutput {
	return o
}

func (o VolumeContainerPropertiesPtrOutput) Elem() VolumeContainerPropertiesOutput {
	return o.ApplyT(func(v *VolumeContainerProperties) VolumeContainerProperties { return *v }).(VolumeContainerPropertiesOutput)
}

// The bandwidth-rate set on the volume container.
func (o VolumeContainerPropertiesPtrOutput) BandWidthRateInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VolumeContainerProperties) *int {
		if v == nil {
			return nil
		}
		return v.BandWidthRateInMbps
	}).(pulumi.IntPtrOutput)
}

// The ID of the bandwidth setting associated with the volume container.
func (o VolumeContainerPropertiesPtrOutput) BandwidthSettingId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumeContainerProperties) *string {
		if v == nil {
			return nil
		}
		return v.BandwidthSettingId
	}).(pulumi.StringPtrOutput)
}

// The key used to encrypt data in the volume container. It is required when property 'EncryptionStatus' is "Enabled".
func (o VolumeContainerPropertiesPtrOutput) EncryptionKey() AsymmetricEncryptedSecretPtrOutput {
	return o.ApplyT(func(v *VolumeContainerProperties) *AsymmetricEncryptedSecret {
		if v == nil {
			return nil
		}
		return v.EncryptionKey
	}).(AsymmetricEncryptedSecretPtrOutput)
}

// The path ID of storage account associated with the volume container.
func (o VolumeContainerPropertiesPtrOutput) StorageAccountCredentialId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumeContainerProperties) *string {
		if v == nil {
			return nil
		}
		return &v.StorageAccountCredentialId
	}).(pulumi.StringPtrOutput)
}

// The properties of volume container.
type VolumeContainerPropertiesResponse struct {
	// The bandwidth-rate set on the volume container.
	BandWidthRateInMbps *int `pulumi:"bandWidthRateInMbps"`
	// The ID of the bandwidth setting associated with the volume container.
	BandwidthSettingId *string `pulumi:"bandwidthSettingId"`
	// The key used to encrypt data in the volume container. It is required when property 'EncryptionStatus' is "Enabled".
	EncryptionKey *AsymmetricEncryptedSecretResponse `pulumi:"encryptionKey"`
	// The flag to denote whether encryption is enabled or not.
	EncryptionStatus string `pulumi:"encryptionStatus"`
	// The owner ship status of the volume container. Only when the status is "NotOwned", the delete operation on the volume container is permitted.
	OwnerShipStatus string `pulumi:"ownerShipStatus"`
	// The path ID of storage account associated with the volume container.
	StorageAccountCredentialId string `pulumi:"storageAccountCredentialId"`
	// The total cloud storage for the volume container.
	TotalCloudStorageUsageInBytes int `pulumi:"totalCloudStorageUsageInBytes"`
	// The number of volumes in the volume Container.
	VolumeCount int `pulumi:"volumeCount"`
}

// VolumeContainerPropertiesResponseInput is an input type that accepts VolumeContainerPropertiesResponseArgs and VolumeContainerPropertiesResponseOutput values.
// You can construct a concrete instance of `VolumeContainerPropertiesResponseInput` via:
//
//          VolumeContainerPropertiesResponseArgs{...}
type VolumeContainerPropertiesResponseInput interface {
	pulumi.Input

	ToVolumeContainerPropertiesResponseOutput() VolumeContainerPropertiesResponseOutput
	ToVolumeContainerPropertiesResponseOutputWithContext(context.Context) VolumeContainerPropertiesResponseOutput
}

// The properties of volume container.
type VolumeContainerPropertiesResponseArgs struct {
	// The bandwidth-rate set on the volume container.
	BandWidthRateInMbps pulumi.IntPtrInput `pulumi:"bandWidthRateInMbps"`
	// The ID of the bandwidth setting associated with the volume container.
	BandwidthSettingId pulumi.StringPtrInput `pulumi:"bandwidthSettingId"`
	// The key used to encrypt data in the volume container. It is required when property 'EncryptionStatus' is "Enabled".
	EncryptionKey AsymmetricEncryptedSecretResponsePtrInput `pulumi:"encryptionKey"`
	// The flag to denote whether encryption is enabled or not.
	EncryptionStatus pulumi.StringInput `pulumi:"encryptionStatus"`
	// The owner ship status of the volume container. Only when the status is "NotOwned", the delete operation on the volume container is permitted.
	OwnerShipStatus pulumi.StringInput `pulumi:"ownerShipStatus"`
	// The path ID of storage account associated with the volume container.
	StorageAccountCredentialId pulumi.StringInput `pulumi:"storageAccountCredentialId"`
	// The total cloud storage for the volume container.
	TotalCloudStorageUsageInBytes pulumi.IntInput `pulumi:"totalCloudStorageUsageInBytes"`
	// The number of volumes in the volume Container.
	VolumeCount pulumi.IntInput `pulumi:"volumeCount"`
}

func (VolumeContainerPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeContainerPropertiesResponse)(nil)).Elem()
}

func (i VolumeContainerPropertiesResponseArgs) ToVolumeContainerPropertiesResponseOutput() VolumeContainerPropertiesResponseOutput {
	return i.ToVolumeContainerPropertiesResponseOutputWithContext(context.Background())
}

func (i VolumeContainerPropertiesResponseArgs) ToVolumeContainerPropertiesResponseOutputWithContext(ctx context.Context) VolumeContainerPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeContainerPropertiesResponseOutput)
}

func (i VolumeContainerPropertiesResponseArgs) ToVolumeContainerPropertiesResponsePtrOutput() VolumeContainerPropertiesResponsePtrOutput {
	return i.ToVolumeContainerPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i VolumeContainerPropertiesResponseArgs) ToVolumeContainerPropertiesResponsePtrOutputWithContext(ctx context.Context) VolumeContainerPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeContainerPropertiesResponseOutput).ToVolumeContainerPropertiesResponsePtrOutputWithContext(ctx)
}

// VolumeContainerPropertiesResponsePtrInput is an input type that accepts VolumeContainerPropertiesResponseArgs, VolumeContainerPropertiesResponsePtr and VolumeContainerPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `VolumeContainerPropertiesResponsePtrInput` via:
//
//          VolumeContainerPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type VolumeContainerPropertiesResponsePtrInput interface {
	pulumi.Input

	ToVolumeContainerPropertiesResponsePtrOutput() VolumeContainerPropertiesResponsePtrOutput
	ToVolumeContainerPropertiesResponsePtrOutputWithContext(context.Context) VolumeContainerPropertiesResponsePtrOutput
}

type volumeContainerPropertiesResponsePtrType VolumeContainerPropertiesResponseArgs

func VolumeContainerPropertiesResponsePtr(v *VolumeContainerPropertiesResponseArgs) VolumeContainerPropertiesResponsePtrInput {
	return (*volumeContainerPropertiesResponsePtrType)(v)
}

func (*volumeContainerPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeContainerPropertiesResponse)(nil)).Elem()
}

func (i *volumeContainerPropertiesResponsePtrType) ToVolumeContainerPropertiesResponsePtrOutput() VolumeContainerPropertiesResponsePtrOutput {
	return i.ToVolumeContainerPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *volumeContainerPropertiesResponsePtrType) ToVolumeContainerPropertiesResponsePtrOutputWithContext(ctx context.Context) VolumeContainerPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeContainerPropertiesResponsePtrOutput)
}

// The properties of volume container.
type VolumeContainerPropertiesResponseOutput struct{ *pulumi.OutputState }

func (VolumeContainerPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeContainerPropertiesResponse)(nil)).Elem()
}

func (o VolumeContainerPropertiesResponseOutput) ToVolumeContainerPropertiesResponseOutput() VolumeContainerPropertiesResponseOutput {
	return o
}

func (o VolumeContainerPropertiesResponseOutput) ToVolumeContainerPropertiesResponseOutputWithContext(ctx context.Context) VolumeContainerPropertiesResponseOutput {
	return o
}

func (o VolumeContainerPropertiesResponseOutput) ToVolumeContainerPropertiesResponsePtrOutput() VolumeContainerPropertiesResponsePtrOutput {
	return o.ToVolumeContainerPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o VolumeContainerPropertiesResponseOutput) ToVolumeContainerPropertiesResponsePtrOutputWithContext(ctx context.Context) VolumeContainerPropertiesResponsePtrOutput {
	return o.ApplyT(func(v VolumeContainerPropertiesResponse) *VolumeContainerPropertiesResponse {
		return &v
	}).(VolumeContainerPropertiesResponsePtrOutput)
}

// The bandwidth-rate set on the volume container.
func (o VolumeContainerPropertiesResponseOutput) BandWidthRateInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VolumeContainerPropertiesResponse) *int { return v.BandWidthRateInMbps }).(pulumi.IntPtrOutput)
}

// The ID of the bandwidth setting associated with the volume container.
func (o VolumeContainerPropertiesResponseOutput) BandwidthSettingId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeContainerPropertiesResponse) *string { return v.BandwidthSettingId }).(pulumi.StringPtrOutput)
}

// The key used to encrypt data in the volume container. It is required when property 'EncryptionStatus' is "Enabled".
func (o VolumeContainerPropertiesResponseOutput) EncryptionKey() AsymmetricEncryptedSecretResponsePtrOutput {
	return o.ApplyT(func(v VolumeContainerPropertiesResponse) *AsymmetricEncryptedSecretResponse { return v.EncryptionKey }).(AsymmetricEncryptedSecretResponsePtrOutput)
}

// The flag to denote whether encryption is enabled or not.
func (o VolumeContainerPropertiesResponseOutput) EncryptionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v VolumeContainerPropertiesResponse) string { return v.EncryptionStatus }).(pulumi.StringOutput)
}

// The owner ship status of the volume container. Only when the status is "NotOwned", the delete operation on the volume container is permitted.
func (o VolumeContainerPropertiesResponseOutput) OwnerShipStatus() pulumi.StringOutput {
	return o.ApplyT(func(v VolumeContainerPropertiesResponse) string { return v.OwnerShipStatus }).(pulumi.StringOutput)
}

// The path ID of storage account associated with the volume container.
func (o VolumeContainerPropertiesResponseOutput) StorageAccountCredentialId() pulumi.StringOutput {
	return o.ApplyT(func(v VolumeContainerPropertiesResponse) string { return v.StorageAccountCredentialId }).(pulumi.StringOutput)
}

// The total cloud storage for the volume container.
func (o VolumeContainerPropertiesResponseOutput) TotalCloudStorageUsageInBytes() pulumi.IntOutput {
	return o.ApplyT(func(v VolumeContainerPropertiesResponse) int { return v.TotalCloudStorageUsageInBytes }).(pulumi.IntOutput)
}

// The number of volumes in the volume Container.
func (o VolumeContainerPropertiesResponseOutput) VolumeCount() pulumi.IntOutput {
	return o.ApplyT(func(v VolumeContainerPropertiesResponse) int { return v.VolumeCount }).(pulumi.IntOutput)
}

type VolumeContainerPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (VolumeContainerPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeContainerPropertiesResponse)(nil)).Elem()
}

func (o VolumeContainerPropertiesResponsePtrOutput) ToVolumeContainerPropertiesResponsePtrOutput() VolumeContainerPropertiesResponsePtrOutput {
	return o
}

func (o VolumeContainerPropertiesResponsePtrOutput) ToVolumeContainerPropertiesResponsePtrOutputWithContext(ctx context.Context) VolumeContainerPropertiesResponsePtrOutput {
	return o
}

func (o VolumeContainerPropertiesResponsePtrOutput) Elem() VolumeContainerPropertiesResponseOutput {
	return o.ApplyT(func(v *VolumeContainerPropertiesResponse) VolumeContainerPropertiesResponse { return *v }).(VolumeContainerPropertiesResponseOutput)
}

// The bandwidth-rate set on the volume container.
func (o VolumeContainerPropertiesResponsePtrOutput) BandWidthRateInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VolumeContainerPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.BandWidthRateInMbps
	}).(pulumi.IntPtrOutput)
}

// The ID of the bandwidth setting associated with the volume container.
func (o VolumeContainerPropertiesResponsePtrOutput) BandwidthSettingId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumeContainerPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.BandwidthSettingId
	}).(pulumi.StringPtrOutput)
}

// The key used to encrypt data in the volume container. It is required when property 'EncryptionStatus' is "Enabled".
func (o VolumeContainerPropertiesResponsePtrOutput) EncryptionKey() AsymmetricEncryptedSecretResponsePtrOutput {
	return o.ApplyT(func(v *VolumeContainerPropertiesResponse) *AsymmetricEncryptedSecretResponse {
		if v == nil {
			return nil
		}
		return v.EncryptionKey
	}).(AsymmetricEncryptedSecretResponsePtrOutput)
}

// The flag to denote whether encryption is enabled or not.
func (o VolumeContainerPropertiesResponsePtrOutput) EncryptionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumeContainerPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.EncryptionStatus
	}).(pulumi.StringPtrOutput)
}

// The owner ship status of the volume container. Only when the status is "NotOwned", the delete operation on the volume container is permitted.
func (o VolumeContainerPropertiesResponsePtrOutput) OwnerShipStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumeContainerPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.OwnerShipStatus
	}).(pulumi.StringPtrOutput)
}

// The path ID of storage account associated with the volume container.
func (o VolumeContainerPropertiesResponsePtrOutput) StorageAccountCredentialId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumeContainerPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StorageAccountCredentialId
	}).(pulumi.StringPtrOutput)
}

// The total cloud storage for the volume container.
func (o VolumeContainerPropertiesResponsePtrOutput) TotalCloudStorageUsageInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VolumeContainerPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.TotalCloudStorageUsageInBytes
	}).(pulumi.IntPtrOutput)
}

// The number of volumes in the volume Container.
func (o VolumeContainerPropertiesResponsePtrOutput) VolumeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VolumeContainerPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.VolumeCount
	}).(pulumi.IntPtrOutput)
}

// The properties of volume.
type VolumeProperties struct {
	// The IDs of the access control records, associated with the volume.
	AccessControlRecordIds []string `pulumi:"accessControlRecordIds"`
	// The monitoring status of the volume.
	MonitoringStatus string `pulumi:"monitoringStatus"`
	// The size of the volume in bytes.
	SizeInBytes int `pulumi:"sizeInBytes"`
	// The volume status.
	VolumeStatus string `pulumi:"volumeStatus"`
	// The type of the volume.
	VolumeType string `pulumi:"volumeType"`
}

// VolumePropertiesInput is an input type that accepts VolumePropertiesArgs and VolumePropertiesOutput values.
// You can construct a concrete instance of `VolumePropertiesInput` via:
//
//          VolumePropertiesArgs{...}
type VolumePropertiesInput interface {
	pulumi.Input

	ToVolumePropertiesOutput() VolumePropertiesOutput
	ToVolumePropertiesOutputWithContext(context.Context) VolumePropertiesOutput
}

// The properties of volume.
type VolumePropertiesArgs struct {
	// The IDs of the access control records, associated with the volume.
	AccessControlRecordIds pulumi.StringArrayInput `pulumi:"accessControlRecordIds"`
	// The monitoring status of the volume.
	MonitoringStatus pulumi.StringInput `pulumi:"monitoringStatus"`
	// The size of the volume in bytes.
	SizeInBytes pulumi.IntInput `pulumi:"sizeInBytes"`
	// The volume status.
	VolumeStatus pulumi.StringInput `pulumi:"volumeStatus"`
	// The type of the volume.
	VolumeType pulumi.StringInput `pulumi:"volumeType"`
}

func (VolumePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeProperties)(nil)).Elem()
}

func (i VolumePropertiesArgs) ToVolumePropertiesOutput() VolumePropertiesOutput {
	return i.ToVolumePropertiesOutputWithContext(context.Background())
}

func (i VolumePropertiesArgs) ToVolumePropertiesOutputWithContext(ctx context.Context) VolumePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumePropertiesOutput)
}

func (i VolumePropertiesArgs) ToVolumePropertiesPtrOutput() VolumePropertiesPtrOutput {
	return i.ToVolumePropertiesPtrOutputWithContext(context.Background())
}

func (i VolumePropertiesArgs) ToVolumePropertiesPtrOutputWithContext(ctx context.Context) VolumePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumePropertiesOutput).ToVolumePropertiesPtrOutputWithContext(ctx)
}

// VolumePropertiesPtrInput is an input type that accepts VolumePropertiesArgs, VolumePropertiesPtr and VolumePropertiesPtrOutput values.
// You can construct a concrete instance of `VolumePropertiesPtrInput` via:
//
//          VolumePropertiesArgs{...}
//
//  or:
//
//          nil
type VolumePropertiesPtrInput interface {
	pulumi.Input

	ToVolumePropertiesPtrOutput() VolumePropertiesPtrOutput
	ToVolumePropertiesPtrOutputWithContext(context.Context) VolumePropertiesPtrOutput
}

type volumePropertiesPtrType VolumePropertiesArgs

func VolumePropertiesPtr(v *VolumePropertiesArgs) VolumePropertiesPtrInput {
	return (*volumePropertiesPtrType)(v)
}

func (*volumePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeProperties)(nil)).Elem()
}

func (i *volumePropertiesPtrType) ToVolumePropertiesPtrOutput() VolumePropertiesPtrOutput {
	return i.ToVolumePropertiesPtrOutputWithContext(context.Background())
}

func (i *volumePropertiesPtrType) ToVolumePropertiesPtrOutputWithContext(ctx context.Context) VolumePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumePropertiesPtrOutput)
}

// The properties of volume.
type VolumePropertiesOutput struct{ *pulumi.OutputState }

func (VolumePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeProperties)(nil)).Elem()
}

func (o VolumePropertiesOutput) ToVolumePropertiesOutput() VolumePropertiesOutput {
	return o
}

func (o VolumePropertiesOutput) ToVolumePropertiesOutputWithContext(ctx context.Context) VolumePropertiesOutput {
	return o
}

func (o VolumePropertiesOutput) ToVolumePropertiesPtrOutput() VolumePropertiesPtrOutput {
	return o.ToVolumePropertiesPtrOutputWithContext(context.Background())
}

func (o VolumePropertiesOutput) ToVolumePropertiesPtrOutputWithContext(ctx context.Context) VolumePropertiesPtrOutput {
	return o.ApplyT(func(v VolumeProperties) *VolumeProperties {
		return &v
	}).(VolumePropertiesPtrOutput)
}

// The IDs of the access control records, associated with the volume.
func (o VolumePropertiesOutput) AccessControlRecordIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VolumeProperties) []string { return v.AccessControlRecordIds }).(pulumi.StringArrayOutput)
}

// The monitoring status of the volume.
func (o VolumePropertiesOutput) MonitoringStatus() pulumi.StringOutput {
	return o.ApplyT(func(v VolumeProperties) string { return v.MonitoringStatus }).(pulumi.StringOutput)
}

// The size of the volume in bytes.
func (o VolumePropertiesOutput) SizeInBytes() pulumi.IntOutput {
	return o.ApplyT(func(v VolumeProperties) int { return v.SizeInBytes }).(pulumi.IntOutput)
}

// The volume status.
func (o VolumePropertiesOutput) VolumeStatus() pulumi.StringOutput {
	return o.ApplyT(func(v VolumeProperties) string { return v.VolumeStatus }).(pulumi.StringOutput)
}

// The type of the volume.
func (o VolumePropertiesOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v VolumeProperties) string { return v.VolumeType }).(pulumi.StringOutput)
}

type VolumePropertiesPtrOutput struct{ *pulumi.OutputState }

func (VolumePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeProperties)(nil)).Elem()
}

func (o VolumePropertiesPtrOutput) ToVolumePropertiesPtrOutput() VolumePropertiesPtrOutput {
	return o
}

func (o VolumePropertiesPtrOutput) ToVolumePropertiesPtrOutputWithContext(ctx context.Context) VolumePropertiesPtrOutput {
	return o
}

func (o VolumePropertiesPtrOutput) Elem() VolumePropertiesOutput {
	return o.ApplyT(func(v *VolumeProperties) VolumeProperties { return *v }).(VolumePropertiesOutput)
}

// The IDs of the access control records, associated with the volume.
func (o VolumePropertiesPtrOutput) AccessControlRecordIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VolumeProperties) []string {
		if v == nil {
			return nil
		}
		return v.AccessControlRecordIds
	}).(pulumi.StringArrayOutput)
}

// The monitoring status of the volume.
func (o VolumePropertiesPtrOutput) MonitoringStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumeProperties) *string {
		if v == nil {
			return nil
		}
		return &v.MonitoringStatus
	}).(pulumi.StringPtrOutput)
}

// The size of the volume in bytes.
func (o VolumePropertiesPtrOutput) SizeInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VolumeProperties) *int {
		if v == nil {
			return nil
		}
		return &v.SizeInBytes
	}).(pulumi.IntPtrOutput)
}

// The volume status.
func (o VolumePropertiesPtrOutput) VolumeStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumeProperties) *string {
		if v == nil {
			return nil
		}
		return &v.VolumeStatus
	}).(pulumi.StringPtrOutput)
}

// The type of the volume.
func (o VolumePropertiesPtrOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumeProperties) *string {
		if v == nil {
			return nil
		}
		return &v.VolumeType
	}).(pulumi.StringPtrOutput)
}

// The properties of volume.
type VolumePropertiesResponse struct {
	// The IDs of the access control records, associated with the volume.
	AccessControlRecordIds []string `pulumi:"accessControlRecordIds"`
	// The IDs of the backup policies, in which this volume is part of.
	BackupPolicyIds []string `pulumi:"backupPolicyIds"`
	// The backup status of the volume.
	BackupStatus string `pulumi:"backupStatus"`
	// The monitoring status of the volume.
	MonitoringStatus string `pulumi:"monitoringStatus"`
	// The operation status on the volume.
	OperationStatus string `pulumi:"operationStatus"`
	// The size of the volume in bytes.
	SizeInBytes int `pulumi:"sizeInBytes"`
	// The ID of the volume container, in which this volume is created.
	VolumeContainerId string `pulumi:"volumeContainerId"`
	// The volume status.
	VolumeStatus string `pulumi:"volumeStatus"`
	// The type of the volume.
	VolumeType string `pulumi:"volumeType"`
}

// VolumePropertiesResponseInput is an input type that accepts VolumePropertiesResponseArgs and VolumePropertiesResponseOutput values.
// You can construct a concrete instance of `VolumePropertiesResponseInput` via:
//
//          VolumePropertiesResponseArgs{...}
type VolumePropertiesResponseInput interface {
	pulumi.Input

	ToVolumePropertiesResponseOutput() VolumePropertiesResponseOutput
	ToVolumePropertiesResponseOutputWithContext(context.Context) VolumePropertiesResponseOutput
}

// The properties of volume.
type VolumePropertiesResponseArgs struct {
	// The IDs of the access control records, associated with the volume.
	AccessControlRecordIds pulumi.StringArrayInput `pulumi:"accessControlRecordIds"`
	// The IDs of the backup policies, in which this volume is part of.
	BackupPolicyIds pulumi.StringArrayInput `pulumi:"backupPolicyIds"`
	// The backup status of the volume.
	BackupStatus pulumi.StringInput `pulumi:"backupStatus"`
	// The monitoring status of the volume.
	MonitoringStatus pulumi.StringInput `pulumi:"monitoringStatus"`
	// The operation status on the volume.
	OperationStatus pulumi.StringInput `pulumi:"operationStatus"`
	// The size of the volume in bytes.
	SizeInBytes pulumi.IntInput `pulumi:"sizeInBytes"`
	// The ID of the volume container, in which this volume is created.
	VolumeContainerId pulumi.StringInput `pulumi:"volumeContainerId"`
	// The volume status.
	VolumeStatus pulumi.StringInput `pulumi:"volumeStatus"`
	// The type of the volume.
	VolumeType pulumi.StringInput `pulumi:"volumeType"`
}

func (VolumePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumePropertiesResponse)(nil)).Elem()
}

func (i VolumePropertiesResponseArgs) ToVolumePropertiesResponseOutput() VolumePropertiesResponseOutput {
	return i.ToVolumePropertiesResponseOutputWithContext(context.Background())
}

func (i VolumePropertiesResponseArgs) ToVolumePropertiesResponseOutputWithContext(ctx context.Context) VolumePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumePropertiesResponseOutput)
}

func (i VolumePropertiesResponseArgs) ToVolumePropertiesResponsePtrOutput() VolumePropertiesResponsePtrOutput {
	return i.ToVolumePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i VolumePropertiesResponseArgs) ToVolumePropertiesResponsePtrOutputWithContext(ctx context.Context) VolumePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumePropertiesResponseOutput).ToVolumePropertiesResponsePtrOutputWithContext(ctx)
}

// VolumePropertiesResponsePtrInput is an input type that accepts VolumePropertiesResponseArgs, VolumePropertiesResponsePtr and VolumePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `VolumePropertiesResponsePtrInput` via:
//
//          VolumePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type VolumePropertiesResponsePtrInput interface {
	pulumi.Input

	ToVolumePropertiesResponsePtrOutput() VolumePropertiesResponsePtrOutput
	ToVolumePropertiesResponsePtrOutputWithContext(context.Context) VolumePropertiesResponsePtrOutput
}

type volumePropertiesResponsePtrType VolumePropertiesResponseArgs

func VolumePropertiesResponsePtr(v *VolumePropertiesResponseArgs) VolumePropertiesResponsePtrInput {
	return (*volumePropertiesResponsePtrType)(v)
}

func (*volumePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumePropertiesResponse)(nil)).Elem()
}

func (i *volumePropertiesResponsePtrType) ToVolumePropertiesResponsePtrOutput() VolumePropertiesResponsePtrOutput {
	return i.ToVolumePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *volumePropertiesResponsePtrType) ToVolumePropertiesResponsePtrOutputWithContext(ctx context.Context) VolumePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumePropertiesResponsePtrOutput)
}

// The properties of volume.
type VolumePropertiesResponseOutput struct{ *pulumi.OutputState }

func (VolumePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumePropertiesResponse)(nil)).Elem()
}

func (o VolumePropertiesResponseOutput) ToVolumePropertiesResponseOutput() VolumePropertiesResponseOutput {
	return o
}

func (o VolumePropertiesResponseOutput) ToVolumePropertiesResponseOutputWithContext(ctx context.Context) VolumePropertiesResponseOutput {
	return o
}

func (o VolumePropertiesResponseOutput) ToVolumePropertiesResponsePtrOutput() VolumePropertiesResponsePtrOutput {
	return o.ToVolumePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o VolumePropertiesResponseOutput) ToVolumePropertiesResponsePtrOutputWithContext(ctx context.Context) VolumePropertiesResponsePtrOutput {
	return o.ApplyT(func(v VolumePropertiesResponse) *VolumePropertiesResponse {
		return &v
	}).(VolumePropertiesResponsePtrOutput)
}

// The IDs of the access control records, associated with the volume.
func (o VolumePropertiesResponseOutput) AccessControlRecordIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VolumePropertiesResponse) []string { return v.AccessControlRecordIds }).(pulumi.StringArrayOutput)
}

// The IDs of the backup policies, in which this volume is part of.
func (o VolumePropertiesResponseOutput) BackupPolicyIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VolumePropertiesResponse) []string { return v.BackupPolicyIds }).(pulumi.StringArrayOutput)
}

// The backup status of the volume.
func (o VolumePropertiesResponseOutput) BackupStatus() pulumi.StringOutput {
	return o.ApplyT(func(v VolumePropertiesResponse) string { return v.BackupStatus }).(pulumi.StringOutput)
}

// The monitoring status of the volume.
func (o VolumePropertiesResponseOutput) MonitoringStatus() pulumi.StringOutput {
	return o.ApplyT(func(v VolumePropertiesResponse) string { return v.MonitoringStatus }).(pulumi.StringOutput)
}

// The operation status on the volume.
func (o VolumePropertiesResponseOutput) OperationStatus() pulumi.StringOutput {
	return o.ApplyT(func(v VolumePropertiesResponse) string { return v.OperationStatus }).(pulumi.StringOutput)
}

// The size of the volume in bytes.
func (o VolumePropertiesResponseOutput) SizeInBytes() pulumi.IntOutput {
	return o.ApplyT(func(v VolumePropertiesResponse) int { return v.SizeInBytes }).(pulumi.IntOutput)
}

// The ID of the volume container, in which this volume is created.
func (o VolumePropertiesResponseOutput) VolumeContainerId() pulumi.StringOutput {
	return o.ApplyT(func(v VolumePropertiesResponse) string { return v.VolumeContainerId }).(pulumi.StringOutput)
}

// The volume status.
func (o VolumePropertiesResponseOutput) VolumeStatus() pulumi.StringOutput {
	return o.ApplyT(func(v VolumePropertiesResponse) string { return v.VolumeStatus }).(pulumi.StringOutput)
}

// The type of the volume.
func (o VolumePropertiesResponseOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v VolumePropertiesResponse) string { return v.VolumeType }).(pulumi.StringOutput)
}

type VolumePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (VolumePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumePropertiesResponse)(nil)).Elem()
}

func (o VolumePropertiesResponsePtrOutput) ToVolumePropertiesResponsePtrOutput() VolumePropertiesResponsePtrOutput {
	return o
}

func (o VolumePropertiesResponsePtrOutput) ToVolumePropertiesResponsePtrOutputWithContext(ctx context.Context) VolumePropertiesResponsePtrOutput {
	return o
}

func (o VolumePropertiesResponsePtrOutput) Elem() VolumePropertiesResponseOutput {
	return o.ApplyT(func(v *VolumePropertiesResponse) VolumePropertiesResponse { return *v }).(VolumePropertiesResponseOutput)
}

// The IDs of the access control records, associated with the volume.
func (o VolumePropertiesResponsePtrOutput) AccessControlRecordIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VolumePropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.AccessControlRecordIds
	}).(pulumi.StringArrayOutput)
}

// The IDs of the backup policies, in which this volume is part of.
func (o VolumePropertiesResponsePtrOutput) BackupPolicyIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VolumePropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.BackupPolicyIds
	}).(pulumi.StringArrayOutput)
}

// The backup status of the volume.
func (o VolumePropertiesResponsePtrOutput) BackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.BackupStatus
	}).(pulumi.StringPtrOutput)
}

// The monitoring status of the volume.
func (o VolumePropertiesResponsePtrOutput) MonitoringStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MonitoringStatus
	}).(pulumi.StringPtrOutput)
}

// The operation status on the volume.
func (o VolumePropertiesResponsePtrOutput) OperationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.OperationStatus
	}).(pulumi.StringPtrOutput)
}

// The size of the volume in bytes.
func (o VolumePropertiesResponsePtrOutput) SizeInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VolumePropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.SizeInBytes
	}).(pulumi.IntPtrOutput)
}

// The ID of the volume container, in which this volume is created.
func (o VolumePropertiesResponsePtrOutput) VolumeContainerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.VolumeContainerId
	}).(pulumi.StringPtrOutput)
}

// The volume status.
func (o VolumePropertiesResponsePtrOutput) VolumeStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.VolumeStatus
	}).(pulumi.StringPtrOutput)
}

// The type of the volume.
func (o VolumePropertiesResponsePtrOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.VolumeType
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AccessControlRecordPropertiesOutput{})
	pulumi.RegisterOutputType(AccessControlRecordPropertiesPtrOutput{})
	pulumi.RegisterOutputType(AccessControlRecordPropertiesResponseOutput{})
	pulumi.RegisterOutputType(AccessControlRecordPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(AsymmetricEncryptedSecretOutput{})
	pulumi.RegisterOutputType(AsymmetricEncryptedSecretPtrOutput{})
	pulumi.RegisterOutputType(AsymmetricEncryptedSecretResponseOutput{})
	pulumi.RegisterOutputType(AsymmetricEncryptedSecretResponsePtrOutput{})
	pulumi.RegisterOutputType(BackupPolicyPropertiesOutput{})
	pulumi.RegisterOutputType(BackupPolicyPropertiesPtrOutput{})
	pulumi.RegisterOutputType(BackupPolicyPropertiesResponseOutput{})
	pulumi.RegisterOutputType(BackupPolicyPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(BackupScheduleGroupPropertiesOutput{})
	pulumi.RegisterOutputType(BackupScheduleGroupPropertiesPtrOutput{})
	pulumi.RegisterOutputType(BackupScheduleGroupPropertiesResponseOutput{})
	pulumi.RegisterOutputType(BackupScheduleGroupPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(BackupSchedulePropertiesOutput{})
	pulumi.RegisterOutputType(BackupSchedulePropertiesPtrOutput{})
	pulumi.RegisterOutputType(BackupSchedulePropertiesResponseOutput{})
	pulumi.RegisterOutputType(BackupSchedulePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(BandwidthRateSettingPropertiesOutput{})
	pulumi.RegisterOutputType(BandwidthRateSettingPropertiesPtrOutput{})
	pulumi.RegisterOutputType(BandwidthRateSettingPropertiesResponseOutput{})
	pulumi.RegisterOutputType(BandwidthRateSettingPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(BandwidthScheduleOutput{})
	pulumi.RegisterOutputType(BandwidthScheduleArrayOutput{})
	pulumi.RegisterOutputType(BandwidthScheduleResponseOutput{})
	pulumi.RegisterOutputType(BandwidthScheduleResponseArrayOutput{})
	pulumi.RegisterOutputType(ChapPropertiesOutput{})
	pulumi.RegisterOutputType(ChapPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ChapPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ChapPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(FileServerPropertiesOutput{})
	pulumi.RegisterOutputType(FileServerPropertiesPtrOutput{})
	pulumi.RegisterOutputType(FileServerPropertiesResponseOutput{})
	pulumi.RegisterOutputType(FileServerPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(FileSharePropertiesOutput{})
	pulumi.RegisterOutputType(FileSharePropertiesPtrOutput{})
	pulumi.RegisterOutputType(FileSharePropertiesResponseOutput{})
	pulumi.RegisterOutputType(FileSharePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ISCSIDiskPropertiesOutput{})
	pulumi.RegisterOutputType(ISCSIDiskPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ISCSIDiskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ISCSIDiskPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ISCSIServerPropertiesOutput{})
	pulumi.RegisterOutputType(ISCSIServerPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ISCSIServerPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ISCSIServerPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagerTypeOutput{})
	pulumi.RegisterOutputType(ManagerAccessControlRecordTypeOutput{})
	pulumi.RegisterOutputType(ManagerBandwidthSettingTypeOutput{})
	pulumi.RegisterOutputType(ManagerDeviceBackupPolicyTypeOutput{})
	pulumi.RegisterOutputType(ManagerDeviceBackupPolicyScheduleTypeOutput{})
	pulumi.RegisterOutputType(ManagerDeviceBackupScheduleGroupTypeOutput{})
	pulumi.RegisterOutputType(ManagerDeviceChapSettingTypeOutput{})
	pulumi.RegisterOutputType(ManagerDeviceFileserverTypeOutput{})
	pulumi.RegisterOutputType(ManagerDeviceFileserverShareTypeOutput{})
	pulumi.RegisterOutputType(ManagerDeviceIscsiserverTypeOutput{})
	pulumi.RegisterOutputType(ManagerDeviceIscsiserverDiskTypeOutput{})
	pulumi.RegisterOutputType(ManagerDeviceVolumeContainerTypeOutput{})
	pulumi.RegisterOutputType(ManagerDeviceVolumeContainerVolumeTypeOutput{})
	pulumi.RegisterOutputType(ManagerExtendedInfoPropertiesOutput{})
	pulumi.RegisterOutputType(ManagerExtendedInfoPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ManagerExtendedInfoPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ManagerExtendedInfoPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagerExtendedInformationTypeOutput{})
	pulumi.RegisterOutputType(ManagerIntrinsicSettingsOutput{})
	pulumi.RegisterOutputType(ManagerIntrinsicSettingsPtrOutput{})
	pulumi.RegisterOutputType(ManagerIntrinsicSettingsResponseOutput{})
	pulumi.RegisterOutputType(ManagerIntrinsicSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagerPropertiesOutput{})
	pulumi.RegisterOutputType(ManagerPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ManagerPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ManagerPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagerSkuOutput{})
	pulumi.RegisterOutputType(ManagerSkuPtrOutput{})
	pulumi.RegisterOutputType(ManagerSkuResponseOutput{})
	pulumi.RegisterOutputType(ManagerSkuResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagerStorageAccountCredentialTypeOutput{})
	pulumi.RegisterOutputType(ManagerStorageDomainTypeOutput{})
	pulumi.RegisterOutputType(ScheduleRecurrenceOutput{})
	pulumi.RegisterOutputType(ScheduleRecurrencePtrOutput{})
	pulumi.RegisterOutputType(ScheduleRecurrenceResponseOutput{})
	pulumi.RegisterOutputType(ScheduleRecurrenceResponsePtrOutput{})
	pulumi.RegisterOutputType(StorageAccountCredentialPropertiesOutput{})
	pulumi.RegisterOutputType(StorageAccountCredentialPropertiesPtrOutput{})
	pulumi.RegisterOutputType(StorageAccountCredentialPropertiesResponseOutput{})
	pulumi.RegisterOutputType(StorageAccountCredentialPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(StorageDomainPropertiesOutput{})
	pulumi.RegisterOutputType(StorageDomainPropertiesPtrOutput{})
	pulumi.RegisterOutputType(StorageDomainPropertiesResponseOutput{})
	pulumi.RegisterOutputType(StorageDomainPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(TimeOutput{})
	pulumi.RegisterOutputType(TimePtrOutput{})
	pulumi.RegisterOutputType(TimeResponseOutput{})
	pulumi.RegisterOutputType(TimeResponsePtrOutput{})
	pulumi.RegisterOutputType(VolumeContainerPropertiesOutput{})
	pulumi.RegisterOutputType(VolumeContainerPropertiesPtrOutput{})
	pulumi.RegisterOutputType(VolumeContainerPropertiesResponseOutput{})
	pulumi.RegisterOutputType(VolumeContainerPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(VolumePropertiesOutput{})
	pulumi.RegisterOutputType(VolumePropertiesPtrOutput{})
	pulumi.RegisterOutputType(VolumePropertiesResponseOutput{})
	pulumi.RegisterOutputType(VolumePropertiesResponsePtrOutput{})
}
