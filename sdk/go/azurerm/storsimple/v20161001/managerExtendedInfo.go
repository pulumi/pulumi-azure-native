// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20161001

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The extended info of the manager.
type ManagerExtendedInfo struct {
	pulumi.CustomResourceState

	// ETag of the Resource
	Etag pulumi.StringPtrOutput `pulumi:"etag"`
	// The name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The extended info properties.
	Properties ManagerExtendedInfoPropertiesResponseOutput `pulumi:"properties"`
	// The type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewManagerExtendedInfo registers a new resource with the given unique name, arguments, and options.
func NewManagerExtendedInfo(ctx *pulumi.Context,
	name string, args *ManagerExtendedInfoArgs, opts ...pulumi.ResourceOption) (*ManagerExtendedInfo, error) {
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.Properties == nil {
		return nil, errors.New("missing required argument 'Properties'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &ManagerExtendedInfoArgs{}
	}
	var resource ManagerExtendedInfo
	err := ctx.RegisterResource("azurerm:storsimple/v20161001:ManagerExtendedInfo", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetManagerExtendedInfo gets an existing ManagerExtendedInfo resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetManagerExtendedInfo(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ManagerExtendedInfoState, opts ...pulumi.ResourceOption) (*ManagerExtendedInfo, error) {
	var resource ManagerExtendedInfo
	err := ctx.ReadResource("azurerm:storsimple/v20161001:ManagerExtendedInfo", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ManagerExtendedInfo resources.
type managerExtendedInfoState struct {
	// ETag of the Resource
	Etag *string `pulumi:"etag"`
	// The name.
	Name *string `pulumi:"name"`
	// The extended info properties.
	Properties *ManagerExtendedInfoPropertiesResponse `pulumi:"properties"`
	// The type.
	Type *string `pulumi:"type"`
}

type ManagerExtendedInfoState struct {
	// ETag of the Resource
	Etag pulumi.StringPtrInput
	// The name.
	Name pulumi.StringPtrInput
	// The extended info properties.
	Properties ManagerExtendedInfoPropertiesResponsePtrInput
	// The type.
	Type pulumi.StringPtrInput
}

func (ManagerExtendedInfoState) ElementType() reflect.Type {
	return reflect.TypeOf((*managerExtendedInfoState)(nil)).Elem()
}

type managerExtendedInfoArgs struct {
	// ETag of the Resource
	Etag *string `pulumi:"etag"`
	// The manager name
	Name string `pulumi:"name"`
	// The extended info properties.
	Properties ManagerExtendedInfoProperties `pulumi:"properties"`
	// The resource group name
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a ManagerExtendedInfo resource.
type ManagerExtendedInfoArgs struct {
	// ETag of the Resource
	Etag pulumi.StringPtrInput
	// The manager name
	Name pulumi.StringInput
	// The extended info properties.
	Properties ManagerExtendedInfoPropertiesInput
	// The resource group name
	ResourceGroupName pulumi.StringInput
}

func (ManagerExtendedInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*managerExtendedInfoArgs)(nil)).Elem()
}
