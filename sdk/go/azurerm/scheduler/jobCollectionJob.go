// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package scheduler

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type JobCollectionJob struct {
	pulumi.CustomResourceState

	// Gets the job resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Gets or sets the job properties.
	Properties JobPropertiesResponseOutput `pulumi:"properties"`
	// Gets the job resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewJobCollectionJob registers a new resource with the given unique name, arguments, and options.
func NewJobCollectionJob(ctx *pulumi.Context,
	name string, args *JobCollectionJobArgs, opts ...pulumi.ResourceOption) (*JobCollectionJob, error) {
	if args == nil || args.JobCollectionName == nil {
		return nil, errors.New("missing required argument 'JobCollectionName'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &JobCollectionJobArgs{}
	}
	var resource JobCollectionJob
	err := ctx.RegisterResource("azurerm:scheduler:JobCollectionJob", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetJobCollectionJob gets an existing JobCollectionJob resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetJobCollectionJob(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *JobCollectionJobState, opts ...pulumi.ResourceOption) (*JobCollectionJob, error) {
	var resource JobCollectionJob
	err := ctx.ReadResource("azurerm:scheduler:JobCollectionJob", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering JobCollectionJob resources.
type jobCollectionJobState struct {
	// Gets the job resource name.
	Name *string `pulumi:"name"`
	// Gets or sets the job properties.
	Properties *JobPropertiesResponse `pulumi:"properties"`
	// Gets the job resource type.
	Type *string `pulumi:"type"`
}

type JobCollectionJobState struct {
	// Gets the job resource name.
	Name pulumi.StringPtrInput
	// Gets or sets the job properties.
	Properties JobPropertiesResponsePtrInput
	// Gets the job resource type.
	Type pulumi.StringPtrInput
}

func (JobCollectionJobState) ElementType() reflect.Type {
	return reflect.TypeOf((*jobCollectionJobState)(nil)).Elem()
}

type jobCollectionJobArgs struct {
	// The job collection name.
	JobCollectionName string `pulumi:"jobCollectionName"`
	// The job name.
	Name string `pulumi:"name"`
	// Gets or sets the job properties.
	Properties *JobProperties `pulumi:"properties"`
	// The resource group name.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a JobCollectionJob resource.
type JobCollectionJobArgs struct {
	// The job collection name.
	JobCollectionName pulumi.StringInput
	// The job name.
	Name pulumi.StringInput
	// Gets or sets the job properties.
	Properties JobPropertiesPtrInput
	// The resource group name.
	ResourceGroupName pulumi.StringInput
}

func (JobCollectionJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*jobCollectionJobArgs)(nil)).Elem()
}
