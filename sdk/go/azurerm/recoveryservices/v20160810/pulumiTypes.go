// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20160810

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// A2A enable protection input.
type A2AEnableProtectionInput struct {
	// The fabric specific object Id of the virtual machine.
	FabricObjectId *string `pulumi:"fabricObjectId"`
	// The class type.
	InstanceType *string `pulumi:"instanceType"`
	// The recovery availability set Id.
	RecoveryAvailabilitySetId *string `pulumi:"recoveryAvailabilitySetId"`
	// The recovery cloud service Id. Valid for V1 scenarios.
	RecoveryCloudServiceId *string `pulumi:"recoveryCloudServiceId"`
	// The recovery container Id.
	RecoveryContainerId *string `pulumi:"recoveryContainerId"`
	// The recovery resource group Id. Valid for V2 scenarios.
	RecoveryResourceGroupId *string `pulumi:"recoveryResourceGroupId"`
	// The list of vm disk details.
	VmDisks []A2AVmDiskInputDetails `pulumi:"vmDisks"`
	// The list of vm managed disk details.
	VmManagedDisks []A2AVmManagedDiskInputDetails `pulumi:"vmManagedDisks"`
}

// A2AEnableProtectionInputInput is an input type that accepts A2AEnableProtectionInputArgs and A2AEnableProtectionInputOutput values.
// You can construct a concrete instance of `A2AEnableProtectionInputInput` via:
//
//          A2AEnableProtectionInputArgs{...}
type A2AEnableProtectionInputInput interface {
	pulumi.Input

	ToA2AEnableProtectionInputOutput() A2AEnableProtectionInputOutput
	ToA2AEnableProtectionInputOutputWithContext(context.Context) A2AEnableProtectionInputOutput
}

// A2A enable protection input.
type A2AEnableProtectionInputArgs struct {
	// The fabric specific object Id of the virtual machine.
	FabricObjectId pulumi.StringPtrInput `pulumi:"fabricObjectId"`
	// The class type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// The recovery availability set Id.
	RecoveryAvailabilitySetId pulumi.StringPtrInput `pulumi:"recoveryAvailabilitySetId"`
	// The recovery cloud service Id. Valid for V1 scenarios.
	RecoveryCloudServiceId pulumi.StringPtrInput `pulumi:"recoveryCloudServiceId"`
	// The recovery container Id.
	RecoveryContainerId pulumi.StringPtrInput `pulumi:"recoveryContainerId"`
	// The recovery resource group Id. Valid for V2 scenarios.
	RecoveryResourceGroupId pulumi.StringPtrInput `pulumi:"recoveryResourceGroupId"`
	// The list of vm disk details.
	VmDisks A2AVmDiskInputDetailsArrayInput `pulumi:"vmDisks"`
	// The list of vm managed disk details.
	VmManagedDisks A2AVmManagedDiskInputDetailsArrayInput `pulumi:"vmManagedDisks"`
}

func (A2AEnableProtectionInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*A2AEnableProtectionInput)(nil)).Elem()
}

func (i A2AEnableProtectionInputArgs) ToA2AEnableProtectionInputOutput() A2AEnableProtectionInputOutput {
	return i.ToA2AEnableProtectionInputOutputWithContext(context.Background())
}

func (i A2AEnableProtectionInputArgs) ToA2AEnableProtectionInputOutputWithContext(ctx context.Context) A2AEnableProtectionInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(A2AEnableProtectionInputOutput)
}

// A2A Policy creation input.
type A2APolicyCreationInput struct {
	// The app consistent snapshot frequency (in minutes).
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// The crash consistent snapshot frequency (in minutes).
	CrashConsistentFrequencyInMinutes *int `pulumi:"crashConsistentFrequencyInMinutes"`
	// The class type.
	InstanceType *string `pulumi:"instanceType"`
	// A value indicating whether multi-VM sync has to be enabled. Value should be 'Enabled' or 'Disabled'.
	MultiVmSyncStatus string `pulumi:"multiVmSyncStatus"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistory *int `pulumi:"recoveryPointHistory"`
}

// A2APolicyCreationInputInput is an input type that accepts A2APolicyCreationInputArgs and A2APolicyCreationInputOutput values.
// You can construct a concrete instance of `A2APolicyCreationInputInput` via:
//
//          A2APolicyCreationInputArgs{...}
type A2APolicyCreationInputInput interface {
	pulumi.Input

	ToA2APolicyCreationInputOutput() A2APolicyCreationInputOutput
	ToA2APolicyCreationInputOutputWithContext(context.Context) A2APolicyCreationInputOutput
}

// A2A Policy creation input.
type A2APolicyCreationInputArgs struct {
	// The app consistent snapshot frequency (in minutes).
	AppConsistentFrequencyInMinutes pulumi.IntPtrInput `pulumi:"appConsistentFrequencyInMinutes"`
	// The crash consistent snapshot frequency (in minutes).
	CrashConsistentFrequencyInMinutes pulumi.IntPtrInput `pulumi:"crashConsistentFrequencyInMinutes"`
	// The class type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// A value indicating whether multi-VM sync has to be enabled. Value should be 'Enabled' or 'Disabled'.
	MultiVmSyncStatus pulumi.StringInput `pulumi:"multiVmSyncStatus"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistory pulumi.IntPtrInput `pulumi:"recoveryPointHistory"`
}

func (A2APolicyCreationInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*A2APolicyCreationInput)(nil)).Elem()
}

func (i A2APolicyCreationInputArgs) ToA2APolicyCreationInputOutput() A2APolicyCreationInputOutput {
	return i.ToA2APolicyCreationInputOutputWithContext(context.Background())
}

func (i A2APolicyCreationInputArgs) ToA2APolicyCreationInputOutputWithContext(ctx context.Context) A2APolicyCreationInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(A2APolicyCreationInputOutput)
}

// A2A specific policy details.
type A2APolicyDetailsResponse struct {
	// The app consistent snapshot frequency in minutes.
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// The crash consistent snapshot frequency in minutes.
	CrashConsistentFrequencyInMinutes *int `pulumi:"crashConsistentFrequencyInMinutes"`
	// Gets the class type. Overridden in derived classes.
	InstanceType string `pulumi:"instanceType"`
	// A value indicating whether multi-VM sync has to be enabled.
	MultiVmSyncStatus *string `pulumi:"multiVmSyncStatus"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistory *int `pulumi:"recoveryPointHistory"`
	// The recovery point threshold in minutes.
	RecoveryPointThresholdInMinutes *int `pulumi:"recoveryPointThresholdInMinutes"`
}

// A2A specific policy details.
type A2APolicyDetailsResponseOutput struct{ *pulumi.OutputState }

func (A2APolicyDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*A2APolicyDetailsResponse)(nil)).Elem()
}

func (o A2APolicyDetailsResponseOutput) ToA2APolicyDetailsResponseOutput() A2APolicyDetailsResponseOutput {
	return o
}

func (o A2APolicyDetailsResponseOutput) ToA2APolicyDetailsResponseOutputWithContext(ctx context.Context) A2APolicyDetailsResponseOutput {
	return o
}

// The app consistent snapshot frequency in minutes.
func (o A2APolicyDetailsResponseOutput) AppConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v A2APolicyDetailsResponse) *int { return v.AppConsistentFrequencyInMinutes }).(pulumi.IntPtrOutput)
}

// The crash consistent snapshot frequency in minutes.
func (o A2APolicyDetailsResponseOutput) CrashConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v A2APolicyDetailsResponse) *int { return v.CrashConsistentFrequencyInMinutes }).(pulumi.IntPtrOutput)
}

// Gets the class type. Overridden in derived classes.
func (o A2APolicyDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v A2APolicyDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// A value indicating whether multi-VM sync has to be enabled.
func (o A2APolicyDetailsResponseOutput) MultiVmSyncStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2APolicyDetailsResponse) *string { return v.MultiVmSyncStatus }).(pulumi.StringPtrOutput)
}

// The duration in minutes until which the recovery points need to be stored.
func (o A2APolicyDetailsResponseOutput) RecoveryPointHistory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v A2APolicyDetailsResponse) *int { return v.RecoveryPointHistory }).(pulumi.IntPtrOutput)
}

// The recovery point threshold in minutes.
func (o A2APolicyDetailsResponseOutput) RecoveryPointThresholdInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v A2APolicyDetailsResponse) *int { return v.RecoveryPointThresholdInMinutes }).(pulumi.IntPtrOutput)
}

// A2A protected disk details.
type A2AProtectedDiskDetailsResponse struct {
	// The data pending at source virtual machine in MB.
	DataPendingAtSourceAgentInMB *float64 `pulumi:"dataPendingAtSourceAgentInMB"`
	// The data pending for replication in MB at staging account.
	DataPendingInStagingStorageAccountInMB *float64 `pulumi:"dataPendingInStagingStorageAccountInMB"`
	// The disk capacity in bytes.
	DiskCapacityInBytes *int `pulumi:"diskCapacityInBytes"`
	// The disk name.
	DiskName *string `pulumi:"diskName"`
	// The type of disk.
	DiskType *string `pulumi:"diskType"`
	// The disk uri.
	DiskUri *string `pulumi:"diskUri"`
	// The type of the monitoring job. The progress is contained in MonitoringPercentageCompletion property.
	MonitoringJobType *string `pulumi:"monitoringJobType"`
	// The percentage of the monitoring job. The type of the monitoring job is defined by MonitoringJobType property.
	MonitoringPercentageCompletion *int `pulumi:"monitoringPercentageCompletion"`
	// The primary disk storage account.
	PrimaryDiskAzureStorageAccountId *string `pulumi:"primaryDiskAzureStorageAccountId"`
	// The primary staging storage account.
	PrimaryStagingAzureStorageAccountId *string `pulumi:"primaryStagingAzureStorageAccountId"`
	// The recovery disk storage account.
	RecoveryAzureStorageAccountId *string `pulumi:"recoveryAzureStorageAccountId"`
	// Recovery disk uri.
	RecoveryDiskUri *string `pulumi:"recoveryDiskUri"`
	// A value indicating whether resync is required for this disk.
	ResyncRequired *bool `pulumi:"resyncRequired"`
}

// A2A protected disk details.
type A2AProtectedDiskDetailsResponseOutput struct{ *pulumi.OutputState }

func (A2AProtectedDiskDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*A2AProtectedDiskDetailsResponse)(nil)).Elem()
}

func (o A2AProtectedDiskDetailsResponseOutput) ToA2AProtectedDiskDetailsResponseOutput() A2AProtectedDiskDetailsResponseOutput {
	return o
}

func (o A2AProtectedDiskDetailsResponseOutput) ToA2AProtectedDiskDetailsResponseOutputWithContext(ctx context.Context) A2AProtectedDiskDetailsResponseOutput {
	return o
}

// The data pending at source virtual machine in MB.
func (o A2AProtectedDiskDetailsResponseOutput) DataPendingAtSourceAgentInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *float64 { return v.DataPendingAtSourceAgentInMB }).(pulumi.Float64PtrOutput)
}

// The data pending for replication in MB at staging account.
func (o A2AProtectedDiskDetailsResponseOutput) DataPendingInStagingStorageAccountInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *float64 { return v.DataPendingInStagingStorageAccountInMB }).(pulumi.Float64PtrOutput)
}

// The disk capacity in bytes.
func (o A2AProtectedDiskDetailsResponseOutput) DiskCapacityInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *int { return v.DiskCapacityInBytes }).(pulumi.IntPtrOutput)
}

// The disk name.
func (o A2AProtectedDiskDetailsResponseOutput) DiskName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *string { return v.DiskName }).(pulumi.StringPtrOutput)
}

// The type of disk.
func (o A2AProtectedDiskDetailsResponseOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

// The disk uri.
func (o A2AProtectedDiskDetailsResponseOutput) DiskUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *string { return v.DiskUri }).(pulumi.StringPtrOutput)
}

// The type of the monitoring job. The progress is contained in MonitoringPercentageCompletion property.
func (o A2AProtectedDiskDetailsResponseOutput) MonitoringJobType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *string { return v.MonitoringJobType }).(pulumi.StringPtrOutput)
}

// The percentage of the monitoring job. The type of the monitoring job is defined by MonitoringJobType property.
func (o A2AProtectedDiskDetailsResponseOutput) MonitoringPercentageCompletion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *int { return v.MonitoringPercentageCompletion }).(pulumi.IntPtrOutput)
}

// The primary disk storage account.
func (o A2AProtectedDiskDetailsResponseOutput) PrimaryDiskAzureStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *string { return v.PrimaryDiskAzureStorageAccountId }).(pulumi.StringPtrOutput)
}

// The primary staging storage account.
func (o A2AProtectedDiskDetailsResponseOutput) PrimaryStagingAzureStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *string { return v.PrimaryStagingAzureStorageAccountId }).(pulumi.StringPtrOutput)
}

// The recovery disk storage account.
func (o A2AProtectedDiskDetailsResponseOutput) RecoveryAzureStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *string { return v.RecoveryAzureStorageAccountId }).(pulumi.StringPtrOutput)
}

// Recovery disk uri.
func (o A2AProtectedDiskDetailsResponseOutput) RecoveryDiskUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *string { return v.RecoveryDiskUri }).(pulumi.StringPtrOutput)
}

// A value indicating whether resync is required for this disk.
func (o A2AProtectedDiskDetailsResponseOutput) ResyncRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *bool { return v.ResyncRequired }).(pulumi.BoolPtrOutput)
}

type A2AProtectedDiskDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (A2AProtectedDiskDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]A2AProtectedDiskDetailsResponse)(nil)).Elem()
}

func (o A2AProtectedDiskDetailsResponseArrayOutput) ToA2AProtectedDiskDetailsResponseArrayOutput() A2AProtectedDiskDetailsResponseArrayOutput {
	return o
}

func (o A2AProtectedDiskDetailsResponseArrayOutput) ToA2AProtectedDiskDetailsResponseArrayOutputWithContext(ctx context.Context) A2AProtectedDiskDetailsResponseArrayOutput {
	return o
}

func (o A2AProtectedDiskDetailsResponseArrayOutput) Index(i pulumi.IntInput) A2AProtectedDiskDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) A2AProtectedDiskDetailsResponse {
		return vs[0].([]A2AProtectedDiskDetailsResponse)[vs[1].(int)]
	}).(A2AProtectedDiskDetailsResponseOutput)
}

// A2A protected managed disk details.
type A2AProtectedManagedDiskDetailsResponse struct {
	// The data pending at source virtual machine in MB.
	DataPendingAtSourceAgentInMB *float64 `pulumi:"dataPendingAtSourceAgentInMB"`
	// The data pending for replication in MB at staging account.
	DataPendingInStagingStorageAccountInMB *float64 `pulumi:"dataPendingInStagingStorageAccountInMB"`
	// The disk capacity in bytes.
	DiskCapacityInBytes *int `pulumi:"diskCapacityInBytes"`
	// The managed disk Arm id.
	DiskId *string `pulumi:"diskId"`
	// The disk name.
	DiskName *string `pulumi:"diskName"`
	// The type of disk.
	DiskType *string `pulumi:"diskType"`
	// The type of the monitoring job. The progress is contained in MonitoringPercentageCompletion property.
	MonitoringJobType *string `pulumi:"monitoringJobType"`
	// The percentage of the monitoring job. The type of the monitoring job is defined by MonitoringJobType property.
	MonitoringPercentageCompletion *int `pulumi:"monitoringPercentageCompletion"`
	// The primary staging storage account.
	PrimaryStagingAzureStorageAccountId *string `pulumi:"primaryStagingAzureStorageAccountId"`
	// The recovery disk resource group Arm Id.
	RecoveryAzureResourceGroupId *string `pulumi:"recoveryAzureResourceGroupId"`
	// Recovery disk Arm Id.
	RecoveryDiskId *string `pulumi:"recoveryDiskId"`
	// A value indicating whether resync is required for this disk.
	ResyncRequired *bool `pulumi:"resyncRequired"`
}

// A2A protected managed disk details.
type A2AProtectedManagedDiskDetailsResponseOutput struct{ *pulumi.OutputState }

func (A2AProtectedManagedDiskDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*A2AProtectedManagedDiskDetailsResponse)(nil)).Elem()
}

func (o A2AProtectedManagedDiskDetailsResponseOutput) ToA2AProtectedManagedDiskDetailsResponseOutput() A2AProtectedManagedDiskDetailsResponseOutput {
	return o
}

func (o A2AProtectedManagedDiskDetailsResponseOutput) ToA2AProtectedManagedDiskDetailsResponseOutputWithContext(ctx context.Context) A2AProtectedManagedDiskDetailsResponseOutput {
	return o
}

// The data pending at source virtual machine in MB.
func (o A2AProtectedManagedDiskDetailsResponseOutput) DataPendingAtSourceAgentInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *float64 { return v.DataPendingAtSourceAgentInMB }).(pulumi.Float64PtrOutput)
}

// The data pending for replication in MB at staging account.
func (o A2AProtectedManagedDiskDetailsResponseOutput) DataPendingInStagingStorageAccountInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *float64 {
		return v.DataPendingInStagingStorageAccountInMB
	}).(pulumi.Float64PtrOutput)
}

// The disk capacity in bytes.
func (o A2AProtectedManagedDiskDetailsResponseOutput) DiskCapacityInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *int { return v.DiskCapacityInBytes }).(pulumi.IntPtrOutput)
}

// The managed disk Arm id.
func (o A2AProtectedManagedDiskDetailsResponseOutput) DiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *string { return v.DiskId }).(pulumi.StringPtrOutput)
}

// The disk name.
func (o A2AProtectedManagedDiskDetailsResponseOutput) DiskName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *string { return v.DiskName }).(pulumi.StringPtrOutput)
}

// The type of disk.
func (o A2AProtectedManagedDiskDetailsResponseOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

// The type of the monitoring job. The progress is contained in MonitoringPercentageCompletion property.
func (o A2AProtectedManagedDiskDetailsResponseOutput) MonitoringJobType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *string { return v.MonitoringJobType }).(pulumi.StringPtrOutput)
}

// The percentage of the monitoring job. The type of the monitoring job is defined by MonitoringJobType property.
func (o A2AProtectedManagedDiskDetailsResponseOutput) MonitoringPercentageCompletion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *int { return v.MonitoringPercentageCompletion }).(pulumi.IntPtrOutput)
}

// The primary staging storage account.
func (o A2AProtectedManagedDiskDetailsResponseOutput) PrimaryStagingAzureStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *string { return v.PrimaryStagingAzureStorageAccountId }).(pulumi.StringPtrOutput)
}

// The recovery disk resource group Arm Id.
func (o A2AProtectedManagedDiskDetailsResponseOutput) RecoveryAzureResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *string { return v.RecoveryAzureResourceGroupId }).(pulumi.StringPtrOutput)
}

// Recovery disk Arm Id.
func (o A2AProtectedManagedDiskDetailsResponseOutput) RecoveryDiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *string { return v.RecoveryDiskId }).(pulumi.StringPtrOutput)
}

// A value indicating whether resync is required for this disk.
func (o A2AProtectedManagedDiskDetailsResponseOutput) ResyncRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *bool { return v.ResyncRequired }).(pulumi.BoolPtrOutput)
}

type A2AProtectedManagedDiskDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (A2AProtectedManagedDiskDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]A2AProtectedManagedDiskDetailsResponse)(nil)).Elem()
}

func (o A2AProtectedManagedDiskDetailsResponseArrayOutput) ToA2AProtectedManagedDiskDetailsResponseArrayOutput() A2AProtectedManagedDiskDetailsResponseArrayOutput {
	return o
}

func (o A2AProtectedManagedDiskDetailsResponseArrayOutput) ToA2AProtectedManagedDiskDetailsResponseArrayOutputWithContext(ctx context.Context) A2AProtectedManagedDiskDetailsResponseArrayOutput {
	return o
}

func (o A2AProtectedManagedDiskDetailsResponseArrayOutput) Index(i pulumi.IntInput) A2AProtectedManagedDiskDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) A2AProtectedManagedDiskDetailsResponse {
		return vs[0].([]A2AProtectedManagedDiskDetailsResponse)[vs[1].(int)]
	}).(A2AProtectedManagedDiskDetailsResponseOutput)
}

// A2A provider specific settings.
type A2AReplicationDetailsResponse struct {
	// The agent version.
	AgentVersion *string `pulumi:"agentVersion"`
	// The fabric specific object Id of the virtual machine.
	FabricObjectId *string `pulumi:"fabricObjectId"`
	// Gets the Instance type.
	InstanceType string `pulumi:"instanceType"`
	// A value indicating whether replication agent update is required.
	IsReplicationAgentUpdateRequired *bool `pulumi:"isReplicationAgentUpdateRequired"`
	// The last heartbeat received from the source server.
	LastHeartbeat *string `pulumi:"lastHeartbeat"`
	// The time (in UTC) when the last RPO value was calculated by Protection Service.
	LastRpoCalculatedTime *string `pulumi:"lastRpoCalculatedTime"`
	// An id associated with the PE that survives actions like switch protection which change the backing PE/CPE objects internally.The lifecycle id gets carried forward to have a link/continuity in being able to have an Id that denotes the "same" protected item even though other internal Ids/ARM Id might be changing.
	LifecycleId *string `pulumi:"lifecycleId"`
	// The management Id.
	ManagementId *string `pulumi:"managementId"`
	// The type of the monitoring job. The progress is contained in MonitoringPercentageCompletion property.
	MonitoringJobType *string `pulumi:"monitoringJobType"`
	// The percentage of the monitoring job. The type of the monitoring job is defined by MonitoringJobType property.
	MonitoringPercentageCompletion *int `pulumi:"monitoringPercentageCompletion"`
	// The multi vm group Id.
	MultiVmGroupId *string `pulumi:"multiVmGroupId"`
	// The multi vm group name.
	MultiVmGroupName *string `pulumi:"multiVmGroupName"`
	// The type of operating system.
	OsType *string `pulumi:"osType"`
	// Primary fabric location.
	PrimaryFabricLocation *string `pulumi:"primaryFabricLocation"`
	// The list of protected disks.
	ProtectedDisks []A2AProtectedDiskDetailsResponse `pulumi:"protectedDisks"`
	// The list of protected managed disks.
	ProtectedManagedDisks []A2AProtectedManagedDiskDetailsResponse `pulumi:"protectedManagedDisks"`
	// The recovery availability set.
	RecoveryAvailabilitySet *string `pulumi:"recoveryAvailabilitySet"`
	// The recovery resource group.
	RecoveryAzureResourceGroupId *string `pulumi:"recoveryAzureResourceGroupId"`
	// The name of recovery virtual machine.
	RecoveryAzureVMName *string `pulumi:"recoveryAzureVMName"`
	// The size of recovery virtual machine.
	RecoveryAzureVMSize *string `pulumi:"recoveryAzureVMSize"`
	// The recovery cloud service.
	RecoveryCloudService *string `pulumi:"recoveryCloudService"`
	// The recovery fabric location.
	RecoveryFabricLocation *string `pulumi:"recoveryFabricLocation"`
	// The recovery fabric object Id.
	RecoveryFabricObjectId *string `pulumi:"recoveryFabricObjectId"`
	// The last RPO value in seconds.
	RpoInSeconds *int `pulumi:"rpoInSeconds"`
	// The recovery virtual network.
	SelectedRecoveryAzureNetworkId *string `pulumi:"selectedRecoveryAzureNetworkId"`
	// The test failover fabric object Id.
	TestFailoverRecoveryFabricObjectId *string `pulumi:"testFailoverRecoveryFabricObjectId"`
	// The virtual machine nic details.
	VmNics []VMNicDetailsResponse `pulumi:"vmNics"`
	// The protection state for the vm.
	VmProtectionState *string `pulumi:"vmProtectionState"`
	// The protection state description for the vm.
	VmProtectionStateDescription *string `pulumi:"vmProtectionStateDescription"`
	// The synced configuration details.
	VmSyncedConfigDetails *AzureToAzureVmSyncedConfigDetailsResponse `pulumi:"vmSyncedConfigDetails"`
}

// A2A provider specific settings.
type A2AReplicationDetailsResponseOutput struct{ *pulumi.OutputState }

func (A2AReplicationDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*A2AReplicationDetailsResponse)(nil)).Elem()
}

func (o A2AReplicationDetailsResponseOutput) ToA2AReplicationDetailsResponseOutput() A2AReplicationDetailsResponseOutput {
	return o
}

func (o A2AReplicationDetailsResponseOutput) ToA2AReplicationDetailsResponseOutputWithContext(ctx context.Context) A2AReplicationDetailsResponseOutput {
	return o
}

// The agent version.
func (o A2AReplicationDetailsResponseOutput) AgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.AgentVersion }).(pulumi.StringPtrOutput)
}

// The fabric specific object Id of the virtual machine.
func (o A2AReplicationDetailsResponseOutput) FabricObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.FabricObjectId }).(pulumi.StringPtrOutput)
}

// Gets the Instance type.
func (o A2AReplicationDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// A value indicating whether replication agent update is required.
func (o A2AReplicationDetailsResponseOutput) IsReplicationAgentUpdateRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *bool { return v.IsReplicationAgentUpdateRequired }).(pulumi.BoolPtrOutput)
}

// The last heartbeat received from the source server.
func (o A2AReplicationDetailsResponseOutput) LastHeartbeat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.LastHeartbeat }).(pulumi.StringPtrOutput)
}

// The time (in UTC) when the last RPO value was calculated by Protection Service.
func (o A2AReplicationDetailsResponseOutput) LastRpoCalculatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.LastRpoCalculatedTime }).(pulumi.StringPtrOutput)
}

// An id associated with the PE that survives actions like switch protection which change the backing PE/CPE objects internally.The lifecycle id gets carried forward to have a link/continuity in being able to have an Id that denotes the "same" protected item even though other internal Ids/ARM Id might be changing.
func (o A2AReplicationDetailsResponseOutput) LifecycleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.LifecycleId }).(pulumi.StringPtrOutput)
}

// The management Id.
func (o A2AReplicationDetailsResponseOutput) ManagementId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.ManagementId }).(pulumi.StringPtrOutput)
}

// The type of the monitoring job. The progress is contained in MonitoringPercentageCompletion property.
func (o A2AReplicationDetailsResponseOutput) MonitoringJobType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.MonitoringJobType }).(pulumi.StringPtrOutput)
}

// The percentage of the monitoring job. The type of the monitoring job is defined by MonitoringJobType property.
func (o A2AReplicationDetailsResponseOutput) MonitoringPercentageCompletion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *int { return v.MonitoringPercentageCompletion }).(pulumi.IntPtrOutput)
}

// The multi vm group Id.
func (o A2AReplicationDetailsResponseOutput) MultiVmGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.MultiVmGroupId }).(pulumi.StringPtrOutput)
}

// The multi vm group name.
func (o A2AReplicationDetailsResponseOutput) MultiVmGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.MultiVmGroupName }).(pulumi.StringPtrOutput)
}

// The type of operating system.
func (o A2AReplicationDetailsResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// Primary fabric location.
func (o A2AReplicationDetailsResponseOutput) PrimaryFabricLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.PrimaryFabricLocation }).(pulumi.StringPtrOutput)
}

// The list of protected disks.
func (o A2AReplicationDetailsResponseOutput) ProtectedDisks() A2AProtectedDiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) []A2AProtectedDiskDetailsResponse { return v.ProtectedDisks }).(A2AProtectedDiskDetailsResponseArrayOutput)
}

// The list of protected managed disks.
func (o A2AReplicationDetailsResponseOutput) ProtectedManagedDisks() A2AProtectedManagedDiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) []A2AProtectedManagedDiskDetailsResponse {
		return v.ProtectedManagedDisks
	}).(A2AProtectedManagedDiskDetailsResponseArrayOutput)
}

// The recovery availability set.
func (o A2AReplicationDetailsResponseOutput) RecoveryAvailabilitySet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.RecoveryAvailabilitySet }).(pulumi.StringPtrOutput)
}

// The recovery resource group.
func (o A2AReplicationDetailsResponseOutput) RecoveryAzureResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.RecoveryAzureResourceGroupId }).(pulumi.StringPtrOutput)
}

// The name of recovery virtual machine.
func (o A2AReplicationDetailsResponseOutput) RecoveryAzureVMName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.RecoveryAzureVMName }).(pulumi.StringPtrOutput)
}

// The size of recovery virtual machine.
func (o A2AReplicationDetailsResponseOutput) RecoveryAzureVMSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.RecoveryAzureVMSize }).(pulumi.StringPtrOutput)
}

// The recovery cloud service.
func (o A2AReplicationDetailsResponseOutput) RecoveryCloudService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.RecoveryCloudService }).(pulumi.StringPtrOutput)
}

// The recovery fabric location.
func (o A2AReplicationDetailsResponseOutput) RecoveryFabricLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.RecoveryFabricLocation }).(pulumi.StringPtrOutput)
}

// The recovery fabric object Id.
func (o A2AReplicationDetailsResponseOutput) RecoveryFabricObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.RecoveryFabricObjectId }).(pulumi.StringPtrOutput)
}

// The last RPO value in seconds.
func (o A2AReplicationDetailsResponseOutput) RpoInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *int { return v.RpoInSeconds }).(pulumi.IntPtrOutput)
}

// The recovery virtual network.
func (o A2AReplicationDetailsResponseOutput) SelectedRecoveryAzureNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.SelectedRecoveryAzureNetworkId }).(pulumi.StringPtrOutput)
}

// The test failover fabric object Id.
func (o A2AReplicationDetailsResponseOutput) TestFailoverRecoveryFabricObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.TestFailoverRecoveryFabricObjectId }).(pulumi.StringPtrOutput)
}

// The virtual machine nic details.
func (o A2AReplicationDetailsResponseOutput) VmNics() VMNicDetailsResponseArrayOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) []VMNicDetailsResponse { return v.VmNics }).(VMNicDetailsResponseArrayOutput)
}

// The protection state for the vm.
func (o A2AReplicationDetailsResponseOutput) VmProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.VmProtectionState }).(pulumi.StringPtrOutput)
}

// The protection state description for the vm.
func (o A2AReplicationDetailsResponseOutput) VmProtectionStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.VmProtectionStateDescription }).(pulumi.StringPtrOutput)
}

// The synced configuration details.
func (o A2AReplicationDetailsResponseOutput) VmSyncedConfigDetails() AzureToAzureVmSyncedConfigDetailsResponsePtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *AzureToAzureVmSyncedConfigDetailsResponse {
		return v.VmSyncedConfigDetails
	}).(AzureToAzureVmSyncedConfigDetailsResponsePtrOutput)
}

// Azure VM disk input details.
type A2AVmDiskInputDetails struct {
	// The disk Uri.
	DiskUri *string `pulumi:"diskUri"`
	// The primary staging storage account Id.
	PrimaryStagingAzureStorageAccountId *string `pulumi:"primaryStagingAzureStorageAccountId"`
	// The recovery VHD storage account Id.
	RecoveryAzureStorageAccountId *string `pulumi:"recoveryAzureStorageAccountId"`
}

// A2AVmDiskInputDetailsInput is an input type that accepts A2AVmDiskInputDetailsArgs and A2AVmDiskInputDetailsOutput values.
// You can construct a concrete instance of `A2AVmDiskInputDetailsInput` via:
//
//          A2AVmDiskInputDetailsArgs{...}
type A2AVmDiskInputDetailsInput interface {
	pulumi.Input

	ToA2AVmDiskInputDetailsOutput() A2AVmDiskInputDetailsOutput
	ToA2AVmDiskInputDetailsOutputWithContext(context.Context) A2AVmDiskInputDetailsOutput
}

// Azure VM disk input details.
type A2AVmDiskInputDetailsArgs struct {
	// The disk Uri.
	DiskUri pulumi.StringPtrInput `pulumi:"diskUri"`
	// The primary staging storage account Id.
	PrimaryStagingAzureStorageAccountId pulumi.StringPtrInput `pulumi:"primaryStagingAzureStorageAccountId"`
	// The recovery VHD storage account Id.
	RecoveryAzureStorageAccountId pulumi.StringPtrInput `pulumi:"recoveryAzureStorageAccountId"`
}

func (A2AVmDiskInputDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*A2AVmDiskInputDetails)(nil)).Elem()
}

func (i A2AVmDiskInputDetailsArgs) ToA2AVmDiskInputDetailsOutput() A2AVmDiskInputDetailsOutput {
	return i.ToA2AVmDiskInputDetailsOutputWithContext(context.Background())
}

func (i A2AVmDiskInputDetailsArgs) ToA2AVmDiskInputDetailsOutputWithContext(ctx context.Context) A2AVmDiskInputDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(A2AVmDiskInputDetailsOutput)
}

// A2AVmDiskInputDetailsArrayInput is an input type that accepts A2AVmDiskInputDetailsArray and A2AVmDiskInputDetailsArrayOutput values.
// You can construct a concrete instance of `A2AVmDiskInputDetailsArrayInput` via:
//
//          A2AVmDiskInputDetailsArray{ A2AVmDiskInputDetailsArgs{...} }
type A2AVmDiskInputDetailsArrayInput interface {
	pulumi.Input

	ToA2AVmDiskInputDetailsArrayOutput() A2AVmDiskInputDetailsArrayOutput
	ToA2AVmDiskInputDetailsArrayOutputWithContext(context.Context) A2AVmDiskInputDetailsArrayOutput
}

type A2AVmDiskInputDetailsArray []A2AVmDiskInputDetailsInput

func (A2AVmDiskInputDetailsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]A2AVmDiskInputDetails)(nil)).Elem()
}

func (i A2AVmDiskInputDetailsArray) ToA2AVmDiskInputDetailsArrayOutput() A2AVmDiskInputDetailsArrayOutput {
	return i.ToA2AVmDiskInputDetailsArrayOutputWithContext(context.Background())
}

func (i A2AVmDiskInputDetailsArray) ToA2AVmDiskInputDetailsArrayOutputWithContext(ctx context.Context) A2AVmDiskInputDetailsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(A2AVmDiskInputDetailsArrayOutput)
}

// Azure VM managed disk input details.
type A2AVmManagedDiskInputDetails struct {
	// The disk Id.
	DiskId *string `pulumi:"diskId"`
	// The primary staging storage account Arm Id.
	PrimaryStagingAzureStorageAccountId *string `pulumi:"primaryStagingAzureStorageAccountId"`
	// The target resource group Arm Id.
	RecoveryResourceGroupId *string `pulumi:"recoveryResourceGroupId"`
}

// A2AVmManagedDiskInputDetailsInput is an input type that accepts A2AVmManagedDiskInputDetailsArgs and A2AVmManagedDiskInputDetailsOutput values.
// You can construct a concrete instance of `A2AVmManagedDiskInputDetailsInput` via:
//
//          A2AVmManagedDiskInputDetailsArgs{...}
type A2AVmManagedDiskInputDetailsInput interface {
	pulumi.Input

	ToA2AVmManagedDiskInputDetailsOutput() A2AVmManagedDiskInputDetailsOutput
	ToA2AVmManagedDiskInputDetailsOutputWithContext(context.Context) A2AVmManagedDiskInputDetailsOutput
}

// Azure VM managed disk input details.
type A2AVmManagedDiskInputDetailsArgs struct {
	// The disk Id.
	DiskId pulumi.StringPtrInput `pulumi:"diskId"`
	// The primary staging storage account Arm Id.
	PrimaryStagingAzureStorageAccountId pulumi.StringPtrInput `pulumi:"primaryStagingAzureStorageAccountId"`
	// The target resource group Arm Id.
	RecoveryResourceGroupId pulumi.StringPtrInput `pulumi:"recoveryResourceGroupId"`
}

func (A2AVmManagedDiskInputDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*A2AVmManagedDiskInputDetails)(nil)).Elem()
}

func (i A2AVmManagedDiskInputDetailsArgs) ToA2AVmManagedDiskInputDetailsOutput() A2AVmManagedDiskInputDetailsOutput {
	return i.ToA2AVmManagedDiskInputDetailsOutputWithContext(context.Background())
}

func (i A2AVmManagedDiskInputDetailsArgs) ToA2AVmManagedDiskInputDetailsOutputWithContext(ctx context.Context) A2AVmManagedDiskInputDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(A2AVmManagedDiskInputDetailsOutput)
}

// A2AVmManagedDiskInputDetailsArrayInput is an input type that accepts A2AVmManagedDiskInputDetailsArray and A2AVmManagedDiskInputDetailsArrayOutput values.
// You can construct a concrete instance of `A2AVmManagedDiskInputDetailsArrayInput` via:
//
//          A2AVmManagedDiskInputDetailsArray{ A2AVmManagedDiskInputDetailsArgs{...} }
type A2AVmManagedDiskInputDetailsArrayInput interface {
	pulumi.Input

	ToA2AVmManagedDiskInputDetailsArrayOutput() A2AVmManagedDiskInputDetailsArrayOutput
	ToA2AVmManagedDiskInputDetailsArrayOutputWithContext(context.Context) A2AVmManagedDiskInputDetailsArrayOutput
}

type A2AVmManagedDiskInputDetailsArray []A2AVmManagedDiskInputDetailsInput

func (A2AVmManagedDiskInputDetailsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]A2AVmManagedDiskInputDetails)(nil)).Elem()
}

func (i A2AVmManagedDiskInputDetailsArray) ToA2AVmManagedDiskInputDetailsArrayOutput() A2AVmManagedDiskInputDetailsArrayOutput {
	return i.ToA2AVmManagedDiskInputDetailsArrayOutputWithContext(context.Background())
}

func (i A2AVmManagedDiskInputDetailsArray) ToA2AVmManagedDiskInputDetailsArrayOutputWithContext(ctx context.Context) A2AVmManagedDiskInputDetailsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(A2AVmManagedDiskInputDetailsArrayOutput)
}

// The properties of an add vCenter request.
type AddVCenterRequestProperties struct {
	// The friendly name of the vCenter.
	FriendlyName *string `pulumi:"friendlyName"`
	// The IP address of the vCenter to be discovered.
	IpAddress *string `pulumi:"ipAddress"`
	// The port number for discovery.
	Port *string `pulumi:"port"`
	// The process server Id from where the discovery is orchestrated.
	ProcessServerId *string `pulumi:"processServerId"`
	// The account Id which has privileges to discover the vCenter.
	RunAsAccountId *string `pulumi:"runAsAccountId"`
}

// AddVCenterRequestPropertiesInput is an input type that accepts AddVCenterRequestPropertiesArgs and AddVCenterRequestPropertiesOutput values.
// You can construct a concrete instance of `AddVCenterRequestPropertiesInput` via:
//
//          AddVCenterRequestPropertiesArgs{...}
type AddVCenterRequestPropertiesInput interface {
	pulumi.Input

	ToAddVCenterRequestPropertiesOutput() AddVCenterRequestPropertiesOutput
	ToAddVCenterRequestPropertiesOutputWithContext(context.Context) AddVCenterRequestPropertiesOutput
}

// The properties of an add vCenter request.
type AddVCenterRequestPropertiesArgs struct {
	// The friendly name of the vCenter.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// The IP address of the vCenter to be discovered.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// The port number for discovery.
	Port pulumi.StringPtrInput `pulumi:"port"`
	// The process server Id from where the discovery is orchestrated.
	ProcessServerId pulumi.StringPtrInput `pulumi:"processServerId"`
	// The account Id which has privileges to discover the vCenter.
	RunAsAccountId pulumi.StringPtrInput `pulumi:"runAsAccountId"`
}

func (AddVCenterRequestPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddVCenterRequestProperties)(nil)).Elem()
}

func (i AddVCenterRequestPropertiesArgs) ToAddVCenterRequestPropertiesOutput() AddVCenterRequestPropertiesOutput {
	return i.ToAddVCenterRequestPropertiesOutputWithContext(context.Background())
}

func (i AddVCenterRequestPropertiesArgs) ToAddVCenterRequestPropertiesOutputWithContext(ctx context.Context) AddVCenterRequestPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddVCenterRequestPropertiesOutput)
}

func (i AddVCenterRequestPropertiesArgs) ToAddVCenterRequestPropertiesPtrOutput() AddVCenterRequestPropertiesPtrOutput {
	return i.ToAddVCenterRequestPropertiesPtrOutputWithContext(context.Background())
}

func (i AddVCenterRequestPropertiesArgs) ToAddVCenterRequestPropertiesPtrOutputWithContext(ctx context.Context) AddVCenterRequestPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddVCenterRequestPropertiesOutput).ToAddVCenterRequestPropertiesPtrOutputWithContext(ctx)
}

// AddVCenterRequestPropertiesPtrInput is an input type that accepts AddVCenterRequestPropertiesArgs, AddVCenterRequestPropertiesPtr and AddVCenterRequestPropertiesPtrOutput values.
// You can construct a concrete instance of `AddVCenterRequestPropertiesPtrInput` via:
//
//          AddVCenterRequestPropertiesArgs{...}
//
//  or:
//
//          nil
type AddVCenterRequestPropertiesPtrInput interface {
	pulumi.Input

	ToAddVCenterRequestPropertiesPtrOutput() AddVCenterRequestPropertiesPtrOutput
	ToAddVCenterRequestPropertiesPtrOutputWithContext(context.Context) AddVCenterRequestPropertiesPtrOutput
}

type addVCenterRequestPropertiesPtrType AddVCenterRequestPropertiesArgs

func AddVCenterRequestPropertiesPtr(v *AddVCenterRequestPropertiesArgs) AddVCenterRequestPropertiesPtrInput {
	return (*addVCenterRequestPropertiesPtrType)(v)
}

func (*addVCenterRequestPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddVCenterRequestProperties)(nil)).Elem()
}

func (i *addVCenterRequestPropertiesPtrType) ToAddVCenterRequestPropertiesPtrOutput() AddVCenterRequestPropertiesPtrOutput {
	return i.ToAddVCenterRequestPropertiesPtrOutputWithContext(context.Background())
}

func (i *addVCenterRequestPropertiesPtrType) ToAddVCenterRequestPropertiesPtrOutputWithContext(ctx context.Context) AddVCenterRequestPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddVCenterRequestPropertiesPtrOutput)
}

// Azure Fabric Specific Details.
type AzureFabricSpecificDetailsResponse struct {
	// The container Ids for the Azure fabric.
	ContainerIds []string `pulumi:"containerIds"`
	// Gets the class type. Overridden in derived classes.
	InstanceType string `pulumi:"instanceType"`
	// The Location for the Azure fabric.
	Location *string `pulumi:"location"`
}

// Azure Fabric Specific Details.
type AzureFabricSpecificDetailsResponseOutput struct{ *pulumi.OutputState }

func (AzureFabricSpecificDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFabricSpecificDetailsResponse)(nil)).Elem()
}

func (o AzureFabricSpecificDetailsResponseOutput) ToAzureFabricSpecificDetailsResponseOutput() AzureFabricSpecificDetailsResponseOutput {
	return o
}

func (o AzureFabricSpecificDetailsResponseOutput) ToAzureFabricSpecificDetailsResponseOutputWithContext(ctx context.Context) AzureFabricSpecificDetailsResponseOutput {
	return o
}

// The container Ids for the Azure fabric.
func (o AzureFabricSpecificDetailsResponseOutput) ContainerIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFabricSpecificDetailsResponse) []string { return v.ContainerIds }).(pulumi.StringArrayOutput)
}

// Gets the class type. Overridden in derived classes.
func (o AzureFabricSpecificDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFabricSpecificDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The Location for the Azure fabric.
func (o AzureFabricSpecificDetailsResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFabricSpecificDetailsResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Create network mappings input properties/behavior specific to Azure to Azure Network mapping.
type AzureToAzureCreateNetworkMappingInput struct {
	// The instance type.
	InstanceType *string `pulumi:"instanceType"`
	// The primary azure vnet Id.
	PrimaryNetworkId *string `pulumi:"primaryNetworkId"`
}

// AzureToAzureCreateNetworkMappingInputInput is an input type that accepts AzureToAzureCreateNetworkMappingInputArgs and AzureToAzureCreateNetworkMappingInputOutput values.
// You can construct a concrete instance of `AzureToAzureCreateNetworkMappingInputInput` via:
//
//          AzureToAzureCreateNetworkMappingInputArgs{...}
type AzureToAzureCreateNetworkMappingInputInput interface {
	pulumi.Input

	ToAzureToAzureCreateNetworkMappingInputOutput() AzureToAzureCreateNetworkMappingInputOutput
	ToAzureToAzureCreateNetworkMappingInputOutputWithContext(context.Context) AzureToAzureCreateNetworkMappingInputOutput
}

// Create network mappings input properties/behavior specific to Azure to Azure Network mapping.
type AzureToAzureCreateNetworkMappingInputArgs struct {
	// The instance type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// The primary azure vnet Id.
	PrimaryNetworkId pulumi.StringPtrInput `pulumi:"primaryNetworkId"`
}

func (AzureToAzureCreateNetworkMappingInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureToAzureCreateNetworkMappingInput)(nil)).Elem()
}

func (i AzureToAzureCreateNetworkMappingInputArgs) ToAzureToAzureCreateNetworkMappingInputOutput() AzureToAzureCreateNetworkMappingInputOutput {
	return i.ToAzureToAzureCreateNetworkMappingInputOutputWithContext(context.Background())
}

func (i AzureToAzureCreateNetworkMappingInputArgs) ToAzureToAzureCreateNetworkMappingInputOutputWithContext(ctx context.Context) AzureToAzureCreateNetworkMappingInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureToAzureCreateNetworkMappingInputOutput)
}

// A2A Network Mapping fabric specific settings.
type AzureToAzureNetworkMappingSettingsResponse struct {
	// Gets the Instance type.
	InstanceType string `pulumi:"instanceType"`
	// The primary fabric location.
	PrimaryFabricLocation *string `pulumi:"primaryFabricLocation"`
	// The recovery fabric location.
	RecoveryFabricLocation *string `pulumi:"recoveryFabricLocation"`
}

// A2A Network Mapping fabric specific settings.
type AzureToAzureNetworkMappingSettingsResponseOutput struct{ *pulumi.OutputState }

func (AzureToAzureNetworkMappingSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureToAzureNetworkMappingSettingsResponse)(nil)).Elem()
}

func (o AzureToAzureNetworkMappingSettingsResponseOutput) ToAzureToAzureNetworkMappingSettingsResponseOutput() AzureToAzureNetworkMappingSettingsResponseOutput {
	return o
}

func (o AzureToAzureNetworkMappingSettingsResponseOutput) ToAzureToAzureNetworkMappingSettingsResponseOutputWithContext(ctx context.Context) AzureToAzureNetworkMappingSettingsResponseOutput {
	return o
}

// Gets the Instance type.
func (o AzureToAzureNetworkMappingSettingsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureToAzureNetworkMappingSettingsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The primary fabric location.
func (o AzureToAzureNetworkMappingSettingsResponseOutput) PrimaryFabricLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureToAzureNetworkMappingSettingsResponse) *string { return v.PrimaryFabricLocation }).(pulumi.StringPtrOutput)
}

// The recovery fabric location.
func (o AzureToAzureNetworkMappingSettingsResponseOutput) RecoveryFabricLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureToAzureNetworkMappingSettingsResponse) *string { return v.RecoveryFabricLocation }).(pulumi.StringPtrOutput)
}

// Azure to Azure VM synced configuration details.
type AzureToAzureVmSyncedConfigDetailsResponse struct {
	// The Azure VM input endpoints.
	InputEndpoints []InputEndpointResponse `pulumi:"inputEndpoints"`
	// The Azure role assignments.
	RoleAssignments []RoleAssignmentResponse `pulumi:"roleAssignments"`
	// The Azure VM tags.
	Tags map[string]string `pulumi:"tags"`
}

// Azure to Azure VM synced configuration details.
type AzureToAzureVmSyncedConfigDetailsResponseOutput struct{ *pulumi.OutputState }

func (AzureToAzureVmSyncedConfigDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureToAzureVmSyncedConfigDetailsResponse)(nil)).Elem()
}

func (o AzureToAzureVmSyncedConfigDetailsResponseOutput) ToAzureToAzureVmSyncedConfigDetailsResponseOutput() AzureToAzureVmSyncedConfigDetailsResponseOutput {
	return o
}

func (o AzureToAzureVmSyncedConfigDetailsResponseOutput) ToAzureToAzureVmSyncedConfigDetailsResponseOutputWithContext(ctx context.Context) AzureToAzureVmSyncedConfigDetailsResponseOutput {
	return o
}

func (o AzureToAzureVmSyncedConfigDetailsResponseOutput) ToAzureToAzureVmSyncedConfigDetailsResponsePtrOutput() AzureToAzureVmSyncedConfigDetailsResponsePtrOutput {
	return o.ToAzureToAzureVmSyncedConfigDetailsResponsePtrOutputWithContext(context.Background())
}

func (o AzureToAzureVmSyncedConfigDetailsResponseOutput) ToAzureToAzureVmSyncedConfigDetailsResponsePtrOutputWithContext(ctx context.Context) AzureToAzureVmSyncedConfigDetailsResponsePtrOutput {
	return o.ApplyT(func(v AzureToAzureVmSyncedConfigDetailsResponse) *AzureToAzureVmSyncedConfigDetailsResponse {
		return &v
	}).(AzureToAzureVmSyncedConfigDetailsResponsePtrOutput)
}

// The Azure VM input endpoints.
func (o AzureToAzureVmSyncedConfigDetailsResponseOutput) InputEndpoints() InputEndpointResponseArrayOutput {
	return o.ApplyT(func(v AzureToAzureVmSyncedConfigDetailsResponse) []InputEndpointResponse { return v.InputEndpoints }).(InputEndpointResponseArrayOutput)
}

// The Azure role assignments.
func (o AzureToAzureVmSyncedConfigDetailsResponseOutput) RoleAssignments() RoleAssignmentResponseArrayOutput {
	return o.ApplyT(func(v AzureToAzureVmSyncedConfigDetailsResponse) []RoleAssignmentResponse { return v.RoleAssignments }).(RoleAssignmentResponseArrayOutput)
}

// The Azure VM tags.
func (o AzureToAzureVmSyncedConfigDetailsResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v AzureToAzureVmSyncedConfigDetailsResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type AzureToAzureVmSyncedConfigDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureToAzureVmSyncedConfigDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureToAzureVmSyncedConfigDetailsResponse)(nil)).Elem()
}

func (o AzureToAzureVmSyncedConfigDetailsResponsePtrOutput) ToAzureToAzureVmSyncedConfigDetailsResponsePtrOutput() AzureToAzureVmSyncedConfigDetailsResponsePtrOutput {
	return o
}

func (o AzureToAzureVmSyncedConfigDetailsResponsePtrOutput) ToAzureToAzureVmSyncedConfigDetailsResponsePtrOutputWithContext(ctx context.Context) AzureToAzureVmSyncedConfigDetailsResponsePtrOutput {
	return o
}

func (o AzureToAzureVmSyncedConfigDetailsResponsePtrOutput) Elem() AzureToAzureVmSyncedConfigDetailsResponseOutput {
	return o.ApplyT(func(v *AzureToAzureVmSyncedConfigDetailsResponse) AzureToAzureVmSyncedConfigDetailsResponse {
		return *v
	}).(AzureToAzureVmSyncedConfigDetailsResponseOutput)
}

// The Azure VM input endpoints.
func (o AzureToAzureVmSyncedConfigDetailsResponsePtrOutput) InputEndpoints() InputEndpointResponseArrayOutput {
	return o.ApplyT(func(v *AzureToAzureVmSyncedConfigDetailsResponse) []InputEndpointResponse {
		if v == nil {
			return nil
		}
		return v.InputEndpoints
	}).(InputEndpointResponseArrayOutput)
}

// The Azure role assignments.
func (o AzureToAzureVmSyncedConfigDetailsResponsePtrOutput) RoleAssignments() RoleAssignmentResponseArrayOutput {
	return o.ApplyT(func(v *AzureToAzureVmSyncedConfigDetailsResponse) []RoleAssignmentResponse {
		if v == nil {
			return nil
		}
		return v.RoleAssignments
	}).(RoleAssignmentResponseArrayOutput)
}

// The Azure VM tags.
func (o AzureToAzureVmSyncedConfigDetailsResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AzureToAzureVmSyncedConfigDetailsResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Disk details for E2A provider.
type AzureVmDiskDetailsResponse struct {
	// Ordinal\LunId of the disk for the Azure VM.
	LunId *string `pulumi:"lunId"`
	// Max side in MB.
	MaxSizeMB *string `pulumi:"maxSizeMB"`
	// Blob uri of the Azure disk.
	TargetDiskLocation *string `pulumi:"targetDiskLocation"`
	// The target Azure disk name.
	TargetDiskName *string `pulumi:"targetDiskName"`
	// The VHD id.
	VhdId *string `pulumi:"vhdId"`
	// VHD name.
	VhdName *string `pulumi:"vhdName"`
	// VHD type.
	VhdType *string `pulumi:"vhdType"`
}

// Disk details for E2A provider.
type AzureVmDiskDetailsResponseOutput struct{ *pulumi.OutputState }

func (AzureVmDiskDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmDiskDetailsResponse)(nil)).Elem()
}

func (o AzureVmDiskDetailsResponseOutput) ToAzureVmDiskDetailsResponseOutput() AzureVmDiskDetailsResponseOutput {
	return o
}

func (o AzureVmDiskDetailsResponseOutput) ToAzureVmDiskDetailsResponseOutputWithContext(ctx context.Context) AzureVmDiskDetailsResponseOutput {
	return o
}

// Ordinal\LunId of the disk for the Azure VM.
func (o AzureVmDiskDetailsResponseOutput) LunId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmDiskDetailsResponse) *string { return v.LunId }).(pulumi.StringPtrOutput)
}

// Max side in MB.
func (o AzureVmDiskDetailsResponseOutput) MaxSizeMB() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmDiskDetailsResponse) *string { return v.MaxSizeMB }).(pulumi.StringPtrOutput)
}

// Blob uri of the Azure disk.
func (o AzureVmDiskDetailsResponseOutput) TargetDiskLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmDiskDetailsResponse) *string { return v.TargetDiskLocation }).(pulumi.StringPtrOutput)
}

// The target Azure disk name.
func (o AzureVmDiskDetailsResponseOutput) TargetDiskName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmDiskDetailsResponse) *string { return v.TargetDiskName }).(pulumi.StringPtrOutput)
}

// The VHD id.
func (o AzureVmDiskDetailsResponseOutput) VhdId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmDiskDetailsResponse) *string { return v.VhdId }).(pulumi.StringPtrOutput)
}

// VHD name.
func (o AzureVmDiskDetailsResponseOutput) VhdName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmDiskDetailsResponse) *string { return v.VhdName }).(pulumi.StringPtrOutput)
}

// VHD type.
func (o AzureVmDiskDetailsResponseOutput) VhdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmDiskDetailsResponse) *string { return v.VhdType }).(pulumi.StringPtrOutput)
}

type AzureVmDiskDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureVmDiskDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureVmDiskDetailsResponse)(nil)).Elem()
}

func (o AzureVmDiskDetailsResponseArrayOutput) ToAzureVmDiskDetailsResponseArrayOutput() AzureVmDiskDetailsResponseArrayOutput {
	return o
}

func (o AzureVmDiskDetailsResponseArrayOutput) ToAzureVmDiskDetailsResponseArrayOutputWithContext(ctx context.Context) AzureVmDiskDetailsResponseArrayOutput {
	return o
}

func (o AzureVmDiskDetailsResponseArrayOutput) Index(i pulumi.IntInput) AzureVmDiskDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureVmDiskDetailsResponse {
		return vs[0].([]AzureVmDiskDetailsResponse)[vs[1].(int)]
	}).(AzureVmDiskDetailsResponseOutput)
}

// Common input details for network mapping operation.
type CreateNetworkMappingInputProperties struct {
	// Fabric specific input properties.
	FabricSpecificDetails interface{} `pulumi:"fabricSpecificDetails"`
	// Recovery fabric Name.
	RecoveryFabricName *string `pulumi:"recoveryFabricName"`
	// Recovery network Id.
	RecoveryNetworkId *string `pulumi:"recoveryNetworkId"`
}

// CreateNetworkMappingInputPropertiesInput is an input type that accepts CreateNetworkMappingInputPropertiesArgs and CreateNetworkMappingInputPropertiesOutput values.
// You can construct a concrete instance of `CreateNetworkMappingInputPropertiesInput` via:
//
//          CreateNetworkMappingInputPropertiesArgs{...}
type CreateNetworkMappingInputPropertiesInput interface {
	pulumi.Input

	ToCreateNetworkMappingInputPropertiesOutput() CreateNetworkMappingInputPropertiesOutput
	ToCreateNetworkMappingInputPropertiesOutputWithContext(context.Context) CreateNetworkMappingInputPropertiesOutput
}

// Common input details for network mapping operation.
type CreateNetworkMappingInputPropertiesArgs struct {
	// Fabric specific input properties.
	FabricSpecificDetails pulumi.Input `pulumi:"fabricSpecificDetails"`
	// Recovery fabric Name.
	RecoveryFabricName pulumi.StringPtrInput `pulumi:"recoveryFabricName"`
	// Recovery network Id.
	RecoveryNetworkId pulumi.StringPtrInput `pulumi:"recoveryNetworkId"`
}

func (CreateNetworkMappingInputPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CreateNetworkMappingInputProperties)(nil)).Elem()
}

func (i CreateNetworkMappingInputPropertiesArgs) ToCreateNetworkMappingInputPropertiesOutput() CreateNetworkMappingInputPropertiesOutput {
	return i.ToCreateNetworkMappingInputPropertiesOutputWithContext(context.Background())
}

func (i CreateNetworkMappingInputPropertiesArgs) ToCreateNetworkMappingInputPropertiesOutputWithContext(ctx context.Context) CreateNetworkMappingInputPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateNetworkMappingInputPropertiesOutput)
}

func (i CreateNetworkMappingInputPropertiesArgs) ToCreateNetworkMappingInputPropertiesPtrOutput() CreateNetworkMappingInputPropertiesPtrOutput {
	return i.ToCreateNetworkMappingInputPropertiesPtrOutputWithContext(context.Background())
}

func (i CreateNetworkMappingInputPropertiesArgs) ToCreateNetworkMappingInputPropertiesPtrOutputWithContext(ctx context.Context) CreateNetworkMappingInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateNetworkMappingInputPropertiesOutput).ToCreateNetworkMappingInputPropertiesPtrOutputWithContext(ctx)
}

// CreateNetworkMappingInputPropertiesPtrInput is an input type that accepts CreateNetworkMappingInputPropertiesArgs, CreateNetworkMappingInputPropertiesPtr and CreateNetworkMappingInputPropertiesPtrOutput values.
// You can construct a concrete instance of `CreateNetworkMappingInputPropertiesPtrInput` via:
//
//          CreateNetworkMappingInputPropertiesArgs{...}
//
//  or:
//
//          nil
type CreateNetworkMappingInputPropertiesPtrInput interface {
	pulumi.Input

	ToCreateNetworkMappingInputPropertiesPtrOutput() CreateNetworkMappingInputPropertiesPtrOutput
	ToCreateNetworkMappingInputPropertiesPtrOutputWithContext(context.Context) CreateNetworkMappingInputPropertiesPtrOutput
}

type createNetworkMappingInputPropertiesPtrType CreateNetworkMappingInputPropertiesArgs

func CreateNetworkMappingInputPropertiesPtr(v *CreateNetworkMappingInputPropertiesArgs) CreateNetworkMappingInputPropertiesPtrInput {
	return (*createNetworkMappingInputPropertiesPtrType)(v)
}

func (*createNetworkMappingInputPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CreateNetworkMappingInputProperties)(nil)).Elem()
}

func (i *createNetworkMappingInputPropertiesPtrType) ToCreateNetworkMappingInputPropertiesPtrOutput() CreateNetworkMappingInputPropertiesPtrOutput {
	return i.ToCreateNetworkMappingInputPropertiesPtrOutputWithContext(context.Background())
}

func (i *createNetworkMappingInputPropertiesPtrType) ToCreateNetworkMappingInputPropertiesPtrOutputWithContext(ctx context.Context) CreateNetworkMappingInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateNetworkMappingInputPropertiesPtrOutput)
}

// Policy creation properties.
type CreatePolicyInputProperties struct {
	// The ReplicationProviderSettings.
	ProviderSpecificInput interface{} `pulumi:"providerSpecificInput"`
}

// CreatePolicyInputPropertiesInput is an input type that accepts CreatePolicyInputPropertiesArgs and CreatePolicyInputPropertiesOutput values.
// You can construct a concrete instance of `CreatePolicyInputPropertiesInput` via:
//
//          CreatePolicyInputPropertiesArgs{...}
type CreatePolicyInputPropertiesInput interface {
	pulumi.Input

	ToCreatePolicyInputPropertiesOutput() CreatePolicyInputPropertiesOutput
	ToCreatePolicyInputPropertiesOutputWithContext(context.Context) CreatePolicyInputPropertiesOutput
}

// Policy creation properties.
type CreatePolicyInputPropertiesArgs struct {
	// The ReplicationProviderSettings.
	ProviderSpecificInput pulumi.Input `pulumi:"providerSpecificInput"`
}

func (CreatePolicyInputPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CreatePolicyInputProperties)(nil)).Elem()
}

func (i CreatePolicyInputPropertiesArgs) ToCreatePolicyInputPropertiesOutput() CreatePolicyInputPropertiesOutput {
	return i.ToCreatePolicyInputPropertiesOutputWithContext(context.Background())
}

func (i CreatePolicyInputPropertiesArgs) ToCreatePolicyInputPropertiesOutputWithContext(ctx context.Context) CreatePolicyInputPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreatePolicyInputPropertiesOutput)
}

func (i CreatePolicyInputPropertiesArgs) ToCreatePolicyInputPropertiesPtrOutput() CreatePolicyInputPropertiesPtrOutput {
	return i.ToCreatePolicyInputPropertiesPtrOutputWithContext(context.Background())
}

func (i CreatePolicyInputPropertiesArgs) ToCreatePolicyInputPropertiesPtrOutputWithContext(ctx context.Context) CreatePolicyInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreatePolicyInputPropertiesOutput).ToCreatePolicyInputPropertiesPtrOutputWithContext(ctx)
}

// CreatePolicyInputPropertiesPtrInput is an input type that accepts CreatePolicyInputPropertiesArgs, CreatePolicyInputPropertiesPtr and CreatePolicyInputPropertiesPtrOutput values.
// You can construct a concrete instance of `CreatePolicyInputPropertiesPtrInput` via:
//
//          CreatePolicyInputPropertiesArgs{...}
//
//  or:
//
//          nil
type CreatePolicyInputPropertiesPtrInput interface {
	pulumi.Input

	ToCreatePolicyInputPropertiesPtrOutput() CreatePolicyInputPropertiesPtrOutput
	ToCreatePolicyInputPropertiesPtrOutputWithContext(context.Context) CreatePolicyInputPropertiesPtrOutput
}

type createPolicyInputPropertiesPtrType CreatePolicyInputPropertiesArgs

func CreatePolicyInputPropertiesPtr(v *CreatePolicyInputPropertiesArgs) CreatePolicyInputPropertiesPtrInput {
	return (*createPolicyInputPropertiesPtrType)(v)
}

func (*createPolicyInputPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CreatePolicyInputProperties)(nil)).Elem()
}

func (i *createPolicyInputPropertiesPtrType) ToCreatePolicyInputPropertiesPtrOutput() CreatePolicyInputPropertiesPtrOutput {
	return i.ToCreatePolicyInputPropertiesPtrOutputWithContext(context.Background())
}

func (i *createPolicyInputPropertiesPtrType) ToCreatePolicyInputPropertiesPtrOutputWithContext(ctx context.Context) CreatePolicyInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreatePolicyInputPropertiesPtrOutput)
}

// Configure pairing input properties.
type CreateProtectionContainerMappingInputProperties struct {
	// Applicable policy.
	PolicyId *string `pulumi:"policyId"`
	// Provider specific input for pairing.
	ProviderSpecificInput *ReplicationProviderSpecificContainerMappingInput `pulumi:"providerSpecificInput"`
	// The target unique protection container name.
	TargetProtectionContainerId *string `pulumi:"targetProtectionContainerId"`
}

// CreateProtectionContainerMappingInputPropertiesInput is an input type that accepts CreateProtectionContainerMappingInputPropertiesArgs and CreateProtectionContainerMappingInputPropertiesOutput values.
// You can construct a concrete instance of `CreateProtectionContainerMappingInputPropertiesInput` via:
//
//          CreateProtectionContainerMappingInputPropertiesArgs{...}
type CreateProtectionContainerMappingInputPropertiesInput interface {
	pulumi.Input

	ToCreateProtectionContainerMappingInputPropertiesOutput() CreateProtectionContainerMappingInputPropertiesOutput
	ToCreateProtectionContainerMappingInputPropertiesOutputWithContext(context.Context) CreateProtectionContainerMappingInputPropertiesOutput
}

// Configure pairing input properties.
type CreateProtectionContainerMappingInputPropertiesArgs struct {
	// Applicable policy.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// Provider specific input for pairing.
	ProviderSpecificInput ReplicationProviderSpecificContainerMappingInputPtrInput `pulumi:"providerSpecificInput"`
	// The target unique protection container name.
	TargetProtectionContainerId pulumi.StringPtrInput `pulumi:"targetProtectionContainerId"`
}

func (CreateProtectionContainerMappingInputPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CreateProtectionContainerMappingInputProperties)(nil)).Elem()
}

func (i CreateProtectionContainerMappingInputPropertiesArgs) ToCreateProtectionContainerMappingInputPropertiesOutput() CreateProtectionContainerMappingInputPropertiesOutput {
	return i.ToCreateProtectionContainerMappingInputPropertiesOutputWithContext(context.Background())
}

func (i CreateProtectionContainerMappingInputPropertiesArgs) ToCreateProtectionContainerMappingInputPropertiesOutputWithContext(ctx context.Context) CreateProtectionContainerMappingInputPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateProtectionContainerMappingInputPropertiesOutput)
}

func (i CreateProtectionContainerMappingInputPropertiesArgs) ToCreateProtectionContainerMappingInputPropertiesPtrOutput() CreateProtectionContainerMappingInputPropertiesPtrOutput {
	return i.ToCreateProtectionContainerMappingInputPropertiesPtrOutputWithContext(context.Background())
}

func (i CreateProtectionContainerMappingInputPropertiesArgs) ToCreateProtectionContainerMappingInputPropertiesPtrOutputWithContext(ctx context.Context) CreateProtectionContainerMappingInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateProtectionContainerMappingInputPropertiesOutput).ToCreateProtectionContainerMappingInputPropertiesPtrOutputWithContext(ctx)
}

// CreateProtectionContainerMappingInputPropertiesPtrInput is an input type that accepts CreateProtectionContainerMappingInputPropertiesArgs, CreateProtectionContainerMappingInputPropertiesPtr and CreateProtectionContainerMappingInputPropertiesPtrOutput values.
// You can construct a concrete instance of `CreateProtectionContainerMappingInputPropertiesPtrInput` via:
//
//          CreateProtectionContainerMappingInputPropertiesArgs{...}
//
//  or:
//
//          nil
type CreateProtectionContainerMappingInputPropertiesPtrInput interface {
	pulumi.Input

	ToCreateProtectionContainerMappingInputPropertiesPtrOutput() CreateProtectionContainerMappingInputPropertiesPtrOutput
	ToCreateProtectionContainerMappingInputPropertiesPtrOutputWithContext(context.Context) CreateProtectionContainerMappingInputPropertiesPtrOutput
}

type createProtectionContainerMappingInputPropertiesPtrType CreateProtectionContainerMappingInputPropertiesArgs

func CreateProtectionContainerMappingInputPropertiesPtr(v *CreateProtectionContainerMappingInputPropertiesArgs) CreateProtectionContainerMappingInputPropertiesPtrInput {
	return (*createProtectionContainerMappingInputPropertiesPtrType)(v)
}

func (*createProtectionContainerMappingInputPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CreateProtectionContainerMappingInputProperties)(nil)).Elem()
}

func (i *createProtectionContainerMappingInputPropertiesPtrType) ToCreateProtectionContainerMappingInputPropertiesPtrOutput() CreateProtectionContainerMappingInputPropertiesPtrOutput {
	return i.ToCreateProtectionContainerMappingInputPropertiesPtrOutputWithContext(context.Background())
}

func (i *createProtectionContainerMappingInputPropertiesPtrType) ToCreateProtectionContainerMappingInputPropertiesPtrOutputWithContext(ctx context.Context) CreateProtectionContainerMappingInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateProtectionContainerMappingInputPropertiesPtrOutput)
}

// Recovery plan creation properties.
type CreateRecoveryPlanInputProperties struct {
	// The failover deployment model.
	FailoverDeploymentModel *string `pulumi:"failoverDeploymentModel"`
	// The recovery plan groups.
	Groups []RecoveryPlanGroup `pulumi:"groups"`
	// The primary fabric Id.
	PrimaryFabricId string `pulumi:"primaryFabricId"`
	// The recovery fabric Id.
	RecoveryFabricId string `pulumi:"recoveryFabricId"`
}

// CreateRecoveryPlanInputPropertiesInput is an input type that accepts CreateRecoveryPlanInputPropertiesArgs and CreateRecoveryPlanInputPropertiesOutput values.
// You can construct a concrete instance of `CreateRecoveryPlanInputPropertiesInput` via:
//
//          CreateRecoveryPlanInputPropertiesArgs{...}
type CreateRecoveryPlanInputPropertiesInput interface {
	pulumi.Input

	ToCreateRecoveryPlanInputPropertiesOutput() CreateRecoveryPlanInputPropertiesOutput
	ToCreateRecoveryPlanInputPropertiesOutputWithContext(context.Context) CreateRecoveryPlanInputPropertiesOutput
}

// Recovery plan creation properties.
type CreateRecoveryPlanInputPropertiesArgs struct {
	// The failover deployment model.
	FailoverDeploymentModel pulumi.StringPtrInput `pulumi:"failoverDeploymentModel"`
	// The recovery plan groups.
	Groups RecoveryPlanGroupArrayInput `pulumi:"groups"`
	// The primary fabric Id.
	PrimaryFabricId pulumi.StringInput `pulumi:"primaryFabricId"`
	// The recovery fabric Id.
	RecoveryFabricId pulumi.StringInput `pulumi:"recoveryFabricId"`
}

func (CreateRecoveryPlanInputPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CreateRecoveryPlanInputProperties)(nil)).Elem()
}

func (i CreateRecoveryPlanInputPropertiesArgs) ToCreateRecoveryPlanInputPropertiesOutput() CreateRecoveryPlanInputPropertiesOutput {
	return i.ToCreateRecoveryPlanInputPropertiesOutputWithContext(context.Background())
}

func (i CreateRecoveryPlanInputPropertiesArgs) ToCreateRecoveryPlanInputPropertiesOutputWithContext(ctx context.Context) CreateRecoveryPlanInputPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateRecoveryPlanInputPropertiesOutput)
}

func (i CreateRecoveryPlanInputPropertiesArgs) ToCreateRecoveryPlanInputPropertiesPtrOutput() CreateRecoveryPlanInputPropertiesPtrOutput {
	return i.ToCreateRecoveryPlanInputPropertiesPtrOutputWithContext(context.Background())
}

func (i CreateRecoveryPlanInputPropertiesArgs) ToCreateRecoveryPlanInputPropertiesPtrOutputWithContext(ctx context.Context) CreateRecoveryPlanInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateRecoveryPlanInputPropertiesOutput).ToCreateRecoveryPlanInputPropertiesPtrOutputWithContext(ctx)
}

// CreateRecoveryPlanInputPropertiesPtrInput is an input type that accepts CreateRecoveryPlanInputPropertiesArgs, CreateRecoveryPlanInputPropertiesPtr and CreateRecoveryPlanInputPropertiesPtrOutput values.
// You can construct a concrete instance of `CreateRecoveryPlanInputPropertiesPtrInput` via:
//
//          CreateRecoveryPlanInputPropertiesArgs{...}
//
//  or:
//
//          nil
type CreateRecoveryPlanInputPropertiesPtrInput interface {
	pulumi.Input

	ToCreateRecoveryPlanInputPropertiesPtrOutput() CreateRecoveryPlanInputPropertiesPtrOutput
	ToCreateRecoveryPlanInputPropertiesPtrOutputWithContext(context.Context) CreateRecoveryPlanInputPropertiesPtrOutput
}

type createRecoveryPlanInputPropertiesPtrType CreateRecoveryPlanInputPropertiesArgs

func CreateRecoveryPlanInputPropertiesPtr(v *CreateRecoveryPlanInputPropertiesArgs) CreateRecoveryPlanInputPropertiesPtrInput {
	return (*createRecoveryPlanInputPropertiesPtrType)(v)
}

func (*createRecoveryPlanInputPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CreateRecoveryPlanInputProperties)(nil)).Elem()
}

func (i *createRecoveryPlanInputPropertiesPtrType) ToCreateRecoveryPlanInputPropertiesPtrOutput() CreateRecoveryPlanInputPropertiesPtrOutput {
	return i.ToCreateRecoveryPlanInputPropertiesPtrOutputWithContext(context.Background())
}

func (i *createRecoveryPlanInputPropertiesPtrType) ToCreateRecoveryPlanInputPropertiesPtrOutputWithContext(ctx context.Context) CreateRecoveryPlanInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateRecoveryPlanInputPropertiesPtrOutput)
}

// Current scenario details of the protected entity.
type CurrentScenarioDetailsResponse struct {
	// ARM Id of the job being executed.
	JobId *string `pulumi:"jobId"`
	// Scenario name.
	ScenarioName *string `pulumi:"scenarioName"`
	// Start time of the workflow.
	StartTime *string `pulumi:"startTime"`
}

// Current scenario details of the protected entity.
type CurrentScenarioDetailsResponseOutput struct{ *pulumi.OutputState }

func (CurrentScenarioDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CurrentScenarioDetailsResponse)(nil)).Elem()
}

func (o CurrentScenarioDetailsResponseOutput) ToCurrentScenarioDetailsResponseOutput() CurrentScenarioDetailsResponseOutput {
	return o
}

func (o CurrentScenarioDetailsResponseOutput) ToCurrentScenarioDetailsResponseOutputWithContext(ctx context.Context) CurrentScenarioDetailsResponseOutput {
	return o
}

func (o CurrentScenarioDetailsResponseOutput) ToCurrentScenarioDetailsResponsePtrOutput() CurrentScenarioDetailsResponsePtrOutput {
	return o.ToCurrentScenarioDetailsResponsePtrOutputWithContext(context.Background())
}

func (o CurrentScenarioDetailsResponseOutput) ToCurrentScenarioDetailsResponsePtrOutputWithContext(ctx context.Context) CurrentScenarioDetailsResponsePtrOutput {
	return o.ApplyT(func(v CurrentScenarioDetailsResponse) *CurrentScenarioDetailsResponse {
		return &v
	}).(CurrentScenarioDetailsResponsePtrOutput)
}

// ARM Id of the job being executed.
func (o CurrentScenarioDetailsResponseOutput) JobId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CurrentScenarioDetailsResponse) *string { return v.JobId }).(pulumi.StringPtrOutput)
}

// Scenario name.
func (o CurrentScenarioDetailsResponseOutput) ScenarioName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CurrentScenarioDetailsResponse) *string { return v.ScenarioName }).(pulumi.StringPtrOutput)
}

// Start time of the workflow.
func (o CurrentScenarioDetailsResponseOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CurrentScenarioDetailsResponse) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type CurrentScenarioDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (CurrentScenarioDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CurrentScenarioDetailsResponse)(nil)).Elem()
}

func (o CurrentScenarioDetailsResponsePtrOutput) ToCurrentScenarioDetailsResponsePtrOutput() CurrentScenarioDetailsResponsePtrOutput {
	return o
}

func (o CurrentScenarioDetailsResponsePtrOutput) ToCurrentScenarioDetailsResponsePtrOutputWithContext(ctx context.Context) CurrentScenarioDetailsResponsePtrOutput {
	return o
}

func (o CurrentScenarioDetailsResponsePtrOutput) Elem() CurrentScenarioDetailsResponseOutput {
	return o.ApplyT(func(v *CurrentScenarioDetailsResponse) CurrentScenarioDetailsResponse { return *v }).(CurrentScenarioDetailsResponseOutput)
}

// ARM Id of the job being executed.
func (o CurrentScenarioDetailsResponsePtrOutput) JobId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CurrentScenarioDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.JobId
	}).(pulumi.StringPtrOutput)
}

// Scenario name.
func (o CurrentScenarioDetailsResponsePtrOutput) ScenarioName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CurrentScenarioDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ScenarioName
	}).(pulumi.StringPtrOutput)
}

// Start time of the workflow.
func (o CurrentScenarioDetailsResponsePtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CurrentScenarioDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

// The data store details of the MT.
type DataStoreResponse struct {
	// The capacity of data store in GBs.
	Capacity *string `pulumi:"capacity"`
	// The free space of data store in GBs.
	FreeSpace *string `pulumi:"freeSpace"`
	// The symbolic name of data store.
	SymbolicName *string `pulumi:"symbolicName"`
	// The type of data store.
	Type *string `pulumi:"type"`
	// The uuid of data store.
	Uuid *string `pulumi:"uuid"`
}

// The data store details of the MT.
type DataStoreResponseOutput struct{ *pulumi.OutputState }

func (DataStoreResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataStoreResponse)(nil)).Elem()
}

func (o DataStoreResponseOutput) ToDataStoreResponseOutput() DataStoreResponseOutput {
	return o
}

func (o DataStoreResponseOutput) ToDataStoreResponseOutputWithContext(ctx context.Context) DataStoreResponseOutput {
	return o
}

// The capacity of data store in GBs.
func (o DataStoreResponseOutput) Capacity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataStoreResponse) *string { return v.Capacity }).(pulumi.StringPtrOutput)
}

// The free space of data store in GBs.
func (o DataStoreResponseOutput) FreeSpace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataStoreResponse) *string { return v.FreeSpace }).(pulumi.StringPtrOutput)
}

// The symbolic name of data store.
func (o DataStoreResponseOutput) SymbolicName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataStoreResponse) *string { return v.SymbolicName }).(pulumi.StringPtrOutput)
}

// The type of data store.
func (o DataStoreResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataStoreResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The uuid of data store.
func (o DataStoreResponseOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataStoreResponse) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

type DataStoreResponseArrayOutput struct{ *pulumi.OutputState }

func (DataStoreResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataStoreResponse)(nil)).Elem()
}

func (o DataStoreResponseArrayOutput) ToDataStoreResponseArrayOutput() DataStoreResponseArrayOutput {
	return o
}

func (o DataStoreResponseArrayOutput) ToDataStoreResponseArrayOutputWithContext(ctx context.Context) DataStoreResponseArrayOutput {
	return o
}

func (o DataStoreResponseArrayOutput) Index(i pulumi.IntInput) DataStoreResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataStoreResponse {
		return vs[0].([]DataStoreResponse)[vs[1].(int)]
	}).(DataStoreResponseOutput)
}

// On-prem disk details data.
type DiskDetailsResponse struct {
	// The hard disk max size in MB.
	MaxSizeMB *int `pulumi:"maxSizeMB"`
	// The VHD Id.
	VhdId *string `pulumi:"vhdId"`
	// The VHD name.
	VhdName *string `pulumi:"vhdName"`
	// The type of the volume.
	VhdType *string `pulumi:"vhdType"`
}

// On-prem disk details data.
type DiskDetailsResponseOutput struct{ *pulumi.OutputState }

func (DiskDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskDetailsResponse)(nil)).Elem()
}

func (o DiskDetailsResponseOutput) ToDiskDetailsResponseOutput() DiskDetailsResponseOutput {
	return o
}

func (o DiskDetailsResponseOutput) ToDiskDetailsResponseOutputWithContext(ctx context.Context) DiskDetailsResponseOutput {
	return o
}

// The hard disk max size in MB.
func (o DiskDetailsResponseOutput) MaxSizeMB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DiskDetailsResponse) *int { return v.MaxSizeMB }).(pulumi.IntPtrOutput)
}

// The VHD Id.
func (o DiskDetailsResponseOutput) VhdId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DiskDetailsResponse) *string { return v.VhdId }).(pulumi.StringPtrOutput)
}

// The VHD name.
func (o DiskDetailsResponseOutput) VhdName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DiskDetailsResponse) *string { return v.VhdName }).(pulumi.StringPtrOutput)
}

// The type of the volume.
func (o DiskDetailsResponseOutput) VhdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DiskDetailsResponse) *string { return v.VhdType }).(pulumi.StringPtrOutput)
}

type DiskDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (DiskDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DiskDetailsResponse)(nil)).Elem()
}

func (o DiskDetailsResponseArrayOutput) ToDiskDetailsResponseArrayOutput() DiskDetailsResponseArrayOutput {
	return o
}

func (o DiskDetailsResponseArrayOutput) ToDiskDetailsResponseArrayOutputWithContext(ctx context.Context) DiskDetailsResponseArrayOutput {
	return o
}

func (o DiskDetailsResponseArrayOutput) Index(i pulumi.IntInput) DiskDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DiskDetailsResponse {
		return vs[0].([]DiskDetailsResponse)[vs[1].(int)]
	}).(DiskDetailsResponseOutput)
}

// Enable protection input properties.
type EnableProtectionInputProperties struct {
	// The Policy Id.
	PolicyId *string `pulumi:"policyId"`
	// The protectable item Id.
	ProtectableItemId *string `pulumi:"protectableItemId"`
	// The ReplicationProviderInput. For HyperVReplicaAzure provider, it will be AzureEnableProtectionInput object. For San provider, it will be SanEnableProtectionInput object. For HyperVReplicaAzure provider, it can be null.
	ProviderSpecificDetails interface{} `pulumi:"providerSpecificDetails"`
}

// EnableProtectionInputPropertiesInput is an input type that accepts EnableProtectionInputPropertiesArgs and EnableProtectionInputPropertiesOutput values.
// You can construct a concrete instance of `EnableProtectionInputPropertiesInput` via:
//
//          EnableProtectionInputPropertiesArgs{...}
type EnableProtectionInputPropertiesInput interface {
	pulumi.Input

	ToEnableProtectionInputPropertiesOutput() EnableProtectionInputPropertiesOutput
	ToEnableProtectionInputPropertiesOutputWithContext(context.Context) EnableProtectionInputPropertiesOutput
}

// Enable protection input properties.
type EnableProtectionInputPropertiesArgs struct {
	// The Policy Id.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// The protectable item Id.
	ProtectableItemId pulumi.StringPtrInput `pulumi:"protectableItemId"`
	// The ReplicationProviderInput. For HyperVReplicaAzure provider, it will be AzureEnableProtectionInput object. For San provider, it will be SanEnableProtectionInput object. For HyperVReplicaAzure provider, it can be null.
	ProviderSpecificDetails pulumi.Input `pulumi:"providerSpecificDetails"`
}

func (EnableProtectionInputPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnableProtectionInputProperties)(nil)).Elem()
}

func (i EnableProtectionInputPropertiesArgs) ToEnableProtectionInputPropertiesOutput() EnableProtectionInputPropertiesOutput {
	return i.ToEnableProtectionInputPropertiesOutputWithContext(context.Background())
}

func (i EnableProtectionInputPropertiesArgs) ToEnableProtectionInputPropertiesOutputWithContext(ctx context.Context) EnableProtectionInputPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnableProtectionInputPropertiesOutput)
}

func (i EnableProtectionInputPropertiesArgs) ToEnableProtectionInputPropertiesPtrOutput() EnableProtectionInputPropertiesPtrOutput {
	return i.ToEnableProtectionInputPropertiesPtrOutputWithContext(context.Background())
}

func (i EnableProtectionInputPropertiesArgs) ToEnableProtectionInputPropertiesPtrOutputWithContext(ctx context.Context) EnableProtectionInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnableProtectionInputPropertiesOutput).ToEnableProtectionInputPropertiesPtrOutputWithContext(ctx)
}

// EnableProtectionInputPropertiesPtrInput is an input type that accepts EnableProtectionInputPropertiesArgs, EnableProtectionInputPropertiesPtr and EnableProtectionInputPropertiesPtrOutput values.
// You can construct a concrete instance of `EnableProtectionInputPropertiesPtrInput` via:
//
//          EnableProtectionInputPropertiesArgs{...}
//
//  or:
//
//          nil
type EnableProtectionInputPropertiesPtrInput interface {
	pulumi.Input

	ToEnableProtectionInputPropertiesPtrOutput() EnableProtectionInputPropertiesPtrOutput
	ToEnableProtectionInputPropertiesPtrOutputWithContext(context.Context) EnableProtectionInputPropertiesPtrOutput
}

type enableProtectionInputPropertiesPtrType EnableProtectionInputPropertiesArgs

func EnableProtectionInputPropertiesPtr(v *EnableProtectionInputPropertiesArgs) EnableProtectionInputPropertiesPtrInput {
	return (*enableProtectionInputPropertiesPtrType)(v)
}

func (*enableProtectionInputPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnableProtectionInputProperties)(nil)).Elem()
}

func (i *enableProtectionInputPropertiesPtrType) ToEnableProtectionInputPropertiesPtrOutput() EnableProtectionInputPropertiesPtrOutput {
	return i.ToEnableProtectionInputPropertiesPtrOutputWithContext(context.Background())
}

func (i *enableProtectionInputPropertiesPtrType) ToEnableProtectionInputPropertiesPtrOutputWithContext(ctx context.Context) EnableProtectionInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnableProtectionInputPropertiesPtrOutput)
}

// Encryption details for the fabric.
type EncryptionDetailsResponse struct {
	// The key encryption key certificate expiry date.
	KekCertExpiryDate *string `pulumi:"kekCertExpiryDate"`
	// The key encryption key certificate thumbprint.
	KekCertThumbprint *string `pulumi:"kekCertThumbprint"`
	// The key encryption key state for the Vmm.
	KekState *string `pulumi:"kekState"`
}

// Encryption details for the fabric.
type EncryptionDetailsResponseOutput struct{ *pulumi.OutputState }

func (EncryptionDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionDetailsResponse)(nil)).Elem()
}

func (o EncryptionDetailsResponseOutput) ToEncryptionDetailsResponseOutput() EncryptionDetailsResponseOutput {
	return o
}

func (o EncryptionDetailsResponseOutput) ToEncryptionDetailsResponseOutputWithContext(ctx context.Context) EncryptionDetailsResponseOutput {
	return o
}

func (o EncryptionDetailsResponseOutput) ToEncryptionDetailsResponsePtrOutput() EncryptionDetailsResponsePtrOutput {
	return o.ToEncryptionDetailsResponsePtrOutputWithContext(context.Background())
}

func (o EncryptionDetailsResponseOutput) ToEncryptionDetailsResponsePtrOutputWithContext(ctx context.Context) EncryptionDetailsResponsePtrOutput {
	return o.ApplyT(func(v EncryptionDetailsResponse) *EncryptionDetailsResponse {
		return &v
	}).(EncryptionDetailsResponsePtrOutput)
}

// The key encryption key certificate expiry date.
func (o EncryptionDetailsResponseOutput) KekCertExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionDetailsResponse) *string { return v.KekCertExpiryDate }).(pulumi.StringPtrOutput)
}

// The key encryption key certificate thumbprint.
func (o EncryptionDetailsResponseOutput) KekCertThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionDetailsResponse) *string { return v.KekCertThumbprint }).(pulumi.StringPtrOutput)
}

// The key encryption key state for the Vmm.
func (o EncryptionDetailsResponseOutput) KekState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionDetailsResponse) *string { return v.KekState }).(pulumi.StringPtrOutput)
}

type EncryptionDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (EncryptionDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionDetailsResponse)(nil)).Elem()
}

func (o EncryptionDetailsResponsePtrOutput) ToEncryptionDetailsResponsePtrOutput() EncryptionDetailsResponsePtrOutput {
	return o
}

func (o EncryptionDetailsResponsePtrOutput) ToEncryptionDetailsResponsePtrOutputWithContext(ctx context.Context) EncryptionDetailsResponsePtrOutput {
	return o
}

func (o EncryptionDetailsResponsePtrOutput) Elem() EncryptionDetailsResponseOutput {
	return o.ApplyT(func(v *EncryptionDetailsResponse) EncryptionDetailsResponse { return *v }).(EncryptionDetailsResponseOutput)
}

// The key encryption key certificate expiry date.
func (o EncryptionDetailsResponsePtrOutput) KekCertExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.KekCertExpiryDate
	}).(pulumi.StringPtrOutput)
}

// The key encryption key certificate thumbprint.
func (o EncryptionDetailsResponsePtrOutput) KekCertThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.KekCertThumbprint
	}).(pulumi.StringPtrOutput)
}

// The key encryption key state for the Vmm.
func (o EncryptionDetailsResponsePtrOutput) KekState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.KekState
	}).(pulumi.StringPtrOutput)
}

// Fabric properties.
type FabricPropertiesResponse struct {
	// BCDR state of the fabric.
	BcdrState *string `pulumi:"bcdrState"`
	// Fabric specific settings.
	CustomDetails interface{} `pulumi:"customDetails"`
	// Encryption details for the fabric.
	EncryptionDetails *EncryptionDetailsResponse `pulumi:"encryptionDetails"`
	// Friendly name of the fabric.
	FriendlyName *string `pulumi:"friendlyName"`
	// Health of fabric.
	Health *string `pulumi:"health"`
	// Fabric health error details.
	HealthErrorDetails []HealthErrorResponse `pulumi:"healthErrorDetails"`
	// Dra Registration Id.
	InternalIdentifier *string `pulumi:"internalIdentifier"`
	// Rollover encryption details for the fabric.
	RolloverEncryptionDetails *EncryptionDetailsResponse `pulumi:"rolloverEncryptionDetails"`
}

// Fabric properties.
type FabricPropertiesResponseOutput struct{ *pulumi.OutputState }

func (FabricPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FabricPropertiesResponse)(nil)).Elem()
}

func (o FabricPropertiesResponseOutput) ToFabricPropertiesResponseOutput() FabricPropertiesResponseOutput {
	return o
}

func (o FabricPropertiesResponseOutput) ToFabricPropertiesResponseOutputWithContext(ctx context.Context) FabricPropertiesResponseOutput {
	return o
}

func (o FabricPropertiesResponseOutput) ToFabricPropertiesResponsePtrOutput() FabricPropertiesResponsePtrOutput {
	return o.ToFabricPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o FabricPropertiesResponseOutput) ToFabricPropertiesResponsePtrOutputWithContext(ctx context.Context) FabricPropertiesResponsePtrOutput {
	return o.ApplyT(func(v FabricPropertiesResponse) *FabricPropertiesResponse {
		return &v
	}).(FabricPropertiesResponsePtrOutput)
}

// BCDR state of the fabric.
func (o FabricPropertiesResponseOutput) BcdrState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FabricPropertiesResponse) *string { return v.BcdrState }).(pulumi.StringPtrOutput)
}

// Fabric specific settings.
func (o FabricPropertiesResponseOutput) CustomDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v FabricPropertiesResponse) interface{} { return v.CustomDetails }).(pulumi.AnyOutput)
}

// Encryption details for the fabric.
func (o FabricPropertiesResponseOutput) EncryptionDetails() EncryptionDetailsResponsePtrOutput {
	return o.ApplyT(func(v FabricPropertiesResponse) *EncryptionDetailsResponse { return v.EncryptionDetails }).(EncryptionDetailsResponsePtrOutput)
}

// Friendly name of the fabric.
func (o FabricPropertiesResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FabricPropertiesResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Health of fabric.
func (o FabricPropertiesResponseOutput) Health() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FabricPropertiesResponse) *string { return v.Health }).(pulumi.StringPtrOutput)
}

// Fabric health error details.
func (o FabricPropertiesResponseOutput) HealthErrorDetails() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v FabricPropertiesResponse) []HealthErrorResponse { return v.HealthErrorDetails }).(HealthErrorResponseArrayOutput)
}

// Dra Registration Id.
func (o FabricPropertiesResponseOutput) InternalIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FabricPropertiesResponse) *string { return v.InternalIdentifier }).(pulumi.StringPtrOutput)
}

// Rollover encryption details for the fabric.
func (o FabricPropertiesResponseOutput) RolloverEncryptionDetails() EncryptionDetailsResponsePtrOutput {
	return o.ApplyT(func(v FabricPropertiesResponse) *EncryptionDetailsResponse { return v.RolloverEncryptionDetails }).(EncryptionDetailsResponsePtrOutput)
}

type FabricPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (FabricPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FabricPropertiesResponse)(nil)).Elem()
}

func (o FabricPropertiesResponsePtrOutput) ToFabricPropertiesResponsePtrOutput() FabricPropertiesResponsePtrOutput {
	return o
}

func (o FabricPropertiesResponsePtrOutput) ToFabricPropertiesResponsePtrOutputWithContext(ctx context.Context) FabricPropertiesResponsePtrOutput {
	return o
}

func (o FabricPropertiesResponsePtrOutput) Elem() FabricPropertiesResponseOutput {
	return o.ApplyT(func(v *FabricPropertiesResponse) FabricPropertiesResponse { return *v }).(FabricPropertiesResponseOutput)
}

// BCDR state of the fabric.
func (o FabricPropertiesResponsePtrOutput) BcdrState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FabricPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.BcdrState
	}).(pulumi.StringPtrOutput)
}

// Fabric specific settings.
func (o FabricPropertiesResponsePtrOutput) CustomDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v *FabricPropertiesResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.CustomDetails
	}).(pulumi.AnyOutput)
}

// Encryption details for the fabric.
func (o FabricPropertiesResponsePtrOutput) EncryptionDetails() EncryptionDetailsResponsePtrOutput {
	return o.ApplyT(func(v *FabricPropertiesResponse) *EncryptionDetailsResponse {
		if v == nil {
			return nil
		}
		return v.EncryptionDetails
	}).(EncryptionDetailsResponsePtrOutput)
}

// Friendly name of the fabric.
func (o FabricPropertiesResponsePtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FabricPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// Health of fabric.
func (o FabricPropertiesResponsePtrOutput) Health() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FabricPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Health
	}).(pulumi.StringPtrOutput)
}

// Fabric health error details.
func (o FabricPropertiesResponsePtrOutput) HealthErrorDetails() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v *FabricPropertiesResponse) []HealthErrorResponse {
		if v == nil {
			return nil
		}
		return v.HealthErrorDetails
	}).(HealthErrorResponseArrayOutput)
}

// Dra Registration Id.
func (o FabricPropertiesResponsePtrOutput) InternalIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FabricPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.InternalIdentifier
	}).(pulumi.StringPtrOutput)
}

// Rollover encryption details for the fabric.
func (o FabricPropertiesResponsePtrOutput) RolloverEncryptionDetails() EncryptionDetailsResponsePtrOutput {
	return o.ApplyT(func(v *FabricPropertiesResponse) *EncryptionDetailsResponse {
		if v == nil {
			return nil
		}
		return v.RolloverEncryptionDetails
	}).(EncryptionDetailsResponsePtrOutput)
}

// Health Error
type HealthErrorResponse struct {
	// The child health errors.
	ChildErrors []HealthErrorResponse `pulumi:"childErrors"`
	// Error creation time (UTC)
	CreationTimeUtc *string `pulumi:"creationTimeUtc"`
	// ID of the entity.
	EntityId *string `pulumi:"entityId"`
	// Error code.
	ErrorCode *string `pulumi:"errorCode"`
	// Level of error.
	ErrorLevel *string `pulumi:"errorLevel"`
	// Error message.
	ErrorMessage *string `pulumi:"errorMessage"`
	// Source of error.
	ErrorSource *string `pulumi:"errorSource"`
	// Type of error.
	ErrorType *string `pulumi:"errorType"`
	// Possible causes of error.
	PossibleCauses *string `pulumi:"possibleCauses"`
	// Recommended action to resolve error.
	RecommendedAction *string `pulumi:"recommendedAction"`
	// DRA error message.
	RecoveryProviderErrorMessage *string `pulumi:"recoveryProviderErrorMessage"`
}

// Health Error
type HealthErrorResponseOutput struct{ *pulumi.OutputState }

func (HealthErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthErrorResponse)(nil)).Elem()
}

func (o HealthErrorResponseOutput) ToHealthErrorResponseOutput() HealthErrorResponseOutput {
	return o
}

func (o HealthErrorResponseOutput) ToHealthErrorResponseOutputWithContext(ctx context.Context) HealthErrorResponseOutput {
	return o
}

// The child health errors.
func (o HealthErrorResponseOutput) ChildErrors() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v HealthErrorResponse) []HealthErrorResponse { return v.ChildErrors }).(HealthErrorResponseArrayOutput)
}

// Error creation time (UTC)
func (o HealthErrorResponseOutput) CreationTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.CreationTimeUtc }).(pulumi.StringPtrOutput)
}

// ID of the entity.
func (o HealthErrorResponseOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

// Error code.
func (o HealthErrorResponseOutput) ErrorCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.ErrorCode }).(pulumi.StringPtrOutput)
}

// Level of error.
func (o HealthErrorResponseOutput) ErrorLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.ErrorLevel }).(pulumi.StringPtrOutput)
}

// Error message.
func (o HealthErrorResponseOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.ErrorMessage }).(pulumi.StringPtrOutput)
}

// Source of error.
func (o HealthErrorResponseOutput) ErrorSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.ErrorSource }).(pulumi.StringPtrOutput)
}

// Type of error.
func (o HealthErrorResponseOutput) ErrorType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.ErrorType }).(pulumi.StringPtrOutput)
}

// Possible causes of error.
func (o HealthErrorResponseOutput) PossibleCauses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.PossibleCauses }).(pulumi.StringPtrOutput)
}

// Recommended action to resolve error.
func (o HealthErrorResponseOutput) RecommendedAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.RecommendedAction }).(pulumi.StringPtrOutput)
}

// DRA error message.
func (o HealthErrorResponseOutput) RecoveryProviderErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.RecoveryProviderErrorMessage }).(pulumi.StringPtrOutput)
}

type HealthErrorResponseArrayOutput struct{ *pulumi.OutputState }

func (HealthErrorResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HealthErrorResponse)(nil)).Elem()
}

func (o HealthErrorResponseArrayOutput) ToHealthErrorResponseArrayOutput() HealthErrorResponseArrayOutput {
	return o
}

func (o HealthErrorResponseArrayOutput) ToHealthErrorResponseArrayOutputWithContext(ctx context.Context) HealthErrorResponseArrayOutput {
	return o
}

func (o HealthErrorResponseArrayOutput) Index(i pulumi.IntInput) HealthErrorResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HealthErrorResponse {
		return vs[0].([]HealthErrorResponse)[vs[1].(int)]
	}).(HealthErrorResponseOutput)
}

// Azure specific enable protection input.
type HyperVReplicaAzureEnableProtectionInput struct {
	// The list of VHD IDs of disks to be protected.
	DisksToInclude []string `pulumi:"disksToInclude"`
	// The selected option to enable RDP\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum.
	EnableRDPOnTargetOption *string `pulumi:"enableRDPOnTargetOption"`
	// The Hyper-V host Vm Id.
	HvHostVmId *string `pulumi:"hvHostVmId"`
	// The class type.
	InstanceType *string `pulumi:"instanceType"`
	// The storage account to be used for logging during replication.
	LogStorageAccountId *string `pulumi:"logStorageAccountId"`
	// The OS type associated with vm.
	OsType *string `pulumi:"osType"`
	// The selected target Azure network Id.
	TargetAzureNetworkId *string `pulumi:"targetAzureNetworkId"`
	// The selected target Azure subnet Id.
	TargetAzureSubnetId *string `pulumi:"targetAzureSubnetId"`
	// The Id of the target resource group (for classic deployment) in which the failover VM is to be created.
	TargetAzureV1ResourceGroupId *string `pulumi:"targetAzureV1ResourceGroupId"`
	// The Id of the target resource group (for resource manager deployment) in which the failover VM is to be created.
	TargetAzureV2ResourceGroupId *string `pulumi:"targetAzureV2ResourceGroupId"`
	// The target azure Vm Name.
	TargetAzureVmName *string `pulumi:"targetAzureVmName"`
	// The storage account name.
	TargetStorageAccountId *string `pulumi:"targetStorageAccountId"`
	// A value indicating whether managed disks should be used during failover.
	UseManagedDisks *string `pulumi:"useManagedDisks"`
	// The OS disk VHD id associated with vm.
	VhdId *string `pulumi:"vhdId"`
	// The Vm Name.
	VmName *string `pulumi:"vmName"`
}

// HyperVReplicaAzureEnableProtectionInputInput is an input type that accepts HyperVReplicaAzureEnableProtectionInputArgs and HyperVReplicaAzureEnableProtectionInputOutput values.
// You can construct a concrete instance of `HyperVReplicaAzureEnableProtectionInputInput` via:
//
//          HyperVReplicaAzureEnableProtectionInputArgs{...}
type HyperVReplicaAzureEnableProtectionInputInput interface {
	pulumi.Input

	ToHyperVReplicaAzureEnableProtectionInputOutput() HyperVReplicaAzureEnableProtectionInputOutput
	ToHyperVReplicaAzureEnableProtectionInputOutputWithContext(context.Context) HyperVReplicaAzureEnableProtectionInputOutput
}

// Azure specific enable protection input.
type HyperVReplicaAzureEnableProtectionInputArgs struct {
	// The list of VHD IDs of disks to be protected.
	DisksToInclude pulumi.StringArrayInput `pulumi:"disksToInclude"`
	// The selected option to enable RDP\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum.
	EnableRDPOnTargetOption pulumi.StringPtrInput `pulumi:"enableRDPOnTargetOption"`
	// The Hyper-V host Vm Id.
	HvHostVmId pulumi.StringPtrInput `pulumi:"hvHostVmId"`
	// The class type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// The storage account to be used for logging during replication.
	LogStorageAccountId pulumi.StringPtrInput `pulumi:"logStorageAccountId"`
	// The OS type associated with vm.
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// The selected target Azure network Id.
	TargetAzureNetworkId pulumi.StringPtrInput `pulumi:"targetAzureNetworkId"`
	// The selected target Azure subnet Id.
	TargetAzureSubnetId pulumi.StringPtrInput `pulumi:"targetAzureSubnetId"`
	// The Id of the target resource group (for classic deployment) in which the failover VM is to be created.
	TargetAzureV1ResourceGroupId pulumi.StringPtrInput `pulumi:"targetAzureV1ResourceGroupId"`
	// The Id of the target resource group (for resource manager deployment) in which the failover VM is to be created.
	TargetAzureV2ResourceGroupId pulumi.StringPtrInput `pulumi:"targetAzureV2ResourceGroupId"`
	// The target azure Vm Name.
	TargetAzureVmName pulumi.StringPtrInput `pulumi:"targetAzureVmName"`
	// The storage account name.
	TargetStorageAccountId pulumi.StringPtrInput `pulumi:"targetStorageAccountId"`
	// A value indicating whether managed disks should be used during failover.
	UseManagedDisks pulumi.StringPtrInput `pulumi:"useManagedDisks"`
	// The OS disk VHD id associated with vm.
	VhdId pulumi.StringPtrInput `pulumi:"vhdId"`
	// The Vm Name.
	VmName pulumi.StringPtrInput `pulumi:"vmName"`
}

func (HyperVReplicaAzureEnableProtectionInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVReplicaAzureEnableProtectionInput)(nil)).Elem()
}

func (i HyperVReplicaAzureEnableProtectionInputArgs) ToHyperVReplicaAzureEnableProtectionInputOutput() HyperVReplicaAzureEnableProtectionInputOutput {
	return i.ToHyperVReplicaAzureEnableProtectionInputOutputWithContext(context.Background())
}

func (i HyperVReplicaAzureEnableProtectionInputArgs) ToHyperVReplicaAzureEnableProtectionInputOutputWithContext(ctx context.Context) HyperVReplicaAzureEnableProtectionInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HyperVReplicaAzureEnableProtectionInputOutput)
}

// Hyper-V Replica Azure specific protection profile details.
type HyperVReplicaAzurePolicyDetailsResponse struct {
	// The active storage account Id.
	ActiveStorageAccountId *string `pulumi:"activeStorageAccountId"`
	// The interval (in hours) at which Hyper-V Replica should create an application consistent snapshot within the VM.
	ApplicationConsistentSnapshotFrequencyInHours *int `pulumi:"applicationConsistentSnapshotFrequencyInHours"`
	// A value indicating whether encryption is enabled for virtual machines in this cloud.
	Encryption *string `pulumi:"encryption"`
	// Gets the class type. Overridden in derived classes.
	InstanceType string `pulumi:"instanceType"`
	// The scheduled start time for the initial replication. If this parameter is Null, the initial replication starts immediately.
	OnlineReplicationStartTime *string `pulumi:"onlineReplicationStartTime"`
	// The duration (in hours) to which point the recovery history needs to be maintained.
	RecoveryPointHistoryDurationInHours *int `pulumi:"recoveryPointHistoryDurationInHours"`
	// The replication interval.
	ReplicationInterval *int `pulumi:"replicationInterval"`
}

// Hyper-V Replica Azure specific protection profile details.
type HyperVReplicaAzurePolicyDetailsResponseOutput struct{ *pulumi.OutputState }

func (HyperVReplicaAzurePolicyDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVReplicaAzurePolicyDetailsResponse)(nil)).Elem()
}

func (o HyperVReplicaAzurePolicyDetailsResponseOutput) ToHyperVReplicaAzurePolicyDetailsResponseOutput() HyperVReplicaAzurePolicyDetailsResponseOutput {
	return o
}

func (o HyperVReplicaAzurePolicyDetailsResponseOutput) ToHyperVReplicaAzurePolicyDetailsResponseOutputWithContext(ctx context.Context) HyperVReplicaAzurePolicyDetailsResponseOutput {
	return o
}

// The active storage account Id.
func (o HyperVReplicaAzurePolicyDetailsResponseOutput) ActiveStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzurePolicyDetailsResponse) *string { return v.ActiveStorageAccountId }).(pulumi.StringPtrOutput)
}

// The interval (in hours) at which Hyper-V Replica should create an application consistent snapshot within the VM.
func (o HyperVReplicaAzurePolicyDetailsResponseOutput) ApplicationConsistentSnapshotFrequencyInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzurePolicyDetailsResponse) *int {
		return v.ApplicationConsistentSnapshotFrequencyInHours
	}).(pulumi.IntPtrOutput)
}

// A value indicating whether encryption is enabled for virtual machines in this cloud.
func (o HyperVReplicaAzurePolicyDetailsResponseOutput) Encryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzurePolicyDetailsResponse) *string { return v.Encryption }).(pulumi.StringPtrOutput)
}

// Gets the class type. Overridden in derived classes.
func (o HyperVReplicaAzurePolicyDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v HyperVReplicaAzurePolicyDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The scheduled start time for the initial replication. If this parameter is Null, the initial replication starts immediately.
func (o HyperVReplicaAzurePolicyDetailsResponseOutput) OnlineReplicationStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzurePolicyDetailsResponse) *string { return v.OnlineReplicationStartTime }).(pulumi.StringPtrOutput)
}

// The duration (in hours) to which point the recovery history needs to be maintained.
func (o HyperVReplicaAzurePolicyDetailsResponseOutput) RecoveryPointHistoryDurationInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzurePolicyDetailsResponse) *int { return v.RecoveryPointHistoryDurationInHours }).(pulumi.IntPtrOutput)
}

// The replication interval.
func (o HyperVReplicaAzurePolicyDetailsResponseOutput) ReplicationInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzurePolicyDetailsResponse) *int { return v.ReplicationInterval }).(pulumi.IntPtrOutput)
}

// Hyper-V Replica Azure specific input for creating a protection profile.
type HyperVReplicaAzurePolicyInput struct {
	// The interval (in hours) at which Hyper-V Replica should create an application consistent snapshot within the VM.
	ApplicationConsistentSnapshotFrequencyInHours *int `pulumi:"applicationConsistentSnapshotFrequencyInHours"`
	// A value indicating whether encryption needs to be enabled for Vms in this cloud.
	Encryption *string `pulumi:"encryption"`
	// The class type.
	InstanceType *string `pulumi:"instanceType"`
	// The scheduled start time for the initial replication. If this parameter is Null, the initial replication starts immediately.
	OnlineReplicationStartTime *string `pulumi:"onlineReplicationStartTime"`
	// The duration (in hours) to which point the recovery history needs to be maintained.
	RecoveryPointHistoryDuration *int `pulumi:"recoveryPointHistoryDuration"`
	// The replication interval.
	ReplicationInterval *int `pulumi:"replicationInterval"`
	// The list of storage accounts to which the VMs in the primary cloud can replicate to.
	StorageAccounts []string `pulumi:"storageAccounts"`
}

// HyperVReplicaAzurePolicyInputInput is an input type that accepts HyperVReplicaAzurePolicyInputArgs and HyperVReplicaAzurePolicyInputOutput values.
// You can construct a concrete instance of `HyperVReplicaAzurePolicyInputInput` via:
//
//          HyperVReplicaAzurePolicyInputArgs{...}
type HyperVReplicaAzurePolicyInputInput interface {
	pulumi.Input

	ToHyperVReplicaAzurePolicyInputOutput() HyperVReplicaAzurePolicyInputOutput
	ToHyperVReplicaAzurePolicyInputOutputWithContext(context.Context) HyperVReplicaAzurePolicyInputOutput
}

// Hyper-V Replica Azure specific input for creating a protection profile.
type HyperVReplicaAzurePolicyInputArgs struct {
	// The interval (in hours) at which Hyper-V Replica should create an application consistent snapshot within the VM.
	ApplicationConsistentSnapshotFrequencyInHours pulumi.IntPtrInput `pulumi:"applicationConsistentSnapshotFrequencyInHours"`
	// A value indicating whether encryption needs to be enabled for Vms in this cloud.
	Encryption pulumi.StringPtrInput `pulumi:"encryption"`
	// The class type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// The scheduled start time for the initial replication. If this parameter is Null, the initial replication starts immediately.
	OnlineReplicationStartTime pulumi.StringPtrInput `pulumi:"onlineReplicationStartTime"`
	// The duration (in hours) to which point the recovery history needs to be maintained.
	RecoveryPointHistoryDuration pulumi.IntPtrInput `pulumi:"recoveryPointHistoryDuration"`
	// The replication interval.
	ReplicationInterval pulumi.IntPtrInput `pulumi:"replicationInterval"`
	// The list of storage accounts to which the VMs in the primary cloud can replicate to.
	StorageAccounts pulumi.StringArrayInput `pulumi:"storageAccounts"`
}

func (HyperVReplicaAzurePolicyInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVReplicaAzurePolicyInput)(nil)).Elem()
}

func (i HyperVReplicaAzurePolicyInputArgs) ToHyperVReplicaAzurePolicyInputOutput() HyperVReplicaAzurePolicyInputOutput {
	return i.ToHyperVReplicaAzurePolicyInputOutputWithContext(context.Background())
}

func (i HyperVReplicaAzurePolicyInputArgs) ToHyperVReplicaAzurePolicyInputOutputWithContext(ctx context.Context) HyperVReplicaAzurePolicyInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HyperVReplicaAzurePolicyInputOutput)
}

// Hyper V Replica Azure provider specific settings.
type HyperVReplicaAzureReplicationDetailsResponse struct {
	// Azure VM Disk details.
	AzureVMDiskDetails []AzureVmDiskDetailsResponse `pulumi:"azureVMDiskDetails"`
	// The selected option to enable RDP\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum.
	EnableRDPOnTargetOption *string `pulumi:"enableRDPOnTargetOption"`
	// The encryption info.
	Encryption *string `pulumi:"encryption"`
	// Initial replication details.
	InitialReplicationDetails *InitialReplicationDetailsResponse `pulumi:"initialReplicationDetails"`
	// Gets the Instance type.
	InstanceType string `pulumi:"instanceType"`
	// The Last replication time.
	LastReplicatedTime *string `pulumi:"lastReplicatedTime"`
	// License Type of the VM to be used.
	LicenseType *string `pulumi:"licenseType"`
	// The operating system info.
	OSDetails *OSDetailsResponse `pulumi:"oSDetails"`
	// The recovery availability set Id.
	RecoveryAvailabilitySetId *string `pulumi:"recoveryAvailabilitySetId"`
	// The ARM id of the log storage account used for replication. This will be set to null if no log storage account was provided during enable protection.
	RecoveryAzureLogStorageAccountId *string `pulumi:"recoveryAzureLogStorageAccountId"`
	// The target resource group Id.
	RecoveryAzureResourceGroupId *string `pulumi:"recoveryAzureResourceGroupId"`
	// The recovery Azure storage account.
	RecoveryAzureStorageAccount *string `pulumi:"recoveryAzureStorageAccount"`
	// Recovery Azure given name.
	RecoveryAzureVMName *string `pulumi:"recoveryAzureVMName"`
	// The Recovery Azure VM size.
	RecoveryAzureVMSize *string `pulumi:"recoveryAzureVMSize"`
	// The selected recovery azure network Id.
	SelectedRecoveryAzureNetworkId *string `pulumi:"selectedRecoveryAzureNetworkId"`
	// The CPU count of the VM on the primary side.
	SourceVmCPUCount *int `pulumi:"sourceVmCPUCount"`
	// The RAM size of the VM on the primary side.
	SourceVmRAMSizeInMB *int `pulumi:"sourceVmRAMSizeInMB"`
	// A value indicating whether managed disks should be used during failover.
	UseManagedDisks *string `pulumi:"useManagedDisks"`
	// The virtual machine Id.
	VmId *string `pulumi:"vmId"`
	// The PE Network details.
	VmNics []VMNicDetailsResponse `pulumi:"vmNics"`
	// The protection state for the vm.
	VmProtectionState *string `pulumi:"vmProtectionState"`
	// The protection state description for the vm.
	VmProtectionStateDescription *string `pulumi:"vmProtectionStateDescription"`
}

// Hyper V Replica Azure provider specific settings.
type HyperVReplicaAzureReplicationDetailsResponseOutput struct{ *pulumi.OutputState }

func (HyperVReplicaAzureReplicationDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVReplicaAzureReplicationDetailsResponse)(nil)).Elem()
}

func (o HyperVReplicaAzureReplicationDetailsResponseOutput) ToHyperVReplicaAzureReplicationDetailsResponseOutput() HyperVReplicaAzureReplicationDetailsResponseOutput {
	return o
}

func (o HyperVReplicaAzureReplicationDetailsResponseOutput) ToHyperVReplicaAzureReplicationDetailsResponseOutputWithContext(ctx context.Context) HyperVReplicaAzureReplicationDetailsResponseOutput {
	return o
}

// Azure VM Disk details.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) AzureVMDiskDetails() AzureVmDiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) []AzureVmDiskDetailsResponse {
		return v.AzureVMDiskDetails
	}).(AzureVmDiskDetailsResponseArrayOutput)
}

// The selected option to enable RDP\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) EnableRDPOnTargetOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.EnableRDPOnTargetOption }).(pulumi.StringPtrOutput)
}

// The encryption info.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) Encryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.Encryption }).(pulumi.StringPtrOutput)
}

// Initial replication details.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) InitialReplicationDetails() InitialReplicationDetailsResponsePtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *InitialReplicationDetailsResponse {
		return v.InitialReplicationDetails
	}).(InitialReplicationDetailsResponsePtrOutput)
}

// Gets the Instance type.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The Last replication time.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) LastReplicatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.LastReplicatedTime }).(pulumi.StringPtrOutput)
}

// License Type of the VM to be used.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) LicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.LicenseType }).(pulumi.StringPtrOutput)
}

// The operating system info.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) OSDetails() OSDetailsResponsePtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *OSDetailsResponse { return v.OSDetails }).(OSDetailsResponsePtrOutput)
}

// The recovery availability set Id.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) RecoveryAvailabilitySetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.RecoveryAvailabilitySetId }).(pulumi.StringPtrOutput)
}

// The ARM id of the log storage account used for replication. This will be set to null if no log storage account was provided during enable protection.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) RecoveryAzureLogStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string {
		return v.RecoveryAzureLogStorageAccountId
	}).(pulumi.StringPtrOutput)
}

// The target resource group Id.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) RecoveryAzureResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.RecoveryAzureResourceGroupId }).(pulumi.StringPtrOutput)
}

// The recovery Azure storage account.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) RecoveryAzureStorageAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.RecoveryAzureStorageAccount }).(pulumi.StringPtrOutput)
}

// Recovery Azure given name.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) RecoveryAzureVMName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.RecoveryAzureVMName }).(pulumi.StringPtrOutput)
}

// The Recovery Azure VM size.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) RecoveryAzureVMSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.RecoveryAzureVMSize }).(pulumi.StringPtrOutput)
}

// The selected recovery azure network Id.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) SelectedRecoveryAzureNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.SelectedRecoveryAzureNetworkId }).(pulumi.StringPtrOutput)
}

// The CPU count of the VM on the primary side.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) SourceVmCPUCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *int { return v.SourceVmCPUCount }).(pulumi.IntPtrOutput)
}

// The RAM size of the VM on the primary side.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) SourceVmRAMSizeInMB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *int { return v.SourceVmRAMSizeInMB }).(pulumi.IntPtrOutput)
}

// A value indicating whether managed disks should be used during failover.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) UseManagedDisks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.UseManagedDisks }).(pulumi.StringPtrOutput)
}

// The virtual machine Id.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) VmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.VmId }).(pulumi.StringPtrOutput)
}

// The PE Network details.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) VmNics() VMNicDetailsResponseArrayOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) []VMNicDetailsResponse { return v.VmNics }).(VMNicDetailsResponseArrayOutput)
}

// The protection state for the vm.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) VmProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.VmProtectionState }).(pulumi.StringPtrOutput)
}

// The protection state description for the vm.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) VmProtectionStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.VmProtectionStateDescription }).(pulumi.StringPtrOutput)
}

// Base class for HyperVReplica policy details.
type HyperVReplicaBasePolicyDetailsResponse struct {
	// A value indicating the authentication type.
	AllowedAuthenticationType *int `pulumi:"allowedAuthenticationType"`
	// A value indicating the application consistent frequency.
	ApplicationConsistentSnapshotFrequencyInHours *int `pulumi:"applicationConsistentSnapshotFrequencyInHours"`
	// A value indicating whether compression has to be enabled.
	Compression *string `pulumi:"compression"`
	// A value indicating whether IR is online.
	InitialReplicationMethod *string `pulumi:"initialReplicationMethod"`
	// Gets the class type. Overridden in derived classes.
	InstanceType string `pulumi:"instanceType"`
	// A value indicating the offline IR export path.
	OfflineReplicationExportPath *string `pulumi:"offlineReplicationExportPath"`
	// A value indicating the offline IR import path.
	OfflineReplicationImportPath *string `pulumi:"offlineReplicationImportPath"`
	// A value indicating the online IR start time.
	OnlineReplicationStartTime *string `pulumi:"onlineReplicationStartTime"`
	// A value indicating the number of recovery points.
	RecoveryPoints *int `pulumi:"recoveryPoints"`
	// A value indicating whether the VM has to be auto deleted. Supported Values: String.Empty, None, OnRecoveryCloud
	ReplicaDeletionOption *string `pulumi:"replicaDeletionOption"`
	// A value indicating the recovery HTTPS port.
	ReplicationPort *int `pulumi:"replicationPort"`
}

// Base class for HyperVReplica policy details.
type HyperVReplicaBasePolicyDetailsResponseOutput struct{ *pulumi.OutputState }

func (HyperVReplicaBasePolicyDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVReplicaBasePolicyDetailsResponse)(nil)).Elem()
}

func (o HyperVReplicaBasePolicyDetailsResponseOutput) ToHyperVReplicaBasePolicyDetailsResponseOutput() HyperVReplicaBasePolicyDetailsResponseOutput {
	return o
}

func (o HyperVReplicaBasePolicyDetailsResponseOutput) ToHyperVReplicaBasePolicyDetailsResponseOutputWithContext(ctx context.Context) HyperVReplicaBasePolicyDetailsResponseOutput {
	return o
}

// A value indicating the authentication type.
func (o HyperVReplicaBasePolicyDetailsResponseOutput) AllowedAuthenticationType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBasePolicyDetailsResponse) *int { return v.AllowedAuthenticationType }).(pulumi.IntPtrOutput)
}

// A value indicating the application consistent frequency.
func (o HyperVReplicaBasePolicyDetailsResponseOutput) ApplicationConsistentSnapshotFrequencyInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBasePolicyDetailsResponse) *int {
		return v.ApplicationConsistentSnapshotFrequencyInHours
	}).(pulumi.IntPtrOutput)
}

// A value indicating whether compression has to be enabled.
func (o HyperVReplicaBasePolicyDetailsResponseOutput) Compression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBasePolicyDetailsResponse) *string { return v.Compression }).(pulumi.StringPtrOutput)
}

// A value indicating whether IR is online.
func (o HyperVReplicaBasePolicyDetailsResponseOutput) InitialReplicationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBasePolicyDetailsResponse) *string { return v.InitialReplicationMethod }).(pulumi.StringPtrOutput)
}

// Gets the class type. Overridden in derived classes.
func (o HyperVReplicaBasePolicyDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v HyperVReplicaBasePolicyDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// A value indicating the offline IR export path.
func (o HyperVReplicaBasePolicyDetailsResponseOutput) OfflineReplicationExportPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBasePolicyDetailsResponse) *string { return v.OfflineReplicationExportPath }).(pulumi.StringPtrOutput)
}

// A value indicating the offline IR import path.
func (o HyperVReplicaBasePolicyDetailsResponseOutput) OfflineReplicationImportPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBasePolicyDetailsResponse) *string { return v.OfflineReplicationImportPath }).(pulumi.StringPtrOutput)
}

// A value indicating the online IR start time.
func (o HyperVReplicaBasePolicyDetailsResponseOutput) OnlineReplicationStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBasePolicyDetailsResponse) *string { return v.OnlineReplicationStartTime }).(pulumi.StringPtrOutput)
}

// A value indicating the number of recovery points.
func (o HyperVReplicaBasePolicyDetailsResponseOutput) RecoveryPoints() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBasePolicyDetailsResponse) *int { return v.RecoveryPoints }).(pulumi.IntPtrOutput)
}

// A value indicating whether the VM has to be auto deleted. Supported Values: String.Empty, None, OnRecoveryCloud
func (o HyperVReplicaBasePolicyDetailsResponseOutput) ReplicaDeletionOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBasePolicyDetailsResponse) *string { return v.ReplicaDeletionOption }).(pulumi.StringPtrOutput)
}

// A value indicating the recovery HTTPS port.
func (o HyperVReplicaBasePolicyDetailsResponseOutput) ReplicationPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBasePolicyDetailsResponse) *int { return v.ReplicationPort }).(pulumi.IntPtrOutput)
}

// Hyper V replica provider specific settings base class.
type HyperVReplicaBaseReplicationDetailsResponse struct {
	// Initial replication details.
	InitialReplicationDetails *InitialReplicationDetailsResponse `pulumi:"initialReplicationDetails"`
	// Gets the Instance type.
	InstanceType string `pulumi:"instanceType"`
	// The Last replication time.
	LastReplicatedTime *string `pulumi:"lastReplicatedTime"`
	// VM disk details.
	VMDiskDetails []DiskDetailsResponse `pulumi:"vMDiskDetails"`
	// The virtual machine Id.
	VmId *string `pulumi:"vmId"`
	// The PE Network details.
	VmNics []VMNicDetailsResponse `pulumi:"vmNics"`
	// The protection state for the vm.
	VmProtectionState *string `pulumi:"vmProtectionState"`
	// The protection state description for the vm.
	VmProtectionStateDescription *string `pulumi:"vmProtectionStateDescription"`
}

// Hyper V replica provider specific settings base class.
type HyperVReplicaBaseReplicationDetailsResponseOutput struct{ *pulumi.OutputState }

func (HyperVReplicaBaseReplicationDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVReplicaBaseReplicationDetailsResponse)(nil)).Elem()
}

func (o HyperVReplicaBaseReplicationDetailsResponseOutput) ToHyperVReplicaBaseReplicationDetailsResponseOutput() HyperVReplicaBaseReplicationDetailsResponseOutput {
	return o
}

func (o HyperVReplicaBaseReplicationDetailsResponseOutput) ToHyperVReplicaBaseReplicationDetailsResponseOutputWithContext(ctx context.Context) HyperVReplicaBaseReplicationDetailsResponseOutput {
	return o
}

// Initial replication details.
func (o HyperVReplicaBaseReplicationDetailsResponseOutput) InitialReplicationDetails() InitialReplicationDetailsResponsePtrOutput {
	return o.ApplyT(func(v HyperVReplicaBaseReplicationDetailsResponse) *InitialReplicationDetailsResponse {
		return v.InitialReplicationDetails
	}).(InitialReplicationDetailsResponsePtrOutput)
}

// Gets the Instance type.
func (o HyperVReplicaBaseReplicationDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v HyperVReplicaBaseReplicationDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The Last replication time.
func (o HyperVReplicaBaseReplicationDetailsResponseOutput) LastReplicatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBaseReplicationDetailsResponse) *string { return v.LastReplicatedTime }).(pulumi.StringPtrOutput)
}

// VM disk details.
func (o HyperVReplicaBaseReplicationDetailsResponseOutput) VMDiskDetails() DiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v HyperVReplicaBaseReplicationDetailsResponse) []DiskDetailsResponse { return v.VMDiskDetails }).(DiskDetailsResponseArrayOutput)
}

// The virtual machine Id.
func (o HyperVReplicaBaseReplicationDetailsResponseOutput) VmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBaseReplicationDetailsResponse) *string { return v.VmId }).(pulumi.StringPtrOutput)
}

// The PE Network details.
func (o HyperVReplicaBaseReplicationDetailsResponseOutput) VmNics() VMNicDetailsResponseArrayOutput {
	return o.ApplyT(func(v HyperVReplicaBaseReplicationDetailsResponse) []VMNicDetailsResponse { return v.VmNics }).(VMNicDetailsResponseArrayOutput)
}

// The protection state for the vm.
func (o HyperVReplicaBaseReplicationDetailsResponseOutput) VmProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBaseReplicationDetailsResponse) *string { return v.VmProtectionState }).(pulumi.StringPtrOutput)
}

// The protection state description for the vm.
func (o HyperVReplicaBaseReplicationDetailsResponseOutput) VmProtectionStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBaseReplicationDetailsResponse) *string { return v.VmProtectionStateDescription }).(pulumi.StringPtrOutput)
}

// Hyper-V Replica Blue specific protection profile details.
type HyperVReplicaBluePolicyDetailsResponse struct {
	// A value indicating the authentication type.
	AllowedAuthenticationType *int `pulumi:"allowedAuthenticationType"`
	// A value indicating the application consistent frequency.
	ApplicationConsistentSnapshotFrequencyInHours *int `pulumi:"applicationConsistentSnapshotFrequencyInHours"`
	// A value indicating whether compression has to be enabled.
	Compression *string `pulumi:"compression"`
	// A value indicating whether IR is online.
	InitialReplicationMethod *string `pulumi:"initialReplicationMethod"`
	// Gets the class type. Overridden in derived classes.
	InstanceType string `pulumi:"instanceType"`
	// A value indicating the offline IR export path.
	OfflineReplicationExportPath *string `pulumi:"offlineReplicationExportPath"`
	// A value indicating the offline IR import path.
	OfflineReplicationImportPath *string `pulumi:"offlineReplicationImportPath"`
	// A value indicating the online IR start time.
	OnlineReplicationStartTime *string `pulumi:"onlineReplicationStartTime"`
	// A value indicating the number of recovery points.
	RecoveryPoints *int `pulumi:"recoveryPoints"`
	// A value indicating whether the VM has to be auto deleted. Supported Values: String.Empty, None, OnRecoveryCloud
	ReplicaDeletionOption *string `pulumi:"replicaDeletionOption"`
	// A value indicating the replication interval.
	ReplicationFrequencyInSeconds *int `pulumi:"replicationFrequencyInSeconds"`
	// A value indicating the recovery HTTPS port.
	ReplicationPort *int `pulumi:"replicationPort"`
}

// Hyper-V Replica Blue specific protection profile details.
type HyperVReplicaBluePolicyDetailsResponseOutput struct{ *pulumi.OutputState }

func (HyperVReplicaBluePolicyDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVReplicaBluePolicyDetailsResponse)(nil)).Elem()
}

func (o HyperVReplicaBluePolicyDetailsResponseOutput) ToHyperVReplicaBluePolicyDetailsResponseOutput() HyperVReplicaBluePolicyDetailsResponseOutput {
	return o
}

func (o HyperVReplicaBluePolicyDetailsResponseOutput) ToHyperVReplicaBluePolicyDetailsResponseOutputWithContext(ctx context.Context) HyperVReplicaBluePolicyDetailsResponseOutput {
	return o
}

// A value indicating the authentication type.
func (o HyperVReplicaBluePolicyDetailsResponseOutput) AllowedAuthenticationType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyDetailsResponse) *int { return v.AllowedAuthenticationType }).(pulumi.IntPtrOutput)
}

// A value indicating the application consistent frequency.
func (o HyperVReplicaBluePolicyDetailsResponseOutput) ApplicationConsistentSnapshotFrequencyInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyDetailsResponse) *int {
		return v.ApplicationConsistentSnapshotFrequencyInHours
	}).(pulumi.IntPtrOutput)
}

// A value indicating whether compression has to be enabled.
func (o HyperVReplicaBluePolicyDetailsResponseOutput) Compression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyDetailsResponse) *string { return v.Compression }).(pulumi.StringPtrOutput)
}

// A value indicating whether IR is online.
func (o HyperVReplicaBluePolicyDetailsResponseOutput) InitialReplicationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyDetailsResponse) *string { return v.InitialReplicationMethod }).(pulumi.StringPtrOutput)
}

// Gets the class type. Overridden in derived classes.
func (o HyperVReplicaBluePolicyDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// A value indicating the offline IR export path.
func (o HyperVReplicaBluePolicyDetailsResponseOutput) OfflineReplicationExportPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyDetailsResponse) *string { return v.OfflineReplicationExportPath }).(pulumi.StringPtrOutput)
}

// A value indicating the offline IR import path.
func (o HyperVReplicaBluePolicyDetailsResponseOutput) OfflineReplicationImportPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyDetailsResponse) *string { return v.OfflineReplicationImportPath }).(pulumi.StringPtrOutput)
}

// A value indicating the online IR start time.
func (o HyperVReplicaBluePolicyDetailsResponseOutput) OnlineReplicationStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyDetailsResponse) *string { return v.OnlineReplicationStartTime }).(pulumi.StringPtrOutput)
}

// A value indicating the number of recovery points.
func (o HyperVReplicaBluePolicyDetailsResponseOutput) RecoveryPoints() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyDetailsResponse) *int { return v.RecoveryPoints }).(pulumi.IntPtrOutput)
}

// A value indicating whether the VM has to be auto deleted. Supported Values: String.Empty, None, OnRecoveryCloud
func (o HyperVReplicaBluePolicyDetailsResponseOutput) ReplicaDeletionOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyDetailsResponse) *string { return v.ReplicaDeletionOption }).(pulumi.StringPtrOutput)
}

// A value indicating the replication interval.
func (o HyperVReplicaBluePolicyDetailsResponseOutput) ReplicationFrequencyInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyDetailsResponse) *int { return v.ReplicationFrequencyInSeconds }).(pulumi.IntPtrOutput)
}

// A value indicating the recovery HTTPS port.
func (o HyperVReplicaBluePolicyDetailsResponseOutput) ReplicationPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyDetailsResponse) *int { return v.ReplicationPort }).(pulumi.IntPtrOutput)
}

// HyperV Replica Blue policy input.
type HyperVReplicaBluePolicyInput struct {
	// A value indicating the authentication type.
	AllowedAuthenticationType *int `pulumi:"allowedAuthenticationType"`
	// A value indicating the application consistent frequency.
	ApplicationConsistentSnapshotFrequencyInHours *int `pulumi:"applicationConsistentSnapshotFrequencyInHours"`
	// A value indicating whether compression has to be enabled.
	Compression *string `pulumi:"compression"`
	// A value indicating whether IR is online.
	InitialReplicationMethod *string `pulumi:"initialReplicationMethod"`
	// The class type.
	InstanceType *string `pulumi:"instanceType"`
	// A value indicating the offline IR export path.
	OfflineReplicationExportPath *string `pulumi:"offlineReplicationExportPath"`
	// A value indicating the offline IR import path.
	OfflineReplicationImportPath *string `pulumi:"offlineReplicationImportPath"`
	// A value indicating the online IR start time.
	OnlineReplicationStartTime *string `pulumi:"onlineReplicationStartTime"`
	// A value indicating the number of recovery points.
	RecoveryPoints *int `pulumi:"recoveryPoints"`
	// A value indicating whether the VM has to be auto deleted.
	ReplicaDeletion *string `pulumi:"replicaDeletion"`
	// A value indicating the replication interval.
	ReplicationFrequencyInSeconds *int `pulumi:"replicationFrequencyInSeconds"`
	// A value indicating the recovery HTTPS port.
	ReplicationPort *int `pulumi:"replicationPort"`
}

// HyperVReplicaBluePolicyInputInput is an input type that accepts HyperVReplicaBluePolicyInputArgs and HyperVReplicaBluePolicyInputOutput values.
// You can construct a concrete instance of `HyperVReplicaBluePolicyInputInput` via:
//
//          HyperVReplicaBluePolicyInputArgs{...}
type HyperVReplicaBluePolicyInputInput interface {
	pulumi.Input

	ToHyperVReplicaBluePolicyInputOutput() HyperVReplicaBluePolicyInputOutput
	ToHyperVReplicaBluePolicyInputOutputWithContext(context.Context) HyperVReplicaBluePolicyInputOutput
}

// HyperV Replica Blue policy input.
type HyperVReplicaBluePolicyInputArgs struct {
	// A value indicating the authentication type.
	AllowedAuthenticationType pulumi.IntPtrInput `pulumi:"allowedAuthenticationType"`
	// A value indicating the application consistent frequency.
	ApplicationConsistentSnapshotFrequencyInHours pulumi.IntPtrInput `pulumi:"applicationConsistentSnapshotFrequencyInHours"`
	// A value indicating whether compression has to be enabled.
	Compression pulumi.StringPtrInput `pulumi:"compression"`
	// A value indicating whether IR is online.
	InitialReplicationMethod pulumi.StringPtrInput `pulumi:"initialReplicationMethod"`
	// The class type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// A value indicating the offline IR export path.
	OfflineReplicationExportPath pulumi.StringPtrInput `pulumi:"offlineReplicationExportPath"`
	// A value indicating the offline IR import path.
	OfflineReplicationImportPath pulumi.StringPtrInput `pulumi:"offlineReplicationImportPath"`
	// A value indicating the online IR start time.
	OnlineReplicationStartTime pulumi.StringPtrInput `pulumi:"onlineReplicationStartTime"`
	// A value indicating the number of recovery points.
	RecoveryPoints pulumi.IntPtrInput `pulumi:"recoveryPoints"`
	// A value indicating whether the VM has to be auto deleted.
	ReplicaDeletion pulumi.StringPtrInput `pulumi:"replicaDeletion"`
	// A value indicating the replication interval.
	ReplicationFrequencyInSeconds pulumi.IntPtrInput `pulumi:"replicationFrequencyInSeconds"`
	// A value indicating the recovery HTTPS port.
	ReplicationPort pulumi.IntPtrInput `pulumi:"replicationPort"`
}

func (HyperVReplicaBluePolicyInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVReplicaBluePolicyInput)(nil)).Elem()
}

func (i HyperVReplicaBluePolicyInputArgs) ToHyperVReplicaBluePolicyInputOutput() HyperVReplicaBluePolicyInputOutput {
	return i.ToHyperVReplicaBluePolicyInputOutputWithContext(context.Background())
}

func (i HyperVReplicaBluePolicyInputArgs) ToHyperVReplicaBluePolicyInputOutputWithContext(ctx context.Context) HyperVReplicaBluePolicyInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HyperVReplicaBluePolicyInputOutput)
}

// HyperV replica 2012 R2 (Blue) replication details.
type HyperVReplicaBlueReplicationDetailsResponse struct {
	// Initial replication details.
	InitialReplicationDetails *InitialReplicationDetailsResponse `pulumi:"initialReplicationDetails"`
	// Gets the Instance type.
	InstanceType string `pulumi:"instanceType"`
	// The Last replication time.
	LastReplicatedTime *string `pulumi:"lastReplicatedTime"`
	// VM disk details.
	VMDiskDetails []DiskDetailsResponse `pulumi:"vMDiskDetails"`
	// The virtual machine Id.
	VmId *string `pulumi:"vmId"`
	// The PE Network details.
	VmNics []VMNicDetailsResponse `pulumi:"vmNics"`
	// The protection state for the vm.
	VmProtectionState *string `pulumi:"vmProtectionState"`
	// The protection state description for the vm.
	VmProtectionStateDescription *string `pulumi:"vmProtectionStateDescription"`
}

// HyperV replica 2012 R2 (Blue) replication details.
type HyperVReplicaBlueReplicationDetailsResponseOutput struct{ *pulumi.OutputState }

func (HyperVReplicaBlueReplicationDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVReplicaBlueReplicationDetailsResponse)(nil)).Elem()
}

func (o HyperVReplicaBlueReplicationDetailsResponseOutput) ToHyperVReplicaBlueReplicationDetailsResponseOutput() HyperVReplicaBlueReplicationDetailsResponseOutput {
	return o
}

func (o HyperVReplicaBlueReplicationDetailsResponseOutput) ToHyperVReplicaBlueReplicationDetailsResponseOutputWithContext(ctx context.Context) HyperVReplicaBlueReplicationDetailsResponseOutput {
	return o
}

// Initial replication details.
func (o HyperVReplicaBlueReplicationDetailsResponseOutput) InitialReplicationDetails() InitialReplicationDetailsResponsePtrOutput {
	return o.ApplyT(func(v HyperVReplicaBlueReplicationDetailsResponse) *InitialReplicationDetailsResponse {
		return v.InitialReplicationDetails
	}).(InitialReplicationDetailsResponsePtrOutput)
}

// Gets the Instance type.
func (o HyperVReplicaBlueReplicationDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v HyperVReplicaBlueReplicationDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The Last replication time.
func (o HyperVReplicaBlueReplicationDetailsResponseOutput) LastReplicatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBlueReplicationDetailsResponse) *string { return v.LastReplicatedTime }).(pulumi.StringPtrOutput)
}

// VM disk details.
func (o HyperVReplicaBlueReplicationDetailsResponseOutput) VMDiskDetails() DiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v HyperVReplicaBlueReplicationDetailsResponse) []DiskDetailsResponse { return v.VMDiskDetails }).(DiskDetailsResponseArrayOutput)
}

// The virtual machine Id.
func (o HyperVReplicaBlueReplicationDetailsResponseOutput) VmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBlueReplicationDetailsResponse) *string { return v.VmId }).(pulumi.StringPtrOutput)
}

// The PE Network details.
func (o HyperVReplicaBlueReplicationDetailsResponseOutput) VmNics() VMNicDetailsResponseArrayOutput {
	return o.ApplyT(func(v HyperVReplicaBlueReplicationDetailsResponse) []VMNicDetailsResponse { return v.VmNics }).(VMNicDetailsResponseArrayOutput)
}

// The protection state for the vm.
func (o HyperVReplicaBlueReplicationDetailsResponseOutput) VmProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBlueReplicationDetailsResponse) *string { return v.VmProtectionState }).(pulumi.StringPtrOutput)
}

// The protection state description for the vm.
func (o HyperVReplicaBlueReplicationDetailsResponseOutput) VmProtectionStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBlueReplicationDetailsResponse) *string { return v.VmProtectionStateDescription }).(pulumi.StringPtrOutput)
}

// Hyper-V Replica Blue specific protection profile details.
type HyperVReplicaPolicyDetailsResponse struct {
	// A value indicating the authentication type.
	AllowedAuthenticationType *int `pulumi:"allowedAuthenticationType"`
	// A value indicating the application consistent frequency.
	ApplicationConsistentSnapshotFrequencyInHours *int `pulumi:"applicationConsistentSnapshotFrequencyInHours"`
	// A value indicating whether compression has to be enabled.
	Compression *string `pulumi:"compression"`
	// A value indicating whether IR is online.
	InitialReplicationMethod *string `pulumi:"initialReplicationMethod"`
	// Gets the class type. Overridden in derived classes.
	InstanceType string `pulumi:"instanceType"`
	// A value indicating the offline IR export path.
	OfflineReplicationExportPath *string `pulumi:"offlineReplicationExportPath"`
	// A value indicating the offline IR import path.
	OfflineReplicationImportPath *string `pulumi:"offlineReplicationImportPath"`
	// A value indicating the online IR start time.
	OnlineReplicationStartTime *string `pulumi:"onlineReplicationStartTime"`
	// A value indicating the number of recovery points.
	RecoveryPoints *int `pulumi:"recoveryPoints"`
	// A value indicating whether the VM has to be auto deleted. Supported Values: String.Empty, None, OnRecoveryCloud
	ReplicaDeletionOption *string `pulumi:"replicaDeletionOption"`
	// A value indicating the recovery HTTPS port.
	ReplicationPort *int `pulumi:"replicationPort"`
}

// Hyper-V Replica Blue specific protection profile details.
type HyperVReplicaPolicyDetailsResponseOutput struct{ *pulumi.OutputState }

func (HyperVReplicaPolicyDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVReplicaPolicyDetailsResponse)(nil)).Elem()
}

func (o HyperVReplicaPolicyDetailsResponseOutput) ToHyperVReplicaPolicyDetailsResponseOutput() HyperVReplicaPolicyDetailsResponseOutput {
	return o
}

func (o HyperVReplicaPolicyDetailsResponseOutput) ToHyperVReplicaPolicyDetailsResponseOutputWithContext(ctx context.Context) HyperVReplicaPolicyDetailsResponseOutput {
	return o
}

// A value indicating the authentication type.
func (o HyperVReplicaPolicyDetailsResponseOutput) AllowedAuthenticationType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaPolicyDetailsResponse) *int { return v.AllowedAuthenticationType }).(pulumi.IntPtrOutput)
}

// A value indicating the application consistent frequency.
func (o HyperVReplicaPolicyDetailsResponseOutput) ApplicationConsistentSnapshotFrequencyInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaPolicyDetailsResponse) *int {
		return v.ApplicationConsistentSnapshotFrequencyInHours
	}).(pulumi.IntPtrOutput)
}

// A value indicating whether compression has to be enabled.
func (o HyperVReplicaPolicyDetailsResponseOutput) Compression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaPolicyDetailsResponse) *string { return v.Compression }).(pulumi.StringPtrOutput)
}

// A value indicating whether IR is online.
func (o HyperVReplicaPolicyDetailsResponseOutput) InitialReplicationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaPolicyDetailsResponse) *string { return v.InitialReplicationMethod }).(pulumi.StringPtrOutput)
}

// Gets the class type. Overridden in derived classes.
func (o HyperVReplicaPolicyDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v HyperVReplicaPolicyDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// A value indicating the offline IR export path.
func (o HyperVReplicaPolicyDetailsResponseOutput) OfflineReplicationExportPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaPolicyDetailsResponse) *string { return v.OfflineReplicationExportPath }).(pulumi.StringPtrOutput)
}

// A value indicating the offline IR import path.
func (o HyperVReplicaPolicyDetailsResponseOutput) OfflineReplicationImportPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaPolicyDetailsResponse) *string { return v.OfflineReplicationImportPath }).(pulumi.StringPtrOutput)
}

// A value indicating the online IR start time.
func (o HyperVReplicaPolicyDetailsResponseOutput) OnlineReplicationStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaPolicyDetailsResponse) *string { return v.OnlineReplicationStartTime }).(pulumi.StringPtrOutput)
}

// A value indicating the number of recovery points.
func (o HyperVReplicaPolicyDetailsResponseOutput) RecoveryPoints() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaPolicyDetailsResponse) *int { return v.RecoveryPoints }).(pulumi.IntPtrOutput)
}

// A value indicating whether the VM has to be auto deleted. Supported Values: String.Empty, None, OnRecoveryCloud
func (o HyperVReplicaPolicyDetailsResponseOutput) ReplicaDeletionOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaPolicyDetailsResponse) *string { return v.ReplicaDeletionOption }).(pulumi.StringPtrOutput)
}

// A value indicating the recovery HTTPS port.
func (o HyperVReplicaPolicyDetailsResponseOutput) ReplicationPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaPolicyDetailsResponse) *int { return v.ReplicationPort }).(pulumi.IntPtrOutput)
}

// Hyper-V Replica specific protection profile Input.
type HyperVReplicaPolicyInput struct {
	// A value indicating the authentication type.
	AllowedAuthenticationType *int `pulumi:"allowedAuthenticationType"`
	// A value indicating the application consistent frequency.
	ApplicationConsistentSnapshotFrequencyInHours *int `pulumi:"applicationConsistentSnapshotFrequencyInHours"`
	// A value indicating whether compression has to be enabled.
	Compression *string `pulumi:"compression"`
	// A value indicating whether IR is online.
	InitialReplicationMethod *string `pulumi:"initialReplicationMethod"`
	// The class type.
	InstanceType *string `pulumi:"instanceType"`
	// A value indicating the offline IR export path.
	OfflineReplicationExportPath *string `pulumi:"offlineReplicationExportPath"`
	// A value indicating the offline IR import path.
	OfflineReplicationImportPath *string `pulumi:"offlineReplicationImportPath"`
	// A value indicating the online IR start time.
	OnlineReplicationStartTime *string `pulumi:"onlineReplicationStartTime"`
	// A value indicating the number of recovery points.
	RecoveryPoints *int `pulumi:"recoveryPoints"`
	// A value indicating whether the VM has to be auto deleted.
	ReplicaDeletion *string `pulumi:"replicaDeletion"`
	// A value indicating the recovery HTTPS port.
	ReplicationPort *int `pulumi:"replicationPort"`
}

// HyperVReplicaPolicyInputInput is an input type that accepts HyperVReplicaPolicyInputArgs and HyperVReplicaPolicyInputOutput values.
// You can construct a concrete instance of `HyperVReplicaPolicyInputInput` via:
//
//          HyperVReplicaPolicyInputArgs{...}
type HyperVReplicaPolicyInputInput interface {
	pulumi.Input

	ToHyperVReplicaPolicyInputOutput() HyperVReplicaPolicyInputOutput
	ToHyperVReplicaPolicyInputOutputWithContext(context.Context) HyperVReplicaPolicyInputOutput
}

// Hyper-V Replica specific protection profile Input.
type HyperVReplicaPolicyInputArgs struct {
	// A value indicating the authentication type.
	AllowedAuthenticationType pulumi.IntPtrInput `pulumi:"allowedAuthenticationType"`
	// A value indicating the application consistent frequency.
	ApplicationConsistentSnapshotFrequencyInHours pulumi.IntPtrInput `pulumi:"applicationConsistentSnapshotFrequencyInHours"`
	// A value indicating whether compression has to be enabled.
	Compression pulumi.StringPtrInput `pulumi:"compression"`
	// A value indicating whether IR is online.
	InitialReplicationMethod pulumi.StringPtrInput `pulumi:"initialReplicationMethod"`
	// The class type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// A value indicating the offline IR export path.
	OfflineReplicationExportPath pulumi.StringPtrInput `pulumi:"offlineReplicationExportPath"`
	// A value indicating the offline IR import path.
	OfflineReplicationImportPath pulumi.StringPtrInput `pulumi:"offlineReplicationImportPath"`
	// A value indicating the online IR start time.
	OnlineReplicationStartTime pulumi.StringPtrInput `pulumi:"onlineReplicationStartTime"`
	// A value indicating the number of recovery points.
	RecoveryPoints pulumi.IntPtrInput `pulumi:"recoveryPoints"`
	// A value indicating whether the VM has to be auto deleted.
	ReplicaDeletion pulumi.StringPtrInput `pulumi:"replicaDeletion"`
	// A value indicating the recovery HTTPS port.
	ReplicationPort pulumi.IntPtrInput `pulumi:"replicationPort"`
}

func (HyperVReplicaPolicyInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVReplicaPolicyInput)(nil)).Elem()
}

func (i HyperVReplicaPolicyInputArgs) ToHyperVReplicaPolicyInputOutput() HyperVReplicaPolicyInputOutput {
	return i.ToHyperVReplicaPolicyInputOutputWithContext(context.Background())
}

func (i HyperVReplicaPolicyInputArgs) ToHyperVReplicaPolicyInputOutputWithContext(ctx context.Context) HyperVReplicaPolicyInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HyperVReplicaPolicyInputOutput)
}

// HyperV replica 2012 replication details.
type HyperVReplicaReplicationDetailsResponse struct {
	// Initial replication details.
	InitialReplicationDetails *InitialReplicationDetailsResponse `pulumi:"initialReplicationDetails"`
	// Gets the Instance type.
	InstanceType string `pulumi:"instanceType"`
	// The Last replication time.
	LastReplicatedTime *string `pulumi:"lastReplicatedTime"`
	// VM disk details.
	VMDiskDetails []DiskDetailsResponse `pulumi:"vMDiskDetails"`
	// The virtual machine Id.
	VmId *string `pulumi:"vmId"`
	// The PE Network details.
	VmNics []VMNicDetailsResponse `pulumi:"vmNics"`
	// The protection state for the vm.
	VmProtectionState *string `pulumi:"vmProtectionState"`
	// The protection state description for the vm.
	VmProtectionStateDescription *string `pulumi:"vmProtectionStateDescription"`
}

// HyperV replica 2012 replication details.
type HyperVReplicaReplicationDetailsResponseOutput struct{ *pulumi.OutputState }

func (HyperVReplicaReplicationDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVReplicaReplicationDetailsResponse)(nil)).Elem()
}

func (o HyperVReplicaReplicationDetailsResponseOutput) ToHyperVReplicaReplicationDetailsResponseOutput() HyperVReplicaReplicationDetailsResponseOutput {
	return o
}

func (o HyperVReplicaReplicationDetailsResponseOutput) ToHyperVReplicaReplicationDetailsResponseOutputWithContext(ctx context.Context) HyperVReplicaReplicationDetailsResponseOutput {
	return o
}

// Initial replication details.
func (o HyperVReplicaReplicationDetailsResponseOutput) InitialReplicationDetails() InitialReplicationDetailsResponsePtrOutput {
	return o.ApplyT(func(v HyperVReplicaReplicationDetailsResponse) *InitialReplicationDetailsResponse {
		return v.InitialReplicationDetails
	}).(InitialReplicationDetailsResponsePtrOutput)
}

// Gets the Instance type.
func (o HyperVReplicaReplicationDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v HyperVReplicaReplicationDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The Last replication time.
func (o HyperVReplicaReplicationDetailsResponseOutput) LastReplicatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaReplicationDetailsResponse) *string { return v.LastReplicatedTime }).(pulumi.StringPtrOutput)
}

// VM disk details.
func (o HyperVReplicaReplicationDetailsResponseOutput) VMDiskDetails() DiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v HyperVReplicaReplicationDetailsResponse) []DiskDetailsResponse { return v.VMDiskDetails }).(DiskDetailsResponseArrayOutput)
}

// The virtual machine Id.
func (o HyperVReplicaReplicationDetailsResponseOutput) VmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaReplicationDetailsResponse) *string { return v.VmId }).(pulumi.StringPtrOutput)
}

// The PE Network details.
func (o HyperVReplicaReplicationDetailsResponseOutput) VmNics() VMNicDetailsResponseArrayOutput {
	return o.ApplyT(func(v HyperVReplicaReplicationDetailsResponse) []VMNicDetailsResponse { return v.VmNics }).(VMNicDetailsResponseArrayOutput)
}

// The protection state for the vm.
func (o HyperVReplicaReplicationDetailsResponseOutput) VmProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaReplicationDetailsResponse) *string { return v.VmProtectionState }).(pulumi.StringPtrOutput)
}

// The protection state description for the vm.
func (o HyperVReplicaReplicationDetailsResponseOutput) VmProtectionStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaReplicationDetailsResponse) *string { return v.VmProtectionStateDescription }).(pulumi.StringPtrOutput)
}

// HyperVSite fabric specific details.
type HyperVSiteDetailsResponse struct {
	// Gets the class type. Overridden in derived classes.
	InstanceType string `pulumi:"instanceType"`
}

// HyperVSite fabric specific details.
type HyperVSiteDetailsResponseOutput struct{ *pulumi.OutputState }

func (HyperVSiteDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVSiteDetailsResponse)(nil)).Elem()
}

func (o HyperVSiteDetailsResponseOutput) ToHyperVSiteDetailsResponseOutput() HyperVSiteDetailsResponseOutput {
	return o
}

func (o HyperVSiteDetailsResponseOutput) ToHyperVSiteDetailsResponseOutputWithContext(ctx context.Context) HyperVSiteDetailsResponseOutput {
	return o
}

// Gets the class type. Overridden in derived classes.
func (o HyperVSiteDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v HyperVSiteDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The details of the InMage agent.
type InMageAgentDetailsResponse struct {
	// A value indicating whether installed agent needs to be updated.
	AgentUpdateStatus *string `pulumi:"agentUpdateStatus"`
	// The agent version.
	AgentVersion *string `pulumi:"agentVersion"`
	// A value indicating whether reboot is required after update is applied.
	PostUpdateRebootStatus *string `pulumi:"postUpdateRebootStatus"`
}

// The details of the InMage agent.
type InMageAgentDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMageAgentDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageAgentDetailsResponse)(nil)).Elem()
}

func (o InMageAgentDetailsResponseOutput) ToInMageAgentDetailsResponseOutput() InMageAgentDetailsResponseOutput {
	return o
}

func (o InMageAgentDetailsResponseOutput) ToInMageAgentDetailsResponseOutputWithContext(ctx context.Context) InMageAgentDetailsResponseOutput {
	return o
}

func (o InMageAgentDetailsResponseOutput) ToInMageAgentDetailsResponsePtrOutput() InMageAgentDetailsResponsePtrOutput {
	return o.ToInMageAgentDetailsResponsePtrOutputWithContext(context.Background())
}

func (o InMageAgentDetailsResponseOutput) ToInMageAgentDetailsResponsePtrOutputWithContext(ctx context.Context) InMageAgentDetailsResponsePtrOutput {
	return o.ApplyT(func(v InMageAgentDetailsResponse) *InMageAgentDetailsResponse {
		return &v
	}).(InMageAgentDetailsResponsePtrOutput)
}

// A value indicating whether installed agent needs to be updated.
func (o InMageAgentDetailsResponseOutput) AgentUpdateStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAgentDetailsResponse) *string { return v.AgentUpdateStatus }).(pulumi.StringPtrOutput)
}

// The agent version.
func (o InMageAgentDetailsResponseOutput) AgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAgentDetailsResponse) *string { return v.AgentVersion }).(pulumi.StringPtrOutput)
}

// A value indicating whether reboot is required after update is applied.
func (o InMageAgentDetailsResponseOutput) PostUpdateRebootStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAgentDetailsResponse) *string { return v.PostUpdateRebootStatus }).(pulumi.StringPtrOutput)
}

type InMageAgentDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (InMageAgentDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InMageAgentDetailsResponse)(nil)).Elem()
}

func (o InMageAgentDetailsResponsePtrOutput) ToInMageAgentDetailsResponsePtrOutput() InMageAgentDetailsResponsePtrOutput {
	return o
}

func (o InMageAgentDetailsResponsePtrOutput) ToInMageAgentDetailsResponsePtrOutputWithContext(ctx context.Context) InMageAgentDetailsResponsePtrOutput {
	return o
}

func (o InMageAgentDetailsResponsePtrOutput) Elem() InMageAgentDetailsResponseOutput {
	return o.ApplyT(func(v *InMageAgentDetailsResponse) InMageAgentDetailsResponse { return *v }).(InMageAgentDetailsResponseOutput)
}

// A value indicating whether installed agent needs to be updated.
func (o InMageAgentDetailsResponsePtrOutput) AgentUpdateStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAgentDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AgentUpdateStatus
	}).(pulumi.StringPtrOutput)
}

// The agent version.
func (o InMageAgentDetailsResponsePtrOutput) AgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAgentDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AgentVersion
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether reboot is required after update is applied.
func (o InMageAgentDetailsResponsePtrOutput) PostUpdateRebootStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAgentDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.PostUpdateRebootStatus
	}).(pulumi.StringPtrOutput)
}

// VMware Azure specific enable protection input.
type InMageAzureV2EnableProtectionInput struct {
	// The disks to include list.
	DisksToInclude []string `pulumi:"disksToInclude"`
	// The selected option to enable RDP\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum.
	EnableRDPOnTargetOption *string `pulumi:"enableRDPOnTargetOption"`
	// The class type.
	InstanceType *string `pulumi:"instanceType"`
	// The storage account to be used for logging during replication.
	LogStorageAccountId *string `pulumi:"logStorageAccountId"`
	// The Master target Id.
	MasterTargetId *string `pulumi:"masterTargetId"`
	// The multi vm group Id.
	MultiVmGroupId *string `pulumi:"multiVmGroupId"`
	// The multi vm group name.
	MultiVmGroupName *string `pulumi:"multiVmGroupName"`
	// The Process Server Id.
	ProcessServerId *string `pulumi:"processServerId"`
	// The CS account Id.
	RunAsAccountId *string `pulumi:"runAsAccountId"`
	// The storage account name.
	StorageAccountId string `pulumi:"storageAccountId"`
	// The selected target Azure network Id.
	TargetAzureNetworkId *string `pulumi:"targetAzureNetworkId"`
	// The selected target Azure subnet Id.
	TargetAzureSubnetId *string `pulumi:"targetAzureSubnetId"`
	// The Id of the target resource group (for classic deployment) in which the failover VM is to be created.
	TargetAzureV1ResourceGroupId *string `pulumi:"targetAzureV1ResourceGroupId"`
	// The Id of the target resource group (for resource manager deployment) in which the failover VM is to be created.
	TargetAzureV2ResourceGroupId *string `pulumi:"targetAzureV2ResourceGroupId"`
	// The target azure Vm Name.
	TargetAzureVmName *string `pulumi:"targetAzureVmName"`
	// A value indicating whether managed disks should be used during failover.
	UseManagedDisks *string `pulumi:"useManagedDisks"`
}

// InMageAzureV2EnableProtectionInputInput is an input type that accepts InMageAzureV2EnableProtectionInputArgs and InMageAzureV2EnableProtectionInputOutput values.
// You can construct a concrete instance of `InMageAzureV2EnableProtectionInputInput` via:
//
//          InMageAzureV2EnableProtectionInputArgs{...}
type InMageAzureV2EnableProtectionInputInput interface {
	pulumi.Input

	ToInMageAzureV2EnableProtectionInputOutput() InMageAzureV2EnableProtectionInputOutput
	ToInMageAzureV2EnableProtectionInputOutputWithContext(context.Context) InMageAzureV2EnableProtectionInputOutput
}

// VMware Azure specific enable protection input.
type InMageAzureV2EnableProtectionInputArgs struct {
	// The disks to include list.
	DisksToInclude pulumi.StringArrayInput `pulumi:"disksToInclude"`
	// The selected option to enable RDP\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum.
	EnableRDPOnTargetOption pulumi.StringPtrInput `pulumi:"enableRDPOnTargetOption"`
	// The class type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// The storage account to be used for logging during replication.
	LogStorageAccountId pulumi.StringPtrInput `pulumi:"logStorageAccountId"`
	// The Master target Id.
	MasterTargetId pulumi.StringPtrInput `pulumi:"masterTargetId"`
	// The multi vm group Id.
	MultiVmGroupId pulumi.StringPtrInput `pulumi:"multiVmGroupId"`
	// The multi vm group name.
	MultiVmGroupName pulumi.StringPtrInput `pulumi:"multiVmGroupName"`
	// The Process Server Id.
	ProcessServerId pulumi.StringPtrInput `pulumi:"processServerId"`
	// The CS account Id.
	RunAsAccountId pulumi.StringPtrInput `pulumi:"runAsAccountId"`
	// The storage account name.
	StorageAccountId pulumi.StringInput `pulumi:"storageAccountId"`
	// The selected target Azure network Id.
	TargetAzureNetworkId pulumi.StringPtrInput `pulumi:"targetAzureNetworkId"`
	// The selected target Azure subnet Id.
	TargetAzureSubnetId pulumi.StringPtrInput `pulumi:"targetAzureSubnetId"`
	// The Id of the target resource group (for classic deployment) in which the failover VM is to be created.
	TargetAzureV1ResourceGroupId pulumi.StringPtrInput `pulumi:"targetAzureV1ResourceGroupId"`
	// The Id of the target resource group (for resource manager deployment) in which the failover VM is to be created.
	TargetAzureV2ResourceGroupId pulumi.StringPtrInput `pulumi:"targetAzureV2ResourceGroupId"`
	// The target azure Vm Name.
	TargetAzureVmName pulumi.StringPtrInput `pulumi:"targetAzureVmName"`
	// A value indicating whether managed disks should be used during failover.
	UseManagedDisks pulumi.StringPtrInput `pulumi:"useManagedDisks"`
}

func (InMageAzureV2EnableProtectionInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageAzureV2EnableProtectionInput)(nil)).Elem()
}

func (i InMageAzureV2EnableProtectionInputArgs) ToInMageAzureV2EnableProtectionInputOutput() InMageAzureV2EnableProtectionInputOutput {
	return i.ToInMageAzureV2EnableProtectionInputOutputWithContext(context.Background())
}

func (i InMageAzureV2EnableProtectionInputArgs) ToInMageAzureV2EnableProtectionInputOutputWithContext(ctx context.Context) InMageAzureV2EnableProtectionInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageAzureV2EnableProtectionInputOutput)
}

// InMage Azure v2 specific protection profile details.
type InMageAzureV2PolicyDetailsResponse struct {
	// The app consistent snapshot frequency in minutes.
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// The crash consistent snapshot frequency in minutes.
	CrashConsistentFrequencyInMinutes *int `pulumi:"crashConsistentFrequencyInMinutes"`
	// Gets the class type. Overridden in derived classes.
	InstanceType string `pulumi:"instanceType"`
	// A value indicating whether multi-VM sync has to be enabled.
	MultiVmSyncStatus *string `pulumi:"multiVmSyncStatus"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistory *int `pulumi:"recoveryPointHistory"`
	// The recovery point threshold in minutes.
	RecoveryPointThresholdInMinutes *int `pulumi:"recoveryPointThresholdInMinutes"`
}

// InMage Azure v2 specific protection profile details.
type InMageAzureV2PolicyDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMageAzureV2PolicyDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageAzureV2PolicyDetailsResponse)(nil)).Elem()
}

func (o InMageAzureV2PolicyDetailsResponseOutput) ToInMageAzureV2PolicyDetailsResponseOutput() InMageAzureV2PolicyDetailsResponseOutput {
	return o
}

func (o InMageAzureV2PolicyDetailsResponseOutput) ToInMageAzureV2PolicyDetailsResponseOutputWithContext(ctx context.Context) InMageAzureV2PolicyDetailsResponseOutput {
	return o
}

// The app consistent snapshot frequency in minutes.
func (o InMageAzureV2PolicyDetailsResponseOutput) AppConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageAzureV2PolicyDetailsResponse) *int { return v.AppConsistentFrequencyInMinutes }).(pulumi.IntPtrOutput)
}

// The crash consistent snapshot frequency in minutes.
func (o InMageAzureV2PolicyDetailsResponseOutput) CrashConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageAzureV2PolicyDetailsResponse) *int { return v.CrashConsistentFrequencyInMinutes }).(pulumi.IntPtrOutput)
}

// Gets the class type. Overridden in derived classes.
func (o InMageAzureV2PolicyDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v InMageAzureV2PolicyDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// A value indicating whether multi-VM sync has to be enabled.
func (o InMageAzureV2PolicyDetailsResponseOutput) MultiVmSyncStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2PolicyDetailsResponse) *string { return v.MultiVmSyncStatus }).(pulumi.StringPtrOutput)
}

// The duration in minutes until which the recovery points need to be stored.
func (o InMageAzureV2PolicyDetailsResponseOutput) RecoveryPointHistory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageAzureV2PolicyDetailsResponse) *int { return v.RecoveryPointHistory }).(pulumi.IntPtrOutput)
}

// The recovery point threshold in minutes.
func (o InMageAzureV2PolicyDetailsResponseOutput) RecoveryPointThresholdInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageAzureV2PolicyDetailsResponse) *int { return v.RecoveryPointThresholdInMinutes }).(pulumi.IntPtrOutput)
}

// VMWare Azure specific protection profile Input.
type InMageAzureV2PolicyInput struct {
	// The app consistent snapshot frequency (in minutes).
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// The crash consistent snapshot frequency (in minutes).
	CrashConsistentFrequencyInMinutes *int `pulumi:"crashConsistentFrequencyInMinutes"`
	// The class type.
	InstanceType *string `pulumi:"instanceType"`
	// A value indicating whether multi-VM sync has to be enabled. Value should be 'Enabled' or 'Disabled'.
	MultiVmSyncStatus string `pulumi:"multiVmSyncStatus"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistory *int `pulumi:"recoveryPointHistory"`
	// The recovery point threshold in minutes.
	RecoveryPointThresholdInMinutes *int `pulumi:"recoveryPointThresholdInMinutes"`
}

// InMageAzureV2PolicyInputInput is an input type that accepts InMageAzureV2PolicyInputArgs and InMageAzureV2PolicyInputOutput values.
// You can construct a concrete instance of `InMageAzureV2PolicyInputInput` via:
//
//          InMageAzureV2PolicyInputArgs{...}
type InMageAzureV2PolicyInputInput interface {
	pulumi.Input

	ToInMageAzureV2PolicyInputOutput() InMageAzureV2PolicyInputOutput
	ToInMageAzureV2PolicyInputOutputWithContext(context.Context) InMageAzureV2PolicyInputOutput
}

// VMWare Azure specific protection profile Input.
type InMageAzureV2PolicyInputArgs struct {
	// The app consistent snapshot frequency (in minutes).
	AppConsistentFrequencyInMinutes pulumi.IntPtrInput `pulumi:"appConsistentFrequencyInMinutes"`
	// The crash consistent snapshot frequency (in minutes).
	CrashConsistentFrequencyInMinutes pulumi.IntPtrInput `pulumi:"crashConsistentFrequencyInMinutes"`
	// The class type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// A value indicating whether multi-VM sync has to be enabled. Value should be 'Enabled' or 'Disabled'.
	MultiVmSyncStatus pulumi.StringInput `pulumi:"multiVmSyncStatus"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistory pulumi.IntPtrInput `pulumi:"recoveryPointHistory"`
	// The recovery point threshold in minutes.
	RecoveryPointThresholdInMinutes pulumi.IntPtrInput `pulumi:"recoveryPointThresholdInMinutes"`
}

func (InMageAzureV2PolicyInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageAzureV2PolicyInput)(nil)).Elem()
}

func (i InMageAzureV2PolicyInputArgs) ToInMageAzureV2PolicyInputOutput() InMageAzureV2PolicyInputOutput {
	return i.ToInMageAzureV2PolicyInputOutputWithContext(context.Background())
}

func (i InMageAzureV2PolicyInputArgs) ToInMageAzureV2PolicyInputOutputWithContext(ctx context.Context) InMageAzureV2PolicyInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageAzureV2PolicyInputOutput)
}

// InMageAzureV2 protected disk details.
type InMageAzureV2ProtectedDiskDetailsResponse struct {
	// The disk capacity in bytes.
	DiskCapacityInBytes *int `pulumi:"diskCapacityInBytes"`
	// The disk id.
	DiskId *string `pulumi:"diskId"`
	// The disk name.
	DiskName *string `pulumi:"diskName"`
	// A value indicating whether disk is resized.
	DiskResized *string `pulumi:"diskResized"`
	// The disk file system capacity in bytes.
	FileSystemCapacityInBytes *int `pulumi:"fileSystemCapacityInBytes"`
	// The health error code for the disk.
	HealthErrorCode *string `pulumi:"healthErrorCode"`
	// The last RPO calculated time.
	LastRpoCalculatedTime *string `pulumi:"lastRpoCalculatedTime"`
	// The protection stage.
	ProtectionStage *string `pulumi:"protectionStage"`
	// The PS data transit in MB.
	PsDataInMegaBytes *float64 `pulumi:"psDataInMegaBytes"`
	// The resync duration in seconds.
	ResyncDurationInSeconds *int `pulumi:"resyncDurationInSeconds"`
	// The resync progress percentage.
	ResyncProgressPercentage *int `pulumi:"resyncProgressPercentage"`
	// A value indicating whether resync is required for this disk.
	ResyncRequired *string `pulumi:"resyncRequired"`
	// The RPO in seconds.
	RpoInSeconds *int `pulumi:"rpoInSeconds"`
	// The source data transit in MB.
	SourceDataInMegaBytes *float64 `pulumi:"sourceDataInMegaBytes"`
	// The target data transit in MB.
	TargetDataInMegaBytes *float64 `pulumi:"targetDataInMegaBytes"`
}

// InMageAzureV2 protected disk details.
type InMageAzureV2ProtectedDiskDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMageAzureV2ProtectedDiskDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageAzureV2ProtectedDiskDetailsResponse)(nil)).Elem()
}

func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) ToInMageAzureV2ProtectedDiskDetailsResponseOutput() InMageAzureV2ProtectedDiskDetailsResponseOutput {
	return o
}

func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) ToInMageAzureV2ProtectedDiskDetailsResponseOutputWithContext(ctx context.Context) InMageAzureV2ProtectedDiskDetailsResponseOutput {
	return o
}

// The disk capacity in bytes.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) DiskCapacityInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *int { return v.DiskCapacityInBytes }).(pulumi.IntPtrOutput)
}

// The disk id.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) DiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *string { return v.DiskId }).(pulumi.StringPtrOutput)
}

// The disk name.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) DiskName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *string { return v.DiskName }).(pulumi.StringPtrOutput)
}

// A value indicating whether disk is resized.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) DiskResized() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *string { return v.DiskResized }).(pulumi.StringPtrOutput)
}

// The disk file system capacity in bytes.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) FileSystemCapacityInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *int { return v.FileSystemCapacityInBytes }).(pulumi.IntPtrOutput)
}

// The health error code for the disk.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) HealthErrorCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *string { return v.HealthErrorCode }).(pulumi.StringPtrOutput)
}

// The last RPO calculated time.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) LastRpoCalculatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *string { return v.LastRpoCalculatedTime }).(pulumi.StringPtrOutput)
}

// The protection stage.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) ProtectionStage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *string { return v.ProtectionStage }).(pulumi.StringPtrOutput)
}

// The PS data transit in MB.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) PsDataInMegaBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *float64 { return v.PsDataInMegaBytes }).(pulumi.Float64PtrOutput)
}

// The resync duration in seconds.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) ResyncDurationInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *int { return v.ResyncDurationInSeconds }).(pulumi.IntPtrOutput)
}

// The resync progress percentage.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) ResyncProgressPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *int { return v.ResyncProgressPercentage }).(pulumi.IntPtrOutput)
}

// A value indicating whether resync is required for this disk.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) ResyncRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *string { return v.ResyncRequired }).(pulumi.StringPtrOutput)
}

// The RPO in seconds.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) RpoInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *int { return v.RpoInSeconds }).(pulumi.IntPtrOutput)
}

// The source data transit in MB.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) SourceDataInMegaBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *float64 { return v.SourceDataInMegaBytes }).(pulumi.Float64PtrOutput)
}

// The target data transit in MB.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) TargetDataInMegaBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *float64 { return v.TargetDataInMegaBytes }).(pulumi.Float64PtrOutput)
}

type InMageAzureV2ProtectedDiskDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (InMageAzureV2ProtectedDiskDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InMageAzureV2ProtectedDiskDetailsResponse)(nil)).Elem()
}

func (o InMageAzureV2ProtectedDiskDetailsResponseArrayOutput) ToInMageAzureV2ProtectedDiskDetailsResponseArrayOutput() InMageAzureV2ProtectedDiskDetailsResponseArrayOutput {
	return o
}

func (o InMageAzureV2ProtectedDiskDetailsResponseArrayOutput) ToInMageAzureV2ProtectedDiskDetailsResponseArrayOutputWithContext(ctx context.Context) InMageAzureV2ProtectedDiskDetailsResponseArrayOutput {
	return o
}

func (o InMageAzureV2ProtectedDiskDetailsResponseArrayOutput) Index(i pulumi.IntInput) InMageAzureV2ProtectedDiskDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InMageAzureV2ProtectedDiskDetailsResponse {
		return vs[0].([]InMageAzureV2ProtectedDiskDetailsResponse)[vs[1].(int)]
	}).(InMageAzureV2ProtectedDiskDetailsResponseOutput)
}

// InMageAzureV2 provider specific settings
type InMageAzureV2ReplicationDetailsResponse struct {
	// The agent version.
	AgentVersion *string `pulumi:"agentVersion"`
	// Azure VM Disk details.
	AzureVMDiskDetails []AzureVmDiskDetailsResponse `pulumi:"azureVMDiskDetails"`
	// The compressed data change rate in MB.
	CompressedDataRateInMB *float64 `pulumi:"compressedDataRateInMB"`
	// The data stores of the on-premise machine. Value can be list of strings that contain data store names.
	Datastores []string `pulumi:"datastores"`
	// A value indicating the discovery type of the machine. Value can be vCenter or physical.
	DiscoveryType *string `pulumi:"discoveryType"`
	// A value indicating whether any disk is resized for this VM.
	DiskResized *string `pulumi:"diskResized"`
	// The selected option to enable RDP\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum.
	EnableRDPOnTargetOption *string `pulumi:"enableRDPOnTargetOption"`
	// The infrastructure VM Id.
	InfrastructureVmId *string `pulumi:"infrastructureVmId"`
	// Gets the Instance type.
	InstanceType string `pulumi:"instanceType"`
	// The source IP address.
	IpAddress *string `pulumi:"ipAddress"`
	// A value indicating whether installed agent needs to be updated.
	IsAgentUpdateRequired *string `pulumi:"isAgentUpdateRequired"`
	// A value indicating whether the source server requires a restart after update.
	IsRebootAfterUpdateRequired *string `pulumi:"isRebootAfterUpdateRequired"`
	// The last heartbeat received from the source server.
	LastHeartbeat *string `pulumi:"lastHeartbeat"`
	// The last RPO calculated time.
	LastRpoCalculatedTime *string `pulumi:"lastRpoCalculatedTime"`
	// The last update time received from on-prem components.
	LastUpdateReceivedTime *string `pulumi:"lastUpdateReceivedTime"`
	// License Type of the VM to be used.
	LicenseType *string `pulumi:"licenseType"`
	// The master target Id.
	MasterTargetId *string `pulumi:"masterTargetId"`
	// The multi vm group Id.
	MultiVmGroupId *string `pulumi:"multiVmGroupId"`
	// The multi vm group name.
	MultiVmGroupName *string `pulumi:"multiVmGroupName"`
	// A value indicating whether multi vm sync is enabled or disabled.
	MultiVmSyncStatus *string `pulumi:"multiVmSyncStatus"`
	// The id of the disk containing the OS.
	OsDiskId *string `pulumi:"osDiskId"`
	// The type of the OS on the VM.
	OsType *string `pulumi:"osType"`
	// The OS Version of the protected item.
	OsVersion *string `pulumi:"osVersion"`
	// The process server Id.
	ProcessServerId *string `pulumi:"processServerId"`
	// The list of protected disks.
	ProtectedDisks []InMageAzureV2ProtectedDiskDetailsResponse `pulumi:"protectedDisks"`
	// The protection stage.
	ProtectionStage *string `pulumi:"protectionStage"`
	// The recovery availability set Id.
	RecoveryAvailabilitySetId *string `pulumi:"recoveryAvailabilitySetId"`
	// The ARM id of the log storage account used for replication. This will be set to null if no log storage account was provided during enable protection.
	RecoveryAzureLogStorageAccountId *string `pulumi:"recoveryAzureLogStorageAccountId"`
	// The target resource group Id.
	RecoveryAzureResourceGroupId *string `pulumi:"recoveryAzureResourceGroupId"`
	// The recovery Azure storage account.
	RecoveryAzureStorageAccount *string `pulumi:"recoveryAzureStorageAccount"`
	// Recovery Azure given name.
	RecoveryAzureVMName *string `pulumi:"recoveryAzureVMName"`
	// The Recovery Azure VM size.
	RecoveryAzureVMSize *string `pulumi:"recoveryAzureVMSize"`
	// The replica id of the protected item.
	ReplicaId *string `pulumi:"replicaId"`
	// The resync progress percentage.
	ResyncProgressPercentage *int `pulumi:"resyncProgressPercentage"`
	// The RPO in seconds.
	RpoInSeconds *int `pulumi:"rpoInSeconds"`
	// The selected recovery azure network Id.
	SelectedRecoveryAzureNetworkId *string `pulumi:"selectedRecoveryAzureNetworkId"`
	// The CPU count of the VM on the primary side.
	SourceVmCPUCount *int `pulumi:"sourceVmCPUCount"`
	// The RAM size of the VM on the primary side.
	SourceVmRAMSizeInMB *int `pulumi:"sourceVmRAMSizeInMB"`
	// The ARM Id of the target Azure VM. This value will be null until the VM is failed over. Only after failure it will be populated with the ARM Id of the Azure VM.
	TargetVmId *string `pulumi:"targetVmId"`
	// The uncompressed data change rate in MB.
	UncompressedDataRateInMB *float64 `pulumi:"uncompressedDataRateInMB"`
	// A value indicating whether managed disks should be used during failover.
	UseManagedDisks *string `pulumi:"useManagedDisks"`
	// The vCenter infrastructure Id.
	VCenterInfrastructureId *string `pulumi:"vCenterInfrastructureId"`
	// The validation errors of the on-premise machine Value can be list of validation errors.
	ValidationErrors []HealthErrorResponse `pulumi:"validationErrors"`
	// The OS disk VHD name.
	VhdName *string `pulumi:"vhdName"`
	// The virtual machine Id.
	VmId *string `pulumi:"vmId"`
	// The PE Network details.
	VmNics []VMNicDetailsResponse `pulumi:"vmNics"`
	// The protection state for the vm.
	VmProtectionState *string `pulumi:"vmProtectionState"`
	// The protection state description for the vm.
	VmProtectionStateDescription *string `pulumi:"vmProtectionStateDescription"`
}

// InMageAzureV2 provider specific settings
type InMageAzureV2ReplicationDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMageAzureV2ReplicationDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageAzureV2ReplicationDetailsResponse)(nil)).Elem()
}

func (o InMageAzureV2ReplicationDetailsResponseOutput) ToInMageAzureV2ReplicationDetailsResponseOutput() InMageAzureV2ReplicationDetailsResponseOutput {
	return o
}

func (o InMageAzureV2ReplicationDetailsResponseOutput) ToInMageAzureV2ReplicationDetailsResponseOutputWithContext(ctx context.Context) InMageAzureV2ReplicationDetailsResponseOutput {
	return o
}

// The agent version.
func (o InMageAzureV2ReplicationDetailsResponseOutput) AgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.AgentVersion }).(pulumi.StringPtrOutput)
}

// Azure VM Disk details.
func (o InMageAzureV2ReplicationDetailsResponseOutput) AzureVMDiskDetails() AzureVmDiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) []AzureVmDiskDetailsResponse {
		return v.AzureVMDiskDetails
	}).(AzureVmDiskDetailsResponseArrayOutput)
}

// The compressed data change rate in MB.
func (o InMageAzureV2ReplicationDetailsResponseOutput) CompressedDataRateInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *float64 { return v.CompressedDataRateInMB }).(pulumi.Float64PtrOutput)
}

// The data stores of the on-premise machine. Value can be list of strings that contain data store names.
func (o InMageAzureV2ReplicationDetailsResponseOutput) Datastores() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) []string { return v.Datastores }).(pulumi.StringArrayOutput)
}

// A value indicating the discovery type of the machine. Value can be vCenter or physical.
func (o InMageAzureV2ReplicationDetailsResponseOutput) DiscoveryType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.DiscoveryType }).(pulumi.StringPtrOutput)
}

// A value indicating whether any disk is resized for this VM.
func (o InMageAzureV2ReplicationDetailsResponseOutput) DiskResized() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.DiskResized }).(pulumi.StringPtrOutput)
}

// The selected option to enable RDP\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum.
func (o InMageAzureV2ReplicationDetailsResponseOutput) EnableRDPOnTargetOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.EnableRDPOnTargetOption }).(pulumi.StringPtrOutput)
}

// The infrastructure VM Id.
func (o InMageAzureV2ReplicationDetailsResponseOutput) InfrastructureVmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.InfrastructureVmId }).(pulumi.StringPtrOutput)
}

// Gets the Instance type.
func (o InMageAzureV2ReplicationDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The source IP address.
func (o InMageAzureV2ReplicationDetailsResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// A value indicating whether installed agent needs to be updated.
func (o InMageAzureV2ReplicationDetailsResponseOutput) IsAgentUpdateRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.IsAgentUpdateRequired }).(pulumi.StringPtrOutput)
}

// A value indicating whether the source server requires a restart after update.
func (o InMageAzureV2ReplicationDetailsResponseOutput) IsRebootAfterUpdateRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.IsRebootAfterUpdateRequired }).(pulumi.StringPtrOutput)
}

// The last heartbeat received from the source server.
func (o InMageAzureV2ReplicationDetailsResponseOutput) LastHeartbeat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.LastHeartbeat }).(pulumi.StringPtrOutput)
}

// The last RPO calculated time.
func (o InMageAzureV2ReplicationDetailsResponseOutput) LastRpoCalculatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.LastRpoCalculatedTime }).(pulumi.StringPtrOutput)
}

// The last update time received from on-prem components.
func (o InMageAzureV2ReplicationDetailsResponseOutput) LastUpdateReceivedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.LastUpdateReceivedTime }).(pulumi.StringPtrOutput)
}

// License Type of the VM to be used.
func (o InMageAzureV2ReplicationDetailsResponseOutput) LicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.LicenseType }).(pulumi.StringPtrOutput)
}

// The master target Id.
func (o InMageAzureV2ReplicationDetailsResponseOutput) MasterTargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.MasterTargetId }).(pulumi.StringPtrOutput)
}

// The multi vm group Id.
func (o InMageAzureV2ReplicationDetailsResponseOutput) MultiVmGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.MultiVmGroupId }).(pulumi.StringPtrOutput)
}

// The multi vm group name.
func (o InMageAzureV2ReplicationDetailsResponseOutput) MultiVmGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.MultiVmGroupName }).(pulumi.StringPtrOutput)
}

// A value indicating whether multi vm sync is enabled or disabled.
func (o InMageAzureV2ReplicationDetailsResponseOutput) MultiVmSyncStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.MultiVmSyncStatus }).(pulumi.StringPtrOutput)
}

// The id of the disk containing the OS.
func (o InMageAzureV2ReplicationDetailsResponseOutput) OsDiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.OsDiskId }).(pulumi.StringPtrOutput)
}

// The type of the OS on the VM.
func (o InMageAzureV2ReplicationDetailsResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// The OS Version of the protected item.
func (o InMageAzureV2ReplicationDetailsResponseOutput) OsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.OsVersion }).(pulumi.StringPtrOutput)
}

// The process server Id.
func (o InMageAzureV2ReplicationDetailsResponseOutput) ProcessServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.ProcessServerId }).(pulumi.StringPtrOutput)
}

// The list of protected disks.
func (o InMageAzureV2ReplicationDetailsResponseOutput) ProtectedDisks() InMageAzureV2ProtectedDiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) []InMageAzureV2ProtectedDiskDetailsResponse {
		return v.ProtectedDisks
	}).(InMageAzureV2ProtectedDiskDetailsResponseArrayOutput)
}

// The protection stage.
func (o InMageAzureV2ReplicationDetailsResponseOutput) ProtectionStage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.ProtectionStage }).(pulumi.StringPtrOutput)
}

// The recovery availability set Id.
func (o InMageAzureV2ReplicationDetailsResponseOutput) RecoveryAvailabilitySetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.RecoveryAvailabilitySetId }).(pulumi.StringPtrOutput)
}

// The ARM id of the log storage account used for replication. This will be set to null if no log storage account was provided during enable protection.
func (o InMageAzureV2ReplicationDetailsResponseOutput) RecoveryAzureLogStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.RecoveryAzureLogStorageAccountId }).(pulumi.StringPtrOutput)
}

// The target resource group Id.
func (o InMageAzureV2ReplicationDetailsResponseOutput) RecoveryAzureResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.RecoveryAzureResourceGroupId }).(pulumi.StringPtrOutput)
}

// The recovery Azure storage account.
func (o InMageAzureV2ReplicationDetailsResponseOutput) RecoveryAzureStorageAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.RecoveryAzureStorageAccount }).(pulumi.StringPtrOutput)
}

// Recovery Azure given name.
func (o InMageAzureV2ReplicationDetailsResponseOutput) RecoveryAzureVMName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.RecoveryAzureVMName }).(pulumi.StringPtrOutput)
}

// The Recovery Azure VM size.
func (o InMageAzureV2ReplicationDetailsResponseOutput) RecoveryAzureVMSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.RecoveryAzureVMSize }).(pulumi.StringPtrOutput)
}

// The replica id of the protected item.
func (o InMageAzureV2ReplicationDetailsResponseOutput) ReplicaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.ReplicaId }).(pulumi.StringPtrOutput)
}

// The resync progress percentage.
func (o InMageAzureV2ReplicationDetailsResponseOutput) ResyncProgressPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *int { return v.ResyncProgressPercentage }).(pulumi.IntPtrOutput)
}

// The RPO in seconds.
func (o InMageAzureV2ReplicationDetailsResponseOutput) RpoInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *int { return v.RpoInSeconds }).(pulumi.IntPtrOutput)
}

// The selected recovery azure network Id.
func (o InMageAzureV2ReplicationDetailsResponseOutput) SelectedRecoveryAzureNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.SelectedRecoveryAzureNetworkId }).(pulumi.StringPtrOutput)
}

// The CPU count of the VM on the primary side.
func (o InMageAzureV2ReplicationDetailsResponseOutput) SourceVmCPUCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *int { return v.SourceVmCPUCount }).(pulumi.IntPtrOutput)
}

// The RAM size of the VM on the primary side.
func (o InMageAzureV2ReplicationDetailsResponseOutput) SourceVmRAMSizeInMB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *int { return v.SourceVmRAMSizeInMB }).(pulumi.IntPtrOutput)
}

// The ARM Id of the target Azure VM. This value will be null until the VM is failed over. Only after failure it will be populated with the ARM Id of the Azure VM.
func (o InMageAzureV2ReplicationDetailsResponseOutput) TargetVmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.TargetVmId }).(pulumi.StringPtrOutput)
}

// The uncompressed data change rate in MB.
func (o InMageAzureV2ReplicationDetailsResponseOutput) UncompressedDataRateInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *float64 { return v.UncompressedDataRateInMB }).(pulumi.Float64PtrOutput)
}

// A value indicating whether managed disks should be used during failover.
func (o InMageAzureV2ReplicationDetailsResponseOutput) UseManagedDisks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.UseManagedDisks }).(pulumi.StringPtrOutput)
}

// The vCenter infrastructure Id.
func (o InMageAzureV2ReplicationDetailsResponseOutput) VCenterInfrastructureId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.VCenterInfrastructureId }).(pulumi.StringPtrOutput)
}

// The validation errors of the on-premise machine Value can be list of validation errors.
func (o InMageAzureV2ReplicationDetailsResponseOutput) ValidationErrors() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) []HealthErrorResponse { return v.ValidationErrors }).(HealthErrorResponseArrayOutput)
}

// The OS disk VHD name.
func (o InMageAzureV2ReplicationDetailsResponseOutput) VhdName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.VhdName }).(pulumi.StringPtrOutput)
}

// The virtual machine Id.
func (o InMageAzureV2ReplicationDetailsResponseOutput) VmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.VmId }).(pulumi.StringPtrOutput)
}

// The PE Network details.
func (o InMageAzureV2ReplicationDetailsResponseOutput) VmNics() VMNicDetailsResponseArrayOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) []VMNicDetailsResponse { return v.VmNics }).(VMNicDetailsResponseArrayOutput)
}

// The protection state for the vm.
func (o InMageAzureV2ReplicationDetailsResponseOutput) VmProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.VmProtectionState }).(pulumi.StringPtrOutput)
}

// The protection state description for the vm.
func (o InMageAzureV2ReplicationDetailsResponseOutput) VmProtectionStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.VmProtectionStateDescription }).(pulumi.StringPtrOutput)
}

// Base class for the policies of providers using InMage replication.
type InMageBasePolicyDetailsResponse struct {
	// The app consistent snapshot frequency in minutes.
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// Gets the class type. Overridden in derived classes.
	InstanceType string `pulumi:"instanceType"`
	// A value indicating whether multi-VM sync has to be enabled.
	MultiVmSyncStatus *string `pulumi:"multiVmSyncStatus"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistory *int `pulumi:"recoveryPointHistory"`
	// The recovery point threshold in minutes.
	RecoveryPointThresholdInMinutes *int `pulumi:"recoveryPointThresholdInMinutes"`
}

// Base class for the policies of providers using InMage replication.
type InMageBasePolicyDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMageBasePolicyDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageBasePolicyDetailsResponse)(nil)).Elem()
}

func (o InMageBasePolicyDetailsResponseOutput) ToInMageBasePolicyDetailsResponseOutput() InMageBasePolicyDetailsResponseOutput {
	return o
}

func (o InMageBasePolicyDetailsResponseOutput) ToInMageBasePolicyDetailsResponseOutputWithContext(ctx context.Context) InMageBasePolicyDetailsResponseOutput {
	return o
}

// The app consistent snapshot frequency in minutes.
func (o InMageBasePolicyDetailsResponseOutput) AppConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageBasePolicyDetailsResponse) *int { return v.AppConsistentFrequencyInMinutes }).(pulumi.IntPtrOutput)
}

// Gets the class type. Overridden in derived classes.
func (o InMageBasePolicyDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v InMageBasePolicyDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// A value indicating whether multi-VM sync has to be enabled.
func (o InMageBasePolicyDetailsResponseOutput) MultiVmSyncStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageBasePolicyDetailsResponse) *string { return v.MultiVmSyncStatus }).(pulumi.StringPtrOutput)
}

// The duration in minutes until which the recovery points need to be stored.
func (o InMageBasePolicyDetailsResponseOutput) RecoveryPointHistory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageBasePolicyDetailsResponse) *int { return v.RecoveryPointHistory }).(pulumi.IntPtrOutput)
}

// The recovery point threshold in minutes.
func (o InMageBasePolicyDetailsResponseOutput) RecoveryPointThresholdInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageBasePolicyDetailsResponse) *int { return v.RecoveryPointThresholdInMinutes }).(pulumi.IntPtrOutput)
}

// DiskExclusionInput when doing enable protection of virtual machine in InMage provider.
type InMageDiskExclusionInput struct {
	// The guest disk signature based option for disk exclusion.
	DiskSignatureOptions []InMageDiskSignatureExclusionOptions `pulumi:"diskSignatureOptions"`
	// The volume label based option for disk exclusion.
	VolumeOptions []InMageVolumeExclusionOptions `pulumi:"volumeOptions"`
}

// InMageDiskExclusionInputInput is an input type that accepts InMageDiskExclusionInputArgs and InMageDiskExclusionInputOutput values.
// You can construct a concrete instance of `InMageDiskExclusionInputInput` via:
//
//          InMageDiskExclusionInputArgs{...}
type InMageDiskExclusionInputInput interface {
	pulumi.Input

	ToInMageDiskExclusionInputOutput() InMageDiskExclusionInputOutput
	ToInMageDiskExclusionInputOutputWithContext(context.Context) InMageDiskExclusionInputOutput
}

// DiskExclusionInput when doing enable protection of virtual machine in InMage provider.
type InMageDiskExclusionInputArgs struct {
	// The guest disk signature based option for disk exclusion.
	DiskSignatureOptions InMageDiskSignatureExclusionOptionsArrayInput `pulumi:"diskSignatureOptions"`
	// The volume label based option for disk exclusion.
	VolumeOptions InMageVolumeExclusionOptionsArrayInput `pulumi:"volumeOptions"`
}

func (InMageDiskExclusionInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageDiskExclusionInput)(nil)).Elem()
}

func (i InMageDiskExclusionInputArgs) ToInMageDiskExclusionInputOutput() InMageDiskExclusionInputOutput {
	return i.ToInMageDiskExclusionInputOutputWithContext(context.Background())
}

func (i InMageDiskExclusionInputArgs) ToInMageDiskExclusionInputOutputWithContext(ctx context.Context) InMageDiskExclusionInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageDiskExclusionInputOutput)
}

func (i InMageDiskExclusionInputArgs) ToInMageDiskExclusionInputPtrOutput() InMageDiskExclusionInputPtrOutput {
	return i.ToInMageDiskExclusionInputPtrOutputWithContext(context.Background())
}

func (i InMageDiskExclusionInputArgs) ToInMageDiskExclusionInputPtrOutputWithContext(ctx context.Context) InMageDiskExclusionInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageDiskExclusionInputOutput).ToInMageDiskExclusionInputPtrOutputWithContext(ctx)
}

// InMageDiskExclusionInputPtrInput is an input type that accepts InMageDiskExclusionInputArgs, InMageDiskExclusionInputPtr and InMageDiskExclusionInputPtrOutput values.
// You can construct a concrete instance of `InMageDiskExclusionInputPtrInput` via:
//
//          InMageDiskExclusionInputArgs{...}
//
//  or:
//
//          nil
type InMageDiskExclusionInputPtrInput interface {
	pulumi.Input

	ToInMageDiskExclusionInputPtrOutput() InMageDiskExclusionInputPtrOutput
	ToInMageDiskExclusionInputPtrOutputWithContext(context.Context) InMageDiskExclusionInputPtrOutput
}

type inMageDiskExclusionInputPtrType InMageDiskExclusionInputArgs

func InMageDiskExclusionInputPtr(v *InMageDiskExclusionInputArgs) InMageDiskExclusionInputPtrInput {
	return (*inMageDiskExclusionInputPtrType)(v)
}

func (*inMageDiskExclusionInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InMageDiskExclusionInput)(nil)).Elem()
}

func (i *inMageDiskExclusionInputPtrType) ToInMageDiskExclusionInputPtrOutput() InMageDiskExclusionInputPtrOutput {
	return i.ToInMageDiskExclusionInputPtrOutputWithContext(context.Background())
}

func (i *inMageDiskExclusionInputPtrType) ToInMageDiskExclusionInputPtrOutputWithContext(ctx context.Context) InMageDiskExclusionInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageDiskExclusionInputPtrOutput)
}

// Guest disk signature based disk exclusion option when doing enable protection of virtual machine in InMage provider.
type InMageDiskSignatureExclusionOptions struct {
	// The guest signature of disk to be excluded from replication.
	DiskSignature *string `pulumi:"diskSignature"`
}

// InMageDiskSignatureExclusionOptionsInput is an input type that accepts InMageDiskSignatureExclusionOptionsArgs and InMageDiskSignatureExclusionOptionsOutput values.
// You can construct a concrete instance of `InMageDiskSignatureExclusionOptionsInput` via:
//
//          InMageDiskSignatureExclusionOptionsArgs{...}
type InMageDiskSignatureExclusionOptionsInput interface {
	pulumi.Input

	ToInMageDiskSignatureExclusionOptionsOutput() InMageDiskSignatureExclusionOptionsOutput
	ToInMageDiskSignatureExclusionOptionsOutputWithContext(context.Context) InMageDiskSignatureExclusionOptionsOutput
}

// Guest disk signature based disk exclusion option when doing enable protection of virtual machine in InMage provider.
type InMageDiskSignatureExclusionOptionsArgs struct {
	// The guest signature of disk to be excluded from replication.
	DiskSignature pulumi.StringPtrInput `pulumi:"diskSignature"`
}

func (InMageDiskSignatureExclusionOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageDiskSignatureExclusionOptions)(nil)).Elem()
}

func (i InMageDiskSignatureExclusionOptionsArgs) ToInMageDiskSignatureExclusionOptionsOutput() InMageDiskSignatureExclusionOptionsOutput {
	return i.ToInMageDiskSignatureExclusionOptionsOutputWithContext(context.Background())
}

func (i InMageDiskSignatureExclusionOptionsArgs) ToInMageDiskSignatureExclusionOptionsOutputWithContext(ctx context.Context) InMageDiskSignatureExclusionOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageDiskSignatureExclusionOptionsOutput)
}

// InMageDiskSignatureExclusionOptionsArrayInput is an input type that accepts InMageDiskSignatureExclusionOptionsArray and InMageDiskSignatureExclusionOptionsArrayOutput values.
// You can construct a concrete instance of `InMageDiskSignatureExclusionOptionsArrayInput` via:
//
//          InMageDiskSignatureExclusionOptionsArray{ InMageDiskSignatureExclusionOptionsArgs{...} }
type InMageDiskSignatureExclusionOptionsArrayInput interface {
	pulumi.Input

	ToInMageDiskSignatureExclusionOptionsArrayOutput() InMageDiskSignatureExclusionOptionsArrayOutput
	ToInMageDiskSignatureExclusionOptionsArrayOutputWithContext(context.Context) InMageDiskSignatureExclusionOptionsArrayOutput
}

type InMageDiskSignatureExclusionOptionsArray []InMageDiskSignatureExclusionOptionsInput

func (InMageDiskSignatureExclusionOptionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InMageDiskSignatureExclusionOptions)(nil)).Elem()
}

func (i InMageDiskSignatureExclusionOptionsArray) ToInMageDiskSignatureExclusionOptionsArrayOutput() InMageDiskSignatureExclusionOptionsArrayOutput {
	return i.ToInMageDiskSignatureExclusionOptionsArrayOutputWithContext(context.Background())
}

func (i InMageDiskSignatureExclusionOptionsArray) ToInMageDiskSignatureExclusionOptionsArrayOutputWithContext(ctx context.Context) InMageDiskSignatureExclusionOptionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageDiskSignatureExclusionOptionsArrayOutput)
}

// VMware Azure specific enable protection input.
type InMageEnableProtectionInput struct {
	// The target data store name.
	DatastoreName *string `pulumi:"datastoreName"`
	// The enable disk exclusion input.
	DiskExclusionInput *InMageDiskExclusionInput `pulumi:"diskExclusionInput"`
	// The disks to include list.
	DisksToInclude []string `pulumi:"disksToInclude"`
	// The class type.
	InstanceType *string `pulumi:"instanceType"`
	// The Master Target Id.
	MasterTargetId string `pulumi:"masterTargetId"`
	// The multi vm group Id.
	MultiVmGroupId string `pulumi:"multiVmGroupId"`
	// The multi vm group name.
	MultiVmGroupName string `pulumi:"multiVmGroupName"`
	// The Process Server Id.
	ProcessServerId string `pulumi:"processServerId"`
	// The retention drive to use on the MT.
	RetentionDrive string `pulumi:"retentionDrive"`
	// The CS account Id.
	RunAsAccountId *string `pulumi:"runAsAccountId"`
	// The Vm Name.
	VmFriendlyName *string `pulumi:"vmFriendlyName"`
}

// InMageEnableProtectionInputInput is an input type that accepts InMageEnableProtectionInputArgs and InMageEnableProtectionInputOutput values.
// You can construct a concrete instance of `InMageEnableProtectionInputInput` via:
//
//          InMageEnableProtectionInputArgs{...}
type InMageEnableProtectionInputInput interface {
	pulumi.Input

	ToInMageEnableProtectionInputOutput() InMageEnableProtectionInputOutput
	ToInMageEnableProtectionInputOutputWithContext(context.Context) InMageEnableProtectionInputOutput
}

// VMware Azure specific enable protection input.
type InMageEnableProtectionInputArgs struct {
	// The target data store name.
	DatastoreName pulumi.StringPtrInput `pulumi:"datastoreName"`
	// The enable disk exclusion input.
	DiskExclusionInput InMageDiskExclusionInputPtrInput `pulumi:"diskExclusionInput"`
	// The disks to include list.
	DisksToInclude pulumi.StringArrayInput `pulumi:"disksToInclude"`
	// The class type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// The Master Target Id.
	MasterTargetId pulumi.StringInput `pulumi:"masterTargetId"`
	// The multi vm group Id.
	MultiVmGroupId pulumi.StringInput `pulumi:"multiVmGroupId"`
	// The multi vm group name.
	MultiVmGroupName pulumi.StringInput `pulumi:"multiVmGroupName"`
	// The Process Server Id.
	ProcessServerId pulumi.StringInput `pulumi:"processServerId"`
	// The retention drive to use on the MT.
	RetentionDrive pulumi.StringInput `pulumi:"retentionDrive"`
	// The CS account Id.
	RunAsAccountId pulumi.StringPtrInput `pulumi:"runAsAccountId"`
	// The Vm Name.
	VmFriendlyName pulumi.StringPtrInput `pulumi:"vmFriendlyName"`
}

func (InMageEnableProtectionInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageEnableProtectionInput)(nil)).Elem()
}

func (i InMageEnableProtectionInputArgs) ToInMageEnableProtectionInputOutput() InMageEnableProtectionInputOutput {
	return i.ToInMageEnableProtectionInputOutputWithContext(context.Background())
}

func (i InMageEnableProtectionInputArgs) ToInMageEnableProtectionInputOutputWithContext(ctx context.Context) InMageEnableProtectionInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageEnableProtectionInputOutput)
}

// InMage specific protection profile details.
type InMagePolicyDetailsResponse struct {
	// The app consistent snapshot frequency in minutes.
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// Gets the class type. Overridden in derived classes.
	InstanceType string `pulumi:"instanceType"`
	// A value indicating whether multi-VM sync has to be enabled.
	MultiVmSyncStatus *string `pulumi:"multiVmSyncStatus"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistory *int `pulumi:"recoveryPointHistory"`
	// The recovery point threshold in minutes.
	RecoveryPointThresholdInMinutes *int `pulumi:"recoveryPointThresholdInMinutes"`
}

// InMage specific protection profile details.
type InMagePolicyDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMagePolicyDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMagePolicyDetailsResponse)(nil)).Elem()
}

func (o InMagePolicyDetailsResponseOutput) ToInMagePolicyDetailsResponseOutput() InMagePolicyDetailsResponseOutput {
	return o
}

func (o InMagePolicyDetailsResponseOutput) ToInMagePolicyDetailsResponseOutputWithContext(ctx context.Context) InMagePolicyDetailsResponseOutput {
	return o
}

// The app consistent snapshot frequency in minutes.
func (o InMagePolicyDetailsResponseOutput) AppConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMagePolicyDetailsResponse) *int { return v.AppConsistentFrequencyInMinutes }).(pulumi.IntPtrOutput)
}

// Gets the class type. Overridden in derived classes.
func (o InMagePolicyDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v InMagePolicyDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// A value indicating whether multi-VM sync has to be enabled.
func (o InMagePolicyDetailsResponseOutput) MultiVmSyncStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMagePolicyDetailsResponse) *string { return v.MultiVmSyncStatus }).(pulumi.StringPtrOutput)
}

// The duration in minutes until which the recovery points need to be stored.
func (o InMagePolicyDetailsResponseOutput) RecoveryPointHistory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMagePolicyDetailsResponse) *int { return v.RecoveryPointHistory }).(pulumi.IntPtrOutput)
}

// The recovery point threshold in minutes.
func (o InMagePolicyDetailsResponseOutput) RecoveryPointThresholdInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMagePolicyDetailsResponse) *int { return v.RecoveryPointThresholdInMinutes }).(pulumi.IntPtrOutput)
}

// VMWare Azure specific protection profile Input.
type InMagePolicyInput struct {
	// The app consistent snapshot frequency (in minutes).
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// The class type.
	InstanceType *string `pulumi:"instanceType"`
	// A value indicating whether multi-VM sync has to be enabled. Value should be 'Enabled' or 'Disabled'.
	MultiVmSyncStatus string `pulumi:"multiVmSyncStatus"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistory *int `pulumi:"recoveryPointHistory"`
	// The recovery point threshold in minutes.
	RecoveryPointThresholdInMinutes *int `pulumi:"recoveryPointThresholdInMinutes"`
}

// InMagePolicyInputInput is an input type that accepts InMagePolicyInputArgs and InMagePolicyInputOutput values.
// You can construct a concrete instance of `InMagePolicyInputInput` via:
//
//          InMagePolicyInputArgs{...}
type InMagePolicyInputInput interface {
	pulumi.Input

	ToInMagePolicyInputOutput() InMagePolicyInputOutput
	ToInMagePolicyInputOutputWithContext(context.Context) InMagePolicyInputOutput
}

// VMWare Azure specific protection profile Input.
type InMagePolicyInputArgs struct {
	// The app consistent snapshot frequency (in minutes).
	AppConsistentFrequencyInMinutes pulumi.IntPtrInput `pulumi:"appConsistentFrequencyInMinutes"`
	// The class type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// A value indicating whether multi-VM sync has to be enabled. Value should be 'Enabled' or 'Disabled'.
	MultiVmSyncStatus pulumi.StringInput `pulumi:"multiVmSyncStatus"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistory pulumi.IntPtrInput `pulumi:"recoveryPointHistory"`
	// The recovery point threshold in minutes.
	RecoveryPointThresholdInMinutes pulumi.IntPtrInput `pulumi:"recoveryPointThresholdInMinutes"`
}

func (InMagePolicyInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InMagePolicyInput)(nil)).Elem()
}

func (i InMagePolicyInputArgs) ToInMagePolicyInputOutput() InMagePolicyInputOutput {
	return i.ToInMagePolicyInputOutputWithContext(context.Background())
}

func (i InMagePolicyInputArgs) ToInMagePolicyInputOutputWithContext(ctx context.Context) InMagePolicyInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMagePolicyInputOutput)
}

// InMage protected disk details.
type InMageProtectedDiskDetailsResponse struct {
	// The disk capacity in bytes.
	DiskCapacityInBytes *int `pulumi:"diskCapacityInBytes"`
	// The disk id.
	DiskId *string `pulumi:"diskId"`
	// The disk name.
	DiskName *string `pulumi:"diskName"`
	// A value indicating whether disk is resized.
	DiskResized *string `pulumi:"diskResized"`
	// The file system capacity in bytes.
	FileSystemCapacityInBytes *int `pulumi:"fileSystemCapacityInBytes"`
	// The health error code for the disk.
	HealthErrorCode *string `pulumi:"healthErrorCode"`
	// The last RPO calculated time.
	LastRpoCalculatedTime *string `pulumi:"lastRpoCalculatedTime"`
	// The protection stage.
	ProtectionStage *string `pulumi:"protectionStage"`
	// The PS data transit in MB.
	PsDataInMB *float64 `pulumi:"psDataInMB"`
	// The resync duration in seconds.
	ResyncDurationInSeconds *int `pulumi:"resyncDurationInSeconds"`
	// The resync progress percentage.
	ResyncProgressPercentage *int `pulumi:"resyncProgressPercentage"`
	// A value indicating whether resync is required for this disk.
	ResyncRequired *string `pulumi:"resyncRequired"`
	// The RPO in seconds.
	RpoInSeconds *int `pulumi:"rpoInSeconds"`
	// The source data transit in MB.
	SourceDataInMB *float64 `pulumi:"sourceDataInMB"`
	// The target data transit in MB.
	TargetDataInMB *float64 `pulumi:"targetDataInMB"`
}

// InMage protected disk details.
type InMageProtectedDiskDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMageProtectedDiskDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageProtectedDiskDetailsResponse)(nil)).Elem()
}

func (o InMageProtectedDiskDetailsResponseOutput) ToInMageProtectedDiskDetailsResponseOutput() InMageProtectedDiskDetailsResponseOutput {
	return o
}

func (o InMageProtectedDiskDetailsResponseOutput) ToInMageProtectedDiskDetailsResponseOutputWithContext(ctx context.Context) InMageProtectedDiskDetailsResponseOutput {
	return o
}

// The disk capacity in bytes.
func (o InMageProtectedDiskDetailsResponseOutput) DiskCapacityInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *int { return v.DiskCapacityInBytes }).(pulumi.IntPtrOutput)
}

// The disk id.
func (o InMageProtectedDiskDetailsResponseOutput) DiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *string { return v.DiskId }).(pulumi.StringPtrOutput)
}

// The disk name.
func (o InMageProtectedDiskDetailsResponseOutput) DiskName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *string { return v.DiskName }).(pulumi.StringPtrOutput)
}

// A value indicating whether disk is resized.
func (o InMageProtectedDiskDetailsResponseOutput) DiskResized() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *string { return v.DiskResized }).(pulumi.StringPtrOutput)
}

// The file system capacity in bytes.
func (o InMageProtectedDiskDetailsResponseOutput) FileSystemCapacityInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *int { return v.FileSystemCapacityInBytes }).(pulumi.IntPtrOutput)
}

// The health error code for the disk.
func (o InMageProtectedDiskDetailsResponseOutput) HealthErrorCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *string { return v.HealthErrorCode }).(pulumi.StringPtrOutput)
}

// The last RPO calculated time.
func (o InMageProtectedDiskDetailsResponseOutput) LastRpoCalculatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *string { return v.LastRpoCalculatedTime }).(pulumi.StringPtrOutput)
}

// The protection stage.
func (o InMageProtectedDiskDetailsResponseOutput) ProtectionStage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *string { return v.ProtectionStage }).(pulumi.StringPtrOutput)
}

// The PS data transit in MB.
func (o InMageProtectedDiskDetailsResponseOutput) PsDataInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *float64 { return v.PsDataInMB }).(pulumi.Float64PtrOutput)
}

// The resync duration in seconds.
func (o InMageProtectedDiskDetailsResponseOutput) ResyncDurationInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *int { return v.ResyncDurationInSeconds }).(pulumi.IntPtrOutput)
}

// The resync progress percentage.
func (o InMageProtectedDiskDetailsResponseOutput) ResyncProgressPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *int { return v.ResyncProgressPercentage }).(pulumi.IntPtrOutput)
}

// A value indicating whether resync is required for this disk.
func (o InMageProtectedDiskDetailsResponseOutput) ResyncRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *string { return v.ResyncRequired }).(pulumi.StringPtrOutput)
}

// The RPO in seconds.
func (o InMageProtectedDiskDetailsResponseOutput) RpoInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *int { return v.RpoInSeconds }).(pulumi.IntPtrOutput)
}

// The source data transit in MB.
func (o InMageProtectedDiskDetailsResponseOutput) SourceDataInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *float64 { return v.SourceDataInMB }).(pulumi.Float64PtrOutput)
}

// The target data transit in MB.
func (o InMageProtectedDiskDetailsResponseOutput) TargetDataInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *float64 { return v.TargetDataInMB }).(pulumi.Float64PtrOutput)
}

type InMageProtectedDiskDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (InMageProtectedDiskDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InMageProtectedDiskDetailsResponse)(nil)).Elem()
}

func (o InMageProtectedDiskDetailsResponseArrayOutput) ToInMageProtectedDiskDetailsResponseArrayOutput() InMageProtectedDiskDetailsResponseArrayOutput {
	return o
}

func (o InMageProtectedDiskDetailsResponseArrayOutput) ToInMageProtectedDiskDetailsResponseArrayOutputWithContext(ctx context.Context) InMageProtectedDiskDetailsResponseArrayOutput {
	return o
}

func (o InMageProtectedDiskDetailsResponseArrayOutput) Index(i pulumi.IntInput) InMageProtectedDiskDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InMageProtectedDiskDetailsResponse {
		return vs[0].([]InMageProtectedDiskDetailsResponse)[vs[1].(int)]
	}).(InMageProtectedDiskDetailsResponseOutput)
}

// InMage provider specific settings
type InMageReplicationDetailsResponse struct {
	// The active location of the VM. If the VM is being protected from Azure, this field will take values from { Azure, OnPrem }. If the VM is being protected between two data-centers, this field will be OnPrem always.
	ActiveSiteType *string `pulumi:"activeSiteType"`
	// The agent details.
	AgentDetails *InMageAgentDetailsResponse `pulumi:"agentDetails"`
	// A value indicating the underlying Azure storage account. If the VM is not running in Azure, this value shall be set to null.
	AzureStorageAccountId *string `pulumi:"azureStorageAccountId"`
	// The compressed data change rate in MB.
	CompressedDataRateInMB *float64 `pulumi:"compressedDataRateInMB"`
	// The collection of Consistency points.
	ConsistencyPoints map[string]string `pulumi:"consistencyPoints"`
	// The data stores of the on-premise machine Value can be list of strings that contain data store names
	Datastores []string `pulumi:"datastores"`
	// A value indicating the discovery type of the machine.
	DiscoveryType *string `pulumi:"discoveryType"`
	// A value indicating whether any disk is resized for this VM.
	DiskResized *string `pulumi:"diskResized"`
	// The infrastructure VM Id.
	InfrastructureVmId *string `pulumi:"infrastructureVmId"`
	// Gets the Instance type.
	InstanceType string `pulumi:"instanceType"`
	// The source IP address.
	IpAddress *string `pulumi:"ipAddress"`
	// The last heartbeat received from the source server.
	LastHeartbeat *string `pulumi:"lastHeartbeat"`
	// The last RPO calculated time.
	LastRpoCalculatedTime *string `pulumi:"lastRpoCalculatedTime"`
	// The last update time received from on-prem components.
	LastUpdateReceivedTime *string `pulumi:"lastUpdateReceivedTime"`
	// The master target Id.
	MasterTargetId *string `pulumi:"masterTargetId"`
	// The multi vm group Id, if any.
	MultiVmGroupId *string `pulumi:"multiVmGroupId"`
	// The multi vm group name, if any.
	MultiVmGroupName *string `pulumi:"multiVmGroupName"`
	// A value indicating whether the multi vm sync is enabled or disabled.
	MultiVmSyncStatus *string `pulumi:"multiVmSyncStatus"`
	// The OS details.
	OsDetails *OSDiskDetailsResponse `pulumi:"osDetails"`
	// The OS Version of the protected item.
	OsVersion *string `pulumi:"osVersion"`
	// The process server Id.
	ProcessServerId *string `pulumi:"processServerId"`
	// The list of protected disks.
	ProtectedDisks []InMageProtectedDiskDetailsResponse `pulumi:"protectedDisks"`
	// The protection stage.
	ProtectionStage *string `pulumi:"protectionStage"`
	// A value indicating whether the source server requires a restart after update.
	RebootAfterUpdateStatus *string `pulumi:"rebootAfterUpdateStatus"`
	// The replica id of the protected item.
	ReplicaId *string `pulumi:"replicaId"`
	// The resync details of the machine
	ResyncDetails *InitialReplicationDetailsResponse `pulumi:"resyncDetails"`
	// The retention window end time.
	RetentionWindowEnd *string `pulumi:"retentionWindowEnd"`
	// The retention window start time.
	RetentionWindowStart *string `pulumi:"retentionWindowStart"`
	// The RPO in seconds.
	RpoInSeconds *int `pulumi:"rpoInSeconds"`
	// The CPU count of the VM on the primary side.
	SourceVmCPUCount *int `pulumi:"sourceVmCPUCount"`
	// The RAM size of the VM on the primary side.
	SourceVmRAMSizeInMB *int `pulumi:"sourceVmRAMSizeInMB"`
	// The uncompressed data change rate in MB.
	UncompressedDataRateInMB *float64 `pulumi:"uncompressedDataRateInMB"`
	// The vCenter infrastructure Id.
	VCenterInfrastructureId *string `pulumi:"vCenterInfrastructureId"`
	// The validation errors of the on-premise machine Value can be list of validation errors
	ValidationErrors []HealthErrorResponse `pulumi:"validationErrors"`
	// The virtual machine Id.
	VmId *string `pulumi:"vmId"`
	// The PE Network details.
	VmNics []VMNicDetailsResponse `pulumi:"vmNics"`
	// The protection state for the vm.
	VmProtectionState *string `pulumi:"vmProtectionState"`
	// The protection state description for the vm.
	VmProtectionStateDescription *string `pulumi:"vmProtectionStateDescription"`
}

// InMage provider specific settings
type InMageReplicationDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMageReplicationDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageReplicationDetailsResponse)(nil)).Elem()
}

func (o InMageReplicationDetailsResponseOutput) ToInMageReplicationDetailsResponseOutput() InMageReplicationDetailsResponseOutput {
	return o
}

func (o InMageReplicationDetailsResponseOutput) ToInMageReplicationDetailsResponseOutputWithContext(ctx context.Context) InMageReplicationDetailsResponseOutput {
	return o
}

// The active location of the VM. If the VM is being protected from Azure, this field will take values from { Azure, OnPrem }. If the VM is being protected between two data-centers, this field will be OnPrem always.
func (o InMageReplicationDetailsResponseOutput) ActiveSiteType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.ActiveSiteType }).(pulumi.StringPtrOutput)
}

// The agent details.
func (o InMageReplicationDetailsResponseOutput) AgentDetails() InMageAgentDetailsResponsePtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *InMageAgentDetailsResponse { return v.AgentDetails }).(InMageAgentDetailsResponsePtrOutput)
}

// A value indicating the underlying Azure storage account. If the VM is not running in Azure, this value shall be set to null.
func (o InMageReplicationDetailsResponseOutput) AzureStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.AzureStorageAccountId }).(pulumi.StringPtrOutput)
}

// The compressed data change rate in MB.
func (o InMageReplicationDetailsResponseOutput) CompressedDataRateInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *float64 { return v.CompressedDataRateInMB }).(pulumi.Float64PtrOutput)
}

// The collection of Consistency points.
func (o InMageReplicationDetailsResponseOutput) ConsistencyPoints() pulumi.StringMapOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) map[string]string { return v.ConsistencyPoints }).(pulumi.StringMapOutput)
}

// The data stores of the on-premise machine Value can be list of strings that contain data store names
func (o InMageReplicationDetailsResponseOutput) Datastores() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) []string { return v.Datastores }).(pulumi.StringArrayOutput)
}

// A value indicating the discovery type of the machine.
func (o InMageReplicationDetailsResponseOutput) DiscoveryType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.DiscoveryType }).(pulumi.StringPtrOutput)
}

// A value indicating whether any disk is resized for this VM.
func (o InMageReplicationDetailsResponseOutput) DiskResized() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.DiskResized }).(pulumi.StringPtrOutput)
}

// The infrastructure VM Id.
func (o InMageReplicationDetailsResponseOutput) InfrastructureVmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.InfrastructureVmId }).(pulumi.StringPtrOutput)
}

// Gets the Instance type.
func (o InMageReplicationDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The source IP address.
func (o InMageReplicationDetailsResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The last heartbeat received from the source server.
func (o InMageReplicationDetailsResponseOutput) LastHeartbeat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.LastHeartbeat }).(pulumi.StringPtrOutput)
}

// The last RPO calculated time.
func (o InMageReplicationDetailsResponseOutput) LastRpoCalculatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.LastRpoCalculatedTime }).(pulumi.StringPtrOutput)
}

// The last update time received from on-prem components.
func (o InMageReplicationDetailsResponseOutput) LastUpdateReceivedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.LastUpdateReceivedTime }).(pulumi.StringPtrOutput)
}

// The master target Id.
func (o InMageReplicationDetailsResponseOutput) MasterTargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.MasterTargetId }).(pulumi.StringPtrOutput)
}

// The multi vm group Id, if any.
func (o InMageReplicationDetailsResponseOutput) MultiVmGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.MultiVmGroupId }).(pulumi.StringPtrOutput)
}

// The multi vm group name, if any.
func (o InMageReplicationDetailsResponseOutput) MultiVmGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.MultiVmGroupName }).(pulumi.StringPtrOutput)
}

// A value indicating whether the multi vm sync is enabled or disabled.
func (o InMageReplicationDetailsResponseOutput) MultiVmSyncStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.MultiVmSyncStatus }).(pulumi.StringPtrOutput)
}

// The OS details.
func (o InMageReplicationDetailsResponseOutput) OsDetails() OSDiskDetailsResponsePtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *OSDiskDetailsResponse { return v.OsDetails }).(OSDiskDetailsResponsePtrOutput)
}

// The OS Version of the protected item.
func (o InMageReplicationDetailsResponseOutput) OsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.OsVersion }).(pulumi.StringPtrOutput)
}

// The process server Id.
func (o InMageReplicationDetailsResponseOutput) ProcessServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.ProcessServerId }).(pulumi.StringPtrOutput)
}

// The list of protected disks.
func (o InMageReplicationDetailsResponseOutput) ProtectedDisks() InMageProtectedDiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) []InMageProtectedDiskDetailsResponse { return v.ProtectedDisks }).(InMageProtectedDiskDetailsResponseArrayOutput)
}

// The protection stage.
func (o InMageReplicationDetailsResponseOutput) ProtectionStage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.ProtectionStage }).(pulumi.StringPtrOutput)
}

// A value indicating whether the source server requires a restart after update.
func (o InMageReplicationDetailsResponseOutput) RebootAfterUpdateStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.RebootAfterUpdateStatus }).(pulumi.StringPtrOutput)
}

// The replica id of the protected item.
func (o InMageReplicationDetailsResponseOutput) ReplicaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.ReplicaId }).(pulumi.StringPtrOutput)
}

// The resync details of the machine
func (o InMageReplicationDetailsResponseOutput) ResyncDetails() InitialReplicationDetailsResponsePtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *InitialReplicationDetailsResponse { return v.ResyncDetails }).(InitialReplicationDetailsResponsePtrOutput)
}

// The retention window end time.
func (o InMageReplicationDetailsResponseOutput) RetentionWindowEnd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.RetentionWindowEnd }).(pulumi.StringPtrOutput)
}

// The retention window start time.
func (o InMageReplicationDetailsResponseOutput) RetentionWindowStart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.RetentionWindowStart }).(pulumi.StringPtrOutput)
}

// The RPO in seconds.
func (o InMageReplicationDetailsResponseOutput) RpoInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *int { return v.RpoInSeconds }).(pulumi.IntPtrOutput)
}

// The CPU count of the VM on the primary side.
func (o InMageReplicationDetailsResponseOutput) SourceVmCPUCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *int { return v.SourceVmCPUCount }).(pulumi.IntPtrOutput)
}

// The RAM size of the VM on the primary side.
func (o InMageReplicationDetailsResponseOutput) SourceVmRAMSizeInMB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *int { return v.SourceVmRAMSizeInMB }).(pulumi.IntPtrOutput)
}

// The uncompressed data change rate in MB.
func (o InMageReplicationDetailsResponseOutput) UncompressedDataRateInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *float64 { return v.UncompressedDataRateInMB }).(pulumi.Float64PtrOutput)
}

// The vCenter infrastructure Id.
func (o InMageReplicationDetailsResponseOutput) VCenterInfrastructureId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.VCenterInfrastructureId }).(pulumi.StringPtrOutput)
}

// The validation errors of the on-premise machine Value can be list of validation errors
func (o InMageReplicationDetailsResponseOutput) ValidationErrors() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) []HealthErrorResponse { return v.ValidationErrors }).(HealthErrorResponseArrayOutput)
}

// The virtual machine Id.
func (o InMageReplicationDetailsResponseOutput) VmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.VmId }).(pulumi.StringPtrOutput)
}

// The PE Network details.
func (o InMageReplicationDetailsResponseOutput) VmNics() VMNicDetailsResponseArrayOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) []VMNicDetailsResponse { return v.VmNics }).(VMNicDetailsResponseArrayOutput)
}

// The protection state for the vm.
func (o InMageReplicationDetailsResponseOutput) VmProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.VmProtectionState }).(pulumi.StringPtrOutput)
}

// The protection state description for the vm.
func (o InMageReplicationDetailsResponseOutput) VmProtectionStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.VmProtectionStateDescription }).(pulumi.StringPtrOutput)
}

// Guest disk signature based disk exclusion option when doing enable protection of virtual machine in InMage provider.
type InMageVolumeExclusionOptions struct {
	// The value indicating whether to exclude multi volume disk or not. If a disk has multiple volumes and one of the volume has label matching with VolumeLabel this disk will be excluded from replication if OnlyExcludeIfSingleVolume is false.
	OnlyExcludeIfSingleVolume *string `pulumi:"onlyExcludeIfSingleVolume"`
	// The volume label. The disk having any volume with this label will be excluded from replication.
	VolumeLabel *string `pulumi:"volumeLabel"`
}

// InMageVolumeExclusionOptionsInput is an input type that accepts InMageVolumeExclusionOptionsArgs and InMageVolumeExclusionOptionsOutput values.
// You can construct a concrete instance of `InMageVolumeExclusionOptionsInput` via:
//
//          InMageVolumeExclusionOptionsArgs{...}
type InMageVolumeExclusionOptionsInput interface {
	pulumi.Input

	ToInMageVolumeExclusionOptionsOutput() InMageVolumeExclusionOptionsOutput
	ToInMageVolumeExclusionOptionsOutputWithContext(context.Context) InMageVolumeExclusionOptionsOutput
}

// Guest disk signature based disk exclusion option when doing enable protection of virtual machine in InMage provider.
type InMageVolumeExclusionOptionsArgs struct {
	// The value indicating whether to exclude multi volume disk or not. If a disk has multiple volumes and one of the volume has label matching with VolumeLabel this disk will be excluded from replication if OnlyExcludeIfSingleVolume is false.
	OnlyExcludeIfSingleVolume pulumi.StringPtrInput `pulumi:"onlyExcludeIfSingleVolume"`
	// The volume label. The disk having any volume with this label will be excluded from replication.
	VolumeLabel pulumi.StringPtrInput `pulumi:"volumeLabel"`
}

func (InMageVolumeExclusionOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageVolumeExclusionOptions)(nil)).Elem()
}

func (i InMageVolumeExclusionOptionsArgs) ToInMageVolumeExclusionOptionsOutput() InMageVolumeExclusionOptionsOutput {
	return i.ToInMageVolumeExclusionOptionsOutputWithContext(context.Background())
}

func (i InMageVolumeExclusionOptionsArgs) ToInMageVolumeExclusionOptionsOutputWithContext(ctx context.Context) InMageVolumeExclusionOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageVolumeExclusionOptionsOutput)
}

// InMageVolumeExclusionOptionsArrayInput is an input type that accepts InMageVolumeExclusionOptionsArray and InMageVolumeExclusionOptionsArrayOutput values.
// You can construct a concrete instance of `InMageVolumeExclusionOptionsArrayInput` via:
//
//          InMageVolumeExclusionOptionsArray{ InMageVolumeExclusionOptionsArgs{...} }
type InMageVolumeExclusionOptionsArrayInput interface {
	pulumi.Input

	ToInMageVolumeExclusionOptionsArrayOutput() InMageVolumeExclusionOptionsArrayOutput
	ToInMageVolumeExclusionOptionsArrayOutputWithContext(context.Context) InMageVolumeExclusionOptionsArrayOutput
}

type InMageVolumeExclusionOptionsArray []InMageVolumeExclusionOptionsInput

func (InMageVolumeExclusionOptionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InMageVolumeExclusionOptions)(nil)).Elem()
}

func (i InMageVolumeExclusionOptionsArray) ToInMageVolumeExclusionOptionsArrayOutput() InMageVolumeExclusionOptionsArrayOutput {
	return i.ToInMageVolumeExclusionOptionsArrayOutputWithContext(context.Background())
}

func (i InMageVolumeExclusionOptionsArray) ToInMageVolumeExclusionOptionsArrayOutputWithContext(ctx context.Context) InMageVolumeExclusionOptionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageVolumeExclusionOptionsArrayOutput)
}

// Initial replication details.
type InitialReplicationDetailsResponse struct {
	// The initial replication progress percentage.
	InitialReplicationProgressPercentage *string `pulumi:"initialReplicationProgressPercentage"`
	// Initial replication type.
	InitialReplicationType *string `pulumi:"initialReplicationType"`
}

// Initial replication details.
type InitialReplicationDetailsResponseOutput struct{ *pulumi.OutputState }

func (InitialReplicationDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InitialReplicationDetailsResponse)(nil)).Elem()
}

func (o InitialReplicationDetailsResponseOutput) ToInitialReplicationDetailsResponseOutput() InitialReplicationDetailsResponseOutput {
	return o
}

func (o InitialReplicationDetailsResponseOutput) ToInitialReplicationDetailsResponseOutputWithContext(ctx context.Context) InitialReplicationDetailsResponseOutput {
	return o
}

func (o InitialReplicationDetailsResponseOutput) ToInitialReplicationDetailsResponsePtrOutput() InitialReplicationDetailsResponsePtrOutput {
	return o.ToInitialReplicationDetailsResponsePtrOutputWithContext(context.Background())
}

func (o InitialReplicationDetailsResponseOutput) ToInitialReplicationDetailsResponsePtrOutputWithContext(ctx context.Context) InitialReplicationDetailsResponsePtrOutput {
	return o.ApplyT(func(v InitialReplicationDetailsResponse) *InitialReplicationDetailsResponse {
		return &v
	}).(InitialReplicationDetailsResponsePtrOutput)
}

// The initial replication progress percentage.
func (o InitialReplicationDetailsResponseOutput) InitialReplicationProgressPercentage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InitialReplicationDetailsResponse) *string { return v.InitialReplicationProgressPercentage }).(pulumi.StringPtrOutput)
}

// Initial replication type.
func (o InitialReplicationDetailsResponseOutput) InitialReplicationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InitialReplicationDetailsResponse) *string { return v.InitialReplicationType }).(pulumi.StringPtrOutput)
}

type InitialReplicationDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (InitialReplicationDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InitialReplicationDetailsResponse)(nil)).Elem()
}

func (o InitialReplicationDetailsResponsePtrOutput) ToInitialReplicationDetailsResponsePtrOutput() InitialReplicationDetailsResponsePtrOutput {
	return o
}

func (o InitialReplicationDetailsResponsePtrOutput) ToInitialReplicationDetailsResponsePtrOutputWithContext(ctx context.Context) InitialReplicationDetailsResponsePtrOutput {
	return o
}

func (o InitialReplicationDetailsResponsePtrOutput) Elem() InitialReplicationDetailsResponseOutput {
	return o.ApplyT(func(v *InitialReplicationDetailsResponse) InitialReplicationDetailsResponse { return *v }).(InitialReplicationDetailsResponseOutput)
}

// The initial replication progress percentage.
func (o InitialReplicationDetailsResponsePtrOutput) InitialReplicationProgressPercentage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InitialReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.InitialReplicationProgressPercentage
	}).(pulumi.StringPtrOutput)
}

// Initial replication type.
func (o InitialReplicationDetailsResponsePtrOutput) InitialReplicationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InitialReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.InitialReplicationType
	}).(pulumi.StringPtrOutput)
}

// Azure VM input endpoint details.
type InputEndpointResponse struct {
	// The input endpoint name.
	EndpointName *string `pulumi:"endpointName"`
	// The input endpoint private port.
	PrivatePort *int `pulumi:"privatePort"`
	// The input endpoint protocol.
	Protocol *string `pulumi:"protocol"`
	// The input endpoint public port.
	PublicPort *int `pulumi:"publicPort"`
}

// Azure VM input endpoint details.
type InputEndpointResponseOutput struct{ *pulumi.OutputState }

func (InputEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InputEndpointResponse)(nil)).Elem()
}

func (o InputEndpointResponseOutput) ToInputEndpointResponseOutput() InputEndpointResponseOutput {
	return o
}

func (o InputEndpointResponseOutput) ToInputEndpointResponseOutputWithContext(ctx context.Context) InputEndpointResponseOutput {
	return o
}

// The input endpoint name.
func (o InputEndpointResponseOutput) EndpointName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputEndpointResponse) *string { return v.EndpointName }).(pulumi.StringPtrOutput)
}

// The input endpoint private port.
func (o InputEndpointResponseOutput) PrivatePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InputEndpointResponse) *int { return v.PrivatePort }).(pulumi.IntPtrOutput)
}

// The input endpoint protocol.
func (o InputEndpointResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputEndpointResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The input endpoint public port.
func (o InputEndpointResponseOutput) PublicPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InputEndpointResponse) *int { return v.PublicPort }).(pulumi.IntPtrOutput)
}

type InputEndpointResponseArrayOutput struct{ *pulumi.OutputState }

func (InputEndpointResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InputEndpointResponse)(nil)).Elem()
}

func (o InputEndpointResponseArrayOutput) ToInputEndpointResponseArrayOutput() InputEndpointResponseArrayOutput {
	return o
}

func (o InputEndpointResponseArrayOutput) ToInputEndpointResponseArrayOutputWithContext(ctx context.Context) InputEndpointResponseArrayOutput {
	return o
}

func (o InputEndpointResponseArrayOutput) Index(i pulumi.IntInput) InputEndpointResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InputEndpointResponse {
		return vs[0].([]InputEndpointResponse)[vs[1].(int)]
	}).(InputEndpointResponseOutput)
}

// Details of a Master Target Server.
type MasterTargetServerResponse struct {
	// The version of the scout component on the server.
	AgentVersion *string `pulumi:"agentVersion"`
	// The list of data stores in the fabric.
	DataStores []DataStoreResponse `pulumi:"dataStores"`
	// Disk count of the master target.
	DiskCount *int `pulumi:"diskCount"`
	// The server Id.
	Id *string `pulumi:"id"`
	// The IP address of the server.
	IpAddress *string `pulumi:"ipAddress"`
	// The last heartbeat received from the server.
	LastHeartbeat *string `pulumi:"lastHeartbeat"`
	// The server name.
	Name *string `pulumi:"name"`
	// The OS type of the server.
	OsType *string `pulumi:"osType"`
	// OS Version of the master target.
	OsVersion *string `pulumi:"osVersion"`
	// The retention volumes of Master target Server.
	RetentionVolumes []RetentionVolumeResponse `pulumi:"retentionVolumes"`
	// Validation errors.
	ValidationErrors []HealthErrorResponse `pulumi:"validationErrors"`
	// Version status
	VersionStatus *string `pulumi:"versionStatus"`
}

// Details of a Master Target Server.
type MasterTargetServerResponseOutput struct{ *pulumi.OutputState }

func (MasterTargetServerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MasterTargetServerResponse)(nil)).Elem()
}

func (o MasterTargetServerResponseOutput) ToMasterTargetServerResponseOutput() MasterTargetServerResponseOutput {
	return o
}

func (o MasterTargetServerResponseOutput) ToMasterTargetServerResponseOutputWithContext(ctx context.Context) MasterTargetServerResponseOutput {
	return o
}

// The version of the scout component on the server.
func (o MasterTargetServerResponseOutput) AgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) *string { return v.AgentVersion }).(pulumi.StringPtrOutput)
}

// The list of data stores in the fabric.
func (o MasterTargetServerResponseOutput) DataStores() DataStoreResponseArrayOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) []DataStoreResponse { return v.DataStores }).(DataStoreResponseArrayOutput)
}

// Disk count of the master target.
func (o MasterTargetServerResponseOutput) DiskCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) *int { return v.DiskCount }).(pulumi.IntPtrOutput)
}

// The server Id.
func (o MasterTargetServerResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The IP address of the server.
func (o MasterTargetServerResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The last heartbeat received from the server.
func (o MasterTargetServerResponseOutput) LastHeartbeat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) *string { return v.LastHeartbeat }).(pulumi.StringPtrOutput)
}

// The server name.
func (o MasterTargetServerResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The OS type of the server.
func (o MasterTargetServerResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// OS Version of the master target.
func (o MasterTargetServerResponseOutput) OsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) *string { return v.OsVersion }).(pulumi.StringPtrOutput)
}

// The retention volumes of Master target Server.
func (o MasterTargetServerResponseOutput) RetentionVolumes() RetentionVolumeResponseArrayOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) []RetentionVolumeResponse { return v.RetentionVolumes }).(RetentionVolumeResponseArrayOutput)
}

// Validation errors.
func (o MasterTargetServerResponseOutput) ValidationErrors() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) []HealthErrorResponse { return v.ValidationErrors }).(HealthErrorResponseArrayOutput)
}

// Version status
func (o MasterTargetServerResponseOutput) VersionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) *string { return v.VersionStatus }).(pulumi.StringPtrOutput)
}

type MasterTargetServerResponseArrayOutput struct{ *pulumi.OutputState }

func (MasterTargetServerResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MasterTargetServerResponse)(nil)).Elem()
}

func (o MasterTargetServerResponseArrayOutput) ToMasterTargetServerResponseArrayOutput() MasterTargetServerResponseArrayOutput {
	return o
}

func (o MasterTargetServerResponseArrayOutput) ToMasterTargetServerResponseArrayOutputWithContext(ctx context.Context) MasterTargetServerResponseArrayOutput {
	return o
}

func (o MasterTargetServerResponseArrayOutput) Index(i pulumi.IntInput) MasterTargetServerResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MasterTargetServerResponse {
		return vs[0].([]MasterTargetServerResponse)[vs[1].(int)]
	}).(MasterTargetServerResponseOutput)
}

// The Mobility Service update details.
type MobilityServiceUpdateResponse struct {
	// The OS type.
	OsType *string `pulumi:"osType"`
	// The reboot status of the update - whether it is required or not.
	RebootStatus *string `pulumi:"rebootStatus"`
	// The version of the latest update.
	Version *string `pulumi:"version"`
}

// The Mobility Service update details.
type MobilityServiceUpdateResponseOutput struct{ *pulumi.OutputState }

func (MobilityServiceUpdateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MobilityServiceUpdateResponse)(nil)).Elem()
}

func (o MobilityServiceUpdateResponseOutput) ToMobilityServiceUpdateResponseOutput() MobilityServiceUpdateResponseOutput {
	return o
}

func (o MobilityServiceUpdateResponseOutput) ToMobilityServiceUpdateResponseOutputWithContext(ctx context.Context) MobilityServiceUpdateResponseOutput {
	return o
}

// The OS type.
func (o MobilityServiceUpdateResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MobilityServiceUpdateResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// The reboot status of the update - whether it is required or not.
func (o MobilityServiceUpdateResponseOutput) RebootStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MobilityServiceUpdateResponse) *string { return v.RebootStatus }).(pulumi.StringPtrOutput)
}

// The version of the latest update.
func (o MobilityServiceUpdateResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MobilityServiceUpdateResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type MobilityServiceUpdateResponseArrayOutput struct{ *pulumi.OutputState }

func (MobilityServiceUpdateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MobilityServiceUpdateResponse)(nil)).Elem()
}

func (o MobilityServiceUpdateResponseArrayOutput) ToMobilityServiceUpdateResponseArrayOutput() MobilityServiceUpdateResponseArrayOutput {
	return o
}

func (o MobilityServiceUpdateResponseArrayOutput) ToMobilityServiceUpdateResponseArrayOutputWithContext(ctx context.Context) MobilityServiceUpdateResponseArrayOutput {
	return o
}

func (o MobilityServiceUpdateResponseArrayOutput) Index(i pulumi.IntInput) MobilityServiceUpdateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MobilityServiceUpdateResponse {
		return vs[0].([]MobilityServiceUpdateResponse)[vs[1].(int)]
	}).(MobilityServiceUpdateResponseOutput)
}

// Network Mapping Properties.
type NetworkMappingPropertiesResponse struct {
	// The fabric specific settings.
	FabricSpecificSettings interface{} `pulumi:"fabricSpecificSettings"`
	// The primary fabric friendly name.
	PrimaryFabricFriendlyName *string `pulumi:"primaryFabricFriendlyName"`
	// The primary network friendly name.
	PrimaryNetworkFriendlyName *string `pulumi:"primaryNetworkFriendlyName"`
	// The primary network id for network mapping.
	PrimaryNetworkId *string `pulumi:"primaryNetworkId"`
	// The recovery fabric ARM id.
	RecoveryFabricArmId *string `pulumi:"recoveryFabricArmId"`
	// The recovery fabric friendly name.
	RecoveryFabricFriendlyName *string `pulumi:"recoveryFabricFriendlyName"`
	// The recovery network friendly name.
	RecoveryNetworkFriendlyName *string `pulumi:"recoveryNetworkFriendlyName"`
	// The recovery network id for network mapping.
	RecoveryNetworkId *string `pulumi:"recoveryNetworkId"`
	// The pairing state for network mapping.
	State *string `pulumi:"state"`
}

// Network Mapping Properties.
type NetworkMappingPropertiesResponseOutput struct{ *pulumi.OutputState }

func (NetworkMappingPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkMappingPropertiesResponse)(nil)).Elem()
}

func (o NetworkMappingPropertiesResponseOutput) ToNetworkMappingPropertiesResponseOutput() NetworkMappingPropertiesResponseOutput {
	return o
}

func (o NetworkMappingPropertiesResponseOutput) ToNetworkMappingPropertiesResponseOutputWithContext(ctx context.Context) NetworkMappingPropertiesResponseOutput {
	return o
}

func (o NetworkMappingPropertiesResponseOutput) ToNetworkMappingPropertiesResponsePtrOutput() NetworkMappingPropertiesResponsePtrOutput {
	return o.ToNetworkMappingPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o NetworkMappingPropertiesResponseOutput) ToNetworkMappingPropertiesResponsePtrOutputWithContext(ctx context.Context) NetworkMappingPropertiesResponsePtrOutput {
	return o.ApplyT(func(v NetworkMappingPropertiesResponse) *NetworkMappingPropertiesResponse {
		return &v
	}).(NetworkMappingPropertiesResponsePtrOutput)
}

// The fabric specific settings.
func (o NetworkMappingPropertiesResponseOutput) FabricSpecificSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v NetworkMappingPropertiesResponse) interface{} { return v.FabricSpecificSettings }).(pulumi.AnyOutput)
}

// The primary fabric friendly name.
func (o NetworkMappingPropertiesResponseOutput) PrimaryFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkMappingPropertiesResponse) *string { return v.PrimaryFabricFriendlyName }).(pulumi.StringPtrOutput)
}

// The primary network friendly name.
func (o NetworkMappingPropertiesResponseOutput) PrimaryNetworkFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkMappingPropertiesResponse) *string { return v.PrimaryNetworkFriendlyName }).(pulumi.StringPtrOutput)
}

// The primary network id for network mapping.
func (o NetworkMappingPropertiesResponseOutput) PrimaryNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkMappingPropertiesResponse) *string { return v.PrimaryNetworkId }).(pulumi.StringPtrOutput)
}

// The recovery fabric ARM id.
func (o NetworkMappingPropertiesResponseOutput) RecoveryFabricArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkMappingPropertiesResponse) *string { return v.RecoveryFabricArmId }).(pulumi.StringPtrOutput)
}

// The recovery fabric friendly name.
func (o NetworkMappingPropertiesResponseOutput) RecoveryFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkMappingPropertiesResponse) *string { return v.RecoveryFabricFriendlyName }).(pulumi.StringPtrOutput)
}

// The recovery network friendly name.
func (o NetworkMappingPropertiesResponseOutput) RecoveryNetworkFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkMappingPropertiesResponse) *string { return v.RecoveryNetworkFriendlyName }).(pulumi.StringPtrOutput)
}

// The recovery network id for network mapping.
func (o NetworkMappingPropertiesResponseOutput) RecoveryNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkMappingPropertiesResponse) *string { return v.RecoveryNetworkId }).(pulumi.StringPtrOutput)
}

// The pairing state for network mapping.
func (o NetworkMappingPropertiesResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkMappingPropertiesResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

type NetworkMappingPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkMappingPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkMappingPropertiesResponse)(nil)).Elem()
}

func (o NetworkMappingPropertiesResponsePtrOutput) ToNetworkMappingPropertiesResponsePtrOutput() NetworkMappingPropertiesResponsePtrOutput {
	return o
}

func (o NetworkMappingPropertiesResponsePtrOutput) ToNetworkMappingPropertiesResponsePtrOutputWithContext(ctx context.Context) NetworkMappingPropertiesResponsePtrOutput {
	return o
}

func (o NetworkMappingPropertiesResponsePtrOutput) Elem() NetworkMappingPropertiesResponseOutput {
	return o.ApplyT(func(v *NetworkMappingPropertiesResponse) NetworkMappingPropertiesResponse { return *v }).(NetworkMappingPropertiesResponseOutput)
}

// The fabric specific settings.
func (o NetworkMappingPropertiesResponsePtrOutput) FabricSpecificSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v *NetworkMappingPropertiesResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.FabricSpecificSettings
	}).(pulumi.AnyOutput)
}

// The primary fabric friendly name.
func (o NetworkMappingPropertiesResponsePtrOutput) PrimaryFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkMappingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryFabricFriendlyName
	}).(pulumi.StringPtrOutput)
}

// The primary network friendly name.
func (o NetworkMappingPropertiesResponsePtrOutput) PrimaryNetworkFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkMappingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryNetworkFriendlyName
	}).(pulumi.StringPtrOutput)
}

// The primary network id for network mapping.
func (o NetworkMappingPropertiesResponsePtrOutput) PrimaryNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkMappingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryNetworkId
	}).(pulumi.StringPtrOutput)
}

// The recovery fabric ARM id.
func (o NetworkMappingPropertiesResponsePtrOutput) RecoveryFabricArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkMappingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryFabricArmId
	}).(pulumi.StringPtrOutput)
}

// The recovery fabric friendly name.
func (o NetworkMappingPropertiesResponsePtrOutput) RecoveryFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkMappingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryFabricFriendlyName
	}).(pulumi.StringPtrOutput)
}

// The recovery network friendly name.
func (o NetworkMappingPropertiesResponsePtrOutput) RecoveryNetworkFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkMappingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryNetworkFriendlyName
	}).(pulumi.StringPtrOutput)
}

// The recovery network id for network mapping.
func (o NetworkMappingPropertiesResponsePtrOutput) RecoveryNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkMappingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryNetworkId
	}).(pulumi.StringPtrOutput)
}

// The pairing state for network mapping.
func (o NetworkMappingPropertiesResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkMappingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// Disk Details.
type OSDetailsResponse struct {
	// The OS Major Version.
	OSMajorVersion *string `pulumi:"oSMajorVersion"`
	// The OS Minor Version.
	OSMinorVersion *string `pulumi:"oSMinorVersion"`
	// The OS Version.
	OSVersion *string `pulumi:"oSVersion"`
	// The OSEdition.
	OsEdition *string `pulumi:"osEdition"`
	// VM Disk details.
	OsType *string `pulumi:"osType"`
	// Product type.
	ProductType *string `pulumi:"productType"`
}

// Disk Details.
type OSDetailsResponseOutput struct{ *pulumi.OutputState }

func (OSDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OSDetailsResponse)(nil)).Elem()
}

func (o OSDetailsResponseOutput) ToOSDetailsResponseOutput() OSDetailsResponseOutput {
	return o
}

func (o OSDetailsResponseOutput) ToOSDetailsResponseOutputWithContext(ctx context.Context) OSDetailsResponseOutput {
	return o
}

func (o OSDetailsResponseOutput) ToOSDetailsResponsePtrOutput() OSDetailsResponsePtrOutput {
	return o.ToOSDetailsResponsePtrOutputWithContext(context.Background())
}

func (o OSDetailsResponseOutput) ToOSDetailsResponsePtrOutputWithContext(ctx context.Context) OSDetailsResponsePtrOutput {
	return o.ApplyT(func(v OSDetailsResponse) *OSDetailsResponse {
		return &v
	}).(OSDetailsResponsePtrOutput)
}

// The OS Major Version.
func (o OSDetailsResponseOutput) OSMajorVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSDetailsResponse) *string { return v.OSMajorVersion }).(pulumi.StringPtrOutput)
}

// The OS Minor Version.
func (o OSDetailsResponseOutput) OSMinorVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSDetailsResponse) *string { return v.OSMinorVersion }).(pulumi.StringPtrOutput)
}

// The OS Version.
func (o OSDetailsResponseOutput) OSVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSDetailsResponse) *string { return v.OSVersion }).(pulumi.StringPtrOutput)
}

// The OSEdition.
func (o OSDetailsResponseOutput) OsEdition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSDetailsResponse) *string { return v.OsEdition }).(pulumi.StringPtrOutput)
}

// VM Disk details.
func (o OSDetailsResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSDetailsResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// Product type.
func (o OSDetailsResponseOutput) ProductType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSDetailsResponse) *string { return v.ProductType }).(pulumi.StringPtrOutput)
}

type OSDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (OSDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OSDetailsResponse)(nil)).Elem()
}

func (o OSDetailsResponsePtrOutput) ToOSDetailsResponsePtrOutput() OSDetailsResponsePtrOutput {
	return o
}

func (o OSDetailsResponsePtrOutput) ToOSDetailsResponsePtrOutputWithContext(ctx context.Context) OSDetailsResponsePtrOutput {
	return o
}

func (o OSDetailsResponsePtrOutput) Elem() OSDetailsResponseOutput {
	return o.ApplyT(func(v *OSDetailsResponse) OSDetailsResponse { return *v }).(OSDetailsResponseOutput)
}

// The OS Major Version.
func (o OSDetailsResponsePtrOutput) OSMajorVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.OSMajorVersion
	}).(pulumi.StringPtrOutput)
}

// The OS Minor Version.
func (o OSDetailsResponsePtrOutput) OSMinorVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.OSMinorVersion
	}).(pulumi.StringPtrOutput)
}

// The OS Version.
func (o OSDetailsResponsePtrOutput) OSVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.OSVersion
	}).(pulumi.StringPtrOutput)
}

// The OSEdition.
func (o OSDetailsResponsePtrOutput) OsEdition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.OsEdition
	}).(pulumi.StringPtrOutput)
}

// VM Disk details.
func (o OSDetailsResponsePtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// Product type.
func (o OSDetailsResponsePtrOutput) ProductType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProductType
	}).(pulumi.StringPtrOutput)
}

// Details of the OS Disk.
type OSDiskDetailsResponse struct {
	// The type of the OS on the VM.
	OsType *string `pulumi:"osType"`
	// The id of the disk containing the OS.
	OsVhdId *string `pulumi:"osVhdId"`
	// The OS disk VHD name.
	VhdName *string `pulumi:"vhdName"`
}

// Details of the OS Disk.
type OSDiskDetailsResponseOutput struct{ *pulumi.OutputState }

func (OSDiskDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OSDiskDetailsResponse)(nil)).Elem()
}

func (o OSDiskDetailsResponseOutput) ToOSDiskDetailsResponseOutput() OSDiskDetailsResponseOutput {
	return o
}

func (o OSDiskDetailsResponseOutput) ToOSDiskDetailsResponseOutputWithContext(ctx context.Context) OSDiskDetailsResponseOutput {
	return o
}

func (o OSDiskDetailsResponseOutput) ToOSDiskDetailsResponsePtrOutput() OSDiskDetailsResponsePtrOutput {
	return o.ToOSDiskDetailsResponsePtrOutputWithContext(context.Background())
}

func (o OSDiskDetailsResponseOutput) ToOSDiskDetailsResponsePtrOutputWithContext(ctx context.Context) OSDiskDetailsResponsePtrOutput {
	return o.ApplyT(func(v OSDiskDetailsResponse) *OSDiskDetailsResponse {
		return &v
	}).(OSDiskDetailsResponsePtrOutput)
}

// The type of the OS on the VM.
func (o OSDiskDetailsResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSDiskDetailsResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// The id of the disk containing the OS.
func (o OSDiskDetailsResponseOutput) OsVhdId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSDiskDetailsResponse) *string { return v.OsVhdId }).(pulumi.StringPtrOutput)
}

// The OS disk VHD name.
func (o OSDiskDetailsResponseOutput) VhdName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSDiskDetailsResponse) *string { return v.VhdName }).(pulumi.StringPtrOutput)
}

type OSDiskDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (OSDiskDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OSDiskDetailsResponse)(nil)).Elem()
}

func (o OSDiskDetailsResponsePtrOutput) ToOSDiskDetailsResponsePtrOutput() OSDiskDetailsResponsePtrOutput {
	return o
}

func (o OSDiskDetailsResponsePtrOutput) ToOSDiskDetailsResponsePtrOutputWithContext(ctx context.Context) OSDiskDetailsResponsePtrOutput {
	return o
}

func (o OSDiskDetailsResponsePtrOutput) Elem() OSDiskDetailsResponseOutput {
	return o.ApplyT(func(v *OSDiskDetailsResponse) OSDiskDetailsResponse { return *v }).(OSDiskDetailsResponseOutput)
}

// The type of the OS on the VM.
func (o OSDiskDetailsResponsePtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDiskDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// The id of the disk containing the OS.
func (o OSDiskDetailsResponsePtrOutput) OsVhdId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDiskDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.OsVhdId
	}).(pulumi.StringPtrOutput)
}

// The OS disk VHD name.
func (o OSDiskDetailsResponsePtrOutput) VhdName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDiskDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.VhdName
	}).(pulumi.StringPtrOutput)
}

// Protection profile custom data details.
type PolicyPropertiesResponse struct {
	// The FriendlyName.
	FriendlyName *string `pulumi:"friendlyName"`
	// The ReplicationChannelSetting.
	ProviderSpecificDetails interface{} `pulumi:"providerSpecificDetails"`
}

// Protection profile custom data details.
type PolicyPropertiesResponseOutput struct{ *pulumi.OutputState }

func (PolicyPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyPropertiesResponse)(nil)).Elem()
}

func (o PolicyPropertiesResponseOutput) ToPolicyPropertiesResponseOutput() PolicyPropertiesResponseOutput {
	return o
}

func (o PolicyPropertiesResponseOutput) ToPolicyPropertiesResponseOutputWithContext(ctx context.Context) PolicyPropertiesResponseOutput {
	return o
}

func (o PolicyPropertiesResponseOutput) ToPolicyPropertiesResponsePtrOutput() PolicyPropertiesResponsePtrOutput {
	return o.ToPolicyPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o PolicyPropertiesResponseOutput) ToPolicyPropertiesResponsePtrOutputWithContext(ctx context.Context) PolicyPropertiesResponsePtrOutput {
	return o.ApplyT(func(v PolicyPropertiesResponse) *PolicyPropertiesResponse {
		return &v
	}).(PolicyPropertiesResponsePtrOutput)
}

// The FriendlyName.
func (o PolicyPropertiesResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPropertiesResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// The ReplicationChannelSetting.
func (o PolicyPropertiesResponseOutput) ProviderSpecificDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v PolicyPropertiesResponse) interface{} { return v.ProviderSpecificDetails }).(pulumi.AnyOutput)
}

type PolicyPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (PolicyPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyPropertiesResponse)(nil)).Elem()
}

func (o PolicyPropertiesResponsePtrOutput) ToPolicyPropertiesResponsePtrOutput() PolicyPropertiesResponsePtrOutput {
	return o
}

func (o PolicyPropertiesResponsePtrOutput) ToPolicyPropertiesResponsePtrOutputWithContext(ctx context.Context) PolicyPropertiesResponsePtrOutput {
	return o
}

func (o PolicyPropertiesResponsePtrOutput) Elem() PolicyPropertiesResponseOutput {
	return o.ApplyT(func(v *PolicyPropertiesResponse) PolicyPropertiesResponse { return *v }).(PolicyPropertiesResponseOutput)
}

// The FriendlyName.
func (o PolicyPropertiesResponsePtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// The ReplicationChannelSetting.
func (o PolicyPropertiesResponsePtrOutput) ProviderSpecificDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v *PolicyPropertiesResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.ProviderSpecificDetails
	}).(pulumi.AnyOutput)
}

// Details of the Process Server.
type ProcessServerResponse struct {
	// The version of the scout component on the server.
	AgentVersion *string `pulumi:"agentVersion"`
	// The available memory.
	AvailableMemoryInBytes *int `pulumi:"availableMemoryInBytes"`
	// The available space.
	AvailableSpaceInBytes *int `pulumi:"availableSpaceInBytes"`
	// The percentage of the CPU load.
	CpuLoad *string `pulumi:"cpuLoad"`
	// The CPU load status.
	CpuLoadStatus *string `pulumi:"cpuLoadStatus"`
	// The Process Server's friendly name.
	FriendlyName *string `pulumi:"friendlyName"`
	// The agent generated Id.
	HostId *string `pulumi:"hostId"`
	// The Process Server Id.
	Id *string `pulumi:"id"`
	// The IP address of the server.
	IpAddress *string `pulumi:"ipAddress"`
	// The last heartbeat received from the server.
	LastHeartbeat *string `pulumi:"lastHeartbeat"`
	// The servers configured with this PS.
	MachineCount *string `pulumi:"machineCount"`
	// The memory usage status.
	MemoryUsageStatus *string `pulumi:"memoryUsageStatus"`
	// The list of the mobility service updates available on the Process Server.
	MobilityServiceUpdates []MobilityServiceUpdateResponse `pulumi:"mobilityServiceUpdates"`
	// The OS type of the server.
	OsType *string `pulumi:"osType"`
	// OS Version of the process server. Note: This will get populated if user has CS version greater than 9.12.0.0.
	OsVersion *string `pulumi:"osVersion"`
	// The PS service status.
	PsServiceStatus *string `pulumi:"psServiceStatus"`
	// The number of replication pairs configured in this PS.
	ReplicationPairCount *string `pulumi:"replicationPairCount"`
	// The space usage status.
	SpaceUsageStatus *string `pulumi:"spaceUsageStatus"`
	// The PS SSL cert expiry date.
	SslCertExpiryDate *string `pulumi:"sslCertExpiryDate"`
	// CS SSL cert expiry date.
	SslCertExpiryRemainingDays *int `pulumi:"sslCertExpiryRemainingDays"`
	// The percentage of the system load.
	SystemLoad *string `pulumi:"systemLoad"`
	// The system load status.
	SystemLoadStatus *string `pulumi:"systemLoadStatus"`
	// The total memory.
	TotalMemoryInBytes *int `pulumi:"totalMemoryInBytes"`
	// The total space.
	TotalSpaceInBytes *int `pulumi:"totalSpaceInBytes"`
	// Version status
	VersionStatus *string `pulumi:"versionStatus"`
}

// Details of the Process Server.
type ProcessServerResponseOutput struct{ *pulumi.OutputState }

func (ProcessServerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessServerResponse)(nil)).Elem()
}

func (o ProcessServerResponseOutput) ToProcessServerResponseOutput() ProcessServerResponseOutput {
	return o
}

func (o ProcessServerResponseOutput) ToProcessServerResponseOutputWithContext(ctx context.Context) ProcessServerResponseOutput {
	return o
}

// The version of the scout component on the server.
func (o ProcessServerResponseOutput) AgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.AgentVersion }).(pulumi.StringPtrOutput)
}

// The available memory.
func (o ProcessServerResponseOutput) AvailableMemoryInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *int { return v.AvailableMemoryInBytes }).(pulumi.IntPtrOutput)
}

// The available space.
func (o ProcessServerResponseOutput) AvailableSpaceInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *int { return v.AvailableSpaceInBytes }).(pulumi.IntPtrOutput)
}

// The percentage of the CPU load.
func (o ProcessServerResponseOutput) CpuLoad() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.CpuLoad }).(pulumi.StringPtrOutput)
}

// The CPU load status.
func (o ProcessServerResponseOutput) CpuLoadStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.CpuLoadStatus }).(pulumi.StringPtrOutput)
}

// The Process Server's friendly name.
func (o ProcessServerResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// The agent generated Id.
func (o ProcessServerResponseOutput) HostId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.HostId }).(pulumi.StringPtrOutput)
}

// The Process Server Id.
func (o ProcessServerResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The IP address of the server.
func (o ProcessServerResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The last heartbeat received from the server.
func (o ProcessServerResponseOutput) LastHeartbeat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.LastHeartbeat }).(pulumi.StringPtrOutput)
}

// The servers configured with this PS.
func (o ProcessServerResponseOutput) MachineCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.MachineCount }).(pulumi.StringPtrOutput)
}

// The memory usage status.
func (o ProcessServerResponseOutput) MemoryUsageStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.MemoryUsageStatus }).(pulumi.StringPtrOutput)
}

// The list of the mobility service updates available on the Process Server.
func (o ProcessServerResponseOutput) MobilityServiceUpdates() MobilityServiceUpdateResponseArrayOutput {
	return o.ApplyT(func(v ProcessServerResponse) []MobilityServiceUpdateResponse { return v.MobilityServiceUpdates }).(MobilityServiceUpdateResponseArrayOutput)
}

// The OS type of the server.
func (o ProcessServerResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// OS Version of the process server. Note: This will get populated if user has CS version greater than 9.12.0.0.
func (o ProcessServerResponseOutput) OsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.OsVersion }).(pulumi.StringPtrOutput)
}

// The PS service status.
func (o ProcessServerResponseOutput) PsServiceStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.PsServiceStatus }).(pulumi.StringPtrOutput)
}

// The number of replication pairs configured in this PS.
func (o ProcessServerResponseOutput) ReplicationPairCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.ReplicationPairCount }).(pulumi.StringPtrOutput)
}

// The space usage status.
func (o ProcessServerResponseOutput) SpaceUsageStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.SpaceUsageStatus }).(pulumi.StringPtrOutput)
}

// The PS SSL cert expiry date.
func (o ProcessServerResponseOutput) SslCertExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.SslCertExpiryDate }).(pulumi.StringPtrOutput)
}

// CS SSL cert expiry date.
func (o ProcessServerResponseOutput) SslCertExpiryRemainingDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *int { return v.SslCertExpiryRemainingDays }).(pulumi.IntPtrOutput)
}

// The percentage of the system load.
func (o ProcessServerResponseOutput) SystemLoad() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.SystemLoad }).(pulumi.StringPtrOutput)
}

// The system load status.
func (o ProcessServerResponseOutput) SystemLoadStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.SystemLoadStatus }).(pulumi.StringPtrOutput)
}

// The total memory.
func (o ProcessServerResponseOutput) TotalMemoryInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *int { return v.TotalMemoryInBytes }).(pulumi.IntPtrOutput)
}

// The total space.
func (o ProcessServerResponseOutput) TotalSpaceInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *int { return v.TotalSpaceInBytes }).(pulumi.IntPtrOutput)
}

// Version status
func (o ProcessServerResponseOutput) VersionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.VersionStatus }).(pulumi.StringPtrOutput)
}

type ProcessServerResponseArrayOutput struct{ *pulumi.OutputState }

func (ProcessServerResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessServerResponse)(nil)).Elem()
}

func (o ProcessServerResponseArrayOutput) ToProcessServerResponseArrayOutput() ProcessServerResponseArrayOutput {
	return o
}

func (o ProcessServerResponseArrayOutput) ToProcessServerResponseArrayOutputWithContext(ctx context.Context) ProcessServerResponseArrayOutput {
	return o
}

func (o ProcessServerResponseArrayOutput) Index(i pulumi.IntInput) ProcessServerResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessServerResponse {
		return vs[0].([]ProcessServerResponse)[vs[1].(int)]
	}).(ProcessServerResponseOutput)
}

// Protection container mapping properties.
type ProtectionContainerMappingPropertiesResponse struct {
	// Health of pairing.
	Health *string `pulumi:"health"`
	// Health error.
	HealthErrorDetails []HealthErrorResponse `pulumi:"healthErrorDetails"`
	// Friendly name of replication policy.
	PolicyFriendlyName *string `pulumi:"policyFriendlyName"`
	// Policy ARM Id.
	PolicyId *string `pulumi:"policyId"`
	// Provider specific provider details.
	ProviderSpecificDetails *ProtectionContainerMappingProviderSpecificDetailsResponse `pulumi:"providerSpecificDetails"`
	// Friendly name of source fabric.
	SourceFabricFriendlyName *string `pulumi:"sourceFabricFriendlyName"`
	// Friendly name of source protection container.
	SourceProtectionContainerFriendlyName *string `pulumi:"sourceProtectionContainerFriendlyName"`
	// Association Status
	State *string `pulumi:"state"`
	// Friendly name of target fabric.
	TargetFabricFriendlyName *string `pulumi:"targetFabricFriendlyName"`
	// Friendly name of paired container.
	TargetProtectionContainerFriendlyName *string `pulumi:"targetProtectionContainerFriendlyName"`
	// Paired protection container ARM ID.
	TargetProtectionContainerId *string `pulumi:"targetProtectionContainerId"`
}

// Protection container mapping properties.
type ProtectionContainerMappingPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ProtectionContainerMappingPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionContainerMappingPropertiesResponse)(nil)).Elem()
}

func (o ProtectionContainerMappingPropertiesResponseOutput) ToProtectionContainerMappingPropertiesResponseOutput() ProtectionContainerMappingPropertiesResponseOutput {
	return o
}

func (o ProtectionContainerMappingPropertiesResponseOutput) ToProtectionContainerMappingPropertiesResponseOutputWithContext(ctx context.Context) ProtectionContainerMappingPropertiesResponseOutput {
	return o
}

func (o ProtectionContainerMappingPropertiesResponseOutput) ToProtectionContainerMappingPropertiesResponsePtrOutput() ProtectionContainerMappingPropertiesResponsePtrOutput {
	return o.ToProtectionContainerMappingPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ProtectionContainerMappingPropertiesResponseOutput) ToProtectionContainerMappingPropertiesResponsePtrOutputWithContext(ctx context.Context) ProtectionContainerMappingPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) *ProtectionContainerMappingPropertiesResponse {
		return &v
	}).(ProtectionContainerMappingPropertiesResponsePtrOutput)
}

// Health of pairing.
func (o ProtectionContainerMappingPropertiesResponseOutput) Health() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) *string { return v.Health }).(pulumi.StringPtrOutput)
}

// Health error.
func (o ProtectionContainerMappingPropertiesResponseOutput) HealthErrorDetails() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) []HealthErrorResponse {
		return v.HealthErrorDetails
	}).(HealthErrorResponseArrayOutput)
}

// Friendly name of replication policy.
func (o ProtectionContainerMappingPropertiesResponseOutput) PolicyFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) *string { return v.PolicyFriendlyName }).(pulumi.StringPtrOutput)
}

// Policy ARM Id.
func (o ProtectionContainerMappingPropertiesResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Provider specific provider details.
func (o ProtectionContainerMappingPropertiesResponseOutput) ProviderSpecificDetails() ProtectionContainerMappingProviderSpecificDetailsResponsePtrOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) *ProtectionContainerMappingProviderSpecificDetailsResponse {
		return v.ProviderSpecificDetails
	}).(ProtectionContainerMappingProviderSpecificDetailsResponsePtrOutput)
}

// Friendly name of source fabric.
func (o ProtectionContainerMappingPropertiesResponseOutput) SourceFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) *string { return v.SourceFabricFriendlyName }).(pulumi.StringPtrOutput)
}

// Friendly name of source protection container.
func (o ProtectionContainerMappingPropertiesResponseOutput) SourceProtectionContainerFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) *string {
		return v.SourceProtectionContainerFriendlyName
	}).(pulumi.StringPtrOutput)
}

// Association Status
func (o ProtectionContainerMappingPropertiesResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Friendly name of target fabric.
func (o ProtectionContainerMappingPropertiesResponseOutput) TargetFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) *string { return v.TargetFabricFriendlyName }).(pulumi.StringPtrOutput)
}

// Friendly name of paired container.
func (o ProtectionContainerMappingPropertiesResponseOutput) TargetProtectionContainerFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) *string {
		return v.TargetProtectionContainerFriendlyName
	}).(pulumi.StringPtrOutput)
}

// Paired protection container ARM ID.
func (o ProtectionContainerMappingPropertiesResponseOutput) TargetProtectionContainerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) *string { return v.TargetProtectionContainerId }).(pulumi.StringPtrOutput)
}

type ProtectionContainerMappingPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ProtectionContainerMappingPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtectionContainerMappingPropertiesResponse)(nil)).Elem()
}

func (o ProtectionContainerMappingPropertiesResponsePtrOutput) ToProtectionContainerMappingPropertiesResponsePtrOutput() ProtectionContainerMappingPropertiesResponsePtrOutput {
	return o
}

func (o ProtectionContainerMappingPropertiesResponsePtrOutput) ToProtectionContainerMappingPropertiesResponsePtrOutputWithContext(ctx context.Context) ProtectionContainerMappingPropertiesResponsePtrOutput {
	return o
}

func (o ProtectionContainerMappingPropertiesResponsePtrOutput) Elem() ProtectionContainerMappingPropertiesResponseOutput {
	return o.ApplyT(func(v *ProtectionContainerMappingPropertiesResponse) ProtectionContainerMappingPropertiesResponse {
		return *v
	}).(ProtectionContainerMappingPropertiesResponseOutput)
}

// Health of pairing.
func (o ProtectionContainerMappingPropertiesResponsePtrOutput) Health() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionContainerMappingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Health
	}).(pulumi.StringPtrOutput)
}

// Health error.
func (o ProtectionContainerMappingPropertiesResponsePtrOutput) HealthErrorDetails() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v *ProtectionContainerMappingPropertiesResponse) []HealthErrorResponse {
		if v == nil {
			return nil
		}
		return v.HealthErrorDetails
	}).(HealthErrorResponseArrayOutput)
}

// Friendly name of replication policy.
func (o ProtectionContainerMappingPropertiesResponsePtrOutput) PolicyFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionContainerMappingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PolicyFriendlyName
	}).(pulumi.StringPtrOutput)
}

// Policy ARM Id.
func (o ProtectionContainerMappingPropertiesResponsePtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionContainerMappingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// Provider specific provider details.
func (o ProtectionContainerMappingPropertiesResponsePtrOutput) ProviderSpecificDetails() ProtectionContainerMappingProviderSpecificDetailsResponsePtrOutput {
	return o.ApplyT(func(v *ProtectionContainerMappingPropertiesResponse) *ProtectionContainerMappingProviderSpecificDetailsResponse {
		if v == nil {
			return nil
		}
		return v.ProviderSpecificDetails
	}).(ProtectionContainerMappingProviderSpecificDetailsResponsePtrOutput)
}

// Friendly name of source fabric.
func (o ProtectionContainerMappingPropertiesResponsePtrOutput) SourceFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionContainerMappingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.SourceFabricFriendlyName
	}).(pulumi.StringPtrOutput)
}

// Friendly name of source protection container.
func (o ProtectionContainerMappingPropertiesResponsePtrOutput) SourceProtectionContainerFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionContainerMappingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.SourceProtectionContainerFriendlyName
	}).(pulumi.StringPtrOutput)
}

// Association Status
func (o ProtectionContainerMappingPropertiesResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionContainerMappingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// Friendly name of target fabric.
func (o ProtectionContainerMappingPropertiesResponsePtrOutput) TargetFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionContainerMappingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetFabricFriendlyName
	}).(pulumi.StringPtrOutput)
}

// Friendly name of paired container.
func (o ProtectionContainerMappingPropertiesResponsePtrOutput) TargetProtectionContainerFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionContainerMappingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetProtectionContainerFriendlyName
	}).(pulumi.StringPtrOutput)
}

// Paired protection container ARM ID.
func (o ProtectionContainerMappingPropertiesResponsePtrOutput) TargetProtectionContainerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionContainerMappingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetProtectionContainerId
	}).(pulumi.StringPtrOutput)
}

// Container mapping provider specific details.
type ProtectionContainerMappingProviderSpecificDetailsResponse struct {
	// Gets the class type. Overridden in derived classes.
	InstanceType string `pulumi:"instanceType"`
}

// Container mapping provider specific details.
type ProtectionContainerMappingProviderSpecificDetailsResponseOutput struct{ *pulumi.OutputState }

func (ProtectionContainerMappingProviderSpecificDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionContainerMappingProviderSpecificDetailsResponse)(nil)).Elem()
}

func (o ProtectionContainerMappingProviderSpecificDetailsResponseOutput) ToProtectionContainerMappingProviderSpecificDetailsResponseOutput() ProtectionContainerMappingProviderSpecificDetailsResponseOutput {
	return o
}

func (o ProtectionContainerMappingProviderSpecificDetailsResponseOutput) ToProtectionContainerMappingProviderSpecificDetailsResponseOutputWithContext(ctx context.Context) ProtectionContainerMappingProviderSpecificDetailsResponseOutput {
	return o
}

func (o ProtectionContainerMappingProviderSpecificDetailsResponseOutput) ToProtectionContainerMappingProviderSpecificDetailsResponsePtrOutput() ProtectionContainerMappingProviderSpecificDetailsResponsePtrOutput {
	return o.ToProtectionContainerMappingProviderSpecificDetailsResponsePtrOutputWithContext(context.Background())
}

func (o ProtectionContainerMappingProviderSpecificDetailsResponseOutput) ToProtectionContainerMappingProviderSpecificDetailsResponsePtrOutputWithContext(ctx context.Context) ProtectionContainerMappingProviderSpecificDetailsResponsePtrOutput {
	return o.ApplyT(func(v ProtectionContainerMappingProviderSpecificDetailsResponse) *ProtectionContainerMappingProviderSpecificDetailsResponse {
		return &v
	}).(ProtectionContainerMappingProviderSpecificDetailsResponsePtrOutput)
}

// Gets the class type. Overridden in derived classes.
func (o ProtectionContainerMappingProviderSpecificDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v ProtectionContainerMappingProviderSpecificDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

type ProtectionContainerMappingProviderSpecificDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (ProtectionContainerMappingProviderSpecificDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtectionContainerMappingProviderSpecificDetailsResponse)(nil)).Elem()
}

func (o ProtectionContainerMappingProviderSpecificDetailsResponsePtrOutput) ToProtectionContainerMappingProviderSpecificDetailsResponsePtrOutput() ProtectionContainerMappingProviderSpecificDetailsResponsePtrOutput {
	return o
}

func (o ProtectionContainerMappingProviderSpecificDetailsResponsePtrOutput) ToProtectionContainerMappingProviderSpecificDetailsResponsePtrOutputWithContext(ctx context.Context) ProtectionContainerMappingProviderSpecificDetailsResponsePtrOutput {
	return o
}

func (o ProtectionContainerMappingProviderSpecificDetailsResponsePtrOutput) Elem() ProtectionContainerMappingProviderSpecificDetailsResponseOutput {
	return o.ApplyT(func(v *ProtectionContainerMappingProviderSpecificDetailsResponse) ProtectionContainerMappingProviderSpecificDetailsResponse {
		return *v
	}).(ProtectionContainerMappingProviderSpecificDetailsResponseOutput)
}

// Gets the class type. Overridden in derived classes.
func (o ProtectionContainerMappingProviderSpecificDetailsResponsePtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionContainerMappingProviderSpecificDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// RCM based Azure migration specific policy details.
type RcmAzureMigrationPolicyDetailsResponse struct {
	// The app consistent snapshot frequency in minutes.
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// The crash consistent snapshot frequency in minutes.
	CrashConsistentFrequencyInMinutes *int `pulumi:"crashConsistentFrequencyInMinutes"`
	// Gets the class type. Overridden in derived classes.
	InstanceType string `pulumi:"instanceType"`
	// A value indicating whether multi-VM sync has to be enabled.
	MultiVmSyncStatus *string `pulumi:"multiVmSyncStatus"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistory *int `pulumi:"recoveryPointHistory"`
	// The recovery point threshold in minutes.
	RecoveryPointThresholdInMinutes *int `pulumi:"recoveryPointThresholdInMinutes"`
}

// RCM based Azure migration specific policy details.
type RcmAzureMigrationPolicyDetailsResponseOutput struct{ *pulumi.OutputState }

func (RcmAzureMigrationPolicyDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RcmAzureMigrationPolicyDetailsResponse)(nil)).Elem()
}

func (o RcmAzureMigrationPolicyDetailsResponseOutput) ToRcmAzureMigrationPolicyDetailsResponseOutput() RcmAzureMigrationPolicyDetailsResponseOutput {
	return o
}

func (o RcmAzureMigrationPolicyDetailsResponseOutput) ToRcmAzureMigrationPolicyDetailsResponseOutputWithContext(ctx context.Context) RcmAzureMigrationPolicyDetailsResponseOutput {
	return o
}

// The app consistent snapshot frequency in minutes.
func (o RcmAzureMigrationPolicyDetailsResponseOutput) AppConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RcmAzureMigrationPolicyDetailsResponse) *int { return v.AppConsistentFrequencyInMinutes }).(pulumi.IntPtrOutput)
}

// The crash consistent snapshot frequency in minutes.
func (o RcmAzureMigrationPolicyDetailsResponseOutput) CrashConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RcmAzureMigrationPolicyDetailsResponse) *int { return v.CrashConsistentFrequencyInMinutes }).(pulumi.IntPtrOutput)
}

// Gets the class type. Overridden in derived classes.
func (o RcmAzureMigrationPolicyDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v RcmAzureMigrationPolicyDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// A value indicating whether multi-VM sync has to be enabled.
func (o RcmAzureMigrationPolicyDetailsResponseOutput) MultiVmSyncStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RcmAzureMigrationPolicyDetailsResponse) *string { return v.MultiVmSyncStatus }).(pulumi.StringPtrOutput)
}

// The duration in minutes until which the recovery points need to be stored.
func (o RcmAzureMigrationPolicyDetailsResponseOutput) RecoveryPointHistory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RcmAzureMigrationPolicyDetailsResponse) *int { return v.RecoveryPointHistory }).(pulumi.IntPtrOutput)
}

// The recovery point threshold in minutes.
func (o RcmAzureMigrationPolicyDetailsResponseOutput) RecoveryPointThresholdInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RcmAzureMigrationPolicyDetailsResponse) *int { return v.RecoveryPointThresholdInMinutes }).(pulumi.IntPtrOutput)
}

// Recovery plan action details.
type RecoveryPlanAction struct {
	// The action name.
	ActionName string `pulumi:"actionName"`
	// The list of failover directions.
	FailoverDirections []string `pulumi:"failoverDirections"`
	// The list of failover types.
	FailoverTypes []string `pulumi:"failoverTypes"`
}

// RecoveryPlanActionInput is an input type that accepts RecoveryPlanActionArgs and RecoveryPlanActionOutput values.
// You can construct a concrete instance of `RecoveryPlanActionInput` via:
//
//          RecoveryPlanActionArgs{...}
type RecoveryPlanActionInput interface {
	pulumi.Input

	ToRecoveryPlanActionOutput() RecoveryPlanActionOutput
	ToRecoveryPlanActionOutputWithContext(context.Context) RecoveryPlanActionOutput
}

// Recovery plan action details.
type RecoveryPlanActionArgs struct {
	// The action name.
	ActionName pulumi.StringInput `pulumi:"actionName"`
	// The list of failover directions.
	FailoverDirections pulumi.StringArrayInput `pulumi:"failoverDirections"`
	// The list of failover types.
	FailoverTypes pulumi.StringArrayInput `pulumi:"failoverTypes"`
}

func (RecoveryPlanActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanAction)(nil)).Elem()
}

func (i RecoveryPlanActionArgs) ToRecoveryPlanActionOutput() RecoveryPlanActionOutput {
	return i.ToRecoveryPlanActionOutputWithContext(context.Background())
}

func (i RecoveryPlanActionArgs) ToRecoveryPlanActionOutputWithContext(ctx context.Context) RecoveryPlanActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanActionOutput)
}

// RecoveryPlanActionArrayInput is an input type that accepts RecoveryPlanActionArray and RecoveryPlanActionArrayOutput values.
// You can construct a concrete instance of `RecoveryPlanActionArrayInput` via:
//
//          RecoveryPlanActionArray{ RecoveryPlanActionArgs{...} }
type RecoveryPlanActionArrayInput interface {
	pulumi.Input

	ToRecoveryPlanActionArrayOutput() RecoveryPlanActionArrayOutput
	ToRecoveryPlanActionArrayOutputWithContext(context.Context) RecoveryPlanActionArrayOutput
}

type RecoveryPlanActionArray []RecoveryPlanActionInput

func (RecoveryPlanActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanAction)(nil)).Elem()
}

func (i RecoveryPlanActionArray) ToRecoveryPlanActionArrayOutput() RecoveryPlanActionArrayOutput {
	return i.ToRecoveryPlanActionArrayOutputWithContext(context.Background())
}

func (i RecoveryPlanActionArray) ToRecoveryPlanActionArrayOutputWithContext(ctx context.Context) RecoveryPlanActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanActionArrayOutput)
}

// Recovery plan action details.
type RecoveryPlanActionResponse struct {
	// The action name.
	ActionName string `pulumi:"actionName"`
	// The custom details.
	CustomDetails interface{} `pulumi:"customDetails"`
	// The list of failover directions.
	FailoverDirections []string `pulumi:"failoverDirections"`
	// The list of failover types.
	FailoverTypes []string `pulumi:"failoverTypes"`
}

// Recovery plan action details.
type RecoveryPlanActionResponseOutput struct{ *pulumi.OutputState }

func (RecoveryPlanActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanActionResponse)(nil)).Elem()
}

func (o RecoveryPlanActionResponseOutput) ToRecoveryPlanActionResponseOutput() RecoveryPlanActionResponseOutput {
	return o
}

func (o RecoveryPlanActionResponseOutput) ToRecoveryPlanActionResponseOutputWithContext(ctx context.Context) RecoveryPlanActionResponseOutput {
	return o
}

// The action name.
func (o RecoveryPlanActionResponseOutput) ActionName() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanActionResponse) string { return v.ActionName }).(pulumi.StringOutput)
}

// The custom details.
func (o RecoveryPlanActionResponseOutput) CustomDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v RecoveryPlanActionResponse) interface{} { return v.CustomDetails }).(pulumi.AnyOutput)
}

// The list of failover directions.
func (o RecoveryPlanActionResponseOutput) FailoverDirections() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RecoveryPlanActionResponse) []string { return v.FailoverDirections }).(pulumi.StringArrayOutput)
}

// The list of failover types.
func (o RecoveryPlanActionResponseOutput) FailoverTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RecoveryPlanActionResponse) []string { return v.FailoverTypes }).(pulumi.StringArrayOutput)
}

type RecoveryPlanActionResponseArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanActionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanActionResponse)(nil)).Elem()
}

func (o RecoveryPlanActionResponseArrayOutput) ToRecoveryPlanActionResponseArrayOutput() RecoveryPlanActionResponseArrayOutput {
	return o
}

func (o RecoveryPlanActionResponseArrayOutput) ToRecoveryPlanActionResponseArrayOutputWithContext(ctx context.Context) RecoveryPlanActionResponseArrayOutput {
	return o
}

func (o RecoveryPlanActionResponseArrayOutput) Index(i pulumi.IntInput) RecoveryPlanActionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanActionResponse {
		return vs[0].([]RecoveryPlanActionResponse)[vs[1].(int)]
	}).(RecoveryPlanActionResponseOutput)
}

// Recovery plan Automation runbook action details.
type RecoveryPlanAutomationRunbookActionDetailsResponse struct {
	// The fabric location.
	FabricLocation string `pulumi:"fabricLocation"`
	// Gets the type of action details (see RecoveryPlanActionDetailsTypes enum for possible values).
	InstanceType string `pulumi:"instanceType"`
	// The runbook ARM Id.
	RunbookId *string `pulumi:"runbookId"`
	// The runbook timeout.
	Timeout *string `pulumi:"timeout"`
}

// Recovery plan Automation runbook action details.
type RecoveryPlanAutomationRunbookActionDetailsResponseOutput struct{ *pulumi.OutputState }

func (RecoveryPlanAutomationRunbookActionDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanAutomationRunbookActionDetailsResponse)(nil)).Elem()
}

func (o RecoveryPlanAutomationRunbookActionDetailsResponseOutput) ToRecoveryPlanAutomationRunbookActionDetailsResponseOutput() RecoveryPlanAutomationRunbookActionDetailsResponseOutput {
	return o
}

func (o RecoveryPlanAutomationRunbookActionDetailsResponseOutput) ToRecoveryPlanAutomationRunbookActionDetailsResponseOutputWithContext(ctx context.Context) RecoveryPlanAutomationRunbookActionDetailsResponseOutput {
	return o
}

// The fabric location.
func (o RecoveryPlanAutomationRunbookActionDetailsResponseOutput) FabricLocation() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanAutomationRunbookActionDetailsResponse) string { return v.FabricLocation }).(pulumi.StringOutput)
}

// Gets the type of action details (see RecoveryPlanActionDetailsTypes enum for possible values).
func (o RecoveryPlanAutomationRunbookActionDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanAutomationRunbookActionDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The runbook ARM Id.
func (o RecoveryPlanAutomationRunbookActionDetailsResponseOutput) RunbookId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanAutomationRunbookActionDetailsResponse) *string { return v.RunbookId }).(pulumi.StringPtrOutput)
}

// The runbook timeout.
func (o RecoveryPlanAutomationRunbookActionDetailsResponseOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanAutomationRunbookActionDetailsResponse) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

// Recovery plan group details.
type RecoveryPlanGroup struct {
	// The end group actions.
	EndGroupActions []RecoveryPlanAction `pulumi:"endGroupActions"`
	// The group type.
	GroupType string `pulumi:"groupType"`
	// The list of protected items.
	ReplicationProtectedItems []RecoveryPlanProtectedItem `pulumi:"replicationProtectedItems"`
	// The start group actions.
	StartGroupActions []RecoveryPlanAction `pulumi:"startGroupActions"`
}

// RecoveryPlanGroupInput is an input type that accepts RecoveryPlanGroupArgs and RecoveryPlanGroupOutput values.
// You can construct a concrete instance of `RecoveryPlanGroupInput` via:
//
//          RecoveryPlanGroupArgs{...}
type RecoveryPlanGroupInput interface {
	pulumi.Input

	ToRecoveryPlanGroupOutput() RecoveryPlanGroupOutput
	ToRecoveryPlanGroupOutputWithContext(context.Context) RecoveryPlanGroupOutput
}

// Recovery plan group details.
type RecoveryPlanGroupArgs struct {
	// The end group actions.
	EndGroupActions RecoveryPlanActionArrayInput `pulumi:"endGroupActions"`
	// The group type.
	GroupType pulumi.StringInput `pulumi:"groupType"`
	// The list of protected items.
	ReplicationProtectedItems RecoveryPlanProtectedItemArrayInput `pulumi:"replicationProtectedItems"`
	// The start group actions.
	StartGroupActions RecoveryPlanActionArrayInput `pulumi:"startGroupActions"`
}

func (RecoveryPlanGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanGroup)(nil)).Elem()
}

func (i RecoveryPlanGroupArgs) ToRecoveryPlanGroupOutput() RecoveryPlanGroupOutput {
	return i.ToRecoveryPlanGroupOutputWithContext(context.Background())
}

func (i RecoveryPlanGroupArgs) ToRecoveryPlanGroupOutputWithContext(ctx context.Context) RecoveryPlanGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanGroupOutput)
}

// RecoveryPlanGroupArrayInput is an input type that accepts RecoveryPlanGroupArray and RecoveryPlanGroupArrayOutput values.
// You can construct a concrete instance of `RecoveryPlanGroupArrayInput` via:
//
//          RecoveryPlanGroupArray{ RecoveryPlanGroupArgs{...} }
type RecoveryPlanGroupArrayInput interface {
	pulumi.Input

	ToRecoveryPlanGroupArrayOutput() RecoveryPlanGroupArrayOutput
	ToRecoveryPlanGroupArrayOutputWithContext(context.Context) RecoveryPlanGroupArrayOutput
}

type RecoveryPlanGroupArray []RecoveryPlanGroupInput

func (RecoveryPlanGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanGroup)(nil)).Elem()
}

func (i RecoveryPlanGroupArray) ToRecoveryPlanGroupArrayOutput() RecoveryPlanGroupArrayOutput {
	return i.ToRecoveryPlanGroupArrayOutputWithContext(context.Background())
}

func (i RecoveryPlanGroupArray) ToRecoveryPlanGroupArrayOutputWithContext(ctx context.Context) RecoveryPlanGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanGroupArrayOutput)
}

// Recovery plan group details.
type RecoveryPlanGroupResponse struct {
	// The end group actions.
	EndGroupActions []RecoveryPlanActionResponse `pulumi:"endGroupActions"`
	// The group type.
	GroupType string `pulumi:"groupType"`
	// The list of protected items.
	ReplicationProtectedItems []RecoveryPlanProtectedItemResponse `pulumi:"replicationProtectedItems"`
	// The start group actions.
	StartGroupActions []RecoveryPlanActionResponse `pulumi:"startGroupActions"`
}

// Recovery plan group details.
type RecoveryPlanGroupResponseOutput struct{ *pulumi.OutputState }

func (RecoveryPlanGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanGroupResponse)(nil)).Elem()
}

func (o RecoveryPlanGroupResponseOutput) ToRecoveryPlanGroupResponseOutput() RecoveryPlanGroupResponseOutput {
	return o
}

func (o RecoveryPlanGroupResponseOutput) ToRecoveryPlanGroupResponseOutputWithContext(ctx context.Context) RecoveryPlanGroupResponseOutput {
	return o
}

// The end group actions.
func (o RecoveryPlanGroupResponseOutput) EndGroupActions() RecoveryPlanActionResponseArrayOutput {
	return o.ApplyT(func(v RecoveryPlanGroupResponse) []RecoveryPlanActionResponse { return v.EndGroupActions }).(RecoveryPlanActionResponseArrayOutput)
}

// The group type.
func (o RecoveryPlanGroupResponseOutput) GroupType() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanGroupResponse) string { return v.GroupType }).(pulumi.StringOutput)
}

// The list of protected items.
func (o RecoveryPlanGroupResponseOutput) ReplicationProtectedItems() RecoveryPlanProtectedItemResponseArrayOutput {
	return o.ApplyT(func(v RecoveryPlanGroupResponse) []RecoveryPlanProtectedItemResponse {
		return v.ReplicationProtectedItems
	}).(RecoveryPlanProtectedItemResponseArrayOutput)
}

// The start group actions.
func (o RecoveryPlanGroupResponseOutput) StartGroupActions() RecoveryPlanActionResponseArrayOutput {
	return o.ApplyT(func(v RecoveryPlanGroupResponse) []RecoveryPlanActionResponse { return v.StartGroupActions }).(RecoveryPlanActionResponseArrayOutput)
}

type RecoveryPlanGroupResponseArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanGroupResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanGroupResponse)(nil)).Elem()
}

func (o RecoveryPlanGroupResponseArrayOutput) ToRecoveryPlanGroupResponseArrayOutput() RecoveryPlanGroupResponseArrayOutput {
	return o
}

func (o RecoveryPlanGroupResponseArrayOutput) ToRecoveryPlanGroupResponseArrayOutputWithContext(ctx context.Context) RecoveryPlanGroupResponseArrayOutput {
	return o
}

func (o RecoveryPlanGroupResponseArrayOutput) Index(i pulumi.IntInput) RecoveryPlanGroupResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanGroupResponse {
		return vs[0].([]RecoveryPlanGroupResponse)[vs[1].(int)]
	}).(RecoveryPlanGroupResponseOutput)
}

// Recovery plan manual action details.
type RecoveryPlanManualActionDetailsResponse struct {
	// The manual action description.
	Description *string `pulumi:"description"`
	// Gets the type of action details (see RecoveryPlanActionDetailsTypes enum for possible values).
	InstanceType string `pulumi:"instanceType"`
}

// Recovery plan manual action details.
type RecoveryPlanManualActionDetailsResponseOutput struct{ *pulumi.OutputState }

func (RecoveryPlanManualActionDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanManualActionDetailsResponse)(nil)).Elem()
}

func (o RecoveryPlanManualActionDetailsResponseOutput) ToRecoveryPlanManualActionDetailsResponseOutput() RecoveryPlanManualActionDetailsResponseOutput {
	return o
}

func (o RecoveryPlanManualActionDetailsResponseOutput) ToRecoveryPlanManualActionDetailsResponseOutputWithContext(ctx context.Context) RecoveryPlanManualActionDetailsResponseOutput {
	return o
}

// The manual action description.
func (o RecoveryPlanManualActionDetailsResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanManualActionDetailsResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Gets the type of action details (see RecoveryPlanActionDetailsTypes enum for possible values).
func (o RecoveryPlanManualActionDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanManualActionDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// Recovery plan custom details.
type RecoveryPlanPropertiesResponse struct {
	// The list of allowed operations.
	AllowedOperations []string `pulumi:"allowedOperations"`
	// The current scenario details.
	CurrentScenario *CurrentScenarioDetailsResponse `pulumi:"currentScenario"`
	// The recovery plan status.
	CurrentScenarioStatus *string `pulumi:"currentScenarioStatus"`
	// The recovery plan status description.
	CurrentScenarioStatusDescription *string `pulumi:"currentScenarioStatusDescription"`
	// The failover deployment model.
	FailoverDeploymentModel *string `pulumi:"failoverDeploymentModel"`
	// The friendly name.
	FriendlyName *string `pulumi:"friendlyName"`
	// The recovery plan groups.
	Groups []RecoveryPlanGroupResponse `pulumi:"groups"`
	// The start time of the last planned failover.
	LastPlannedFailoverTime *string `pulumi:"lastPlannedFailoverTime"`
	// The start time of the last test failover.
	LastTestFailoverTime *string `pulumi:"lastTestFailoverTime"`
	// The start time of the last unplanned failover.
	LastUnplannedFailoverTime *string `pulumi:"lastUnplannedFailoverTime"`
	// The primary fabric friendly name.
	PrimaryFabricFriendlyName *string `pulumi:"primaryFabricFriendlyName"`
	// The primary fabric Id.
	PrimaryFabricId *string `pulumi:"primaryFabricId"`
	// The recovery fabric friendly name.
	RecoveryFabricFriendlyName *string `pulumi:"recoveryFabricFriendlyName"`
	// The recovery fabric Id.
	RecoveryFabricId *string `pulumi:"recoveryFabricId"`
	// The list of replication providers.
	ReplicationProviders []string `pulumi:"replicationProviders"`
}

// Recovery plan custom details.
type RecoveryPlanPropertiesResponseOutput struct{ *pulumi.OutputState }

func (RecoveryPlanPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanPropertiesResponse)(nil)).Elem()
}

func (o RecoveryPlanPropertiesResponseOutput) ToRecoveryPlanPropertiesResponseOutput() RecoveryPlanPropertiesResponseOutput {
	return o
}

func (o RecoveryPlanPropertiesResponseOutput) ToRecoveryPlanPropertiesResponseOutputWithContext(ctx context.Context) RecoveryPlanPropertiesResponseOutput {
	return o
}

func (o RecoveryPlanPropertiesResponseOutput) ToRecoveryPlanPropertiesResponsePtrOutput() RecoveryPlanPropertiesResponsePtrOutput {
	return o.ToRecoveryPlanPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o RecoveryPlanPropertiesResponseOutput) ToRecoveryPlanPropertiesResponsePtrOutputWithContext(ctx context.Context) RecoveryPlanPropertiesResponsePtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *RecoveryPlanPropertiesResponse {
		return &v
	}).(RecoveryPlanPropertiesResponsePtrOutput)
}

// The list of allowed operations.
func (o RecoveryPlanPropertiesResponseOutput) AllowedOperations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) []string { return v.AllowedOperations }).(pulumi.StringArrayOutput)
}

// The current scenario details.
func (o RecoveryPlanPropertiesResponseOutput) CurrentScenario() CurrentScenarioDetailsResponsePtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *CurrentScenarioDetailsResponse { return v.CurrentScenario }).(CurrentScenarioDetailsResponsePtrOutput)
}

// The recovery plan status.
func (o RecoveryPlanPropertiesResponseOutput) CurrentScenarioStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *string { return v.CurrentScenarioStatus }).(pulumi.StringPtrOutput)
}

// The recovery plan status description.
func (o RecoveryPlanPropertiesResponseOutput) CurrentScenarioStatusDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *string { return v.CurrentScenarioStatusDescription }).(pulumi.StringPtrOutput)
}

// The failover deployment model.
func (o RecoveryPlanPropertiesResponseOutput) FailoverDeploymentModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *string { return v.FailoverDeploymentModel }).(pulumi.StringPtrOutput)
}

// The friendly name.
func (o RecoveryPlanPropertiesResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// The recovery plan groups.
func (o RecoveryPlanPropertiesResponseOutput) Groups() RecoveryPlanGroupResponseArrayOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) []RecoveryPlanGroupResponse { return v.Groups }).(RecoveryPlanGroupResponseArrayOutput)
}

// The start time of the last planned failover.
func (o RecoveryPlanPropertiesResponseOutput) LastPlannedFailoverTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *string { return v.LastPlannedFailoverTime }).(pulumi.StringPtrOutput)
}

// The start time of the last test failover.
func (o RecoveryPlanPropertiesResponseOutput) LastTestFailoverTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *string { return v.LastTestFailoverTime }).(pulumi.StringPtrOutput)
}

// The start time of the last unplanned failover.
func (o RecoveryPlanPropertiesResponseOutput) LastUnplannedFailoverTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *string { return v.LastUnplannedFailoverTime }).(pulumi.StringPtrOutput)
}

// The primary fabric friendly name.
func (o RecoveryPlanPropertiesResponseOutput) PrimaryFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *string { return v.PrimaryFabricFriendlyName }).(pulumi.StringPtrOutput)
}

// The primary fabric Id.
func (o RecoveryPlanPropertiesResponseOutput) PrimaryFabricId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *string { return v.PrimaryFabricId }).(pulumi.StringPtrOutput)
}

// The recovery fabric friendly name.
func (o RecoveryPlanPropertiesResponseOutput) RecoveryFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *string { return v.RecoveryFabricFriendlyName }).(pulumi.StringPtrOutput)
}

// The recovery fabric Id.
func (o RecoveryPlanPropertiesResponseOutput) RecoveryFabricId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *string { return v.RecoveryFabricId }).(pulumi.StringPtrOutput)
}

// The list of replication providers.
func (o RecoveryPlanPropertiesResponseOutput) ReplicationProviders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) []string { return v.ReplicationProviders }).(pulumi.StringArrayOutput)
}

type RecoveryPlanPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (RecoveryPlanPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecoveryPlanPropertiesResponse)(nil)).Elem()
}

func (o RecoveryPlanPropertiesResponsePtrOutput) ToRecoveryPlanPropertiesResponsePtrOutput() RecoveryPlanPropertiesResponsePtrOutput {
	return o
}

func (o RecoveryPlanPropertiesResponsePtrOutput) ToRecoveryPlanPropertiesResponsePtrOutputWithContext(ctx context.Context) RecoveryPlanPropertiesResponsePtrOutput {
	return o
}

func (o RecoveryPlanPropertiesResponsePtrOutput) Elem() RecoveryPlanPropertiesResponseOutput {
	return o.ApplyT(func(v *RecoveryPlanPropertiesResponse) RecoveryPlanPropertiesResponse { return *v }).(RecoveryPlanPropertiesResponseOutput)
}

// The list of allowed operations.
func (o RecoveryPlanPropertiesResponsePtrOutput) AllowedOperations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RecoveryPlanPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.AllowedOperations
	}).(pulumi.StringArrayOutput)
}

// The current scenario details.
func (o RecoveryPlanPropertiesResponsePtrOutput) CurrentScenario() CurrentScenarioDetailsResponsePtrOutput {
	return o.ApplyT(func(v *RecoveryPlanPropertiesResponse) *CurrentScenarioDetailsResponse {
		if v == nil {
			return nil
		}
		return v.CurrentScenario
	}).(CurrentScenarioDetailsResponsePtrOutput)
}

// The recovery plan status.
func (o RecoveryPlanPropertiesResponsePtrOutput) CurrentScenarioStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.CurrentScenarioStatus
	}).(pulumi.StringPtrOutput)
}

// The recovery plan status description.
func (o RecoveryPlanPropertiesResponsePtrOutput) CurrentScenarioStatusDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.CurrentScenarioStatusDescription
	}).(pulumi.StringPtrOutput)
}

// The failover deployment model.
func (o RecoveryPlanPropertiesResponsePtrOutput) FailoverDeploymentModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.FailoverDeploymentModel
	}).(pulumi.StringPtrOutput)
}

// The friendly name.
func (o RecoveryPlanPropertiesResponsePtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// The recovery plan groups.
func (o RecoveryPlanPropertiesResponsePtrOutput) Groups() RecoveryPlanGroupResponseArrayOutput {
	return o.ApplyT(func(v *RecoveryPlanPropertiesResponse) []RecoveryPlanGroupResponse {
		if v == nil {
			return nil
		}
		return v.Groups
	}).(RecoveryPlanGroupResponseArrayOutput)
}

// The start time of the last planned failover.
func (o RecoveryPlanPropertiesResponsePtrOutput) LastPlannedFailoverTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastPlannedFailoverTime
	}).(pulumi.StringPtrOutput)
}

// The start time of the last test failover.
func (o RecoveryPlanPropertiesResponsePtrOutput) LastTestFailoverTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastTestFailoverTime
	}).(pulumi.StringPtrOutput)
}

// The start time of the last unplanned failover.
func (o RecoveryPlanPropertiesResponsePtrOutput) LastUnplannedFailoverTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastUnplannedFailoverTime
	}).(pulumi.StringPtrOutput)
}

// The primary fabric friendly name.
func (o RecoveryPlanPropertiesResponsePtrOutput) PrimaryFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryFabricFriendlyName
	}).(pulumi.StringPtrOutput)
}

// The primary fabric Id.
func (o RecoveryPlanPropertiesResponsePtrOutput) PrimaryFabricId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryFabricId
	}).(pulumi.StringPtrOutput)
}

// The recovery fabric friendly name.
func (o RecoveryPlanPropertiesResponsePtrOutput) RecoveryFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryFabricFriendlyName
	}).(pulumi.StringPtrOutput)
}

// The recovery fabric Id.
func (o RecoveryPlanPropertiesResponsePtrOutput) RecoveryFabricId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryFabricId
	}).(pulumi.StringPtrOutput)
}

// The list of replication providers.
func (o RecoveryPlanPropertiesResponsePtrOutput) ReplicationProviders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RecoveryPlanPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.ReplicationProviders
	}).(pulumi.StringArrayOutput)
}

// Recovery plan protected item.
type RecoveryPlanProtectedItem struct {
	// The ARM Id of the recovery plan protected item.
	Id *string `pulumi:"id"`
	// The virtual machine Id.
	VirtualMachineId *string `pulumi:"virtualMachineId"`
}

// RecoveryPlanProtectedItemInput is an input type that accepts RecoveryPlanProtectedItemArgs and RecoveryPlanProtectedItemOutput values.
// You can construct a concrete instance of `RecoveryPlanProtectedItemInput` via:
//
//          RecoveryPlanProtectedItemArgs{...}
type RecoveryPlanProtectedItemInput interface {
	pulumi.Input

	ToRecoveryPlanProtectedItemOutput() RecoveryPlanProtectedItemOutput
	ToRecoveryPlanProtectedItemOutputWithContext(context.Context) RecoveryPlanProtectedItemOutput
}

// Recovery plan protected item.
type RecoveryPlanProtectedItemArgs struct {
	// The ARM Id of the recovery plan protected item.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The virtual machine Id.
	VirtualMachineId pulumi.StringPtrInput `pulumi:"virtualMachineId"`
}

func (RecoveryPlanProtectedItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanProtectedItem)(nil)).Elem()
}

func (i RecoveryPlanProtectedItemArgs) ToRecoveryPlanProtectedItemOutput() RecoveryPlanProtectedItemOutput {
	return i.ToRecoveryPlanProtectedItemOutputWithContext(context.Background())
}

func (i RecoveryPlanProtectedItemArgs) ToRecoveryPlanProtectedItemOutputWithContext(ctx context.Context) RecoveryPlanProtectedItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanProtectedItemOutput)
}

// RecoveryPlanProtectedItemArrayInput is an input type that accepts RecoveryPlanProtectedItemArray and RecoveryPlanProtectedItemArrayOutput values.
// You can construct a concrete instance of `RecoveryPlanProtectedItemArrayInput` via:
//
//          RecoveryPlanProtectedItemArray{ RecoveryPlanProtectedItemArgs{...} }
type RecoveryPlanProtectedItemArrayInput interface {
	pulumi.Input

	ToRecoveryPlanProtectedItemArrayOutput() RecoveryPlanProtectedItemArrayOutput
	ToRecoveryPlanProtectedItemArrayOutputWithContext(context.Context) RecoveryPlanProtectedItemArrayOutput
}

type RecoveryPlanProtectedItemArray []RecoveryPlanProtectedItemInput

func (RecoveryPlanProtectedItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanProtectedItem)(nil)).Elem()
}

func (i RecoveryPlanProtectedItemArray) ToRecoveryPlanProtectedItemArrayOutput() RecoveryPlanProtectedItemArrayOutput {
	return i.ToRecoveryPlanProtectedItemArrayOutputWithContext(context.Background())
}

func (i RecoveryPlanProtectedItemArray) ToRecoveryPlanProtectedItemArrayOutputWithContext(ctx context.Context) RecoveryPlanProtectedItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanProtectedItemArrayOutput)
}

// Recovery plan protected item.
type RecoveryPlanProtectedItemResponse struct {
	// The ARM Id of the recovery plan protected item.
	Id *string `pulumi:"id"`
	// The virtual machine Id.
	VirtualMachineId *string `pulumi:"virtualMachineId"`
}

// Recovery plan protected item.
type RecoveryPlanProtectedItemResponseOutput struct{ *pulumi.OutputState }

func (RecoveryPlanProtectedItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanProtectedItemResponse)(nil)).Elem()
}

func (o RecoveryPlanProtectedItemResponseOutput) ToRecoveryPlanProtectedItemResponseOutput() RecoveryPlanProtectedItemResponseOutput {
	return o
}

func (o RecoveryPlanProtectedItemResponseOutput) ToRecoveryPlanProtectedItemResponseOutputWithContext(ctx context.Context) RecoveryPlanProtectedItemResponseOutput {
	return o
}

// The ARM Id of the recovery plan protected item.
func (o RecoveryPlanProtectedItemResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanProtectedItemResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The virtual machine Id.
func (o RecoveryPlanProtectedItemResponseOutput) VirtualMachineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanProtectedItemResponse) *string { return v.VirtualMachineId }).(pulumi.StringPtrOutput)
}

type RecoveryPlanProtectedItemResponseArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanProtectedItemResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanProtectedItemResponse)(nil)).Elem()
}

func (o RecoveryPlanProtectedItemResponseArrayOutput) ToRecoveryPlanProtectedItemResponseArrayOutput() RecoveryPlanProtectedItemResponseArrayOutput {
	return o
}

func (o RecoveryPlanProtectedItemResponseArrayOutput) ToRecoveryPlanProtectedItemResponseArrayOutputWithContext(ctx context.Context) RecoveryPlanProtectedItemResponseArrayOutput {
	return o
}

func (o RecoveryPlanProtectedItemResponseArrayOutput) Index(i pulumi.IntInput) RecoveryPlanProtectedItemResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanProtectedItemResponse {
		return vs[0].([]RecoveryPlanProtectedItemResponse)[vs[1].(int)]
	}).(RecoveryPlanProtectedItemResponseOutput)
}

// Recovery plan script action details.
type RecoveryPlanScriptActionDetailsResponse struct {
	// The fabric location.
	FabricLocation string `pulumi:"fabricLocation"`
	// Gets the type of action details (see RecoveryPlanActionDetailsTypes enum for possible values).
	InstanceType string `pulumi:"instanceType"`
	// The script path.
	Path string `pulumi:"path"`
	// The script timeout.
	Timeout *string `pulumi:"timeout"`
}

// Recovery plan script action details.
type RecoveryPlanScriptActionDetailsResponseOutput struct{ *pulumi.OutputState }

func (RecoveryPlanScriptActionDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanScriptActionDetailsResponse)(nil)).Elem()
}

func (o RecoveryPlanScriptActionDetailsResponseOutput) ToRecoveryPlanScriptActionDetailsResponseOutput() RecoveryPlanScriptActionDetailsResponseOutput {
	return o
}

func (o RecoveryPlanScriptActionDetailsResponseOutput) ToRecoveryPlanScriptActionDetailsResponseOutputWithContext(ctx context.Context) RecoveryPlanScriptActionDetailsResponseOutput {
	return o
}

// The fabric location.
func (o RecoveryPlanScriptActionDetailsResponseOutput) FabricLocation() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanScriptActionDetailsResponse) string { return v.FabricLocation }).(pulumi.StringOutput)
}

// Gets the type of action details (see RecoveryPlanActionDetailsTypes enum for possible values).
func (o RecoveryPlanScriptActionDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanScriptActionDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The script path.
func (o RecoveryPlanScriptActionDetailsResponseOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanScriptActionDetailsResponse) string { return v.Path }).(pulumi.StringOutput)
}

// The script timeout.
func (o RecoveryPlanScriptActionDetailsResponseOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanScriptActionDetailsResponse) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

// Replication protected item custom data details.
type ReplicationProtectedItemPropertiesResponse struct {
	// The Current active location of the PE.
	ActiveLocation *string `pulumi:"activeLocation"`
	// The allowed operations on the Replication protected item.
	AllowedOperations []string `pulumi:"allowedOperations"`
	// The current scenario.
	CurrentScenario *CurrentScenarioDetailsResponse `pulumi:"currentScenario"`
	// The consolidated failover health for the VM.
	FailoverHealth *string `pulumi:"failoverHealth"`
	// List of failover health errors.
	FailoverHealthErrors []HealthErrorResponse `pulumi:"failoverHealthErrors"`
	// The recovery point ARM Id to which the Vm was failed over.
	FailoverRecoveryPointId *string `pulumi:"failoverRecoveryPointId"`
	// The name.
	FriendlyName *string `pulumi:"friendlyName"`
	// The Last successful failover time.
	LastSuccessfulFailoverTime *string `pulumi:"lastSuccessfulFailoverTime"`
	// The Last successful test failover time.
	LastSuccessfulTestFailoverTime *string `pulumi:"lastSuccessfulTestFailoverTime"`
	// The name of Policy governing this PE.
	PolicyFriendlyName *string `pulumi:"policyFriendlyName"`
	// The ID of Policy governing this PE.
	PolicyId *string `pulumi:"policyId"`
	// The friendly name of the primary fabric.
	PrimaryFabricFriendlyName *string `pulumi:"primaryFabricFriendlyName"`
	// The name of primary protection container friendly name.
	PrimaryProtectionContainerFriendlyName *string `pulumi:"primaryProtectionContainerFriendlyName"`
	// The protected item ARM Id.
	ProtectableItemId *string `pulumi:"protectableItemId"`
	// The type of protected item type.
	ProtectedItemType *string `pulumi:"protectedItemType"`
	// The protection status.
	ProtectionState *string `pulumi:"protectionState"`
	// The protection state description.
	ProtectionStateDescription *string `pulumi:"protectionStateDescription"`
	// The Replication provider custom settings.
	ProviderSpecificDetails interface{} `pulumi:"providerSpecificDetails"`
	// The recovery container Id.
	RecoveryContainerId *string `pulumi:"recoveryContainerId"`
	// The friendly name of recovery fabric.
	RecoveryFabricFriendlyName *string `pulumi:"recoveryFabricFriendlyName"`
	// The Arm Id of recovery fabric.
	RecoveryFabricId *string `pulumi:"recoveryFabricId"`
	// The name of recovery container friendly name.
	RecoveryProtectionContainerFriendlyName *string `pulumi:"recoveryProtectionContainerFriendlyName"`
	// The recovery provider ARM Id.
	RecoveryServicesProviderId *string `pulumi:"recoveryServicesProviderId"`
	// The consolidated protection health for the VM taking any issues with SRS as well as all the replication units associated with the VM's replication group into account. This is a string representation of the ProtectionHealth enumeration.
	ReplicationHealth *string `pulumi:"replicationHealth"`
	// List of replication health errors.
	ReplicationHealthErrors []HealthErrorResponse `pulumi:"replicationHealthErrors"`
	// The Test failover state.
	TestFailoverState *string `pulumi:"testFailoverState"`
	// The Test failover state description.
	TestFailoverStateDescription *string `pulumi:"testFailoverStateDescription"`
}

// Replication protected item custom data details.
type ReplicationProtectedItemPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ReplicationProtectedItemPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationProtectedItemPropertiesResponse)(nil)).Elem()
}

func (o ReplicationProtectedItemPropertiesResponseOutput) ToReplicationProtectedItemPropertiesResponseOutput() ReplicationProtectedItemPropertiesResponseOutput {
	return o
}

func (o ReplicationProtectedItemPropertiesResponseOutput) ToReplicationProtectedItemPropertiesResponseOutputWithContext(ctx context.Context) ReplicationProtectedItemPropertiesResponseOutput {
	return o
}

func (o ReplicationProtectedItemPropertiesResponseOutput) ToReplicationProtectedItemPropertiesResponsePtrOutput() ReplicationProtectedItemPropertiesResponsePtrOutput {
	return o.ToReplicationProtectedItemPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ReplicationProtectedItemPropertiesResponseOutput) ToReplicationProtectedItemPropertiesResponsePtrOutputWithContext(ctx context.Context) ReplicationProtectedItemPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *ReplicationProtectedItemPropertiesResponse {
		return &v
	}).(ReplicationProtectedItemPropertiesResponsePtrOutput)
}

// The Current active location of the PE.
func (o ReplicationProtectedItemPropertiesResponseOutput) ActiveLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.ActiveLocation }).(pulumi.StringPtrOutput)
}

// The allowed operations on the Replication protected item.
func (o ReplicationProtectedItemPropertiesResponseOutput) AllowedOperations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) []string { return v.AllowedOperations }).(pulumi.StringArrayOutput)
}

// The current scenario.
func (o ReplicationProtectedItemPropertiesResponseOutput) CurrentScenario() CurrentScenarioDetailsResponsePtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *CurrentScenarioDetailsResponse {
		return v.CurrentScenario
	}).(CurrentScenarioDetailsResponsePtrOutput)
}

// The consolidated failover health for the VM.
func (o ReplicationProtectedItemPropertiesResponseOutput) FailoverHealth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.FailoverHealth }).(pulumi.StringPtrOutput)
}

// List of failover health errors.
func (o ReplicationProtectedItemPropertiesResponseOutput) FailoverHealthErrors() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) []HealthErrorResponse {
		return v.FailoverHealthErrors
	}).(HealthErrorResponseArrayOutput)
}

// The recovery point ARM Id to which the Vm was failed over.
func (o ReplicationProtectedItemPropertiesResponseOutput) FailoverRecoveryPointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.FailoverRecoveryPointId }).(pulumi.StringPtrOutput)
}

// The name.
func (o ReplicationProtectedItemPropertiesResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// The Last successful failover time.
func (o ReplicationProtectedItemPropertiesResponseOutput) LastSuccessfulFailoverTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.LastSuccessfulFailoverTime }).(pulumi.StringPtrOutput)
}

// The Last successful test failover time.
func (o ReplicationProtectedItemPropertiesResponseOutput) LastSuccessfulTestFailoverTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.LastSuccessfulTestFailoverTime }).(pulumi.StringPtrOutput)
}

// The name of Policy governing this PE.
func (o ReplicationProtectedItemPropertiesResponseOutput) PolicyFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.PolicyFriendlyName }).(pulumi.StringPtrOutput)
}

// The ID of Policy governing this PE.
func (o ReplicationProtectedItemPropertiesResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// The friendly name of the primary fabric.
func (o ReplicationProtectedItemPropertiesResponseOutput) PrimaryFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.PrimaryFabricFriendlyName }).(pulumi.StringPtrOutput)
}

// The name of primary protection container friendly name.
func (o ReplicationProtectedItemPropertiesResponseOutput) PrimaryProtectionContainerFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string {
		return v.PrimaryProtectionContainerFriendlyName
	}).(pulumi.StringPtrOutput)
}

// The protected item ARM Id.
func (o ReplicationProtectedItemPropertiesResponseOutput) ProtectableItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.ProtectableItemId }).(pulumi.StringPtrOutput)
}

// The type of protected item type.
func (o ReplicationProtectedItemPropertiesResponseOutput) ProtectedItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.ProtectedItemType }).(pulumi.StringPtrOutput)
}

// The protection status.
func (o ReplicationProtectedItemPropertiesResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// The protection state description.
func (o ReplicationProtectedItemPropertiesResponseOutput) ProtectionStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.ProtectionStateDescription }).(pulumi.StringPtrOutput)
}

// The Replication provider custom settings.
func (o ReplicationProtectedItemPropertiesResponseOutput) ProviderSpecificDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) interface{} { return v.ProviderSpecificDetails }).(pulumi.AnyOutput)
}

// The recovery container Id.
func (o ReplicationProtectedItemPropertiesResponseOutput) RecoveryContainerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.RecoveryContainerId }).(pulumi.StringPtrOutput)
}

// The friendly name of recovery fabric.
func (o ReplicationProtectedItemPropertiesResponseOutput) RecoveryFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.RecoveryFabricFriendlyName }).(pulumi.StringPtrOutput)
}

// The Arm Id of recovery fabric.
func (o ReplicationProtectedItemPropertiesResponseOutput) RecoveryFabricId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.RecoveryFabricId }).(pulumi.StringPtrOutput)
}

// The name of recovery container friendly name.
func (o ReplicationProtectedItemPropertiesResponseOutput) RecoveryProtectionContainerFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string {
		return v.RecoveryProtectionContainerFriendlyName
	}).(pulumi.StringPtrOutput)
}

// The recovery provider ARM Id.
func (o ReplicationProtectedItemPropertiesResponseOutput) RecoveryServicesProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.RecoveryServicesProviderId }).(pulumi.StringPtrOutput)
}

// The consolidated protection health for the VM taking any issues with SRS as well as all the replication units associated with the VM's replication group into account. This is a string representation of the ProtectionHealth enumeration.
func (o ReplicationProtectedItemPropertiesResponseOutput) ReplicationHealth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.ReplicationHealth }).(pulumi.StringPtrOutput)
}

// List of replication health errors.
func (o ReplicationProtectedItemPropertiesResponseOutput) ReplicationHealthErrors() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) []HealthErrorResponse {
		return v.ReplicationHealthErrors
	}).(HealthErrorResponseArrayOutput)
}

// The Test failover state.
func (o ReplicationProtectedItemPropertiesResponseOutput) TestFailoverState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.TestFailoverState }).(pulumi.StringPtrOutput)
}

// The Test failover state description.
func (o ReplicationProtectedItemPropertiesResponseOutput) TestFailoverStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.TestFailoverStateDescription }).(pulumi.StringPtrOutput)
}

type ReplicationProtectedItemPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ReplicationProtectedItemPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationProtectedItemPropertiesResponse)(nil)).Elem()
}

func (o ReplicationProtectedItemPropertiesResponsePtrOutput) ToReplicationProtectedItemPropertiesResponsePtrOutput() ReplicationProtectedItemPropertiesResponsePtrOutput {
	return o
}

func (o ReplicationProtectedItemPropertiesResponsePtrOutput) ToReplicationProtectedItemPropertiesResponsePtrOutputWithContext(ctx context.Context) ReplicationProtectedItemPropertiesResponsePtrOutput {
	return o
}

func (o ReplicationProtectedItemPropertiesResponsePtrOutput) Elem() ReplicationProtectedItemPropertiesResponseOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) ReplicationProtectedItemPropertiesResponse {
		return *v
	}).(ReplicationProtectedItemPropertiesResponseOutput)
}

// The Current active location of the PE.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) ActiveLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ActiveLocation
	}).(pulumi.StringPtrOutput)
}

// The allowed operations on the Replication protected item.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) AllowedOperations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.AllowedOperations
	}).(pulumi.StringArrayOutput)
}

// The current scenario.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) CurrentScenario() CurrentScenarioDetailsResponsePtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *CurrentScenarioDetailsResponse {
		if v == nil {
			return nil
		}
		return v.CurrentScenario
	}).(CurrentScenarioDetailsResponsePtrOutput)
}

// The consolidated failover health for the VM.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) FailoverHealth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.FailoverHealth
	}).(pulumi.StringPtrOutput)
}

// List of failover health errors.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) FailoverHealthErrors() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) []HealthErrorResponse {
		if v == nil {
			return nil
		}
		return v.FailoverHealthErrors
	}).(HealthErrorResponseArrayOutput)
}

// The recovery point ARM Id to which the Vm was failed over.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) FailoverRecoveryPointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.FailoverRecoveryPointId
	}).(pulumi.StringPtrOutput)
}

// The name.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// The Last successful failover time.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) LastSuccessfulFailoverTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastSuccessfulFailoverTime
	}).(pulumi.StringPtrOutput)
}

// The Last successful test failover time.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) LastSuccessfulTestFailoverTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastSuccessfulTestFailoverTime
	}).(pulumi.StringPtrOutput)
}

// The name of Policy governing this PE.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) PolicyFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PolicyFriendlyName
	}).(pulumi.StringPtrOutput)
}

// The ID of Policy governing this PE.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// The friendly name of the primary fabric.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) PrimaryFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryFabricFriendlyName
	}).(pulumi.StringPtrOutput)
}

// The name of primary protection container friendly name.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) PrimaryProtectionContainerFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryProtectionContainerFriendlyName
	}).(pulumi.StringPtrOutput)
}

// The protected item ARM Id.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) ProtectableItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProtectableItemId
	}).(pulumi.StringPtrOutput)
}

// The type of protected item type.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) ProtectedItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProtectedItemType
	}).(pulumi.StringPtrOutput)
}

// The protection status.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionState
	}).(pulumi.StringPtrOutput)
}

// The protection state description.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) ProtectionStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionStateDescription
	}).(pulumi.StringPtrOutput)
}

// The Replication provider custom settings.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) ProviderSpecificDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.ProviderSpecificDetails
	}).(pulumi.AnyOutput)
}

// The recovery container Id.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) RecoveryContainerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryContainerId
	}).(pulumi.StringPtrOutput)
}

// The friendly name of recovery fabric.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) RecoveryFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryFabricFriendlyName
	}).(pulumi.StringPtrOutput)
}

// The Arm Id of recovery fabric.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) RecoveryFabricId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryFabricId
	}).(pulumi.StringPtrOutput)
}

// The name of recovery container friendly name.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) RecoveryProtectionContainerFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryProtectionContainerFriendlyName
	}).(pulumi.StringPtrOutput)
}

// The recovery provider ARM Id.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) RecoveryServicesProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryServicesProviderId
	}).(pulumi.StringPtrOutput)
}

// The consolidated protection health for the VM taking any issues with SRS as well as all the replication units associated with the VM's replication group into account. This is a string representation of the ProtectionHealth enumeration.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) ReplicationHealth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ReplicationHealth
	}).(pulumi.StringPtrOutput)
}

// List of replication health errors.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) ReplicationHealthErrors() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) []HealthErrorResponse {
		if v == nil {
			return nil
		}
		return v.ReplicationHealthErrors
	}).(HealthErrorResponseArrayOutput)
}

// The Test failover state.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) TestFailoverState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.TestFailoverState
	}).(pulumi.StringPtrOutput)
}

// The Test failover state description.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) TestFailoverStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.TestFailoverStateDescription
	}).(pulumi.StringPtrOutput)
}

// Provider specific input for pairing operations.
type ReplicationProviderSpecificContainerMappingInput struct {
	// The class type.
	InstanceType *string `pulumi:"instanceType"`
}

// ReplicationProviderSpecificContainerMappingInputInput is an input type that accepts ReplicationProviderSpecificContainerMappingInputArgs and ReplicationProviderSpecificContainerMappingInputOutput values.
// You can construct a concrete instance of `ReplicationProviderSpecificContainerMappingInputInput` via:
//
//          ReplicationProviderSpecificContainerMappingInputArgs{...}
type ReplicationProviderSpecificContainerMappingInputInput interface {
	pulumi.Input

	ToReplicationProviderSpecificContainerMappingInputOutput() ReplicationProviderSpecificContainerMappingInputOutput
	ToReplicationProviderSpecificContainerMappingInputOutputWithContext(context.Context) ReplicationProviderSpecificContainerMappingInputOutput
}

// Provider specific input for pairing operations.
type ReplicationProviderSpecificContainerMappingInputArgs struct {
	// The class type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
}

func (ReplicationProviderSpecificContainerMappingInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationProviderSpecificContainerMappingInput)(nil)).Elem()
}

func (i ReplicationProviderSpecificContainerMappingInputArgs) ToReplicationProviderSpecificContainerMappingInputOutput() ReplicationProviderSpecificContainerMappingInputOutput {
	return i.ToReplicationProviderSpecificContainerMappingInputOutputWithContext(context.Background())
}

func (i ReplicationProviderSpecificContainerMappingInputArgs) ToReplicationProviderSpecificContainerMappingInputOutputWithContext(ctx context.Context) ReplicationProviderSpecificContainerMappingInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationProviderSpecificContainerMappingInputOutput)
}

func (i ReplicationProviderSpecificContainerMappingInputArgs) ToReplicationProviderSpecificContainerMappingInputPtrOutput() ReplicationProviderSpecificContainerMappingInputPtrOutput {
	return i.ToReplicationProviderSpecificContainerMappingInputPtrOutputWithContext(context.Background())
}

func (i ReplicationProviderSpecificContainerMappingInputArgs) ToReplicationProviderSpecificContainerMappingInputPtrOutputWithContext(ctx context.Context) ReplicationProviderSpecificContainerMappingInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationProviderSpecificContainerMappingInputOutput).ToReplicationProviderSpecificContainerMappingInputPtrOutputWithContext(ctx)
}

// ReplicationProviderSpecificContainerMappingInputPtrInput is an input type that accepts ReplicationProviderSpecificContainerMappingInputArgs, ReplicationProviderSpecificContainerMappingInputPtr and ReplicationProviderSpecificContainerMappingInputPtrOutput values.
// You can construct a concrete instance of `ReplicationProviderSpecificContainerMappingInputPtrInput` via:
//
//          ReplicationProviderSpecificContainerMappingInputArgs{...}
//
//  or:
//
//          nil
type ReplicationProviderSpecificContainerMappingInputPtrInput interface {
	pulumi.Input

	ToReplicationProviderSpecificContainerMappingInputPtrOutput() ReplicationProviderSpecificContainerMappingInputPtrOutput
	ToReplicationProviderSpecificContainerMappingInputPtrOutputWithContext(context.Context) ReplicationProviderSpecificContainerMappingInputPtrOutput
}

type replicationProviderSpecificContainerMappingInputPtrType ReplicationProviderSpecificContainerMappingInputArgs

func ReplicationProviderSpecificContainerMappingInputPtr(v *ReplicationProviderSpecificContainerMappingInputArgs) ReplicationProviderSpecificContainerMappingInputPtrInput {
	return (*replicationProviderSpecificContainerMappingInputPtrType)(v)
}

func (*replicationProviderSpecificContainerMappingInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationProviderSpecificContainerMappingInput)(nil)).Elem()
}

func (i *replicationProviderSpecificContainerMappingInputPtrType) ToReplicationProviderSpecificContainerMappingInputPtrOutput() ReplicationProviderSpecificContainerMappingInputPtrOutput {
	return i.ToReplicationProviderSpecificContainerMappingInputPtrOutputWithContext(context.Background())
}

func (i *replicationProviderSpecificContainerMappingInputPtrType) ToReplicationProviderSpecificContainerMappingInputPtrOutputWithContext(ctx context.Context) ReplicationProviderSpecificContainerMappingInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationProviderSpecificContainerMappingInputPtrOutput)
}

// The retention details of the MT.
type RetentionVolumeResponse struct {
	// The volume capacity.
	CapacityInBytes *int `pulumi:"capacityInBytes"`
	// The free space available in this volume.
	FreeSpaceInBytes *int `pulumi:"freeSpaceInBytes"`
	// The threshold percentage.
	ThresholdPercentage *int `pulumi:"thresholdPercentage"`
	// The volume name.
	VolumeName *string `pulumi:"volumeName"`
}

// The retention details of the MT.
type RetentionVolumeResponseOutput struct{ *pulumi.OutputState }

func (RetentionVolumeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RetentionVolumeResponse)(nil)).Elem()
}

func (o RetentionVolumeResponseOutput) ToRetentionVolumeResponseOutput() RetentionVolumeResponseOutput {
	return o
}

func (o RetentionVolumeResponseOutput) ToRetentionVolumeResponseOutputWithContext(ctx context.Context) RetentionVolumeResponseOutput {
	return o
}

// The volume capacity.
func (o RetentionVolumeResponseOutput) CapacityInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RetentionVolumeResponse) *int { return v.CapacityInBytes }).(pulumi.IntPtrOutput)
}

// The free space available in this volume.
func (o RetentionVolumeResponseOutput) FreeSpaceInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RetentionVolumeResponse) *int { return v.FreeSpaceInBytes }).(pulumi.IntPtrOutput)
}

// The threshold percentage.
func (o RetentionVolumeResponseOutput) ThresholdPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RetentionVolumeResponse) *int { return v.ThresholdPercentage }).(pulumi.IntPtrOutput)
}

// The volume name.
func (o RetentionVolumeResponseOutput) VolumeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RetentionVolumeResponse) *string { return v.VolumeName }).(pulumi.StringPtrOutput)
}

type RetentionVolumeResponseArrayOutput struct{ *pulumi.OutputState }

func (RetentionVolumeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RetentionVolumeResponse)(nil)).Elem()
}

func (o RetentionVolumeResponseArrayOutput) ToRetentionVolumeResponseArrayOutput() RetentionVolumeResponseArrayOutput {
	return o
}

func (o RetentionVolumeResponseArrayOutput) ToRetentionVolumeResponseArrayOutputWithContext(ctx context.Context) RetentionVolumeResponseArrayOutput {
	return o
}

func (o RetentionVolumeResponseArrayOutput) Index(i pulumi.IntInput) RetentionVolumeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RetentionVolumeResponse {
		return vs[0].([]RetentionVolumeResponse)[vs[1].(int)]
	}).(RetentionVolumeResponseOutput)
}

// Azure role assignment details.
type RoleAssignmentResponse struct {
	// The ARM Id of the role assignment.
	Id *string `pulumi:"id"`
	// The name of the role assignment.
	Name *string `pulumi:"name"`
	// Principal Id.
	PrincipalId *string `pulumi:"principalId"`
	// Role definition id.
	RoleDefinitionId *string `pulumi:"roleDefinitionId"`
	// Role assignment scope.
	Scope *string `pulumi:"scope"`
}

// Azure role assignment details.
type RoleAssignmentResponseOutput struct{ *pulumi.OutputState }

func (RoleAssignmentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleAssignmentResponse)(nil)).Elem()
}

func (o RoleAssignmentResponseOutput) ToRoleAssignmentResponseOutput() RoleAssignmentResponseOutput {
	return o
}

func (o RoleAssignmentResponseOutput) ToRoleAssignmentResponseOutputWithContext(ctx context.Context) RoleAssignmentResponseOutput {
	return o
}

// The ARM Id of the role assignment.
func (o RoleAssignmentResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoleAssignmentResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the role assignment.
func (o RoleAssignmentResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoleAssignmentResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Principal Id.
func (o RoleAssignmentResponseOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoleAssignmentResponse) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// Role definition id.
func (o RoleAssignmentResponseOutput) RoleDefinitionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoleAssignmentResponse) *string { return v.RoleDefinitionId }).(pulumi.StringPtrOutput)
}

// Role assignment scope.
func (o RoleAssignmentResponseOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoleAssignmentResponse) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

type RoleAssignmentResponseArrayOutput struct{ *pulumi.OutputState }

func (RoleAssignmentResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoleAssignmentResponse)(nil)).Elem()
}

func (o RoleAssignmentResponseArrayOutput) ToRoleAssignmentResponseArrayOutput() RoleAssignmentResponseArrayOutput {
	return o
}

func (o RoleAssignmentResponseArrayOutput) ToRoleAssignmentResponseArrayOutputWithContext(ctx context.Context) RoleAssignmentResponseArrayOutput {
	return o
}

func (o RoleAssignmentResponseArrayOutput) Index(i pulumi.IntInput) RoleAssignmentResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoleAssignmentResponse {
		return vs[0].([]RoleAssignmentResponse)[vs[1].(int)]
	}).(RoleAssignmentResponseOutput)
}

// CS Accounts Details.
type RunAsAccountResponse struct {
	// The CS RunAs account Id.
	AccountId *string `pulumi:"accountId"`
	// The CS RunAs account name.
	AccountName *string `pulumi:"accountName"`
}

// CS Accounts Details.
type RunAsAccountResponseOutput struct{ *pulumi.OutputState }

func (RunAsAccountResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RunAsAccountResponse)(nil)).Elem()
}

func (o RunAsAccountResponseOutput) ToRunAsAccountResponseOutput() RunAsAccountResponseOutput {
	return o
}

func (o RunAsAccountResponseOutput) ToRunAsAccountResponseOutputWithContext(ctx context.Context) RunAsAccountResponseOutput {
	return o
}

// The CS RunAs account Id.
func (o RunAsAccountResponseOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RunAsAccountResponse) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// The CS RunAs account name.
func (o RunAsAccountResponseOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RunAsAccountResponse) *string { return v.AccountName }).(pulumi.StringPtrOutput)
}

type RunAsAccountResponseArrayOutput struct{ *pulumi.OutputState }

func (RunAsAccountResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RunAsAccountResponse)(nil)).Elem()
}

func (o RunAsAccountResponseArrayOutput) ToRunAsAccountResponseArrayOutput() RunAsAccountResponseArrayOutput {
	return o
}

func (o RunAsAccountResponseArrayOutput) ToRunAsAccountResponseArrayOutputWithContext(ctx context.Context) RunAsAccountResponseArrayOutput {
	return o
}

func (o RunAsAccountResponseArrayOutput) Index(i pulumi.IntInput) RunAsAccountResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RunAsAccountResponse {
		return vs[0].([]RunAsAccountResponse)[vs[1].(int)]
	}).(RunAsAccountResponseOutput)
}

// San enable protection provider specific input.
type SanEnableProtectionInput struct {
	// The class type.
	InstanceType *string `pulumi:"instanceType"`
}

// SanEnableProtectionInputInput is an input type that accepts SanEnableProtectionInputArgs and SanEnableProtectionInputOutput values.
// You can construct a concrete instance of `SanEnableProtectionInputInput` via:
//
//          SanEnableProtectionInputArgs{...}
type SanEnableProtectionInputInput interface {
	pulumi.Input

	ToSanEnableProtectionInputOutput() SanEnableProtectionInputOutput
	ToSanEnableProtectionInputOutputWithContext(context.Context) SanEnableProtectionInputOutput
}

// San enable protection provider specific input.
type SanEnableProtectionInputArgs struct {
	// The class type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
}

func (SanEnableProtectionInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SanEnableProtectionInput)(nil)).Elem()
}

func (i SanEnableProtectionInputArgs) ToSanEnableProtectionInputOutput() SanEnableProtectionInputOutput {
	return i.ToSanEnableProtectionInputOutputWithContext(context.Background())
}

func (i SanEnableProtectionInputArgs) ToSanEnableProtectionInputOutputWithContext(ctx context.Context) SanEnableProtectionInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SanEnableProtectionInputOutput)
}

// Storage mapping properties.
type StorageClassificationMappingPropertiesResponse struct {
	// Target storage object Id.
	TargetStorageClassificationId *string `pulumi:"targetStorageClassificationId"`
}

// Storage mapping properties.
type StorageClassificationMappingPropertiesResponseOutput struct{ *pulumi.OutputState }

func (StorageClassificationMappingPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClassificationMappingPropertiesResponse)(nil)).Elem()
}

func (o StorageClassificationMappingPropertiesResponseOutput) ToStorageClassificationMappingPropertiesResponseOutput() StorageClassificationMappingPropertiesResponseOutput {
	return o
}

func (o StorageClassificationMappingPropertiesResponseOutput) ToStorageClassificationMappingPropertiesResponseOutputWithContext(ctx context.Context) StorageClassificationMappingPropertiesResponseOutput {
	return o
}

func (o StorageClassificationMappingPropertiesResponseOutput) ToStorageClassificationMappingPropertiesResponsePtrOutput() StorageClassificationMappingPropertiesResponsePtrOutput {
	return o.ToStorageClassificationMappingPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o StorageClassificationMappingPropertiesResponseOutput) ToStorageClassificationMappingPropertiesResponsePtrOutputWithContext(ctx context.Context) StorageClassificationMappingPropertiesResponsePtrOutput {
	return o.ApplyT(func(v StorageClassificationMappingPropertiesResponse) *StorageClassificationMappingPropertiesResponse {
		return &v
	}).(StorageClassificationMappingPropertiesResponsePtrOutput)
}

// Target storage object Id.
func (o StorageClassificationMappingPropertiesResponseOutput) TargetStorageClassificationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClassificationMappingPropertiesResponse) *string { return v.TargetStorageClassificationId }).(pulumi.StringPtrOutput)
}

type StorageClassificationMappingPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (StorageClassificationMappingPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClassificationMappingPropertiesResponse)(nil)).Elem()
}

func (o StorageClassificationMappingPropertiesResponsePtrOutput) ToStorageClassificationMappingPropertiesResponsePtrOutput() StorageClassificationMappingPropertiesResponsePtrOutput {
	return o
}

func (o StorageClassificationMappingPropertiesResponsePtrOutput) ToStorageClassificationMappingPropertiesResponsePtrOutputWithContext(ctx context.Context) StorageClassificationMappingPropertiesResponsePtrOutput {
	return o
}

func (o StorageClassificationMappingPropertiesResponsePtrOutput) Elem() StorageClassificationMappingPropertiesResponseOutput {
	return o.ApplyT(func(v *StorageClassificationMappingPropertiesResponse) StorageClassificationMappingPropertiesResponse {
		return *v
	}).(StorageClassificationMappingPropertiesResponseOutput)
}

// Target storage object Id.
func (o StorageClassificationMappingPropertiesResponsePtrOutput) TargetStorageClassificationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClassificationMappingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetStorageClassificationId
	}).(pulumi.StringPtrOutput)
}

// Storage mapping input properties.
type StorageMappingInputProperties struct {
	// The ID of the storage object.
	TargetStorageClassificationId *string `pulumi:"targetStorageClassificationId"`
}

// StorageMappingInputPropertiesInput is an input type that accepts StorageMappingInputPropertiesArgs and StorageMappingInputPropertiesOutput values.
// You can construct a concrete instance of `StorageMappingInputPropertiesInput` via:
//
//          StorageMappingInputPropertiesArgs{...}
type StorageMappingInputPropertiesInput interface {
	pulumi.Input

	ToStorageMappingInputPropertiesOutput() StorageMappingInputPropertiesOutput
	ToStorageMappingInputPropertiesOutputWithContext(context.Context) StorageMappingInputPropertiesOutput
}

// Storage mapping input properties.
type StorageMappingInputPropertiesArgs struct {
	// The ID of the storage object.
	TargetStorageClassificationId pulumi.StringPtrInput `pulumi:"targetStorageClassificationId"`
}

func (StorageMappingInputPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageMappingInputProperties)(nil)).Elem()
}

func (i StorageMappingInputPropertiesArgs) ToStorageMappingInputPropertiesOutput() StorageMappingInputPropertiesOutput {
	return i.ToStorageMappingInputPropertiesOutputWithContext(context.Background())
}

func (i StorageMappingInputPropertiesArgs) ToStorageMappingInputPropertiesOutputWithContext(ctx context.Context) StorageMappingInputPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageMappingInputPropertiesOutput)
}

func (i StorageMappingInputPropertiesArgs) ToStorageMappingInputPropertiesPtrOutput() StorageMappingInputPropertiesPtrOutput {
	return i.ToStorageMappingInputPropertiesPtrOutputWithContext(context.Background())
}

func (i StorageMappingInputPropertiesArgs) ToStorageMappingInputPropertiesPtrOutputWithContext(ctx context.Context) StorageMappingInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageMappingInputPropertiesOutput).ToStorageMappingInputPropertiesPtrOutputWithContext(ctx)
}

// StorageMappingInputPropertiesPtrInput is an input type that accepts StorageMappingInputPropertiesArgs, StorageMappingInputPropertiesPtr and StorageMappingInputPropertiesPtrOutput values.
// You can construct a concrete instance of `StorageMappingInputPropertiesPtrInput` via:
//
//          StorageMappingInputPropertiesArgs{...}
//
//  or:
//
//          nil
type StorageMappingInputPropertiesPtrInput interface {
	pulumi.Input

	ToStorageMappingInputPropertiesPtrOutput() StorageMappingInputPropertiesPtrOutput
	ToStorageMappingInputPropertiesPtrOutputWithContext(context.Context) StorageMappingInputPropertiesPtrOutput
}

type storageMappingInputPropertiesPtrType StorageMappingInputPropertiesArgs

func StorageMappingInputPropertiesPtr(v *StorageMappingInputPropertiesArgs) StorageMappingInputPropertiesPtrInput {
	return (*storageMappingInputPropertiesPtrType)(v)
}

func (*storageMappingInputPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageMappingInputProperties)(nil)).Elem()
}

func (i *storageMappingInputPropertiesPtrType) ToStorageMappingInputPropertiesPtrOutput() StorageMappingInputPropertiesPtrOutput {
	return i.ToStorageMappingInputPropertiesPtrOutputWithContext(context.Background())
}

func (i *storageMappingInputPropertiesPtrType) ToStorageMappingInputPropertiesPtrOutputWithContext(ctx context.Context) StorageMappingInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageMappingInputPropertiesPtrOutput)
}

// vCenter properties.
type VCenterPropertiesResponse struct {
	// The VCenter discovery status.
	DiscoveryStatus *string `pulumi:"discoveryStatus"`
	// The ARM resource name of the fabric containing this VCenter.
	FabricArmResourceName *string `pulumi:"fabricArmResourceName"`
	// Friendly name of the vCenter.
	FriendlyName *string `pulumi:"friendlyName"`
	// The infrastructure Id of vCenter.
	InfrastructureId *string `pulumi:"infrastructureId"`
	// VCenter internal ID.
	InternalId *string `pulumi:"internalId"`
	// The IP address of the vCenter.
	IpAddress *string `pulumi:"ipAddress"`
	// The time when the last heartbeat was received by vCenter.
	LastHeartbeat *string `pulumi:"lastHeartbeat"`
	// The port number for discovery.
	Port *string `pulumi:"port"`
	// The process server Id.
	ProcessServerId *string `pulumi:"processServerId"`
	// The account Id which has privileges to discover the vCenter.
	RunAsAccountId *string `pulumi:"runAsAccountId"`
}

// vCenter properties.
type VCenterPropertiesResponseOutput struct{ *pulumi.OutputState }

func (VCenterPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VCenterPropertiesResponse)(nil)).Elem()
}

func (o VCenterPropertiesResponseOutput) ToVCenterPropertiesResponseOutput() VCenterPropertiesResponseOutput {
	return o
}

func (o VCenterPropertiesResponseOutput) ToVCenterPropertiesResponseOutputWithContext(ctx context.Context) VCenterPropertiesResponseOutput {
	return o
}

func (o VCenterPropertiesResponseOutput) ToVCenterPropertiesResponsePtrOutput() VCenterPropertiesResponsePtrOutput {
	return o.ToVCenterPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o VCenterPropertiesResponseOutput) ToVCenterPropertiesResponsePtrOutputWithContext(ctx context.Context) VCenterPropertiesResponsePtrOutput {
	return o.ApplyT(func(v VCenterPropertiesResponse) *VCenterPropertiesResponse {
		return &v
	}).(VCenterPropertiesResponsePtrOutput)
}

// The VCenter discovery status.
func (o VCenterPropertiesResponseOutput) DiscoveryStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VCenterPropertiesResponse) *string { return v.DiscoveryStatus }).(pulumi.StringPtrOutput)
}

// The ARM resource name of the fabric containing this VCenter.
func (o VCenterPropertiesResponseOutput) FabricArmResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VCenterPropertiesResponse) *string { return v.FabricArmResourceName }).(pulumi.StringPtrOutput)
}

// Friendly name of the vCenter.
func (o VCenterPropertiesResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VCenterPropertiesResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// The infrastructure Id of vCenter.
func (o VCenterPropertiesResponseOutput) InfrastructureId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VCenterPropertiesResponse) *string { return v.InfrastructureId }).(pulumi.StringPtrOutput)
}

// VCenter internal ID.
func (o VCenterPropertiesResponseOutput) InternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VCenterPropertiesResponse) *string { return v.InternalId }).(pulumi.StringPtrOutput)
}

// The IP address of the vCenter.
func (o VCenterPropertiesResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VCenterPropertiesResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The time when the last heartbeat was received by vCenter.
func (o VCenterPropertiesResponseOutput) LastHeartbeat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VCenterPropertiesResponse) *string { return v.LastHeartbeat }).(pulumi.StringPtrOutput)
}

// The port number for discovery.
func (o VCenterPropertiesResponseOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VCenterPropertiesResponse) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// The process server Id.
func (o VCenterPropertiesResponseOutput) ProcessServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VCenterPropertiesResponse) *string { return v.ProcessServerId }).(pulumi.StringPtrOutput)
}

// The account Id which has privileges to discover the vCenter.
func (o VCenterPropertiesResponseOutput) RunAsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VCenterPropertiesResponse) *string { return v.RunAsAccountId }).(pulumi.StringPtrOutput)
}

type VCenterPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (VCenterPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VCenterPropertiesResponse)(nil)).Elem()
}

func (o VCenterPropertiesResponsePtrOutput) ToVCenterPropertiesResponsePtrOutput() VCenterPropertiesResponsePtrOutput {
	return o
}

func (o VCenterPropertiesResponsePtrOutput) ToVCenterPropertiesResponsePtrOutputWithContext(ctx context.Context) VCenterPropertiesResponsePtrOutput {
	return o
}

func (o VCenterPropertiesResponsePtrOutput) Elem() VCenterPropertiesResponseOutput {
	return o.ApplyT(func(v *VCenterPropertiesResponse) VCenterPropertiesResponse { return *v }).(VCenterPropertiesResponseOutput)
}

// The VCenter discovery status.
func (o VCenterPropertiesResponsePtrOutput) DiscoveryStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VCenterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DiscoveryStatus
	}).(pulumi.StringPtrOutput)
}

// The ARM resource name of the fabric containing this VCenter.
func (o VCenterPropertiesResponsePtrOutput) FabricArmResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VCenterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.FabricArmResourceName
	}).(pulumi.StringPtrOutput)
}

// Friendly name of the vCenter.
func (o VCenterPropertiesResponsePtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VCenterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// The infrastructure Id of vCenter.
func (o VCenterPropertiesResponsePtrOutput) InfrastructureId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VCenterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.InfrastructureId
	}).(pulumi.StringPtrOutput)
}

// VCenter internal ID.
func (o VCenterPropertiesResponsePtrOutput) InternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VCenterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.InternalId
	}).(pulumi.StringPtrOutput)
}

// The IP address of the vCenter.
func (o VCenterPropertiesResponsePtrOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VCenterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.IpAddress
	}).(pulumi.StringPtrOutput)
}

// The time when the last heartbeat was received by vCenter.
func (o VCenterPropertiesResponsePtrOutput) LastHeartbeat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VCenterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastHeartbeat
	}).(pulumi.StringPtrOutput)
}

// The port number for discovery.
func (o VCenterPropertiesResponsePtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VCenterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

// The process server Id.
func (o VCenterPropertiesResponsePtrOutput) ProcessServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VCenterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProcessServerId
	}).(pulumi.StringPtrOutput)
}

// The account Id which has privileges to discover the vCenter.
func (o VCenterPropertiesResponsePtrOutput) RunAsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VCenterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.RunAsAccountId
	}).(pulumi.StringPtrOutput)
}

// Hyper V VM network details.
type VMNicDetailsResponse struct {
	// Ip address type.
	IpAddressType *string `pulumi:"ipAddressType"`
	// The nic Id.
	NicId *string `pulumi:"nicId"`
	// Primary nic static IP address.
	PrimaryNicStaticIPAddress *string `pulumi:"primaryNicStaticIPAddress"`
	// IP allocation type for recovery VM.
	RecoveryNicIpAddressType *string `pulumi:"recoveryNicIpAddressType"`
	// Recovery VM network Id.
	RecoveryVMNetworkId *string `pulumi:"recoveryVMNetworkId"`
	// Recovery VM subnet name.
	RecoveryVMSubnetName *string `pulumi:"recoveryVMSubnetName"`
	// The replica nic Id.
	ReplicaNicId *string `pulumi:"replicaNicId"`
	// Replica nic static IP address.
	ReplicaNicStaticIPAddress *string `pulumi:"replicaNicStaticIPAddress"`
	// Selection type for failover.
	SelectionType *string `pulumi:"selectionType"`
	// The source nic ARM Id.
	SourceNicArmId *string `pulumi:"sourceNicArmId"`
	// VM network name.
	VMNetworkName *string `pulumi:"vMNetworkName"`
	// VM subnet name.
	VMSubnetName *string `pulumi:"vMSubnetName"`
}

// Hyper V VM network details.
type VMNicDetailsResponseOutput struct{ *pulumi.OutputState }

func (VMNicDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMNicDetailsResponse)(nil)).Elem()
}

func (o VMNicDetailsResponseOutput) ToVMNicDetailsResponseOutput() VMNicDetailsResponseOutput {
	return o
}

func (o VMNicDetailsResponseOutput) ToVMNicDetailsResponseOutputWithContext(ctx context.Context) VMNicDetailsResponseOutput {
	return o
}

// Ip address type.
func (o VMNicDetailsResponseOutput) IpAddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.IpAddressType }).(pulumi.StringPtrOutput)
}

// The nic Id.
func (o VMNicDetailsResponseOutput) NicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.NicId }).(pulumi.StringPtrOutput)
}

// Primary nic static IP address.
func (o VMNicDetailsResponseOutput) PrimaryNicStaticIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.PrimaryNicStaticIPAddress }).(pulumi.StringPtrOutput)
}

// IP allocation type for recovery VM.
func (o VMNicDetailsResponseOutput) RecoveryNicIpAddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.RecoveryNicIpAddressType }).(pulumi.StringPtrOutput)
}

// Recovery VM network Id.
func (o VMNicDetailsResponseOutput) RecoveryVMNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.RecoveryVMNetworkId }).(pulumi.StringPtrOutput)
}

// Recovery VM subnet name.
func (o VMNicDetailsResponseOutput) RecoveryVMSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.RecoveryVMSubnetName }).(pulumi.StringPtrOutput)
}

// The replica nic Id.
func (o VMNicDetailsResponseOutput) ReplicaNicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.ReplicaNicId }).(pulumi.StringPtrOutput)
}

// Replica nic static IP address.
func (o VMNicDetailsResponseOutput) ReplicaNicStaticIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.ReplicaNicStaticIPAddress }).(pulumi.StringPtrOutput)
}

// Selection type for failover.
func (o VMNicDetailsResponseOutput) SelectionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.SelectionType }).(pulumi.StringPtrOutput)
}

// The source nic ARM Id.
func (o VMNicDetailsResponseOutput) SourceNicArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.SourceNicArmId }).(pulumi.StringPtrOutput)
}

// VM network name.
func (o VMNicDetailsResponseOutput) VMNetworkName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.VMNetworkName }).(pulumi.StringPtrOutput)
}

// VM subnet name.
func (o VMNicDetailsResponseOutput) VMSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.VMSubnetName }).(pulumi.StringPtrOutput)
}

type VMNicDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (VMNicDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMNicDetailsResponse)(nil)).Elem()
}

func (o VMNicDetailsResponseArrayOutput) ToVMNicDetailsResponseArrayOutput() VMNicDetailsResponseArrayOutput {
	return o
}

func (o VMNicDetailsResponseArrayOutput) ToVMNicDetailsResponseArrayOutputWithContext(ctx context.Context) VMNicDetailsResponseArrayOutput {
	return o
}

func (o VMNicDetailsResponseArrayOutput) Index(i pulumi.IntInput) VMNicDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VMNicDetailsResponse {
		return vs[0].([]VMNicDetailsResponse)[vs[1].(int)]
	}).(VMNicDetailsResponseOutput)
}

// VMware Cbt Policy creation input.
type VMwareCbtPolicyCreationInput struct {
	// The app consistent snapshot frequency (in minutes).
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// The crash consistent snapshot frequency (in minutes).
	CrashConsistentFrequencyInMinutes *int `pulumi:"crashConsistentFrequencyInMinutes"`
	// The class type.
	InstanceType *string `pulumi:"instanceType"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistory *int `pulumi:"recoveryPointHistory"`
}

// VMwareCbtPolicyCreationInputInput is an input type that accepts VMwareCbtPolicyCreationInputArgs and VMwareCbtPolicyCreationInputOutput values.
// You can construct a concrete instance of `VMwareCbtPolicyCreationInputInput` via:
//
//          VMwareCbtPolicyCreationInputArgs{...}
type VMwareCbtPolicyCreationInputInput interface {
	pulumi.Input

	ToVMwareCbtPolicyCreationInputOutput() VMwareCbtPolicyCreationInputOutput
	ToVMwareCbtPolicyCreationInputOutputWithContext(context.Context) VMwareCbtPolicyCreationInputOutput
}

// VMware Cbt Policy creation input.
type VMwareCbtPolicyCreationInputArgs struct {
	// The app consistent snapshot frequency (in minutes).
	AppConsistentFrequencyInMinutes pulumi.IntPtrInput `pulumi:"appConsistentFrequencyInMinutes"`
	// The crash consistent snapshot frequency (in minutes).
	CrashConsistentFrequencyInMinutes pulumi.IntPtrInput `pulumi:"crashConsistentFrequencyInMinutes"`
	// The class type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistory pulumi.IntPtrInput `pulumi:"recoveryPointHistory"`
}

func (VMwareCbtPolicyCreationInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareCbtPolicyCreationInput)(nil)).Elem()
}

func (i VMwareCbtPolicyCreationInputArgs) ToVMwareCbtPolicyCreationInputOutput() VMwareCbtPolicyCreationInputOutput {
	return i.ToVMwareCbtPolicyCreationInputOutputWithContext(context.Background())
}

func (i VMwareCbtPolicyCreationInputArgs) ToVMwareCbtPolicyCreationInputOutputWithContext(ctx context.Context) VMwareCbtPolicyCreationInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareCbtPolicyCreationInputOutput)
}

// Store the fabric details specific to the VMware fabric.
type VMwareDetailsResponse struct {
	// The number of source and target servers configured to talk to this CS.
	AgentCount *string `pulumi:"agentCount"`
	// The agent Version.
	AgentVersion *string `pulumi:"agentVersion"`
	// The available memory.
	AvailableMemoryInBytes *int `pulumi:"availableMemoryInBytes"`
	// The available space.
	AvailableSpaceInBytes *int `pulumi:"availableSpaceInBytes"`
	// The percentage of the CPU load.
	CpuLoad *string `pulumi:"cpuLoad"`
	// The CPU load status.
	CpuLoadStatus *string `pulumi:"cpuLoadStatus"`
	// The CS service status.
	CsServiceStatus *string `pulumi:"csServiceStatus"`
	// The database server load.
	DatabaseServerLoad *string `pulumi:"databaseServerLoad"`
	// The database server load status.
	DatabaseServerLoadStatus *string `pulumi:"databaseServerLoadStatus"`
	// The host name.
	HostName *string `pulumi:"hostName"`
	// Gets the class type. Overridden in derived classes.
	InstanceType string `pulumi:"instanceType"`
	// The IP address.
	IpAddress *string `pulumi:"ipAddress"`
	// The last heartbeat received from CS server.
	LastHeartbeat *string `pulumi:"lastHeartbeat"`
	// The list of Master Target servers associated with the fabric.
	MasterTargetServers []MasterTargetServerResponse `pulumi:"masterTargetServers"`
	// The memory usage status.
	MemoryUsageStatus *string `pulumi:"memoryUsageStatus"`
	// The number of process servers.
	ProcessServerCount *string `pulumi:"processServerCount"`
	// The list of Process Servers associated with the fabric.
	ProcessServers []ProcessServerResponse `pulumi:"processServers"`
	// The number of protected servers.
	ProtectedServers *string `pulumi:"protectedServers"`
	// PS template version.
	PsTemplateVersion *string `pulumi:"psTemplateVersion"`
	// The number of replication pairs configured in this CS.
	ReplicationPairCount *string `pulumi:"replicationPairCount"`
	// The list of run as accounts created on the server.
	RunAsAccounts []RunAsAccountResponse `pulumi:"runAsAccounts"`
	// The space usage status.
	SpaceUsageStatus *string `pulumi:"spaceUsageStatus"`
	// CS SSL cert expiry date.
	SslCertExpiryDate *string `pulumi:"sslCertExpiryDate"`
	// CS SSL cert expiry date.
	SslCertExpiryRemainingDays *int `pulumi:"sslCertExpiryRemainingDays"`
	// The percentage of the system load.
	SystemLoad *string `pulumi:"systemLoad"`
	// The system load status.
	SystemLoadStatus *string `pulumi:"systemLoadStatus"`
	// The total memory.
	TotalMemoryInBytes *int `pulumi:"totalMemoryInBytes"`
	// The total space.
	TotalSpaceInBytes *int `pulumi:"totalSpaceInBytes"`
	// Version status
	VersionStatus *string `pulumi:"versionStatus"`
	// The web load.
	WebLoad *string `pulumi:"webLoad"`
	// The web load status.
	WebLoadStatus *string `pulumi:"webLoadStatus"`
}

// Store the fabric details specific to the VMware fabric.
type VMwareDetailsResponseOutput struct{ *pulumi.OutputState }

func (VMwareDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareDetailsResponse)(nil)).Elem()
}

func (o VMwareDetailsResponseOutput) ToVMwareDetailsResponseOutput() VMwareDetailsResponseOutput {
	return o
}

func (o VMwareDetailsResponseOutput) ToVMwareDetailsResponseOutputWithContext(ctx context.Context) VMwareDetailsResponseOutput {
	return o
}

// The number of source and target servers configured to talk to this CS.
func (o VMwareDetailsResponseOutput) AgentCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.AgentCount }).(pulumi.StringPtrOutput)
}

// The agent Version.
func (o VMwareDetailsResponseOutput) AgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.AgentVersion }).(pulumi.StringPtrOutput)
}

// The available memory.
func (o VMwareDetailsResponseOutput) AvailableMemoryInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *int { return v.AvailableMemoryInBytes }).(pulumi.IntPtrOutput)
}

// The available space.
func (o VMwareDetailsResponseOutput) AvailableSpaceInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *int { return v.AvailableSpaceInBytes }).(pulumi.IntPtrOutput)
}

// The percentage of the CPU load.
func (o VMwareDetailsResponseOutput) CpuLoad() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.CpuLoad }).(pulumi.StringPtrOutput)
}

// The CPU load status.
func (o VMwareDetailsResponseOutput) CpuLoadStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.CpuLoadStatus }).(pulumi.StringPtrOutput)
}

// The CS service status.
func (o VMwareDetailsResponseOutput) CsServiceStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.CsServiceStatus }).(pulumi.StringPtrOutput)
}

// The database server load.
func (o VMwareDetailsResponseOutput) DatabaseServerLoad() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.DatabaseServerLoad }).(pulumi.StringPtrOutput)
}

// The database server load status.
func (o VMwareDetailsResponseOutput) DatabaseServerLoadStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.DatabaseServerLoadStatus }).(pulumi.StringPtrOutput)
}

// The host name.
func (o VMwareDetailsResponseOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.HostName }).(pulumi.StringPtrOutput)
}

// Gets the class type. Overridden in derived classes.
func (o VMwareDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The IP address.
func (o VMwareDetailsResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The last heartbeat received from CS server.
func (o VMwareDetailsResponseOutput) LastHeartbeat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.LastHeartbeat }).(pulumi.StringPtrOutput)
}

// The list of Master Target servers associated with the fabric.
func (o VMwareDetailsResponseOutput) MasterTargetServers() MasterTargetServerResponseArrayOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) []MasterTargetServerResponse { return v.MasterTargetServers }).(MasterTargetServerResponseArrayOutput)
}

// The memory usage status.
func (o VMwareDetailsResponseOutput) MemoryUsageStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.MemoryUsageStatus }).(pulumi.StringPtrOutput)
}

// The number of process servers.
func (o VMwareDetailsResponseOutput) ProcessServerCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.ProcessServerCount }).(pulumi.StringPtrOutput)
}

// The list of Process Servers associated with the fabric.
func (o VMwareDetailsResponseOutput) ProcessServers() ProcessServerResponseArrayOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) []ProcessServerResponse { return v.ProcessServers }).(ProcessServerResponseArrayOutput)
}

// The number of protected servers.
func (o VMwareDetailsResponseOutput) ProtectedServers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.ProtectedServers }).(pulumi.StringPtrOutput)
}

// PS template version.
func (o VMwareDetailsResponseOutput) PsTemplateVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.PsTemplateVersion }).(pulumi.StringPtrOutput)
}

// The number of replication pairs configured in this CS.
func (o VMwareDetailsResponseOutput) ReplicationPairCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.ReplicationPairCount }).(pulumi.StringPtrOutput)
}

// The list of run as accounts created on the server.
func (o VMwareDetailsResponseOutput) RunAsAccounts() RunAsAccountResponseArrayOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) []RunAsAccountResponse { return v.RunAsAccounts }).(RunAsAccountResponseArrayOutput)
}

// The space usage status.
func (o VMwareDetailsResponseOutput) SpaceUsageStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.SpaceUsageStatus }).(pulumi.StringPtrOutput)
}

// CS SSL cert expiry date.
func (o VMwareDetailsResponseOutput) SslCertExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.SslCertExpiryDate }).(pulumi.StringPtrOutput)
}

// CS SSL cert expiry date.
func (o VMwareDetailsResponseOutput) SslCertExpiryRemainingDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *int { return v.SslCertExpiryRemainingDays }).(pulumi.IntPtrOutput)
}

// The percentage of the system load.
func (o VMwareDetailsResponseOutput) SystemLoad() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.SystemLoad }).(pulumi.StringPtrOutput)
}

// The system load status.
func (o VMwareDetailsResponseOutput) SystemLoadStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.SystemLoadStatus }).(pulumi.StringPtrOutput)
}

// The total memory.
func (o VMwareDetailsResponseOutput) TotalMemoryInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *int { return v.TotalMemoryInBytes }).(pulumi.IntPtrOutput)
}

// The total space.
func (o VMwareDetailsResponseOutput) TotalSpaceInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *int { return v.TotalSpaceInBytes }).(pulumi.IntPtrOutput)
}

// Version status
func (o VMwareDetailsResponseOutput) VersionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.VersionStatus }).(pulumi.StringPtrOutput)
}

// The web load.
func (o VMwareDetailsResponseOutput) WebLoad() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.WebLoad }).(pulumi.StringPtrOutput)
}

// The web load status.
func (o VMwareDetailsResponseOutput) WebLoadStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.WebLoadStatus }).(pulumi.StringPtrOutput)
}

// VMwareV2 fabric Specific Details.
type VMwareV2FabricSpecificDetailsResponse struct {
	// Gets the class type. Overridden in derived classes.
	InstanceType string `pulumi:"instanceType"`
	// The endpoint for making requests to the RCM Service.
	RcmServiceEndpoint *string `pulumi:"rcmServiceEndpoint"`
	// The endpoint for making requests to the SRS Service.
	SrsServiceEndpoint *string `pulumi:"srsServiceEndpoint"`
}

// VMwareV2 fabric Specific Details.
type VMwareV2FabricSpecificDetailsResponseOutput struct{ *pulumi.OutputState }

func (VMwareV2FabricSpecificDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareV2FabricSpecificDetailsResponse)(nil)).Elem()
}

func (o VMwareV2FabricSpecificDetailsResponseOutput) ToVMwareV2FabricSpecificDetailsResponseOutput() VMwareV2FabricSpecificDetailsResponseOutput {
	return o
}

func (o VMwareV2FabricSpecificDetailsResponseOutput) ToVMwareV2FabricSpecificDetailsResponseOutputWithContext(ctx context.Context) VMwareV2FabricSpecificDetailsResponseOutput {
	return o
}

// Gets the class type. Overridden in derived classes.
func (o VMwareV2FabricSpecificDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareV2FabricSpecificDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The endpoint for making requests to the RCM Service.
func (o VMwareV2FabricSpecificDetailsResponseOutput) RcmServiceEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareV2FabricSpecificDetailsResponse) *string { return v.RcmServiceEndpoint }).(pulumi.StringPtrOutput)
}

// The endpoint for making requests to the SRS Service.
func (o VMwareV2FabricSpecificDetailsResponseOutput) SrsServiceEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareV2FabricSpecificDetailsResponse) *string { return v.SrsServiceEndpoint }).(pulumi.StringPtrOutput)
}

// VMM fabric specific details.
type VmmDetailsResponse struct {
	// Gets the class type. Overridden in derived classes.
	InstanceType string `pulumi:"instanceType"`
}

// VMM fabric specific details.
type VmmDetailsResponseOutput struct{ *pulumi.OutputState }

func (VmmDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmmDetailsResponse)(nil)).Elem()
}

func (o VmmDetailsResponseOutput) ToVmmDetailsResponseOutput() VmmDetailsResponseOutput {
	return o
}

func (o VmmDetailsResponseOutput) ToVmmDetailsResponseOutputWithContext(ctx context.Context) VmmDetailsResponseOutput {
	return o
}

// Gets the class type. Overridden in derived classes.
func (o VmmDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v VmmDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// Create network mappings input properties/behavior specific to Vmm to Azure Network mapping.
type VmmToAzureCreateNetworkMappingInput struct {
	// The instance type.
	InstanceType *string `pulumi:"instanceType"`
}

// VmmToAzureCreateNetworkMappingInputInput is an input type that accepts VmmToAzureCreateNetworkMappingInputArgs and VmmToAzureCreateNetworkMappingInputOutput values.
// You can construct a concrete instance of `VmmToAzureCreateNetworkMappingInputInput` via:
//
//          VmmToAzureCreateNetworkMappingInputArgs{...}
type VmmToAzureCreateNetworkMappingInputInput interface {
	pulumi.Input

	ToVmmToAzureCreateNetworkMappingInputOutput() VmmToAzureCreateNetworkMappingInputOutput
	ToVmmToAzureCreateNetworkMappingInputOutputWithContext(context.Context) VmmToAzureCreateNetworkMappingInputOutput
}

// Create network mappings input properties/behavior specific to Vmm to Azure Network mapping.
type VmmToAzureCreateNetworkMappingInputArgs struct {
	// The instance type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
}

func (VmmToAzureCreateNetworkMappingInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmmToAzureCreateNetworkMappingInput)(nil)).Elem()
}

func (i VmmToAzureCreateNetworkMappingInputArgs) ToVmmToAzureCreateNetworkMappingInputOutput() VmmToAzureCreateNetworkMappingInputOutput {
	return i.ToVmmToAzureCreateNetworkMappingInputOutputWithContext(context.Background())
}

func (i VmmToAzureCreateNetworkMappingInputArgs) ToVmmToAzureCreateNetworkMappingInputOutputWithContext(ctx context.Context) VmmToAzureCreateNetworkMappingInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmmToAzureCreateNetworkMappingInputOutput)
}

// E2A Network Mapping fabric specific settings.
type VmmToAzureNetworkMappingSettingsResponse struct {
	// Gets the Instance type.
	InstanceType string `pulumi:"instanceType"`
}

// E2A Network Mapping fabric specific settings.
type VmmToAzureNetworkMappingSettingsResponseOutput struct{ *pulumi.OutputState }

func (VmmToAzureNetworkMappingSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmmToAzureNetworkMappingSettingsResponse)(nil)).Elem()
}

func (o VmmToAzureNetworkMappingSettingsResponseOutput) ToVmmToAzureNetworkMappingSettingsResponseOutput() VmmToAzureNetworkMappingSettingsResponseOutput {
	return o
}

func (o VmmToAzureNetworkMappingSettingsResponseOutput) ToVmmToAzureNetworkMappingSettingsResponseOutputWithContext(ctx context.Context) VmmToAzureNetworkMappingSettingsResponseOutput {
	return o
}

// Gets the Instance type.
func (o VmmToAzureNetworkMappingSettingsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v VmmToAzureNetworkMappingSettingsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// Create network mappings input properties/behavior specific to vmm to vmm Network mapping.
type VmmToVmmCreateNetworkMappingInput struct {
	// The instance type.
	InstanceType *string `pulumi:"instanceType"`
}

// VmmToVmmCreateNetworkMappingInputInput is an input type that accepts VmmToVmmCreateNetworkMappingInputArgs and VmmToVmmCreateNetworkMappingInputOutput values.
// You can construct a concrete instance of `VmmToVmmCreateNetworkMappingInputInput` via:
//
//          VmmToVmmCreateNetworkMappingInputArgs{...}
type VmmToVmmCreateNetworkMappingInputInput interface {
	pulumi.Input

	ToVmmToVmmCreateNetworkMappingInputOutput() VmmToVmmCreateNetworkMappingInputOutput
	ToVmmToVmmCreateNetworkMappingInputOutputWithContext(context.Context) VmmToVmmCreateNetworkMappingInputOutput
}

// Create network mappings input properties/behavior specific to vmm to vmm Network mapping.
type VmmToVmmCreateNetworkMappingInputArgs struct {
	// The instance type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
}

func (VmmToVmmCreateNetworkMappingInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmmToVmmCreateNetworkMappingInput)(nil)).Elem()
}

func (i VmmToVmmCreateNetworkMappingInputArgs) ToVmmToVmmCreateNetworkMappingInputOutput() VmmToVmmCreateNetworkMappingInputOutput {
	return i.ToVmmToVmmCreateNetworkMappingInputOutputWithContext(context.Background())
}

func (i VmmToVmmCreateNetworkMappingInputArgs) ToVmmToVmmCreateNetworkMappingInputOutputWithContext(ctx context.Context) VmmToVmmCreateNetworkMappingInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmmToVmmCreateNetworkMappingInputOutput)
}

// E2E Network Mapping fabric specific settings.
type VmmToVmmNetworkMappingSettingsResponse struct {
	// Gets the Instance type.
	InstanceType string `pulumi:"instanceType"`
}

// E2E Network Mapping fabric specific settings.
type VmmToVmmNetworkMappingSettingsResponseOutput struct{ *pulumi.OutputState }

func (VmmToVmmNetworkMappingSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmmToVmmNetworkMappingSettingsResponse)(nil)).Elem()
}

func (o VmmToVmmNetworkMappingSettingsResponseOutput) ToVmmToVmmNetworkMappingSettingsResponseOutput() VmmToVmmNetworkMappingSettingsResponseOutput {
	return o
}

func (o VmmToVmmNetworkMappingSettingsResponseOutput) ToVmmToVmmNetworkMappingSettingsResponseOutputWithContext(ctx context.Context) VmmToVmmNetworkMappingSettingsResponseOutput {
	return o
}

// Gets the Instance type.
func (o VmmToVmmNetworkMappingSettingsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v VmmToVmmNetworkMappingSettingsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// VMware Cbt specific policy details.
type VmwareCbtPolicyDetailsResponse struct {
	// The app consistent snapshot frequency in minutes.
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// The crash consistent snapshot frequency in minutes.
	CrashConsistentFrequencyInMinutes *int `pulumi:"crashConsistentFrequencyInMinutes"`
	// Gets the class type. Overridden in derived classes.
	InstanceType string `pulumi:"instanceType"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistory *int `pulumi:"recoveryPointHistory"`
	// The recovery point threshold in minutes.
	RecoveryPointThresholdInMinutes *int `pulumi:"recoveryPointThresholdInMinutes"`
}

// VMware Cbt specific policy details.
type VmwareCbtPolicyDetailsResponseOutput struct{ *pulumi.OutputState }

func (VmwareCbtPolicyDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmwareCbtPolicyDetailsResponse)(nil)).Elem()
}

func (o VmwareCbtPolicyDetailsResponseOutput) ToVmwareCbtPolicyDetailsResponseOutput() VmwareCbtPolicyDetailsResponseOutput {
	return o
}

func (o VmwareCbtPolicyDetailsResponseOutput) ToVmwareCbtPolicyDetailsResponseOutputWithContext(ctx context.Context) VmwareCbtPolicyDetailsResponseOutput {
	return o
}

// The app consistent snapshot frequency in minutes.
func (o VmwareCbtPolicyDetailsResponseOutput) AppConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VmwareCbtPolicyDetailsResponse) *int { return v.AppConsistentFrequencyInMinutes }).(pulumi.IntPtrOutput)
}

// The crash consistent snapshot frequency in minutes.
func (o VmwareCbtPolicyDetailsResponseOutput) CrashConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VmwareCbtPolicyDetailsResponse) *int { return v.CrashConsistentFrequencyInMinutes }).(pulumi.IntPtrOutput)
}

// Gets the class type. Overridden in derived classes.
func (o VmwareCbtPolicyDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v VmwareCbtPolicyDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The duration in minutes until which the recovery points need to be stored.
func (o VmwareCbtPolicyDetailsResponseOutput) RecoveryPointHistory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VmwareCbtPolicyDetailsResponse) *int { return v.RecoveryPointHistory }).(pulumi.IntPtrOutput)
}

// The recovery point threshold in minutes.
func (o VmwareCbtPolicyDetailsResponseOutput) RecoveryPointThresholdInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VmwareCbtPolicyDetailsResponse) *int { return v.RecoveryPointThresholdInMinutes }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(A2AEnableProtectionInputOutput{})
	pulumi.RegisterOutputType(A2APolicyCreationInputOutput{})
	pulumi.RegisterOutputType(A2APolicyDetailsResponseOutput{})
	pulumi.RegisterOutputType(A2AProtectedDiskDetailsResponseOutput{})
	pulumi.RegisterOutputType(A2AProtectedDiskDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(A2AProtectedManagedDiskDetailsResponseOutput{})
	pulumi.RegisterOutputType(A2AProtectedManagedDiskDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(A2AReplicationDetailsResponseOutput{})
	pulumi.RegisterOutputType(A2AVmDiskInputDetailsOutput{})
	pulumi.RegisterOutputType(A2AVmDiskInputDetailsArrayOutput{})
	pulumi.RegisterOutputType(A2AVmManagedDiskInputDetailsOutput{})
	pulumi.RegisterOutputType(A2AVmManagedDiskInputDetailsArrayOutput{})
	pulumi.RegisterOutputType(AddVCenterRequestPropertiesOutput{})
	pulumi.RegisterOutputType(AddVCenterRequestPropertiesPtrOutput{})
	pulumi.RegisterOutputType(AzureFabricSpecificDetailsResponseOutput{})
	pulumi.RegisterOutputType(AzureToAzureCreateNetworkMappingInputOutput{})
	pulumi.RegisterOutputType(AzureToAzureNetworkMappingSettingsResponseOutput{})
	pulumi.RegisterOutputType(AzureToAzureVmSyncedConfigDetailsResponseOutput{})
	pulumi.RegisterOutputType(AzureToAzureVmSyncedConfigDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureVmDiskDetailsResponseOutput{})
	pulumi.RegisterOutputType(AzureVmDiskDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(CreateNetworkMappingInputPropertiesOutput{})
	pulumi.RegisterOutputType(CreateNetworkMappingInputPropertiesPtrOutput{})
	pulumi.RegisterOutputType(CreatePolicyInputPropertiesOutput{})
	pulumi.RegisterOutputType(CreatePolicyInputPropertiesPtrOutput{})
	pulumi.RegisterOutputType(CreateProtectionContainerMappingInputPropertiesOutput{})
	pulumi.RegisterOutputType(CreateProtectionContainerMappingInputPropertiesPtrOutput{})
	pulumi.RegisterOutputType(CreateRecoveryPlanInputPropertiesOutput{})
	pulumi.RegisterOutputType(CreateRecoveryPlanInputPropertiesPtrOutput{})
	pulumi.RegisterOutputType(CurrentScenarioDetailsResponseOutput{})
	pulumi.RegisterOutputType(CurrentScenarioDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(DataStoreResponseOutput{})
	pulumi.RegisterOutputType(DataStoreResponseArrayOutput{})
	pulumi.RegisterOutputType(DiskDetailsResponseOutput{})
	pulumi.RegisterOutputType(DiskDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(EnableProtectionInputPropertiesOutput{})
	pulumi.RegisterOutputType(EnableProtectionInputPropertiesPtrOutput{})
	pulumi.RegisterOutputType(EncryptionDetailsResponseOutput{})
	pulumi.RegisterOutputType(EncryptionDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(FabricPropertiesResponseOutput{})
	pulumi.RegisterOutputType(FabricPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(HealthErrorResponseOutput{})
	pulumi.RegisterOutputType(HealthErrorResponseArrayOutput{})
	pulumi.RegisterOutputType(HyperVReplicaAzureEnableProtectionInputOutput{})
	pulumi.RegisterOutputType(HyperVReplicaAzurePolicyDetailsResponseOutput{})
	pulumi.RegisterOutputType(HyperVReplicaAzurePolicyInputOutput{})
	pulumi.RegisterOutputType(HyperVReplicaAzureReplicationDetailsResponseOutput{})
	pulumi.RegisterOutputType(HyperVReplicaBasePolicyDetailsResponseOutput{})
	pulumi.RegisterOutputType(HyperVReplicaBaseReplicationDetailsResponseOutput{})
	pulumi.RegisterOutputType(HyperVReplicaBluePolicyDetailsResponseOutput{})
	pulumi.RegisterOutputType(HyperVReplicaBluePolicyInputOutput{})
	pulumi.RegisterOutputType(HyperVReplicaBlueReplicationDetailsResponseOutput{})
	pulumi.RegisterOutputType(HyperVReplicaPolicyDetailsResponseOutput{})
	pulumi.RegisterOutputType(HyperVReplicaPolicyInputOutput{})
	pulumi.RegisterOutputType(HyperVReplicaReplicationDetailsResponseOutput{})
	pulumi.RegisterOutputType(HyperVSiteDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMageAgentDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMageAgentDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(InMageAzureV2EnableProtectionInputOutput{})
	pulumi.RegisterOutputType(InMageAzureV2PolicyDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMageAzureV2PolicyInputOutput{})
	pulumi.RegisterOutputType(InMageAzureV2ProtectedDiskDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMageAzureV2ProtectedDiskDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(InMageAzureV2ReplicationDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMageBasePolicyDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMageDiskExclusionInputOutput{})
	pulumi.RegisterOutputType(InMageDiskExclusionInputPtrOutput{})
	pulumi.RegisterOutputType(InMageDiskSignatureExclusionOptionsOutput{})
	pulumi.RegisterOutputType(InMageDiskSignatureExclusionOptionsArrayOutput{})
	pulumi.RegisterOutputType(InMageEnableProtectionInputOutput{})
	pulumi.RegisterOutputType(InMagePolicyDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMagePolicyInputOutput{})
	pulumi.RegisterOutputType(InMageProtectedDiskDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMageProtectedDiskDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(InMageReplicationDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMageVolumeExclusionOptionsOutput{})
	pulumi.RegisterOutputType(InMageVolumeExclusionOptionsArrayOutput{})
	pulumi.RegisterOutputType(InitialReplicationDetailsResponseOutput{})
	pulumi.RegisterOutputType(InitialReplicationDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(InputEndpointResponseOutput{})
	pulumi.RegisterOutputType(InputEndpointResponseArrayOutput{})
	pulumi.RegisterOutputType(MasterTargetServerResponseOutput{})
	pulumi.RegisterOutputType(MasterTargetServerResponseArrayOutput{})
	pulumi.RegisterOutputType(MobilityServiceUpdateResponseOutput{})
	pulumi.RegisterOutputType(MobilityServiceUpdateResponseArrayOutput{})
	pulumi.RegisterOutputType(NetworkMappingPropertiesResponseOutput{})
	pulumi.RegisterOutputType(NetworkMappingPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(OSDetailsResponseOutput{})
	pulumi.RegisterOutputType(OSDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(OSDiskDetailsResponseOutput{})
	pulumi.RegisterOutputType(OSDiskDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(PolicyPropertiesResponseOutput{})
	pulumi.RegisterOutputType(PolicyPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ProcessServerResponseOutput{})
	pulumi.RegisterOutputType(ProcessServerResponseArrayOutput{})
	pulumi.RegisterOutputType(ProtectionContainerMappingPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ProtectionContainerMappingPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ProtectionContainerMappingProviderSpecificDetailsResponseOutput{})
	pulumi.RegisterOutputType(ProtectionContainerMappingProviderSpecificDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(RcmAzureMigrationPolicyDetailsResponseOutput{})
	pulumi.RegisterOutputType(RecoveryPlanActionOutput{})
	pulumi.RegisterOutputType(RecoveryPlanActionArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanActionResponseOutput{})
	pulumi.RegisterOutputType(RecoveryPlanActionResponseArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanAutomationRunbookActionDetailsResponseOutput{})
	pulumi.RegisterOutputType(RecoveryPlanGroupOutput{})
	pulumi.RegisterOutputType(RecoveryPlanGroupArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanGroupResponseOutput{})
	pulumi.RegisterOutputType(RecoveryPlanGroupResponseArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanManualActionDetailsResponseOutput{})
	pulumi.RegisterOutputType(RecoveryPlanPropertiesResponseOutput{})
	pulumi.RegisterOutputType(RecoveryPlanPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(RecoveryPlanProtectedItemOutput{})
	pulumi.RegisterOutputType(RecoveryPlanProtectedItemArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanProtectedItemResponseOutput{})
	pulumi.RegisterOutputType(RecoveryPlanProtectedItemResponseArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanScriptActionDetailsResponseOutput{})
	pulumi.RegisterOutputType(ReplicationProtectedItemPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ReplicationProtectedItemPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ReplicationProviderSpecificContainerMappingInputOutput{})
	pulumi.RegisterOutputType(ReplicationProviderSpecificContainerMappingInputPtrOutput{})
	pulumi.RegisterOutputType(RetentionVolumeResponseOutput{})
	pulumi.RegisterOutputType(RetentionVolumeResponseArrayOutput{})
	pulumi.RegisterOutputType(RoleAssignmentResponseOutput{})
	pulumi.RegisterOutputType(RoleAssignmentResponseArrayOutput{})
	pulumi.RegisterOutputType(RunAsAccountResponseOutput{})
	pulumi.RegisterOutputType(RunAsAccountResponseArrayOutput{})
	pulumi.RegisterOutputType(SanEnableProtectionInputOutput{})
	pulumi.RegisterOutputType(StorageClassificationMappingPropertiesResponseOutput{})
	pulumi.RegisterOutputType(StorageClassificationMappingPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(StorageMappingInputPropertiesOutput{})
	pulumi.RegisterOutputType(StorageMappingInputPropertiesPtrOutput{})
	pulumi.RegisterOutputType(VCenterPropertiesResponseOutput{})
	pulumi.RegisterOutputType(VCenterPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(VMNicDetailsResponseOutput{})
	pulumi.RegisterOutputType(VMNicDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(VMwareCbtPolicyCreationInputOutput{})
	pulumi.RegisterOutputType(VMwareDetailsResponseOutput{})
	pulumi.RegisterOutputType(VMwareV2FabricSpecificDetailsResponseOutput{})
	pulumi.RegisterOutputType(VmmDetailsResponseOutput{})
	pulumi.RegisterOutputType(VmmToAzureCreateNetworkMappingInputOutput{})
	pulumi.RegisterOutputType(VmmToAzureNetworkMappingSettingsResponseOutput{})
	pulumi.RegisterOutputType(VmmToVmmCreateNetworkMappingInputOutput{})
	pulumi.RegisterOutputType(VmmToVmmNetworkMappingSettingsResponseOutput{})
	pulumi.RegisterOutputType(VmwareCbtPolicyDetailsResponseOutput{})
}
