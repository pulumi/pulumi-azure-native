// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20190615

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Base class for backup items.
type ProtectedItemType struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// backup item type.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Type of workload this item represents.
	WorkloadType *string `pulumi:"workloadType"`
}

// ProtectedItemTypeInput is an input type that accepts ProtectedItemTypeArgs and ProtectedItemTypeOutput values.
// You can construct a concrete instance of `ProtectedItemTypeInput` via:
//
//          ProtectedItemTypeArgs{...}
type ProtectedItemTypeInput interface {
	pulumi.Input

	ToProtectedItemTypeOutput() ProtectedItemTypeOutput
	ToProtectedItemTypeOutputWithContext(context.Context) ProtectedItemTypeOutput
}

// Base class for backup items.
type ProtectedItemTypeArgs struct {
	// Type of backup management for the backed up item.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName pulumi.StringPtrInput `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode pulumi.StringPtrInput `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC pulumi.StringPtrInput `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining pulumi.StringPtrInput `pulumi:"deferredDeleteTimeRemaining"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming pulumi.BoolPtrInput `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate pulumi.BoolPtrInput `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete pulumi.BoolPtrInput `pulumi:"isScheduledForDeferredDelete"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint pulumi.StringPtrInput `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// backup item type.
	ProtectedItemType pulumi.StringInput `pulumi:"protectedItemType"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
	// Type of workload this item represents.
	WorkloadType pulumi.StringPtrInput `pulumi:"workloadType"`
}

func (ProtectedItemTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectedItemType)(nil)).Elem()
}

func (i ProtectedItemTypeArgs) ToProtectedItemTypeOutput() ProtectedItemTypeOutput {
	return i.ToProtectedItemTypeOutputWithContext(context.Background())
}

func (i ProtectedItemTypeArgs) ToProtectedItemTypeOutputWithContext(ctx context.Context) ProtectedItemTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectedItemTypeOutput)
}

func (i ProtectedItemTypeArgs) ToProtectedItemTypePtrOutput() ProtectedItemTypePtrOutput {
	return i.ToProtectedItemTypePtrOutputWithContext(context.Background())
}

func (i ProtectedItemTypeArgs) ToProtectedItemTypePtrOutputWithContext(ctx context.Context) ProtectedItemTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectedItemTypeOutput).ToProtectedItemTypePtrOutputWithContext(ctx)
}

// ProtectedItemTypePtrInput is an input type that accepts ProtectedItemTypeArgs, ProtectedItemTypePtr and ProtectedItemTypePtrOutput values.
// You can construct a concrete instance of `ProtectedItemTypePtrInput` via:
//
//          ProtectedItemTypeArgs{...}
//
//  or:
//
//          nil
type ProtectedItemTypePtrInput interface {
	pulumi.Input

	ToProtectedItemTypePtrOutput() ProtectedItemTypePtrOutput
	ToProtectedItemTypePtrOutputWithContext(context.Context) ProtectedItemTypePtrOutput
}

type protectedItemTypePtrType ProtectedItemTypeArgs

func ProtectedItemTypePtr(v *ProtectedItemTypeArgs) ProtectedItemTypePtrInput {
	return (*protectedItemTypePtrType)(v)
}

func (*protectedItemTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtectedItemType)(nil)).Elem()
}

func (i *protectedItemTypePtrType) ToProtectedItemTypePtrOutput() ProtectedItemTypePtrOutput {
	return i.ToProtectedItemTypePtrOutputWithContext(context.Background())
}

func (i *protectedItemTypePtrType) ToProtectedItemTypePtrOutputWithContext(ctx context.Context) ProtectedItemTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectedItemTypePtrOutput)
}

// Base class for backup items.
type ProtectedItemTypeOutput struct{ *pulumi.OutputState }

func (ProtectedItemTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectedItemType)(nil)).Elem()
}

func (o ProtectedItemTypeOutput) ToProtectedItemTypeOutput() ProtectedItemTypeOutput {
	return o
}

func (o ProtectedItemTypeOutput) ToProtectedItemTypeOutputWithContext(ctx context.Context) ProtectedItemTypeOutput {
	return o
}

func (o ProtectedItemTypeOutput) ToProtectedItemTypePtrOutput() ProtectedItemTypePtrOutput {
	return o.ToProtectedItemTypePtrOutputWithContext(context.Background())
}

func (o ProtectedItemTypeOutput) ToProtectedItemTypePtrOutputWithContext(ctx context.Context) ProtectedItemTypePtrOutput {
	return o.ApplyT(func(v ProtectedItemType) *ProtectedItemType {
		return &v
	}).(ProtectedItemTypePtrOutput)
}

// Type of backup management for the backed up item.
func (o ProtectedItemTypeOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectedItemType) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Name of the backup set the backup item belongs to
func (o ProtectedItemTypeOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectedItemType) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o ProtectedItemTypeOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectedItemType) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o ProtectedItemTypeOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectedItemType) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o ProtectedItemTypeOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectedItemType) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o ProtectedItemTypeOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectedItemType) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o ProtectedItemTypeOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProtectedItemType) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o ProtectedItemTypeOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProtectedItemType) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o ProtectedItemTypeOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProtectedItemType) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o ProtectedItemTypeOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectedItemType) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o ProtectedItemTypeOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectedItemType) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// backup item type.
func (o ProtectedItemTypeOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v ProtectedItemType) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// ARM ID of the resource to be backed up.
func (o ProtectedItemTypeOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectedItemType) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// Type of workload this item represents.
func (o ProtectedItemTypeOutput) WorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectedItemType) *string { return v.WorkloadType }).(pulumi.StringPtrOutput)
}

type ProtectedItemTypePtrOutput struct{ *pulumi.OutputState }

func (ProtectedItemTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtectedItemType)(nil)).Elem()
}

func (o ProtectedItemTypePtrOutput) ToProtectedItemTypePtrOutput() ProtectedItemTypePtrOutput {
	return o
}

func (o ProtectedItemTypePtrOutput) ToProtectedItemTypePtrOutputWithContext(ctx context.Context) ProtectedItemTypePtrOutput {
	return o
}

func (o ProtectedItemTypePtrOutput) Elem() ProtectedItemTypeOutput {
	return o.ApplyT(func(v *ProtectedItemType) ProtectedItemType { return *v }).(ProtectedItemTypeOutput)
}

// Type of backup management for the backed up item.
func (o ProtectedItemTypePtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectedItemType) *string {
		if v == nil {
			return nil
		}
		return v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// Name of the backup set the backup item belongs to
func (o ProtectedItemTypePtrOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectedItemType) *string {
		if v == nil {
			return nil
		}
		return v.BackupSetName
	}).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o ProtectedItemTypePtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectedItemType) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o ProtectedItemTypePtrOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectedItemType) *string {
		if v == nil {
			return nil
		}
		return v.CreateMode
	}).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o ProtectedItemTypePtrOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectedItemType) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeInUTC
	}).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o ProtectedItemTypePtrOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectedItemType) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeRemaining
	}).(pulumi.StringPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o ProtectedItemTypePtrOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProtectedItemType) *bool {
		if v == nil {
			return nil
		}
		return v.IsDeferredDeleteScheduleUpcoming
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o ProtectedItemTypePtrOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProtectedItemType) *bool {
		if v == nil {
			return nil
		}
		return v.IsRehydrate
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o ProtectedItemTypePtrOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProtectedItemType) *bool {
		if v == nil {
			return nil
		}
		return v.IsScheduledForDeferredDelete
	}).(pulumi.BoolPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o ProtectedItemTypePtrOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectedItemType) *string {
		if v == nil {
			return nil
		}
		return v.LastRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o ProtectedItemTypePtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectedItemType) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// backup item type.
func (o ProtectedItemTypePtrOutput) ProtectedItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectedItemType) *string {
		if v == nil {
			return nil
		}
		return &v.ProtectedItemType
	}).(pulumi.StringPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o ProtectedItemTypePtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectedItemType) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// Type of workload this item represents.
func (o ProtectedItemTypePtrOutput) WorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectedItemType) *string {
		if v == nil {
			return nil
		}
		return v.WorkloadType
	}).(pulumi.StringPtrOutput)
}

// Base class for backup items.
type ProtectedItemResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// backup item type.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Type of workload this item represents.
	WorkloadType *string `pulumi:"workloadType"`
}

// ProtectedItemResponseInput is an input type that accepts ProtectedItemResponseArgs and ProtectedItemResponseOutput values.
// You can construct a concrete instance of `ProtectedItemResponseInput` via:
//
//          ProtectedItemResponseArgs{...}
type ProtectedItemResponseInput interface {
	pulumi.Input

	ToProtectedItemResponseOutput() ProtectedItemResponseOutput
	ToProtectedItemResponseOutputWithContext(context.Context) ProtectedItemResponseOutput
}

// Base class for backup items.
type ProtectedItemResponseArgs struct {
	// Type of backup management for the backed up item.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName pulumi.StringPtrInput `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode pulumi.StringPtrInput `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC pulumi.StringPtrInput `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining pulumi.StringPtrInput `pulumi:"deferredDeleteTimeRemaining"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming pulumi.BoolPtrInput `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate pulumi.BoolPtrInput `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete pulumi.BoolPtrInput `pulumi:"isScheduledForDeferredDelete"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint pulumi.StringPtrInput `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// backup item type.
	ProtectedItemType pulumi.StringInput `pulumi:"protectedItemType"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
	// Type of workload this item represents.
	WorkloadType pulumi.StringPtrInput `pulumi:"workloadType"`
}

func (ProtectedItemResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectedItemResponse)(nil)).Elem()
}

func (i ProtectedItemResponseArgs) ToProtectedItemResponseOutput() ProtectedItemResponseOutput {
	return i.ToProtectedItemResponseOutputWithContext(context.Background())
}

func (i ProtectedItemResponseArgs) ToProtectedItemResponseOutputWithContext(ctx context.Context) ProtectedItemResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectedItemResponseOutput)
}

func (i ProtectedItemResponseArgs) ToProtectedItemResponsePtrOutput() ProtectedItemResponsePtrOutput {
	return i.ToProtectedItemResponsePtrOutputWithContext(context.Background())
}

func (i ProtectedItemResponseArgs) ToProtectedItemResponsePtrOutputWithContext(ctx context.Context) ProtectedItemResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectedItemResponseOutput).ToProtectedItemResponsePtrOutputWithContext(ctx)
}

// ProtectedItemResponsePtrInput is an input type that accepts ProtectedItemResponseArgs, ProtectedItemResponsePtr and ProtectedItemResponsePtrOutput values.
// You can construct a concrete instance of `ProtectedItemResponsePtrInput` via:
//
//          ProtectedItemResponseArgs{...}
//
//  or:
//
//          nil
type ProtectedItemResponsePtrInput interface {
	pulumi.Input

	ToProtectedItemResponsePtrOutput() ProtectedItemResponsePtrOutput
	ToProtectedItemResponsePtrOutputWithContext(context.Context) ProtectedItemResponsePtrOutput
}

type protectedItemResponsePtrType ProtectedItemResponseArgs

func ProtectedItemResponsePtr(v *ProtectedItemResponseArgs) ProtectedItemResponsePtrInput {
	return (*protectedItemResponsePtrType)(v)
}

func (*protectedItemResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtectedItemResponse)(nil)).Elem()
}

func (i *protectedItemResponsePtrType) ToProtectedItemResponsePtrOutput() ProtectedItemResponsePtrOutput {
	return i.ToProtectedItemResponsePtrOutputWithContext(context.Background())
}

func (i *protectedItemResponsePtrType) ToProtectedItemResponsePtrOutputWithContext(ctx context.Context) ProtectedItemResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectedItemResponsePtrOutput)
}

// Base class for backup items.
type ProtectedItemResponseOutput struct{ *pulumi.OutputState }

func (ProtectedItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectedItemResponse)(nil)).Elem()
}

func (o ProtectedItemResponseOutput) ToProtectedItemResponseOutput() ProtectedItemResponseOutput {
	return o
}

func (o ProtectedItemResponseOutput) ToProtectedItemResponseOutputWithContext(ctx context.Context) ProtectedItemResponseOutput {
	return o
}

func (o ProtectedItemResponseOutput) ToProtectedItemResponsePtrOutput() ProtectedItemResponsePtrOutput {
	return o.ToProtectedItemResponsePtrOutputWithContext(context.Background())
}

func (o ProtectedItemResponseOutput) ToProtectedItemResponsePtrOutputWithContext(ctx context.Context) ProtectedItemResponsePtrOutput {
	return o.ApplyT(func(v ProtectedItemResponse) *ProtectedItemResponse {
		return &v
	}).(ProtectedItemResponsePtrOutput)
}

// Type of backup management for the backed up item.
func (o ProtectedItemResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectedItemResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Name of the backup set the backup item belongs to
func (o ProtectedItemResponseOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectedItemResponse) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o ProtectedItemResponseOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectedItemResponse) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o ProtectedItemResponseOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectedItemResponse) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o ProtectedItemResponseOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectedItemResponse) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o ProtectedItemResponseOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectedItemResponse) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o ProtectedItemResponseOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProtectedItemResponse) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o ProtectedItemResponseOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProtectedItemResponse) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o ProtectedItemResponseOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProtectedItemResponse) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o ProtectedItemResponseOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectedItemResponse) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o ProtectedItemResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectedItemResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// backup item type.
func (o ProtectedItemResponseOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v ProtectedItemResponse) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// ARM ID of the resource to be backed up.
func (o ProtectedItemResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectedItemResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// Type of workload this item represents.
func (o ProtectedItemResponseOutput) WorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectedItemResponse) *string { return v.WorkloadType }).(pulumi.StringPtrOutput)
}

type ProtectedItemResponsePtrOutput struct{ *pulumi.OutputState }

func (ProtectedItemResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtectedItemResponse)(nil)).Elem()
}

func (o ProtectedItemResponsePtrOutput) ToProtectedItemResponsePtrOutput() ProtectedItemResponsePtrOutput {
	return o
}

func (o ProtectedItemResponsePtrOutput) ToProtectedItemResponsePtrOutputWithContext(ctx context.Context) ProtectedItemResponsePtrOutput {
	return o
}

func (o ProtectedItemResponsePtrOutput) Elem() ProtectedItemResponseOutput {
	return o.ApplyT(func(v *ProtectedItemResponse) ProtectedItemResponse { return *v }).(ProtectedItemResponseOutput)
}

// Type of backup management for the backed up item.
func (o ProtectedItemResponsePtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectedItemResponse) *string {
		if v == nil {
			return nil
		}
		return v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// Name of the backup set the backup item belongs to
func (o ProtectedItemResponsePtrOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectedItemResponse) *string {
		if v == nil {
			return nil
		}
		return v.BackupSetName
	}).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o ProtectedItemResponsePtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectedItemResponse) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o ProtectedItemResponsePtrOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectedItemResponse) *string {
		if v == nil {
			return nil
		}
		return v.CreateMode
	}).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o ProtectedItemResponsePtrOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectedItemResponse) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeInUTC
	}).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o ProtectedItemResponsePtrOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectedItemResponse) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeRemaining
	}).(pulumi.StringPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o ProtectedItemResponsePtrOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProtectedItemResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsDeferredDeleteScheduleUpcoming
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o ProtectedItemResponsePtrOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProtectedItemResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsRehydrate
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o ProtectedItemResponsePtrOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProtectedItemResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsScheduledForDeferredDelete
	}).(pulumi.BoolPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o ProtectedItemResponsePtrOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectedItemResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o ProtectedItemResponsePtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectedItemResponse) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// backup item type.
func (o ProtectedItemResponsePtrOutput) ProtectedItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectedItemResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProtectedItemType
	}).(pulumi.StringPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o ProtectedItemResponsePtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectedItemResponse) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// Type of workload this item represents.
func (o ProtectedItemResponsePtrOutput) WorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectedItemResponse) *string {
		if v == nil {
			return nil
		}
		return v.WorkloadType
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ProtectedItemTypeOutput{})
	pulumi.RegisterOutputType(ProtectedItemTypePtrOutput{})
	pulumi.RegisterOutputType(ProtectedItemResponseOutput{})
	pulumi.RegisterOutputType(ProtectedItemResponsePtrOutput{})
}
