// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package latest

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// A2A container mapping input.
type A2AContainerMappingInput struct {
	// A value indicating whether the auto update is enabled.
	AgentAutoUpdateStatus *string `pulumi:"agentAutoUpdateStatus"`
	// The automation account arm id.
	AutomationAccountArmId *string `pulumi:"automationAccountArmId"`
	// The class type.
	InstanceType *string `pulumi:"instanceType"`
}

// A2AContainerMappingInputInput is an input type that accepts A2AContainerMappingInputArgs and A2AContainerMappingInputOutput values.
// You can construct a concrete instance of `A2AContainerMappingInputInput` via:
//
//          A2AContainerMappingInputArgs{...}
type A2AContainerMappingInputInput interface {
	pulumi.Input

	ToA2AContainerMappingInputOutput() A2AContainerMappingInputOutput
	ToA2AContainerMappingInputOutputWithContext(context.Context) A2AContainerMappingInputOutput
}

// A2A container mapping input.
type A2AContainerMappingInputArgs struct {
	// A value indicating whether the auto update is enabled.
	AgentAutoUpdateStatus pulumi.StringPtrInput `pulumi:"agentAutoUpdateStatus"`
	// The automation account arm id.
	AutomationAccountArmId pulumi.StringPtrInput `pulumi:"automationAccountArmId"`
	// The class type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
}

func (A2AContainerMappingInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*A2AContainerMappingInput)(nil)).Elem()
}

func (i A2AContainerMappingInputArgs) ToA2AContainerMappingInputOutput() A2AContainerMappingInputOutput {
	return i.ToA2AContainerMappingInputOutputWithContext(context.Background())
}

func (i A2AContainerMappingInputArgs) ToA2AContainerMappingInputOutputWithContext(ctx context.Context) A2AContainerMappingInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(A2AContainerMappingInputOutput)
}

// A2A enable protection input.
type A2AEnableProtectionInput struct {
	// The recovery disk encryption information.
	DiskEncryptionInfo *DiskEncryptionInfo `pulumi:"diskEncryptionInfo"`
	// The fabric specific object Id of the virtual machine.
	FabricObjectId *string `pulumi:"fabricObjectId"`
	// The class type.
	InstanceType *string `pulumi:"instanceType"`
	// The multi vm group name.
	MultiVmGroupName *string `pulumi:"multiVmGroupName"`
	// The recovery availability set Id.
	RecoveryAvailabilitySetId *string `pulumi:"recoveryAvailabilitySetId"`
	// The recovery availability zone.
	RecoveryAvailabilityZone *string `pulumi:"recoveryAvailabilityZone"`
	// The recovery Azure virtual network ARM id.
	RecoveryAzureNetworkId *string `pulumi:"recoveryAzureNetworkId"`
	// The boot diagnostic storage account.
	RecoveryBootDiagStorageAccountId *string `pulumi:"recoveryBootDiagStorageAccountId"`
	// The recovery cloud service Id. Valid for V1 scenarios.
	RecoveryCloudServiceId *string `pulumi:"recoveryCloudServiceId"`
	// The recovery container Id.
	RecoveryContainerId *string `pulumi:"recoveryContainerId"`
	// The recovery proximity placement group Id.
	RecoveryProximityPlacementGroupId *string `pulumi:"recoveryProximityPlacementGroupId"`
	// The recovery resource group Id. Valid for V2 scenarios.
	RecoveryResourceGroupId *string `pulumi:"recoveryResourceGroupId"`
	// The recovery subnet name.
	RecoverySubnetName *string `pulumi:"recoverySubnetName"`
	// The list of vm disk details.
	VmDisks []A2AVmDiskInputDetails `pulumi:"vmDisks"`
	// The list of vm managed disk details.
	VmManagedDisks []A2AVmManagedDiskInputDetails `pulumi:"vmManagedDisks"`
}

// A2AEnableProtectionInputInput is an input type that accepts A2AEnableProtectionInputArgs and A2AEnableProtectionInputOutput values.
// You can construct a concrete instance of `A2AEnableProtectionInputInput` via:
//
//          A2AEnableProtectionInputArgs{...}
type A2AEnableProtectionInputInput interface {
	pulumi.Input

	ToA2AEnableProtectionInputOutput() A2AEnableProtectionInputOutput
	ToA2AEnableProtectionInputOutputWithContext(context.Context) A2AEnableProtectionInputOutput
}

// A2A enable protection input.
type A2AEnableProtectionInputArgs struct {
	// The recovery disk encryption information.
	DiskEncryptionInfo DiskEncryptionInfoPtrInput `pulumi:"diskEncryptionInfo"`
	// The fabric specific object Id of the virtual machine.
	FabricObjectId pulumi.StringPtrInput `pulumi:"fabricObjectId"`
	// The class type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// The multi vm group name.
	MultiVmGroupName pulumi.StringPtrInput `pulumi:"multiVmGroupName"`
	// The recovery availability set Id.
	RecoveryAvailabilitySetId pulumi.StringPtrInput `pulumi:"recoveryAvailabilitySetId"`
	// The recovery availability zone.
	RecoveryAvailabilityZone pulumi.StringPtrInput `pulumi:"recoveryAvailabilityZone"`
	// The recovery Azure virtual network ARM id.
	RecoveryAzureNetworkId pulumi.StringPtrInput `pulumi:"recoveryAzureNetworkId"`
	// The boot diagnostic storage account.
	RecoveryBootDiagStorageAccountId pulumi.StringPtrInput `pulumi:"recoveryBootDiagStorageAccountId"`
	// The recovery cloud service Id. Valid for V1 scenarios.
	RecoveryCloudServiceId pulumi.StringPtrInput `pulumi:"recoveryCloudServiceId"`
	// The recovery container Id.
	RecoveryContainerId pulumi.StringPtrInput `pulumi:"recoveryContainerId"`
	// The recovery proximity placement group Id.
	RecoveryProximityPlacementGroupId pulumi.StringPtrInput `pulumi:"recoveryProximityPlacementGroupId"`
	// The recovery resource group Id. Valid for V2 scenarios.
	RecoveryResourceGroupId pulumi.StringPtrInput `pulumi:"recoveryResourceGroupId"`
	// The recovery subnet name.
	RecoverySubnetName pulumi.StringPtrInput `pulumi:"recoverySubnetName"`
	// The list of vm disk details.
	VmDisks A2AVmDiskInputDetailsArrayInput `pulumi:"vmDisks"`
	// The list of vm managed disk details.
	VmManagedDisks A2AVmManagedDiskInputDetailsArrayInput `pulumi:"vmManagedDisks"`
}

func (A2AEnableProtectionInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*A2AEnableProtectionInput)(nil)).Elem()
}

func (i A2AEnableProtectionInputArgs) ToA2AEnableProtectionInputOutput() A2AEnableProtectionInputOutput {
	return i.ToA2AEnableProtectionInputOutputWithContext(context.Background())
}

func (i A2AEnableProtectionInputArgs) ToA2AEnableProtectionInputOutputWithContext(ctx context.Context) A2AEnableProtectionInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(A2AEnableProtectionInputOutput)
}

// A2A Policy creation input.
type A2APolicyCreationInput struct {
	// The app consistent snapshot frequency (in minutes).
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// The crash consistent snapshot frequency (in minutes).
	CrashConsistentFrequencyInMinutes *int `pulumi:"crashConsistentFrequencyInMinutes"`
	// The class type.
	InstanceType *string `pulumi:"instanceType"`
	// A value indicating whether multi-VM sync has to be enabled. Value should be 'Enabled' or 'Disabled'.
	MultiVmSyncStatus string `pulumi:"multiVmSyncStatus"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistory *int `pulumi:"recoveryPointHistory"`
}

// A2APolicyCreationInputInput is an input type that accepts A2APolicyCreationInputArgs and A2APolicyCreationInputOutput values.
// You can construct a concrete instance of `A2APolicyCreationInputInput` via:
//
//          A2APolicyCreationInputArgs{...}
type A2APolicyCreationInputInput interface {
	pulumi.Input

	ToA2APolicyCreationInputOutput() A2APolicyCreationInputOutput
	ToA2APolicyCreationInputOutputWithContext(context.Context) A2APolicyCreationInputOutput
}

// A2A Policy creation input.
type A2APolicyCreationInputArgs struct {
	// The app consistent snapshot frequency (in minutes).
	AppConsistentFrequencyInMinutes pulumi.IntPtrInput `pulumi:"appConsistentFrequencyInMinutes"`
	// The crash consistent snapshot frequency (in minutes).
	CrashConsistentFrequencyInMinutes pulumi.IntPtrInput `pulumi:"crashConsistentFrequencyInMinutes"`
	// The class type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// A value indicating whether multi-VM sync has to be enabled. Value should be 'Enabled' or 'Disabled'.
	MultiVmSyncStatus pulumi.StringInput `pulumi:"multiVmSyncStatus"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistory pulumi.IntPtrInput `pulumi:"recoveryPointHistory"`
}

func (A2APolicyCreationInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*A2APolicyCreationInput)(nil)).Elem()
}

func (i A2APolicyCreationInputArgs) ToA2APolicyCreationInputOutput() A2APolicyCreationInputOutput {
	return i.ToA2APolicyCreationInputOutputWithContext(context.Background())
}

func (i A2APolicyCreationInputArgs) ToA2APolicyCreationInputOutputWithContext(ctx context.Context) A2APolicyCreationInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(A2APolicyCreationInputOutput)
}

// A2A specific policy details.
type A2APolicyDetailsResponse struct {
	// The app consistent snapshot frequency in minutes.
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// The crash consistent snapshot frequency in minutes.
	CrashConsistentFrequencyInMinutes *int `pulumi:"crashConsistentFrequencyInMinutes"`
	// Gets the class type. Overridden in derived classes.
	InstanceType string `pulumi:"instanceType"`
	// A value indicating whether multi-VM sync has to be enabled.
	MultiVmSyncStatus *string `pulumi:"multiVmSyncStatus"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistory *int `pulumi:"recoveryPointHistory"`
	// The recovery point threshold in minutes.
	RecoveryPointThresholdInMinutes *int `pulumi:"recoveryPointThresholdInMinutes"`
}

// A2A specific policy details.
type A2APolicyDetailsResponseOutput struct{ *pulumi.OutputState }

func (A2APolicyDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*A2APolicyDetailsResponse)(nil)).Elem()
}

func (o A2APolicyDetailsResponseOutput) ToA2APolicyDetailsResponseOutput() A2APolicyDetailsResponseOutput {
	return o
}

func (o A2APolicyDetailsResponseOutput) ToA2APolicyDetailsResponseOutputWithContext(ctx context.Context) A2APolicyDetailsResponseOutput {
	return o
}

// The app consistent snapshot frequency in minutes.
func (o A2APolicyDetailsResponseOutput) AppConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v A2APolicyDetailsResponse) *int { return v.AppConsistentFrequencyInMinutes }).(pulumi.IntPtrOutput)
}

// The crash consistent snapshot frequency in minutes.
func (o A2APolicyDetailsResponseOutput) CrashConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v A2APolicyDetailsResponse) *int { return v.CrashConsistentFrequencyInMinutes }).(pulumi.IntPtrOutput)
}

// Gets the class type. Overridden in derived classes.
func (o A2APolicyDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v A2APolicyDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// A value indicating whether multi-VM sync has to be enabled.
func (o A2APolicyDetailsResponseOutput) MultiVmSyncStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2APolicyDetailsResponse) *string { return v.MultiVmSyncStatus }).(pulumi.StringPtrOutput)
}

// The duration in minutes until which the recovery points need to be stored.
func (o A2APolicyDetailsResponseOutput) RecoveryPointHistory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v A2APolicyDetailsResponse) *int { return v.RecoveryPointHistory }).(pulumi.IntPtrOutput)
}

// The recovery point threshold in minutes.
func (o A2APolicyDetailsResponseOutput) RecoveryPointThresholdInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v A2APolicyDetailsResponse) *int { return v.RecoveryPointThresholdInMinutes }).(pulumi.IntPtrOutput)
}

// A2A protected disk details.
type A2AProtectedDiskDetailsResponse struct {
	// The disk level operations list.
	AllowedDiskLevelOperation []string `pulumi:"allowedDiskLevelOperation"`
	// The data pending at source virtual machine in MB.
	DataPendingAtSourceAgentInMB *float64 `pulumi:"dataPendingAtSourceAgentInMB"`
	// The data pending for replication in MB at staging account.
	DataPendingInStagingStorageAccountInMB *float64 `pulumi:"dataPendingInStagingStorageAccountInMB"`
	// The KeyVault resource id for secret (BEK).
	DekKeyVaultArmId *string `pulumi:"dekKeyVaultArmId"`
	// The disk capacity in bytes.
	DiskCapacityInBytes *int `pulumi:"diskCapacityInBytes"`
	// The disk name.
	DiskName *string `pulumi:"diskName"`
	// The disk state.
	DiskState *string `pulumi:"diskState"`
	// The type of disk.
	DiskType *string `pulumi:"diskType"`
	// The disk uri.
	DiskUri *string `pulumi:"diskUri"`
	// A value indicating whether vm has encrypted os disk or not.
	IsDiskEncrypted *bool `pulumi:"isDiskEncrypted"`
	// A value indicating whether disk key got encrypted or not.
	IsDiskKeyEncrypted *bool `pulumi:"isDiskKeyEncrypted"`
	// The KeyVault resource id for key (KEK).
	KekKeyVaultArmId *string `pulumi:"kekKeyVaultArmId"`
	// The key URL / identifier (KEK).
	KeyIdentifier *string `pulumi:"keyIdentifier"`
	// The type of the monitoring job. The progress is contained in MonitoringPercentageCompletion property.
	MonitoringJobType *string `pulumi:"monitoringJobType"`
	// The percentage of the monitoring job. The type of the monitoring job is defined by MonitoringJobType property.
	MonitoringPercentageCompletion *int `pulumi:"monitoringPercentageCompletion"`
	// The primary disk storage account.
	PrimaryDiskAzureStorageAccountId *string `pulumi:"primaryDiskAzureStorageAccountId"`
	// The primary staging storage account.
	PrimaryStagingAzureStorageAccountId *string `pulumi:"primaryStagingAzureStorageAccountId"`
	// The recovery disk storage account.
	RecoveryAzureStorageAccountId *string `pulumi:"recoveryAzureStorageAccountId"`
	// Recovery disk uri.
	RecoveryDiskUri *string `pulumi:"recoveryDiskUri"`
	// A value indicating whether resync is required for this disk.
	ResyncRequired *bool `pulumi:"resyncRequired"`
	// The secret URL / identifier (BEK).
	SecretIdentifier *string `pulumi:"secretIdentifier"`
}

// A2A protected disk details.
type A2AProtectedDiskDetailsResponseOutput struct{ *pulumi.OutputState }

func (A2AProtectedDiskDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*A2AProtectedDiskDetailsResponse)(nil)).Elem()
}

func (o A2AProtectedDiskDetailsResponseOutput) ToA2AProtectedDiskDetailsResponseOutput() A2AProtectedDiskDetailsResponseOutput {
	return o
}

func (o A2AProtectedDiskDetailsResponseOutput) ToA2AProtectedDiskDetailsResponseOutputWithContext(ctx context.Context) A2AProtectedDiskDetailsResponseOutput {
	return o
}

// The disk level operations list.
func (o A2AProtectedDiskDetailsResponseOutput) AllowedDiskLevelOperation() pulumi.StringArrayOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) []string { return v.AllowedDiskLevelOperation }).(pulumi.StringArrayOutput)
}

// The data pending at source virtual machine in MB.
func (o A2AProtectedDiskDetailsResponseOutput) DataPendingAtSourceAgentInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *float64 { return v.DataPendingAtSourceAgentInMB }).(pulumi.Float64PtrOutput)
}

// The data pending for replication in MB at staging account.
func (o A2AProtectedDiskDetailsResponseOutput) DataPendingInStagingStorageAccountInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *float64 { return v.DataPendingInStagingStorageAccountInMB }).(pulumi.Float64PtrOutput)
}

// The KeyVault resource id for secret (BEK).
func (o A2AProtectedDiskDetailsResponseOutput) DekKeyVaultArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *string { return v.DekKeyVaultArmId }).(pulumi.StringPtrOutput)
}

// The disk capacity in bytes.
func (o A2AProtectedDiskDetailsResponseOutput) DiskCapacityInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *int { return v.DiskCapacityInBytes }).(pulumi.IntPtrOutput)
}

// The disk name.
func (o A2AProtectedDiskDetailsResponseOutput) DiskName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *string { return v.DiskName }).(pulumi.StringPtrOutput)
}

// The disk state.
func (o A2AProtectedDiskDetailsResponseOutput) DiskState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *string { return v.DiskState }).(pulumi.StringPtrOutput)
}

// The type of disk.
func (o A2AProtectedDiskDetailsResponseOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

// The disk uri.
func (o A2AProtectedDiskDetailsResponseOutput) DiskUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *string { return v.DiskUri }).(pulumi.StringPtrOutput)
}

// A value indicating whether vm has encrypted os disk or not.
func (o A2AProtectedDiskDetailsResponseOutput) IsDiskEncrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *bool { return v.IsDiskEncrypted }).(pulumi.BoolPtrOutput)
}

// A value indicating whether disk key got encrypted or not.
func (o A2AProtectedDiskDetailsResponseOutput) IsDiskKeyEncrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *bool { return v.IsDiskKeyEncrypted }).(pulumi.BoolPtrOutput)
}

// The KeyVault resource id for key (KEK).
func (o A2AProtectedDiskDetailsResponseOutput) KekKeyVaultArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *string { return v.KekKeyVaultArmId }).(pulumi.StringPtrOutput)
}

// The key URL / identifier (KEK).
func (o A2AProtectedDiskDetailsResponseOutput) KeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *string { return v.KeyIdentifier }).(pulumi.StringPtrOutput)
}

// The type of the monitoring job. The progress is contained in MonitoringPercentageCompletion property.
func (o A2AProtectedDiskDetailsResponseOutput) MonitoringJobType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *string { return v.MonitoringJobType }).(pulumi.StringPtrOutput)
}

// The percentage of the monitoring job. The type of the monitoring job is defined by MonitoringJobType property.
func (o A2AProtectedDiskDetailsResponseOutput) MonitoringPercentageCompletion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *int { return v.MonitoringPercentageCompletion }).(pulumi.IntPtrOutput)
}

// The primary disk storage account.
func (o A2AProtectedDiskDetailsResponseOutput) PrimaryDiskAzureStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *string { return v.PrimaryDiskAzureStorageAccountId }).(pulumi.StringPtrOutput)
}

// The primary staging storage account.
func (o A2AProtectedDiskDetailsResponseOutput) PrimaryStagingAzureStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *string { return v.PrimaryStagingAzureStorageAccountId }).(pulumi.StringPtrOutput)
}

// The recovery disk storage account.
func (o A2AProtectedDiskDetailsResponseOutput) RecoveryAzureStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *string { return v.RecoveryAzureStorageAccountId }).(pulumi.StringPtrOutput)
}

// Recovery disk uri.
func (o A2AProtectedDiskDetailsResponseOutput) RecoveryDiskUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *string { return v.RecoveryDiskUri }).(pulumi.StringPtrOutput)
}

// A value indicating whether resync is required for this disk.
func (o A2AProtectedDiskDetailsResponseOutput) ResyncRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *bool { return v.ResyncRequired }).(pulumi.BoolPtrOutput)
}

// The secret URL / identifier (BEK).
func (o A2AProtectedDiskDetailsResponseOutput) SecretIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *string { return v.SecretIdentifier }).(pulumi.StringPtrOutput)
}

type A2AProtectedDiskDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (A2AProtectedDiskDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]A2AProtectedDiskDetailsResponse)(nil)).Elem()
}

func (o A2AProtectedDiskDetailsResponseArrayOutput) ToA2AProtectedDiskDetailsResponseArrayOutput() A2AProtectedDiskDetailsResponseArrayOutput {
	return o
}

func (o A2AProtectedDiskDetailsResponseArrayOutput) ToA2AProtectedDiskDetailsResponseArrayOutputWithContext(ctx context.Context) A2AProtectedDiskDetailsResponseArrayOutput {
	return o
}

func (o A2AProtectedDiskDetailsResponseArrayOutput) Index(i pulumi.IntInput) A2AProtectedDiskDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) A2AProtectedDiskDetailsResponse {
		return vs[0].([]A2AProtectedDiskDetailsResponse)[vs[1].(int)]
	}).(A2AProtectedDiskDetailsResponseOutput)
}

// A2A protected managed disk details.
type A2AProtectedManagedDiskDetailsResponse struct {
	// The disk level operations list.
	AllowedDiskLevelOperation []string `pulumi:"allowedDiskLevelOperation"`
	// The data pending at source virtual machine in MB.
	DataPendingAtSourceAgentInMB *float64 `pulumi:"dataPendingAtSourceAgentInMB"`
	// The data pending for replication in MB at staging account.
	DataPendingInStagingStorageAccountInMB *float64 `pulumi:"dataPendingInStagingStorageAccountInMB"`
	// The KeyVault resource id for secret (BEK).
	DekKeyVaultArmId *string `pulumi:"dekKeyVaultArmId"`
	// The disk capacity in bytes.
	DiskCapacityInBytes *int `pulumi:"diskCapacityInBytes"`
	// The managed disk Arm id.
	DiskId *string `pulumi:"diskId"`
	// The disk name.
	DiskName *string `pulumi:"diskName"`
	// The disk state.
	DiskState *string `pulumi:"diskState"`
	// The type of disk.
	DiskType *string `pulumi:"diskType"`
	// The failover name for the managed disk.
	FailoverDiskName *string `pulumi:"failoverDiskName"`
	// A value indicating whether vm has encrypted os disk or not.
	IsDiskEncrypted *bool `pulumi:"isDiskEncrypted"`
	// A value indicating whether disk key got encrypted or not.
	IsDiskKeyEncrypted *bool `pulumi:"isDiskKeyEncrypted"`
	// The KeyVault resource id for key (KEK).
	KekKeyVaultArmId *string `pulumi:"kekKeyVaultArmId"`
	// The key URL / identifier (KEK).
	KeyIdentifier *string `pulumi:"keyIdentifier"`
	// The type of the monitoring job. The progress is contained in MonitoringPercentageCompletion property.
	MonitoringJobType *string `pulumi:"monitoringJobType"`
	// The percentage of the monitoring job. The type of the monitoring job is defined by MonitoringJobType property.
	MonitoringPercentageCompletion *int `pulumi:"monitoringPercentageCompletion"`
	// The primary staging storage account.
	PrimaryStagingAzureStorageAccountId *string `pulumi:"primaryStagingAzureStorageAccountId"`
	// The recovery disk encryption set Id.
	RecoveryDiskEncryptionSetId *string `pulumi:"recoveryDiskEncryptionSetId"`
	// The replica disk type. Its an optional value and will be same as source disk type if not user provided.
	RecoveryReplicaDiskAccountType *string `pulumi:"recoveryReplicaDiskAccountType"`
	// Recovery replica disk Arm Id.
	RecoveryReplicaDiskId *string `pulumi:"recoveryReplicaDiskId"`
	// The recovery disk resource group Arm Id.
	RecoveryResourceGroupId *string `pulumi:"recoveryResourceGroupId"`
	// The target disk type after failover. Its an optional value and will be same as source disk type if not user provided.
	RecoveryTargetDiskAccountType *string `pulumi:"recoveryTargetDiskAccountType"`
	// Recovery target disk Arm Id.
	RecoveryTargetDiskId *string `pulumi:"recoveryTargetDiskId"`
	// A value indicating whether resync is required for this disk.
	ResyncRequired *bool `pulumi:"resyncRequired"`
	// The secret URL / identifier (BEK).
	SecretIdentifier *string `pulumi:"secretIdentifier"`
	// The test failover name for the managed disk.
	TfoDiskName *string `pulumi:"tfoDiskName"`
}

// A2A protected managed disk details.
type A2AProtectedManagedDiskDetailsResponseOutput struct{ *pulumi.OutputState }

func (A2AProtectedManagedDiskDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*A2AProtectedManagedDiskDetailsResponse)(nil)).Elem()
}

func (o A2AProtectedManagedDiskDetailsResponseOutput) ToA2AProtectedManagedDiskDetailsResponseOutput() A2AProtectedManagedDiskDetailsResponseOutput {
	return o
}

func (o A2AProtectedManagedDiskDetailsResponseOutput) ToA2AProtectedManagedDiskDetailsResponseOutputWithContext(ctx context.Context) A2AProtectedManagedDiskDetailsResponseOutput {
	return o
}

// The disk level operations list.
func (o A2AProtectedManagedDiskDetailsResponseOutput) AllowedDiskLevelOperation() pulumi.StringArrayOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) []string { return v.AllowedDiskLevelOperation }).(pulumi.StringArrayOutput)
}

// The data pending at source virtual machine in MB.
func (o A2AProtectedManagedDiskDetailsResponseOutput) DataPendingAtSourceAgentInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *float64 { return v.DataPendingAtSourceAgentInMB }).(pulumi.Float64PtrOutput)
}

// The data pending for replication in MB at staging account.
func (o A2AProtectedManagedDiskDetailsResponseOutput) DataPendingInStagingStorageAccountInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *float64 {
		return v.DataPendingInStagingStorageAccountInMB
	}).(pulumi.Float64PtrOutput)
}

// The KeyVault resource id for secret (BEK).
func (o A2AProtectedManagedDiskDetailsResponseOutput) DekKeyVaultArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *string { return v.DekKeyVaultArmId }).(pulumi.StringPtrOutput)
}

// The disk capacity in bytes.
func (o A2AProtectedManagedDiskDetailsResponseOutput) DiskCapacityInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *int { return v.DiskCapacityInBytes }).(pulumi.IntPtrOutput)
}

// The managed disk Arm id.
func (o A2AProtectedManagedDiskDetailsResponseOutput) DiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *string { return v.DiskId }).(pulumi.StringPtrOutput)
}

// The disk name.
func (o A2AProtectedManagedDiskDetailsResponseOutput) DiskName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *string { return v.DiskName }).(pulumi.StringPtrOutput)
}

// The disk state.
func (o A2AProtectedManagedDiskDetailsResponseOutput) DiskState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *string { return v.DiskState }).(pulumi.StringPtrOutput)
}

// The type of disk.
func (o A2AProtectedManagedDiskDetailsResponseOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

// The failover name for the managed disk.
func (o A2AProtectedManagedDiskDetailsResponseOutput) FailoverDiskName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *string { return v.FailoverDiskName }).(pulumi.StringPtrOutput)
}

// A value indicating whether vm has encrypted os disk or not.
func (o A2AProtectedManagedDiskDetailsResponseOutput) IsDiskEncrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *bool { return v.IsDiskEncrypted }).(pulumi.BoolPtrOutput)
}

// A value indicating whether disk key got encrypted or not.
func (o A2AProtectedManagedDiskDetailsResponseOutput) IsDiskKeyEncrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *bool { return v.IsDiskKeyEncrypted }).(pulumi.BoolPtrOutput)
}

// The KeyVault resource id for key (KEK).
func (o A2AProtectedManagedDiskDetailsResponseOutput) KekKeyVaultArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *string { return v.KekKeyVaultArmId }).(pulumi.StringPtrOutput)
}

// The key URL / identifier (KEK).
func (o A2AProtectedManagedDiskDetailsResponseOutput) KeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *string { return v.KeyIdentifier }).(pulumi.StringPtrOutput)
}

// The type of the monitoring job. The progress is contained in MonitoringPercentageCompletion property.
func (o A2AProtectedManagedDiskDetailsResponseOutput) MonitoringJobType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *string { return v.MonitoringJobType }).(pulumi.StringPtrOutput)
}

// The percentage of the monitoring job. The type of the monitoring job is defined by MonitoringJobType property.
func (o A2AProtectedManagedDiskDetailsResponseOutput) MonitoringPercentageCompletion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *int { return v.MonitoringPercentageCompletion }).(pulumi.IntPtrOutput)
}

// The primary staging storage account.
func (o A2AProtectedManagedDiskDetailsResponseOutput) PrimaryStagingAzureStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *string { return v.PrimaryStagingAzureStorageAccountId }).(pulumi.StringPtrOutput)
}

// The recovery disk encryption set Id.
func (o A2AProtectedManagedDiskDetailsResponseOutput) RecoveryDiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *string { return v.RecoveryDiskEncryptionSetId }).(pulumi.StringPtrOutput)
}

// The replica disk type. Its an optional value and will be same as source disk type if not user provided.
func (o A2AProtectedManagedDiskDetailsResponseOutput) RecoveryReplicaDiskAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *string { return v.RecoveryReplicaDiskAccountType }).(pulumi.StringPtrOutput)
}

// Recovery replica disk Arm Id.
func (o A2AProtectedManagedDiskDetailsResponseOutput) RecoveryReplicaDiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *string { return v.RecoveryReplicaDiskId }).(pulumi.StringPtrOutput)
}

// The recovery disk resource group Arm Id.
func (o A2AProtectedManagedDiskDetailsResponseOutput) RecoveryResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *string { return v.RecoveryResourceGroupId }).(pulumi.StringPtrOutput)
}

// The target disk type after failover. Its an optional value and will be same as source disk type if not user provided.
func (o A2AProtectedManagedDiskDetailsResponseOutput) RecoveryTargetDiskAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *string { return v.RecoveryTargetDiskAccountType }).(pulumi.StringPtrOutput)
}

// Recovery target disk Arm Id.
func (o A2AProtectedManagedDiskDetailsResponseOutput) RecoveryTargetDiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *string { return v.RecoveryTargetDiskId }).(pulumi.StringPtrOutput)
}

// A value indicating whether resync is required for this disk.
func (o A2AProtectedManagedDiskDetailsResponseOutput) ResyncRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *bool { return v.ResyncRequired }).(pulumi.BoolPtrOutput)
}

// The secret URL / identifier (BEK).
func (o A2AProtectedManagedDiskDetailsResponseOutput) SecretIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *string { return v.SecretIdentifier }).(pulumi.StringPtrOutput)
}

// The test failover name for the managed disk.
func (o A2AProtectedManagedDiskDetailsResponseOutput) TfoDiskName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *string { return v.TfoDiskName }).(pulumi.StringPtrOutput)
}

type A2AProtectedManagedDiskDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (A2AProtectedManagedDiskDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]A2AProtectedManagedDiskDetailsResponse)(nil)).Elem()
}

func (o A2AProtectedManagedDiskDetailsResponseArrayOutput) ToA2AProtectedManagedDiskDetailsResponseArrayOutput() A2AProtectedManagedDiskDetailsResponseArrayOutput {
	return o
}

func (o A2AProtectedManagedDiskDetailsResponseArrayOutput) ToA2AProtectedManagedDiskDetailsResponseArrayOutputWithContext(ctx context.Context) A2AProtectedManagedDiskDetailsResponseArrayOutput {
	return o
}

func (o A2AProtectedManagedDiskDetailsResponseArrayOutput) Index(i pulumi.IntInput) A2AProtectedManagedDiskDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) A2AProtectedManagedDiskDetailsResponse {
		return vs[0].([]A2AProtectedManagedDiskDetailsResponse)[vs[1].(int)]
	}).(A2AProtectedManagedDiskDetailsResponseOutput)
}

// A2A provider specific settings.
type A2AProtectionContainerMappingDetailsResponse struct {
	// A value indicating whether the auto update is enabled.
	AgentAutoUpdateStatus *string `pulumi:"agentAutoUpdateStatus"`
	// The automation account arm id.
	AutomationAccountArmId *string `pulumi:"automationAccountArmId"`
	// Gets the class type. Overridden in derived classes.
	InstanceType string `pulumi:"instanceType"`
	// The job schedule arm name.
	JobScheduleName *string `pulumi:"jobScheduleName"`
	// The schedule arm name.
	ScheduleName *string `pulumi:"scheduleName"`
}

// A2A provider specific settings.
type A2AProtectionContainerMappingDetailsResponseOutput struct{ *pulumi.OutputState }

func (A2AProtectionContainerMappingDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*A2AProtectionContainerMappingDetailsResponse)(nil)).Elem()
}

func (o A2AProtectionContainerMappingDetailsResponseOutput) ToA2AProtectionContainerMappingDetailsResponseOutput() A2AProtectionContainerMappingDetailsResponseOutput {
	return o
}

func (o A2AProtectionContainerMappingDetailsResponseOutput) ToA2AProtectionContainerMappingDetailsResponseOutputWithContext(ctx context.Context) A2AProtectionContainerMappingDetailsResponseOutput {
	return o
}

// A value indicating whether the auto update is enabled.
func (o A2AProtectionContainerMappingDetailsResponseOutput) AgentAutoUpdateStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectionContainerMappingDetailsResponse) *string { return v.AgentAutoUpdateStatus }).(pulumi.StringPtrOutput)
}

// The automation account arm id.
func (o A2AProtectionContainerMappingDetailsResponseOutput) AutomationAccountArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectionContainerMappingDetailsResponse) *string { return v.AutomationAccountArmId }).(pulumi.StringPtrOutput)
}

// Gets the class type. Overridden in derived classes.
func (o A2AProtectionContainerMappingDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v A2AProtectionContainerMappingDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The job schedule arm name.
func (o A2AProtectionContainerMappingDetailsResponseOutput) JobScheduleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectionContainerMappingDetailsResponse) *string { return v.JobScheduleName }).(pulumi.StringPtrOutput)
}

// The schedule arm name.
func (o A2AProtectionContainerMappingDetailsResponseOutput) ScheduleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectionContainerMappingDetailsResponse) *string { return v.ScheduleName }).(pulumi.StringPtrOutput)
}

// A2A provider specific settings.
type A2AReplicationDetailsResponse struct {
	// The agent version.
	AgentVersion *string `pulumi:"agentVersion"`
	// The fabric specific object Id of the virtual machine.
	FabricObjectId *string `pulumi:"fabricObjectId"`
	// The initial primary fabric location.
	InitialPrimaryFabricLocation string `pulumi:"initialPrimaryFabricLocation"`
	// The initial primary availability zone.
	InitialPrimaryZone string `pulumi:"initialPrimaryZone"`
	// The initial recovery fabric location.
	InitialRecoveryFabricLocation string `pulumi:"initialRecoveryFabricLocation"`
	// The initial recovery availability zone.
	InitialRecoveryZone string `pulumi:"initialRecoveryZone"`
	// Gets the Instance type.
	InstanceType string `pulumi:"instanceType"`
	// A value indicating whether replication agent update is required.
	IsReplicationAgentUpdateRequired *bool `pulumi:"isReplicationAgentUpdateRequired"`
	// The last heartbeat received from the source server.
	LastHeartbeat *string `pulumi:"lastHeartbeat"`
	// The time (in UTC) when the last RPO value was calculated by Protection Service.
	LastRpoCalculatedTime *string `pulumi:"lastRpoCalculatedTime"`
	// An id associated with the PE that survives actions like switch protection which change the backing PE/CPE objects internally.The lifecycle id gets carried forward to have a link/continuity in being able to have an Id that denotes the "same" protected item even though other internal Ids/ARM Id might be changing.
	LifecycleId *string `pulumi:"lifecycleId"`
	// The management Id.
	ManagementId *string `pulumi:"managementId"`
	// The type of the monitoring job. The progress is contained in MonitoringPercentageCompletion property.
	MonitoringJobType *string `pulumi:"monitoringJobType"`
	// The percentage of the monitoring job. The type of the monitoring job is defined by MonitoringJobType property.
	MonitoringPercentageCompletion *int `pulumi:"monitoringPercentageCompletion"`
	// Whether Multi VM group is auto created or specified by user.
	MultiVmGroupCreateOption *string `pulumi:"multiVmGroupCreateOption"`
	// The multi vm group Id.
	MultiVmGroupId *string `pulumi:"multiVmGroupId"`
	// The multi vm group name.
	MultiVmGroupName *string `pulumi:"multiVmGroupName"`
	// The type of operating system.
	OsType *string `pulumi:"osType"`
	// Primary fabric location.
	PrimaryFabricLocation *string `pulumi:"primaryFabricLocation"`
	// The list of protected disks.
	ProtectedDisks []A2AProtectedDiskDetailsResponse `pulumi:"protectedDisks"`
	// The list of protected managed disks.
	ProtectedManagedDisks []A2AProtectedManagedDiskDetailsResponse `pulumi:"protectedManagedDisks"`
	// The recovery availability set.
	RecoveryAvailabilitySet *string `pulumi:"recoveryAvailabilitySet"`
	// The recovery availability zone.
	RecoveryAvailabilityZone *string `pulumi:"recoveryAvailabilityZone"`
	// The recovery resource group.
	RecoveryAzureResourceGroupId *string `pulumi:"recoveryAzureResourceGroupId"`
	// The name of recovery virtual machine.
	RecoveryAzureVMName *string `pulumi:"recoveryAzureVMName"`
	// The size of recovery virtual machine.
	RecoveryAzureVMSize *string `pulumi:"recoveryAzureVMSize"`
	// The recovery boot diagnostic storage account Arm Id.
	RecoveryBootDiagStorageAccountId *string `pulumi:"recoveryBootDiagStorageAccountId"`
	// The recovery cloud service.
	RecoveryCloudService *string `pulumi:"recoveryCloudService"`
	// The recovery fabric location.
	RecoveryFabricLocation *string `pulumi:"recoveryFabricLocation"`
	// The recovery fabric object Id.
	RecoveryFabricObjectId *string `pulumi:"recoveryFabricObjectId"`
	// The recovery proximity placement group Id.
	RecoveryProximityPlacementGroupId *string `pulumi:"recoveryProximityPlacementGroupId"`
	// The last RPO value in seconds.
	RpoInSeconds *int `pulumi:"rpoInSeconds"`
	// The recovery virtual network.
	SelectedRecoveryAzureNetworkId *string `pulumi:"selectedRecoveryAzureNetworkId"`
	// The test failover virtual network.
	SelectedTfoAzureNetworkId *string `pulumi:"selectedTfoAzureNetworkId"`
	// The test failover fabric object Id.
	TestFailoverRecoveryFabricObjectId *string `pulumi:"testFailoverRecoveryFabricObjectId"`
	// The test failover VM name.
	TfoAzureVMName *string `pulumi:"tfoAzureVMName"`
	// The list of unprotected disks.
	UnprotectedDisks []A2AUnprotectedDiskDetailsResponse `pulumi:"unprotectedDisks"`
	// The encryption type of the VM.
	VmEncryptionType string `pulumi:"vmEncryptionType"`
	// The virtual machine nic details.
	VmNics []VMNicDetailsResponse `pulumi:"vmNics"`
	// The protection state for the vm.
	VmProtectionState *string `pulumi:"vmProtectionState"`
	// The protection state description for the vm.
	VmProtectionStateDescription *string `pulumi:"vmProtectionStateDescription"`
	// The synced configuration details.
	VmSyncedConfigDetails *AzureToAzureVmSyncedConfigDetailsResponse `pulumi:"vmSyncedConfigDetails"`
}

// A2A provider specific settings.
type A2AReplicationDetailsResponseOutput struct{ *pulumi.OutputState }

func (A2AReplicationDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*A2AReplicationDetailsResponse)(nil)).Elem()
}

func (o A2AReplicationDetailsResponseOutput) ToA2AReplicationDetailsResponseOutput() A2AReplicationDetailsResponseOutput {
	return o
}

func (o A2AReplicationDetailsResponseOutput) ToA2AReplicationDetailsResponseOutputWithContext(ctx context.Context) A2AReplicationDetailsResponseOutput {
	return o
}

// The agent version.
func (o A2AReplicationDetailsResponseOutput) AgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.AgentVersion }).(pulumi.StringPtrOutput)
}

// The fabric specific object Id of the virtual machine.
func (o A2AReplicationDetailsResponseOutput) FabricObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.FabricObjectId }).(pulumi.StringPtrOutput)
}

// The initial primary fabric location.
func (o A2AReplicationDetailsResponseOutput) InitialPrimaryFabricLocation() pulumi.StringOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) string { return v.InitialPrimaryFabricLocation }).(pulumi.StringOutput)
}

// The initial primary availability zone.
func (o A2AReplicationDetailsResponseOutput) InitialPrimaryZone() pulumi.StringOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) string { return v.InitialPrimaryZone }).(pulumi.StringOutput)
}

// The initial recovery fabric location.
func (o A2AReplicationDetailsResponseOutput) InitialRecoveryFabricLocation() pulumi.StringOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) string { return v.InitialRecoveryFabricLocation }).(pulumi.StringOutput)
}

// The initial recovery availability zone.
func (o A2AReplicationDetailsResponseOutput) InitialRecoveryZone() pulumi.StringOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) string { return v.InitialRecoveryZone }).(pulumi.StringOutput)
}

// Gets the Instance type.
func (o A2AReplicationDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// A value indicating whether replication agent update is required.
func (o A2AReplicationDetailsResponseOutput) IsReplicationAgentUpdateRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *bool { return v.IsReplicationAgentUpdateRequired }).(pulumi.BoolPtrOutput)
}

// The last heartbeat received from the source server.
func (o A2AReplicationDetailsResponseOutput) LastHeartbeat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.LastHeartbeat }).(pulumi.StringPtrOutput)
}

// The time (in UTC) when the last RPO value was calculated by Protection Service.
func (o A2AReplicationDetailsResponseOutput) LastRpoCalculatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.LastRpoCalculatedTime }).(pulumi.StringPtrOutput)
}

// An id associated with the PE that survives actions like switch protection which change the backing PE/CPE objects internally.The lifecycle id gets carried forward to have a link/continuity in being able to have an Id that denotes the "same" protected item even though other internal Ids/ARM Id might be changing.
func (o A2AReplicationDetailsResponseOutput) LifecycleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.LifecycleId }).(pulumi.StringPtrOutput)
}

// The management Id.
func (o A2AReplicationDetailsResponseOutput) ManagementId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.ManagementId }).(pulumi.StringPtrOutput)
}

// The type of the monitoring job. The progress is contained in MonitoringPercentageCompletion property.
func (o A2AReplicationDetailsResponseOutput) MonitoringJobType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.MonitoringJobType }).(pulumi.StringPtrOutput)
}

// The percentage of the monitoring job. The type of the monitoring job is defined by MonitoringJobType property.
func (o A2AReplicationDetailsResponseOutput) MonitoringPercentageCompletion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *int { return v.MonitoringPercentageCompletion }).(pulumi.IntPtrOutput)
}

// Whether Multi VM group is auto created or specified by user.
func (o A2AReplicationDetailsResponseOutput) MultiVmGroupCreateOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.MultiVmGroupCreateOption }).(pulumi.StringPtrOutput)
}

// The multi vm group Id.
func (o A2AReplicationDetailsResponseOutput) MultiVmGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.MultiVmGroupId }).(pulumi.StringPtrOutput)
}

// The multi vm group name.
func (o A2AReplicationDetailsResponseOutput) MultiVmGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.MultiVmGroupName }).(pulumi.StringPtrOutput)
}

// The type of operating system.
func (o A2AReplicationDetailsResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// Primary fabric location.
func (o A2AReplicationDetailsResponseOutput) PrimaryFabricLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.PrimaryFabricLocation }).(pulumi.StringPtrOutput)
}

// The list of protected disks.
func (o A2AReplicationDetailsResponseOutput) ProtectedDisks() A2AProtectedDiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) []A2AProtectedDiskDetailsResponse { return v.ProtectedDisks }).(A2AProtectedDiskDetailsResponseArrayOutput)
}

// The list of protected managed disks.
func (o A2AReplicationDetailsResponseOutput) ProtectedManagedDisks() A2AProtectedManagedDiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) []A2AProtectedManagedDiskDetailsResponse {
		return v.ProtectedManagedDisks
	}).(A2AProtectedManagedDiskDetailsResponseArrayOutput)
}

// The recovery availability set.
func (o A2AReplicationDetailsResponseOutput) RecoveryAvailabilitySet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.RecoveryAvailabilitySet }).(pulumi.StringPtrOutput)
}

// The recovery availability zone.
func (o A2AReplicationDetailsResponseOutput) RecoveryAvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.RecoveryAvailabilityZone }).(pulumi.StringPtrOutput)
}

// The recovery resource group.
func (o A2AReplicationDetailsResponseOutput) RecoveryAzureResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.RecoveryAzureResourceGroupId }).(pulumi.StringPtrOutput)
}

// The name of recovery virtual machine.
func (o A2AReplicationDetailsResponseOutput) RecoveryAzureVMName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.RecoveryAzureVMName }).(pulumi.StringPtrOutput)
}

// The size of recovery virtual machine.
func (o A2AReplicationDetailsResponseOutput) RecoveryAzureVMSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.RecoveryAzureVMSize }).(pulumi.StringPtrOutput)
}

// The recovery boot diagnostic storage account Arm Id.
func (o A2AReplicationDetailsResponseOutput) RecoveryBootDiagStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.RecoveryBootDiagStorageAccountId }).(pulumi.StringPtrOutput)
}

// The recovery cloud service.
func (o A2AReplicationDetailsResponseOutput) RecoveryCloudService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.RecoveryCloudService }).(pulumi.StringPtrOutput)
}

// The recovery fabric location.
func (o A2AReplicationDetailsResponseOutput) RecoveryFabricLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.RecoveryFabricLocation }).(pulumi.StringPtrOutput)
}

// The recovery fabric object Id.
func (o A2AReplicationDetailsResponseOutput) RecoveryFabricObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.RecoveryFabricObjectId }).(pulumi.StringPtrOutput)
}

// The recovery proximity placement group Id.
func (o A2AReplicationDetailsResponseOutput) RecoveryProximityPlacementGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.RecoveryProximityPlacementGroupId }).(pulumi.StringPtrOutput)
}

// The last RPO value in seconds.
func (o A2AReplicationDetailsResponseOutput) RpoInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *int { return v.RpoInSeconds }).(pulumi.IntPtrOutput)
}

// The recovery virtual network.
func (o A2AReplicationDetailsResponseOutput) SelectedRecoveryAzureNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.SelectedRecoveryAzureNetworkId }).(pulumi.StringPtrOutput)
}

// The test failover virtual network.
func (o A2AReplicationDetailsResponseOutput) SelectedTfoAzureNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.SelectedTfoAzureNetworkId }).(pulumi.StringPtrOutput)
}

// The test failover fabric object Id.
func (o A2AReplicationDetailsResponseOutput) TestFailoverRecoveryFabricObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.TestFailoverRecoveryFabricObjectId }).(pulumi.StringPtrOutput)
}

// The test failover VM name.
func (o A2AReplicationDetailsResponseOutput) TfoAzureVMName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.TfoAzureVMName }).(pulumi.StringPtrOutput)
}

// The list of unprotected disks.
func (o A2AReplicationDetailsResponseOutput) UnprotectedDisks() A2AUnprotectedDiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) []A2AUnprotectedDiskDetailsResponse { return v.UnprotectedDisks }).(A2AUnprotectedDiskDetailsResponseArrayOutput)
}

// The encryption type of the VM.
func (o A2AReplicationDetailsResponseOutput) VmEncryptionType() pulumi.StringOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) string { return v.VmEncryptionType }).(pulumi.StringOutput)
}

// The virtual machine nic details.
func (o A2AReplicationDetailsResponseOutput) VmNics() VMNicDetailsResponseArrayOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) []VMNicDetailsResponse { return v.VmNics }).(VMNicDetailsResponseArrayOutput)
}

// The protection state for the vm.
func (o A2AReplicationDetailsResponseOutput) VmProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.VmProtectionState }).(pulumi.StringPtrOutput)
}

// The protection state description for the vm.
func (o A2AReplicationDetailsResponseOutput) VmProtectionStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.VmProtectionStateDescription }).(pulumi.StringPtrOutput)
}

// The synced configuration details.
func (o A2AReplicationDetailsResponseOutput) VmSyncedConfigDetails() AzureToAzureVmSyncedConfigDetailsResponsePtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *AzureToAzureVmSyncedConfigDetailsResponse {
		return v.VmSyncedConfigDetails
	}).(AzureToAzureVmSyncedConfigDetailsResponsePtrOutput)
}

// A2A unprotected disk details.
type A2AUnprotectedDiskDetailsResponse struct {
	// The source lun Id for the data disk.
	DiskLunId *int `pulumi:"diskLunId"`
}

// A2A unprotected disk details.
type A2AUnprotectedDiskDetailsResponseOutput struct{ *pulumi.OutputState }

func (A2AUnprotectedDiskDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*A2AUnprotectedDiskDetailsResponse)(nil)).Elem()
}

func (o A2AUnprotectedDiskDetailsResponseOutput) ToA2AUnprotectedDiskDetailsResponseOutput() A2AUnprotectedDiskDetailsResponseOutput {
	return o
}

func (o A2AUnprotectedDiskDetailsResponseOutput) ToA2AUnprotectedDiskDetailsResponseOutputWithContext(ctx context.Context) A2AUnprotectedDiskDetailsResponseOutput {
	return o
}

// The source lun Id for the data disk.
func (o A2AUnprotectedDiskDetailsResponseOutput) DiskLunId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v A2AUnprotectedDiskDetailsResponse) *int { return v.DiskLunId }).(pulumi.IntPtrOutput)
}

type A2AUnprotectedDiskDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (A2AUnprotectedDiskDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]A2AUnprotectedDiskDetailsResponse)(nil)).Elem()
}

func (o A2AUnprotectedDiskDetailsResponseArrayOutput) ToA2AUnprotectedDiskDetailsResponseArrayOutput() A2AUnprotectedDiskDetailsResponseArrayOutput {
	return o
}

func (o A2AUnprotectedDiskDetailsResponseArrayOutput) ToA2AUnprotectedDiskDetailsResponseArrayOutputWithContext(ctx context.Context) A2AUnprotectedDiskDetailsResponseArrayOutput {
	return o
}

func (o A2AUnprotectedDiskDetailsResponseArrayOutput) Index(i pulumi.IntInput) A2AUnprotectedDiskDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) A2AUnprotectedDiskDetailsResponse {
		return vs[0].([]A2AUnprotectedDiskDetailsResponse)[vs[1].(int)]
	}).(A2AUnprotectedDiskDetailsResponseOutput)
}

// Azure VM disk input details.
type A2AVmDiskInputDetails struct {
	// The disk Uri.
	DiskUri *string `pulumi:"diskUri"`
	// The primary staging storage account Id.
	PrimaryStagingAzureStorageAccountId *string `pulumi:"primaryStagingAzureStorageAccountId"`
	// The recovery VHD storage account Id.
	RecoveryAzureStorageAccountId *string `pulumi:"recoveryAzureStorageAccountId"`
}

// A2AVmDiskInputDetailsInput is an input type that accepts A2AVmDiskInputDetailsArgs and A2AVmDiskInputDetailsOutput values.
// You can construct a concrete instance of `A2AVmDiskInputDetailsInput` via:
//
//          A2AVmDiskInputDetailsArgs{...}
type A2AVmDiskInputDetailsInput interface {
	pulumi.Input

	ToA2AVmDiskInputDetailsOutput() A2AVmDiskInputDetailsOutput
	ToA2AVmDiskInputDetailsOutputWithContext(context.Context) A2AVmDiskInputDetailsOutput
}

// Azure VM disk input details.
type A2AVmDiskInputDetailsArgs struct {
	// The disk Uri.
	DiskUri pulumi.StringPtrInput `pulumi:"diskUri"`
	// The primary staging storage account Id.
	PrimaryStagingAzureStorageAccountId pulumi.StringPtrInput `pulumi:"primaryStagingAzureStorageAccountId"`
	// The recovery VHD storage account Id.
	RecoveryAzureStorageAccountId pulumi.StringPtrInput `pulumi:"recoveryAzureStorageAccountId"`
}

func (A2AVmDiskInputDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*A2AVmDiskInputDetails)(nil)).Elem()
}

func (i A2AVmDiskInputDetailsArgs) ToA2AVmDiskInputDetailsOutput() A2AVmDiskInputDetailsOutput {
	return i.ToA2AVmDiskInputDetailsOutputWithContext(context.Background())
}

func (i A2AVmDiskInputDetailsArgs) ToA2AVmDiskInputDetailsOutputWithContext(ctx context.Context) A2AVmDiskInputDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(A2AVmDiskInputDetailsOutput)
}

// A2AVmDiskInputDetailsArrayInput is an input type that accepts A2AVmDiskInputDetailsArray and A2AVmDiskInputDetailsArrayOutput values.
// You can construct a concrete instance of `A2AVmDiskInputDetailsArrayInput` via:
//
//          A2AVmDiskInputDetailsArray{ A2AVmDiskInputDetailsArgs{...} }
type A2AVmDiskInputDetailsArrayInput interface {
	pulumi.Input

	ToA2AVmDiskInputDetailsArrayOutput() A2AVmDiskInputDetailsArrayOutput
	ToA2AVmDiskInputDetailsArrayOutputWithContext(context.Context) A2AVmDiskInputDetailsArrayOutput
}

type A2AVmDiskInputDetailsArray []A2AVmDiskInputDetailsInput

func (A2AVmDiskInputDetailsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]A2AVmDiskInputDetails)(nil)).Elem()
}

func (i A2AVmDiskInputDetailsArray) ToA2AVmDiskInputDetailsArrayOutput() A2AVmDiskInputDetailsArrayOutput {
	return i.ToA2AVmDiskInputDetailsArrayOutputWithContext(context.Background())
}

func (i A2AVmDiskInputDetailsArray) ToA2AVmDiskInputDetailsArrayOutputWithContext(ctx context.Context) A2AVmDiskInputDetailsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(A2AVmDiskInputDetailsArrayOutput)
}

// Azure VM managed disk input details.
type A2AVmManagedDiskInputDetails struct {
	// The recovery disk encryption information (for one / single pass flows).
	DiskEncryptionInfo *DiskEncryptionInfo `pulumi:"diskEncryptionInfo"`
	// The disk Id.
	DiskId *string `pulumi:"diskId"`
	// The primary staging storage account Arm Id.
	PrimaryStagingAzureStorageAccountId *string `pulumi:"primaryStagingAzureStorageAccountId"`
	// The recovery disk encryption set Id.
	RecoveryDiskEncryptionSetId *string `pulumi:"recoveryDiskEncryptionSetId"`
	// The replica disk type. Its an optional value and will be same as source disk type if not user provided.
	RecoveryReplicaDiskAccountType *string `pulumi:"recoveryReplicaDiskAccountType"`
	// The target resource group Arm Id.
	RecoveryResourceGroupId *string `pulumi:"recoveryResourceGroupId"`
	// The target disk type after failover. Its an optional value and will be same as source disk type if not user provided.
	RecoveryTargetDiskAccountType *string `pulumi:"recoveryTargetDiskAccountType"`
}

// A2AVmManagedDiskInputDetailsInput is an input type that accepts A2AVmManagedDiskInputDetailsArgs and A2AVmManagedDiskInputDetailsOutput values.
// You can construct a concrete instance of `A2AVmManagedDiskInputDetailsInput` via:
//
//          A2AVmManagedDiskInputDetailsArgs{...}
type A2AVmManagedDiskInputDetailsInput interface {
	pulumi.Input

	ToA2AVmManagedDiskInputDetailsOutput() A2AVmManagedDiskInputDetailsOutput
	ToA2AVmManagedDiskInputDetailsOutputWithContext(context.Context) A2AVmManagedDiskInputDetailsOutput
}

// Azure VM managed disk input details.
type A2AVmManagedDiskInputDetailsArgs struct {
	// The recovery disk encryption information (for one / single pass flows).
	DiskEncryptionInfo DiskEncryptionInfoPtrInput `pulumi:"diskEncryptionInfo"`
	// The disk Id.
	DiskId pulumi.StringPtrInput `pulumi:"diskId"`
	// The primary staging storage account Arm Id.
	PrimaryStagingAzureStorageAccountId pulumi.StringPtrInput `pulumi:"primaryStagingAzureStorageAccountId"`
	// The recovery disk encryption set Id.
	RecoveryDiskEncryptionSetId pulumi.StringPtrInput `pulumi:"recoveryDiskEncryptionSetId"`
	// The replica disk type. Its an optional value and will be same as source disk type if not user provided.
	RecoveryReplicaDiskAccountType pulumi.StringPtrInput `pulumi:"recoveryReplicaDiskAccountType"`
	// The target resource group Arm Id.
	RecoveryResourceGroupId pulumi.StringPtrInput `pulumi:"recoveryResourceGroupId"`
	// The target disk type after failover. Its an optional value and will be same as source disk type if not user provided.
	RecoveryTargetDiskAccountType pulumi.StringPtrInput `pulumi:"recoveryTargetDiskAccountType"`
}

func (A2AVmManagedDiskInputDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*A2AVmManagedDiskInputDetails)(nil)).Elem()
}

func (i A2AVmManagedDiskInputDetailsArgs) ToA2AVmManagedDiskInputDetailsOutput() A2AVmManagedDiskInputDetailsOutput {
	return i.ToA2AVmManagedDiskInputDetailsOutputWithContext(context.Background())
}

func (i A2AVmManagedDiskInputDetailsArgs) ToA2AVmManagedDiskInputDetailsOutputWithContext(ctx context.Context) A2AVmManagedDiskInputDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(A2AVmManagedDiskInputDetailsOutput)
}

// A2AVmManagedDiskInputDetailsArrayInput is an input type that accepts A2AVmManagedDiskInputDetailsArray and A2AVmManagedDiskInputDetailsArrayOutput values.
// You can construct a concrete instance of `A2AVmManagedDiskInputDetailsArrayInput` via:
//
//          A2AVmManagedDiskInputDetailsArray{ A2AVmManagedDiskInputDetailsArgs{...} }
type A2AVmManagedDiskInputDetailsArrayInput interface {
	pulumi.Input

	ToA2AVmManagedDiskInputDetailsArrayOutput() A2AVmManagedDiskInputDetailsArrayOutput
	ToA2AVmManagedDiskInputDetailsArrayOutputWithContext(context.Context) A2AVmManagedDiskInputDetailsArrayOutput
}

type A2AVmManagedDiskInputDetailsArray []A2AVmManagedDiskInputDetailsInput

func (A2AVmManagedDiskInputDetailsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]A2AVmManagedDiskInputDetails)(nil)).Elem()
}

func (i A2AVmManagedDiskInputDetailsArray) ToA2AVmManagedDiskInputDetailsArrayOutput() A2AVmManagedDiskInputDetailsArrayOutput {
	return i.ToA2AVmManagedDiskInputDetailsArrayOutputWithContext(context.Background())
}

func (i A2AVmManagedDiskInputDetailsArray) ToA2AVmManagedDiskInputDetailsArrayOutputWithContext(ctx context.Context) A2AVmManagedDiskInputDetailsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(A2AVmManagedDiskInputDetailsArrayOutput)
}

// The properties of an add provider request.
type AddRecoveryServicesProviderInputProperties struct {
	// The identity provider input for DRA authentication.
	AuthenticationIdentityInput IdentityProviderInput `pulumi:"authenticationIdentityInput"`
	// The name of the machine where the provider is getting added.
	MachineName string `pulumi:"machineName"`
	// The identity provider input for resource access.
	ResourceAccessIdentityInput IdentityProviderInput `pulumi:"resourceAccessIdentityInput"`
}

// AddRecoveryServicesProviderInputPropertiesInput is an input type that accepts AddRecoveryServicesProviderInputPropertiesArgs and AddRecoveryServicesProviderInputPropertiesOutput values.
// You can construct a concrete instance of `AddRecoveryServicesProviderInputPropertiesInput` via:
//
//          AddRecoveryServicesProviderInputPropertiesArgs{...}
type AddRecoveryServicesProviderInputPropertiesInput interface {
	pulumi.Input

	ToAddRecoveryServicesProviderInputPropertiesOutput() AddRecoveryServicesProviderInputPropertiesOutput
	ToAddRecoveryServicesProviderInputPropertiesOutputWithContext(context.Context) AddRecoveryServicesProviderInputPropertiesOutput
}

// The properties of an add provider request.
type AddRecoveryServicesProviderInputPropertiesArgs struct {
	// The identity provider input for DRA authentication.
	AuthenticationIdentityInput IdentityProviderInputInput `pulumi:"authenticationIdentityInput"`
	// The name of the machine where the provider is getting added.
	MachineName pulumi.StringInput `pulumi:"machineName"`
	// The identity provider input for resource access.
	ResourceAccessIdentityInput IdentityProviderInputInput `pulumi:"resourceAccessIdentityInput"`
}

func (AddRecoveryServicesProviderInputPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddRecoveryServicesProviderInputProperties)(nil)).Elem()
}

func (i AddRecoveryServicesProviderInputPropertiesArgs) ToAddRecoveryServicesProviderInputPropertiesOutput() AddRecoveryServicesProviderInputPropertiesOutput {
	return i.ToAddRecoveryServicesProviderInputPropertiesOutputWithContext(context.Background())
}

func (i AddRecoveryServicesProviderInputPropertiesArgs) ToAddRecoveryServicesProviderInputPropertiesOutputWithContext(ctx context.Context) AddRecoveryServicesProviderInputPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddRecoveryServicesProviderInputPropertiesOutput)
}

func (i AddRecoveryServicesProviderInputPropertiesArgs) ToAddRecoveryServicesProviderInputPropertiesPtrOutput() AddRecoveryServicesProviderInputPropertiesPtrOutput {
	return i.ToAddRecoveryServicesProviderInputPropertiesPtrOutputWithContext(context.Background())
}

func (i AddRecoveryServicesProviderInputPropertiesArgs) ToAddRecoveryServicesProviderInputPropertiesPtrOutputWithContext(ctx context.Context) AddRecoveryServicesProviderInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddRecoveryServicesProviderInputPropertiesOutput).ToAddRecoveryServicesProviderInputPropertiesPtrOutputWithContext(ctx)
}

// AddRecoveryServicesProviderInputPropertiesPtrInput is an input type that accepts AddRecoveryServicesProviderInputPropertiesArgs, AddRecoveryServicesProviderInputPropertiesPtr and AddRecoveryServicesProviderInputPropertiesPtrOutput values.
// You can construct a concrete instance of `AddRecoveryServicesProviderInputPropertiesPtrInput` via:
//
//          AddRecoveryServicesProviderInputPropertiesArgs{...}
//
//  or:
//
//          nil
type AddRecoveryServicesProviderInputPropertiesPtrInput interface {
	pulumi.Input

	ToAddRecoveryServicesProviderInputPropertiesPtrOutput() AddRecoveryServicesProviderInputPropertiesPtrOutput
	ToAddRecoveryServicesProviderInputPropertiesPtrOutputWithContext(context.Context) AddRecoveryServicesProviderInputPropertiesPtrOutput
}

type addRecoveryServicesProviderInputPropertiesPtrType AddRecoveryServicesProviderInputPropertiesArgs

func AddRecoveryServicesProviderInputPropertiesPtr(v *AddRecoveryServicesProviderInputPropertiesArgs) AddRecoveryServicesProviderInputPropertiesPtrInput {
	return (*addRecoveryServicesProviderInputPropertiesPtrType)(v)
}

func (*addRecoveryServicesProviderInputPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddRecoveryServicesProviderInputProperties)(nil)).Elem()
}

func (i *addRecoveryServicesProviderInputPropertiesPtrType) ToAddRecoveryServicesProviderInputPropertiesPtrOutput() AddRecoveryServicesProviderInputPropertiesPtrOutput {
	return i.ToAddRecoveryServicesProviderInputPropertiesPtrOutputWithContext(context.Background())
}

func (i *addRecoveryServicesProviderInputPropertiesPtrType) ToAddRecoveryServicesProviderInputPropertiesPtrOutputWithContext(ctx context.Context) AddRecoveryServicesProviderInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddRecoveryServicesProviderInputPropertiesPtrOutput)
}

// The properties of an add vCenter request.
type AddVCenterRequestProperties struct {
	// The friendly name of the vCenter.
	FriendlyName *string `pulumi:"friendlyName"`
	// The IP address of the vCenter to be discovered.
	IpAddress *string `pulumi:"ipAddress"`
	// The port number for discovery.
	Port *string `pulumi:"port"`
	// The process server Id from where the discovery is orchestrated.
	ProcessServerId *string `pulumi:"processServerId"`
	// The account Id which has privileges to discover the vCenter.
	RunAsAccountId *string `pulumi:"runAsAccountId"`
}

// AddVCenterRequestPropertiesInput is an input type that accepts AddVCenterRequestPropertiesArgs and AddVCenterRequestPropertiesOutput values.
// You can construct a concrete instance of `AddVCenterRequestPropertiesInput` via:
//
//          AddVCenterRequestPropertiesArgs{...}
type AddVCenterRequestPropertiesInput interface {
	pulumi.Input

	ToAddVCenterRequestPropertiesOutput() AddVCenterRequestPropertiesOutput
	ToAddVCenterRequestPropertiesOutputWithContext(context.Context) AddVCenterRequestPropertiesOutput
}

// The properties of an add vCenter request.
type AddVCenterRequestPropertiesArgs struct {
	// The friendly name of the vCenter.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// The IP address of the vCenter to be discovered.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// The port number for discovery.
	Port pulumi.StringPtrInput `pulumi:"port"`
	// The process server Id from where the discovery is orchestrated.
	ProcessServerId pulumi.StringPtrInput `pulumi:"processServerId"`
	// The account Id which has privileges to discover the vCenter.
	RunAsAccountId pulumi.StringPtrInput `pulumi:"runAsAccountId"`
}

func (AddVCenterRequestPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddVCenterRequestProperties)(nil)).Elem()
}

func (i AddVCenterRequestPropertiesArgs) ToAddVCenterRequestPropertiesOutput() AddVCenterRequestPropertiesOutput {
	return i.ToAddVCenterRequestPropertiesOutputWithContext(context.Background())
}

func (i AddVCenterRequestPropertiesArgs) ToAddVCenterRequestPropertiesOutputWithContext(ctx context.Context) AddVCenterRequestPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddVCenterRequestPropertiesOutput)
}

func (i AddVCenterRequestPropertiesArgs) ToAddVCenterRequestPropertiesPtrOutput() AddVCenterRequestPropertiesPtrOutput {
	return i.ToAddVCenterRequestPropertiesPtrOutputWithContext(context.Background())
}

func (i AddVCenterRequestPropertiesArgs) ToAddVCenterRequestPropertiesPtrOutputWithContext(ctx context.Context) AddVCenterRequestPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddVCenterRequestPropertiesOutput).ToAddVCenterRequestPropertiesPtrOutputWithContext(ctx)
}

// AddVCenterRequestPropertiesPtrInput is an input type that accepts AddVCenterRequestPropertiesArgs, AddVCenterRequestPropertiesPtr and AddVCenterRequestPropertiesPtrOutput values.
// You can construct a concrete instance of `AddVCenterRequestPropertiesPtrInput` via:
//
//          AddVCenterRequestPropertiesArgs{...}
//
//  or:
//
//          nil
type AddVCenterRequestPropertiesPtrInput interface {
	pulumi.Input

	ToAddVCenterRequestPropertiesPtrOutput() AddVCenterRequestPropertiesPtrOutput
	ToAddVCenterRequestPropertiesPtrOutputWithContext(context.Context) AddVCenterRequestPropertiesPtrOutput
}

type addVCenterRequestPropertiesPtrType AddVCenterRequestPropertiesArgs

func AddVCenterRequestPropertiesPtr(v *AddVCenterRequestPropertiesArgs) AddVCenterRequestPropertiesPtrInput {
	return (*addVCenterRequestPropertiesPtrType)(v)
}

func (*addVCenterRequestPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddVCenterRequestProperties)(nil)).Elem()
}

func (i *addVCenterRequestPropertiesPtrType) ToAddVCenterRequestPropertiesPtrOutput() AddVCenterRequestPropertiesPtrOutput {
	return i.ToAddVCenterRequestPropertiesPtrOutputWithContext(context.Background())
}

func (i *addVCenterRequestPropertiesPtrType) ToAddVCenterRequestPropertiesPtrOutputWithContext(ctx context.Context) AddVCenterRequestPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddVCenterRequestPropertiesPtrOutput)
}

// Fabric provider specific settings.
type AzureFabricCreationInput struct {
	// Gets the class type.
	InstanceType *string `pulumi:"instanceType"`
	// The Location.
	Location *string `pulumi:"location"`
}

// AzureFabricCreationInputInput is an input type that accepts AzureFabricCreationInputArgs and AzureFabricCreationInputOutput values.
// You can construct a concrete instance of `AzureFabricCreationInputInput` via:
//
//          AzureFabricCreationInputArgs{...}
type AzureFabricCreationInputInput interface {
	pulumi.Input

	ToAzureFabricCreationInputOutput() AzureFabricCreationInputOutput
	ToAzureFabricCreationInputOutputWithContext(context.Context) AzureFabricCreationInputOutput
}

// Fabric provider specific settings.
type AzureFabricCreationInputArgs struct {
	// Gets the class type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// The Location.
	Location pulumi.StringPtrInput `pulumi:"location"`
}

func (AzureFabricCreationInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFabricCreationInput)(nil)).Elem()
}

func (i AzureFabricCreationInputArgs) ToAzureFabricCreationInputOutput() AzureFabricCreationInputOutput {
	return i.ToAzureFabricCreationInputOutputWithContext(context.Background())
}

func (i AzureFabricCreationInputArgs) ToAzureFabricCreationInputOutputWithContext(ctx context.Context) AzureFabricCreationInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFabricCreationInputOutput)
}

// Azure Fabric Specific Details.
type AzureFabricSpecificDetailsResponse struct {
	// The container Ids for the Azure fabric.
	ContainerIds []string `pulumi:"containerIds"`
	// Gets the class type. Overridden in derived classes.
	InstanceType string `pulumi:"instanceType"`
	// The Location for the Azure fabric.
	Location *string `pulumi:"location"`
}

// Azure Fabric Specific Details.
type AzureFabricSpecificDetailsResponseOutput struct{ *pulumi.OutputState }

func (AzureFabricSpecificDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFabricSpecificDetailsResponse)(nil)).Elem()
}

func (o AzureFabricSpecificDetailsResponseOutput) ToAzureFabricSpecificDetailsResponseOutput() AzureFabricSpecificDetailsResponseOutput {
	return o
}

func (o AzureFabricSpecificDetailsResponseOutput) ToAzureFabricSpecificDetailsResponseOutputWithContext(ctx context.Context) AzureFabricSpecificDetailsResponseOutput {
	return o
}

// The container Ids for the Azure fabric.
func (o AzureFabricSpecificDetailsResponseOutput) ContainerIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFabricSpecificDetailsResponse) []string { return v.ContainerIds }).(pulumi.StringArrayOutput)
}

// Gets the class type. Overridden in derived classes.
func (o AzureFabricSpecificDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFabricSpecificDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The Location for the Azure fabric.
func (o AzureFabricSpecificDetailsResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFabricSpecificDetailsResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Azure File Share workload-specific backup item.
type AzureFileshareProtectedItem struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information with this backup item.
	ExtendedInfo *AzureFileshareProtectedItemExtendedInfo `pulumi:"extendedInfo"`
	// Friendly name of the fileshare represented by this backup item.
	FriendlyName *string `pulumi:"friendlyName"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetails `pulumi:"kpisHealths"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// backup item type.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Type of workload this item represents.
	WorkloadType *string `pulumi:"workloadType"`
}

// AzureFileshareProtectedItemInput is an input type that accepts AzureFileshareProtectedItemArgs and AzureFileshareProtectedItemOutput values.
// You can construct a concrete instance of `AzureFileshareProtectedItemInput` via:
//
//          AzureFileshareProtectedItemArgs{...}
type AzureFileshareProtectedItemInput interface {
	pulumi.Input

	ToAzureFileshareProtectedItemOutput() AzureFileshareProtectedItemOutput
	ToAzureFileshareProtectedItemOutputWithContext(context.Context) AzureFileshareProtectedItemOutput
}

// Azure File Share workload-specific backup item.
type AzureFileshareProtectedItemArgs struct {
	// Type of backup management for the backed up item.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName pulumi.StringPtrInput `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode pulumi.StringPtrInput `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC pulumi.StringPtrInput `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining pulumi.StringPtrInput `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information with this backup item.
	ExtendedInfo AzureFileshareProtectedItemExtendedInfoPtrInput `pulumi:"extendedInfo"`
	// Friendly name of the fileshare represented by this backup item.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming pulumi.BoolPtrInput `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate pulumi.BoolPtrInput `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete pulumi.BoolPtrInput `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths KPIResourceHealthDetailsMapInput `pulumi:"kpisHealths"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus pulumi.StringPtrInput `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime pulumi.StringPtrInput `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint pulumi.StringPtrInput `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// backup item type.
	ProtectedItemType pulumi.StringInput `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState pulumi.StringPtrInput `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus pulumi.StringPtrInput `pulumi:"protectionStatus"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
	// Type of workload this item represents.
	WorkloadType pulumi.StringPtrInput `pulumi:"workloadType"`
}

func (AzureFileshareProtectedItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFileshareProtectedItem)(nil)).Elem()
}

func (i AzureFileshareProtectedItemArgs) ToAzureFileshareProtectedItemOutput() AzureFileshareProtectedItemOutput {
	return i.ToAzureFileshareProtectedItemOutputWithContext(context.Background())
}

func (i AzureFileshareProtectedItemArgs) ToAzureFileshareProtectedItemOutputWithContext(ctx context.Context) AzureFileshareProtectedItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFileshareProtectedItemOutput)
}

// Additional information about Azure File Share backup item.
type AzureFileshareProtectedItemExtendedInfo struct {
	// The oldest backup copy available for this item in the service.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// Indicates consistency of policy object and policy applied to this backup item.
	PolicyState *string `pulumi:"policyState"`
	// Number of available backup copies associated with this backup item.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
}

// AzureFileshareProtectedItemExtendedInfoInput is an input type that accepts AzureFileshareProtectedItemExtendedInfoArgs and AzureFileshareProtectedItemExtendedInfoOutput values.
// You can construct a concrete instance of `AzureFileshareProtectedItemExtendedInfoInput` via:
//
//          AzureFileshareProtectedItemExtendedInfoArgs{...}
type AzureFileshareProtectedItemExtendedInfoInput interface {
	pulumi.Input

	ToAzureFileshareProtectedItemExtendedInfoOutput() AzureFileshareProtectedItemExtendedInfoOutput
	ToAzureFileshareProtectedItemExtendedInfoOutputWithContext(context.Context) AzureFileshareProtectedItemExtendedInfoOutput
}

// Additional information about Azure File Share backup item.
type AzureFileshareProtectedItemExtendedInfoArgs struct {
	// The oldest backup copy available for this item in the service.
	OldestRecoveryPoint pulumi.StringPtrInput `pulumi:"oldestRecoveryPoint"`
	// Indicates consistency of policy object and policy applied to this backup item.
	PolicyState pulumi.StringPtrInput `pulumi:"policyState"`
	// Number of available backup copies associated with this backup item.
	RecoveryPointCount pulumi.IntPtrInput `pulumi:"recoveryPointCount"`
}

func (AzureFileshareProtectedItemExtendedInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFileshareProtectedItemExtendedInfo)(nil)).Elem()
}

func (i AzureFileshareProtectedItemExtendedInfoArgs) ToAzureFileshareProtectedItemExtendedInfoOutput() AzureFileshareProtectedItemExtendedInfoOutput {
	return i.ToAzureFileshareProtectedItemExtendedInfoOutputWithContext(context.Background())
}

func (i AzureFileshareProtectedItemExtendedInfoArgs) ToAzureFileshareProtectedItemExtendedInfoOutputWithContext(ctx context.Context) AzureFileshareProtectedItemExtendedInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFileshareProtectedItemExtendedInfoOutput)
}

func (i AzureFileshareProtectedItemExtendedInfoArgs) ToAzureFileshareProtectedItemExtendedInfoPtrOutput() AzureFileshareProtectedItemExtendedInfoPtrOutput {
	return i.ToAzureFileshareProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (i AzureFileshareProtectedItemExtendedInfoArgs) ToAzureFileshareProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) AzureFileshareProtectedItemExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFileshareProtectedItemExtendedInfoOutput).ToAzureFileshareProtectedItemExtendedInfoPtrOutputWithContext(ctx)
}

// AzureFileshareProtectedItemExtendedInfoPtrInput is an input type that accepts AzureFileshareProtectedItemExtendedInfoArgs, AzureFileshareProtectedItemExtendedInfoPtr and AzureFileshareProtectedItemExtendedInfoPtrOutput values.
// You can construct a concrete instance of `AzureFileshareProtectedItemExtendedInfoPtrInput` via:
//
//          AzureFileshareProtectedItemExtendedInfoArgs{...}
//
//  or:
//
//          nil
type AzureFileshareProtectedItemExtendedInfoPtrInput interface {
	pulumi.Input

	ToAzureFileshareProtectedItemExtendedInfoPtrOutput() AzureFileshareProtectedItemExtendedInfoPtrOutput
	ToAzureFileshareProtectedItemExtendedInfoPtrOutputWithContext(context.Context) AzureFileshareProtectedItemExtendedInfoPtrOutput
}

type azureFileshareProtectedItemExtendedInfoPtrType AzureFileshareProtectedItemExtendedInfoArgs

func AzureFileshareProtectedItemExtendedInfoPtr(v *AzureFileshareProtectedItemExtendedInfoArgs) AzureFileshareProtectedItemExtendedInfoPtrInput {
	return (*azureFileshareProtectedItemExtendedInfoPtrType)(v)
}

func (*azureFileshareProtectedItemExtendedInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFileshareProtectedItemExtendedInfo)(nil)).Elem()
}

func (i *azureFileshareProtectedItemExtendedInfoPtrType) ToAzureFileshareProtectedItemExtendedInfoPtrOutput() AzureFileshareProtectedItemExtendedInfoPtrOutput {
	return i.ToAzureFileshareProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (i *azureFileshareProtectedItemExtendedInfoPtrType) ToAzureFileshareProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) AzureFileshareProtectedItemExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFileshareProtectedItemExtendedInfoPtrOutput)
}

// Additional information about Azure File Share backup item.
type AzureFileshareProtectedItemExtendedInfoResponse struct {
	// The oldest backup copy available for this item in the service.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// Indicates consistency of policy object and policy applied to this backup item.
	PolicyState *string `pulumi:"policyState"`
	// Number of available backup copies associated with this backup item.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
	// Indicates the state of this resource. Possible values are from enum ResourceState {Invalid, Active, SoftDeleted, Deleted}
	ResourceState string `pulumi:"resourceState"`
	// The resource state sync time for this backup item.
	ResourceStateSyncTime string `pulumi:"resourceStateSyncTime"`
}

// Additional information about Azure File Share backup item.
type AzureFileshareProtectedItemExtendedInfoResponseOutput struct{ *pulumi.OutputState }

func (AzureFileshareProtectedItemExtendedInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFileshareProtectedItemExtendedInfoResponse)(nil)).Elem()
}

func (o AzureFileshareProtectedItemExtendedInfoResponseOutput) ToAzureFileshareProtectedItemExtendedInfoResponseOutput() AzureFileshareProtectedItemExtendedInfoResponseOutput {
	return o
}

func (o AzureFileshareProtectedItemExtendedInfoResponseOutput) ToAzureFileshareProtectedItemExtendedInfoResponseOutputWithContext(ctx context.Context) AzureFileshareProtectedItemExtendedInfoResponseOutput {
	return o
}

func (o AzureFileshareProtectedItemExtendedInfoResponseOutput) ToAzureFileshareProtectedItemExtendedInfoResponsePtrOutput() AzureFileshareProtectedItemExtendedInfoResponsePtrOutput {
	return o.ToAzureFileshareProtectedItemExtendedInfoResponsePtrOutputWithContext(context.Background())
}

func (o AzureFileshareProtectedItemExtendedInfoResponseOutput) ToAzureFileshareProtectedItemExtendedInfoResponsePtrOutputWithContext(ctx context.Context) AzureFileshareProtectedItemExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemExtendedInfoResponse) *AzureFileshareProtectedItemExtendedInfoResponse {
		return &v
	}).(AzureFileshareProtectedItemExtendedInfoResponsePtrOutput)
}

// The oldest backup copy available for this item in the service.
func (o AzureFileshareProtectedItemExtendedInfoResponseOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemExtendedInfoResponse) *string { return v.OldestRecoveryPoint }).(pulumi.StringPtrOutput)
}

// Indicates consistency of policy object and policy applied to this backup item.
func (o AzureFileshareProtectedItemExtendedInfoResponseOutput) PolicyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemExtendedInfoResponse) *string { return v.PolicyState }).(pulumi.StringPtrOutput)
}

// Number of available backup copies associated with this backup item.
func (o AzureFileshareProtectedItemExtendedInfoResponseOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemExtendedInfoResponse) *int { return v.RecoveryPointCount }).(pulumi.IntPtrOutput)
}

// Indicates the state of this resource. Possible values are from enum ResourceState {Invalid, Active, SoftDeleted, Deleted}
func (o AzureFileshareProtectedItemExtendedInfoResponseOutput) ResourceState() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemExtendedInfoResponse) string { return v.ResourceState }).(pulumi.StringOutput)
}

// The resource state sync time for this backup item.
func (o AzureFileshareProtectedItemExtendedInfoResponseOutput) ResourceStateSyncTime() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemExtendedInfoResponse) string { return v.ResourceStateSyncTime }).(pulumi.StringOutput)
}

type AzureFileshareProtectedItemExtendedInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureFileshareProtectedItemExtendedInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFileshareProtectedItemExtendedInfoResponse)(nil)).Elem()
}

func (o AzureFileshareProtectedItemExtendedInfoResponsePtrOutput) ToAzureFileshareProtectedItemExtendedInfoResponsePtrOutput() AzureFileshareProtectedItemExtendedInfoResponsePtrOutput {
	return o
}

func (o AzureFileshareProtectedItemExtendedInfoResponsePtrOutput) ToAzureFileshareProtectedItemExtendedInfoResponsePtrOutputWithContext(ctx context.Context) AzureFileshareProtectedItemExtendedInfoResponsePtrOutput {
	return o
}

func (o AzureFileshareProtectedItemExtendedInfoResponsePtrOutput) Elem() AzureFileshareProtectedItemExtendedInfoResponseOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItemExtendedInfoResponse) AzureFileshareProtectedItemExtendedInfoResponse {
		return *v
	}).(AzureFileshareProtectedItemExtendedInfoResponseOutput)
}

// The oldest backup copy available for this item in the service.
func (o AzureFileshareProtectedItemExtendedInfoResponsePtrOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// Indicates consistency of policy object and policy applied to this backup item.
func (o AzureFileshareProtectedItemExtendedInfoResponsePtrOutput) PolicyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.PolicyState
	}).(pulumi.StringPtrOutput)
}

// Number of available backup copies associated with this backup item.
func (o AzureFileshareProtectedItemExtendedInfoResponsePtrOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItemExtendedInfoResponse) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointCount
	}).(pulumi.IntPtrOutput)
}

// Indicates the state of this resource. Possible values are from enum ResourceState {Invalid, Active, SoftDeleted, Deleted}
func (o AzureFileshareProtectedItemExtendedInfoResponsePtrOutput) ResourceState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceState
	}).(pulumi.StringPtrOutput)
}

// The resource state sync time for this backup item.
func (o AzureFileshareProtectedItemExtendedInfoResponsePtrOutput) ResourceStateSyncTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceStateSyncTime
	}).(pulumi.StringPtrOutput)
}

// Azure File Share workload-specific backup item.
type AzureFileshareProtectedItemResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information with this backup item.
	ExtendedInfo *AzureFileshareProtectedItemExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of the fileshare represented by this backup item.
	FriendlyName *string `pulumi:"friendlyName"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetailsResponse `pulumi:"kpisHealths"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// backup item type.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Type of workload this item represents.
	WorkloadType *string `pulumi:"workloadType"`
}

// Azure File Share workload-specific backup item.
type AzureFileshareProtectedItemResponseOutput struct{ *pulumi.OutputState }

func (AzureFileshareProtectedItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFileshareProtectedItemResponse)(nil)).Elem()
}

func (o AzureFileshareProtectedItemResponseOutput) ToAzureFileshareProtectedItemResponseOutput() AzureFileshareProtectedItemResponseOutput {
	return o
}

func (o AzureFileshareProtectedItemResponseOutput) ToAzureFileshareProtectedItemResponseOutputWithContext(ctx context.Context) AzureFileshareProtectedItemResponseOutput {
	return o
}

// Type of backup management for the backed up item.
func (o AzureFileshareProtectedItemResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureFileshareProtectedItemResponseOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureFileshareProtectedItemResponseOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureFileshareProtectedItemResponseOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureFileshareProtectedItemResponseOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureFileshareProtectedItemResponseOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Additional information with this backup item.
func (o AzureFileshareProtectedItemResponseOutput) ExtendedInfo() AzureFileshareProtectedItemExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *AzureFileshareProtectedItemExtendedInfoResponse {
		return v.ExtendedInfo
	}).(AzureFileshareProtectedItemExtendedInfoResponsePtrOutput)
}

// Friendly name of the fileshare represented by this backup item.
func (o AzureFileshareProtectedItemResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureFileshareProtectedItemResponseOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureFileshareProtectedItemResponseOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureFileshareProtectedItemResponseOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureFileshareProtectedItemResponseOutput) KpisHealths() KPIResourceHealthDetailsResponseMapOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) map[string]KPIResourceHealthDetailsResponse {
		return v.KpisHealths
	}).(KPIResourceHealthDetailsResponseMapOutput)
}

// Last backup operation status. Possible values: Healthy, Unhealthy.
func (o AzureFileshareProtectedItemResponseOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o AzureFileshareProtectedItemResponseOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *string { return v.LastBackupTime }).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureFileshareProtectedItemResponseOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureFileshareProtectedItemResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// backup item type.
func (o AzureFileshareProtectedItemResponseOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureFileshareProtectedItemResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// Backup status of this backup item.
func (o AzureFileshareProtectedItemResponseOutput) ProtectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *string { return v.ProtectionStatus }).(pulumi.StringPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureFileshareProtectedItemResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// Type of workload this item represents.
func (o AzureFileshareProtectedItemResponseOutput) WorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *string { return v.WorkloadType }).(pulumi.StringPtrOutput)
}

// Azure IaaS VM workload-specific Health Details.
type AzureIaaSVMHealthDetailsResponse struct {
	// Health Code
	Code int `pulumi:"code"`
	// Health Message
	Message string `pulumi:"message"`
	// Health Recommended Actions
	Recommendations []string `pulumi:"recommendations"`
	// Health Title
	Title string `pulumi:"title"`
}

// Azure IaaS VM workload-specific Health Details.
type AzureIaaSVMHealthDetailsResponseOutput struct{ *pulumi.OutputState }

func (AzureIaaSVMHealthDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSVMHealthDetailsResponse)(nil)).Elem()
}

func (o AzureIaaSVMHealthDetailsResponseOutput) ToAzureIaaSVMHealthDetailsResponseOutput() AzureIaaSVMHealthDetailsResponseOutput {
	return o
}

func (o AzureIaaSVMHealthDetailsResponseOutput) ToAzureIaaSVMHealthDetailsResponseOutputWithContext(ctx context.Context) AzureIaaSVMHealthDetailsResponseOutput {
	return o
}

// Health Code
func (o AzureIaaSVMHealthDetailsResponseOutput) Code() pulumi.IntOutput {
	return o.ApplyT(func(v AzureIaaSVMHealthDetailsResponse) int { return v.Code }).(pulumi.IntOutput)
}

// Health Message
func (o AzureIaaSVMHealthDetailsResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSVMHealthDetailsResponse) string { return v.Message }).(pulumi.StringOutput)
}

// Health Recommended Actions
func (o AzureIaaSVMHealthDetailsResponseOutput) Recommendations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureIaaSVMHealthDetailsResponse) []string { return v.Recommendations }).(pulumi.StringArrayOutput)
}

// Health Title
func (o AzureIaaSVMHealthDetailsResponseOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSVMHealthDetailsResponse) string { return v.Title }).(pulumi.StringOutput)
}

type AzureIaaSVMHealthDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureIaaSVMHealthDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureIaaSVMHealthDetailsResponse)(nil)).Elem()
}

func (o AzureIaaSVMHealthDetailsResponseArrayOutput) ToAzureIaaSVMHealthDetailsResponseArrayOutput() AzureIaaSVMHealthDetailsResponseArrayOutput {
	return o
}

func (o AzureIaaSVMHealthDetailsResponseArrayOutput) ToAzureIaaSVMHealthDetailsResponseArrayOutputWithContext(ctx context.Context) AzureIaaSVMHealthDetailsResponseArrayOutput {
	return o
}

func (o AzureIaaSVMHealthDetailsResponseArrayOutput) Index(i pulumi.IntInput) AzureIaaSVMHealthDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureIaaSVMHealthDetailsResponse {
		return vs[0].([]AzureIaaSVMHealthDetailsResponse)[vs[1].(int)]
	}).(AzureIaaSVMHealthDetailsResponseOutput)
}

// IaaS VM workload-specific backup item.
type AzureIaaSVMProtectedItem struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureIaaSVMProtectedItemExtendedInfo `pulumi:"extendedInfo"`
	// Extended Properties for Azure IaasVM Backup.
	ExtendedProperties *ExtendedProperties `pulumi:"extendedProperties"`
	// Friendly name of the VM represented by this backup item.
	FriendlyName *string `pulumi:"friendlyName"`
	// Health status of protected item.
	HealthStatus *string `pulumi:"healthStatus"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetails `pulumi:"kpisHealths"`
	// Last backup operation status.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Data ID of the protected item.
	ProtectedItemDataId *string `pulumi:"protectedItemDataId"`
	// backup item type.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Fully qualified ARM ID of the virtual machine represented by this item.
	VirtualMachineId *string `pulumi:"virtualMachineId"`
	// Type of workload this item represents.
	WorkloadType *string `pulumi:"workloadType"`
}

// AzureIaaSVMProtectedItemInput is an input type that accepts AzureIaaSVMProtectedItemArgs and AzureIaaSVMProtectedItemOutput values.
// You can construct a concrete instance of `AzureIaaSVMProtectedItemInput` via:
//
//          AzureIaaSVMProtectedItemArgs{...}
type AzureIaaSVMProtectedItemInput interface {
	pulumi.Input

	ToAzureIaaSVMProtectedItemOutput() AzureIaaSVMProtectedItemOutput
	ToAzureIaaSVMProtectedItemOutputWithContext(context.Context) AzureIaaSVMProtectedItemOutput
}

// IaaS VM workload-specific backup item.
type AzureIaaSVMProtectedItemArgs struct {
	// Type of backup management for the backed up item.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName pulumi.StringPtrInput `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode pulumi.StringPtrInput `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC pulumi.StringPtrInput `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining pulumi.StringPtrInput `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo AzureIaaSVMProtectedItemExtendedInfoPtrInput `pulumi:"extendedInfo"`
	// Extended Properties for Azure IaasVM Backup.
	ExtendedProperties ExtendedPropertiesPtrInput `pulumi:"extendedProperties"`
	// Friendly name of the VM represented by this backup item.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Health status of protected item.
	HealthStatus pulumi.StringPtrInput `pulumi:"healthStatus"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming pulumi.BoolPtrInput `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate pulumi.BoolPtrInput `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete pulumi.BoolPtrInput `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths KPIResourceHealthDetailsMapInput `pulumi:"kpisHealths"`
	// Last backup operation status.
	LastBackupStatus pulumi.StringPtrInput `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime pulumi.StringPtrInput `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint pulumi.StringPtrInput `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// Data ID of the protected item.
	ProtectedItemDataId pulumi.StringPtrInput `pulumi:"protectedItemDataId"`
	// backup item type.
	ProtectedItemType pulumi.StringInput `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState pulumi.StringPtrInput `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus pulumi.StringPtrInput `pulumi:"protectionStatus"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
	// Fully qualified ARM ID of the virtual machine represented by this item.
	VirtualMachineId pulumi.StringPtrInput `pulumi:"virtualMachineId"`
	// Type of workload this item represents.
	WorkloadType pulumi.StringPtrInput `pulumi:"workloadType"`
}

func (AzureIaaSVMProtectedItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSVMProtectedItem)(nil)).Elem()
}

func (i AzureIaaSVMProtectedItemArgs) ToAzureIaaSVMProtectedItemOutput() AzureIaaSVMProtectedItemOutput {
	return i.ToAzureIaaSVMProtectedItemOutputWithContext(context.Background())
}

func (i AzureIaaSVMProtectedItemArgs) ToAzureIaaSVMProtectedItemOutputWithContext(ctx context.Context) AzureIaaSVMProtectedItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSVMProtectedItemOutput)
}

// Additional information on Azure IaaS VM specific backup item.
type AzureIaaSVMProtectedItemExtendedInfo struct {
	// The oldest backup copy available for this backup item.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// Specifies if backup policy associated with the backup item is inconsistent.
	PolicyInconsistent *bool `pulumi:"policyInconsistent"`
	// Number of backup copies available for this backup item.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
}

// AzureIaaSVMProtectedItemExtendedInfoInput is an input type that accepts AzureIaaSVMProtectedItemExtendedInfoArgs and AzureIaaSVMProtectedItemExtendedInfoOutput values.
// You can construct a concrete instance of `AzureIaaSVMProtectedItemExtendedInfoInput` via:
//
//          AzureIaaSVMProtectedItemExtendedInfoArgs{...}
type AzureIaaSVMProtectedItemExtendedInfoInput interface {
	pulumi.Input

	ToAzureIaaSVMProtectedItemExtendedInfoOutput() AzureIaaSVMProtectedItemExtendedInfoOutput
	ToAzureIaaSVMProtectedItemExtendedInfoOutputWithContext(context.Context) AzureIaaSVMProtectedItemExtendedInfoOutput
}

// Additional information on Azure IaaS VM specific backup item.
type AzureIaaSVMProtectedItemExtendedInfoArgs struct {
	// The oldest backup copy available for this backup item.
	OldestRecoveryPoint pulumi.StringPtrInput `pulumi:"oldestRecoveryPoint"`
	// Specifies if backup policy associated with the backup item is inconsistent.
	PolicyInconsistent pulumi.BoolPtrInput `pulumi:"policyInconsistent"`
	// Number of backup copies available for this backup item.
	RecoveryPointCount pulumi.IntPtrInput `pulumi:"recoveryPointCount"`
}

func (AzureIaaSVMProtectedItemExtendedInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSVMProtectedItemExtendedInfo)(nil)).Elem()
}

func (i AzureIaaSVMProtectedItemExtendedInfoArgs) ToAzureIaaSVMProtectedItemExtendedInfoOutput() AzureIaaSVMProtectedItemExtendedInfoOutput {
	return i.ToAzureIaaSVMProtectedItemExtendedInfoOutputWithContext(context.Background())
}

func (i AzureIaaSVMProtectedItemExtendedInfoArgs) ToAzureIaaSVMProtectedItemExtendedInfoOutputWithContext(ctx context.Context) AzureIaaSVMProtectedItemExtendedInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSVMProtectedItemExtendedInfoOutput)
}

func (i AzureIaaSVMProtectedItemExtendedInfoArgs) ToAzureIaaSVMProtectedItemExtendedInfoPtrOutput() AzureIaaSVMProtectedItemExtendedInfoPtrOutput {
	return i.ToAzureIaaSVMProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (i AzureIaaSVMProtectedItemExtendedInfoArgs) ToAzureIaaSVMProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) AzureIaaSVMProtectedItemExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSVMProtectedItemExtendedInfoOutput).ToAzureIaaSVMProtectedItemExtendedInfoPtrOutputWithContext(ctx)
}

// AzureIaaSVMProtectedItemExtendedInfoPtrInput is an input type that accepts AzureIaaSVMProtectedItemExtendedInfoArgs, AzureIaaSVMProtectedItemExtendedInfoPtr and AzureIaaSVMProtectedItemExtendedInfoPtrOutput values.
// You can construct a concrete instance of `AzureIaaSVMProtectedItemExtendedInfoPtrInput` via:
//
//          AzureIaaSVMProtectedItemExtendedInfoArgs{...}
//
//  or:
//
//          nil
type AzureIaaSVMProtectedItemExtendedInfoPtrInput interface {
	pulumi.Input

	ToAzureIaaSVMProtectedItemExtendedInfoPtrOutput() AzureIaaSVMProtectedItemExtendedInfoPtrOutput
	ToAzureIaaSVMProtectedItemExtendedInfoPtrOutputWithContext(context.Context) AzureIaaSVMProtectedItemExtendedInfoPtrOutput
}

type azureIaaSVMProtectedItemExtendedInfoPtrType AzureIaaSVMProtectedItemExtendedInfoArgs

func AzureIaaSVMProtectedItemExtendedInfoPtr(v *AzureIaaSVMProtectedItemExtendedInfoArgs) AzureIaaSVMProtectedItemExtendedInfoPtrInput {
	return (*azureIaaSVMProtectedItemExtendedInfoPtrType)(v)
}

func (*azureIaaSVMProtectedItemExtendedInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureIaaSVMProtectedItemExtendedInfo)(nil)).Elem()
}

func (i *azureIaaSVMProtectedItemExtendedInfoPtrType) ToAzureIaaSVMProtectedItemExtendedInfoPtrOutput() AzureIaaSVMProtectedItemExtendedInfoPtrOutput {
	return i.ToAzureIaaSVMProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (i *azureIaaSVMProtectedItemExtendedInfoPtrType) ToAzureIaaSVMProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) AzureIaaSVMProtectedItemExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSVMProtectedItemExtendedInfoPtrOutput)
}

// Additional information on Azure IaaS VM specific backup item.
type AzureIaaSVMProtectedItemExtendedInfoResponse struct {
	// The oldest backup copy available for this backup item.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// Specifies if backup policy associated with the backup item is inconsistent.
	PolicyInconsistent *bool `pulumi:"policyInconsistent"`
	// Number of backup copies available for this backup item.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
}

// Additional information on Azure IaaS VM specific backup item.
type AzureIaaSVMProtectedItemExtendedInfoResponseOutput struct{ *pulumi.OutputState }

func (AzureIaaSVMProtectedItemExtendedInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSVMProtectedItemExtendedInfoResponse)(nil)).Elem()
}

func (o AzureIaaSVMProtectedItemExtendedInfoResponseOutput) ToAzureIaaSVMProtectedItemExtendedInfoResponseOutput() AzureIaaSVMProtectedItemExtendedInfoResponseOutput {
	return o
}

func (o AzureIaaSVMProtectedItemExtendedInfoResponseOutput) ToAzureIaaSVMProtectedItemExtendedInfoResponseOutputWithContext(ctx context.Context) AzureIaaSVMProtectedItemExtendedInfoResponseOutput {
	return o
}

func (o AzureIaaSVMProtectedItemExtendedInfoResponseOutput) ToAzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput() AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput {
	return o.ToAzureIaaSVMProtectedItemExtendedInfoResponsePtrOutputWithContext(context.Background())
}

func (o AzureIaaSVMProtectedItemExtendedInfoResponseOutput) ToAzureIaaSVMProtectedItemExtendedInfoResponsePtrOutputWithContext(ctx context.Context) AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemExtendedInfoResponse) *AzureIaaSVMProtectedItemExtendedInfoResponse {
		return &v
	}).(AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput)
}

// The oldest backup copy available for this backup item.
func (o AzureIaaSVMProtectedItemExtendedInfoResponseOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemExtendedInfoResponse) *string { return v.OldestRecoveryPoint }).(pulumi.StringPtrOutput)
}

// Specifies if backup policy associated with the backup item is inconsistent.
func (o AzureIaaSVMProtectedItemExtendedInfoResponseOutput) PolicyInconsistent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemExtendedInfoResponse) *bool { return v.PolicyInconsistent }).(pulumi.BoolPtrOutput)
}

// Number of backup copies available for this backup item.
func (o AzureIaaSVMProtectedItemExtendedInfoResponseOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemExtendedInfoResponse) *int { return v.RecoveryPointCount }).(pulumi.IntPtrOutput)
}

type AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureIaaSVMProtectedItemExtendedInfoResponse)(nil)).Elem()
}

func (o AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput) ToAzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput() AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput {
	return o
}

func (o AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput) ToAzureIaaSVMProtectedItemExtendedInfoResponsePtrOutputWithContext(ctx context.Context) AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput {
	return o
}

func (o AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput) Elem() AzureIaaSVMProtectedItemExtendedInfoResponseOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItemExtendedInfoResponse) AzureIaaSVMProtectedItemExtendedInfoResponse {
		return *v
	}).(AzureIaaSVMProtectedItemExtendedInfoResponseOutput)
}

// The oldest backup copy available for this backup item.
func (o AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// Specifies if backup policy associated with the backup item is inconsistent.
func (o AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput) PolicyInconsistent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItemExtendedInfoResponse) *bool {
		if v == nil {
			return nil
		}
		return v.PolicyInconsistent
	}).(pulumi.BoolPtrOutput)
}

// Number of backup copies available for this backup item.
func (o AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItemExtendedInfoResponse) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointCount
	}).(pulumi.IntPtrOutput)
}

// IaaS VM workload-specific backup item.
type AzureIaaSVMProtectedItemResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureIaaSVMProtectedItemExtendedInfoResponse `pulumi:"extendedInfo"`
	// Extended Properties for Azure IaasVM Backup.
	ExtendedProperties *ExtendedPropertiesResponse `pulumi:"extendedProperties"`
	// Friendly name of the VM represented by this backup item.
	FriendlyName *string `pulumi:"friendlyName"`
	// Health details on this backup item.
	HealthDetails []AzureIaaSVMHealthDetailsResponse `pulumi:"healthDetails"`
	// Health status of protected item.
	HealthStatus *string `pulumi:"healthStatus"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetailsResponse `pulumi:"kpisHealths"`
	// Last backup operation status.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Data ID of the protected item.
	ProtectedItemDataId *string `pulumi:"protectedItemDataId"`
	// backup item type.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Fully qualified ARM ID of the virtual machine represented by this item.
	VirtualMachineId *string `pulumi:"virtualMachineId"`
	// Type of workload this item represents.
	WorkloadType *string `pulumi:"workloadType"`
}

// IaaS VM workload-specific backup item.
type AzureIaaSVMProtectedItemResponseOutput struct{ *pulumi.OutputState }

func (AzureIaaSVMProtectedItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSVMProtectedItemResponse)(nil)).Elem()
}

func (o AzureIaaSVMProtectedItemResponseOutput) ToAzureIaaSVMProtectedItemResponseOutput() AzureIaaSVMProtectedItemResponseOutput {
	return o
}

func (o AzureIaaSVMProtectedItemResponseOutput) ToAzureIaaSVMProtectedItemResponseOutputWithContext(ctx context.Context) AzureIaaSVMProtectedItemResponseOutput {
	return o
}

// Type of backup management for the backed up item.
func (o AzureIaaSVMProtectedItemResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureIaaSVMProtectedItemResponseOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureIaaSVMProtectedItemResponseOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureIaaSVMProtectedItemResponseOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureIaaSVMProtectedItemResponseOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureIaaSVMProtectedItemResponseOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureIaaSVMProtectedItemResponseOutput) ExtendedInfo() AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *AzureIaaSVMProtectedItemExtendedInfoResponse {
		return v.ExtendedInfo
	}).(AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput)
}

// Extended Properties for Azure IaasVM Backup.
func (o AzureIaaSVMProtectedItemResponseOutput) ExtendedProperties() ExtendedPropertiesResponsePtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *ExtendedPropertiesResponse { return v.ExtendedProperties }).(ExtendedPropertiesResponsePtrOutput)
}

// Friendly name of the VM represented by this backup item.
func (o AzureIaaSVMProtectedItemResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Health details on this backup item.
func (o AzureIaaSVMProtectedItemResponseOutput) HealthDetails() AzureIaaSVMHealthDetailsResponseArrayOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) []AzureIaaSVMHealthDetailsResponse { return v.HealthDetails }).(AzureIaaSVMHealthDetailsResponseArrayOutput)
}

// Health status of protected item.
func (o AzureIaaSVMProtectedItemResponseOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureIaaSVMProtectedItemResponseOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureIaaSVMProtectedItemResponseOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureIaaSVMProtectedItemResponseOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureIaaSVMProtectedItemResponseOutput) KpisHealths() KPIResourceHealthDetailsResponseMapOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) map[string]KPIResourceHealthDetailsResponse {
		return v.KpisHealths
	}).(KPIResourceHealthDetailsResponseMapOutput)
}

// Last backup operation status.
func (o AzureIaaSVMProtectedItemResponseOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o AzureIaaSVMProtectedItemResponseOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *string { return v.LastBackupTime }).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureIaaSVMProtectedItemResponseOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureIaaSVMProtectedItemResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Data ID of the protected item.
func (o AzureIaaSVMProtectedItemResponseOutput) ProtectedItemDataId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *string { return v.ProtectedItemDataId }).(pulumi.StringPtrOutput)
}

// backup item type.
func (o AzureIaaSVMProtectedItemResponseOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureIaaSVMProtectedItemResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// Backup status of this backup item.
func (o AzureIaaSVMProtectedItemResponseOutput) ProtectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *string { return v.ProtectionStatus }).(pulumi.StringPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureIaaSVMProtectedItemResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// Fully qualified ARM ID of the virtual machine represented by this item.
func (o AzureIaaSVMProtectedItemResponseOutput) VirtualMachineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *string { return v.VirtualMachineId }).(pulumi.StringPtrOutput)
}

// Type of workload this item represents.
func (o AzureIaaSVMProtectedItemResponseOutput) WorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *string { return v.WorkloadType }).(pulumi.StringPtrOutput)
}

// Azure VM (also known as IaaS VM) workload-specific backup policy.
type AzureIaaSVMProtectionPolicy struct {
	// This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// The number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// The retention policy with the details on backup copy retention ranges.
	RetentionPolicy interface{} `pulumi:"retentionPolicy"`
	// The backup schedule specified as part of backup policy.
	SchedulePolicy interface{} `pulumi:"schedulePolicy"`
}

// AzureIaaSVMProtectionPolicyInput is an input type that accepts AzureIaaSVMProtectionPolicyArgs and AzureIaaSVMProtectionPolicyOutput values.
// You can construct a concrete instance of `AzureIaaSVMProtectionPolicyInput` via:
//
//          AzureIaaSVMProtectionPolicyArgs{...}
type AzureIaaSVMProtectionPolicyInput interface {
	pulumi.Input

	ToAzureIaaSVMProtectionPolicyOutput() AzureIaaSVMProtectionPolicyOutput
	ToAzureIaaSVMProtectionPolicyOutputWithContext(context.Context) AzureIaaSVMProtectionPolicyOutput
}

// Azure VM (also known as IaaS VM) workload-specific backup policy.
type AzureIaaSVMProtectionPolicyArgs struct {
	// This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// The number of items associated with this policy.
	ProtectedItemsCount pulumi.IntPtrInput `pulumi:"protectedItemsCount"`
	// The retention policy with the details on backup copy retention ranges.
	RetentionPolicy pulumi.Input `pulumi:"retentionPolicy"`
	// The backup schedule specified as part of backup policy.
	SchedulePolicy pulumi.Input `pulumi:"schedulePolicy"`
}

func (AzureIaaSVMProtectionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSVMProtectionPolicy)(nil)).Elem()
}

func (i AzureIaaSVMProtectionPolicyArgs) ToAzureIaaSVMProtectionPolicyOutput() AzureIaaSVMProtectionPolicyOutput {
	return i.ToAzureIaaSVMProtectionPolicyOutputWithContext(context.Background())
}

func (i AzureIaaSVMProtectionPolicyArgs) ToAzureIaaSVMProtectionPolicyOutputWithContext(ctx context.Context) AzureIaaSVMProtectionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSVMProtectionPolicyOutput)
}

// Azure VM (also known as IaaS VM) workload-specific backup policy.
type AzureIaaSVMProtectionPolicyResponse struct {
	// This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// The number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// The retention policy with the details on backup copy retention ranges.
	RetentionPolicy interface{} `pulumi:"retentionPolicy"`
	// The backup schedule specified as part of backup policy.
	SchedulePolicy interface{} `pulumi:"schedulePolicy"`
}

// Azure VM (also known as IaaS VM) workload-specific backup policy.
type AzureIaaSVMProtectionPolicyResponseOutput struct{ *pulumi.OutputState }

func (AzureIaaSVMProtectionPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSVMProtectionPolicyResponse)(nil)).Elem()
}

func (o AzureIaaSVMProtectionPolicyResponseOutput) ToAzureIaaSVMProtectionPolicyResponseOutput() AzureIaaSVMProtectionPolicyResponseOutput {
	return o
}

func (o AzureIaaSVMProtectionPolicyResponseOutput) ToAzureIaaSVMProtectionPolicyResponseOutputWithContext(ctx context.Context) AzureIaaSVMProtectionPolicyResponseOutput {
	return o
}

// This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
func (o AzureIaaSVMProtectionPolicyResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicyResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// The number of items associated with this policy.
func (o AzureIaaSVMProtectionPolicyResponseOutput) ProtectedItemsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicyResponse) *int { return v.ProtectedItemsCount }).(pulumi.IntPtrOutput)
}

// The retention policy with the details on backup copy retention ranges.
func (o AzureIaaSVMProtectionPolicyResponseOutput) RetentionPolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicyResponse) interface{} { return v.RetentionPolicy }).(pulumi.AnyOutput)
}

// The backup schedule specified as part of backup policy.
func (o AzureIaaSVMProtectionPolicyResponseOutput) SchedulePolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicyResponse) interface{} { return v.SchedulePolicy }).(pulumi.AnyOutput)
}

// Azure Recovery Services Vault specific protection intent item.
type AzureRecoveryServiceVaultProtectionIntent struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId *string `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// backup protectionIntent type.
	ProtectionIntentItemType *string `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// AzureRecoveryServiceVaultProtectionIntentInput is an input type that accepts AzureRecoveryServiceVaultProtectionIntentArgs and AzureRecoveryServiceVaultProtectionIntentOutput values.
// You can construct a concrete instance of `AzureRecoveryServiceVaultProtectionIntentInput` via:
//
//          AzureRecoveryServiceVaultProtectionIntentArgs{...}
type AzureRecoveryServiceVaultProtectionIntentInput interface {
	pulumi.Input

	ToAzureRecoveryServiceVaultProtectionIntentOutput() AzureRecoveryServiceVaultProtectionIntentOutput
	ToAzureRecoveryServiceVaultProtectionIntentOutputWithContext(context.Context) AzureRecoveryServiceVaultProtectionIntentOutput
}

// Azure Recovery Services Vault specific protection intent item.
type AzureRecoveryServiceVaultProtectionIntentArgs struct {
	// Type of backup management for the backed up item.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId pulumi.StringPtrInput `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// backup protectionIntent type.
	ProtectionIntentItemType pulumi.StringPtrInput `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState pulumi.StringPtrInput `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
}

func (AzureRecoveryServiceVaultProtectionIntentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureRecoveryServiceVaultProtectionIntent)(nil)).Elem()
}

func (i AzureRecoveryServiceVaultProtectionIntentArgs) ToAzureRecoveryServiceVaultProtectionIntentOutput() AzureRecoveryServiceVaultProtectionIntentOutput {
	return i.ToAzureRecoveryServiceVaultProtectionIntentOutputWithContext(context.Background())
}

func (i AzureRecoveryServiceVaultProtectionIntentArgs) ToAzureRecoveryServiceVaultProtectionIntentOutputWithContext(ctx context.Context) AzureRecoveryServiceVaultProtectionIntentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureRecoveryServiceVaultProtectionIntentOutput)
}

// Azure Recovery Services Vault specific protection intent item.
type AzureRecoveryServiceVaultProtectionIntentResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId *string `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// backup protectionIntent type.
	ProtectionIntentItemType *string `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// Azure Recovery Services Vault specific protection intent item.
type AzureRecoveryServiceVaultProtectionIntentResponseOutput struct{ *pulumi.OutputState }

func (AzureRecoveryServiceVaultProtectionIntentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureRecoveryServiceVaultProtectionIntentResponse)(nil)).Elem()
}

func (o AzureRecoveryServiceVaultProtectionIntentResponseOutput) ToAzureRecoveryServiceVaultProtectionIntentResponseOutput() AzureRecoveryServiceVaultProtectionIntentResponseOutput {
	return o
}

func (o AzureRecoveryServiceVaultProtectionIntentResponseOutput) ToAzureRecoveryServiceVaultProtectionIntentResponseOutputWithContext(ctx context.Context) AzureRecoveryServiceVaultProtectionIntentResponseOutput {
	return o
}

// Type of backup management for the backed up item.
func (o AzureRecoveryServiceVaultProtectionIntentResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureRecoveryServiceVaultProtectionIntentResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
func (o AzureRecoveryServiceVaultProtectionIntentResponseOutput) ItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureRecoveryServiceVaultProtectionIntentResponse) *string { return v.ItemId }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureRecoveryServiceVaultProtectionIntentResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureRecoveryServiceVaultProtectionIntentResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// backup protectionIntent type.
func (o AzureRecoveryServiceVaultProtectionIntentResponseOutput) ProtectionIntentItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureRecoveryServiceVaultProtectionIntentResponse) *string { return v.ProtectionIntentItemType }).(pulumi.StringPtrOutput)
}

// Backup state of this backup item.
func (o AzureRecoveryServiceVaultProtectionIntentResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureRecoveryServiceVaultProtectionIntentResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureRecoveryServiceVaultProtectionIntentResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureRecoveryServiceVaultProtectionIntentResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// IaaS VM specific backup protection intent item.
type AzureResourceProtectionIntent struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Friendly name of the VM represented by this backup item.
	FriendlyName *string `pulumi:"friendlyName"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId *string `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// backup protectionIntent type.
	ProtectionIntentItemType *string `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// AzureResourceProtectionIntentInput is an input type that accepts AzureResourceProtectionIntentArgs and AzureResourceProtectionIntentOutput values.
// You can construct a concrete instance of `AzureResourceProtectionIntentInput` via:
//
//          AzureResourceProtectionIntentArgs{...}
type AzureResourceProtectionIntentInput interface {
	pulumi.Input

	ToAzureResourceProtectionIntentOutput() AzureResourceProtectionIntentOutput
	ToAzureResourceProtectionIntentOutputWithContext(context.Context) AzureResourceProtectionIntentOutput
}

// IaaS VM specific backup protection intent item.
type AzureResourceProtectionIntentArgs struct {
	// Type of backup management for the backed up item.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// Friendly name of the VM represented by this backup item.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId pulumi.StringPtrInput `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// backup protectionIntent type.
	ProtectionIntentItemType pulumi.StringPtrInput `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState pulumi.StringPtrInput `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
}

func (AzureResourceProtectionIntentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureResourceProtectionIntent)(nil)).Elem()
}

func (i AzureResourceProtectionIntentArgs) ToAzureResourceProtectionIntentOutput() AzureResourceProtectionIntentOutput {
	return i.ToAzureResourceProtectionIntentOutputWithContext(context.Background())
}

func (i AzureResourceProtectionIntentArgs) ToAzureResourceProtectionIntentOutputWithContext(ctx context.Context) AzureResourceProtectionIntentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureResourceProtectionIntentOutput)
}

// IaaS VM specific backup protection intent item.
type AzureResourceProtectionIntentResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Friendly name of the VM represented by this backup item.
	FriendlyName *string `pulumi:"friendlyName"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId *string `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// backup protectionIntent type.
	ProtectionIntentItemType *string `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// IaaS VM specific backup protection intent item.
type AzureResourceProtectionIntentResponseOutput struct{ *pulumi.OutputState }

func (AzureResourceProtectionIntentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureResourceProtectionIntentResponse)(nil)).Elem()
}

func (o AzureResourceProtectionIntentResponseOutput) ToAzureResourceProtectionIntentResponseOutput() AzureResourceProtectionIntentResponseOutput {
	return o
}

func (o AzureResourceProtectionIntentResponseOutput) ToAzureResourceProtectionIntentResponseOutputWithContext(ctx context.Context) AzureResourceProtectionIntentResponseOutput {
	return o
}

// Type of backup management for the backed up item.
func (o AzureResourceProtectionIntentResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureResourceProtectionIntentResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Friendly name of the VM represented by this backup item.
func (o AzureResourceProtectionIntentResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureResourceProtectionIntentResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
func (o AzureResourceProtectionIntentResponseOutput) ItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureResourceProtectionIntentResponse) *string { return v.ItemId }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureResourceProtectionIntentResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureResourceProtectionIntentResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// backup protectionIntent type.
func (o AzureResourceProtectionIntentResponseOutput) ProtectionIntentItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureResourceProtectionIntentResponse) *string { return v.ProtectionIntentItemType }).(pulumi.StringPtrOutput)
}

// Backup state of this backup item.
func (o AzureResourceProtectionIntentResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureResourceProtectionIntentResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureResourceProtectionIntentResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureResourceProtectionIntentResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// Azure Sql workload-specific container.
type AzureSqlContainer struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	ContainerType *string `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
}

// AzureSqlContainerInput is an input type that accepts AzureSqlContainerArgs and AzureSqlContainerOutput values.
// You can construct a concrete instance of `AzureSqlContainerInput` via:
//
//          AzureSqlContainerArgs{...}
type AzureSqlContainerInput interface {
	pulumi.Input

	ToAzureSqlContainerOutput() AzureSqlContainerOutput
	ToAzureSqlContainerOutputWithContext(context.Context) AzureSqlContainerOutput
}

// Azure Sql workload-specific container.
type AzureSqlContainerArgs struct {
	// Type of backup management for the container.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	ContainerType pulumi.StringPtrInput `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus pulumi.StringPtrInput `pulumi:"healthStatus"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus pulumi.StringPtrInput `pulumi:"registrationStatus"`
}

func (AzureSqlContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlContainer)(nil)).Elem()
}

func (i AzureSqlContainerArgs) ToAzureSqlContainerOutput() AzureSqlContainerOutput {
	return i.ToAzureSqlContainerOutputWithContext(context.Background())
}

func (i AzureSqlContainerArgs) ToAzureSqlContainerOutputWithContext(ctx context.Context) AzureSqlContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlContainerOutput)
}

// Azure Sql workload-specific container.
type AzureSqlContainerResponse struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	ContainerType *string `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
}

// Azure Sql workload-specific container.
type AzureSqlContainerResponseOutput struct{ *pulumi.OutputState }

func (AzureSqlContainerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlContainerResponse)(nil)).Elem()
}

func (o AzureSqlContainerResponseOutput) ToAzureSqlContainerResponseOutput() AzureSqlContainerResponseOutput {
	return o
}

func (o AzureSqlContainerResponseOutput) ToAzureSqlContainerResponseOutputWithContext(ctx context.Context) AzureSqlContainerResponseOutput {
	return o
}

// Type of backup management for the container.
func (o AzureSqlContainerResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlContainerResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
func (o AzureSqlContainerResponseOutput) ContainerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlContainerResponse) *string { return v.ContainerType }).(pulumi.StringPtrOutput)
}

// Friendly name of the container.
func (o AzureSqlContainerResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlContainerResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureSqlContainerResponseOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlContainerResponse) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureSqlContainerResponseOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlContainerResponse) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// Azure SQL workload-specific backup item.
type AzureSqlProtectedItem struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureSqlProtectedItemExtendedInfo `pulumi:"extendedInfo"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Internal ID of a backup item. Used by Azure SQL Backup engine to contact Recovery Services.
	ProtectedItemDataId *string `pulumi:"protectedItemDataId"`
	// backup item type.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of the backed up item.
	ProtectionState *string `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Type of workload this item represents.
	WorkloadType *string `pulumi:"workloadType"`
}

// AzureSqlProtectedItemInput is an input type that accepts AzureSqlProtectedItemArgs and AzureSqlProtectedItemOutput values.
// You can construct a concrete instance of `AzureSqlProtectedItemInput` via:
//
//          AzureSqlProtectedItemArgs{...}
type AzureSqlProtectedItemInput interface {
	pulumi.Input

	ToAzureSqlProtectedItemOutput() AzureSqlProtectedItemOutput
	ToAzureSqlProtectedItemOutputWithContext(context.Context) AzureSqlProtectedItemOutput
}

// Azure SQL workload-specific backup item.
type AzureSqlProtectedItemArgs struct {
	// Type of backup management for the backed up item.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName pulumi.StringPtrInput `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode pulumi.StringPtrInput `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC pulumi.StringPtrInput `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining pulumi.StringPtrInput `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo AzureSqlProtectedItemExtendedInfoPtrInput `pulumi:"extendedInfo"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming pulumi.BoolPtrInput `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate pulumi.BoolPtrInput `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete pulumi.BoolPtrInput `pulumi:"isScheduledForDeferredDelete"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint pulumi.StringPtrInput `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// Internal ID of a backup item. Used by Azure SQL Backup engine to contact Recovery Services.
	ProtectedItemDataId pulumi.StringPtrInput `pulumi:"protectedItemDataId"`
	// backup item type.
	ProtectedItemType pulumi.StringInput `pulumi:"protectedItemType"`
	// Backup state of the backed up item.
	ProtectionState pulumi.StringPtrInput `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
	// Type of workload this item represents.
	WorkloadType pulumi.StringPtrInput `pulumi:"workloadType"`
}

func (AzureSqlProtectedItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlProtectedItem)(nil)).Elem()
}

func (i AzureSqlProtectedItemArgs) ToAzureSqlProtectedItemOutput() AzureSqlProtectedItemOutput {
	return i.ToAzureSqlProtectedItemOutputWithContext(context.Background())
}

func (i AzureSqlProtectedItemArgs) ToAzureSqlProtectedItemOutputWithContext(ctx context.Context) AzureSqlProtectedItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlProtectedItemOutput)
}

// Additional information on Azure Sql specific protected item.
type AzureSqlProtectedItemExtendedInfo struct {
	// The oldest backup copy available for this item in the service.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// State of the backup policy associated with this backup item.
	PolicyState *string `pulumi:"policyState"`
	// Number of available backup copies associated with this backup item.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
}

// AzureSqlProtectedItemExtendedInfoInput is an input type that accepts AzureSqlProtectedItemExtendedInfoArgs and AzureSqlProtectedItemExtendedInfoOutput values.
// You can construct a concrete instance of `AzureSqlProtectedItemExtendedInfoInput` via:
//
//          AzureSqlProtectedItemExtendedInfoArgs{...}
type AzureSqlProtectedItemExtendedInfoInput interface {
	pulumi.Input

	ToAzureSqlProtectedItemExtendedInfoOutput() AzureSqlProtectedItemExtendedInfoOutput
	ToAzureSqlProtectedItemExtendedInfoOutputWithContext(context.Context) AzureSqlProtectedItemExtendedInfoOutput
}

// Additional information on Azure Sql specific protected item.
type AzureSqlProtectedItemExtendedInfoArgs struct {
	// The oldest backup copy available for this item in the service.
	OldestRecoveryPoint pulumi.StringPtrInput `pulumi:"oldestRecoveryPoint"`
	// State of the backup policy associated with this backup item.
	PolicyState pulumi.StringPtrInput `pulumi:"policyState"`
	// Number of available backup copies associated with this backup item.
	RecoveryPointCount pulumi.IntPtrInput `pulumi:"recoveryPointCount"`
}

func (AzureSqlProtectedItemExtendedInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlProtectedItemExtendedInfo)(nil)).Elem()
}

func (i AzureSqlProtectedItemExtendedInfoArgs) ToAzureSqlProtectedItemExtendedInfoOutput() AzureSqlProtectedItemExtendedInfoOutput {
	return i.ToAzureSqlProtectedItemExtendedInfoOutputWithContext(context.Background())
}

func (i AzureSqlProtectedItemExtendedInfoArgs) ToAzureSqlProtectedItemExtendedInfoOutputWithContext(ctx context.Context) AzureSqlProtectedItemExtendedInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlProtectedItemExtendedInfoOutput)
}

func (i AzureSqlProtectedItemExtendedInfoArgs) ToAzureSqlProtectedItemExtendedInfoPtrOutput() AzureSqlProtectedItemExtendedInfoPtrOutput {
	return i.ToAzureSqlProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (i AzureSqlProtectedItemExtendedInfoArgs) ToAzureSqlProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) AzureSqlProtectedItemExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlProtectedItemExtendedInfoOutput).ToAzureSqlProtectedItemExtendedInfoPtrOutputWithContext(ctx)
}

// AzureSqlProtectedItemExtendedInfoPtrInput is an input type that accepts AzureSqlProtectedItemExtendedInfoArgs, AzureSqlProtectedItemExtendedInfoPtr and AzureSqlProtectedItemExtendedInfoPtrOutput values.
// You can construct a concrete instance of `AzureSqlProtectedItemExtendedInfoPtrInput` via:
//
//          AzureSqlProtectedItemExtendedInfoArgs{...}
//
//  or:
//
//          nil
type AzureSqlProtectedItemExtendedInfoPtrInput interface {
	pulumi.Input

	ToAzureSqlProtectedItemExtendedInfoPtrOutput() AzureSqlProtectedItemExtendedInfoPtrOutput
	ToAzureSqlProtectedItemExtendedInfoPtrOutputWithContext(context.Context) AzureSqlProtectedItemExtendedInfoPtrOutput
}

type azureSqlProtectedItemExtendedInfoPtrType AzureSqlProtectedItemExtendedInfoArgs

func AzureSqlProtectedItemExtendedInfoPtr(v *AzureSqlProtectedItemExtendedInfoArgs) AzureSqlProtectedItemExtendedInfoPtrInput {
	return (*azureSqlProtectedItemExtendedInfoPtrType)(v)
}

func (*azureSqlProtectedItemExtendedInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlProtectedItemExtendedInfo)(nil)).Elem()
}

func (i *azureSqlProtectedItemExtendedInfoPtrType) ToAzureSqlProtectedItemExtendedInfoPtrOutput() AzureSqlProtectedItemExtendedInfoPtrOutput {
	return i.ToAzureSqlProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (i *azureSqlProtectedItemExtendedInfoPtrType) ToAzureSqlProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) AzureSqlProtectedItemExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlProtectedItemExtendedInfoPtrOutput)
}

// Additional information on Azure Sql specific protected item.
type AzureSqlProtectedItemExtendedInfoResponse struct {
	// The oldest backup copy available for this item in the service.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// State of the backup policy associated with this backup item.
	PolicyState *string `pulumi:"policyState"`
	// Number of available backup copies associated with this backup item.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
}

// Additional information on Azure Sql specific protected item.
type AzureSqlProtectedItemExtendedInfoResponseOutput struct{ *pulumi.OutputState }

func (AzureSqlProtectedItemExtendedInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlProtectedItemExtendedInfoResponse)(nil)).Elem()
}

func (o AzureSqlProtectedItemExtendedInfoResponseOutput) ToAzureSqlProtectedItemExtendedInfoResponseOutput() AzureSqlProtectedItemExtendedInfoResponseOutput {
	return o
}

func (o AzureSqlProtectedItemExtendedInfoResponseOutput) ToAzureSqlProtectedItemExtendedInfoResponseOutputWithContext(ctx context.Context) AzureSqlProtectedItemExtendedInfoResponseOutput {
	return o
}

func (o AzureSqlProtectedItemExtendedInfoResponseOutput) ToAzureSqlProtectedItemExtendedInfoResponsePtrOutput() AzureSqlProtectedItemExtendedInfoResponsePtrOutput {
	return o.ToAzureSqlProtectedItemExtendedInfoResponsePtrOutputWithContext(context.Background())
}

func (o AzureSqlProtectedItemExtendedInfoResponseOutput) ToAzureSqlProtectedItemExtendedInfoResponsePtrOutputWithContext(ctx context.Context) AzureSqlProtectedItemExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemExtendedInfoResponse) *AzureSqlProtectedItemExtendedInfoResponse {
		return &v
	}).(AzureSqlProtectedItemExtendedInfoResponsePtrOutput)
}

// The oldest backup copy available for this item in the service.
func (o AzureSqlProtectedItemExtendedInfoResponseOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemExtendedInfoResponse) *string { return v.OldestRecoveryPoint }).(pulumi.StringPtrOutput)
}

// State of the backup policy associated with this backup item.
func (o AzureSqlProtectedItemExtendedInfoResponseOutput) PolicyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemExtendedInfoResponse) *string { return v.PolicyState }).(pulumi.StringPtrOutput)
}

// Number of available backup copies associated with this backup item.
func (o AzureSqlProtectedItemExtendedInfoResponseOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemExtendedInfoResponse) *int { return v.RecoveryPointCount }).(pulumi.IntPtrOutput)
}

type AzureSqlProtectedItemExtendedInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureSqlProtectedItemExtendedInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlProtectedItemExtendedInfoResponse)(nil)).Elem()
}

func (o AzureSqlProtectedItemExtendedInfoResponsePtrOutput) ToAzureSqlProtectedItemExtendedInfoResponsePtrOutput() AzureSqlProtectedItemExtendedInfoResponsePtrOutput {
	return o
}

func (o AzureSqlProtectedItemExtendedInfoResponsePtrOutput) ToAzureSqlProtectedItemExtendedInfoResponsePtrOutputWithContext(ctx context.Context) AzureSqlProtectedItemExtendedInfoResponsePtrOutput {
	return o
}

func (o AzureSqlProtectedItemExtendedInfoResponsePtrOutput) Elem() AzureSqlProtectedItemExtendedInfoResponseOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItemExtendedInfoResponse) AzureSqlProtectedItemExtendedInfoResponse {
		return *v
	}).(AzureSqlProtectedItemExtendedInfoResponseOutput)
}

// The oldest backup copy available for this item in the service.
func (o AzureSqlProtectedItemExtendedInfoResponsePtrOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// State of the backup policy associated with this backup item.
func (o AzureSqlProtectedItemExtendedInfoResponsePtrOutput) PolicyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.PolicyState
	}).(pulumi.StringPtrOutput)
}

// Number of available backup copies associated with this backup item.
func (o AzureSqlProtectedItemExtendedInfoResponsePtrOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItemExtendedInfoResponse) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointCount
	}).(pulumi.IntPtrOutput)
}

// Azure SQL workload-specific backup item.
type AzureSqlProtectedItemResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureSqlProtectedItemExtendedInfoResponse `pulumi:"extendedInfo"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Internal ID of a backup item. Used by Azure SQL Backup engine to contact Recovery Services.
	ProtectedItemDataId *string `pulumi:"protectedItemDataId"`
	// backup item type.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of the backed up item.
	ProtectionState *string `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Type of workload this item represents.
	WorkloadType *string `pulumi:"workloadType"`
}

// Azure SQL workload-specific backup item.
type AzureSqlProtectedItemResponseOutput struct{ *pulumi.OutputState }

func (AzureSqlProtectedItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlProtectedItemResponse)(nil)).Elem()
}

func (o AzureSqlProtectedItemResponseOutput) ToAzureSqlProtectedItemResponseOutput() AzureSqlProtectedItemResponseOutput {
	return o
}

func (o AzureSqlProtectedItemResponseOutput) ToAzureSqlProtectedItemResponseOutputWithContext(ctx context.Context) AzureSqlProtectedItemResponseOutput {
	return o
}

// Type of backup management for the backed up item.
func (o AzureSqlProtectedItemResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureSqlProtectedItemResponseOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureSqlProtectedItemResponseOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureSqlProtectedItemResponseOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureSqlProtectedItemResponseOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureSqlProtectedItemResponseOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureSqlProtectedItemResponseOutput) ExtendedInfo() AzureSqlProtectedItemExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *AzureSqlProtectedItemExtendedInfoResponse {
		return v.ExtendedInfo
	}).(AzureSqlProtectedItemExtendedInfoResponsePtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureSqlProtectedItemResponseOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureSqlProtectedItemResponseOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureSqlProtectedItemResponseOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureSqlProtectedItemResponseOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureSqlProtectedItemResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Internal ID of a backup item. Used by Azure SQL Backup engine to contact Recovery Services.
func (o AzureSqlProtectedItemResponseOutput) ProtectedItemDataId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *string { return v.ProtectedItemDataId }).(pulumi.StringPtrOutput)
}

// backup item type.
func (o AzureSqlProtectedItemResponseOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of the backed up item.
func (o AzureSqlProtectedItemResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureSqlProtectedItemResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// Type of workload this item represents.
func (o AzureSqlProtectedItemResponseOutput) WorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *string { return v.WorkloadType }).(pulumi.StringPtrOutput)
}

//  The Azure SQL workload-specific backup policy.
type AzureSqlProtectionPolicy struct {
	// This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// The number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// The retention policy details.
	RetentionPolicy interface{} `pulumi:"retentionPolicy"`
}

// AzureSqlProtectionPolicyInput is an input type that accepts AzureSqlProtectionPolicyArgs and AzureSqlProtectionPolicyOutput values.
// You can construct a concrete instance of `AzureSqlProtectionPolicyInput` via:
//
//          AzureSqlProtectionPolicyArgs{...}
type AzureSqlProtectionPolicyInput interface {
	pulumi.Input

	ToAzureSqlProtectionPolicyOutput() AzureSqlProtectionPolicyOutput
	ToAzureSqlProtectionPolicyOutputWithContext(context.Context) AzureSqlProtectionPolicyOutput
}

//  The Azure SQL workload-specific backup policy.
type AzureSqlProtectionPolicyArgs struct {
	// This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// The number of items associated with this policy.
	ProtectedItemsCount pulumi.IntPtrInput `pulumi:"protectedItemsCount"`
	// The retention policy details.
	RetentionPolicy pulumi.Input `pulumi:"retentionPolicy"`
}

func (AzureSqlProtectionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlProtectionPolicy)(nil)).Elem()
}

func (i AzureSqlProtectionPolicyArgs) ToAzureSqlProtectionPolicyOutput() AzureSqlProtectionPolicyOutput {
	return i.ToAzureSqlProtectionPolicyOutputWithContext(context.Background())
}

func (i AzureSqlProtectionPolicyArgs) ToAzureSqlProtectionPolicyOutputWithContext(ctx context.Context) AzureSqlProtectionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlProtectionPolicyOutput)
}

//  The Azure SQL workload-specific backup policy.
type AzureSqlProtectionPolicyResponse struct {
	// This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// The number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// The retention policy details.
	RetentionPolicy interface{} `pulumi:"retentionPolicy"`
}

//  The Azure SQL workload-specific backup policy.
type AzureSqlProtectionPolicyResponseOutput struct{ *pulumi.OutputState }

func (AzureSqlProtectionPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlProtectionPolicyResponse)(nil)).Elem()
}

func (o AzureSqlProtectionPolicyResponseOutput) ToAzureSqlProtectionPolicyResponseOutput() AzureSqlProtectionPolicyResponseOutput {
	return o
}

func (o AzureSqlProtectionPolicyResponseOutput) ToAzureSqlProtectionPolicyResponseOutputWithContext(ctx context.Context) AzureSqlProtectionPolicyResponseOutput {
	return o
}

// This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
func (o AzureSqlProtectionPolicyResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectionPolicyResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// The number of items associated with this policy.
func (o AzureSqlProtectionPolicyResponseOutput) ProtectedItemsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectionPolicyResponse) *int { return v.ProtectedItemsCount }).(pulumi.IntPtrOutput)
}

// The retention policy details.
func (o AzureSqlProtectionPolicyResponseOutput) RetentionPolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSqlProtectionPolicyResponse) interface{} { return v.RetentionPolicy }).(pulumi.AnyOutput)
}

// Azure Storage Account workload-specific container.
type AzureStorageContainer struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	ContainerType *string `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Number of items backed up in this container.
	ProtectedItemCount *int `pulumi:"protectedItemCount"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// Resource group name of Recovery Services Vault.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// Fully qualified ARM url.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Storage account version.
	StorageAccountVersion *string `pulumi:"storageAccountVersion"`
}

// AzureStorageContainerInput is an input type that accepts AzureStorageContainerArgs and AzureStorageContainerOutput values.
// You can construct a concrete instance of `AzureStorageContainerInput` via:
//
//          AzureStorageContainerArgs{...}
type AzureStorageContainerInput interface {
	pulumi.Input

	ToAzureStorageContainerOutput() AzureStorageContainerOutput
	ToAzureStorageContainerOutputWithContext(context.Context) AzureStorageContainerOutput
}

// Azure Storage Account workload-specific container.
type AzureStorageContainerArgs struct {
	// Type of backup management for the container.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	ContainerType pulumi.StringPtrInput `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus pulumi.StringPtrInput `pulumi:"healthStatus"`
	// Number of items backed up in this container.
	ProtectedItemCount pulumi.IntPtrInput `pulumi:"protectedItemCount"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus pulumi.StringPtrInput `pulumi:"registrationStatus"`
	// Resource group name of Recovery Services Vault.
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	// Fully qualified ARM url.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
	// Storage account version.
	StorageAccountVersion pulumi.StringPtrInput `pulumi:"storageAccountVersion"`
}

func (AzureStorageContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStorageContainer)(nil)).Elem()
}

func (i AzureStorageContainerArgs) ToAzureStorageContainerOutput() AzureStorageContainerOutput {
	return i.ToAzureStorageContainerOutputWithContext(context.Background())
}

func (i AzureStorageContainerArgs) ToAzureStorageContainerOutputWithContext(ctx context.Context) AzureStorageContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureStorageContainerOutput)
}

// Azure Storage Account workload-specific container.
type AzureStorageContainerResponse struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	ContainerType *string `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Number of items backed up in this container.
	ProtectedItemCount *int `pulumi:"protectedItemCount"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// Resource group name of Recovery Services Vault.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// Fully qualified ARM url.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Storage account version.
	StorageAccountVersion *string `pulumi:"storageAccountVersion"`
}

// Azure Storage Account workload-specific container.
type AzureStorageContainerResponseOutput struct{ *pulumi.OutputState }

func (AzureStorageContainerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStorageContainerResponse)(nil)).Elem()
}

func (o AzureStorageContainerResponseOutput) ToAzureStorageContainerResponseOutput() AzureStorageContainerResponseOutput {
	return o
}

func (o AzureStorageContainerResponseOutput) ToAzureStorageContainerResponseOutputWithContext(ctx context.Context) AzureStorageContainerResponseOutput {
	return o
}

// Type of backup management for the container.
func (o AzureStorageContainerResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageContainerResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
func (o AzureStorageContainerResponseOutput) ContainerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageContainerResponse) *string { return v.ContainerType }).(pulumi.StringPtrOutput)
}

// Friendly name of the container.
func (o AzureStorageContainerResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageContainerResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureStorageContainerResponseOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageContainerResponse) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Number of items backed up in this container.
func (o AzureStorageContainerResponseOutput) ProtectedItemCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureStorageContainerResponse) *int { return v.ProtectedItemCount }).(pulumi.IntPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureStorageContainerResponseOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageContainerResponse) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// Resource group name of Recovery Services Vault.
func (o AzureStorageContainerResponseOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageContainerResponse) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// Fully qualified ARM url.
func (o AzureStorageContainerResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageContainerResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// Storage account version.
func (o AzureStorageContainerResponseOutput) StorageAccountVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageContainerResponse) *string { return v.StorageAccountVersion }).(pulumi.StringPtrOutput)
}

// Create network mappings input properties/behavior specific to Azure to Azure Network mapping.
type AzureToAzureCreateNetworkMappingInput struct {
	// The instance type.
	InstanceType *string `pulumi:"instanceType"`
	// The primary azure vnet Id.
	PrimaryNetworkId *string `pulumi:"primaryNetworkId"`
}

// AzureToAzureCreateNetworkMappingInputInput is an input type that accepts AzureToAzureCreateNetworkMappingInputArgs and AzureToAzureCreateNetworkMappingInputOutput values.
// You can construct a concrete instance of `AzureToAzureCreateNetworkMappingInputInput` via:
//
//          AzureToAzureCreateNetworkMappingInputArgs{...}
type AzureToAzureCreateNetworkMappingInputInput interface {
	pulumi.Input

	ToAzureToAzureCreateNetworkMappingInputOutput() AzureToAzureCreateNetworkMappingInputOutput
	ToAzureToAzureCreateNetworkMappingInputOutputWithContext(context.Context) AzureToAzureCreateNetworkMappingInputOutput
}

// Create network mappings input properties/behavior specific to Azure to Azure Network mapping.
type AzureToAzureCreateNetworkMappingInputArgs struct {
	// The instance type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// The primary azure vnet Id.
	PrimaryNetworkId pulumi.StringPtrInput `pulumi:"primaryNetworkId"`
}

func (AzureToAzureCreateNetworkMappingInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureToAzureCreateNetworkMappingInput)(nil)).Elem()
}

func (i AzureToAzureCreateNetworkMappingInputArgs) ToAzureToAzureCreateNetworkMappingInputOutput() AzureToAzureCreateNetworkMappingInputOutput {
	return i.ToAzureToAzureCreateNetworkMappingInputOutputWithContext(context.Background())
}

func (i AzureToAzureCreateNetworkMappingInputArgs) ToAzureToAzureCreateNetworkMappingInputOutputWithContext(ctx context.Context) AzureToAzureCreateNetworkMappingInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureToAzureCreateNetworkMappingInputOutput)
}

// A2A Network Mapping fabric specific settings.
type AzureToAzureNetworkMappingSettingsResponse struct {
	// Gets the Instance type.
	InstanceType string `pulumi:"instanceType"`
	// The primary fabric location.
	PrimaryFabricLocation *string `pulumi:"primaryFabricLocation"`
	// The recovery fabric location.
	RecoveryFabricLocation *string `pulumi:"recoveryFabricLocation"`
}

// A2A Network Mapping fabric specific settings.
type AzureToAzureNetworkMappingSettingsResponseOutput struct{ *pulumi.OutputState }

func (AzureToAzureNetworkMappingSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureToAzureNetworkMappingSettingsResponse)(nil)).Elem()
}

func (o AzureToAzureNetworkMappingSettingsResponseOutput) ToAzureToAzureNetworkMappingSettingsResponseOutput() AzureToAzureNetworkMappingSettingsResponseOutput {
	return o
}

func (o AzureToAzureNetworkMappingSettingsResponseOutput) ToAzureToAzureNetworkMappingSettingsResponseOutputWithContext(ctx context.Context) AzureToAzureNetworkMappingSettingsResponseOutput {
	return o
}

// Gets the Instance type.
func (o AzureToAzureNetworkMappingSettingsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureToAzureNetworkMappingSettingsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The primary fabric location.
func (o AzureToAzureNetworkMappingSettingsResponseOutput) PrimaryFabricLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureToAzureNetworkMappingSettingsResponse) *string { return v.PrimaryFabricLocation }).(pulumi.StringPtrOutput)
}

// The recovery fabric location.
func (o AzureToAzureNetworkMappingSettingsResponseOutput) RecoveryFabricLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureToAzureNetworkMappingSettingsResponse) *string { return v.RecoveryFabricLocation }).(pulumi.StringPtrOutput)
}

// Azure to Azure VM synced configuration details.
type AzureToAzureVmSyncedConfigDetailsResponse struct {
	// The Azure VM input endpoints.
	InputEndpoints []InputEndpointResponse `pulumi:"inputEndpoints"`
	// The Azure VM tags.
	Tags map[string]string `pulumi:"tags"`
}

// Azure to Azure VM synced configuration details.
type AzureToAzureVmSyncedConfigDetailsResponseOutput struct{ *pulumi.OutputState }

func (AzureToAzureVmSyncedConfigDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureToAzureVmSyncedConfigDetailsResponse)(nil)).Elem()
}

func (o AzureToAzureVmSyncedConfigDetailsResponseOutput) ToAzureToAzureVmSyncedConfigDetailsResponseOutput() AzureToAzureVmSyncedConfigDetailsResponseOutput {
	return o
}

func (o AzureToAzureVmSyncedConfigDetailsResponseOutput) ToAzureToAzureVmSyncedConfigDetailsResponseOutputWithContext(ctx context.Context) AzureToAzureVmSyncedConfigDetailsResponseOutput {
	return o
}

func (o AzureToAzureVmSyncedConfigDetailsResponseOutput) ToAzureToAzureVmSyncedConfigDetailsResponsePtrOutput() AzureToAzureVmSyncedConfigDetailsResponsePtrOutput {
	return o.ToAzureToAzureVmSyncedConfigDetailsResponsePtrOutputWithContext(context.Background())
}

func (o AzureToAzureVmSyncedConfigDetailsResponseOutput) ToAzureToAzureVmSyncedConfigDetailsResponsePtrOutputWithContext(ctx context.Context) AzureToAzureVmSyncedConfigDetailsResponsePtrOutput {
	return o.ApplyT(func(v AzureToAzureVmSyncedConfigDetailsResponse) *AzureToAzureVmSyncedConfigDetailsResponse {
		return &v
	}).(AzureToAzureVmSyncedConfigDetailsResponsePtrOutput)
}

// The Azure VM input endpoints.
func (o AzureToAzureVmSyncedConfigDetailsResponseOutput) InputEndpoints() InputEndpointResponseArrayOutput {
	return o.ApplyT(func(v AzureToAzureVmSyncedConfigDetailsResponse) []InputEndpointResponse { return v.InputEndpoints }).(InputEndpointResponseArrayOutput)
}

// The Azure VM tags.
func (o AzureToAzureVmSyncedConfigDetailsResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v AzureToAzureVmSyncedConfigDetailsResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type AzureToAzureVmSyncedConfigDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureToAzureVmSyncedConfigDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureToAzureVmSyncedConfigDetailsResponse)(nil)).Elem()
}

func (o AzureToAzureVmSyncedConfigDetailsResponsePtrOutput) ToAzureToAzureVmSyncedConfigDetailsResponsePtrOutput() AzureToAzureVmSyncedConfigDetailsResponsePtrOutput {
	return o
}

func (o AzureToAzureVmSyncedConfigDetailsResponsePtrOutput) ToAzureToAzureVmSyncedConfigDetailsResponsePtrOutputWithContext(ctx context.Context) AzureToAzureVmSyncedConfigDetailsResponsePtrOutput {
	return o
}

func (o AzureToAzureVmSyncedConfigDetailsResponsePtrOutput) Elem() AzureToAzureVmSyncedConfigDetailsResponseOutput {
	return o.ApplyT(func(v *AzureToAzureVmSyncedConfigDetailsResponse) AzureToAzureVmSyncedConfigDetailsResponse {
		return *v
	}).(AzureToAzureVmSyncedConfigDetailsResponseOutput)
}

// The Azure VM input endpoints.
func (o AzureToAzureVmSyncedConfigDetailsResponsePtrOutput) InputEndpoints() InputEndpointResponseArrayOutput {
	return o.ApplyT(func(v *AzureToAzureVmSyncedConfigDetailsResponse) []InputEndpointResponse {
		if v == nil {
			return nil
		}
		return v.InputEndpoints
	}).(InputEndpointResponseArrayOutput)
}

// The Azure VM tags.
func (o AzureToAzureVmSyncedConfigDetailsResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AzureToAzureVmSyncedConfigDetailsResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Disk details for E2A provider.
type AzureVmDiskDetailsResponse struct {
	// The DiskEncryptionSet ARM ID.
	DiskEncryptionSetId *string `pulumi:"diskEncryptionSetId"`
	// The disk resource id.
	DiskId *string `pulumi:"diskId"`
	// Ordinal\LunId of the disk for the Azure VM.
	LunId *string `pulumi:"lunId"`
	// Max side in MB.
	MaxSizeMB *string `pulumi:"maxSizeMB"`
	// Blob uri of the Azure disk.
	TargetDiskLocation *string `pulumi:"targetDiskLocation"`
	// The target Azure disk name.
	TargetDiskName *string `pulumi:"targetDiskName"`
	// The VHD id.
	VhdId *string `pulumi:"vhdId"`
	// VHD name.
	VhdName *string `pulumi:"vhdName"`
	// VHD type.
	VhdType *string `pulumi:"vhdType"`
}

// Disk details for E2A provider.
type AzureVmDiskDetailsResponseOutput struct{ *pulumi.OutputState }

func (AzureVmDiskDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmDiskDetailsResponse)(nil)).Elem()
}

func (o AzureVmDiskDetailsResponseOutput) ToAzureVmDiskDetailsResponseOutput() AzureVmDiskDetailsResponseOutput {
	return o
}

func (o AzureVmDiskDetailsResponseOutput) ToAzureVmDiskDetailsResponseOutputWithContext(ctx context.Context) AzureVmDiskDetailsResponseOutput {
	return o
}

// The DiskEncryptionSet ARM ID.
func (o AzureVmDiskDetailsResponseOutput) DiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmDiskDetailsResponse) *string { return v.DiskEncryptionSetId }).(pulumi.StringPtrOutput)
}

// The disk resource id.
func (o AzureVmDiskDetailsResponseOutput) DiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmDiskDetailsResponse) *string { return v.DiskId }).(pulumi.StringPtrOutput)
}

// Ordinal\LunId of the disk for the Azure VM.
func (o AzureVmDiskDetailsResponseOutput) LunId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmDiskDetailsResponse) *string { return v.LunId }).(pulumi.StringPtrOutput)
}

// Max side in MB.
func (o AzureVmDiskDetailsResponseOutput) MaxSizeMB() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmDiskDetailsResponse) *string { return v.MaxSizeMB }).(pulumi.StringPtrOutput)
}

// Blob uri of the Azure disk.
func (o AzureVmDiskDetailsResponseOutput) TargetDiskLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmDiskDetailsResponse) *string { return v.TargetDiskLocation }).(pulumi.StringPtrOutput)
}

// The target Azure disk name.
func (o AzureVmDiskDetailsResponseOutput) TargetDiskName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmDiskDetailsResponse) *string { return v.TargetDiskName }).(pulumi.StringPtrOutput)
}

// The VHD id.
func (o AzureVmDiskDetailsResponseOutput) VhdId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmDiskDetailsResponse) *string { return v.VhdId }).(pulumi.StringPtrOutput)
}

// VHD name.
func (o AzureVmDiskDetailsResponseOutput) VhdName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmDiskDetailsResponse) *string { return v.VhdName }).(pulumi.StringPtrOutput)
}

// VHD type.
func (o AzureVmDiskDetailsResponseOutput) VhdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmDiskDetailsResponse) *string { return v.VhdType }).(pulumi.StringPtrOutput)
}

type AzureVmDiskDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureVmDiskDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureVmDiskDetailsResponse)(nil)).Elem()
}

func (o AzureVmDiskDetailsResponseArrayOutput) ToAzureVmDiskDetailsResponseArrayOutput() AzureVmDiskDetailsResponseArrayOutput {
	return o
}

func (o AzureVmDiskDetailsResponseArrayOutput) ToAzureVmDiskDetailsResponseArrayOutputWithContext(ctx context.Context) AzureVmDiskDetailsResponseArrayOutput {
	return o
}

func (o AzureVmDiskDetailsResponseArrayOutput) Index(i pulumi.IntInput) AzureVmDiskDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureVmDiskDetailsResponse {
		return vs[0].([]AzureVmDiskDetailsResponse)[vs[1].(int)]
	}).(AzureVmDiskDetailsResponseOutput)
}

// Azure VM workload-specific protected item.
type AzureVmWorkloadProtectedItem struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureVmWorkloadProtectedItemExtendedInfo `pulumi:"extendedInfo"`
	// Friendly name of the DB represented by this backup item.
	FriendlyName *string `pulumi:"friendlyName"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetails `pulumi:"kpisHealths"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// Parent name of the DB such as Instance or Availability Group.
	ParentName *string `pulumi:"parentName"`
	// Parent type of protected item, example: for a DB, standalone server or distributed
	ParentType *string `pulumi:"parentType"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Data ID of the protected item.
	ProtectedItemDataSourceId *string `pulumi:"protectedItemDataSourceId"`
	// Health status of the backup item, evaluated based on last heartbeat received
	ProtectedItemHealthStatus *string `pulumi:"protectedItemHealthStatus"`
	// backup item type.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// Host/Cluster Name for instance or AG
	ServerName *string `pulumi:"serverName"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Type of workload this item represents.
	WorkloadType *string `pulumi:"workloadType"`
}

// AzureVmWorkloadProtectedItemInput is an input type that accepts AzureVmWorkloadProtectedItemArgs and AzureVmWorkloadProtectedItemOutput values.
// You can construct a concrete instance of `AzureVmWorkloadProtectedItemInput` via:
//
//          AzureVmWorkloadProtectedItemArgs{...}
type AzureVmWorkloadProtectedItemInput interface {
	pulumi.Input

	ToAzureVmWorkloadProtectedItemOutput() AzureVmWorkloadProtectedItemOutput
	ToAzureVmWorkloadProtectedItemOutputWithContext(context.Context) AzureVmWorkloadProtectedItemOutput
}

// Azure VM workload-specific protected item.
type AzureVmWorkloadProtectedItemArgs struct {
	// Type of backup management for the backed up item.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName pulumi.StringPtrInput `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode pulumi.StringPtrInput `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC pulumi.StringPtrInput `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining pulumi.StringPtrInput `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo AzureVmWorkloadProtectedItemExtendedInfoPtrInput `pulumi:"extendedInfo"`
	// Friendly name of the DB represented by this backup item.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming pulumi.BoolPtrInput `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate pulumi.BoolPtrInput `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete pulumi.BoolPtrInput `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths KPIResourceHealthDetailsMapInput `pulumi:"kpisHealths"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus pulumi.StringPtrInput `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime pulumi.StringPtrInput `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint pulumi.StringPtrInput `pulumi:"lastRecoveryPoint"`
	// Parent name of the DB such as Instance or Availability Group.
	ParentName pulumi.StringPtrInput `pulumi:"parentName"`
	// Parent type of protected item, example: for a DB, standalone server or distributed
	ParentType pulumi.StringPtrInput `pulumi:"parentType"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// Data ID of the protected item.
	ProtectedItemDataSourceId pulumi.StringPtrInput `pulumi:"protectedItemDataSourceId"`
	// Health status of the backup item, evaluated based on last heartbeat received
	ProtectedItemHealthStatus pulumi.StringPtrInput `pulumi:"protectedItemHealthStatus"`
	// backup item type.
	ProtectedItemType pulumi.StringInput `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState pulumi.StringPtrInput `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus pulumi.StringPtrInput `pulumi:"protectionStatus"`
	// Host/Cluster Name for instance or AG
	ServerName pulumi.StringPtrInput `pulumi:"serverName"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
	// Type of workload this item represents.
	WorkloadType pulumi.StringPtrInput `pulumi:"workloadType"`
}

func (AzureVmWorkloadProtectedItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadProtectedItem)(nil)).Elem()
}

func (i AzureVmWorkloadProtectedItemArgs) ToAzureVmWorkloadProtectedItemOutput() AzureVmWorkloadProtectedItemOutput {
	return i.ToAzureVmWorkloadProtectedItemOutputWithContext(context.Background())
}

func (i AzureVmWorkloadProtectedItemArgs) ToAzureVmWorkloadProtectedItemOutputWithContext(ctx context.Context) AzureVmWorkloadProtectedItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadProtectedItemOutput)
}

// Additional information on Azure Workload for SQL specific backup item.
type AzureVmWorkloadProtectedItemExtendedInfo struct {
	// The oldest backup copy available for this backup item.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// Indicates consistency of policy object and policy applied to this backup item.
	PolicyState *string `pulumi:"policyState"`
	// Number of backup copies available for this backup item.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
}

// AzureVmWorkloadProtectedItemExtendedInfoInput is an input type that accepts AzureVmWorkloadProtectedItemExtendedInfoArgs and AzureVmWorkloadProtectedItemExtendedInfoOutput values.
// You can construct a concrete instance of `AzureVmWorkloadProtectedItemExtendedInfoInput` via:
//
//          AzureVmWorkloadProtectedItemExtendedInfoArgs{...}
type AzureVmWorkloadProtectedItemExtendedInfoInput interface {
	pulumi.Input

	ToAzureVmWorkloadProtectedItemExtendedInfoOutput() AzureVmWorkloadProtectedItemExtendedInfoOutput
	ToAzureVmWorkloadProtectedItemExtendedInfoOutputWithContext(context.Context) AzureVmWorkloadProtectedItemExtendedInfoOutput
}

// Additional information on Azure Workload for SQL specific backup item.
type AzureVmWorkloadProtectedItemExtendedInfoArgs struct {
	// The oldest backup copy available for this backup item.
	OldestRecoveryPoint pulumi.StringPtrInput `pulumi:"oldestRecoveryPoint"`
	// Indicates consistency of policy object and policy applied to this backup item.
	PolicyState pulumi.StringPtrInput `pulumi:"policyState"`
	// Number of backup copies available for this backup item.
	RecoveryPointCount pulumi.IntPtrInput `pulumi:"recoveryPointCount"`
}

func (AzureVmWorkloadProtectedItemExtendedInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadProtectedItemExtendedInfo)(nil)).Elem()
}

func (i AzureVmWorkloadProtectedItemExtendedInfoArgs) ToAzureVmWorkloadProtectedItemExtendedInfoOutput() AzureVmWorkloadProtectedItemExtendedInfoOutput {
	return i.ToAzureVmWorkloadProtectedItemExtendedInfoOutputWithContext(context.Background())
}

func (i AzureVmWorkloadProtectedItemExtendedInfoArgs) ToAzureVmWorkloadProtectedItemExtendedInfoOutputWithContext(ctx context.Context) AzureVmWorkloadProtectedItemExtendedInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadProtectedItemExtendedInfoOutput)
}

func (i AzureVmWorkloadProtectedItemExtendedInfoArgs) ToAzureVmWorkloadProtectedItemExtendedInfoPtrOutput() AzureVmWorkloadProtectedItemExtendedInfoPtrOutput {
	return i.ToAzureVmWorkloadProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (i AzureVmWorkloadProtectedItemExtendedInfoArgs) ToAzureVmWorkloadProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) AzureVmWorkloadProtectedItemExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadProtectedItemExtendedInfoOutput).ToAzureVmWorkloadProtectedItemExtendedInfoPtrOutputWithContext(ctx)
}

// AzureVmWorkloadProtectedItemExtendedInfoPtrInput is an input type that accepts AzureVmWorkloadProtectedItemExtendedInfoArgs, AzureVmWorkloadProtectedItemExtendedInfoPtr and AzureVmWorkloadProtectedItemExtendedInfoPtrOutput values.
// You can construct a concrete instance of `AzureVmWorkloadProtectedItemExtendedInfoPtrInput` via:
//
//          AzureVmWorkloadProtectedItemExtendedInfoArgs{...}
//
//  or:
//
//          nil
type AzureVmWorkloadProtectedItemExtendedInfoPtrInput interface {
	pulumi.Input

	ToAzureVmWorkloadProtectedItemExtendedInfoPtrOutput() AzureVmWorkloadProtectedItemExtendedInfoPtrOutput
	ToAzureVmWorkloadProtectedItemExtendedInfoPtrOutputWithContext(context.Context) AzureVmWorkloadProtectedItemExtendedInfoPtrOutput
}

type azureVmWorkloadProtectedItemExtendedInfoPtrType AzureVmWorkloadProtectedItemExtendedInfoArgs

func AzureVmWorkloadProtectedItemExtendedInfoPtr(v *AzureVmWorkloadProtectedItemExtendedInfoArgs) AzureVmWorkloadProtectedItemExtendedInfoPtrInput {
	return (*azureVmWorkloadProtectedItemExtendedInfoPtrType)(v)
}

func (*azureVmWorkloadProtectedItemExtendedInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureVmWorkloadProtectedItemExtendedInfo)(nil)).Elem()
}

func (i *azureVmWorkloadProtectedItemExtendedInfoPtrType) ToAzureVmWorkloadProtectedItemExtendedInfoPtrOutput() AzureVmWorkloadProtectedItemExtendedInfoPtrOutput {
	return i.ToAzureVmWorkloadProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (i *azureVmWorkloadProtectedItemExtendedInfoPtrType) ToAzureVmWorkloadProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) AzureVmWorkloadProtectedItemExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadProtectedItemExtendedInfoPtrOutput)
}

// Additional information on Azure Workload for SQL specific backup item.
type AzureVmWorkloadProtectedItemExtendedInfoResponse struct {
	// The oldest backup copy available for this backup item.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// Indicates consistency of policy object and policy applied to this backup item.
	PolicyState *string `pulumi:"policyState"`
	// Number of backup copies available for this backup item.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
}

// Additional information on Azure Workload for SQL specific backup item.
type AzureVmWorkloadProtectedItemExtendedInfoResponseOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadProtectedItemExtendedInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadProtectedItemExtendedInfoResponse)(nil)).Elem()
}

func (o AzureVmWorkloadProtectedItemExtendedInfoResponseOutput) ToAzureVmWorkloadProtectedItemExtendedInfoResponseOutput() AzureVmWorkloadProtectedItemExtendedInfoResponseOutput {
	return o
}

func (o AzureVmWorkloadProtectedItemExtendedInfoResponseOutput) ToAzureVmWorkloadProtectedItemExtendedInfoResponseOutputWithContext(ctx context.Context) AzureVmWorkloadProtectedItemExtendedInfoResponseOutput {
	return o
}

func (o AzureVmWorkloadProtectedItemExtendedInfoResponseOutput) ToAzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput() AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput {
	return o.ToAzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutputWithContext(context.Background())
}

func (o AzureVmWorkloadProtectedItemExtendedInfoResponseOutput) ToAzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutputWithContext(ctx context.Context) AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemExtendedInfoResponse) *AzureVmWorkloadProtectedItemExtendedInfoResponse {
		return &v
	}).(AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput)
}

// The oldest backup copy available for this backup item.
func (o AzureVmWorkloadProtectedItemExtendedInfoResponseOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemExtendedInfoResponse) *string { return v.OldestRecoveryPoint }).(pulumi.StringPtrOutput)
}

// Indicates consistency of policy object and policy applied to this backup item.
func (o AzureVmWorkloadProtectedItemExtendedInfoResponseOutput) PolicyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemExtendedInfoResponse) *string { return v.PolicyState }).(pulumi.StringPtrOutput)
}

// Number of backup copies available for this backup item.
func (o AzureVmWorkloadProtectedItemExtendedInfoResponseOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemExtendedInfoResponse) *int { return v.RecoveryPointCount }).(pulumi.IntPtrOutput)
}

type AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureVmWorkloadProtectedItemExtendedInfoResponse)(nil)).Elem()
}

func (o AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput) ToAzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput() AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput {
	return o
}

func (o AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput) ToAzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutputWithContext(ctx context.Context) AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput {
	return o
}

func (o AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput) Elem() AzureVmWorkloadProtectedItemExtendedInfoResponseOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItemExtendedInfoResponse) AzureVmWorkloadProtectedItemExtendedInfoResponse {
		return *v
	}).(AzureVmWorkloadProtectedItemExtendedInfoResponseOutput)
}

// The oldest backup copy available for this backup item.
func (o AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// Indicates consistency of policy object and policy applied to this backup item.
func (o AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput) PolicyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.PolicyState
	}).(pulumi.StringPtrOutput)
}

// Number of backup copies available for this backup item.
func (o AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItemExtendedInfoResponse) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointCount
	}).(pulumi.IntPtrOutput)
}

// Azure VM workload-specific protected item.
type AzureVmWorkloadProtectedItemResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureVmWorkloadProtectedItemExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of the DB represented by this backup item.
	FriendlyName *string `pulumi:"friendlyName"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetailsResponse `pulumi:"kpisHealths"`
	// Error details in last backup
	LastBackupErrorDetail *ErrorDetailResponse `pulumi:"lastBackupErrorDetail"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// Parent name of the DB such as Instance or Availability Group.
	ParentName *string `pulumi:"parentName"`
	// Parent type of protected item, example: for a DB, standalone server or distributed
	ParentType *string `pulumi:"parentType"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Data ID of the protected item.
	ProtectedItemDataSourceId *string `pulumi:"protectedItemDataSourceId"`
	// Health status of the backup item, evaluated based on last heartbeat received
	ProtectedItemHealthStatus *string `pulumi:"protectedItemHealthStatus"`
	// backup item type.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// Host/Cluster Name for instance or AG
	ServerName *string `pulumi:"serverName"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Type of workload this item represents.
	WorkloadType *string `pulumi:"workloadType"`
}

// Azure VM workload-specific protected item.
type AzureVmWorkloadProtectedItemResponseOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadProtectedItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadProtectedItemResponse)(nil)).Elem()
}

func (o AzureVmWorkloadProtectedItemResponseOutput) ToAzureVmWorkloadProtectedItemResponseOutput() AzureVmWorkloadProtectedItemResponseOutput {
	return o
}

func (o AzureVmWorkloadProtectedItemResponseOutput) ToAzureVmWorkloadProtectedItemResponseOutputWithContext(ctx context.Context) AzureVmWorkloadProtectedItemResponseOutput {
	return o
}

// Type of backup management for the backed up item.
func (o AzureVmWorkloadProtectedItemResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureVmWorkloadProtectedItemResponseOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureVmWorkloadProtectedItemResponseOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureVmWorkloadProtectedItemResponseOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureVmWorkloadProtectedItemResponseOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureVmWorkloadProtectedItemResponseOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureVmWorkloadProtectedItemResponseOutput) ExtendedInfo() AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *AzureVmWorkloadProtectedItemExtendedInfoResponse {
		return v.ExtendedInfo
	}).(AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput)
}

// Friendly name of the DB represented by this backup item.
func (o AzureVmWorkloadProtectedItemResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureVmWorkloadProtectedItemResponseOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureVmWorkloadProtectedItemResponseOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureVmWorkloadProtectedItemResponseOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureVmWorkloadProtectedItemResponseOutput) KpisHealths() KPIResourceHealthDetailsResponseMapOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) map[string]KPIResourceHealthDetailsResponse {
		return v.KpisHealths
	}).(KPIResourceHealthDetailsResponseMapOutput)
}

// Error details in last backup
func (o AzureVmWorkloadProtectedItemResponseOutput) LastBackupErrorDetail() ErrorDetailResponsePtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *ErrorDetailResponse { return v.LastBackupErrorDetail }).(ErrorDetailResponsePtrOutput)
}

// Last backup operation status. Possible values: Healthy, Unhealthy.
func (o AzureVmWorkloadProtectedItemResponseOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o AzureVmWorkloadProtectedItemResponseOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.LastBackupTime }).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureVmWorkloadProtectedItemResponseOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// Parent name of the DB such as Instance or Availability Group.
func (o AzureVmWorkloadProtectedItemResponseOutput) ParentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.ParentName }).(pulumi.StringPtrOutput)
}

// Parent type of protected item, example: for a DB, standalone server or distributed
func (o AzureVmWorkloadProtectedItemResponseOutput) ParentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.ParentType }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureVmWorkloadProtectedItemResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Data ID of the protected item.
func (o AzureVmWorkloadProtectedItemResponseOutput) ProtectedItemDataSourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.ProtectedItemDataSourceId }).(pulumi.StringPtrOutput)
}

// Health status of the backup item, evaluated based on last heartbeat received
func (o AzureVmWorkloadProtectedItemResponseOutput) ProtectedItemHealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.ProtectedItemHealthStatus }).(pulumi.StringPtrOutput)
}

// backup item type.
func (o AzureVmWorkloadProtectedItemResponseOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureVmWorkloadProtectedItemResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// Backup status of this backup item.
func (o AzureVmWorkloadProtectedItemResponseOutput) ProtectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.ProtectionStatus }).(pulumi.StringPtrOutput)
}

// Host/Cluster Name for instance or AG
func (o AzureVmWorkloadProtectedItemResponseOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.ServerName }).(pulumi.StringPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureVmWorkloadProtectedItemResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// Type of workload this item represents.
func (o AzureVmWorkloadProtectedItemResponseOutput) WorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.WorkloadType }).(pulumi.StringPtrOutput)
}

// Container for the workloads running inside Azure Compute or Classic Compute.
type AzureWorkloadContainer struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	ContainerType *string `pulumi:"containerType"`
	// Additional details of a workload container.
	ExtendedInfo *AzureWorkloadContainerExtendedInfo `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Time stamp when this container was updated.
	LastUpdatedTime *string `pulumi:"lastUpdatedTime"`
	// Re-Do Operation
	OperationType *string `pulumi:"operationType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// ARM ID of the virtual machine represented by this Azure Workload Container
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Workload type for which registration was sent.
	WorkloadType *string `pulumi:"workloadType"`
}

// AzureWorkloadContainerInput is an input type that accepts AzureWorkloadContainerArgs and AzureWorkloadContainerOutput values.
// You can construct a concrete instance of `AzureWorkloadContainerInput` via:
//
//          AzureWorkloadContainerArgs{...}
type AzureWorkloadContainerInput interface {
	pulumi.Input

	ToAzureWorkloadContainerOutput() AzureWorkloadContainerOutput
	ToAzureWorkloadContainerOutputWithContext(context.Context) AzureWorkloadContainerOutput
}

// Container for the workloads running inside Azure Compute or Classic Compute.
type AzureWorkloadContainerArgs struct {
	// Type of backup management for the container.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	ContainerType pulumi.StringPtrInput `pulumi:"containerType"`
	// Additional details of a workload container.
	ExtendedInfo AzureWorkloadContainerExtendedInfoPtrInput `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus pulumi.StringPtrInput `pulumi:"healthStatus"`
	// Time stamp when this container was updated.
	LastUpdatedTime pulumi.StringPtrInput `pulumi:"lastUpdatedTime"`
	// Re-Do Operation
	OperationType pulumi.StringPtrInput `pulumi:"operationType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus pulumi.StringPtrInput `pulumi:"registrationStatus"`
	// ARM ID of the virtual machine represented by this Azure Workload Container
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
	// Workload type for which registration was sent.
	WorkloadType pulumi.StringPtrInput `pulumi:"workloadType"`
}

func (AzureWorkloadContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureWorkloadContainer)(nil)).Elem()
}

func (i AzureWorkloadContainerArgs) ToAzureWorkloadContainerOutput() AzureWorkloadContainerOutput {
	return i.ToAzureWorkloadContainerOutputWithContext(context.Background())
}

func (i AzureWorkloadContainerArgs) ToAzureWorkloadContainerOutputWithContext(ctx context.Context) AzureWorkloadContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureWorkloadContainerOutput)
}

// Extended information of the container.
type AzureWorkloadContainerExtendedInfo struct {
	// Host Os Name in case of Stand Alone and Cluster Name in case of distributed container.
	HostServerName *string `pulumi:"hostServerName"`
	// Inquiry Status for the container.
	InquiryInfo *InquiryInfo `pulumi:"inquiryInfo"`
	// List of the nodes in case of distributed container.
	NodesList []DistributedNodesInfo `pulumi:"nodesList"`
}

// AzureWorkloadContainerExtendedInfoInput is an input type that accepts AzureWorkloadContainerExtendedInfoArgs and AzureWorkloadContainerExtendedInfoOutput values.
// You can construct a concrete instance of `AzureWorkloadContainerExtendedInfoInput` via:
//
//          AzureWorkloadContainerExtendedInfoArgs{...}
type AzureWorkloadContainerExtendedInfoInput interface {
	pulumi.Input

	ToAzureWorkloadContainerExtendedInfoOutput() AzureWorkloadContainerExtendedInfoOutput
	ToAzureWorkloadContainerExtendedInfoOutputWithContext(context.Context) AzureWorkloadContainerExtendedInfoOutput
}

// Extended information of the container.
type AzureWorkloadContainerExtendedInfoArgs struct {
	// Host Os Name in case of Stand Alone and Cluster Name in case of distributed container.
	HostServerName pulumi.StringPtrInput `pulumi:"hostServerName"`
	// Inquiry Status for the container.
	InquiryInfo InquiryInfoPtrInput `pulumi:"inquiryInfo"`
	// List of the nodes in case of distributed container.
	NodesList DistributedNodesInfoArrayInput `pulumi:"nodesList"`
}

func (AzureWorkloadContainerExtendedInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureWorkloadContainerExtendedInfo)(nil)).Elem()
}

func (i AzureWorkloadContainerExtendedInfoArgs) ToAzureWorkloadContainerExtendedInfoOutput() AzureWorkloadContainerExtendedInfoOutput {
	return i.ToAzureWorkloadContainerExtendedInfoOutputWithContext(context.Background())
}

func (i AzureWorkloadContainerExtendedInfoArgs) ToAzureWorkloadContainerExtendedInfoOutputWithContext(ctx context.Context) AzureWorkloadContainerExtendedInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureWorkloadContainerExtendedInfoOutput)
}

func (i AzureWorkloadContainerExtendedInfoArgs) ToAzureWorkloadContainerExtendedInfoPtrOutput() AzureWorkloadContainerExtendedInfoPtrOutput {
	return i.ToAzureWorkloadContainerExtendedInfoPtrOutputWithContext(context.Background())
}

func (i AzureWorkloadContainerExtendedInfoArgs) ToAzureWorkloadContainerExtendedInfoPtrOutputWithContext(ctx context.Context) AzureWorkloadContainerExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureWorkloadContainerExtendedInfoOutput).ToAzureWorkloadContainerExtendedInfoPtrOutputWithContext(ctx)
}

// AzureWorkloadContainerExtendedInfoPtrInput is an input type that accepts AzureWorkloadContainerExtendedInfoArgs, AzureWorkloadContainerExtendedInfoPtr and AzureWorkloadContainerExtendedInfoPtrOutput values.
// You can construct a concrete instance of `AzureWorkloadContainerExtendedInfoPtrInput` via:
//
//          AzureWorkloadContainerExtendedInfoArgs{...}
//
//  or:
//
//          nil
type AzureWorkloadContainerExtendedInfoPtrInput interface {
	pulumi.Input

	ToAzureWorkloadContainerExtendedInfoPtrOutput() AzureWorkloadContainerExtendedInfoPtrOutput
	ToAzureWorkloadContainerExtendedInfoPtrOutputWithContext(context.Context) AzureWorkloadContainerExtendedInfoPtrOutput
}

type azureWorkloadContainerExtendedInfoPtrType AzureWorkloadContainerExtendedInfoArgs

func AzureWorkloadContainerExtendedInfoPtr(v *AzureWorkloadContainerExtendedInfoArgs) AzureWorkloadContainerExtendedInfoPtrInput {
	return (*azureWorkloadContainerExtendedInfoPtrType)(v)
}

func (*azureWorkloadContainerExtendedInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureWorkloadContainerExtendedInfo)(nil)).Elem()
}

func (i *azureWorkloadContainerExtendedInfoPtrType) ToAzureWorkloadContainerExtendedInfoPtrOutput() AzureWorkloadContainerExtendedInfoPtrOutput {
	return i.ToAzureWorkloadContainerExtendedInfoPtrOutputWithContext(context.Background())
}

func (i *azureWorkloadContainerExtendedInfoPtrType) ToAzureWorkloadContainerExtendedInfoPtrOutputWithContext(ctx context.Context) AzureWorkloadContainerExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureWorkloadContainerExtendedInfoPtrOutput)
}

// Extended information of the container.
type AzureWorkloadContainerExtendedInfoResponse struct {
	// Host Os Name in case of Stand Alone and Cluster Name in case of distributed container.
	HostServerName *string `pulumi:"hostServerName"`
	// Inquiry Status for the container.
	InquiryInfo *InquiryInfoResponse `pulumi:"inquiryInfo"`
	// List of the nodes in case of distributed container.
	NodesList []DistributedNodesInfoResponse `pulumi:"nodesList"`
}

// Extended information of the container.
type AzureWorkloadContainerExtendedInfoResponseOutput struct{ *pulumi.OutputState }

func (AzureWorkloadContainerExtendedInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureWorkloadContainerExtendedInfoResponse)(nil)).Elem()
}

func (o AzureWorkloadContainerExtendedInfoResponseOutput) ToAzureWorkloadContainerExtendedInfoResponseOutput() AzureWorkloadContainerExtendedInfoResponseOutput {
	return o
}

func (o AzureWorkloadContainerExtendedInfoResponseOutput) ToAzureWorkloadContainerExtendedInfoResponseOutputWithContext(ctx context.Context) AzureWorkloadContainerExtendedInfoResponseOutput {
	return o
}

func (o AzureWorkloadContainerExtendedInfoResponseOutput) ToAzureWorkloadContainerExtendedInfoResponsePtrOutput() AzureWorkloadContainerExtendedInfoResponsePtrOutput {
	return o.ToAzureWorkloadContainerExtendedInfoResponsePtrOutputWithContext(context.Background())
}

func (o AzureWorkloadContainerExtendedInfoResponseOutput) ToAzureWorkloadContainerExtendedInfoResponsePtrOutputWithContext(ctx context.Context) AzureWorkloadContainerExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerExtendedInfoResponse) *AzureWorkloadContainerExtendedInfoResponse {
		return &v
	}).(AzureWorkloadContainerExtendedInfoResponsePtrOutput)
}

// Host Os Name in case of Stand Alone and Cluster Name in case of distributed container.
func (o AzureWorkloadContainerExtendedInfoResponseOutput) HostServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerExtendedInfoResponse) *string { return v.HostServerName }).(pulumi.StringPtrOutput)
}

// Inquiry Status for the container.
func (o AzureWorkloadContainerExtendedInfoResponseOutput) InquiryInfo() InquiryInfoResponsePtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerExtendedInfoResponse) *InquiryInfoResponse { return v.InquiryInfo }).(InquiryInfoResponsePtrOutput)
}

// List of the nodes in case of distributed container.
func (o AzureWorkloadContainerExtendedInfoResponseOutput) NodesList() DistributedNodesInfoResponseArrayOutput {
	return o.ApplyT(func(v AzureWorkloadContainerExtendedInfoResponse) []DistributedNodesInfoResponse { return v.NodesList }).(DistributedNodesInfoResponseArrayOutput)
}

type AzureWorkloadContainerExtendedInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureWorkloadContainerExtendedInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureWorkloadContainerExtendedInfoResponse)(nil)).Elem()
}

func (o AzureWorkloadContainerExtendedInfoResponsePtrOutput) ToAzureWorkloadContainerExtendedInfoResponsePtrOutput() AzureWorkloadContainerExtendedInfoResponsePtrOutput {
	return o
}

func (o AzureWorkloadContainerExtendedInfoResponsePtrOutput) ToAzureWorkloadContainerExtendedInfoResponsePtrOutputWithContext(ctx context.Context) AzureWorkloadContainerExtendedInfoResponsePtrOutput {
	return o
}

func (o AzureWorkloadContainerExtendedInfoResponsePtrOutput) Elem() AzureWorkloadContainerExtendedInfoResponseOutput {
	return o.ApplyT(func(v *AzureWorkloadContainerExtendedInfoResponse) AzureWorkloadContainerExtendedInfoResponse {
		return *v
	}).(AzureWorkloadContainerExtendedInfoResponseOutput)
}

// Host Os Name in case of Stand Alone and Cluster Name in case of distributed container.
func (o AzureWorkloadContainerExtendedInfoResponsePtrOutput) HostServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadContainerExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.HostServerName
	}).(pulumi.StringPtrOutput)
}

// Inquiry Status for the container.
func (o AzureWorkloadContainerExtendedInfoResponsePtrOutput) InquiryInfo() InquiryInfoResponsePtrOutput {
	return o.ApplyT(func(v *AzureWorkloadContainerExtendedInfoResponse) *InquiryInfoResponse {
		if v == nil {
			return nil
		}
		return v.InquiryInfo
	}).(InquiryInfoResponsePtrOutput)
}

// List of the nodes in case of distributed container.
func (o AzureWorkloadContainerExtendedInfoResponsePtrOutput) NodesList() DistributedNodesInfoResponseArrayOutput {
	return o.ApplyT(func(v *AzureWorkloadContainerExtendedInfoResponse) []DistributedNodesInfoResponse {
		if v == nil {
			return nil
		}
		return v.NodesList
	}).(DistributedNodesInfoResponseArrayOutput)
}

// Container for the workloads running inside Azure Compute or Classic Compute.
type AzureWorkloadContainerResponse struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	ContainerType *string `pulumi:"containerType"`
	// Additional details of a workload container.
	ExtendedInfo *AzureWorkloadContainerExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Time stamp when this container was updated.
	LastUpdatedTime *string `pulumi:"lastUpdatedTime"`
	// Re-Do Operation
	OperationType *string `pulumi:"operationType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// ARM ID of the virtual machine represented by this Azure Workload Container
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Workload type for which registration was sent.
	WorkloadType *string `pulumi:"workloadType"`
}

// Container for the workloads running inside Azure Compute or Classic Compute.
type AzureWorkloadContainerResponseOutput struct{ *pulumi.OutputState }

func (AzureWorkloadContainerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureWorkloadContainerResponse)(nil)).Elem()
}

func (o AzureWorkloadContainerResponseOutput) ToAzureWorkloadContainerResponseOutput() AzureWorkloadContainerResponseOutput {
	return o
}

func (o AzureWorkloadContainerResponseOutput) ToAzureWorkloadContainerResponseOutputWithContext(ctx context.Context) AzureWorkloadContainerResponseOutput {
	return o
}

// Type of backup management for the container.
func (o AzureWorkloadContainerResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
func (o AzureWorkloadContainerResponseOutput) ContainerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerResponse) *string { return v.ContainerType }).(pulumi.StringPtrOutput)
}

// Additional details of a workload container.
func (o AzureWorkloadContainerResponseOutput) ExtendedInfo() AzureWorkloadContainerExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerResponse) *AzureWorkloadContainerExtendedInfoResponse {
		return v.ExtendedInfo
	}).(AzureWorkloadContainerExtendedInfoResponsePtrOutput)
}

// Friendly name of the container.
func (o AzureWorkloadContainerResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureWorkloadContainerResponseOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerResponse) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Time stamp when this container was updated.
func (o AzureWorkloadContainerResponseOutput) LastUpdatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerResponse) *string { return v.LastUpdatedTime }).(pulumi.StringPtrOutput)
}

// Re-Do Operation
func (o AzureWorkloadContainerResponseOutput) OperationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerResponse) *string { return v.OperationType }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureWorkloadContainerResponseOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerResponse) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// ARM ID of the virtual machine represented by this Azure Workload Container
func (o AzureWorkloadContainerResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// Workload type for which registration was sent.
func (o AzureWorkloadContainerResponseOutput) WorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerResponse) *string { return v.WorkloadType }).(pulumi.StringPtrOutput)
}

// Container identity information
type ContainerIdentityInfo struct {
	// Protection container identity - AAD Tenant
	AadTenantId *string `pulumi:"aadTenantId"`
	// Protection container identity - Audience
	Audience *string `pulumi:"audience"`
	// Protection container identity - AAD Service Principal
	ServicePrincipalClientId *string `pulumi:"servicePrincipalClientId"`
	// Unique name of the container
	UniqueName *string `pulumi:"uniqueName"`
}

// ContainerIdentityInfoInput is an input type that accepts ContainerIdentityInfoArgs and ContainerIdentityInfoOutput values.
// You can construct a concrete instance of `ContainerIdentityInfoInput` via:
//
//          ContainerIdentityInfoArgs{...}
type ContainerIdentityInfoInput interface {
	pulumi.Input

	ToContainerIdentityInfoOutput() ContainerIdentityInfoOutput
	ToContainerIdentityInfoOutputWithContext(context.Context) ContainerIdentityInfoOutput
}

// Container identity information
type ContainerIdentityInfoArgs struct {
	// Protection container identity - AAD Tenant
	AadTenantId pulumi.StringPtrInput `pulumi:"aadTenantId"`
	// Protection container identity - Audience
	Audience pulumi.StringPtrInput `pulumi:"audience"`
	// Protection container identity - AAD Service Principal
	ServicePrincipalClientId pulumi.StringPtrInput `pulumi:"servicePrincipalClientId"`
	// Unique name of the container
	UniqueName pulumi.StringPtrInput `pulumi:"uniqueName"`
}

func (ContainerIdentityInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerIdentityInfo)(nil)).Elem()
}

func (i ContainerIdentityInfoArgs) ToContainerIdentityInfoOutput() ContainerIdentityInfoOutput {
	return i.ToContainerIdentityInfoOutputWithContext(context.Background())
}

func (i ContainerIdentityInfoArgs) ToContainerIdentityInfoOutputWithContext(ctx context.Context) ContainerIdentityInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerIdentityInfoOutput)
}

func (i ContainerIdentityInfoArgs) ToContainerIdentityInfoPtrOutput() ContainerIdentityInfoPtrOutput {
	return i.ToContainerIdentityInfoPtrOutputWithContext(context.Background())
}

func (i ContainerIdentityInfoArgs) ToContainerIdentityInfoPtrOutputWithContext(ctx context.Context) ContainerIdentityInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerIdentityInfoOutput).ToContainerIdentityInfoPtrOutputWithContext(ctx)
}

// ContainerIdentityInfoPtrInput is an input type that accepts ContainerIdentityInfoArgs, ContainerIdentityInfoPtr and ContainerIdentityInfoPtrOutput values.
// You can construct a concrete instance of `ContainerIdentityInfoPtrInput` via:
//
//          ContainerIdentityInfoArgs{...}
//
//  or:
//
//          nil
type ContainerIdentityInfoPtrInput interface {
	pulumi.Input

	ToContainerIdentityInfoPtrOutput() ContainerIdentityInfoPtrOutput
	ToContainerIdentityInfoPtrOutputWithContext(context.Context) ContainerIdentityInfoPtrOutput
}

type containerIdentityInfoPtrType ContainerIdentityInfoArgs

func ContainerIdentityInfoPtr(v *ContainerIdentityInfoArgs) ContainerIdentityInfoPtrInput {
	return (*containerIdentityInfoPtrType)(v)
}

func (*containerIdentityInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerIdentityInfo)(nil)).Elem()
}

func (i *containerIdentityInfoPtrType) ToContainerIdentityInfoPtrOutput() ContainerIdentityInfoPtrOutput {
	return i.ToContainerIdentityInfoPtrOutputWithContext(context.Background())
}

func (i *containerIdentityInfoPtrType) ToContainerIdentityInfoPtrOutputWithContext(ctx context.Context) ContainerIdentityInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerIdentityInfoPtrOutput)
}

// Container identity information
type ContainerIdentityInfoResponse struct {
	// Protection container identity - AAD Tenant
	AadTenantId *string `pulumi:"aadTenantId"`
	// Protection container identity - Audience
	Audience *string `pulumi:"audience"`
	// Protection container identity - AAD Service Principal
	ServicePrincipalClientId *string `pulumi:"servicePrincipalClientId"`
	// Unique name of the container
	UniqueName *string `pulumi:"uniqueName"`
}

// Container identity information
type ContainerIdentityInfoResponseOutput struct{ *pulumi.OutputState }

func (ContainerIdentityInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerIdentityInfoResponse)(nil)).Elem()
}

func (o ContainerIdentityInfoResponseOutput) ToContainerIdentityInfoResponseOutput() ContainerIdentityInfoResponseOutput {
	return o
}

func (o ContainerIdentityInfoResponseOutput) ToContainerIdentityInfoResponseOutputWithContext(ctx context.Context) ContainerIdentityInfoResponseOutput {
	return o
}

func (o ContainerIdentityInfoResponseOutput) ToContainerIdentityInfoResponsePtrOutput() ContainerIdentityInfoResponsePtrOutput {
	return o.ToContainerIdentityInfoResponsePtrOutputWithContext(context.Background())
}

func (o ContainerIdentityInfoResponseOutput) ToContainerIdentityInfoResponsePtrOutputWithContext(ctx context.Context) ContainerIdentityInfoResponsePtrOutput {
	return o.ApplyT(func(v ContainerIdentityInfoResponse) *ContainerIdentityInfoResponse {
		return &v
	}).(ContainerIdentityInfoResponsePtrOutput)
}

// Protection container identity - AAD Tenant
func (o ContainerIdentityInfoResponseOutput) AadTenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerIdentityInfoResponse) *string { return v.AadTenantId }).(pulumi.StringPtrOutput)
}

// Protection container identity - Audience
func (o ContainerIdentityInfoResponseOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerIdentityInfoResponse) *string { return v.Audience }).(pulumi.StringPtrOutput)
}

// Protection container identity - AAD Service Principal
func (o ContainerIdentityInfoResponseOutput) ServicePrincipalClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerIdentityInfoResponse) *string { return v.ServicePrincipalClientId }).(pulumi.StringPtrOutput)
}

// Unique name of the container
func (o ContainerIdentityInfoResponseOutput) UniqueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerIdentityInfoResponse) *string { return v.UniqueName }).(pulumi.StringPtrOutput)
}

type ContainerIdentityInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (ContainerIdentityInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerIdentityInfoResponse)(nil)).Elem()
}

func (o ContainerIdentityInfoResponsePtrOutput) ToContainerIdentityInfoResponsePtrOutput() ContainerIdentityInfoResponsePtrOutput {
	return o
}

func (o ContainerIdentityInfoResponsePtrOutput) ToContainerIdentityInfoResponsePtrOutputWithContext(ctx context.Context) ContainerIdentityInfoResponsePtrOutput {
	return o
}

func (o ContainerIdentityInfoResponsePtrOutput) Elem() ContainerIdentityInfoResponseOutput {
	return o.ApplyT(func(v *ContainerIdentityInfoResponse) ContainerIdentityInfoResponse { return *v }).(ContainerIdentityInfoResponseOutput)
}

// Protection container identity - AAD Tenant
func (o ContainerIdentityInfoResponsePtrOutput) AadTenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerIdentityInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.AadTenantId
	}).(pulumi.StringPtrOutput)
}

// Protection container identity - Audience
func (o ContainerIdentityInfoResponsePtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerIdentityInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Audience
	}).(pulumi.StringPtrOutput)
}

// Protection container identity - AAD Service Principal
func (o ContainerIdentityInfoResponsePtrOutput) ServicePrincipalClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerIdentityInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServicePrincipalClientId
	}).(pulumi.StringPtrOutput)
}

// Unique name of the container
func (o ContainerIdentityInfoResponsePtrOutput) UniqueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerIdentityInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.UniqueName
	}).(pulumi.StringPtrOutput)
}

// Common input details for network mapping operation.
type CreateNetworkMappingInputProperties struct {
	// Fabric specific input properties.
	FabricSpecificDetails interface{} `pulumi:"fabricSpecificDetails"`
	// Recovery fabric Name.
	RecoveryFabricName *string `pulumi:"recoveryFabricName"`
	// Recovery network Id.
	RecoveryNetworkId *string `pulumi:"recoveryNetworkId"`
}

// CreateNetworkMappingInputPropertiesInput is an input type that accepts CreateNetworkMappingInputPropertiesArgs and CreateNetworkMappingInputPropertiesOutput values.
// You can construct a concrete instance of `CreateNetworkMappingInputPropertiesInput` via:
//
//          CreateNetworkMappingInputPropertiesArgs{...}
type CreateNetworkMappingInputPropertiesInput interface {
	pulumi.Input

	ToCreateNetworkMappingInputPropertiesOutput() CreateNetworkMappingInputPropertiesOutput
	ToCreateNetworkMappingInputPropertiesOutputWithContext(context.Context) CreateNetworkMappingInputPropertiesOutput
}

// Common input details for network mapping operation.
type CreateNetworkMappingInputPropertiesArgs struct {
	// Fabric specific input properties.
	FabricSpecificDetails pulumi.Input `pulumi:"fabricSpecificDetails"`
	// Recovery fabric Name.
	RecoveryFabricName pulumi.StringPtrInput `pulumi:"recoveryFabricName"`
	// Recovery network Id.
	RecoveryNetworkId pulumi.StringPtrInput `pulumi:"recoveryNetworkId"`
}

func (CreateNetworkMappingInputPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CreateNetworkMappingInputProperties)(nil)).Elem()
}

func (i CreateNetworkMappingInputPropertiesArgs) ToCreateNetworkMappingInputPropertiesOutput() CreateNetworkMappingInputPropertiesOutput {
	return i.ToCreateNetworkMappingInputPropertiesOutputWithContext(context.Background())
}

func (i CreateNetworkMappingInputPropertiesArgs) ToCreateNetworkMappingInputPropertiesOutputWithContext(ctx context.Context) CreateNetworkMappingInputPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateNetworkMappingInputPropertiesOutput)
}

func (i CreateNetworkMappingInputPropertiesArgs) ToCreateNetworkMappingInputPropertiesPtrOutput() CreateNetworkMappingInputPropertiesPtrOutput {
	return i.ToCreateNetworkMappingInputPropertiesPtrOutputWithContext(context.Background())
}

func (i CreateNetworkMappingInputPropertiesArgs) ToCreateNetworkMappingInputPropertiesPtrOutputWithContext(ctx context.Context) CreateNetworkMappingInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateNetworkMappingInputPropertiesOutput).ToCreateNetworkMappingInputPropertiesPtrOutputWithContext(ctx)
}

// CreateNetworkMappingInputPropertiesPtrInput is an input type that accepts CreateNetworkMappingInputPropertiesArgs, CreateNetworkMappingInputPropertiesPtr and CreateNetworkMappingInputPropertiesPtrOutput values.
// You can construct a concrete instance of `CreateNetworkMappingInputPropertiesPtrInput` via:
//
//          CreateNetworkMappingInputPropertiesArgs{...}
//
//  or:
//
//          nil
type CreateNetworkMappingInputPropertiesPtrInput interface {
	pulumi.Input

	ToCreateNetworkMappingInputPropertiesPtrOutput() CreateNetworkMappingInputPropertiesPtrOutput
	ToCreateNetworkMappingInputPropertiesPtrOutputWithContext(context.Context) CreateNetworkMappingInputPropertiesPtrOutput
}

type createNetworkMappingInputPropertiesPtrType CreateNetworkMappingInputPropertiesArgs

func CreateNetworkMappingInputPropertiesPtr(v *CreateNetworkMappingInputPropertiesArgs) CreateNetworkMappingInputPropertiesPtrInput {
	return (*createNetworkMappingInputPropertiesPtrType)(v)
}

func (*createNetworkMappingInputPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CreateNetworkMappingInputProperties)(nil)).Elem()
}

func (i *createNetworkMappingInputPropertiesPtrType) ToCreateNetworkMappingInputPropertiesPtrOutput() CreateNetworkMappingInputPropertiesPtrOutput {
	return i.ToCreateNetworkMappingInputPropertiesPtrOutputWithContext(context.Background())
}

func (i *createNetworkMappingInputPropertiesPtrType) ToCreateNetworkMappingInputPropertiesPtrOutputWithContext(ctx context.Context) CreateNetworkMappingInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateNetworkMappingInputPropertiesPtrOutput)
}

// Policy creation properties.
type CreatePolicyInputProperties struct {
	// The ReplicationProviderSettings.
	ProviderSpecificInput interface{} `pulumi:"providerSpecificInput"`
}

// CreatePolicyInputPropertiesInput is an input type that accepts CreatePolicyInputPropertiesArgs and CreatePolicyInputPropertiesOutput values.
// You can construct a concrete instance of `CreatePolicyInputPropertiesInput` via:
//
//          CreatePolicyInputPropertiesArgs{...}
type CreatePolicyInputPropertiesInput interface {
	pulumi.Input

	ToCreatePolicyInputPropertiesOutput() CreatePolicyInputPropertiesOutput
	ToCreatePolicyInputPropertiesOutputWithContext(context.Context) CreatePolicyInputPropertiesOutput
}

// Policy creation properties.
type CreatePolicyInputPropertiesArgs struct {
	// The ReplicationProviderSettings.
	ProviderSpecificInput pulumi.Input `pulumi:"providerSpecificInput"`
}

func (CreatePolicyInputPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CreatePolicyInputProperties)(nil)).Elem()
}

func (i CreatePolicyInputPropertiesArgs) ToCreatePolicyInputPropertiesOutput() CreatePolicyInputPropertiesOutput {
	return i.ToCreatePolicyInputPropertiesOutputWithContext(context.Background())
}

func (i CreatePolicyInputPropertiesArgs) ToCreatePolicyInputPropertiesOutputWithContext(ctx context.Context) CreatePolicyInputPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreatePolicyInputPropertiesOutput)
}

func (i CreatePolicyInputPropertiesArgs) ToCreatePolicyInputPropertiesPtrOutput() CreatePolicyInputPropertiesPtrOutput {
	return i.ToCreatePolicyInputPropertiesPtrOutputWithContext(context.Background())
}

func (i CreatePolicyInputPropertiesArgs) ToCreatePolicyInputPropertiesPtrOutputWithContext(ctx context.Context) CreatePolicyInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreatePolicyInputPropertiesOutput).ToCreatePolicyInputPropertiesPtrOutputWithContext(ctx)
}

// CreatePolicyInputPropertiesPtrInput is an input type that accepts CreatePolicyInputPropertiesArgs, CreatePolicyInputPropertiesPtr and CreatePolicyInputPropertiesPtrOutput values.
// You can construct a concrete instance of `CreatePolicyInputPropertiesPtrInput` via:
//
//          CreatePolicyInputPropertiesArgs{...}
//
//  or:
//
//          nil
type CreatePolicyInputPropertiesPtrInput interface {
	pulumi.Input

	ToCreatePolicyInputPropertiesPtrOutput() CreatePolicyInputPropertiesPtrOutput
	ToCreatePolicyInputPropertiesPtrOutputWithContext(context.Context) CreatePolicyInputPropertiesPtrOutput
}

type createPolicyInputPropertiesPtrType CreatePolicyInputPropertiesArgs

func CreatePolicyInputPropertiesPtr(v *CreatePolicyInputPropertiesArgs) CreatePolicyInputPropertiesPtrInput {
	return (*createPolicyInputPropertiesPtrType)(v)
}

func (*createPolicyInputPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CreatePolicyInputProperties)(nil)).Elem()
}

func (i *createPolicyInputPropertiesPtrType) ToCreatePolicyInputPropertiesPtrOutput() CreatePolicyInputPropertiesPtrOutput {
	return i.ToCreatePolicyInputPropertiesPtrOutputWithContext(context.Background())
}

func (i *createPolicyInputPropertiesPtrType) ToCreatePolicyInputPropertiesPtrOutputWithContext(ctx context.Context) CreatePolicyInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreatePolicyInputPropertiesPtrOutput)
}

// Configure pairing input properties.
type CreateProtectionContainerMappingInputProperties struct {
	// Applicable policy.
	PolicyId *string `pulumi:"policyId"`
	// Provider specific input for pairing.
	ProviderSpecificInput interface{} `pulumi:"providerSpecificInput"`
	// The target unique protection container name.
	TargetProtectionContainerId *string `pulumi:"targetProtectionContainerId"`
}

// CreateProtectionContainerMappingInputPropertiesInput is an input type that accepts CreateProtectionContainerMappingInputPropertiesArgs and CreateProtectionContainerMappingInputPropertiesOutput values.
// You can construct a concrete instance of `CreateProtectionContainerMappingInputPropertiesInput` via:
//
//          CreateProtectionContainerMappingInputPropertiesArgs{...}
type CreateProtectionContainerMappingInputPropertiesInput interface {
	pulumi.Input

	ToCreateProtectionContainerMappingInputPropertiesOutput() CreateProtectionContainerMappingInputPropertiesOutput
	ToCreateProtectionContainerMappingInputPropertiesOutputWithContext(context.Context) CreateProtectionContainerMappingInputPropertiesOutput
}

// Configure pairing input properties.
type CreateProtectionContainerMappingInputPropertiesArgs struct {
	// Applicable policy.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// Provider specific input for pairing.
	ProviderSpecificInput pulumi.Input `pulumi:"providerSpecificInput"`
	// The target unique protection container name.
	TargetProtectionContainerId pulumi.StringPtrInput `pulumi:"targetProtectionContainerId"`
}

func (CreateProtectionContainerMappingInputPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CreateProtectionContainerMappingInputProperties)(nil)).Elem()
}

func (i CreateProtectionContainerMappingInputPropertiesArgs) ToCreateProtectionContainerMappingInputPropertiesOutput() CreateProtectionContainerMappingInputPropertiesOutput {
	return i.ToCreateProtectionContainerMappingInputPropertiesOutputWithContext(context.Background())
}

func (i CreateProtectionContainerMappingInputPropertiesArgs) ToCreateProtectionContainerMappingInputPropertiesOutputWithContext(ctx context.Context) CreateProtectionContainerMappingInputPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateProtectionContainerMappingInputPropertiesOutput)
}

func (i CreateProtectionContainerMappingInputPropertiesArgs) ToCreateProtectionContainerMappingInputPropertiesPtrOutput() CreateProtectionContainerMappingInputPropertiesPtrOutput {
	return i.ToCreateProtectionContainerMappingInputPropertiesPtrOutputWithContext(context.Background())
}

func (i CreateProtectionContainerMappingInputPropertiesArgs) ToCreateProtectionContainerMappingInputPropertiesPtrOutputWithContext(ctx context.Context) CreateProtectionContainerMappingInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateProtectionContainerMappingInputPropertiesOutput).ToCreateProtectionContainerMappingInputPropertiesPtrOutputWithContext(ctx)
}

// CreateProtectionContainerMappingInputPropertiesPtrInput is an input type that accepts CreateProtectionContainerMappingInputPropertiesArgs, CreateProtectionContainerMappingInputPropertiesPtr and CreateProtectionContainerMappingInputPropertiesPtrOutput values.
// You can construct a concrete instance of `CreateProtectionContainerMappingInputPropertiesPtrInput` via:
//
//          CreateProtectionContainerMappingInputPropertiesArgs{...}
//
//  or:
//
//          nil
type CreateProtectionContainerMappingInputPropertiesPtrInput interface {
	pulumi.Input

	ToCreateProtectionContainerMappingInputPropertiesPtrOutput() CreateProtectionContainerMappingInputPropertiesPtrOutput
	ToCreateProtectionContainerMappingInputPropertiesPtrOutputWithContext(context.Context) CreateProtectionContainerMappingInputPropertiesPtrOutput
}

type createProtectionContainerMappingInputPropertiesPtrType CreateProtectionContainerMappingInputPropertiesArgs

func CreateProtectionContainerMappingInputPropertiesPtr(v *CreateProtectionContainerMappingInputPropertiesArgs) CreateProtectionContainerMappingInputPropertiesPtrInput {
	return (*createProtectionContainerMappingInputPropertiesPtrType)(v)
}

func (*createProtectionContainerMappingInputPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CreateProtectionContainerMappingInputProperties)(nil)).Elem()
}

func (i *createProtectionContainerMappingInputPropertiesPtrType) ToCreateProtectionContainerMappingInputPropertiesPtrOutput() CreateProtectionContainerMappingInputPropertiesPtrOutput {
	return i.ToCreateProtectionContainerMappingInputPropertiesPtrOutputWithContext(context.Background())
}

func (i *createProtectionContainerMappingInputPropertiesPtrType) ToCreateProtectionContainerMappingInputPropertiesPtrOutputWithContext(ctx context.Context) CreateProtectionContainerMappingInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateProtectionContainerMappingInputPropertiesPtrOutput)
}

// Recovery plan creation properties.
type CreateRecoveryPlanInputProperties struct {
	// The failover deployment model.
	FailoverDeploymentModel *string `pulumi:"failoverDeploymentModel"`
	// The recovery plan groups.
	Groups []RecoveryPlanGroup `pulumi:"groups"`
	// The primary fabric Id.
	PrimaryFabricId string `pulumi:"primaryFabricId"`
	// The provider specific input.
	ProviderSpecificInput []RecoveryPlanA2AInput `pulumi:"providerSpecificInput"`
	// The recovery fabric Id.
	RecoveryFabricId string `pulumi:"recoveryFabricId"`
}

// CreateRecoveryPlanInputPropertiesInput is an input type that accepts CreateRecoveryPlanInputPropertiesArgs and CreateRecoveryPlanInputPropertiesOutput values.
// You can construct a concrete instance of `CreateRecoveryPlanInputPropertiesInput` via:
//
//          CreateRecoveryPlanInputPropertiesArgs{...}
type CreateRecoveryPlanInputPropertiesInput interface {
	pulumi.Input

	ToCreateRecoveryPlanInputPropertiesOutput() CreateRecoveryPlanInputPropertiesOutput
	ToCreateRecoveryPlanInputPropertiesOutputWithContext(context.Context) CreateRecoveryPlanInputPropertiesOutput
}

// Recovery plan creation properties.
type CreateRecoveryPlanInputPropertiesArgs struct {
	// The failover deployment model.
	FailoverDeploymentModel pulumi.StringPtrInput `pulumi:"failoverDeploymentModel"`
	// The recovery plan groups.
	Groups RecoveryPlanGroupArrayInput `pulumi:"groups"`
	// The primary fabric Id.
	PrimaryFabricId pulumi.StringInput `pulumi:"primaryFabricId"`
	// The provider specific input.
	ProviderSpecificInput RecoveryPlanA2AInputArrayInput `pulumi:"providerSpecificInput"`
	// The recovery fabric Id.
	RecoveryFabricId pulumi.StringInput `pulumi:"recoveryFabricId"`
}

func (CreateRecoveryPlanInputPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CreateRecoveryPlanInputProperties)(nil)).Elem()
}

func (i CreateRecoveryPlanInputPropertiesArgs) ToCreateRecoveryPlanInputPropertiesOutput() CreateRecoveryPlanInputPropertiesOutput {
	return i.ToCreateRecoveryPlanInputPropertiesOutputWithContext(context.Background())
}

func (i CreateRecoveryPlanInputPropertiesArgs) ToCreateRecoveryPlanInputPropertiesOutputWithContext(ctx context.Context) CreateRecoveryPlanInputPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateRecoveryPlanInputPropertiesOutput)
}

func (i CreateRecoveryPlanInputPropertiesArgs) ToCreateRecoveryPlanInputPropertiesPtrOutput() CreateRecoveryPlanInputPropertiesPtrOutput {
	return i.ToCreateRecoveryPlanInputPropertiesPtrOutputWithContext(context.Background())
}

func (i CreateRecoveryPlanInputPropertiesArgs) ToCreateRecoveryPlanInputPropertiesPtrOutputWithContext(ctx context.Context) CreateRecoveryPlanInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateRecoveryPlanInputPropertiesOutput).ToCreateRecoveryPlanInputPropertiesPtrOutputWithContext(ctx)
}

// CreateRecoveryPlanInputPropertiesPtrInput is an input type that accepts CreateRecoveryPlanInputPropertiesArgs, CreateRecoveryPlanInputPropertiesPtr and CreateRecoveryPlanInputPropertiesPtrOutput values.
// You can construct a concrete instance of `CreateRecoveryPlanInputPropertiesPtrInput` via:
//
//          CreateRecoveryPlanInputPropertiesArgs{...}
//
//  or:
//
//          nil
type CreateRecoveryPlanInputPropertiesPtrInput interface {
	pulumi.Input

	ToCreateRecoveryPlanInputPropertiesPtrOutput() CreateRecoveryPlanInputPropertiesPtrOutput
	ToCreateRecoveryPlanInputPropertiesPtrOutputWithContext(context.Context) CreateRecoveryPlanInputPropertiesPtrOutput
}

type createRecoveryPlanInputPropertiesPtrType CreateRecoveryPlanInputPropertiesArgs

func CreateRecoveryPlanInputPropertiesPtr(v *CreateRecoveryPlanInputPropertiesArgs) CreateRecoveryPlanInputPropertiesPtrInput {
	return (*createRecoveryPlanInputPropertiesPtrType)(v)
}

func (*createRecoveryPlanInputPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CreateRecoveryPlanInputProperties)(nil)).Elem()
}

func (i *createRecoveryPlanInputPropertiesPtrType) ToCreateRecoveryPlanInputPropertiesPtrOutput() CreateRecoveryPlanInputPropertiesPtrOutput {
	return i.ToCreateRecoveryPlanInputPropertiesPtrOutputWithContext(context.Background())
}

func (i *createRecoveryPlanInputPropertiesPtrType) ToCreateRecoveryPlanInputPropertiesPtrOutputWithContext(ctx context.Context) CreateRecoveryPlanInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateRecoveryPlanInputPropertiesPtrOutput)
}

// Current job details of the migration item.
type CurrentJobDetailsResponse struct {
	// The ARM Id of the job being executed.
	JobId *string `pulumi:"jobId"`
	// The job name.
	JobName *string `pulumi:"jobName"`
	// The start time of the job.
	StartTime *string `pulumi:"startTime"`
}

// Current job details of the migration item.
type CurrentJobDetailsResponseOutput struct{ *pulumi.OutputState }

func (CurrentJobDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CurrentJobDetailsResponse)(nil)).Elem()
}

func (o CurrentJobDetailsResponseOutput) ToCurrentJobDetailsResponseOutput() CurrentJobDetailsResponseOutput {
	return o
}

func (o CurrentJobDetailsResponseOutput) ToCurrentJobDetailsResponseOutputWithContext(ctx context.Context) CurrentJobDetailsResponseOutput {
	return o
}

func (o CurrentJobDetailsResponseOutput) ToCurrentJobDetailsResponsePtrOutput() CurrentJobDetailsResponsePtrOutput {
	return o.ToCurrentJobDetailsResponsePtrOutputWithContext(context.Background())
}

func (o CurrentJobDetailsResponseOutput) ToCurrentJobDetailsResponsePtrOutputWithContext(ctx context.Context) CurrentJobDetailsResponsePtrOutput {
	return o.ApplyT(func(v CurrentJobDetailsResponse) *CurrentJobDetailsResponse {
		return &v
	}).(CurrentJobDetailsResponsePtrOutput)
}

// The ARM Id of the job being executed.
func (o CurrentJobDetailsResponseOutput) JobId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CurrentJobDetailsResponse) *string { return v.JobId }).(pulumi.StringPtrOutput)
}

// The job name.
func (o CurrentJobDetailsResponseOutput) JobName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CurrentJobDetailsResponse) *string { return v.JobName }).(pulumi.StringPtrOutput)
}

// The start time of the job.
func (o CurrentJobDetailsResponseOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CurrentJobDetailsResponse) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type CurrentJobDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (CurrentJobDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CurrentJobDetailsResponse)(nil)).Elem()
}

func (o CurrentJobDetailsResponsePtrOutput) ToCurrentJobDetailsResponsePtrOutput() CurrentJobDetailsResponsePtrOutput {
	return o
}

func (o CurrentJobDetailsResponsePtrOutput) ToCurrentJobDetailsResponsePtrOutputWithContext(ctx context.Context) CurrentJobDetailsResponsePtrOutput {
	return o
}

func (o CurrentJobDetailsResponsePtrOutput) Elem() CurrentJobDetailsResponseOutput {
	return o.ApplyT(func(v *CurrentJobDetailsResponse) CurrentJobDetailsResponse { return *v }).(CurrentJobDetailsResponseOutput)
}

// The ARM Id of the job being executed.
func (o CurrentJobDetailsResponsePtrOutput) JobId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CurrentJobDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.JobId
	}).(pulumi.StringPtrOutput)
}

// The job name.
func (o CurrentJobDetailsResponsePtrOutput) JobName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CurrentJobDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.JobName
	}).(pulumi.StringPtrOutput)
}

// The start time of the job.
func (o CurrentJobDetailsResponsePtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CurrentJobDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

// Current scenario details of the protected entity.
type CurrentScenarioDetailsResponse struct {
	// ARM Id of the job being executed.
	JobId *string `pulumi:"jobId"`
	// Scenario name.
	ScenarioName *string `pulumi:"scenarioName"`
	// Start time of the workflow.
	StartTime *string `pulumi:"startTime"`
}

// Current scenario details of the protected entity.
type CurrentScenarioDetailsResponseOutput struct{ *pulumi.OutputState }

func (CurrentScenarioDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CurrentScenarioDetailsResponse)(nil)).Elem()
}

func (o CurrentScenarioDetailsResponseOutput) ToCurrentScenarioDetailsResponseOutput() CurrentScenarioDetailsResponseOutput {
	return o
}

func (o CurrentScenarioDetailsResponseOutput) ToCurrentScenarioDetailsResponseOutputWithContext(ctx context.Context) CurrentScenarioDetailsResponseOutput {
	return o
}

func (o CurrentScenarioDetailsResponseOutput) ToCurrentScenarioDetailsResponsePtrOutput() CurrentScenarioDetailsResponsePtrOutput {
	return o.ToCurrentScenarioDetailsResponsePtrOutputWithContext(context.Background())
}

func (o CurrentScenarioDetailsResponseOutput) ToCurrentScenarioDetailsResponsePtrOutputWithContext(ctx context.Context) CurrentScenarioDetailsResponsePtrOutput {
	return o.ApplyT(func(v CurrentScenarioDetailsResponse) *CurrentScenarioDetailsResponse {
		return &v
	}).(CurrentScenarioDetailsResponsePtrOutput)
}

// ARM Id of the job being executed.
func (o CurrentScenarioDetailsResponseOutput) JobId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CurrentScenarioDetailsResponse) *string { return v.JobId }).(pulumi.StringPtrOutput)
}

// Scenario name.
func (o CurrentScenarioDetailsResponseOutput) ScenarioName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CurrentScenarioDetailsResponse) *string { return v.ScenarioName }).(pulumi.StringPtrOutput)
}

// Start time of the workflow.
func (o CurrentScenarioDetailsResponseOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CurrentScenarioDetailsResponse) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type CurrentScenarioDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (CurrentScenarioDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CurrentScenarioDetailsResponse)(nil)).Elem()
}

func (o CurrentScenarioDetailsResponsePtrOutput) ToCurrentScenarioDetailsResponsePtrOutput() CurrentScenarioDetailsResponsePtrOutput {
	return o
}

func (o CurrentScenarioDetailsResponsePtrOutput) ToCurrentScenarioDetailsResponsePtrOutputWithContext(ctx context.Context) CurrentScenarioDetailsResponsePtrOutput {
	return o
}

func (o CurrentScenarioDetailsResponsePtrOutput) Elem() CurrentScenarioDetailsResponseOutput {
	return o.ApplyT(func(v *CurrentScenarioDetailsResponse) CurrentScenarioDetailsResponse { return *v }).(CurrentScenarioDetailsResponseOutput)
}

// ARM Id of the job being executed.
func (o CurrentScenarioDetailsResponsePtrOutput) JobId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CurrentScenarioDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.JobId
	}).(pulumi.StringPtrOutput)
}

// Scenario name.
func (o CurrentScenarioDetailsResponsePtrOutput) ScenarioName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CurrentScenarioDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ScenarioName
	}).(pulumi.StringPtrOutput)
}

// Start time of the workflow.
func (o CurrentScenarioDetailsResponsePtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CurrentScenarioDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

// Additional information of the DPMContainer.
type DPMContainerExtendedInfo struct {
	// Last refresh time of the DPMContainer.
	LastRefreshedAt *string `pulumi:"lastRefreshedAt"`
}

// DPMContainerExtendedInfoInput is an input type that accepts DPMContainerExtendedInfoArgs and DPMContainerExtendedInfoOutput values.
// You can construct a concrete instance of `DPMContainerExtendedInfoInput` via:
//
//          DPMContainerExtendedInfoArgs{...}
type DPMContainerExtendedInfoInput interface {
	pulumi.Input

	ToDPMContainerExtendedInfoOutput() DPMContainerExtendedInfoOutput
	ToDPMContainerExtendedInfoOutputWithContext(context.Context) DPMContainerExtendedInfoOutput
}

// Additional information of the DPMContainer.
type DPMContainerExtendedInfoArgs struct {
	// Last refresh time of the DPMContainer.
	LastRefreshedAt pulumi.StringPtrInput `pulumi:"lastRefreshedAt"`
}

func (DPMContainerExtendedInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DPMContainerExtendedInfo)(nil)).Elem()
}

func (i DPMContainerExtendedInfoArgs) ToDPMContainerExtendedInfoOutput() DPMContainerExtendedInfoOutput {
	return i.ToDPMContainerExtendedInfoOutputWithContext(context.Background())
}

func (i DPMContainerExtendedInfoArgs) ToDPMContainerExtendedInfoOutputWithContext(ctx context.Context) DPMContainerExtendedInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DPMContainerExtendedInfoOutput)
}

func (i DPMContainerExtendedInfoArgs) ToDPMContainerExtendedInfoPtrOutput() DPMContainerExtendedInfoPtrOutput {
	return i.ToDPMContainerExtendedInfoPtrOutputWithContext(context.Background())
}

func (i DPMContainerExtendedInfoArgs) ToDPMContainerExtendedInfoPtrOutputWithContext(ctx context.Context) DPMContainerExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DPMContainerExtendedInfoOutput).ToDPMContainerExtendedInfoPtrOutputWithContext(ctx)
}

// DPMContainerExtendedInfoPtrInput is an input type that accepts DPMContainerExtendedInfoArgs, DPMContainerExtendedInfoPtr and DPMContainerExtendedInfoPtrOutput values.
// You can construct a concrete instance of `DPMContainerExtendedInfoPtrInput` via:
//
//          DPMContainerExtendedInfoArgs{...}
//
//  or:
//
//          nil
type DPMContainerExtendedInfoPtrInput interface {
	pulumi.Input

	ToDPMContainerExtendedInfoPtrOutput() DPMContainerExtendedInfoPtrOutput
	ToDPMContainerExtendedInfoPtrOutputWithContext(context.Context) DPMContainerExtendedInfoPtrOutput
}

type dpmcontainerExtendedInfoPtrType DPMContainerExtendedInfoArgs

func DPMContainerExtendedInfoPtr(v *DPMContainerExtendedInfoArgs) DPMContainerExtendedInfoPtrInput {
	return (*dpmcontainerExtendedInfoPtrType)(v)
}

func (*dpmcontainerExtendedInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DPMContainerExtendedInfo)(nil)).Elem()
}

func (i *dpmcontainerExtendedInfoPtrType) ToDPMContainerExtendedInfoPtrOutput() DPMContainerExtendedInfoPtrOutput {
	return i.ToDPMContainerExtendedInfoPtrOutputWithContext(context.Background())
}

func (i *dpmcontainerExtendedInfoPtrType) ToDPMContainerExtendedInfoPtrOutputWithContext(ctx context.Context) DPMContainerExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DPMContainerExtendedInfoPtrOutput)
}

// Additional information of the DPMContainer.
type DPMContainerExtendedInfoResponse struct {
	// Last refresh time of the DPMContainer.
	LastRefreshedAt *string `pulumi:"lastRefreshedAt"`
}

// Additional information of the DPMContainer.
type DPMContainerExtendedInfoResponseOutput struct{ *pulumi.OutputState }

func (DPMContainerExtendedInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DPMContainerExtendedInfoResponse)(nil)).Elem()
}

func (o DPMContainerExtendedInfoResponseOutput) ToDPMContainerExtendedInfoResponseOutput() DPMContainerExtendedInfoResponseOutput {
	return o
}

func (o DPMContainerExtendedInfoResponseOutput) ToDPMContainerExtendedInfoResponseOutputWithContext(ctx context.Context) DPMContainerExtendedInfoResponseOutput {
	return o
}

func (o DPMContainerExtendedInfoResponseOutput) ToDPMContainerExtendedInfoResponsePtrOutput() DPMContainerExtendedInfoResponsePtrOutput {
	return o.ToDPMContainerExtendedInfoResponsePtrOutputWithContext(context.Background())
}

func (o DPMContainerExtendedInfoResponseOutput) ToDPMContainerExtendedInfoResponsePtrOutputWithContext(ctx context.Context) DPMContainerExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v DPMContainerExtendedInfoResponse) *DPMContainerExtendedInfoResponse {
		return &v
	}).(DPMContainerExtendedInfoResponsePtrOutput)
}

// Last refresh time of the DPMContainer.
func (o DPMContainerExtendedInfoResponseOutput) LastRefreshedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMContainerExtendedInfoResponse) *string { return v.LastRefreshedAt }).(pulumi.StringPtrOutput)
}

type DPMContainerExtendedInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (DPMContainerExtendedInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DPMContainerExtendedInfoResponse)(nil)).Elem()
}

func (o DPMContainerExtendedInfoResponsePtrOutput) ToDPMContainerExtendedInfoResponsePtrOutput() DPMContainerExtendedInfoResponsePtrOutput {
	return o
}

func (o DPMContainerExtendedInfoResponsePtrOutput) ToDPMContainerExtendedInfoResponsePtrOutputWithContext(ctx context.Context) DPMContainerExtendedInfoResponsePtrOutput {
	return o
}

func (o DPMContainerExtendedInfoResponsePtrOutput) Elem() DPMContainerExtendedInfoResponseOutput {
	return o.ApplyT(func(v *DPMContainerExtendedInfoResponse) DPMContainerExtendedInfoResponse { return *v }).(DPMContainerExtendedInfoResponseOutput)
}

// Last refresh time of the DPMContainer.
func (o DPMContainerExtendedInfoResponsePtrOutput) LastRefreshedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMContainerExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastRefreshedAt
	}).(pulumi.StringPtrOutput)
}

// Additional information on Backup engine specific backup item.
type DPMProtectedItem struct {
	// Backup Management server protecting this backup item
	BackupEngineName *string `pulumi:"backupEngineName"`
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Extended info of the backup item.
	ExtendedInfo *DPMProtectedItemExtendedInfo `pulumi:"extendedInfo"`
	// Friendly name of the managed item
	FriendlyName *string `pulumi:"friendlyName"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// backup item type.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Protection state of the backup engine
	ProtectionState *string `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Type of workload this item represents.
	WorkloadType *string `pulumi:"workloadType"`
}

// DPMProtectedItemInput is an input type that accepts DPMProtectedItemArgs and DPMProtectedItemOutput values.
// You can construct a concrete instance of `DPMProtectedItemInput` via:
//
//          DPMProtectedItemArgs{...}
type DPMProtectedItemInput interface {
	pulumi.Input

	ToDPMProtectedItemOutput() DPMProtectedItemOutput
	ToDPMProtectedItemOutputWithContext(context.Context) DPMProtectedItemOutput
}

// Additional information on Backup engine specific backup item.
type DPMProtectedItemArgs struct {
	// Backup Management server protecting this backup item
	BackupEngineName pulumi.StringPtrInput `pulumi:"backupEngineName"`
	// Type of backup management for the backed up item.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName pulumi.StringPtrInput `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode pulumi.StringPtrInput `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC pulumi.StringPtrInput `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining pulumi.StringPtrInput `pulumi:"deferredDeleteTimeRemaining"`
	// Extended info of the backup item.
	ExtendedInfo DPMProtectedItemExtendedInfoPtrInput `pulumi:"extendedInfo"`
	// Friendly name of the managed item
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming pulumi.BoolPtrInput `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate pulumi.BoolPtrInput `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete pulumi.BoolPtrInput `pulumi:"isScheduledForDeferredDelete"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint pulumi.StringPtrInput `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// backup item type.
	ProtectedItemType pulumi.StringInput `pulumi:"protectedItemType"`
	// Protection state of the backup engine
	ProtectionState pulumi.StringPtrInput `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
	// Type of workload this item represents.
	WorkloadType pulumi.StringPtrInput `pulumi:"workloadType"`
}

func (DPMProtectedItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DPMProtectedItem)(nil)).Elem()
}

func (i DPMProtectedItemArgs) ToDPMProtectedItemOutput() DPMProtectedItemOutput {
	return i.ToDPMProtectedItemOutputWithContext(context.Background())
}

func (i DPMProtectedItemArgs) ToDPMProtectedItemOutputWithContext(ctx context.Context) DPMProtectedItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DPMProtectedItemOutput)
}

// Additional information of DPM Protected item.
type DPMProtectedItemExtendedInfo struct {
	// Used Disk storage in bytes.
	DiskStorageUsedInBytes *string `pulumi:"diskStorageUsedInBytes"`
	// To check if backup item is collocated.
	IsCollocated *bool `pulumi:"isCollocated"`
	// To check if backup item is cloud protected.
	IsPresentOnCloud *bool `pulumi:"isPresentOnCloud"`
	// Last backup status information on backup item.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Last refresh time on backup item.
	LastRefreshedAt *string `pulumi:"lastRefreshedAt"`
	// Oldest cloud recovery point time.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// latest disk recovery point time.
	OnPremiseLatestRecoveryPoint *string `pulumi:"onPremiseLatestRecoveryPoint"`
	// Oldest disk recovery point time.
	OnPremiseOldestRecoveryPoint *string `pulumi:"onPremiseOldestRecoveryPoint"`
	// disk recovery point count.
	OnPremiseRecoveryPointCount *int `pulumi:"onPremiseRecoveryPointCount"`
	// Attribute to provide information on various DBs.
	ProtectableObjectLoadPath map[string]string `pulumi:"protectableObjectLoadPath"`
	// To check if backup item is disk protected.
	Protected *bool `pulumi:"protected"`
	// Protection group name of the backup item.
	ProtectionGroupName *string `pulumi:"protectionGroupName"`
	// cloud recovery point count.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
	// total Disk storage in bytes.
	TotalDiskStorageSizeInBytes *string `pulumi:"totalDiskStorageSizeInBytes"`
}

// DPMProtectedItemExtendedInfoInput is an input type that accepts DPMProtectedItemExtendedInfoArgs and DPMProtectedItemExtendedInfoOutput values.
// You can construct a concrete instance of `DPMProtectedItemExtendedInfoInput` via:
//
//          DPMProtectedItemExtendedInfoArgs{...}
type DPMProtectedItemExtendedInfoInput interface {
	pulumi.Input

	ToDPMProtectedItemExtendedInfoOutput() DPMProtectedItemExtendedInfoOutput
	ToDPMProtectedItemExtendedInfoOutputWithContext(context.Context) DPMProtectedItemExtendedInfoOutput
}

// Additional information of DPM Protected item.
type DPMProtectedItemExtendedInfoArgs struct {
	// Used Disk storage in bytes.
	DiskStorageUsedInBytes pulumi.StringPtrInput `pulumi:"diskStorageUsedInBytes"`
	// To check if backup item is collocated.
	IsCollocated pulumi.BoolPtrInput `pulumi:"isCollocated"`
	// To check if backup item is cloud protected.
	IsPresentOnCloud pulumi.BoolPtrInput `pulumi:"isPresentOnCloud"`
	// Last backup status information on backup item.
	LastBackupStatus pulumi.StringPtrInput `pulumi:"lastBackupStatus"`
	// Last refresh time on backup item.
	LastRefreshedAt pulumi.StringPtrInput `pulumi:"lastRefreshedAt"`
	// Oldest cloud recovery point time.
	OldestRecoveryPoint pulumi.StringPtrInput `pulumi:"oldestRecoveryPoint"`
	// latest disk recovery point time.
	OnPremiseLatestRecoveryPoint pulumi.StringPtrInput `pulumi:"onPremiseLatestRecoveryPoint"`
	// Oldest disk recovery point time.
	OnPremiseOldestRecoveryPoint pulumi.StringPtrInput `pulumi:"onPremiseOldestRecoveryPoint"`
	// disk recovery point count.
	OnPremiseRecoveryPointCount pulumi.IntPtrInput `pulumi:"onPremiseRecoveryPointCount"`
	// Attribute to provide information on various DBs.
	ProtectableObjectLoadPath pulumi.StringMapInput `pulumi:"protectableObjectLoadPath"`
	// To check if backup item is disk protected.
	Protected pulumi.BoolPtrInput `pulumi:"protected"`
	// Protection group name of the backup item.
	ProtectionGroupName pulumi.StringPtrInput `pulumi:"protectionGroupName"`
	// cloud recovery point count.
	RecoveryPointCount pulumi.IntPtrInput `pulumi:"recoveryPointCount"`
	// total Disk storage in bytes.
	TotalDiskStorageSizeInBytes pulumi.StringPtrInput `pulumi:"totalDiskStorageSizeInBytes"`
}

func (DPMProtectedItemExtendedInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DPMProtectedItemExtendedInfo)(nil)).Elem()
}

func (i DPMProtectedItemExtendedInfoArgs) ToDPMProtectedItemExtendedInfoOutput() DPMProtectedItemExtendedInfoOutput {
	return i.ToDPMProtectedItemExtendedInfoOutputWithContext(context.Background())
}

func (i DPMProtectedItemExtendedInfoArgs) ToDPMProtectedItemExtendedInfoOutputWithContext(ctx context.Context) DPMProtectedItemExtendedInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DPMProtectedItemExtendedInfoOutput)
}

func (i DPMProtectedItemExtendedInfoArgs) ToDPMProtectedItemExtendedInfoPtrOutput() DPMProtectedItemExtendedInfoPtrOutput {
	return i.ToDPMProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (i DPMProtectedItemExtendedInfoArgs) ToDPMProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) DPMProtectedItemExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DPMProtectedItemExtendedInfoOutput).ToDPMProtectedItemExtendedInfoPtrOutputWithContext(ctx)
}

// DPMProtectedItemExtendedInfoPtrInput is an input type that accepts DPMProtectedItemExtendedInfoArgs, DPMProtectedItemExtendedInfoPtr and DPMProtectedItemExtendedInfoPtrOutput values.
// You can construct a concrete instance of `DPMProtectedItemExtendedInfoPtrInput` via:
//
//          DPMProtectedItemExtendedInfoArgs{...}
//
//  or:
//
//          nil
type DPMProtectedItemExtendedInfoPtrInput interface {
	pulumi.Input

	ToDPMProtectedItemExtendedInfoPtrOutput() DPMProtectedItemExtendedInfoPtrOutput
	ToDPMProtectedItemExtendedInfoPtrOutputWithContext(context.Context) DPMProtectedItemExtendedInfoPtrOutput
}

type dpmprotectedItemExtendedInfoPtrType DPMProtectedItemExtendedInfoArgs

func DPMProtectedItemExtendedInfoPtr(v *DPMProtectedItemExtendedInfoArgs) DPMProtectedItemExtendedInfoPtrInput {
	return (*dpmprotectedItemExtendedInfoPtrType)(v)
}

func (*dpmprotectedItemExtendedInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DPMProtectedItemExtendedInfo)(nil)).Elem()
}

func (i *dpmprotectedItemExtendedInfoPtrType) ToDPMProtectedItemExtendedInfoPtrOutput() DPMProtectedItemExtendedInfoPtrOutput {
	return i.ToDPMProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (i *dpmprotectedItemExtendedInfoPtrType) ToDPMProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) DPMProtectedItemExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DPMProtectedItemExtendedInfoPtrOutput)
}

// Additional information of DPM Protected item.
type DPMProtectedItemExtendedInfoResponse struct {
	// Used Disk storage in bytes.
	DiskStorageUsedInBytes *string `pulumi:"diskStorageUsedInBytes"`
	// To check if backup item is collocated.
	IsCollocated *bool `pulumi:"isCollocated"`
	// To check if backup item is cloud protected.
	IsPresentOnCloud *bool `pulumi:"isPresentOnCloud"`
	// Last backup status information on backup item.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Last refresh time on backup item.
	LastRefreshedAt *string `pulumi:"lastRefreshedAt"`
	// Oldest cloud recovery point time.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// latest disk recovery point time.
	OnPremiseLatestRecoveryPoint *string `pulumi:"onPremiseLatestRecoveryPoint"`
	// Oldest disk recovery point time.
	OnPremiseOldestRecoveryPoint *string `pulumi:"onPremiseOldestRecoveryPoint"`
	// disk recovery point count.
	OnPremiseRecoveryPointCount *int `pulumi:"onPremiseRecoveryPointCount"`
	// Attribute to provide information on various DBs.
	ProtectableObjectLoadPath map[string]string `pulumi:"protectableObjectLoadPath"`
	// To check if backup item is disk protected.
	Protected *bool `pulumi:"protected"`
	// Protection group name of the backup item.
	ProtectionGroupName *string `pulumi:"protectionGroupName"`
	// cloud recovery point count.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
	// total Disk storage in bytes.
	TotalDiskStorageSizeInBytes *string `pulumi:"totalDiskStorageSizeInBytes"`
}

// Additional information of DPM Protected item.
type DPMProtectedItemExtendedInfoResponseOutput struct{ *pulumi.OutputState }

func (DPMProtectedItemExtendedInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DPMProtectedItemExtendedInfoResponse)(nil)).Elem()
}

func (o DPMProtectedItemExtendedInfoResponseOutput) ToDPMProtectedItemExtendedInfoResponseOutput() DPMProtectedItemExtendedInfoResponseOutput {
	return o
}

func (o DPMProtectedItemExtendedInfoResponseOutput) ToDPMProtectedItemExtendedInfoResponseOutputWithContext(ctx context.Context) DPMProtectedItemExtendedInfoResponseOutput {
	return o
}

func (o DPMProtectedItemExtendedInfoResponseOutput) ToDPMProtectedItemExtendedInfoResponsePtrOutput() DPMProtectedItemExtendedInfoResponsePtrOutput {
	return o.ToDPMProtectedItemExtendedInfoResponsePtrOutputWithContext(context.Background())
}

func (o DPMProtectedItemExtendedInfoResponseOutput) ToDPMProtectedItemExtendedInfoResponsePtrOutputWithContext(ctx context.Context) DPMProtectedItemExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfoResponse) *DPMProtectedItemExtendedInfoResponse {
		return &v
	}).(DPMProtectedItemExtendedInfoResponsePtrOutput)
}

// Used Disk storage in bytes.
func (o DPMProtectedItemExtendedInfoResponseOutput) DiskStorageUsedInBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfoResponse) *string { return v.DiskStorageUsedInBytes }).(pulumi.StringPtrOutput)
}

// To check if backup item is collocated.
func (o DPMProtectedItemExtendedInfoResponseOutput) IsCollocated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfoResponse) *bool { return v.IsCollocated }).(pulumi.BoolPtrOutput)
}

// To check if backup item is cloud protected.
func (o DPMProtectedItemExtendedInfoResponseOutput) IsPresentOnCloud() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfoResponse) *bool { return v.IsPresentOnCloud }).(pulumi.BoolPtrOutput)
}

// Last backup status information on backup item.
func (o DPMProtectedItemExtendedInfoResponseOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfoResponse) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Last refresh time on backup item.
func (o DPMProtectedItemExtendedInfoResponseOutput) LastRefreshedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfoResponse) *string { return v.LastRefreshedAt }).(pulumi.StringPtrOutput)
}

// Oldest cloud recovery point time.
func (o DPMProtectedItemExtendedInfoResponseOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfoResponse) *string { return v.OldestRecoveryPoint }).(pulumi.StringPtrOutput)
}

// latest disk recovery point time.
func (o DPMProtectedItemExtendedInfoResponseOutput) OnPremiseLatestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfoResponse) *string { return v.OnPremiseLatestRecoveryPoint }).(pulumi.StringPtrOutput)
}

// Oldest disk recovery point time.
func (o DPMProtectedItemExtendedInfoResponseOutput) OnPremiseOldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfoResponse) *string { return v.OnPremiseOldestRecoveryPoint }).(pulumi.StringPtrOutput)
}

// disk recovery point count.
func (o DPMProtectedItemExtendedInfoResponseOutput) OnPremiseRecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfoResponse) *int { return v.OnPremiseRecoveryPointCount }).(pulumi.IntPtrOutput)
}

// Attribute to provide information on various DBs.
func (o DPMProtectedItemExtendedInfoResponseOutput) ProtectableObjectLoadPath() pulumi.StringMapOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfoResponse) map[string]string { return v.ProtectableObjectLoadPath }).(pulumi.StringMapOutput)
}

// To check if backup item is disk protected.
func (o DPMProtectedItemExtendedInfoResponseOutput) Protected() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfoResponse) *bool { return v.Protected }).(pulumi.BoolPtrOutput)
}

// Protection group name of the backup item.
func (o DPMProtectedItemExtendedInfoResponseOutput) ProtectionGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfoResponse) *string { return v.ProtectionGroupName }).(pulumi.StringPtrOutput)
}

// cloud recovery point count.
func (o DPMProtectedItemExtendedInfoResponseOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfoResponse) *int { return v.RecoveryPointCount }).(pulumi.IntPtrOutput)
}

// total Disk storage in bytes.
func (o DPMProtectedItemExtendedInfoResponseOutput) TotalDiskStorageSizeInBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfoResponse) *string { return v.TotalDiskStorageSizeInBytes }).(pulumi.StringPtrOutput)
}

type DPMProtectedItemExtendedInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (DPMProtectedItemExtendedInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DPMProtectedItemExtendedInfoResponse)(nil)).Elem()
}

func (o DPMProtectedItemExtendedInfoResponsePtrOutput) ToDPMProtectedItemExtendedInfoResponsePtrOutput() DPMProtectedItemExtendedInfoResponsePtrOutput {
	return o
}

func (o DPMProtectedItemExtendedInfoResponsePtrOutput) ToDPMProtectedItemExtendedInfoResponsePtrOutputWithContext(ctx context.Context) DPMProtectedItemExtendedInfoResponsePtrOutput {
	return o
}

func (o DPMProtectedItemExtendedInfoResponsePtrOutput) Elem() DPMProtectedItemExtendedInfoResponseOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfoResponse) DPMProtectedItemExtendedInfoResponse { return *v }).(DPMProtectedItemExtendedInfoResponseOutput)
}

// Used Disk storage in bytes.
func (o DPMProtectedItemExtendedInfoResponsePtrOutput) DiskStorageUsedInBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.DiskStorageUsedInBytes
	}).(pulumi.StringPtrOutput)
}

// To check if backup item is collocated.
func (o DPMProtectedItemExtendedInfoResponsePtrOutput) IsCollocated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfoResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsCollocated
	}).(pulumi.BoolPtrOutput)
}

// To check if backup item is cloud protected.
func (o DPMProtectedItemExtendedInfoResponsePtrOutput) IsPresentOnCloud() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfoResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsPresentOnCloud
	}).(pulumi.BoolPtrOutput)
}

// Last backup status information on backup item.
func (o DPMProtectedItemExtendedInfoResponsePtrOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastBackupStatus
	}).(pulumi.StringPtrOutput)
}

// Last refresh time on backup item.
func (o DPMProtectedItemExtendedInfoResponsePtrOutput) LastRefreshedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastRefreshedAt
	}).(pulumi.StringPtrOutput)
}

// Oldest cloud recovery point time.
func (o DPMProtectedItemExtendedInfoResponsePtrOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// latest disk recovery point time.
func (o DPMProtectedItemExtendedInfoResponsePtrOutput) OnPremiseLatestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.OnPremiseLatestRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// Oldest disk recovery point time.
func (o DPMProtectedItemExtendedInfoResponsePtrOutput) OnPremiseOldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.OnPremiseOldestRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// disk recovery point count.
func (o DPMProtectedItemExtendedInfoResponsePtrOutput) OnPremiseRecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfoResponse) *int {
		if v == nil {
			return nil
		}
		return v.OnPremiseRecoveryPointCount
	}).(pulumi.IntPtrOutput)
}

// Attribute to provide information on various DBs.
func (o DPMProtectedItemExtendedInfoResponsePtrOutput) ProtectableObjectLoadPath() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfoResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.ProtectableObjectLoadPath
	}).(pulumi.StringMapOutput)
}

// To check if backup item is disk protected.
func (o DPMProtectedItemExtendedInfoResponsePtrOutput) Protected() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfoResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Protected
	}).(pulumi.BoolPtrOutput)
}

// Protection group name of the backup item.
func (o DPMProtectedItemExtendedInfoResponsePtrOutput) ProtectionGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionGroupName
	}).(pulumi.StringPtrOutput)
}

// cloud recovery point count.
func (o DPMProtectedItemExtendedInfoResponsePtrOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfoResponse) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointCount
	}).(pulumi.IntPtrOutput)
}

// total Disk storage in bytes.
func (o DPMProtectedItemExtendedInfoResponsePtrOutput) TotalDiskStorageSizeInBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.TotalDiskStorageSizeInBytes
	}).(pulumi.StringPtrOutput)
}

// Additional information on Backup engine specific backup item.
type DPMProtectedItemResponse struct {
	// Backup Management server protecting this backup item
	BackupEngineName *string `pulumi:"backupEngineName"`
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Extended info of the backup item.
	ExtendedInfo *DPMProtectedItemExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of the managed item
	FriendlyName *string `pulumi:"friendlyName"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// backup item type.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Protection state of the backup engine
	ProtectionState *string `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Type of workload this item represents.
	WorkloadType *string `pulumi:"workloadType"`
}

// Additional information on Backup engine specific backup item.
type DPMProtectedItemResponseOutput struct{ *pulumi.OutputState }

func (DPMProtectedItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DPMProtectedItemResponse)(nil)).Elem()
}

func (o DPMProtectedItemResponseOutput) ToDPMProtectedItemResponseOutput() DPMProtectedItemResponseOutput {
	return o
}

func (o DPMProtectedItemResponseOutput) ToDPMProtectedItemResponseOutputWithContext(ctx context.Context) DPMProtectedItemResponseOutput {
	return o
}

// Backup Management server protecting this backup item
func (o DPMProtectedItemResponseOutput) BackupEngineName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *string { return v.BackupEngineName }).(pulumi.StringPtrOutput)
}

// Type of backup management for the backed up item.
func (o DPMProtectedItemResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Name of the backup set the backup item belongs to
func (o DPMProtectedItemResponseOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o DPMProtectedItemResponseOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o DPMProtectedItemResponseOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o DPMProtectedItemResponseOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o DPMProtectedItemResponseOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Extended info of the backup item.
func (o DPMProtectedItemResponseOutput) ExtendedInfo() DPMProtectedItemExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *DPMProtectedItemExtendedInfoResponse { return v.ExtendedInfo }).(DPMProtectedItemExtendedInfoResponsePtrOutput)
}

// Friendly name of the managed item
func (o DPMProtectedItemResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o DPMProtectedItemResponseOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o DPMProtectedItemResponseOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o DPMProtectedItemResponseOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o DPMProtectedItemResponseOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o DPMProtectedItemResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// backup item type.
func (o DPMProtectedItemResponseOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Protection state of the backup engine
func (o DPMProtectedItemResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o DPMProtectedItemResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// Type of workload this item represents.
func (o DPMProtectedItemResponseOutput) WorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *string { return v.WorkloadType }).(pulumi.StringPtrOutput)
}

// Daily retention format.
type DailyRetentionFormat struct {
	// List of days of the month.
	DaysOfTheMonth []Day `pulumi:"daysOfTheMonth"`
}

// DailyRetentionFormatInput is an input type that accepts DailyRetentionFormatArgs and DailyRetentionFormatOutput values.
// You can construct a concrete instance of `DailyRetentionFormatInput` via:
//
//          DailyRetentionFormatArgs{...}
type DailyRetentionFormatInput interface {
	pulumi.Input

	ToDailyRetentionFormatOutput() DailyRetentionFormatOutput
	ToDailyRetentionFormatOutputWithContext(context.Context) DailyRetentionFormatOutput
}

// Daily retention format.
type DailyRetentionFormatArgs struct {
	// List of days of the month.
	DaysOfTheMonth DayArrayInput `pulumi:"daysOfTheMonth"`
}

func (DailyRetentionFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DailyRetentionFormat)(nil)).Elem()
}

func (i DailyRetentionFormatArgs) ToDailyRetentionFormatOutput() DailyRetentionFormatOutput {
	return i.ToDailyRetentionFormatOutputWithContext(context.Background())
}

func (i DailyRetentionFormatArgs) ToDailyRetentionFormatOutputWithContext(ctx context.Context) DailyRetentionFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DailyRetentionFormatOutput)
}

func (i DailyRetentionFormatArgs) ToDailyRetentionFormatPtrOutput() DailyRetentionFormatPtrOutput {
	return i.ToDailyRetentionFormatPtrOutputWithContext(context.Background())
}

func (i DailyRetentionFormatArgs) ToDailyRetentionFormatPtrOutputWithContext(ctx context.Context) DailyRetentionFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DailyRetentionFormatOutput).ToDailyRetentionFormatPtrOutputWithContext(ctx)
}

// DailyRetentionFormatPtrInput is an input type that accepts DailyRetentionFormatArgs, DailyRetentionFormatPtr and DailyRetentionFormatPtrOutput values.
// You can construct a concrete instance of `DailyRetentionFormatPtrInput` via:
//
//          DailyRetentionFormatArgs{...}
//
//  or:
//
//          nil
type DailyRetentionFormatPtrInput interface {
	pulumi.Input

	ToDailyRetentionFormatPtrOutput() DailyRetentionFormatPtrOutput
	ToDailyRetentionFormatPtrOutputWithContext(context.Context) DailyRetentionFormatPtrOutput
}

type dailyRetentionFormatPtrType DailyRetentionFormatArgs

func DailyRetentionFormatPtr(v *DailyRetentionFormatArgs) DailyRetentionFormatPtrInput {
	return (*dailyRetentionFormatPtrType)(v)
}

func (*dailyRetentionFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DailyRetentionFormat)(nil)).Elem()
}

func (i *dailyRetentionFormatPtrType) ToDailyRetentionFormatPtrOutput() DailyRetentionFormatPtrOutput {
	return i.ToDailyRetentionFormatPtrOutputWithContext(context.Background())
}

func (i *dailyRetentionFormatPtrType) ToDailyRetentionFormatPtrOutputWithContext(ctx context.Context) DailyRetentionFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DailyRetentionFormatPtrOutput)
}

// Daily retention format.
type DailyRetentionFormatResponse struct {
	// List of days of the month.
	DaysOfTheMonth []DayResponse `pulumi:"daysOfTheMonth"`
}

// Daily retention format.
type DailyRetentionFormatResponseOutput struct{ *pulumi.OutputState }

func (DailyRetentionFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DailyRetentionFormatResponse)(nil)).Elem()
}

func (o DailyRetentionFormatResponseOutput) ToDailyRetentionFormatResponseOutput() DailyRetentionFormatResponseOutput {
	return o
}

func (o DailyRetentionFormatResponseOutput) ToDailyRetentionFormatResponseOutputWithContext(ctx context.Context) DailyRetentionFormatResponseOutput {
	return o
}

func (o DailyRetentionFormatResponseOutput) ToDailyRetentionFormatResponsePtrOutput() DailyRetentionFormatResponsePtrOutput {
	return o.ToDailyRetentionFormatResponsePtrOutputWithContext(context.Background())
}

func (o DailyRetentionFormatResponseOutput) ToDailyRetentionFormatResponsePtrOutputWithContext(ctx context.Context) DailyRetentionFormatResponsePtrOutput {
	return o.ApplyT(func(v DailyRetentionFormatResponse) *DailyRetentionFormatResponse {
		return &v
	}).(DailyRetentionFormatResponsePtrOutput)
}

// List of days of the month.
func (o DailyRetentionFormatResponseOutput) DaysOfTheMonth() DayResponseArrayOutput {
	return o.ApplyT(func(v DailyRetentionFormatResponse) []DayResponse { return v.DaysOfTheMonth }).(DayResponseArrayOutput)
}

type DailyRetentionFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (DailyRetentionFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DailyRetentionFormatResponse)(nil)).Elem()
}

func (o DailyRetentionFormatResponsePtrOutput) ToDailyRetentionFormatResponsePtrOutput() DailyRetentionFormatResponsePtrOutput {
	return o
}

func (o DailyRetentionFormatResponsePtrOutput) ToDailyRetentionFormatResponsePtrOutputWithContext(ctx context.Context) DailyRetentionFormatResponsePtrOutput {
	return o
}

func (o DailyRetentionFormatResponsePtrOutput) Elem() DailyRetentionFormatResponseOutput {
	return o.ApplyT(func(v *DailyRetentionFormatResponse) DailyRetentionFormatResponse { return *v }).(DailyRetentionFormatResponseOutput)
}

// List of days of the month.
func (o DailyRetentionFormatResponsePtrOutput) DaysOfTheMonth() DayResponseArrayOutput {
	return o.ApplyT(func(v *DailyRetentionFormatResponse) []DayResponse {
		if v == nil {
			return nil
		}
		return v.DaysOfTheMonth
	}).(DayResponseArrayOutput)
}

// Daily retention schedule.
type DailyRetentionSchedule struct {
	// The retention duration of retention policy.
	RetentionDuration *RetentionDuration `pulumi:"retentionDuration"`
	// The retention times of retention policy.
	RetentionTimes []string `pulumi:"retentionTimes"`
}

// DailyRetentionScheduleInput is an input type that accepts DailyRetentionScheduleArgs and DailyRetentionScheduleOutput values.
// You can construct a concrete instance of `DailyRetentionScheduleInput` via:
//
//          DailyRetentionScheduleArgs{...}
type DailyRetentionScheduleInput interface {
	pulumi.Input

	ToDailyRetentionScheduleOutput() DailyRetentionScheduleOutput
	ToDailyRetentionScheduleOutputWithContext(context.Context) DailyRetentionScheduleOutput
}

// Daily retention schedule.
type DailyRetentionScheduleArgs struct {
	// The retention duration of retention policy.
	RetentionDuration RetentionDurationPtrInput `pulumi:"retentionDuration"`
	// The retention times of retention policy.
	RetentionTimes pulumi.StringArrayInput `pulumi:"retentionTimes"`
}

func (DailyRetentionScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DailyRetentionSchedule)(nil)).Elem()
}

func (i DailyRetentionScheduleArgs) ToDailyRetentionScheduleOutput() DailyRetentionScheduleOutput {
	return i.ToDailyRetentionScheduleOutputWithContext(context.Background())
}

func (i DailyRetentionScheduleArgs) ToDailyRetentionScheduleOutputWithContext(ctx context.Context) DailyRetentionScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DailyRetentionScheduleOutput)
}

func (i DailyRetentionScheduleArgs) ToDailyRetentionSchedulePtrOutput() DailyRetentionSchedulePtrOutput {
	return i.ToDailyRetentionSchedulePtrOutputWithContext(context.Background())
}

func (i DailyRetentionScheduleArgs) ToDailyRetentionSchedulePtrOutputWithContext(ctx context.Context) DailyRetentionSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DailyRetentionScheduleOutput).ToDailyRetentionSchedulePtrOutputWithContext(ctx)
}

// DailyRetentionSchedulePtrInput is an input type that accepts DailyRetentionScheduleArgs, DailyRetentionSchedulePtr and DailyRetentionSchedulePtrOutput values.
// You can construct a concrete instance of `DailyRetentionSchedulePtrInput` via:
//
//          DailyRetentionScheduleArgs{...}
//
//  or:
//
//          nil
type DailyRetentionSchedulePtrInput interface {
	pulumi.Input

	ToDailyRetentionSchedulePtrOutput() DailyRetentionSchedulePtrOutput
	ToDailyRetentionSchedulePtrOutputWithContext(context.Context) DailyRetentionSchedulePtrOutput
}

type dailyRetentionSchedulePtrType DailyRetentionScheduleArgs

func DailyRetentionSchedulePtr(v *DailyRetentionScheduleArgs) DailyRetentionSchedulePtrInput {
	return (*dailyRetentionSchedulePtrType)(v)
}

func (*dailyRetentionSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DailyRetentionSchedule)(nil)).Elem()
}

func (i *dailyRetentionSchedulePtrType) ToDailyRetentionSchedulePtrOutput() DailyRetentionSchedulePtrOutput {
	return i.ToDailyRetentionSchedulePtrOutputWithContext(context.Background())
}

func (i *dailyRetentionSchedulePtrType) ToDailyRetentionSchedulePtrOutputWithContext(ctx context.Context) DailyRetentionSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DailyRetentionSchedulePtrOutput)
}

// Daily retention schedule.
type DailyRetentionScheduleResponse struct {
	// The retention duration of retention policy.
	RetentionDuration *RetentionDurationResponse `pulumi:"retentionDuration"`
	// The retention times of retention policy.
	RetentionTimes []string `pulumi:"retentionTimes"`
}

// Daily retention schedule.
type DailyRetentionScheduleResponseOutput struct{ *pulumi.OutputState }

func (DailyRetentionScheduleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DailyRetentionScheduleResponse)(nil)).Elem()
}

func (o DailyRetentionScheduleResponseOutput) ToDailyRetentionScheduleResponseOutput() DailyRetentionScheduleResponseOutput {
	return o
}

func (o DailyRetentionScheduleResponseOutput) ToDailyRetentionScheduleResponseOutputWithContext(ctx context.Context) DailyRetentionScheduleResponseOutput {
	return o
}

func (o DailyRetentionScheduleResponseOutput) ToDailyRetentionScheduleResponsePtrOutput() DailyRetentionScheduleResponsePtrOutput {
	return o.ToDailyRetentionScheduleResponsePtrOutputWithContext(context.Background())
}

func (o DailyRetentionScheduleResponseOutput) ToDailyRetentionScheduleResponsePtrOutputWithContext(ctx context.Context) DailyRetentionScheduleResponsePtrOutput {
	return o.ApplyT(func(v DailyRetentionScheduleResponse) *DailyRetentionScheduleResponse {
		return &v
	}).(DailyRetentionScheduleResponsePtrOutput)
}

// The retention duration of retention policy.
func (o DailyRetentionScheduleResponseOutput) RetentionDuration() RetentionDurationResponsePtrOutput {
	return o.ApplyT(func(v DailyRetentionScheduleResponse) *RetentionDurationResponse { return v.RetentionDuration }).(RetentionDurationResponsePtrOutput)
}

// The retention times of retention policy.
func (o DailyRetentionScheduleResponseOutput) RetentionTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DailyRetentionScheduleResponse) []string { return v.RetentionTimes }).(pulumi.StringArrayOutput)
}

type DailyRetentionScheduleResponsePtrOutput struct{ *pulumi.OutputState }

func (DailyRetentionScheduleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DailyRetentionScheduleResponse)(nil)).Elem()
}

func (o DailyRetentionScheduleResponsePtrOutput) ToDailyRetentionScheduleResponsePtrOutput() DailyRetentionScheduleResponsePtrOutput {
	return o
}

func (o DailyRetentionScheduleResponsePtrOutput) ToDailyRetentionScheduleResponsePtrOutputWithContext(ctx context.Context) DailyRetentionScheduleResponsePtrOutput {
	return o
}

func (o DailyRetentionScheduleResponsePtrOutput) Elem() DailyRetentionScheduleResponseOutput {
	return o.ApplyT(func(v *DailyRetentionScheduleResponse) DailyRetentionScheduleResponse { return *v }).(DailyRetentionScheduleResponseOutput)
}

// The retention duration of retention policy.
func (o DailyRetentionScheduleResponsePtrOutput) RetentionDuration() RetentionDurationResponsePtrOutput {
	return o.ApplyT(func(v *DailyRetentionScheduleResponse) *RetentionDurationResponse {
		if v == nil {
			return nil
		}
		return v.RetentionDuration
	}).(RetentionDurationResponsePtrOutput)
}

// The retention times of retention policy.
func (o DailyRetentionScheduleResponsePtrOutput) RetentionTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DailyRetentionScheduleResponse) []string {
		if v == nil {
			return nil
		}
		return v.RetentionTimes
	}).(pulumi.StringArrayOutput)
}

// The data store details of the MT.
type DataStoreResponse struct {
	// The capacity of data store in GBs.
	Capacity *string `pulumi:"capacity"`
	// The free space of data store in GBs.
	FreeSpace *string `pulumi:"freeSpace"`
	// The symbolic name of data store.
	SymbolicName *string `pulumi:"symbolicName"`
	// The type of data store.
	Type *string `pulumi:"type"`
	// The uuid of data store.
	Uuid *string `pulumi:"uuid"`
}

// The data store details of the MT.
type DataStoreResponseOutput struct{ *pulumi.OutputState }

func (DataStoreResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataStoreResponse)(nil)).Elem()
}

func (o DataStoreResponseOutput) ToDataStoreResponseOutput() DataStoreResponseOutput {
	return o
}

func (o DataStoreResponseOutput) ToDataStoreResponseOutputWithContext(ctx context.Context) DataStoreResponseOutput {
	return o
}

// The capacity of data store in GBs.
func (o DataStoreResponseOutput) Capacity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataStoreResponse) *string { return v.Capacity }).(pulumi.StringPtrOutput)
}

// The free space of data store in GBs.
func (o DataStoreResponseOutput) FreeSpace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataStoreResponse) *string { return v.FreeSpace }).(pulumi.StringPtrOutput)
}

// The symbolic name of data store.
func (o DataStoreResponseOutput) SymbolicName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataStoreResponse) *string { return v.SymbolicName }).(pulumi.StringPtrOutput)
}

// The type of data store.
func (o DataStoreResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataStoreResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The uuid of data store.
func (o DataStoreResponseOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataStoreResponse) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

type DataStoreResponseArrayOutput struct{ *pulumi.OutputState }

func (DataStoreResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataStoreResponse)(nil)).Elem()
}

func (o DataStoreResponseArrayOutput) ToDataStoreResponseArrayOutput() DataStoreResponseArrayOutput {
	return o
}

func (o DataStoreResponseArrayOutput) ToDataStoreResponseArrayOutputWithContext(ctx context.Context) DataStoreResponseArrayOutput {
	return o
}

func (o DataStoreResponseArrayOutput) Index(i pulumi.IntInput) DataStoreResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataStoreResponse {
		return vs[0].([]DataStoreResponse)[vs[1].(int)]
	}).(DataStoreResponseOutput)
}

// Day of the week.
type Day struct {
	Date   *int  `pulumi:"date"`
	IsLast *bool `pulumi:"isLast"`
}

// DayInput is an input type that accepts DayArgs and DayOutput values.
// You can construct a concrete instance of `DayInput` via:
//
//          DayArgs{...}
type DayInput interface {
	pulumi.Input

	ToDayOutput() DayOutput
	ToDayOutputWithContext(context.Context) DayOutput
}

// Day of the week.
type DayArgs struct {
	Date   pulumi.IntPtrInput  `pulumi:"date"`
	IsLast pulumi.BoolPtrInput `pulumi:"isLast"`
}

func (DayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Day)(nil)).Elem()
}

func (i DayArgs) ToDayOutput() DayOutput {
	return i.ToDayOutputWithContext(context.Background())
}

func (i DayArgs) ToDayOutputWithContext(ctx context.Context) DayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DayOutput)
}

// DayArrayInput is an input type that accepts DayArray and DayArrayOutput values.
// You can construct a concrete instance of `DayArrayInput` via:
//
//          DayArray{ DayArgs{...} }
type DayArrayInput interface {
	pulumi.Input

	ToDayArrayOutput() DayArrayOutput
	ToDayArrayOutputWithContext(context.Context) DayArrayOutput
}

type DayArray []DayInput

func (DayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Day)(nil)).Elem()
}

func (i DayArray) ToDayArrayOutput() DayArrayOutput {
	return i.ToDayArrayOutputWithContext(context.Background())
}

func (i DayArray) ToDayArrayOutputWithContext(ctx context.Context) DayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DayArrayOutput)
}

// Day of the week.
type DayResponse struct {
	Date   *int  `pulumi:"date"`
	IsLast *bool `pulumi:"isLast"`
}

// Day of the week.
type DayResponseOutput struct{ *pulumi.OutputState }

func (DayResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DayResponse)(nil)).Elem()
}

func (o DayResponseOutput) ToDayResponseOutput() DayResponseOutput {
	return o
}

func (o DayResponseOutput) ToDayResponseOutputWithContext(ctx context.Context) DayResponseOutput {
	return o
}

func (o DayResponseOutput) Date() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DayResponse) *int { return v.Date }).(pulumi.IntPtrOutput)
}

func (o DayResponseOutput) IsLast() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DayResponse) *bool { return v.IsLast }).(pulumi.BoolPtrOutput)
}

type DayResponseArrayOutput struct{ *pulumi.OutputState }

func (DayResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DayResponse)(nil)).Elem()
}

func (o DayResponseArrayOutput) ToDayResponseArrayOutput() DayResponseArrayOutput {
	return o
}

func (o DayResponseArrayOutput) ToDayResponseArrayOutputWithContext(ctx context.Context) DayResponseArrayOutput {
	return o
}

func (o DayResponseArrayOutput) Index(i pulumi.IntInput) DayResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DayResponse {
		return vs[0].([]DayResponse)[vs[1].(int)]
	}).(DayResponseOutput)
}

// On-prem disk details data.
type DiskDetailsResponse struct {
	// The hard disk max size in MB.
	MaxSizeMB *int `pulumi:"maxSizeMB"`
	// The VHD Id.
	VhdId *string `pulumi:"vhdId"`
	// The VHD name.
	VhdName *string `pulumi:"vhdName"`
	// The type of the volume.
	VhdType *string `pulumi:"vhdType"`
}

// On-prem disk details data.
type DiskDetailsResponseOutput struct{ *pulumi.OutputState }

func (DiskDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskDetailsResponse)(nil)).Elem()
}

func (o DiskDetailsResponseOutput) ToDiskDetailsResponseOutput() DiskDetailsResponseOutput {
	return o
}

func (o DiskDetailsResponseOutput) ToDiskDetailsResponseOutputWithContext(ctx context.Context) DiskDetailsResponseOutput {
	return o
}

// The hard disk max size in MB.
func (o DiskDetailsResponseOutput) MaxSizeMB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DiskDetailsResponse) *int { return v.MaxSizeMB }).(pulumi.IntPtrOutput)
}

// The VHD Id.
func (o DiskDetailsResponseOutput) VhdId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DiskDetailsResponse) *string { return v.VhdId }).(pulumi.StringPtrOutput)
}

// The VHD name.
func (o DiskDetailsResponseOutput) VhdName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DiskDetailsResponse) *string { return v.VhdName }).(pulumi.StringPtrOutput)
}

// The type of the volume.
func (o DiskDetailsResponseOutput) VhdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DiskDetailsResponse) *string { return v.VhdType }).(pulumi.StringPtrOutput)
}

type DiskDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (DiskDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DiskDetailsResponse)(nil)).Elem()
}

func (o DiskDetailsResponseArrayOutput) ToDiskDetailsResponseArrayOutput() DiskDetailsResponseArrayOutput {
	return o
}

func (o DiskDetailsResponseArrayOutput) ToDiskDetailsResponseArrayOutputWithContext(ctx context.Context) DiskDetailsResponseArrayOutput {
	return o
}

func (o DiskDetailsResponseArrayOutput) Index(i pulumi.IntInput) DiskDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DiskDetailsResponse {
		return vs[0].([]DiskDetailsResponse)[vs[1].(int)]
	}).(DiskDetailsResponseOutput)
}

// Recovery disk encryption info (BEK and KEK).
type DiskEncryptionInfo struct {
	// The recovery KeyVault reference for secret.
	DiskEncryptionKeyInfo *DiskEncryptionKeyInfo `pulumi:"diskEncryptionKeyInfo"`
	// The recovery KeyVault reference for key.
	KeyEncryptionKeyInfo *KeyEncryptionKeyInfo `pulumi:"keyEncryptionKeyInfo"`
}

// DiskEncryptionInfoInput is an input type that accepts DiskEncryptionInfoArgs and DiskEncryptionInfoOutput values.
// You can construct a concrete instance of `DiskEncryptionInfoInput` via:
//
//          DiskEncryptionInfoArgs{...}
type DiskEncryptionInfoInput interface {
	pulumi.Input

	ToDiskEncryptionInfoOutput() DiskEncryptionInfoOutput
	ToDiskEncryptionInfoOutputWithContext(context.Context) DiskEncryptionInfoOutput
}

// Recovery disk encryption info (BEK and KEK).
type DiskEncryptionInfoArgs struct {
	// The recovery KeyVault reference for secret.
	DiskEncryptionKeyInfo DiskEncryptionKeyInfoPtrInput `pulumi:"diskEncryptionKeyInfo"`
	// The recovery KeyVault reference for key.
	KeyEncryptionKeyInfo KeyEncryptionKeyInfoPtrInput `pulumi:"keyEncryptionKeyInfo"`
}

func (DiskEncryptionInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskEncryptionInfo)(nil)).Elem()
}

func (i DiskEncryptionInfoArgs) ToDiskEncryptionInfoOutput() DiskEncryptionInfoOutput {
	return i.ToDiskEncryptionInfoOutputWithContext(context.Background())
}

func (i DiskEncryptionInfoArgs) ToDiskEncryptionInfoOutputWithContext(ctx context.Context) DiskEncryptionInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskEncryptionInfoOutput)
}

func (i DiskEncryptionInfoArgs) ToDiskEncryptionInfoPtrOutput() DiskEncryptionInfoPtrOutput {
	return i.ToDiskEncryptionInfoPtrOutputWithContext(context.Background())
}

func (i DiskEncryptionInfoArgs) ToDiskEncryptionInfoPtrOutputWithContext(ctx context.Context) DiskEncryptionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskEncryptionInfoOutput).ToDiskEncryptionInfoPtrOutputWithContext(ctx)
}

// DiskEncryptionInfoPtrInput is an input type that accepts DiskEncryptionInfoArgs, DiskEncryptionInfoPtr and DiskEncryptionInfoPtrOutput values.
// You can construct a concrete instance of `DiskEncryptionInfoPtrInput` via:
//
//          DiskEncryptionInfoArgs{...}
//
//  or:
//
//          nil
type DiskEncryptionInfoPtrInput interface {
	pulumi.Input

	ToDiskEncryptionInfoPtrOutput() DiskEncryptionInfoPtrOutput
	ToDiskEncryptionInfoPtrOutputWithContext(context.Context) DiskEncryptionInfoPtrOutput
}

type diskEncryptionInfoPtrType DiskEncryptionInfoArgs

func DiskEncryptionInfoPtr(v *DiskEncryptionInfoArgs) DiskEncryptionInfoPtrInput {
	return (*diskEncryptionInfoPtrType)(v)
}

func (*diskEncryptionInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskEncryptionInfo)(nil)).Elem()
}

func (i *diskEncryptionInfoPtrType) ToDiskEncryptionInfoPtrOutput() DiskEncryptionInfoPtrOutput {
	return i.ToDiskEncryptionInfoPtrOutputWithContext(context.Background())
}

func (i *diskEncryptionInfoPtrType) ToDiskEncryptionInfoPtrOutputWithContext(ctx context.Context) DiskEncryptionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskEncryptionInfoPtrOutput)
}

// Disk Encryption Key Information (BitLocker Encryption Key (BEK) on Windows).
type DiskEncryptionKeyInfo struct {
	// The KeyVault resource ARM id for secret.
	KeyVaultResourceArmId *string `pulumi:"keyVaultResourceArmId"`
	// The secret url / identifier.
	SecretIdentifier *string `pulumi:"secretIdentifier"`
}

// DiskEncryptionKeyInfoInput is an input type that accepts DiskEncryptionKeyInfoArgs and DiskEncryptionKeyInfoOutput values.
// You can construct a concrete instance of `DiskEncryptionKeyInfoInput` via:
//
//          DiskEncryptionKeyInfoArgs{...}
type DiskEncryptionKeyInfoInput interface {
	pulumi.Input

	ToDiskEncryptionKeyInfoOutput() DiskEncryptionKeyInfoOutput
	ToDiskEncryptionKeyInfoOutputWithContext(context.Context) DiskEncryptionKeyInfoOutput
}

// Disk Encryption Key Information (BitLocker Encryption Key (BEK) on Windows).
type DiskEncryptionKeyInfoArgs struct {
	// The KeyVault resource ARM id for secret.
	KeyVaultResourceArmId pulumi.StringPtrInput `pulumi:"keyVaultResourceArmId"`
	// The secret url / identifier.
	SecretIdentifier pulumi.StringPtrInput `pulumi:"secretIdentifier"`
}

func (DiskEncryptionKeyInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskEncryptionKeyInfo)(nil)).Elem()
}

func (i DiskEncryptionKeyInfoArgs) ToDiskEncryptionKeyInfoOutput() DiskEncryptionKeyInfoOutput {
	return i.ToDiskEncryptionKeyInfoOutputWithContext(context.Background())
}

func (i DiskEncryptionKeyInfoArgs) ToDiskEncryptionKeyInfoOutputWithContext(ctx context.Context) DiskEncryptionKeyInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskEncryptionKeyInfoOutput)
}

func (i DiskEncryptionKeyInfoArgs) ToDiskEncryptionKeyInfoPtrOutput() DiskEncryptionKeyInfoPtrOutput {
	return i.ToDiskEncryptionKeyInfoPtrOutputWithContext(context.Background())
}

func (i DiskEncryptionKeyInfoArgs) ToDiskEncryptionKeyInfoPtrOutputWithContext(ctx context.Context) DiskEncryptionKeyInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskEncryptionKeyInfoOutput).ToDiskEncryptionKeyInfoPtrOutputWithContext(ctx)
}

// DiskEncryptionKeyInfoPtrInput is an input type that accepts DiskEncryptionKeyInfoArgs, DiskEncryptionKeyInfoPtr and DiskEncryptionKeyInfoPtrOutput values.
// You can construct a concrete instance of `DiskEncryptionKeyInfoPtrInput` via:
//
//          DiskEncryptionKeyInfoArgs{...}
//
//  or:
//
//          nil
type DiskEncryptionKeyInfoPtrInput interface {
	pulumi.Input

	ToDiskEncryptionKeyInfoPtrOutput() DiskEncryptionKeyInfoPtrOutput
	ToDiskEncryptionKeyInfoPtrOutputWithContext(context.Context) DiskEncryptionKeyInfoPtrOutput
}

type diskEncryptionKeyInfoPtrType DiskEncryptionKeyInfoArgs

func DiskEncryptionKeyInfoPtr(v *DiskEncryptionKeyInfoArgs) DiskEncryptionKeyInfoPtrInput {
	return (*diskEncryptionKeyInfoPtrType)(v)
}

func (*diskEncryptionKeyInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskEncryptionKeyInfo)(nil)).Elem()
}

func (i *diskEncryptionKeyInfoPtrType) ToDiskEncryptionKeyInfoPtrOutput() DiskEncryptionKeyInfoPtrOutput {
	return i.ToDiskEncryptionKeyInfoPtrOutputWithContext(context.Background())
}

func (i *diskEncryptionKeyInfoPtrType) ToDiskEncryptionKeyInfoPtrOutputWithContext(ctx context.Context) DiskEncryptionKeyInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskEncryptionKeyInfoPtrOutput)
}

type DiskExclusionProperties struct {
	// List of Disks' Logical Unit Numbers (LUN) to be used for VM Protection.
	DiskLunList []int `pulumi:"diskLunList"`
	// Flag to indicate whether DiskLunList is to be included/ excluded from backup.
	IsInclusionList *bool `pulumi:"isInclusionList"`
}

// DiskExclusionPropertiesInput is an input type that accepts DiskExclusionPropertiesArgs and DiskExclusionPropertiesOutput values.
// You can construct a concrete instance of `DiskExclusionPropertiesInput` via:
//
//          DiskExclusionPropertiesArgs{...}
type DiskExclusionPropertiesInput interface {
	pulumi.Input

	ToDiskExclusionPropertiesOutput() DiskExclusionPropertiesOutput
	ToDiskExclusionPropertiesOutputWithContext(context.Context) DiskExclusionPropertiesOutput
}

type DiskExclusionPropertiesArgs struct {
	// List of Disks' Logical Unit Numbers (LUN) to be used for VM Protection.
	DiskLunList pulumi.IntArrayInput `pulumi:"diskLunList"`
	// Flag to indicate whether DiskLunList is to be included/ excluded from backup.
	IsInclusionList pulumi.BoolPtrInput `pulumi:"isInclusionList"`
}

func (DiskExclusionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskExclusionProperties)(nil)).Elem()
}

func (i DiskExclusionPropertiesArgs) ToDiskExclusionPropertiesOutput() DiskExclusionPropertiesOutput {
	return i.ToDiskExclusionPropertiesOutputWithContext(context.Background())
}

func (i DiskExclusionPropertiesArgs) ToDiskExclusionPropertiesOutputWithContext(ctx context.Context) DiskExclusionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskExclusionPropertiesOutput)
}

func (i DiskExclusionPropertiesArgs) ToDiskExclusionPropertiesPtrOutput() DiskExclusionPropertiesPtrOutput {
	return i.ToDiskExclusionPropertiesPtrOutputWithContext(context.Background())
}

func (i DiskExclusionPropertiesArgs) ToDiskExclusionPropertiesPtrOutputWithContext(ctx context.Context) DiskExclusionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskExclusionPropertiesOutput).ToDiskExclusionPropertiesPtrOutputWithContext(ctx)
}

// DiskExclusionPropertiesPtrInput is an input type that accepts DiskExclusionPropertiesArgs, DiskExclusionPropertiesPtr and DiskExclusionPropertiesPtrOutput values.
// You can construct a concrete instance of `DiskExclusionPropertiesPtrInput` via:
//
//          DiskExclusionPropertiesArgs{...}
//
//  or:
//
//          nil
type DiskExclusionPropertiesPtrInput interface {
	pulumi.Input

	ToDiskExclusionPropertiesPtrOutput() DiskExclusionPropertiesPtrOutput
	ToDiskExclusionPropertiesPtrOutputWithContext(context.Context) DiskExclusionPropertiesPtrOutput
}

type diskExclusionPropertiesPtrType DiskExclusionPropertiesArgs

func DiskExclusionPropertiesPtr(v *DiskExclusionPropertiesArgs) DiskExclusionPropertiesPtrInput {
	return (*diskExclusionPropertiesPtrType)(v)
}

func (*diskExclusionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskExclusionProperties)(nil)).Elem()
}

func (i *diskExclusionPropertiesPtrType) ToDiskExclusionPropertiesPtrOutput() DiskExclusionPropertiesPtrOutput {
	return i.ToDiskExclusionPropertiesPtrOutputWithContext(context.Background())
}

func (i *diskExclusionPropertiesPtrType) ToDiskExclusionPropertiesPtrOutputWithContext(ctx context.Context) DiskExclusionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskExclusionPropertiesPtrOutput)
}

type DiskExclusionPropertiesResponse struct {
	// List of Disks' Logical Unit Numbers (LUN) to be used for VM Protection.
	DiskLunList []int `pulumi:"diskLunList"`
	// Flag to indicate whether DiskLunList is to be included/ excluded from backup.
	IsInclusionList *bool `pulumi:"isInclusionList"`
}

type DiskExclusionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (DiskExclusionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskExclusionPropertiesResponse)(nil)).Elem()
}

func (o DiskExclusionPropertiesResponseOutput) ToDiskExclusionPropertiesResponseOutput() DiskExclusionPropertiesResponseOutput {
	return o
}

func (o DiskExclusionPropertiesResponseOutput) ToDiskExclusionPropertiesResponseOutputWithContext(ctx context.Context) DiskExclusionPropertiesResponseOutput {
	return o
}

func (o DiskExclusionPropertiesResponseOutput) ToDiskExclusionPropertiesResponsePtrOutput() DiskExclusionPropertiesResponsePtrOutput {
	return o.ToDiskExclusionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o DiskExclusionPropertiesResponseOutput) ToDiskExclusionPropertiesResponsePtrOutputWithContext(ctx context.Context) DiskExclusionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v DiskExclusionPropertiesResponse) *DiskExclusionPropertiesResponse {
		return &v
	}).(DiskExclusionPropertiesResponsePtrOutput)
}

// List of Disks' Logical Unit Numbers (LUN) to be used for VM Protection.
func (o DiskExclusionPropertiesResponseOutput) DiskLunList() pulumi.IntArrayOutput {
	return o.ApplyT(func(v DiskExclusionPropertiesResponse) []int { return v.DiskLunList }).(pulumi.IntArrayOutput)
}

// Flag to indicate whether DiskLunList is to be included/ excluded from backup.
func (o DiskExclusionPropertiesResponseOutput) IsInclusionList() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DiskExclusionPropertiesResponse) *bool { return v.IsInclusionList }).(pulumi.BoolPtrOutput)
}

type DiskExclusionPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (DiskExclusionPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskExclusionPropertiesResponse)(nil)).Elem()
}

func (o DiskExclusionPropertiesResponsePtrOutput) ToDiskExclusionPropertiesResponsePtrOutput() DiskExclusionPropertiesResponsePtrOutput {
	return o
}

func (o DiskExclusionPropertiesResponsePtrOutput) ToDiskExclusionPropertiesResponsePtrOutputWithContext(ctx context.Context) DiskExclusionPropertiesResponsePtrOutput {
	return o
}

func (o DiskExclusionPropertiesResponsePtrOutput) Elem() DiskExclusionPropertiesResponseOutput {
	return o.ApplyT(func(v *DiskExclusionPropertiesResponse) DiskExclusionPropertiesResponse { return *v }).(DiskExclusionPropertiesResponseOutput)
}

// List of Disks' Logical Unit Numbers (LUN) to be used for VM Protection.
func (o DiskExclusionPropertiesResponsePtrOutput) DiskLunList() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *DiskExclusionPropertiesResponse) []int {
		if v == nil {
			return nil
		}
		return v.DiskLunList
	}).(pulumi.IntArrayOutput)
}

// Flag to indicate whether DiskLunList is to be included/ excluded from backup.
func (o DiskExclusionPropertiesResponsePtrOutput) IsInclusionList() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DiskExclusionPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsInclusionList
	}).(pulumi.BoolPtrOutput)
}

// This is used to represent the various nodes of the distributed container.
type DistributedNodesInfo struct {
	// Name of the node under a distributed container.
	NodeName *string `pulumi:"nodeName"`
	// Status of this Node.
	// Failed | Succeeded
	Status *string `pulumi:"status"`
}

// DistributedNodesInfoInput is an input type that accepts DistributedNodesInfoArgs and DistributedNodesInfoOutput values.
// You can construct a concrete instance of `DistributedNodesInfoInput` via:
//
//          DistributedNodesInfoArgs{...}
type DistributedNodesInfoInput interface {
	pulumi.Input

	ToDistributedNodesInfoOutput() DistributedNodesInfoOutput
	ToDistributedNodesInfoOutputWithContext(context.Context) DistributedNodesInfoOutput
}

// This is used to represent the various nodes of the distributed container.
type DistributedNodesInfoArgs struct {
	// Name of the node under a distributed container.
	NodeName pulumi.StringPtrInput `pulumi:"nodeName"`
	// Status of this Node.
	// Failed | Succeeded
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (DistributedNodesInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributedNodesInfo)(nil)).Elem()
}

func (i DistributedNodesInfoArgs) ToDistributedNodesInfoOutput() DistributedNodesInfoOutput {
	return i.ToDistributedNodesInfoOutputWithContext(context.Background())
}

func (i DistributedNodesInfoArgs) ToDistributedNodesInfoOutputWithContext(ctx context.Context) DistributedNodesInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributedNodesInfoOutput)
}

// DistributedNodesInfoArrayInput is an input type that accepts DistributedNodesInfoArray and DistributedNodesInfoArrayOutput values.
// You can construct a concrete instance of `DistributedNodesInfoArrayInput` via:
//
//          DistributedNodesInfoArray{ DistributedNodesInfoArgs{...} }
type DistributedNodesInfoArrayInput interface {
	pulumi.Input

	ToDistributedNodesInfoArrayOutput() DistributedNodesInfoArrayOutput
	ToDistributedNodesInfoArrayOutputWithContext(context.Context) DistributedNodesInfoArrayOutput
}

type DistributedNodesInfoArray []DistributedNodesInfoInput

func (DistributedNodesInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributedNodesInfo)(nil)).Elem()
}

func (i DistributedNodesInfoArray) ToDistributedNodesInfoArrayOutput() DistributedNodesInfoArrayOutput {
	return i.ToDistributedNodesInfoArrayOutputWithContext(context.Background())
}

func (i DistributedNodesInfoArray) ToDistributedNodesInfoArrayOutputWithContext(ctx context.Context) DistributedNodesInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributedNodesInfoArrayOutput)
}

// This is used to represent the various nodes of the distributed container.
type DistributedNodesInfoResponse struct {
	// Error Details if the Status is non-success.
	ErrorDetail *ErrorDetailResponse `pulumi:"errorDetail"`
	// Name of the node under a distributed container.
	NodeName *string `pulumi:"nodeName"`
	// Status of this Node.
	// Failed | Succeeded
	Status *string `pulumi:"status"`
}

// This is used to represent the various nodes of the distributed container.
type DistributedNodesInfoResponseOutput struct{ *pulumi.OutputState }

func (DistributedNodesInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributedNodesInfoResponse)(nil)).Elem()
}

func (o DistributedNodesInfoResponseOutput) ToDistributedNodesInfoResponseOutput() DistributedNodesInfoResponseOutput {
	return o
}

func (o DistributedNodesInfoResponseOutput) ToDistributedNodesInfoResponseOutputWithContext(ctx context.Context) DistributedNodesInfoResponseOutput {
	return o
}

// Error Details if the Status is non-success.
func (o DistributedNodesInfoResponseOutput) ErrorDetail() ErrorDetailResponsePtrOutput {
	return o.ApplyT(func(v DistributedNodesInfoResponse) *ErrorDetailResponse { return v.ErrorDetail }).(ErrorDetailResponsePtrOutput)
}

// Name of the node under a distributed container.
func (o DistributedNodesInfoResponseOutput) NodeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributedNodesInfoResponse) *string { return v.NodeName }).(pulumi.StringPtrOutput)
}

// Status of this Node.
// Failed | Succeeded
func (o DistributedNodesInfoResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributedNodesInfoResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type DistributedNodesInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (DistributedNodesInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributedNodesInfoResponse)(nil)).Elem()
}

func (o DistributedNodesInfoResponseArrayOutput) ToDistributedNodesInfoResponseArrayOutput() DistributedNodesInfoResponseArrayOutput {
	return o
}

func (o DistributedNodesInfoResponseArrayOutput) ToDistributedNodesInfoResponseArrayOutputWithContext(ctx context.Context) DistributedNodesInfoResponseArrayOutput {
	return o
}

func (o DistributedNodesInfoResponseArrayOutput) Index(i pulumi.IntInput) DistributedNodesInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DistributedNodesInfoResponse {
		return vs[0].([]DistributedNodesInfoResponse)[vs[1].(int)]
	}).(DistributedNodesInfoResponseOutput)
}

// DPM workload-specific protection container.
type DpmContainer struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Specifies whether the container is re-registrable.
	CanReRegister *bool `pulumi:"canReRegister"`
	// ID of container.
	ContainerId *string `pulumi:"containerId"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	ContainerType *string `pulumi:"containerType"`
	// Backup engine Agent version
	DpmAgentVersion *string `pulumi:"dpmAgentVersion"`
	// List of BackupEngines protecting the container
	DpmServers []string `pulumi:"dpmServers"`
	// Extended Info of the container.
	ExtendedInfo *DPMContainerExtendedInfo `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Number of protected items in the BackupEngine
	ProtectedItemCount *int `pulumi:"protectedItemCount"`
	// Protection status of the container.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// To check if upgrade available
	UpgradeAvailable *bool `pulumi:"upgradeAvailable"`
}

// DpmContainerInput is an input type that accepts DpmContainerArgs and DpmContainerOutput values.
// You can construct a concrete instance of `DpmContainerInput` via:
//
//          DpmContainerArgs{...}
type DpmContainerInput interface {
	pulumi.Input

	ToDpmContainerOutput() DpmContainerOutput
	ToDpmContainerOutputWithContext(context.Context) DpmContainerOutput
}

// DPM workload-specific protection container.
type DpmContainerArgs struct {
	// Type of backup management for the container.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// Specifies whether the container is re-registrable.
	CanReRegister pulumi.BoolPtrInput `pulumi:"canReRegister"`
	// ID of container.
	ContainerId pulumi.StringPtrInput `pulumi:"containerId"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	ContainerType pulumi.StringPtrInput `pulumi:"containerType"`
	// Backup engine Agent version
	DpmAgentVersion pulumi.StringPtrInput `pulumi:"dpmAgentVersion"`
	// List of BackupEngines protecting the container
	DpmServers pulumi.StringArrayInput `pulumi:"dpmServers"`
	// Extended Info of the container.
	ExtendedInfo DPMContainerExtendedInfoPtrInput `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus pulumi.StringPtrInput `pulumi:"healthStatus"`
	// Number of protected items in the BackupEngine
	ProtectedItemCount pulumi.IntPtrInput `pulumi:"protectedItemCount"`
	// Protection status of the container.
	ProtectionStatus pulumi.StringPtrInput `pulumi:"protectionStatus"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus pulumi.StringPtrInput `pulumi:"registrationStatus"`
	// To check if upgrade available
	UpgradeAvailable pulumi.BoolPtrInput `pulumi:"upgradeAvailable"`
}

func (DpmContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DpmContainer)(nil)).Elem()
}

func (i DpmContainerArgs) ToDpmContainerOutput() DpmContainerOutput {
	return i.ToDpmContainerOutputWithContext(context.Background())
}

func (i DpmContainerArgs) ToDpmContainerOutputWithContext(ctx context.Context) DpmContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DpmContainerOutput)
}

// DPM workload-specific protection container.
type DpmContainerResponse struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Specifies whether the container is re-registrable.
	CanReRegister *bool `pulumi:"canReRegister"`
	// ID of container.
	ContainerId *string `pulumi:"containerId"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	ContainerType *string `pulumi:"containerType"`
	// Backup engine Agent version
	DpmAgentVersion *string `pulumi:"dpmAgentVersion"`
	// List of BackupEngines protecting the container
	DpmServers []string `pulumi:"dpmServers"`
	// Extended Info of the container.
	ExtendedInfo *DPMContainerExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Number of protected items in the BackupEngine
	ProtectedItemCount *int `pulumi:"protectedItemCount"`
	// Protection status of the container.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// To check if upgrade available
	UpgradeAvailable *bool `pulumi:"upgradeAvailable"`
}

// DPM workload-specific protection container.
type DpmContainerResponseOutput struct{ *pulumi.OutputState }

func (DpmContainerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DpmContainerResponse)(nil)).Elem()
}

func (o DpmContainerResponseOutput) ToDpmContainerResponseOutput() DpmContainerResponseOutput {
	return o
}

func (o DpmContainerResponseOutput) ToDpmContainerResponseOutputWithContext(ctx context.Context) DpmContainerResponseOutput {
	return o
}

// Type of backup management for the container.
func (o DpmContainerResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DpmContainerResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Specifies whether the container is re-registrable.
func (o DpmContainerResponseOutput) CanReRegister() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DpmContainerResponse) *bool { return v.CanReRegister }).(pulumi.BoolPtrOutput)
}

// ID of container.
func (o DpmContainerResponseOutput) ContainerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DpmContainerResponse) *string { return v.ContainerId }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
func (o DpmContainerResponseOutput) ContainerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DpmContainerResponse) *string { return v.ContainerType }).(pulumi.StringPtrOutput)
}

// Backup engine Agent version
func (o DpmContainerResponseOutput) DpmAgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DpmContainerResponse) *string { return v.DpmAgentVersion }).(pulumi.StringPtrOutput)
}

// List of BackupEngines protecting the container
func (o DpmContainerResponseOutput) DpmServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DpmContainerResponse) []string { return v.DpmServers }).(pulumi.StringArrayOutput)
}

// Extended Info of the container.
func (o DpmContainerResponseOutput) ExtendedInfo() DPMContainerExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v DpmContainerResponse) *DPMContainerExtendedInfoResponse { return v.ExtendedInfo }).(DPMContainerExtendedInfoResponsePtrOutput)
}

// Friendly name of the container.
func (o DpmContainerResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DpmContainerResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o DpmContainerResponseOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DpmContainerResponse) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Number of protected items in the BackupEngine
func (o DpmContainerResponseOutput) ProtectedItemCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DpmContainerResponse) *int { return v.ProtectedItemCount }).(pulumi.IntPtrOutput)
}

// Protection status of the container.
func (o DpmContainerResponseOutput) ProtectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DpmContainerResponse) *string { return v.ProtectionStatus }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o DpmContainerResponseOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DpmContainerResponse) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// To check if upgrade available
func (o DpmContainerResponseOutput) UpgradeAvailable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DpmContainerResponse) *bool { return v.UpgradeAvailable }).(pulumi.BoolPtrOutput)
}

// Enable migration input properties.
type EnableMigrationInputProperties struct {
	// The policy Id.
	PolicyId string `pulumi:"policyId"`
	// The provider specific details.
	ProviderSpecificDetails VMwareCbtEnableMigrationInput `pulumi:"providerSpecificDetails"`
}

// EnableMigrationInputPropertiesInput is an input type that accepts EnableMigrationInputPropertiesArgs and EnableMigrationInputPropertiesOutput values.
// You can construct a concrete instance of `EnableMigrationInputPropertiesInput` via:
//
//          EnableMigrationInputPropertiesArgs{...}
type EnableMigrationInputPropertiesInput interface {
	pulumi.Input

	ToEnableMigrationInputPropertiesOutput() EnableMigrationInputPropertiesOutput
	ToEnableMigrationInputPropertiesOutputWithContext(context.Context) EnableMigrationInputPropertiesOutput
}

// Enable migration input properties.
type EnableMigrationInputPropertiesArgs struct {
	// The policy Id.
	PolicyId pulumi.StringInput `pulumi:"policyId"`
	// The provider specific details.
	ProviderSpecificDetails VMwareCbtEnableMigrationInputInput `pulumi:"providerSpecificDetails"`
}

func (EnableMigrationInputPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnableMigrationInputProperties)(nil)).Elem()
}

func (i EnableMigrationInputPropertiesArgs) ToEnableMigrationInputPropertiesOutput() EnableMigrationInputPropertiesOutput {
	return i.ToEnableMigrationInputPropertiesOutputWithContext(context.Background())
}

func (i EnableMigrationInputPropertiesArgs) ToEnableMigrationInputPropertiesOutputWithContext(ctx context.Context) EnableMigrationInputPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnableMigrationInputPropertiesOutput)
}

func (i EnableMigrationInputPropertiesArgs) ToEnableMigrationInputPropertiesPtrOutput() EnableMigrationInputPropertiesPtrOutput {
	return i.ToEnableMigrationInputPropertiesPtrOutputWithContext(context.Background())
}

func (i EnableMigrationInputPropertiesArgs) ToEnableMigrationInputPropertiesPtrOutputWithContext(ctx context.Context) EnableMigrationInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnableMigrationInputPropertiesOutput).ToEnableMigrationInputPropertiesPtrOutputWithContext(ctx)
}

// EnableMigrationInputPropertiesPtrInput is an input type that accepts EnableMigrationInputPropertiesArgs, EnableMigrationInputPropertiesPtr and EnableMigrationInputPropertiesPtrOutput values.
// You can construct a concrete instance of `EnableMigrationInputPropertiesPtrInput` via:
//
//          EnableMigrationInputPropertiesArgs{...}
//
//  or:
//
//          nil
type EnableMigrationInputPropertiesPtrInput interface {
	pulumi.Input

	ToEnableMigrationInputPropertiesPtrOutput() EnableMigrationInputPropertiesPtrOutput
	ToEnableMigrationInputPropertiesPtrOutputWithContext(context.Context) EnableMigrationInputPropertiesPtrOutput
}

type enableMigrationInputPropertiesPtrType EnableMigrationInputPropertiesArgs

func EnableMigrationInputPropertiesPtr(v *EnableMigrationInputPropertiesArgs) EnableMigrationInputPropertiesPtrInput {
	return (*enableMigrationInputPropertiesPtrType)(v)
}

func (*enableMigrationInputPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnableMigrationInputProperties)(nil)).Elem()
}

func (i *enableMigrationInputPropertiesPtrType) ToEnableMigrationInputPropertiesPtrOutput() EnableMigrationInputPropertiesPtrOutput {
	return i.ToEnableMigrationInputPropertiesPtrOutputWithContext(context.Background())
}

func (i *enableMigrationInputPropertiesPtrType) ToEnableMigrationInputPropertiesPtrOutputWithContext(ctx context.Context) EnableMigrationInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnableMigrationInputPropertiesPtrOutput)
}

// Enable protection input properties.
type EnableProtectionInputProperties struct {
	// The Policy Id.
	PolicyId *string `pulumi:"policyId"`
	// The protectable item Id.
	ProtectableItemId *string `pulumi:"protectableItemId"`
	// The ReplicationProviderInput. For HyperVReplicaAzure provider, it will be AzureEnableProtectionInput object. For San provider, it will be SanEnableProtectionInput object. For HyperVReplicaAzure provider, it can be null.
	ProviderSpecificDetails interface{} `pulumi:"providerSpecificDetails"`
}

// EnableProtectionInputPropertiesInput is an input type that accepts EnableProtectionInputPropertiesArgs and EnableProtectionInputPropertiesOutput values.
// You can construct a concrete instance of `EnableProtectionInputPropertiesInput` via:
//
//          EnableProtectionInputPropertiesArgs{...}
type EnableProtectionInputPropertiesInput interface {
	pulumi.Input

	ToEnableProtectionInputPropertiesOutput() EnableProtectionInputPropertiesOutput
	ToEnableProtectionInputPropertiesOutputWithContext(context.Context) EnableProtectionInputPropertiesOutput
}

// Enable protection input properties.
type EnableProtectionInputPropertiesArgs struct {
	// The Policy Id.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// The protectable item Id.
	ProtectableItemId pulumi.StringPtrInput `pulumi:"protectableItemId"`
	// The ReplicationProviderInput. For HyperVReplicaAzure provider, it will be AzureEnableProtectionInput object. For San provider, it will be SanEnableProtectionInput object. For HyperVReplicaAzure provider, it can be null.
	ProviderSpecificDetails pulumi.Input `pulumi:"providerSpecificDetails"`
}

func (EnableProtectionInputPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnableProtectionInputProperties)(nil)).Elem()
}

func (i EnableProtectionInputPropertiesArgs) ToEnableProtectionInputPropertiesOutput() EnableProtectionInputPropertiesOutput {
	return i.ToEnableProtectionInputPropertiesOutputWithContext(context.Background())
}

func (i EnableProtectionInputPropertiesArgs) ToEnableProtectionInputPropertiesOutputWithContext(ctx context.Context) EnableProtectionInputPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnableProtectionInputPropertiesOutput)
}

func (i EnableProtectionInputPropertiesArgs) ToEnableProtectionInputPropertiesPtrOutput() EnableProtectionInputPropertiesPtrOutput {
	return i.ToEnableProtectionInputPropertiesPtrOutputWithContext(context.Background())
}

func (i EnableProtectionInputPropertiesArgs) ToEnableProtectionInputPropertiesPtrOutputWithContext(ctx context.Context) EnableProtectionInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnableProtectionInputPropertiesOutput).ToEnableProtectionInputPropertiesPtrOutputWithContext(ctx)
}

// EnableProtectionInputPropertiesPtrInput is an input type that accepts EnableProtectionInputPropertiesArgs, EnableProtectionInputPropertiesPtr and EnableProtectionInputPropertiesPtrOutput values.
// You can construct a concrete instance of `EnableProtectionInputPropertiesPtrInput` via:
//
//          EnableProtectionInputPropertiesArgs{...}
//
//  or:
//
//          nil
type EnableProtectionInputPropertiesPtrInput interface {
	pulumi.Input

	ToEnableProtectionInputPropertiesPtrOutput() EnableProtectionInputPropertiesPtrOutput
	ToEnableProtectionInputPropertiesPtrOutputWithContext(context.Context) EnableProtectionInputPropertiesPtrOutput
}

type enableProtectionInputPropertiesPtrType EnableProtectionInputPropertiesArgs

func EnableProtectionInputPropertiesPtr(v *EnableProtectionInputPropertiesArgs) EnableProtectionInputPropertiesPtrInput {
	return (*enableProtectionInputPropertiesPtrType)(v)
}

func (*enableProtectionInputPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnableProtectionInputProperties)(nil)).Elem()
}

func (i *enableProtectionInputPropertiesPtrType) ToEnableProtectionInputPropertiesPtrOutput() EnableProtectionInputPropertiesPtrOutput {
	return i.ToEnableProtectionInputPropertiesPtrOutputWithContext(context.Background())
}

func (i *enableProtectionInputPropertiesPtrType) ToEnableProtectionInputPropertiesPtrOutputWithContext(ctx context.Context) EnableProtectionInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnableProtectionInputPropertiesPtrOutput)
}

// Encryption details for the fabric.
type EncryptionDetailsResponse struct {
	// The key encryption key certificate expiry date.
	KekCertExpiryDate *string `pulumi:"kekCertExpiryDate"`
	// The key encryption key certificate thumbprint.
	KekCertThumbprint *string `pulumi:"kekCertThumbprint"`
	// The key encryption key state for the Vmm.
	KekState *string `pulumi:"kekState"`
}

// Encryption details for the fabric.
type EncryptionDetailsResponseOutput struct{ *pulumi.OutputState }

func (EncryptionDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionDetailsResponse)(nil)).Elem()
}

func (o EncryptionDetailsResponseOutput) ToEncryptionDetailsResponseOutput() EncryptionDetailsResponseOutput {
	return o
}

func (o EncryptionDetailsResponseOutput) ToEncryptionDetailsResponseOutputWithContext(ctx context.Context) EncryptionDetailsResponseOutput {
	return o
}

func (o EncryptionDetailsResponseOutput) ToEncryptionDetailsResponsePtrOutput() EncryptionDetailsResponsePtrOutput {
	return o.ToEncryptionDetailsResponsePtrOutputWithContext(context.Background())
}

func (o EncryptionDetailsResponseOutput) ToEncryptionDetailsResponsePtrOutputWithContext(ctx context.Context) EncryptionDetailsResponsePtrOutput {
	return o.ApplyT(func(v EncryptionDetailsResponse) *EncryptionDetailsResponse {
		return &v
	}).(EncryptionDetailsResponsePtrOutput)
}

// The key encryption key certificate expiry date.
func (o EncryptionDetailsResponseOutput) KekCertExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionDetailsResponse) *string { return v.KekCertExpiryDate }).(pulumi.StringPtrOutput)
}

// The key encryption key certificate thumbprint.
func (o EncryptionDetailsResponseOutput) KekCertThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionDetailsResponse) *string { return v.KekCertThumbprint }).(pulumi.StringPtrOutput)
}

// The key encryption key state for the Vmm.
func (o EncryptionDetailsResponseOutput) KekState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionDetailsResponse) *string { return v.KekState }).(pulumi.StringPtrOutput)
}

type EncryptionDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (EncryptionDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionDetailsResponse)(nil)).Elem()
}

func (o EncryptionDetailsResponsePtrOutput) ToEncryptionDetailsResponsePtrOutput() EncryptionDetailsResponsePtrOutput {
	return o
}

func (o EncryptionDetailsResponsePtrOutput) ToEncryptionDetailsResponsePtrOutputWithContext(ctx context.Context) EncryptionDetailsResponsePtrOutput {
	return o
}

func (o EncryptionDetailsResponsePtrOutput) Elem() EncryptionDetailsResponseOutput {
	return o.ApplyT(func(v *EncryptionDetailsResponse) EncryptionDetailsResponse { return *v }).(EncryptionDetailsResponseOutput)
}

// The key encryption key certificate expiry date.
func (o EncryptionDetailsResponsePtrOutput) KekCertExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.KekCertExpiryDate
	}).(pulumi.StringPtrOutput)
}

// The key encryption key certificate thumbprint.
func (o EncryptionDetailsResponsePtrOutput) KekCertThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.KekCertThumbprint
	}).(pulumi.StringPtrOutput)
}

// The key encryption key state for the Vmm.
func (o EncryptionDetailsResponsePtrOutput) KekState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.KekState
	}).(pulumi.StringPtrOutput)
}

// Error Detail class which encapsulates Code, Message and Recommendations.
type ErrorDetailResponse struct {
	// Error code.
	Code string `pulumi:"code"`
	// Error Message related to the Code.
	Message string `pulumi:"message"`
	// List of recommendation strings.
	Recommendations []string `pulumi:"recommendations"`
}

// Error Detail class which encapsulates Code, Message and Recommendations.
type ErrorDetailResponseOutput struct{ *pulumi.OutputState }

func (ErrorDetailResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorDetailResponse)(nil)).Elem()
}

func (o ErrorDetailResponseOutput) ToErrorDetailResponseOutput() ErrorDetailResponseOutput {
	return o
}

func (o ErrorDetailResponseOutput) ToErrorDetailResponseOutputWithContext(ctx context.Context) ErrorDetailResponseOutput {
	return o
}

func (o ErrorDetailResponseOutput) ToErrorDetailResponsePtrOutput() ErrorDetailResponsePtrOutput {
	return o.ToErrorDetailResponsePtrOutputWithContext(context.Background())
}

func (o ErrorDetailResponseOutput) ToErrorDetailResponsePtrOutputWithContext(ctx context.Context) ErrorDetailResponsePtrOutput {
	return o.ApplyT(func(v ErrorDetailResponse) *ErrorDetailResponse {
		return &v
	}).(ErrorDetailResponsePtrOutput)
}

// Error code.
func (o ErrorDetailResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v ErrorDetailResponse) string { return v.Code }).(pulumi.StringOutput)
}

// Error Message related to the Code.
func (o ErrorDetailResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v ErrorDetailResponse) string { return v.Message }).(pulumi.StringOutput)
}

// List of recommendation strings.
func (o ErrorDetailResponseOutput) Recommendations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ErrorDetailResponse) []string { return v.Recommendations }).(pulumi.StringArrayOutput)
}

type ErrorDetailResponsePtrOutput struct{ *pulumi.OutputState }

func (ErrorDetailResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ErrorDetailResponse)(nil)).Elem()
}

func (o ErrorDetailResponsePtrOutput) ToErrorDetailResponsePtrOutput() ErrorDetailResponsePtrOutput {
	return o
}

func (o ErrorDetailResponsePtrOutput) ToErrorDetailResponsePtrOutputWithContext(ctx context.Context) ErrorDetailResponsePtrOutput {
	return o
}

func (o ErrorDetailResponsePtrOutput) Elem() ErrorDetailResponseOutput {
	return o.ApplyT(func(v *ErrorDetailResponse) ErrorDetailResponse { return *v }).(ErrorDetailResponseOutput)
}

// Error code.
func (o ErrorDetailResponsePtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ErrorDetailResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Code
	}).(pulumi.StringPtrOutput)
}

// Error Message related to the Code.
func (o ErrorDetailResponsePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ErrorDetailResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Message
	}).(pulumi.StringPtrOutput)
}

// List of recommendation strings.
func (o ErrorDetailResponsePtrOutput) Recommendations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ErrorDetailResponse) []string {
		if v == nil {
			return nil
		}
		return v.Recommendations
	}).(pulumi.StringArrayOutput)
}

// Extended Properties for Azure IaasVM Backup.
type ExtendedProperties struct {
	// Extended Properties for Disk Exclusion.
	DiskExclusionProperties *DiskExclusionProperties `pulumi:"diskExclusionProperties"`
}

// ExtendedPropertiesInput is an input type that accepts ExtendedPropertiesArgs and ExtendedPropertiesOutput values.
// You can construct a concrete instance of `ExtendedPropertiesInput` via:
//
//          ExtendedPropertiesArgs{...}
type ExtendedPropertiesInput interface {
	pulumi.Input

	ToExtendedPropertiesOutput() ExtendedPropertiesOutput
	ToExtendedPropertiesOutputWithContext(context.Context) ExtendedPropertiesOutput
}

// Extended Properties for Azure IaasVM Backup.
type ExtendedPropertiesArgs struct {
	// Extended Properties for Disk Exclusion.
	DiskExclusionProperties DiskExclusionPropertiesPtrInput `pulumi:"diskExclusionProperties"`
}

func (ExtendedPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedProperties)(nil)).Elem()
}

func (i ExtendedPropertiesArgs) ToExtendedPropertiesOutput() ExtendedPropertiesOutput {
	return i.ToExtendedPropertiesOutputWithContext(context.Background())
}

func (i ExtendedPropertiesArgs) ToExtendedPropertiesOutputWithContext(ctx context.Context) ExtendedPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedPropertiesOutput)
}

func (i ExtendedPropertiesArgs) ToExtendedPropertiesPtrOutput() ExtendedPropertiesPtrOutput {
	return i.ToExtendedPropertiesPtrOutputWithContext(context.Background())
}

func (i ExtendedPropertiesArgs) ToExtendedPropertiesPtrOutputWithContext(ctx context.Context) ExtendedPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedPropertiesOutput).ToExtendedPropertiesPtrOutputWithContext(ctx)
}

// ExtendedPropertiesPtrInput is an input type that accepts ExtendedPropertiesArgs, ExtendedPropertiesPtr and ExtendedPropertiesPtrOutput values.
// You can construct a concrete instance of `ExtendedPropertiesPtrInput` via:
//
//          ExtendedPropertiesArgs{...}
//
//  or:
//
//          nil
type ExtendedPropertiesPtrInput interface {
	pulumi.Input

	ToExtendedPropertiesPtrOutput() ExtendedPropertiesPtrOutput
	ToExtendedPropertiesPtrOutputWithContext(context.Context) ExtendedPropertiesPtrOutput
}

type extendedPropertiesPtrType ExtendedPropertiesArgs

func ExtendedPropertiesPtr(v *ExtendedPropertiesArgs) ExtendedPropertiesPtrInput {
	return (*extendedPropertiesPtrType)(v)
}

func (*extendedPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedProperties)(nil)).Elem()
}

func (i *extendedPropertiesPtrType) ToExtendedPropertiesPtrOutput() ExtendedPropertiesPtrOutput {
	return i.ToExtendedPropertiesPtrOutputWithContext(context.Background())
}

func (i *extendedPropertiesPtrType) ToExtendedPropertiesPtrOutputWithContext(ctx context.Context) ExtendedPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedPropertiesPtrOutput)
}

// Extended Properties for Azure IaasVM Backup.
type ExtendedPropertiesResponse struct {
	// Extended Properties for Disk Exclusion.
	DiskExclusionProperties *DiskExclusionPropertiesResponse `pulumi:"diskExclusionProperties"`
}

// Extended Properties for Azure IaasVM Backup.
type ExtendedPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ExtendedPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedPropertiesResponse)(nil)).Elem()
}

func (o ExtendedPropertiesResponseOutput) ToExtendedPropertiesResponseOutput() ExtendedPropertiesResponseOutput {
	return o
}

func (o ExtendedPropertiesResponseOutput) ToExtendedPropertiesResponseOutputWithContext(ctx context.Context) ExtendedPropertiesResponseOutput {
	return o
}

func (o ExtendedPropertiesResponseOutput) ToExtendedPropertiesResponsePtrOutput() ExtendedPropertiesResponsePtrOutput {
	return o.ToExtendedPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ExtendedPropertiesResponseOutput) ToExtendedPropertiesResponsePtrOutputWithContext(ctx context.Context) ExtendedPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ExtendedPropertiesResponse) *ExtendedPropertiesResponse {
		return &v
	}).(ExtendedPropertiesResponsePtrOutput)
}

// Extended Properties for Disk Exclusion.
func (o ExtendedPropertiesResponseOutput) DiskExclusionProperties() DiskExclusionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ExtendedPropertiesResponse) *DiskExclusionPropertiesResponse { return v.DiskExclusionProperties }).(DiskExclusionPropertiesResponsePtrOutput)
}

type ExtendedPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ExtendedPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedPropertiesResponse)(nil)).Elem()
}

func (o ExtendedPropertiesResponsePtrOutput) ToExtendedPropertiesResponsePtrOutput() ExtendedPropertiesResponsePtrOutput {
	return o
}

func (o ExtendedPropertiesResponsePtrOutput) ToExtendedPropertiesResponsePtrOutputWithContext(ctx context.Context) ExtendedPropertiesResponsePtrOutput {
	return o
}

func (o ExtendedPropertiesResponsePtrOutput) Elem() ExtendedPropertiesResponseOutput {
	return o.ApplyT(func(v *ExtendedPropertiesResponse) ExtendedPropertiesResponse { return *v }).(ExtendedPropertiesResponseOutput)
}

// Extended Properties for Disk Exclusion.
func (o ExtendedPropertiesResponsePtrOutput) DiskExclusionProperties() DiskExclusionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *ExtendedPropertiesResponse) *DiskExclusionPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.DiskExclusionProperties
	}).(DiskExclusionPropertiesResponsePtrOutput)
}

// Properties of site details provided during the time of site creation
type FabricCreationInputProperties struct {
	// Fabric provider specific creation input.
	CustomDetails interface{} `pulumi:"customDetails"`
}

// FabricCreationInputPropertiesInput is an input type that accepts FabricCreationInputPropertiesArgs and FabricCreationInputPropertiesOutput values.
// You can construct a concrete instance of `FabricCreationInputPropertiesInput` via:
//
//          FabricCreationInputPropertiesArgs{...}
type FabricCreationInputPropertiesInput interface {
	pulumi.Input

	ToFabricCreationInputPropertiesOutput() FabricCreationInputPropertiesOutput
	ToFabricCreationInputPropertiesOutputWithContext(context.Context) FabricCreationInputPropertiesOutput
}

// Properties of site details provided during the time of site creation
type FabricCreationInputPropertiesArgs struct {
	// Fabric provider specific creation input.
	CustomDetails pulumi.Input `pulumi:"customDetails"`
}

func (FabricCreationInputPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FabricCreationInputProperties)(nil)).Elem()
}

func (i FabricCreationInputPropertiesArgs) ToFabricCreationInputPropertiesOutput() FabricCreationInputPropertiesOutput {
	return i.ToFabricCreationInputPropertiesOutputWithContext(context.Background())
}

func (i FabricCreationInputPropertiesArgs) ToFabricCreationInputPropertiesOutputWithContext(ctx context.Context) FabricCreationInputPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FabricCreationInputPropertiesOutput)
}

func (i FabricCreationInputPropertiesArgs) ToFabricCreationInputPropertiesPtrOutput() FabricCreationInputPropertiesPtrOutput {
	return i.ToFabricCreationInputPropertiesPtrOutputWithContext(context.Background())
}

func (i FabricCreationInputPropertiesArgs) ToFabricCreationInputPropertiesPtrOutputWithContext(ctx context.Context) FabricCreationInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FabricCreationInputPropertiesOutput).ToFabricCreationInputPropertiesPtrOutputWithContext(ctx)
}

// FabricCreationInputPropertiesPtrInput is an input type that accepts FabricCreationInputPropertiesArgs, FabricCreationInputPropertiesPtr and FabricCreationInputPropertiesPtrOutput values.
// You can construct a concrete instance of `FabricCreationInputPropertiesPtrInput` via:
//
//          FabricCreationInputPropertiesArgs{...}
//
//  or:
//
//          nil
type FabricCreationInputPropertiesPtrInput interface {
	pulumi.Input

	ToFabricCreationInputPropertiesPtrOutput() FabricCreationInputPropertiesPtrOutput
	ToFabricCreationInputPropertiesPtrOutputWithContext(context.Context) FabricCreationInputPropertiesPtrOutput
}

type fabricCreationInputPropertiesPtrType FabricCreationInputPropertiesArgs

func FabricCreationInputPropertiesPtr(v *FabricCreationInputPropertiesArgs) FabricCreationInputPropertiesPtrInput {
	return (*fabricCreationInputPropertiesPtrType)(v)
}

func (*fabricCreationInputPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FabricCreationInputProperties)(nil)).Elem()
}

func (i *fabricCreationInputPropertiesPtrType) ToFabricCreationInputPropertiesPtrOutput() FabricCreationInputPropertiesPtrOutput {
	return i.ToFabricCreationInputPropertiesPtrOutputWithContext(context.Background())
}

func (i *fabricCreationInputPropertiesPtrType) ToFabricCreationInputPropertiesPtrOutputWithContext(ctx context.Context) FabricCreationInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FabricCreationInputPropertiesPtrOutput)
}

// Fabric properties.
type FabricPropertiesResponse struct {
	// BCDR state of the fabric.
	BcdrState *string `pulumi:"bcdrState"`
	// Fabric specific settings.
	CustomDetails interface{} `pulumi:"customDetails"`
	// Encryption details for the fabric.
	EncryptionDetails *EncryptionDetailsResponse `pulumi:"encryptionDetails"`
	// Friendly name of the fabric.
	FriendlyName *string `pulumi:"friendlyName"`
	// Health of fabric.
	Health *string `pulumi:"health"`
	// Fabric health error details.
	HealthErrorDetails []HealthErrorResponse `pulumi:"healthErrorDetails"`
	// Dra Registration Id.
	InternalIdentifier *string `pulumi:"internalIdentifier"`
	// Rollover encryption details for the fabric.
	RolloverEncryptionDetails *EncryptionDetailsResponse `pulumi:"rolloverEncryptionDetails"`
}

// Fabric properties.
type FabricPropertiesResponseOutput struct{ *pulumi.OutputState }

func (FabricPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FabricPropertiesResponse)(nil)).Elem()
}

func (o FabricPropertiesResponseOutput) ToFabricPropertiesResponseOutput() FabricPropertiesResponseOutput {
	return o
}

func (o FabricPropertiesResponseOutput) ToFabricPropertiesResponseOutputWithContext(ctx context.Context) FabricPropertiesResponseOutput {
	return o
}

func (o FabricPropertiesResponseOutput) ToFabricPropertiesResponsePtrOutput() FabricPropertiesResponsePtrOutput {
	return o.ToFabricPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o FabricPropertiesResponseOutput) ToFabricPropertiesResponsePtrOutputWithContext(ctx context.Context) FabricPropertiesResponsePtrOutput {
	return o.ApplyT(func(v FabricPropertiesResponse) *FabricPropertiesResponse {
		return &v
	}).(FabricPropertiesResponsePtrOutput)
}

// BCDR state of the fabric.
func (o FabricPropertiesResponseOutput) BcdrState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FabricPropertiesResponse) *string { return v.BcdrState }).(pulumi.StringPtrOutput)
}

// Fabric specific settings.
func (o FabricPropertiesResponseOutput) CustomDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v FabricPropertiesResponse) interface{} { return v.CustomDetails }).(pulumi.AnyOutput)
}

// Encryption details for the fabric.
func (o FabricPropertiesResponseOutput) EncryptionDetails() EncryptionDetailsResponsePtrOutput {
	return o.ApplyT(func(v FabricPropertiesResponse) *EncryptionDetailsResponse { return v.EncryptionDetails }).(EncryptionDetailsResponsePtrOutput)
}

// Friendly name of the fabric.
func (o FabricPropertiesResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FabricPropertiesResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Health of fabric.
func (o FabricPropertiesResponseOutput) Health() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FabricPropertiesResponse) *string { return v.Health }).(pulumi.StringPtrOutput)
}

// Fabric health error details.
func (o FabricPropertiesResponseOutput) HealthErrorDetails() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v FabricPropertiesResponse) []HealthErrorResponse { return v.HealthErrorDetails }).(HealthErrorResponseArrayOutput)
}

// Dra Registration Id.
func (o FabricPropertiesResponseOutput) InternalIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FabricPropertiesResponse) *string { return v.InternalIdentifier }).(pulumi.StringPtrOutput)
}

// Rollover encryption details for the fabric.
func (o FabricPropertiesResponseOutput) RolloverEncryptionDetails() EncryptionDetailsResponsePtrOutput {
	return o.ApplyT(func(v FabricPropertiesResponse) *EncryptionDetailsResponse { return v.RolloverEncryptionDetails }).(EncryptionDetailsResponsePtrOutput)
}

type FabricPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (FabricPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FabricPropertiesResponse)(nil)).Elem()
}

func (o FabricPropertiesResponsePtrOutput) ToFabricPropertiesResponsePtrOutput() FabricPropertiesResponsePtrOutput {
	return o
}

func (o FabricPropertiesResponsePtrOutput) ToFabricPropertiesResponsePtrOutputWithContext(ctx context.Context) FabricPropertiesResponsePtrOutput {
	return o
}

func (o FabricPropertiesResponsePtrOutput) Elem() FabricPropertiesResponseOutput {
	return o.ApplyT(func(v *FabricPropertiesResponse) FabricPropertiesResponse { return *v }).(FabricPropertiesResponseOutput)
}

// BCDR state of the fabric.
func (o FabricPropertiesResponsePtrOutput) BcdrState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FabricPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.BcdrState
	}).(pulumi.StringPtrOutput)
}

// Fabric specific settings.
func (o FabricPropertiesResponsePtrOutput) CustomDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v *FabricPropertiesResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.CustomDetails
	}).(pulumi.AnyOutput)
}

// Encryption details for the fabric.
func (o FabricPropertiesResponsePtrOutput) EncryptionDetails() EncryptionDetailsResponsePtrOutput {
	return o.ApplyT(func(v *FabricPropertiesResponse) *EncryptionDetailsResponse {
		if v == nil {
			return nil
		}
		return v.EncryptionDetails
	}).(EncryptionDetailsResponsePtrOutput)
}

// Friendly name of the fabric.
func (o FabricPropertiesResponsePtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FabricPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// Health of fabric.
func (o FabricPropertiesResponsePtrOutput) Health() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FabricPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Health
	}).(pulumi.StringPtrOutput)
}

// Fabric health error details.
func (o FabricPropertiesResponsePtrOutput) HealthErrorDetails() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v *FabricPropertiesResponse) []HealthErrorResponse {
		if v == nil {
			return nil
		}
		return v.HealthErrorDetails
	}).(HealthErrorResponseArrayOutput)
}

// Dra Registration Id.
func (o FabricPropertiesResponsePtrOutput) InternalIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FabricPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.InternalIdentifier
	}).(pulumi.StringPtrOutput)
}

// Rollover encryption details for the fabric.
func (o FabricPropertiesResponsePtrOutput) RolloverEncryptionDetails() EncryptionDetailsResponsePtrOutput {
	return o.ApplyT(func(v *FabricPropertiesResponse) *EncryptionDetailsResponse {
		if v == nil {
			return nil
		}
		return v.RolloverEncryptionDetails
	}).(EncryptionDetailsResponsePtrOutput)
}

// Base class for generic container of backup items
type GenericContainer struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	ContainerType *string `pulumi:"containerType"`
	// Extended information (not returned in List container API calls)
	ExtendedInformation *GenericContainerExtendedInfo `pulumi:"extendedInformation"`
	// Name of the container's fabric
	FabricName *string `pulumi:"fabricName"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
}

// GenericContainerInput is an input type that accepts GenericContainerArgs and GenericContainerOutput values.
// You can construct a concrete instance of `GenericContainerInput` via:
//
//          GenericContainerArgs{...}
type GenericContainerInput interface {
	pulumi.Input

	ToGenericContainerOutput() GenericContainerOutput
	ToGenericContainerOutputWithContext(context.Context) GenericContainerOutput
}

// Base class for generic container of backup items
type GenericContainerArgs struct {
	// Type of backup management for the container.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	ContainerType pulumi.StringPtrInput `pulumi:"containerType"`
	// Extended information (not returned in List container API calls)
	ExtendedInformation GenericContainerExtendedInfoPtrInput `pulumi:"extendedInformation"`
	// Name of the container's fabric
	FabricName pulumi.StringPtrInput `pulumi:"fabricName"`
	// Friendly name of the container.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus pulumi.StringPtrInput `pulumi:"healthStatus"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus pulumi.StringPtrInput `pulumi:"registrationStatus"`
}

func (GenericContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GenericContainer)(nil)).Elem()
}

func (i GenericContainerArgs) ToGenericContainerOutput() GenericContainerOutput {
	return i.ToGenericContainerOutputWithContext(context.Background())
}

func (i GenericContainerArgs) ToGenericContainerOutputWithContext(ctx context.Context) GenericContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GenericContainerOutput)
}

// Container extended information
type GenericContainerExtendedInfo struct {
	// Container identity information
	ContainerIdentityInfo *ContainerIdentityInfo `pulumi:"containerIdentityInfo"`
	// Public key of container cert
	RawCertData *string `pulumi:"rawCertData"`
	// Azure Backup Service Endpoints for the container
	ServiceEndpoints map[string]string `pulumi:"serviceEndpoints"`
}

// GenericContainerExtendedInfoInput is an input type that accepts GenericContainerExtendedInfoArgs and GenericContainerExtendedInfoOutput values.
// You can construct a concrete instance of `GenericContainerExtendedInfoInput` via:
//
//          GenericContainerExtendedInfoArgs{...}
type GenericContainerExtendedInfoInput interface {
	pulumi.Input

	ToGenericContainerExtendedInfoOutput() GenericContainerExtendedInfoOutput
	ToGenericContainerExtendedInfoOutputWithContext(context.Context) GenericContainerExtendedInfoOutput
}

// Container extended information
type GenericContainerExtendedInfoArgs struct {
	// Container identity information
	ContainerIdentityInfo ContainerIdentityInfoPtrInput `pulumi:"containerIdentityInfo"`
	// Public key of container cert
	RawCertData pulumi.StringPtrInput `pulumi:"rawCertData"`
	// Azure Backup Service Endpoints for the container
	ServiceEndpoints pulumi.StringMapInput `pulumi:"serviceEndpoints"`
}

func (GenericContainerExtendedInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GenericContainerExtendedInfo)(nil)).Elem()
}

func (i GenericContainerExtendedInfoArgs) ToGenericContainerExtendedInfoOutput() GenericContainerExtendedInfoOutput {
	return i.ToGenericContainerExtendedInfoOutputWithContext(context.Background())
}

func (i GenericContainerExtendedInfoArgs) ToGenericContainerExtendedInfoOutputWithContext(ctx context.Context) GenericContainerExtendedInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GenericContainerExtendedInfoOutput)
}

func (i GenericContainerExtendedInfoArgs) ToGenericContainerExtendedInfoPtrOutput() GenericContainerExtendedInfoPtrOutput {
	return i.ToGenericContainerExtendedInfoPtrOutputWithContext(context.Background())
}

func (i GenericContainerExtendedInfoArgs) ToGenericContainerExtendedInfoPtrOutputWithContext(ctx context.Context) GenericContainerExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GenericContainerExtendedInfoOutput).ToGenericContainerExtendedInfoPtrOutputWithContext(ctx)
}

// GenericContainerExtendedInfoPtrInput is an input type that accepts GenericContainerExtendedInfoArgs, GenericContainerExtendedInfoPtr and GenericContainerExtendedInfoPtrOutput values.
// You can construct a concrete instance of `GenericContainerExtendedInfoPtrInput` via:
//
//          GenericContainerExtendedInfoArgs{...}
//
//  or:
//
//          nil
type GenericContainerExtendedInfoPtrInput interface {
	pulumi.Input

	ToGenericContainerExtendedInfoPtrOutput() GenericContainerExtendedInfoPtrOutput
	ToGenericContainerExtendedInfoPtrOutputWithContext(context.Context) GenericContainerExtendedInfoPtrOutput
}

type genericContainerExtendedInfoPtrType GenericContainerExtendedInfoArgs

func GenericContainerExtendedInfoPtr(v *GenericContainerExtendedInfoArgs) GenericContainerExtendedInfoPtrInput {
	return (*genericContainerExtendedInfoPtrType)(v)
}

func (*genericContainerExtendedInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GenericContainerExtendedInfo)(nil)).Elem()
}

func (i *genericContainerExtendedInfoPtrType) ToGenericContainerExtendedInfoPtrOutput() GenericContainerExtendedInfoPtrOutput {
	return i.ToGenericContainerExtendedInfoPtrOutputWithContext(context.Background())
}

func (i *genericContainerExtendedInfoPtrType) ToGenericContainerExtendedInfoPtrOutputWithContext(ctx context.Context) GenericContainerExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GenericContainerExtendedInfoPtrOutput)
}

// Container extended information
type GenericContainerExtendedInfoResponse struct {
	// Container identity information
	ContainerIdentityInfo *ContainerIdentityInfoResponse `pulumi:"containerIdentityInfo"`
	// Public key of container cert
	RawCertData *string `pulumi:"rawCertData"`
	// Azure Backup Service Endpoints for the container
	ServiceEndpoints map[string]string `pulumi:"serviceEndpoints"`
}

// Container extended information
type GenericContainerExtendedInfoResponseOutput struct{ *pulumi.OutputState }

func (GenericContainerExtendedInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GenericContainerExtendedInfoResponse)(nil)).Elem()
}

func (o GenericContainerExtendedInfoResponseOutput) ToGenericContainerExtendedInfoResponseOutput() GenericContainerExtendedInfoResponseOutput {
	return o
}

func (o GenericContainerExtendedInfoResponseOutput) ToGenericContainerExtendedInfoResponseOutputWithContext(ctx context.Context) GenericContainerExtendedInfoResponseOutput {
	return o
}

func (o GenericContainerExtendedInfoResponseOutput) ToGenericContainerExtendedInfoResponsePtrOutput() GenericContainerExtendedInfoResponsePtrOutput {
	return o.ToGenericContainerExtendedInfoResponsePtrOutputWithContext(context.Background())
}

func (o GenericContainerExtendedInfoResponseOutput) ToGenericContainerExtendedInfoResponsePtrOutputWithContext(ctx context.Context) GenericContainerExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v GenericContainerExtendedInfoResponse) *GenericContainerExtendedInfoResponse {
		return &v
	}).(GenericContainerExtendedInfoResponsePtrOutput)
}

// Container identity information
func (o GenericContainerExtendedInfoResponseOutput) ContainerIdentityInfo() ContainerIdentityInfoResponsePtrOutput {
	return o.ApplyT(func(v GenericContainerExtendedInfoResponse) *ContainerIdentityInfoResponse {
		return v.ContainerIdentityInfo
	}).(ContainerIdentityInfoResponsePtrOutput)
}

// Public key of container cert
func (o GenericContainerExtendedInfoResponseOutput) RawCertData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericContainerExtendedInfoResponse) *string { return v.RawCertData }).(pulumi.StringPtrOutput)
}

// Azure Backup Service Endpoints for the container
func (o GenericContainerExtendedInfoResponseOutput) ServiceEndpoints() pulumi.StringMapOutput {
	return o.ApplyT(func(v GenericContainerExtendedInfoResponse) map[string]string { return v.ServiceEndpoints }).(pulumi.StringMapOutput)
}

type GenericContainerExtendedInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (GenericContainerExtendedInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GenericContainerExtendedInfoResponse)(nil)).Elem()
}

func (o GenericContainerExtendedInfoResponsePtrOutput) ToGenericContainerExtendedInfoResponsePtrOutput() GenericContainerExtendedInfoResponsePtrOutput {
	return o
}

func (o GenericContainerExtendedInfoResponsePtrOutput) ToGenericContainerExtendedInfoResponsePtrOutputWithContext(ctx context.Context) GenericContainerExtendedInfoResponsePtrOutput {
	return o
}

func (o GenericContainerExtendedInfoResponsePtrOutput) Elem() GenericContainerExtendedInfoResponseOutput {
	return o.ApplyT(func(v *GenericContainerExtendedInfoResponse) GenericContainerExtendedInfoResponse { return *v }).(GenericContainerExtendedInfoResponseOutput)
}

// Container identity information
func (o GenericContainerExtendedInfoResponsePtrOutput) ContainerIdentityInfo() ContainerIdentityInfoResponsePtrOutput {
	return o.ApplyT(func(v *GenericContainerExtendedInfoResponse) *ContainerIdentityInfoResponse {
		if v == nil {
			return nil
		}
		return v.ContainerIdentityInfo
	}).(ContainerIdentityInfoResponsePtrOutput)
}

// Public key of container cert
func (o GenericContainerExtendedInfoResponsePtrOutput) RawCertData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericContainerExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.RawCertData
	}).(pulumi.StringPtrOutput)
}

// Azure Backup Service Endpoints for the container
func (o GenericContainerExtendedInfoResponsePtrOutput) ServiceEndpoints() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GenericContainerExtendedInfoResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.ServiceEndpoints
	}).(pulumi.StringMapOutput)
}

// Base class for generic container of backup items
type GenericContainerResponse struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	ContainerType *string `pulumi:"containerType"`
	// Extended information (not returned in List container API calls)
	ExtendedInformation *GenericContainerExtendedInfoResponse `pulumi:"extendedInformation"`
	// Name of the container's fabric
	FabricName *string `pulumi:"fabricName"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
}

// Base class for generic container of backup items
type GenericContainerResponseOutput struct{ *pulumi.OutputState }

func (GenericContainerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GenericContainerResponse)(nil)).Elem()
}

func (o GenericContainerResponseOutput) ToGenericContainerResponseOutput() GenericContainerResponseOutput {
	return o
}

func (o GenericContainerResponseOutput) ToGenericContainerResponseOutputWithContext(ctx context.Context) GenericContainerResponseOutput {
	return o
}

// Type of backup management for the container.
func (o GenericContainerResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericContainerResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
func (o GenericContainerResponseOutput) ContainerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericContainerResponse) *string { return v.ContainerType }).(pulumi.StringPtrOutput)
}

// Extended information (not returned in List container API calls)
func (o GenericContainerResponseOutput) ExtendedInformation() GenericContainerExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v GenericContainerResponse) *GenericContainerExtendedInfoResponse { return v.ExtendedInformation }).(GenericContainerExtendedInfoResponsePtrOutput)
}

// Name of the container's fabric
func (o GenericContainerResponseOutput) FabricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericContainerResponse) *string { return v.FabricName }).(pulumi.StringPtrOutput)
}

// Friendly name of the container.
func (o GenericContainerResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericContainerResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o GenericContainerResponseOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericContainerResponse) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o GenericContainerResponseOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericContainerResponse) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// Base class for backup items.
type GenericProtectedItem struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Name of this backup item's fabric.
	FabricName *string `pulumi:"fabricName"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Indicates consistency of policy object and policy applied to this backup item.
	PolicyState *string `pulumi:"policyState"`
	// Data Plane Service ID of the protected item.
	ProtectedItemId *int `pulumi:"protectedItemId"`
	// backup item type.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Loosely coupled (type, value) associations (example - parent of a protected item)
	SourceAssociations map[string]string `pulumi:"sourceAssociations"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Type of workload this item represents.
	WorkloadType *string `pulumi:"workloadType"`
}

// GenericProtectedItemInput is an input type that accepts GenericProtectedItemArgs and GenericProtectedItemOutput values.
// You can construct a concrete instance of `GenericProtectedItemInput` via:
//
//          GenericProtectedItemArgs{...}
type GenericProtectedItemInput interface {
	pulumi.Input

	ToGenericProtectedItemOutput() GenericProtectedItemOutput
	ToGenericProtectedItemOutputWithContext(context.Context) GenericProtectedItemOutput
}

// Base class for backup items.
type GenericProtectedItemArgs struct {
	// Type of backup management for the backed up item.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName pulumi.StringPtrInput `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode pulumi.StringPtrInput `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC pulumi.StringPtrInput `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining pulumi.StringPtrInput `pulumi:"deferredDeleteTimeRemaining"`
	// Name of this backup item's fabric.
	FabricName pulumi.StringPtrInput `pulumi:"fabricName"`
	// Friendly name of the container.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming pulumi.BoolPtrInput `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate pulumi.BoolPtrInput `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete pulumi.BoolPtrInput `pulumi:"isScheduledForDeferredDelete"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint pulumi.StringPtrInput `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// Indicates consistency of policy object and policy applied to this backup item.
	PolicyState pulumi.StringPtrInput `pulumi:"policyState"`
	// Data Plane Service ID of the protected item.
	ProtectedItemId pulumi.IntPtrInput `pulumi:"protectedItemId"`
	// backup item type.
	ProtectedItemType pulumi.StringInput `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState pulumi.StringPtrInput `pulumi:"protectionState"`
	// Loosely coupled (type, value) associations (example - parent of a protected item)
	SourceAssociations pulumi.StringMapInput `pulumi:"sourceAssociations"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
	// Type of workload this item represents.
	WorkloadType pulumi.StringPtrInput `pulumi:"workloadType"`
}

func (GenericProtectedItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GenericProtectedItem)(nil)).Elem()
}

func (i GenericProtectedItemArgs) ToGenericProtectedItemOutput() GenericProtectedItemOutput {
	return i.ToGenericProtectedItemOutputWithContext(context.Background())
}

func (i GenericProtectedItemArgs) ToGenericProtectedItemOutputWithContext(ctx context.Context) GenericProtectedItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GenericProtectedItemOutput)
}

// Base class for backup items.
type GenericProtectedItemResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Name of this backup item's fabric.
	FabricName *string `pulumi:"fabricName"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Indicates consistency of policy object and policy applied to this backup item.
	PolicyState *string `pulumi:"policyState"`
	// Data Plane Service ID of the protected item.
	ProtectedItemId *int `pulumi:"protectedItemId"`
	// backup item type.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Loosely coupled (type, value) associations (example - parent of a protected item)
	SourceAssociations map[string]string `pulumi:"sourceAssociations"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Type of workload this item represents.
	WorkloadType *string `pulumi:"workloadType"`
}

// Base class for backup items.
type GenericProtectedItemResponseOutput struct{ *pulumi.OutputState }

func (GenericProtectedItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GenericProtectedItemResponse)(nil)).Elem()
}

func (o GenericProtectedItemResponseOutput) ToGenericProtectedItemResponseOutput() GenericProtectedItemResponseOutput {
	return o
}

func (o GenericProtectedItemResponseOutput) ToGenericProtectedItemResponseOutputWithContext(ctx context.Context) GenericProtectedItemResponseOutput {
	return o
}

// Type of backup management for the backed up item.
func (o GenericProtectedItemResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Name of the backup set the backup item belongs to
func (o GenericProtectedItemResponseOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o GenericProtectedItemResponseOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o GenericProtectedItemResponseOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o GenericProtectedItemResponseOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o GenericProtectedItemResponseOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Name of this backup item's fabric.
func (o GenericProtectedItemResponseOutput) FabricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *string { return v.FabricName }).(pulumi.StringPtrOutput)
}

// Friendly name of the container.
func (o GenericProtectedItemResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o GenericProtectedItemResponseOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o GenericProtectedItemResponseOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o GenericProtectedItemResponseOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o GenericProtectedItemResponseOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o GenericProtectedItemResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Indicates consistency of policy object and policy applied to this backup item.
func (o GenericProtectedItemResponseOutput) PolicyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *string { return v.PolicyState }).(pulumi.StringPtrOutput)
}

// Data Plane Service ID of the protected item.
func (o GenericProtectedItemResponseOutput) ProtectedItemId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *int { return v.ProtectedItemId }).(pulumi.IntPtrOutput)
}

// backup item type.
func (o GenericProtectedItemResponseOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o GenericProtectedItemResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// Loosely coupled (type, value) associations (example - parent of a protected item)
func (o GenericProtectedItemResponseOutput) SourceAssociations() pulumi.StringMapOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) map[string]string { return v.SourceAssociations }).(pulumi.StringMapOutput)
}

// ARM ID of the resource to be backed up.
func (o GenericProtectedItemResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// Type of workload this item represents.
func (o GenericProtectedItemResponseOutput) WorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *string { return v.WorkloadType }).(pulumi.StringPtrOutput)
}

// Health Error
type HealthErrorResponse struct {
	// Error creation time (UTC)
	CreationTimeUtc *string `pulumi:"creationTimeUtc"`
	// Value indicating whether the health error is customer resolvable.
	CustomerResolvability *string `pulumi:"customerResolvability"`
	// ID of the entity.
	EntityId *string `pulumi:"entityId"`
	// Category of error.
	ErrorCategory *string `pulumi:"errorCategory"`
	// Error code.
	ErrorCode *string `pulumi:"errorCode"`
	// The health error unique id.
	ErrorId *string `pulumi:"errorId"`
	// Level of error.
	ErrorLevel *string `pulumi:"errorLevel"`
	// Error message.
	ErrorMessage *string `pulumi:"errorMessage"`
	// Source of error.
	ErrorSource *string `pulumi:"errorSource"`
	// Type of error.
	ErrorType *string `pulumi:"errorType"`
	// The inner health errors. HealthError having a list of HealthError as child errors is problematic. InnerHealthError is used because this will prevent an infinite loop of structures when Hydra tries to auto-generate the contract. We are exposing the related health errors as inner health errors and all API consumers can utilize this in the same fashion as Exception -&gt; InnerException.
	InnerHealthErrors []InnerHealthErrorResponse `pulumi:"innerHealthErrors"`
	// Possible causes of error.
	PossibleCauses *string `pulumi:"possibleCauses"`
	// Recommended action to resolve error.
	RecommendedAction *string `pulumi:"recommendedAction"`
	// DRA error message.
	RecoveryProviderErrorMessage *string `pulumi:"recoveryProviderErrorMessage"`
	// Summary message of the entity.
	SummaryMessage *string `pulumi:"summaryMessage"`
}

// Health Error
type HealthErrorResponseOutput struct{ *pulumi.OutputState }

func (HealthErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthErrorResponse)(nil)).Elem()
}

func (o HealthErrorResponseOutput) ToHealthErrorResponseOutput() HealthErrorResponseOutput {
	return o
}

func (o HealthErrorResponseOutput) ToHealthErrorResponseOutputWithContext(ctx context.Context) HealthErrorResponseOutput {
	return o
}

// Error creation time (UTC)
func (o HealthErrorResponseOutput) CreationTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.CreationTimeUtc }).(pulumi.StringPtrOutput)
}

// Value indicating whether the health error is customer resolvable.
func (o HealthErrorResponseOutput) CustomerResolvability() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.CustomerResolvability }).(pulumi.StringPtrOutput)
}

// ID of the entity.
func (o HealthErrorResponseOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

// Category of error.
func (o HealthErrorResponseOutput) ErrorCategory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.ErrorCategory }).(pulumi.StringPtrOutput)
}

// Error code.
func (o HealthErrorResponseOutput) ErrorCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.ErrorCode }).(pulumi.StringPtrOutput)
}

// The health error unique id.
func (o HealthErrorResponseOutput) ErrorId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.ErrorId }).(pulumi.StringPtrOutput)
}

// Level of error.
func (o HealthErrorResponseOutput) ErrorLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.ErrorLevel }).(pulumi.StringPtrOutput)
}

// Error message.
func (o HealthErrorResponseOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.ErrorMessage }).(pulumi.StringPtrOutput)
}

// Source of error.
func (o HealthErrorResponseOutput) ErrorSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.ErrorSource }).(pulumi.StringPtrOutput)
}

// Type of error.
func (o HealthErrorResponseOutput) ErrorType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.ErrorType }).(pulumi.StringPtrOutput)
}

// The inner health errors. HealthError having a list of HealthError as child errors is problematic. InnerHealthError is used because this will prevent an infinite loop of structures when Hydra tries to auto-generate the contract. We are exposing the related health errors as inner health errors and all API consumers can utilize this in the same fashion as Exception -&gt; InnerException.
func (o HealthErrorResponseOutput) InnerHealthErrors() InnerHealthErrorResponseArrayOutput {
	return o.ApplyT(func(v HealthErrorResponse) []InnerHealthErrorResponse { return v.InnerHealthErrors }).(InnerHealthErrorResponseArrayOutput)
}

// Possible causes of error.
func (o HealthErrorResponseOutput) PossibleCauses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.PossibleCauses }).(pulumi.StringPtrOutput)
}

// Recommended action to resolve error.
func (o HealthErrorResponseOutput) RecommendedAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.RecommendedAction }).(pulumi.StringPtrOutput)
}

// DRA error message.
func (o HealthErrorResponseOutput) RecoveryProviderErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.RecoveryProviderErrorMessage }).(pulumi.StringPtrOutput)
}

// Summary message of the entity.
func (o HealthErrorResponseOutput) SummaryMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.SummaryMessage }).(pulumi.StringPtrOutput)
}

type HealthErrorResponseArrayOutput struct{ *pulumi.OutputState }

func (HealthErrorResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HealthErrorResponse)(nil)).Elem()
}

func (o HealthErrorResponseArrayOutput) ToHealthErrorResponseArrayOutput() HealthErrorResponseArrayOutput {
	return o
}

func (o HealthErrorResponseArrayOutput) ToHealthErrorResponseArrayOutputWithContext(ctx context.Context) HealthErrorResponseArrayOutput {
	return o
}

func (o HealthErrorResponseArrayOutput) Index(i pulumi.IntInput) HealthErrorResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HealthErrorResponse {
		return vs[0].([]HealthErrorResponse)[vs[1].(int)]
	}).(HealthErrorResponseOutput)
}

// Azure specific enable protection input.
type HyperVReplicaAzureEnableProtectionInput struct {
	// The list of VHD IDs of disks to be protected.
	DisksToInclude []string `pulumi:"disksToInclude"`
	// The selected option to enable RDP\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum.
	EnableRdpOnTargetOption *string `pulumi:"enableRdpOnTargetOption"`
	// The Hyper-V host Vm Id.
	HvHostVmId *string `pulumi:"hvHostVmId"`
	// The class type.
	InstanceType *string `pulumi:"instanceType"`
	// The storage account to be used for logging during replication.
	LogStorageAccountId *string `pulumi:"logStorageAccountId"`
	// The OS type associated with vm.
	OsType *string `pulumi:"osType"`
	// The target availability zone.
	TargetAvailabilityZone *string `pulumi:"targetAvailabilityZone"`
	// The selected target Azure network Id.
	TargetAzureNetworkId *string `pulumi:"targetAzureNetworkId"`
	// The selected target Azure subnet Id.
	TargetAzureSubnetId *string `pulumi:"targetAzureSubnetId"`
	// The Id of the target resource group (for classic deployment) in which the failover VM is to be created.
	TargetAzureV1ResourceGroupId *string `pulumi:"targetAzureV1ResourceGroupId"`
	// The Id of the target resource group (for resource manager deployment) in which the failover VM is to be created.
	TargetAzureV2ResourceGroupId *string `pulumi:"targetAzureV2ResourceGroupId"`
	// The target azure Vm Name.
	TargetAzureVmName *string `pulumi:"targetAzureVmName"`
	// The proximity placement group ARM Id.
	TargetProximityPlacementGroupId *string `pulumi:"targetProximityPlacementGroupId"`
	// The storage account name.
	TargetStorageAccountId *string `pulumi:"targetStorageAccountId"`
	// A value indicating whether managed disks should be used during failover.
	UseManagedDisks *string `pulumi:"useManagedDisks"`
	// The OS disk VHD id associated with vm.
	VhdId *string `pulumi:"vhdId"`
	// The Vm Name.
	VmName *string `pulumi:"vmName"`
}

// HyperVReplicaAzureEnableProtectionInputInput is an input type that accepts HyperVReplicaAzureEnableProtectionInputArgs and HyperVReplicaAzureEnableProtectionInputOutput values.
// You can construct a concrete instance of `HyperVReplicaAzureEnableProtectionInputInput` via:
//
//          HyperVReplicaAzureEnableProtectionInputArgs{...}
type HyperVReplicaAzureEnableProtectionInputInput interface {
	pulumi.Input

	ToHyperVReplicaAzureEnableProtectionInputOutput() HyperVReplicaAzureEnableProtectionInputOutput
	ToHyperVReplicaAzureEnableProtectionInputOutputWithContext(context.Context) HyperVReplicaAzureEnableProtectionInputOutput
}

// Azure specific enable protection input.
type HyperVReplicaAzureEnableProtectionInputArgs struct {
	// The list of VHD IDs of disks to be protected.
	DisksToInclude pulumi.StringArrayInput `pulumi:"disksToInclude"`
	// The selected option to enable RDP\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum.
	EnableRdpOnTargetOption pulumi.StringPtrInput `pulumi:"enableRdpOnTargetOption"`
	// The Hyper-V host Vm Id.
	HvHostVmId pulumi.StringPtrInput `pulumi:"hvHostVmId"`
	// The class type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// The storage account to be used for logging during replication.
	LogStorageAccountId pulumi.StringPtrInput `pulumi:"logStorageAccountId"`
	// The OS type associated with vm.
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// The target availability zone.
	TargetAvailabilityZone pulumi.StringPtrInput `pulumi:"targetAvailabilityZone"`
	// The selected target Azure network Id.
	TargetAzureNetworkId pulumi.StringPtrInput `pulumi:"targetAzureNetworkId"`
	// The selected target Azure subnet Id.
	TargetAzureSubnetId pulumi.StringPtrInput `pulumi:"targetAzureSubnetId"`
	// The Id of the target resource group (for classic deployment) in which the failover VM is to be created.
	TargetAzureV1ResourceGroupId pulumi.StringPtrInput `pulumi:"targetAzureV1ResourceGroupId"`
	// The Id of the target resource group (for resource manager deployment) in which the failover VM is to be created.
	TargetAzureV2ResourceGroupId pulumi.StringPtrInput `pulumi:"targetAzureV2ResourceGroupId"`
	// The target azure Vm Name.
	TargetAzureVmName pulumi.StringPtrInput `pulumi:"targetAzureVmName"`
	// The proximity placement group ARM Id.
	TargetProximityPlacementGroupId pulumi.StringPtrInput `pulumi:"targetProximityPlacementGroupId"`
	// The storage account name.
	TargetStorageAccountId pulumi.StringPtrInput `pulumi:"targetStorageAccountId"`
	// A value indicating whether managed disks should be used during failover.
	UseManagedDisks pulumi.StringPtrInput `pulumi:"useManagedDisks"`
	// The OS disk VHD id associated with vm.
	VhdId pulumi.StringPtrInput `pulumi:"vhdId"`
	// The Vm Name.
	VmName pulumi.StringPtrInput `pulumi:"vmName"`
}

func (HyperVReplicaAzureEnableProtectionInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVReplicaAzureEnableProtectionInput)(nil)).Elem()
}

func (i HyperVReplicaAzureEnableProtectionInputArgs) ToHyperVReplicaAzureEnableProtectionInputOutput() HyperVReplicaAzureEnableProtectionInputOutput {
	return i.ToHyperVReplicaAzureEnableProtectionInputOutputWithContext(context.Background())
}

func (i HyperVReplicaAzureEnableProtectionInputArgs) ToHyperVReplicaAzureEnableProtectionInputOutputWithContext(ctx context.Context) HyperVReplicaAzureEnableProtectionInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HyperVReplicaAzureEnableProtectionInputOutput)
}

// Hyper-V Replica Azure specific protection profile details.
type HyperVReplicaAzurePolicyDetailsResponse struct {
	// The active storage account Id.
	ActiveStorageAccountId *string `pulumi:"activeStorageAccountId"`
	// The interval (in hours) at which Hyper-V Replica should create an application consistent snapshot within the VM.
	ApplicationConsistentSnapshotFrequencyInHours *int `pulumi:"applicationConsistentSnapshotFrequencyInHours"`
	// A value indicating whether encryption is enabled for virtual machines in this cloud.
	Encryption *string `pulumi:"encryption"`
	// Gets the class type. Overridden in derived classes.
	InstanceType string `pulumi:"instanceType"`
	// The scheduled start time for the initial replication. If this parameter is Null, the initial replication starts immediately.
	OnlineReplicationStartTime *string `pulumi:"onlineReplicationStartTime"`
	// The duration (in hours) to which point the recovery history needs to be maintained.
	RecoveryPointHistoryDurationInHours *int `pulumi:"recoveryPointHistoryDurationInHours"`
	// The replication interval.
	ReplicationInterval *int `pulumi:"replicationInterval"`
}

// Hyper-V Replica Azure specific protection profile details.
type HyperVReplicaAzurePolicyDetailsResponseOutput struct{ *pulumi.OutputState }

func (HyperVReplicaAzurePolicyDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVReplicaAzurePolicyDetailsResponse)(nil)).Elem()
}

func (o HyperVReplicaAzurePolicyDetailsResponseOutput) ToHyperVReplicaAzurePolicyDetailsResponseOutput() HyperVReplicaAzurePolicyDetailsResponseOutput {
	return o
}

func (o HyperVReplicaAzurePolicyDetailsResponseOutput) ToHyperVReplicaAzurePolicyDetailsResponseOutputWithContext(ctx context.Context) HyperVReplicaAzurePolicyDetailsResponseOutput {
	return o
}

// The active storage account Id.
func (o HyperVReplicaAzurePolicyDetailsResponseOutput) ActiveStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzurePolicyDetailsResponse) *string { return v.ActiveStorageAccountId }).(pulumi.StringPtrOutput)
}

// The interval (in hours) at which Hyper-V Replica should create an application consistent snapshot within the VM.
func (o HyperVReplicaAzurePolicyDetailsResponseOutput) ApplicationConsistentSnapshotFrequencyInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzurePolicyDetailsResponse) *int {
		return v.ApplicationConsistentSnapshotFrequencyInHours
	}).(pulumi.IntPtrOutput)
}

// A value indicating whether encryption is enabled for virtual machines in this cloud.
func (o HyperVReplicaAzurePolicyDetailsResponseOutput) Encryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzurePolicyDetailsResponse) *string { return v.Encryption }).(pulumi.StringPtrOutput)
}

// Gets the class type. Overridden in derived classes.
func (o HyperVReplicaAzurePolicyDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v HyperVReplicaAzurePolicyDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The scheduled start time for the initial replication. If this parameter is Null, the initial replication starts immediately.
func (o HyperVReplicaAzurePolicyDetailsResponseOutput) OnlineReplicationStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzurePolicyDetailsResponse) *string { return v.OnlineReplicationStartTime }).(pulumi.StringPtrOutput)
}

// The duration (in hours) to which point the recovery history needs to be maintained.
func (o HyperVReplicaAzurePolicyDetailsResponseOutput) RecoveryPointHistoryDurationInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzurePolicyDetailsResponse) *int { return v.RecoveryPointHistoryDurationInHours }).(pulumi.IntPtrOutput)
}

// The replication interval.
func (o HyperVReplicaAzurePolicyDetailsResponseOutput) ReplicationInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzurePolicyDetailsResponse) *int { return v.ReplicationInterval }).(pulumi.IntPtrOutput)
}

// Hyper-V Replica Azure specific input for creating a protection profile.
type HyperVReplicaAzurePolicyInput struct {
	// The interval (in hours) at which Hyper-V Replica should create an application consistent snapshot within the VM.
	ApplicationConsistentSnapshotFrequencyInHours *int `pulumi:"applicationConsistentSnapshotFrequencyInHours"`
	// The class type.
	InstanceType *string `pulumi:"instanceType"`
	// The scheduled start time for the initial replication. If this parameter is Null, the initial replication starts immediately.
	OnlineReplicationStartTime *string `pulumi:"onlineReplicationStartTime"`
	// The duration (in hours) to which point the recovery history needs to be maintained.
	RecoveryPointHistoryDuration *int `pulumi:"recoveryPointHistoryDuration"`
	// The replication interval.
	ReplicationInterval *int `pulumi:"replicationInterval"`
	// The list of storage accounts to which the VMs in the primary cloud can replicate to.
	StorageAccounts []string `pulumi:"storageAccounts"`
}

// HyperVReplicaAzurePolicyInputInput is an input type that accepts HyperVReplicaAzurePolicyInputArgs and HyperVReplicaAzurePolicyInputOutput values.
// You can construct a concrete instance of `HyperVReplicaAzurePolicyInputInput` via:
//
//          HyperVReplicaAzurePolicyInputArgs{...}
type HyperVReplicaAzurePolicyInputInput interface {
	pulumi.Input

	ToHyperVReplicaAzurePolicyInputOutput() HyperVReplicaAzurePolicyInputOutput
	ToHyperVReplicaAzurePolicyInputOutputWithContext(context.Context) HyperVReplicaAzurePolicyInputOutput
}

// Hyper-V Replica Azure specific input for creating a protection profile.
type HyperVReplicaAzurePolicyInputArgs struct {
	// The interval (in hours) at which Hyper-V Replica should create an application consistent snapshot within the VM.
	ApplicationConsistentSnapshotFrequencyInHours pulumi.IntPtrInput `pulumi:"applicationConsistentSnapshotFrequencyInHours"`
	// The class type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// The scheduled start time for the initial replication. If this parameter is Null, the initial replication starts immediately.
	OnlineReplicationStartTime pulumi.StringPtrInput `pulumi:"onlineReplicationStartTime"`
	// The duration (in hours) to which point the recovery history needs to be maintained.
	RecoveryPointHistoryDuration pulumi.IntPtrInput `pulumi:"recoveryPointHistoryDuration"`
	// The replication interval.
	ReplicationInterval pulumi.IntPtrInput `pulumi:"replicationInterval"`
	// The list of storage accounts to which the VMs in the primary cloud can replicate to.
	StorageAccounts pulumi.StringArrayInput `pulumi:"storageAccounts"`
}

func (HyperVReplicaAzurePolicyInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVReplicaAzurePolicyInput)(nil)).Elem()
}

func (i HyperVReplicaAzurePolicyInputArgs) ToHyperVReplicaAzurePolicyInputOutput() HyperVReplicaAzurePolicyInputOutput {
	return i.ToHyperVReplicaAzurePolicyInputOutputWithContext(context.Background())
}

func (i HyperVReplicaAzurePolicyInputArgs) ToHyperVReplicaAzurePolicyInputOutputWithContext(ctx context.Context) HyperVReplicaAzurePolicyInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HyperVReplicaAzurePolicyInputOutput)
}

// Hyper V Replica Azure provider specific settings.
type HyperVReplicaAzureReplicationDetailsResponse struct {
	// Azure VM Disk details.
	AzureVmDiskDetails []AzureVmDiskDetailsResponse `pulumi:"azureVmDiskDetails"`
	// The selected option to enable RDP\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum.
	EnableRdpOnTargetOption *string `pulumi:"enableRdpOnTargetOption"`
	// The encryption info.
	Encryption *string `pulumi:"encryption"`
	// Initial replication details.
	InitialReplicationDetails *InitialReplicationDetailsResponse `pulumi:"initialReplicationDetails"`
	// Gets the Instance type.
	InstanceType string `pulumi:"instanceType"`
	// The Last replication time.
	LastReplicatedTime *string `pulumi:"lastReplicatedTime"`
	// The last RPO calculated time.
	LastRpoCalculatedTime *string `pulumi:"lastRpoCalculatedTime"`
	// License Type of the VM to be used.
	LicenseType *string `pulumi:"licenseType"`
	// The operating system info.
	OSDetails *OSDetailsResponse `pulumi:"oSDetails"`
	// The recovery availability set Id.
	RecoveryAvailabilitySetId *string `pulumi:"recoveryAvailabilitySetId"`
	// The ARM id of the log storage account used for replication. This will be set to null if no log storage account was provided during enable protection.
	RecoveryAzureLogStorageAccountId *string `pulumi:"recoveryAzureLogStorageAccountId"`
	// The target resource group Id.
	RecoveryAzureResourceGroupId *string `pulumi:"recoveryAzureResourceGroupId"`
	// The recovery Azure storage account.
	RecoveryAzureStorageAccount *string `pulumi:"recoveryAzureStorageAccount"`
	// The Recovery Azure VM size.
	RecoveryAzureVMSize *string `pulumi:"recoveryAzureVMSize"`
	// Recovery Azure given name.
	RecoveryAzureVmName *string `pulumi:"recoveryAzureVmName"`
	// Last RPO value.
	RpoInSeconds *int `pulumi:"rpoInSeconds"`
	// The selected recovery azure network Id.
	SelectedRecoveryAzureNetworkId *string `pulumi:"selectedRecoveryAzureNetworkId"`
	// The selected source nic Id which will be used as the primary nic during failover.
	SelectedSourceNicId *string `pulumi:"selectedSourceNicId"`
	// The CPU count of the VM on the primary side.
	SourceVmCpuCount *int `pulumi:"sourceVmCpuCount"`
	// The RAM size of the VM on the primary side.
	SourceVmRamSizeInMB *int `pulumi:"sourceVmRamSizeInMB"`
	// The target availability zone.
	TargetAvailabilityZone *string `pulumi:"targetAvailabilityZone"`
	// The target proximity placement group Id.
	TargetProximityPlacementGroupId *string `pulumi:"targetProximityPlacementGroupId"`
	// A value indicating whether managed disks should be used during failover.
	UseManagedDisks *string `pulumi:"useManagedDisks"`
	// The virtual machine Id.
	VmId *string `pulumi:"vmId"`
	// The PE Network details.
	VmNics []VMNicDetailsResponse `pulumi:"vmNics"`
	// The protection state for the vm.
	VmProtectionState *string `pulumi:"vmProtectionState"`
	// The protection state description for the vm.
	VmProtectionStateDescription *string `pulumi:"vmProtectionStateDescription"`
}

// Hyper V Replica Azure provider specific settings.
type HyperVReplicaAzureReplicationDetailsResponseOutput struct{ *pulumi.OutputState }

func (HyperVReplicaAzureReplicationDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVReplicaAzureReplicationDetailsResponse)(nil)).Elem()
}

func (o HyperVReplicaAzureReplicationDetailsResponseOutput) ToHyperVReplicaAzureReplicationDetailsResponseOutput() HyperVReplicaAzureReplicationDetailsResponseOutput {
	return o
}

func (o HyperVReplicaAzureReplicationDetailsResponseOutput) ToHyperVReplicaAzureReplicationDetailsResponseOutputWithContext(ctx context.Context) HyperVReplicaAzureReplicationDetailsResponseOutput {
	return o
}

// Azure VM Disk details.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) AzureVmDiskDetails() AzureVmDiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) []AzureVmDiskDetailsResponse {
		return v.AzureVmDiskDetails
	}).(AzureVmDiskDetailsResponseArrayOutput)
}

// The selected option to enable RDP\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) EnableRdpOnTargetOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.EnableRdpOnTargetOption }).(pulumi.StringPtrOutput)
}

// The encryption info.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) Encryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.Encryption }).(pulumi.StringPtrOutput)
}

// Initial replication details.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) InitialReplicationDetails() InitialReplicationDetailsResponsePtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *InitialReplicationDetailsResponse {
		return v.InitialReplicationDetails
	}).(InitialReplicationDetailsResponsePtrOutput)
}

// Gets the Instance type.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The Last replication time.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) LastReplicatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.LastReplicatedTime }).(pulumi.StringPtrOutput)
}

// The last RPO calculated time.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) LastRpoCalculatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.LastRpoCalculatedTime }).(pulumi.StringPtrOutput)
}

// License Type of the VM to be used.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) LicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.LicenseType }).(pulumi.StringPtrOutput)
}

// The operating system info.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) OSDetails() OSDetailsResponsePtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *OSDetailsResponse { return v.OSDetails }).(OSDetailsResponsePtrOutput)
}

// The recovery availability set Id.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) RecoveryAvailabilitySetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.RecoveryAvailabilitySetId }).(pulumi.StringPtrOutput)
}

// The ARM id of the log storage account used for replication. This will be set to null if no log storage account was provided during enable protection.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) RecoveryAzureLogStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string {
		return v.RecoveryAzureLogStorageAccountId
	}).(pulumi.StringPtrOutput)
}

// The target resource group Id.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) RecoveryAzureResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.RecoveryAzureResourceGroupId }).(pulumi.StringPtrOutput)
}

// The recovery Azure storage account.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) RecoveryAzureStorageAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.RecoveryAzureStorageAccount }).(pulumi.StringPtrOutput)
}

// The Recovery Azure VM size.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) RecoveryAzureVMSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.RecoveryAzureVMSize }).(pulumi.StringPtrOutput)
}

// Recovery Azure given name.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) RecoveryAzureVmName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.RecoveryAzureVmName }).(pulumi.StringPtrOutput)
}

// Last RPO value.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) RpoInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *int { return v.RpoInSeconds }).(pulumi.IntPtrOutput)
}

// The selected recovery azure network Id.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) SelectedRecoveryAzureNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.SelectedRecoveryAzureNetworkId }).(pulumi.StringPtrOutput)
}

// The selected source nic Id which will be used as the primary nic during failover.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) SelectedSourceNicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.SelectedSourceNicId }).(pulumi.StringPtrOutput)
}

// The CPU count of the VM on the primary side.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) SourceVmCpuCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *int { return v.SourceVmCpuCount }).(pulumi.IntPtrOutput)
}

// The RAM size of the VM on the primary side.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) SourceVmRamSizeInMB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *int { return v.SourceVmRamSizeInMB }).(pulumi.IntPtrOutput)
}

// The target availability zone.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) TargetAvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.TargetAvailabilityZone }).(pulumi.StringPtrOutput)
}

// The target proximity placement group Id.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) TargetProximityPlacementGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.TargetProximityPlacementGroupId }).(pulumi.StringPtrOutput)
}

// A value indicating whether managed disks should be used during failover.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) UseManagedDisks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.UseManagedDisks }).(pulumi.StringPtrOutput)
}

// The virtual machine Id.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) VmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.VmId }).(pulumi.StringPtrOutput)
}

// The PE Network details.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) VmNics() VMNicDetailsResponseArrayOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) []VMNicDetailsResponse { return v.VmNics }).(VMNicDetailsResponseArrayOutput)
}

// The protection state for the vm.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) VmProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.VmProtectionState }).(pulumi.StringPtrOutput)
}

// The protection state description for the vm.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) VmProtectionStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.VmProtectionStateDescription }).(pulumi.StringPtrOutput)
}

// Base class for HyperVReplica policy details.
type HyperVReplicaBasePolicyDetailsResponse struct {
	// A value indicating the authentication type.
	AllowedAuthenticationType *int `pulumi:"allowedAuthenticationType"`
	// A value indicating the application consistent frequency.
	ApplicationConsistentSnapshotFrequencyInHours *int `pulumi:"applicationConsistentSnapshotFrequencyInHours"`
	// A value indicating whether compression has to be enabled.
	Compression *string `pulumi:"compression"`
	// A value indicating whether IR is online.
	InitialReplicationMethod *string `pulumi:"initialReplicationMethod"`
	// Gets the class type. Overridden in derived classes.
	InstanceType string `pulumi:"instanceType"`
	// A value indicating the offline IR export path.
	OfflineReplicationExportPath *string `pulumi:"offlineReplicationExportPath"`
	// A value indicating the offline IR import path.
	OfflineReplicationImportPath *string `pulumi:"offlineReplicationImportPath"`
	// A value indicating the online IR start time.
	OnlineReplicationStartTime *string `pulumi:"onlineReplicationStartTime"`
	// A value indicating the number of recovery points.
	RecoveryPoints *int `pulumi:"recoveryPoints"`
	// A value indicating whether the VM has to be auto deleted. Supported Values: String.Empty, None, OnRecoveryCloud
	ReplicaDeletionOption *string `pulumi:"replicaDeletionOption"`
	// A value indicating the recovery HTTPS port.
	ReplicationPort *int `pulumi:"replicationPort"`
}

// Base class for HyperVReplica policy details.
type HyperVReplicaBasePolicyDetailsResponseOutput struct{ *pulumi.OutputState }

func (HyperVReplicaBasePolicyDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVReplicaBasePolicyDetailsResponse)(nil)).Elem()
}

func (o HyperVReplicaBasePolicyDetailsResponseOutput) ToHyperVReplicaBasePolicyDetailsResponseOutput() HyperVReplicaBasePolicyDetailsResponseOutput {
	return o
}

func (o HyperVReplicaBasePolicyDetailsResponseOutput) ToHyperVReplicaBasePolicyDetailsResponseOutputWithContext(ctx context.Context) HyperVReplicaBasePolicyDetailsResponseOutput {
	return o
}

// A value indicating the authentication type.
func (o HyperVReplicaBasePolicyDetailsResponseOutput) AllowedAuthenticationType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBasePolicyDetailsResponse) *int { return v.AllowedAuthenticationType }).(pulumi.IntPtrOutput)
}

// A value indicating the application consistent frequency.
func (o HyperVReplicaBasePolicyDetailsResponseOutput) ApplicationConsistentSnapshotFrequencyInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBasePolicyDetailsResponse) *int {
		return v.ApplicationConsistentSnapshotFrequencyInHours
	}).(pulumi.IntPtrOutput)
}

// A value indicating whether compression has to be enabled.
func (o HyperVReplicaBasePolicyDetailsResponseOutput) Compression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBasePolicyDetailsResponse) *string { return v.Compression }).(pulumi.StringPtrOutput)
}

// A value indicating whether IR is online.
func (o HyperVReplicaBasePolicyDetailsResponseOutput) InitialReplicationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBasePolicyDetailsResponse) *string { return v.InitialReplicationMethod }).(pulumi.StringPtrOutput)
}

// Gets the class type. Overridden in derived classes.
func (o HyperVReplicaBasePolicyDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v HyperVReplicaBasePolicyDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// A value indicating the offline IR export path.
func (o HyperVReplicaBasePolicyDetailsResponseOutput) OfflineReplicationExportPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBasePolicyDetailsResponse) *string { return v.OfflineReplicationExportPath }).(pulumi.StringPtrOutput)
}

// A value indicating the offline IR import path.
func (o HyperVReplicaBasePolicyDetailsResponseOutput) OfflineReplicationImportPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBasePolicyDetailsResponse) *string { return v.OfflineReplicationImportPath }).(pulumi.StringPtrOutput)
}

// A value indicating the online IR start time.
func (o HyperVReplicaBasePolicyDetailsResponseOutput) OnlineReplicationStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBasePolicyDetailsResponse) *string { return v.OnlineReplicationStartTime }).(pulumi.StringPtrOutput)
}

// A value indicating the number of recovery points.
func (o HyperVReplicaBasePolicyDetailsResponseOutput) RecoveryPoints() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBasePolicyDetailsResponse) *int { return v.RecoveryPoints }).(pulumi.IntPtrOutput)
}

// A value indicating whether the VM has to be auto deleted. Supported Values: String.Empty, None, OnRecoveryCloud
func (o HyperVReplicaBasePolicyDetailsResponseOutput) ReplicaDeletionOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBasePolicyDetailsResponse) *string { return v.ReplicaDeletionOption }).(pulumi.StringPtrOutput)
}

// A value indicating the recovery HTTPS port.
func (o HyperVReplicaBasePolicyDetailsResponseOutput) ReplicationPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBasePolicyDetailsResponse) *int { return v.ReplicationPort }).(pulumi.IntPtrOutput)
}

// Hyper V replica provider specific settings base class.
type HyperVReplicaBaseReplicationDetailsResponse struct {
	// Initial replication details.
	InitialReplicationDetails *InitialReplicationDetailsResponse `pulumi:"initialReplicationDetails"`
	// Gets the Instance type.
	InstanceType string `pulumi:"instanceType"`
	// The Last replication time.
	LastReplicatedTime *string `pulumi:"lastReplicatedTime"`
	// VM disk details.
	VMDiskDetails []DiskDetailsResponse `pulumi:"vMDiskDetails"`
	// The virtual machine Id.
	VmId *string `pulumi:"vmId"`
	// The PE Network details.
	VmNics []VMNicDetailsResponse `pulumi:"vmNics"`
	// The protection state for the vm.
	VmProtectionState *string `pulumi:"vmProtectionState"`
	// The protection state description for the vm.
	VmProtectionStateDescription *string `pulumi:"vmProtectionStateDescription"`
}

// Hyper V replica provider specific settings base class.
type HyperVReplicaBaseReplicationDetailsResponseOutput struct{ *pulumi.OutputState }

func (HyperVReplicaBaseReplicationDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVReplicaBaseReplicationDetailsResponse)(nil)).Elem()
}

func (o HyperVReplicaBaseReplicationDetailsResponseOutput) ToHyperVReplicaBaseReplicationDetailsResponseOutput() HyperVReplicaBaseReplicationDetailsResponseOutput {
	return o
}

func (o HyperVReplicaBaseReplicationDetailsResponseOutput) ToHyperVReplicaBaseReplicationDetailsResponseOutputWithContext(ctx context.Context) HyperVReplicaBaseReplicationDetailsResponseOutput {
	return o
}

// Initial replication details.
func (o HyperVReplicaBaseReplicationDetailsResponseOutput) InitialReplicationDetails() InitialReplicationDetailsResponsePtrOutput {
	return o.ApplyT(func(v HyperVReplicaBaseReplicationDetailsResponse) *InitialReplicationDetailsResponse {
		return v.InitialReplicationDetails
	}).(InitialReplicationDetailsResponsePtrOutput)
}

// Gets the Instance type.
func (o HyperVReplicaBaseReplicationDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v HyperVReplicaBaseReplicationDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The Last replication time.
func (o HyperVReplicaBaseReplicationDetailsResponseOutput) LastReplicatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBaseReplicationDetailsResponse) *string { return v.LastReplicatedTime }).(pulumi.StringPtrOutput)
}

// VM disk details.
func (o HyperVReplicaBaseReplicationDetailsResponseOutput) VMDiskDetails() DiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v HyperVReplicaBaseReplicationDetailsResponse) []DiskDetailsResponse { return v.VMDiskDetails }).(DiskDetailsResponseArrayOutput)
}

// The virtual machine Id.
func (o HyperVReplicaBaseReplicationDetailsResponseOutput) VmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBaseReplicationDetailsResponse) *string { return v.VmId }).(pulumi.StringPtrOutput)
}

// The PE Network details.
func (o HyperVReplicaBaseReplicationDetailsResponseOutput) VmNics() VMNicDetailsResponseArrayOutput {
	return o.ApplyT(func(v HyperVReplicaBaseReplicationDetailsResponse) []VMNicDetailsResponse { return v.VmNics }).(VMNicDetailsResponseArrayOutput)
}

// The protection state for the vm.
func (o HyperVReplicaBaseReplicationDetailsResponseOutput) VmProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBaseReplicationDetailsResponse) *string { return v.VmProtectionState }).(pulumi.StringPtrOutput)
}

// The protection state description for the vm.
func (o HyperVReplicaBaseReplicationDetailsResponseOutput) VmProtectionStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBaseReplicationDetailsResponse) *string { return v.VmProtectionStateDescription }).(pulumi.StringPtrOutput)
}

// Hyper-V Replica Blue specific protection profile details.
type HyperVReplicaBluePolicyDetailsResponse struct {
	// A value indicating the authentication type.
	AllowedAuthenticationType *int `pulumi:"allowedAuthenticationType"`
	// A value indicating the application consistent frequency.
	ApplicationConsistentSnapshotFrequencyInHours *int `pulumi:"applicationConsistentSnapshotFrequencyInHours"`
	// A value indicating whether compression has to be enabled.
	Compression *string `pulumi:"compression"`
	// A value indicating whether IR is online.
	InitialReplicationMethod *string `pulumi:"initialReplicationMethod"`
	// Gets the class type. Overridden in derived classes.
	InstanceType string `pulumi:"instanceType"`
	// A value indicating the offline IR export path.
	OfflineReplicationExportPath *string `pulumi:"offlineReplicationExportPath"`
	// A value indicating the offline IR import path.
	OfflineReplicationImportPath *string `pulumi:"offlineReplicationImportPath"`
	// A value indicating the online IR start time.
	OnlineReplicationStartTime *string `pulumi:"onlineReplicationStartTime"`
	// A value indicating the number of recovery points.
	RecoveryPoints *int `pulumi:"recoveryPoints"`
	// A value indicating whether the VM has to be auto deleted. Supported Values: String.Empty, None, OnRecoveryCloud
	ReplicaDeletionOption *string `pulumi:"replicaDeletionOption"`
	// A value indicating the replication interval.
	ReplicationFrequencyInSeconds *int `pulumi:"replicationFrequencyInSeconds"`
	// A value indicating the recovery HTTPS port.
	ReplicationPort *int `pulumi:"replicationPort"`
}

// Hyper-V Replica Blue specific protection profile details.
type HyperVReplicaBluePolicyDetailsResponseOutput struct{ *pulumi.OutputState }

func (HyperVReplicaBluePolicyDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVReplicaBluePolicyDetailsResponse)(nil)).Elem()
}

func (o HyperVReplicaBluePolicyDetailsResponseOutput) ToHyperVReplicaBluePolicyDetailsResponseOutput() HyperVReplicaBluePolicyDetailsResponseOutput {
	return o
}

func (o HyperVReplicaBluePolicyDetailsResponseOutput) ToHyperVReplicaBluePolicyDetailsResponseOutputWithContext(ctx context.Context) HyperVReplicaBluePolicyDetailsResponseOutput {
	return o
}

// A value indicating the authentication type.
func (o HyperVReplicaBluePolicyDetailsResponseOutput) AllowedAuthenticationType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyDetailsResponse) *int { return v.AllowedAuthenticationType }).(pulumi.IntPtrOutput)
}

// A value indicating the application consistent frequency.
func (o HyperVReplicaBluePolicyDetailsResponseOutput) ApplicationConsistentSnapshotFrequencyInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyDetailsResponse) *int {
		return v.ApplicationConsistentSnapshotFrequencyInHours
	}).(pulumi.IntPtrOutput)
}

// A value indicating whether compression has to be enabled.
func (o HyperVReplicaBluePolicyDetailsResponseOutput) Compression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyDetailsResponse) *string { return v.Compression }).(pulumi.StringPtrOutput)
}

// A value indicating whether IR is online.
func (o HyperVReplicaBluePolicyDetailsResponseOutput) InitialReplicationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyDetailsResponse) *string { return v.InitialReplicationMethod }).(pulumi.StringPtrOutput)
}

// Gets the class type. Overridden in derived classes.
func (o HyperVReplicaBluePolicyDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// A value indicating the offline IR export path.
func (o HyperVReplicaBluePolicyDetailsResponseOutput) OfflineReplicationExportPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyDetailsResponse) *string { return v.OfflineReplicationExportPath }).(pulumi.StringPtrOutput)
}

// A value indicating the offline IR import path.
func (o HyperVReplicaBluePolicyDetailsResponseOutput) OfflineReplicationImportPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyDetailsResponse) *string { return v.OfflineReplicationImportPath }).(pulumi.StringPtrOutput)
}

// A value indicating the online IR start time.
func (o HyperVReplicaBluePolicyDetailsResponseOutput) OnlineReplicationStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyDetailsResponse) *string { return v.OnlineReplicationStartTime }).(pulumi.StringPtrOutput)
}

// A value indicating the number of recovery points.
func (o HyperVReplicaBluePolicyDetailsResponseOutput) RecoveryPoints() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyDetailsResponse) *int { return v.RecoveryPoints }).(pulumi.IntPtrOutput)
}

// A value indicating whether the VM has to be auto deleted. Supported Values: String.Empty, None, OnRecoveryCloud
func (o HyperVReplicaBluePolicyDetailsResponseOutput) ReplicaDeletionOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyDetailsResponse) *string { return v.ReplicaDeletionOption }).(pulumi.StringPtrOutput)
}

// A value indicating the replication interval.
func (o HyperVReplicaBluePolicyDetailsResponseOutput) ReplicationFrequencyInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyDetailsResponse) *int { return v.ReplicationFrequencyInSeconds }).(pulumi.IntPtrOutput)
}

// A value indicating the recovery HTTPS port.
func (o HyperVReplicaBluePolicyDetailsResponseOutput) ReplicationPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyDetailsResponse) *int { return v.ReplicationPort }).(pulumi.IntPtrOutput)
}

// HyperV Replica Blue policy input.
type HyperVReplicaBluePolicyInput struct {
	// A value indicating the authentication type.
	AllowedAuthenticationType *int `pulumi:"allowedAuthenticationType"`
	// A value indicating the application consistent frequency.
	ApplicationConsistentSnapshotFrequencyInHours *int `pulumi:"applicationConsistentSnapshotFrequencyInHours"`
	// A value indicating whether compression has to be enabled.
	Compression *string `pulumi:"compression"`
	// A value indicating whether IR is online.
	InitialReplicationMethod *string `pulumi:"initialReplicationMethod"`
	// The class type.
	InstanceType *string `pulumi:"instanceType"`
	// A value indicating the offline IR export path.
	OfflineReplicationExportPath *string `pulumi:"offlineReplicationExportPath"`
	// A value indicating the offline IR import path.
	OfflineReplicationImportPath *string `pulumi:"offlineReplicationImportPath"`
	// A value indicating the online IR start time.
	OnlineReplicationStartTime *string `pulumi:"onlineReplicationStartTime"`
	// A value indicating the number of recovery points.
	RecoveryPoints *int `pulumi:"recoveryPoints"`
	// A value indicating whether the VM has to be auto deleted.
	ReplicaDeletion *string `pulumi:"replicaDeletion"`
	// A value indicating the replication interval.
	ReplicationFrequencyInSeconds *int `pulumi:"replicationFrequencyInSeconds"`
	// A value indicating the recovery HTTPS port.
	ReplicationPort *int `pulumi:"replicationPort"`
}

// HyperVReplicaBluePolicyInputInput is an input type that accepts HyperVReplicaBluePolicyInputArgs and HyperVReplicaBluePolicyInputOutput values.
// You can construct a concrete instance of `HyperVReplicaBluePolicyInputInput` via:
//
//          HyperVReplicaBluePolicyInputArgs{...}
type HyperVReplicaBluePolicyInputInput interface {
	pulumi.Input

	ToHyperVReplicaBluePolicyInputOutput() HyperVReplicaBluePolicyInputOutput
	ToHyperVReplicaBluePolicyInputOutputWithContext(context.Context) HyperVReplicaBluePolicyInputOutput
}

// HyperV Replica Blue policy input.
type HyperVReplicaBluePolicyInputArgs struct {
	// A value indicating the authentication type.
	AllowedAuthenticationType pulumi.IntPtrInput `pulumi:"allowedAuthenticationType"`
	// A value indicating the application consistent frequency.
	ApplicationConsistentSnapshotFrequencyInHours pulumi.IntPtrInput `pulumi:"applicationConsistentSnapshotFrequencyInHours"`
	// A value indicating whether compression has to be enabled.
	Compression pulumi.StringPtrInput `pulumi:"compression"`
	// A value indicating whether IR is online.
	InitialReplicationMethod pulumi.StringPtrInput `pulumi:"initialReplicationMethod"`
	// The class type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// A value indicating the offline IR export path.
	OfflineReplicationExportPath pulumi.StringPtrInput `pulumi:"offlineReplicationExportPath"`
	// A value indicating the offline IR import path.
	OfflineReplicationImportPath pulumi.StringPtrInput `pulumi:"offlineReplicationImportPath"`
	// A value indicating the online IR start time.
	OnlineReplicationStartTime pulumi.StringPtrInput `pulumi:"onlineReplicationStartTime"`
	// A value indicating the number of recovery points.
	RecoveryPoints pulumi.IntPtrInput `pulumi:"recoveryPoints"`
	// A value indicating whether the VM has to be auto deleted.
	ReplicaDeletion pulumi.StringPtrInput `pulumi:"replicaDeletion"`
	// A value indicating the replication interval.
	ReplicationFrequencyInSeconds pulumi.IntPtrInput `pulumi:"replicationFrequencyInSeconds"`
	// A value indicating the recovery HTTPS port.
	ReplicationPort pulumi.IntPtrInput `pulumi:"replicationPort"`
}

func (HyperVReplicaBluePolicyInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVReplicaBluePolicyInput)(nil)).Elem()
}

func (i HyperVReplicaBluePolicyInputArgs) ToHyperVReplicaBluePolicyInputOutput() HyperVReplicaBluePolicyInputOutput {
	return i.ToHyperVReplicaBluePolicyInputOutputWithContext(context.Background())
}

func (i HyperVReplicaBluePolicyInputArgs) ToHyperVReplicaBluePolicyInputOutputWithContext(ctx context.Context) HyperVReplicaBluePolicyInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HyperVReplicaBluePolicyInputOutput)
}

// HyperV replica 2012 R2 (Blue) replication details.
type HyperVReplicaBlueReplicationDetailsResponse struct {
	// Initial replication details.
	InitialReplicationDetails *InitialReplicationDetailsResponse `pulumi:"initialReplicationDetails"`
	// Gets the Instance type.
	InstanceType string `pulumi:"instanceType"`
	// The Last replication time.
	LastReplicatedTime *string `pulumi:"lastReplicatedTime"`
	// VM disk details.
	VMDiskDetails []DiskDetailsResponse `pulumi:"vMDiskDetails"`
	// The virtual machine Id.
	VmId *string `pulumi:"vmId"`
	// The PE Network details.
	VmNics []VMNicDetailsResponse `pulumi:"vmNics"`
	// The protection state for the vm.
	VmProtectionState *string `pulumi:"vmProtectionState"`
	// The protection state description for the vm.
	VmProtectionStateDescription *string `pulumi:"vmProtectionStateDescription"`
}

// HyperV replica 2012 R2 (Blue) replication details.
type HyperVReplicaBlueReplicationDetailsResponseOutput struct{ *pulumi.OutputState }

func (HyperVReplicaBlueReplicationDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVReplicaBlueReplicationDetailsResponse)(nil)).Elem()
}

func (o HyperVReplicaBlueReplicationDetailsResponseOutput) ToHyperVReplicaBlueReplicationDetailsResponseOutput() HyperVReplicaBlueReplicationDetailsResponseOutput {
	return o
}

func (o HyperVReplicaBlueReplicationDetailsResponseOutput) ToHyperVReplicaBlueReplicationDetailsResponseOutputWithContext(ctx context.Context) HyperVReplicaBlueReplicationDetailsResponseOutput {
	return o
}

// Initial replication details.
func (o HyperVReplicaBlueReplicationDetailsResponseOutput) InitialReplicationDetails() InitialReplicationDetailsResponsePtrOutput {
	return o.ApplyT(func(v HyperVReplicaBlueReplicationDetailsResponse) *InitialReplicationDetailsResponse {
		return v.InitialReplicationDetails
	}).(InitialReplicationDetailsResponsePtrOutput)
}

// Gets the Instance type.
func (o HyperVReplicaBlueReplicationDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v HyperVReplicaBlueReplicationDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The Last replication time.
func (o HyperVReplicaBlueReplicationDetailsResponseOutput) LastReplicatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBlueReplicationDetailsResponse) *string { return v.LastReplicatedTime }).(pulumi.StringPtrOutput)
}

// VM disk details.
func (o HyperVReplicaBlueReplicationDetailsResponseOutput) VMDiskDetails() DiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v HyperVReplicaBlueReplicationDetailsResponse) []DiskDetailsResponse { return v.VMDiskDetails }).(DiskDetailsResponseArrayOutput)
}

// The virtual machine Id.
func (o HyperVReplicaBlueReplicationDetailsResponseOutput) VmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBlueReplicationDetailsResponse) *string { return v.VmId }).(pulumi.StringPtrOutput)
}

// The PE Network details.
func (o HyperVReplicaBlueReplicationDetailsResponseOutput) VmNics() VMNicDetailsResponseArrayOutput {
	return o.ApplyT(func(v HyperVReplicaBlueReplicationDetailsResponse) []VMNicDetailsResponse { return v.VmNics }).(VMNicDetailsResponseArrayOutput)
}

// The protection state for the vm.
func (o HyperVReplicaBlueReplicationDetailsResponseOutput) VmProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBlueReplicationDetailsResponse) *string { return v.VmProtectionState }).(pulumi.StringPtrOutput)
}

// The protection state description for the vm.
func (o HyperVReplicaBlueReplicationDetailsResponseOutput) VmProtectionStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBlueReplicationDetailsResponse) *string { return v.VmProtectionStateDescription }).(pulumi.StringPtrOutput)
}

// Hyper-V Replica Blue specific protection profile details.
type HyperVReplicaPolicyDetailsResponse struct {
	// A value indicating the authentication type.
	AllowedAuthenticationType *int `pulumi:"allowedAuthenticationType"`
	// A value indicating the application consistent frequency.
	ApplicationConsistentSnapshotFrequencyInHours *int `pulumi:"applicationConsistentSnapshotFrequencyInHours"`
	// A value indicating whether compression has to be enabled.
	Compression *string `pulumi:"compression"`
	// A value indicating whether IR is online.
	InitialReplicationMethod *string `pulumi:"initialReplicationMethod"`
	// Gets the class type. Overridden in derived classes.
	InstanceType string `pulumi:"instanceType"`
	// A value indicating the offline IR export path.
	OfflineReplicationExportPath *string `pulumi:"offlineReplicationExportPath"`
	// A value indicating the offline IR import path.
	OfflineReplicationImportPath *string `pulumi:"offlineReplicationImportPath"`
	// A value indicating the online IR start time.
	OnlineReplicationStartTime *string `pulumi:"onlineReplicationStartTime"`
	// A value indicating the number of recovery points.
	RecoveryPoints *int `pulumi:"recoveryPoints"`
	// A value indicating whether the VM has to be auto deleted. Supported Values: String.Empty, None, OnRecoveryCloud
	ReplicaDeletionOption *string `pulumi:"replicaDeletionOption"`
	// A value indicating the recovery HTTPS port.
	ReplicationPort *int `pulumi:"replicationPort"`
}

// Hyper-V Replica Blue specific protection profile details.
type HyperVReplicaPolicyDetailsResponseOutput struct{ *pulumi.OutputState }

func (HyperVReplicaPolicyDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVReplicaPolicyDetailsResponse)(nil)).Elem()
}

func (o HyperVReplicaPolicyDetailsResponseOutput) ToHyperVReplicaPolicyDetailsResponseOutput() HyperVReplicaPolicyDetailsResponseOutput {
	return o
}

func (o HyperVReplicaPolicyDetailsResponseOutput) ToHyperVReplicaPolicyDetailsResponseOutputWithContext(ctx context.Context) HyperVReplicaPolicyDetailsResponseOutput {
	return o
}

// A value indicating the authentication type.
func (o HyperVReplicaPolicyDetailsResponseOutput) AllowedAuthenticationType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaPolicyDetailsResponse) *int { return v.AllowedAuthenticationType }).(pulumi.IntPtrOutput)
}

// A value indicating the application consistent frequency.
func (o HyperVReplicaPolicyDetailsResponseOutput) ApplicationConsistentSnapshotFrequencyInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaPolicyDetailsResponse) *int {
		return v.ApplicationConsistentSnapshotFrequencyInHours
	}).(pulumi.IntPtrOutput)
}

// A value indicating whether compression has to be enabled.
func (o HyperVReplicaPolicyDetailsResponseOutput) Compression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaPolicyDetailsResponse) *string { return v.Compression }).(pulumi.StringPtrOutput)
}

// A value indicating whether IR is online.
func (o HyperVReplicaPolicyDetailsResponseOutput) InitialReplicationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaPolicyDetailsResponse) *string { return v.InitialReplicationMethod }).(pulumi.StringPtrOutput)
}

// Gets the class type. Overridden in derived classes.
func (o HyperVReplicaPolicyDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v HyperVReplicaPolicyDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// A value indicating the offline IR export path.
func (o HyperVReplicaPolicyDetailsResponseOutput) OfflineReplicationExportPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaPolicyDetailsResponse) *string { return v.OfflineReplicationExportPath }).(pulumi.StringPtrOutput)
}

// A value indicating the offline IR import path.
func (o HyperVReplicaPolicyDetailsResponseOutput) OfflineReplicationImportPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaPolicyDetailsResponse) *string { return v.OfflineReplicationImportPath }).(pulumi.StringPtrOutput)
}

// A value indicating the online IR start time.
func (o HyperVReplicaPolicyDetailsResponseOutput) OnlineReplicationStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaPolicyDetailsResponse) *string { return v.OnlineReplicationStartTime }).(pulumi.StringPtrOutput)
}

// A value indicating the number of recovery points.
func (o HyperVReplicaPolicyDetailsResponseOutput) RecoveryPoints() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaPolicyDetailsResponse) *int { return v.RecoveryPoints }).(pulumi.IntPtrOutput)
}

// A value indicating whether the VM has to be auto deleted. Supported Values: String.Empty, None, OnRecoveryCloud
func (o HyperVReplicaPolicyDetailsResponseOutput) ReplicaDeletionOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaPolicyDetailsResponse) *string { return v.ReplicaDeletionOption }).(pulumi.StringPtrOutput)
}

// A value indicating the recovery HTTPS port.
func (o HyperVReplicaPolicyDetailsResponseOutput) ReplicationPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaPolicyDetailsResponse) *int { return v.ReplicationPort }).(pulumi.IntPtrOutput)
}

// Hyper-V Replica specific policy Input.
type HyperVReplicaPolicyInput struct {
	// A value indicating the authentication type.
	AllowedAuthenticationType *int `pulumi:"allowedAuthenticationType"`
	// A value indicating the application consistent frequency.
	ApplicationConsistentSnapshotFrequencyInHours *int `pulumi:"applicationConsistentSnapshotFrequencyInHours"`
	// A value indicating whether compression has to be enabled.
	Compression *string `pulumi:"compression"`
	// A value indicating whether IR is online.
	InitialReplicationMethod *string `pulumi:"initialReplicationMethod"`
	// The class type.
	InstanceType *string `pulumi:"instanceType"`
	// A value indicating the offline IR export path.
	OfflineReplicationExportPath *string `pulumi:"offlineReplicationExportPath"`
	// A value indicating the offline IR import path.
	OfflineReplicationImportPath *string `pulumi:"offlineReplicationImportPath"`
	// A value indicating the online IR start time.
	OnlineReplicationStartTime *string `pulumi:"onlineReplicationStartTime"`
	// A value indicating the number of recovery points.
	RecoveryPoints *int `pulumi:"recoveryPoints"`
	// A value indicating whether the VM has to be auto deleted.
	ReplicaDeletion *string `pulumi:"replicaDeletion"`
	// A value indicating the recovery HTTPS port.
	ReplicationPort *int `pulumi:"replicationPort"`
}

// HyperVReplicaPolicyInputInput is an input type that accepts HyperVReplicaPolicyInputArgs and HyperVReplicaPolicyInputOutput values.
// You can construct a concrete instance of `HyperVReplicaPolicyInputInput` via:
//
//          HyperVReplicaPolicyInputArgs{...}
type HyperVReplicaPolicyInputInput interface {
	pulumi.Input

	ToHyperVReplicaPolicyInputOutput() HyperVReplicaPolicyInputOutput
	ToHyperVReplicaPolicyInputOutputWithContext(context.Context) HyperVReplicaPolicyInputOutput
}

// Hyper-V Replica specific policy Input.
type HyperVReplicaPolicyInputArgs struct {
	// A value indicating the authentication type.
	AllowedAuthenticationType pulumi.IntPtrInput `pulumi:"allowedAuthenticationType"`
	// A value indicating the application consistent frequency.
	ApplicationConsistentSnapshotFrequencyInHours pulumi.IntPtrInput `pulumi:"applicationConsistentSnapshotFrequencyInHours"`
	// A value indicating whether compression has to be enabled.
	Compression pulumi.StringPtrInput `pulumi:"compression"`
	// A value indicating whether IR is online.
	InitialReplicationMethod pulumi.StringPtrInput `pulumi:"initialReplicationMethod"`
	// The class type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// A value indicating the offline IR export path.
	OfflineReplicationExportPath pulumi.StringPtrInput `pulumi:"offlineReplicationExportPath"`
	// A value indicating the offline IR import path.
	OfflineReplicationImportPath pulumi.StringPtrInput `pulumi:"offlineReplicationImportPath"`
	// A value indicating the online IR start time.
	OnlineReplicationStartTime pulumi.StringPtrInput `pulumi:"onlineReplicationStartTime"`
	// A value indicating the number of recovery points.
	RecoveryPoints pulumi.IntPtrInput `pulumi:"recoveryPoints"`
	// A value indicating whether the VM has to be auto deleted.
	ReplicaDeletion pulumi.StringPtrInput `pulumi:"replicaDeletion"`
	// A value indicating the recovery HTTPS port.
	ReplicationPort pulumi.IntPtrInput `pulumi:"replicationPort"`
}

func (HyperVReplicaPolicyInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVReplicaPolicyInput)(nil)).Elem()
}

func (i HyperVReplicaPolicyInputArgs) ToHyperVReplicaPolicyInputOutput() HyperVReplicaPolicyInputOutput {
	return i.ToHyperVReplicaPolicyInputOutputWithContext(context.Background())
}

func (i HyperVReplicaPolicyInputArgs) ToHyperVReplicaPolicyInputOutputWithContext(ctx context.Context) HyperVReplicaPolicyInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HyperVReplicaPolicyInputOutput)
}

// HyperV replica 2012 replication details.
type HyperVReplicaReplicationDetailsResponse struct {
	// Initial replication details.
	InitialReplicationDetails *InitialReplicationDetailsResponse `pulumi:"initialReplicationDetails"`
	// Gets the Instance type.
	InstanceType string `pulumi:"instanceType"`
	// The Last replication time.
	LastReplicatedTime *string `pulumi:"lastReplicatedTime"`
	// VM disk details.
	VMDiskDetails []DiskDetailsResponse `pulumi:"vMDiskDetails"`
	// The virtual machine Id.
	VmId *string `pulumi:"vmId"`
	// The PE Network details.
	VmNics []VMNicDetailsResponse `pulumi:"vmNics"`
	// The protection state for the vm.
	VmProtectionState *string `pulumi:"vmProtectionState"`
	// The protection state description for the vm.
	VmProtectionStateDescription *string `pulumi:"vmProtectionStateDescription"`
}

// HyperV replica 2012 replication details.
type HyperVReplicaReplicationDetailsResponseOutput struct{ *pulumi.OutputState }

func (HyperVReplicaReplicationDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVReplicaReplicationDetailsResponse)(nil)).Elem()
}

func (o HyperVReplicaReplicationDetailsResponseOutput) ToHyperVReplicaReplicationDetailsResponseOutput() HyperVReplicaReplicationDetailsResponseOutput {
	return o
}

func (o HyperVReplicaReplicationDetailsResponseOutput) ToHyperVReplicaReplicationDetailsResponseOutputWithContext(ctx context.Context) HyperVReplicaReplicationDetailsResponseOutput {
	return o
}

// Initial replication details.
func (o HyperVReplicaReplicationDetailsResponseOutput) InitialReplicationDetails() InitialReplicationDetailsResponsePtrOutput {
	return o.ApplyT(func(v HyperVReplicaReplicationDetailsResponse) *InitialReplicationDetailsResponse {
		return v.InitialReplicationDetails
	}).(InitialReplicationDetailsResponsePtrOutput)
}

// Gets the Instance type.
func (o HyperVReplicaReplicationDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v HyperVReplicaReplicationDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The Last replication time.
func (o HyperVReplicaReplicationDetailsResponseOutput) LastReplicatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaReplicationDetailsResponse) *string { return v.LastReplicatedTime }).(pulumi.StringPtrOutput)
}

// VM disk details.
func (o HyperVReplicaReplicationDetailsResponseOutput) VMDiskDetails() DiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v HyperVReplicaReplicationDetailsResponse) []DiskDetailsResponse { return v.VMDiskDetails }).(DiskDetailsResponseArrayOutput)
}

// The virtual machine Id.
func (o HyperVReplicaReplicationDetailsResponseOutput) VmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaReplicationDetailsResponse) *string { return v.VmId }).(pulumi.StringPtrOutput)
}

// The PE Network details.
func (o HyperVReplicaReplicationDetailsResponseOutput) VmNics() VMNicDetailsResponseArrayOutput {
	return o.ApplyT(func(v HyperVReplicaReplicationDetailsResponse) []VMNicDetailsResponse { return v.VmNics }).(VMNicDetailsResponseArrayOutput)
}

// The protection state for the vm.
func (o HyperVReplicaReplicationDetailsResponseOutput) VmProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaReplicationDetailsResponse) *string { return v.VmProtectionState }).(pulumi.StringPtrOutput)
}

// The protection state description for the vm.
func (o HyperVReplicaReplicationDetailsResponseOutput) VmProtectionStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaReplicationDetailsResponse) *string { return v.VmProtectionStateDescription }).(pulumi.StringPtrOutput)
}

// HyperVSite fabric specific details.
type HyperVSiteDetailsResponse struct {
	// Gets the class type. Overridden in derived classes.
	InstanceType string `pulumi:"instanceType"`
}

// HyperVSite fabric specific details.
type HyperVSiteDetailsResponseOutput struct{ *pulumi.OutputState }

func (HyperVSiteDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVSiteDetailsResponse)(nil)).Elem()
}

func (o HyperVSiteDetailsResponseOutput) ToHyperVSiteDetailsResponseOutput() HyperVSiteDetailsResponseOutput {
	return o
}

func (o HyperVSiteDetailsResponseOutput) ToHyperVSiteDetailsResponseOutputWithContext(ctx context.Context) HyperVSiteDetailsResponseOutput {
	return o
}

// Gets the class type. Overridden in derived classes.
func (o HyperVSiteDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v HyperVSiteDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// IP configuration details.
type IPConfigResponse struct {
	// The backend address pools associated with the IP configuration.
	LBBackendAddressPoolIds []string `pulumi:"lBBackendAddressPoolIds"`
	// The Id of the public IP address associated with the IP configuration.
	PublicIpAddressId *string `pulumi:"publicIpAddressId"`
	// The static IP address of the IP configuration.
	StaticIPAddress *string `pulumi:"staticIPAddress"`
}

// IP configuration details.
type IPConfigResponseOutput struct{ *pulumi.OutputState }

func (IPConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigResponse)(nil)).Elem()
}

func (o IPConfigResponseOutput) ToIPConfigResponseOutput() IPConfigResponseOutput {
	return o
}

func (o IPConfigResponseOutput) ToIPConfigResponseOutputWithContext(ctx context.Context) IPConfigResponseOutput {
	return o
}

// The backend address pools associated with the IP configuration.
func (o IPConfigResponseOutput) LBBackendAddressPoolIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IPConfigResponse) []string { return v.LBBackendAddressPoolIds }).(pulumi.StringArrayOutput)
}

// The Id of the public IP address associated with the IP configuration.
func (o IPConfigResponseOutput) PublicIpAddressId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigResponse) *string { return v.PublicIpAddressId }).(pulumi.StringPtrOutput)
}

// The static IP address of the IP configuration.
func (o IPConfigResponseOutput) StaticIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigResponse) *string { return v.StaticIPAddress }).(pulumi.StringPtrOutput)
}

type IPConfigResponseArrayOutput struct{ *pulumi.OutputState }

func (IPConfigResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPConfigResponse)(nil)).Elem()
}

func (o IPConfigResponseArrayOutput) ToIPConfigResponseArrayOutput() IPConfigResponseArrayOutput {
	return o
}

func (o IPConfigResponseArrayOutput) ToIPConfigResponseArrayOutputWithContext(ctx context.Context) IPConfigResponseArrayOutput {
	return o
}

func (o IPConfigResponseArrayOutput) Index(i pulumi.IntInput) IPConfigResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPConfigResponse {
		return vs[0].([]IPConfigResponse)[vs[1].(int)]
	}).(IPConfigResponseOutput)
}

// IaaS VM workload-specific container.
type IaaSVMContainer struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	ContainerType *string `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// Resource group name of Recovery Services Vault.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
	VirtualMachineId *string `pulumi:"virtualMachineId"`
	// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
	VirtualMachineVersion *string `pulumi:"virtualMachineVersion"`
}

// IaaSVMContainerInput is an input type that accepts IaaSVMContainerArgs and IaaSVMContainerOutput values.
// You can construct a concrete instance of `IaaSVMContainerInput` via:
//
//          IaaSVMContainerArgs{...}
type IaaSVMContainerInput interface {
	pulumi.Input

	ToIaaSVMContainerOutput() IaaSVMContainerOutput
	ToIaaSVMContainerOutputWithContext(context.Context) IaaSVMContainerOutput
}

// IaaS VM workload-specific container.
type IaaSVMContainerArgs struct {
	// Type of backup management for the container.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	ContainerType pulumi.StringPtrInput `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus pulumi.StringPtrInput `pulumi:"healthStatus"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus pulumi.StringPtrInput `pulumi:"registrationStatus"`
	// Resource group name of Recovery Services Vault.
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
	VirtualMachineId pulumi.StringPtrInput `pulumi:"virtualMachineId"`
	// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
	VirtualMachineVersion pulumi.StringPtrInput `pulumi:"virtualMachineVersion"`
}

func (IaaSVMContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IaaSVMContainer)(nil)).Elem()
}

func (i IaaSVMContainerArgs) ToIaaSVMContainerOutput() IaaSVMContainerOutput {
	return i.ToIaaSVMContainerOutputWithContext(context.Background())
}

func (i IaaSVMContainerArgs) ToIaaSVMContainerOutputWithContext(ctx context.Context) IaaSVMContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IaaSVMContainerOutput)
}

// IaaS VM workload-specific container.
type IaaSVMContainerResponse struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	ContainerType *string `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// Resource group name of Recovery Services Vault.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
	VirtualMachineId *string `pulumi:"virtualMachineId"`
	// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
	VirtualMachineVersion *string `pulumi:"virtualMachineVersion"`
}

// IaaS VM workload-specific container.
type IaaSVMContainerResponseOutput struct{ *pulumi.OutputState }

func (IaaSVMContainerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IaaSVMContainerResponse)(nil)).Elem()
}

func (o IaaSVMContainerResponseOutput) ToIaaSVMContainerResponseOutput() IaaSVMContainerResponseOutput {
	return o
}

func (o IaaSVMContainerResponseOutput) ToIaaSVMContainerResponseOutputWithContext(ctx context.Context) IaaSVMContainerResponseOutput {
	return o
}

// Type of backup management for the container.
func (o IaaSVMContainerResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IaaSVMContainerResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
func (o IaaSVMContainerResponseOutput) ContainerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IaaSVMContainerResponse) *string { return v.ContainerType }).(pulumi.StringPtrOutput)
}

// Friendly name of the container.
func (o IaaSVMContainerResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IaaSVMContainerResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o IaaSVMContainerResponseOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IaaSVMContainerResponse) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o IaaSVMContainerResponseOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IaaSVMContainerResponse) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// Resource group name of Recovery Services Vault.
func (o IaaSVMContainerResponseOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IaaSVMContainerResponse) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
func (o IaaSVMContainerResponseOutput) VirtualMachineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IaaSVMContainerResponse) *string { return v.VirtualMachineId }).(pulumi.StringPtrOutput)
}

// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
func (o IaaSVMContainerResponseOutput) VirtualMachineVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IaaSVMContainerResponse) *string { return v.VirtualMachineVersion }).(pulumi.StringPtrOutput)
}

// Identity for the resource.
type IdentityData struct {
	// The identity type.
	Type string `pulumi:"type"`
}

// IdentityDataInput is an input type that accepts IdentityDataArgs and IdentityDataOutput values.
// You can construct a concrete instance of `IdentityDataInput` via:
//
//          IdentityDataArgs{...}
type IdentityDataInput interface {
	pulumi.Input

	ToIdentityDataOutput() IdentityDataOutput
	ToIdentityDataOutputWithContext(context.Context) IdentityDataOutput
}

// Identity for the resource.
type IdentityDataArgs struct {
	// The identity type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (IdentityDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityData)(nil)).Elem()
}

func (i IdentityDataArgs) ToIdentityDataOutput() IdentityDataOutput {
	return i.ToIdentityDataOutputWithContext(context.Background())
}

func (i IdentityDataArgs) ToIdentityDataOutputWithContext(ctx context.Context) IdentityDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityDataOutput)
}

func (i IdentityDataArgs) ToIdentityDataPtrOutput() IdentityDataPtrOutput {
	return i.ToIdentityDataPtrOutputWithContext(context.Background())
}

func (i IdentityDataArgs) ToIdentityDataPtrOutputWithContext(ctx context.Context) IdentityDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityDataOutput).ToIdentityDataPtrOutputWithContext(ctx)
}

// IdentityDataPtrInput is an input type that accepts IdentityDataArgs, IdentityDataPtr and IdentityDataPtrOutput values.
// You can construct a concrete instance of `IdentityDataPtrInput` via:
//
//          IdentityDataArgs{...}
//
//  or:
//
//          nil
type IdentityDataPtrInput interface {
	pulumi.Input

	ToIdentityDataPtrOutput() IdentityDataPtrOutput
	ToIdentityDataPtrOutputWithContext(context.Context) IdentityDataPtrOutput
}

type identityDataPtrType IdentityDataArgs

func IdentityDataPtr(v *IdentityDataArgs) IdentityDataPtrInput {
	return (*identityDataPtrType)(v)
}

func (*identityDataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityData)(nil)).Elem()
}

func (i *identityDataPtrType) ToIdentityDataPtrOutput() IdentityDataPtrOutput {
	return i.ToIdentityDataPtrOutputWithContext(context.Background())
}

func (i *identityDataPtrType) ToIdentityDataPtrOutputWithContext(ctx context.Context) IdentityDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityDataPtrOutput)
}

// Identity for the resource.
type IdentityDataResponse struct {
	// The principal ID of resource identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId string `pulumi:"tenantId"`
	// The identity type.
	Type string `pulumi:"type"`
}

// Identity for the resource.
type IdentityDataResponseOutput struct{ *pulumi.OutputState }

func (IdentityDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityDataResponse)(nil)).Elem()
}

func (o IdentityDataResponseOutput) ToIdentityDataResponseOutput() IdentityDataResponseOutput {
	return o
}

func (o IdentityDataResponseOutput) ToIdentityDataResponseOutputWithContext(ctx context.Context) IdentityDataResponseOutput {
	return o
}

func (o IdentityDataResponseOutput) ToIdentityDataResponsePtrOutput() IdentityDataResponsePtrOutput {
	return o.ToIdentityDataResponsePtrOutputWithContext(context.Background())
}

func (o IdentityDataResponseOutput) ToIdentityDataResponsePtrOutputWithContext(ctx context.Context) IdentityDataResponsePtrOutput {
	return o.ApplyT(func(v IdentityDataResponse) *IdentityDataResponse {
		return &v
	}).(IdentityDataResponsePtrOutput)
}

// The principal ID of resource identity.
func (o IdentityDataResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityDataResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID of resource.
func (o IdentityDataResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityDataResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The identity type.
func (o IdentityDataResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityDataResponse) string { return v.Type }).(pulumi.StringOutput)
}

type IdentityDataResponsePtrOutput struct{ *pulumi.OutputState }

func (IdentityDataResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityDataResponse)(nil)).Elem()
}

func (o IdentityDataResponsePtrOutput) ToIdentityDataResponsePtrOutput() IdentityDataResponsePtrOutput {
	return o
}

func (o IdentityDataResponsePtrOutput) ToIdentityDataResponsePtrOutputWithContext(ctx context.Context) IdentityDataResponsePtrOutput {
	return o
}

func (o IdentityDataResponsePtrOutput) Elem() IdentityDataResponseOutput {
	return o.ApplyT(func(v *IdentityDataResponse) IdentityDataResponse { return *v }).(IdentityDataResponseOutput)
}

// The principal ID of resource identity.
func (o IdentityDataResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityDataResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of resource.
func (o IdentityDataResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityDataResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The identity type.
func (o IdentityDataResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityDataResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Identity provider details.
type IdentityProviderDetailsResponse struct {
	// The base authority for Azure Active Directory authentication.
	AadAuthority *string `pulumi:"aadAuthority"`
	// The application/client Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
	ApplicationId *string `pulumi:"applicationId"`
	// The intended Audience of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
	Audience *string `pulumi:"audience"`
	// The object Id of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
	ObjectId *string `pulumi:"objectId"`
	// The tenant Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
	TenantId *string `pulumi:"tenantId"`
}

// Identity provider details.
type IdentityProviderDetailsResponseOutput struct{ *pulumi.OutputState }

func (IdentityProviderDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProviderDetailsResponse)(nil)).Elem()
}

func (o IdentityProviderDetailsResponseOutput) ToIdentityProviderDetailsResponseOutput() IdentityProviderDetailsResponseOutput {
	return o
}

func (o IdentityProviderDetailsResponseOutput) ToIdentityProviderDetailsResponseOutputWithContext(ctx context.Context) IdentityProviderDetailsResponseOutput {
	return o
}

func (o IdentityProviderDetailsResponseOutput) ToIdentityProviderDetailsResponsePtrOutput() IdentityProviderDetailsResponsePtrOutput {
	return o.ToIdentityProviderDetailsResponsePtrOutputWithContext(context.Background())
}

func (o IdentityProviderDetailsResponseOutput) ToIdentityProviderDetailsResponsePtrOutputWithContext(ctx context.Context) IdentityProviderDetailsResponsePtrOutput {
	return o.ApplyT(func(v IdentityProviderDetailsResponse) *IdentityProviderDetailsResponse {
		return &v
	}).(IdentityProviderDetailsResponsePtrOutput)
}

// The base authority for Azure Active Directory authentication.
func (o IdentityProviderDetailsResponseOutput) AadAuthority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProviderDetailsResponse) *string { return v.AadAuthority }).(pulumi.StringPtrOutput)
}

// The application/client Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
func (o IdentityProviderDetailsResponseOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProviderDetailsResponse) *string { return v.ApplicationId }).(pulumi.StringPtrOutput)
}

// The intended Audience of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
func (o IdentityProviderDetailsResponseOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProviderDetailsResponse) *string { return v.Audience }).(pulumi.StringPtrOutput)
}

// The object Id of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
func (o IdentityProviderDetailsResponseOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProviderDetailsResponse) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

// The tenant Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
func (o IdentityProviderDetailsResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProviderDetailsResponse) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type IdentityProviderDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (IdentityProviderDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityProviderDetailsResponse)(nil)).Elem()
}

func (o IdentityProviderDetailsResponsePtrOutput) ToIdentityProviderDetailsResponsePtrOutput() IdentityProviderDetailsResponsePtrOutput {
	return o
}

func (o IdentityProviderDetailsResponsePtrOutput) ToIdentityProviderDetailsResponsePtrOutputWithContext(ctx context.Context) IdentityProviderDetailsResponsePtrOutput {
	return o
}

func (o IdentityProviderDetailsResponsePtrOutput) Elem() IdentityProviderDetailsResponseOutput {
	return o.ApplyT(func(v *IdentityProviderDetailsResponse) IdentityProviderDetailsResponse { return *v }).(IdentityProviderDetailsResponseOutput)
}

// The base authority for Azure Active Directory authentication.
func (o IdentityProviderDetailsResponsePtrOutput) AadAuthority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AadAuthority
	}).(pulumi.StringPtrOutput)
}

// The application/client Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
func (o IdentityProviderDetailsResponsePtrOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ApplicationId
	}).(pulumi.StringPtrOutput)
}

// The intended Audience of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
func (o IdentityProviderDetailsResponsePtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Audience
	}).(pulumi.StringPtrOutput)
}

// The object Id of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
func (o IdentityProviderDetailsResponsePtrOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ObjectId
	}).(pulumi.StringPtrOutput)
}

// The tenant Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
func (o IdentityProviderDetailsResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Identity provider input.
type IdentityProviderInput struct {
	// The base authority for Azure Active Directory authentication.
	AadAuthority string `pulumi:"aadAuthority"`
	// The application/client Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
	ApplicationId string `pulumi:"applicationId"`
	// The intended Audience of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
	Audience string `pulumi:"audience"`
	// The object Id of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
	ObjectId string `pulumi:"objectId"`
	// The tenant Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
	TenantId string `pulumi:"tenantId"`
}

// IdentityProviderInputInput is an input type that accepts IdentityProviderInputArgs and IdentityProviderInputOutput values.
// You can construct a concrete instance of `IdentityProviderInputInput` via:
//
//          IdentityProviderInputArgs{...}
type IdentityProviderInputInput interface {
	pulumi.Input

	ToIdentityProviderInputOutput() IdentityProviderInputOutput
	ToIdentityProviderInputOutputWithContext(context.Context) IdentityProviderInputOutput
}

// Identity provider input.
type IdentityProviderInputArgs struct {
	// The base authority for Azure Active Directory authentication.
	AadAuthority pulumi.StringInput `pulumi:"aadAuthority"`
	// The application/client Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
	ApplicationId pulumi.StringInput `pulumi:"applicationId"`
	// The intended Audience of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
	Audience pulumi.StringInput `pulumi:"audience"`
	// The object Id of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
	ObjectId pulumi.StringInput `pulumi:"objectId"`
	// The tenant Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (IdentityProviderInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProviderInput)(nil)).Elem()
}

func (i IdentityProviderInputArgs) ToIdentityProviderInputOutput() IdentityProviderInputOutput {
	return i.ToIdentityProviderInputOutputWithContext(context.Background())
}

func (i IdentityProviderInputArgs) ToIdentityProviderInputOutputWithContext(ctx context.Context) IdentityProviderInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityProviderInputOutput)
}

func (i IdentityProviderInputArgs) ToIdentityProviderInputPtrOutput() IdentityProviderInputPtrOutput {
	return i.ToIdentityProviderInputPtrOutputWithContext(context.Background())
}

func (i IdentityProviderInputArgs) ToIdentityProviderInputPtrOutputWithContext(ctx context.Context) IdentityProviderInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityProviderInputOutput).ToIdentityProviderInputPtrOutputWithContext(ctx)
}

// IdentityProviderInputPtrInput is an input type that accepts IdentityProviderInputArgs, IdentityProviderInputPtr and IdentityProviderInputPtrOutput values.
// You can construct a concrete instance of `IdentityProviderInputPtrInput` via:
//
//          IdentityProviderInputArgs{...}
//
//  or:
//
//          nil
type IdentityProviderInputPtrInput interface {
	pulumi.Input

	ToIdentityProviderInputPtrOutput() IdentityProviderInputPtrOutput
	ToIdentityProviderInputPtrOutputWithContext(context.Context) IdentityProviderInputPtrOutput
}

type identityProviderInputPtrType IdentityProviderInputArgs

func IdentityProviderInputPtr(v *IdentityProviderInputArgs) IdentityProviderInputPtrInput {
	return (*identityProviderInputPtrType)(v)
}

func (*identityProviderInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityProviderInput)(nil)).Elem()
}

func (i *identityProviderInputPtrType) ToIdentityProviderInputPtrOutput() IdentityProviderInputPtrOutput {
	return i.ToIdentityProviderInputPtrOutputWithContext(context.Background())
}

func (i *identityProviderInputPtrType) ToIdentityProviderInputPtrOutputWithContext(ctx context.Context) IdentityProviderInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityProviderInputPtrOutput)
}

// The details of the InMage agent.
type InMageAgentDetailsResponse struct {
	// Agent expiry date.
	AgentExpiryDate *string `pulumi:"agentExpiryDate"`
	// A value indicating whether installed agent needs to be updated.
	AgentUpdateStatus *string `pulumi:"agentUpdateStatus"`
	// The agent version.
	AgentVersion *string `pulumi:"agentVersion"`
	// A value indicating whether reboot is required after update is applied.
	PostUpdateRebootStatus *string `pulumi:"postUpdateRebootStatus"`
}

// The details of the InMage agent.
type InMageAgentDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMageAgentDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageAgentDetailsResponse)(nil)).Elem()
}

func (o InMageAgentDetailsResponseOutput) ToInMageAgentDetailsResponseOutput() InMageAgentDetailsResponseOutput {
	return o
}

func (o InMageAgentDetailsResponseOutput) ToInMageAgentDetailsResponseOutputWithContext(ctx context.Context) InMageAgentDetailsResponseOutput {
	return o
}

func (o InMageAgentDetailsResponseOutput) ToInMageAgentDetailsResponsePtrOutput() InMageAgentDetailsResponsePtrOutput {
	return o.ToInMageAgentDetailsResponsePtrOutputWithContext(context.Background())
}

func (o InMageAgentDetailsResponseOutput) ToInMageAgentDetailsResponsePtrOutputWithContext(ctx context.Context) InMageAgentDetailsResponsePtrOutput {
	return o.ApplyT(func(v InMageAgentDetailsResponse) *InMageAgentDetailsResponse {
		return &v
	}).(InMageAgentDetailsResponsePtrOutput)
}

// Agent expiry date.
func (o InMageAgentDetailsResponseOutput) AgentExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAgentDetailsResponse) *string { return v.AgentExpiryDate }).(pulumi.StringPtrOutput)
}

// A value indicating whether installed agent needs to be updated.
func (o InMageAgentDetailsResponseOutput) AgentUpdateStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAgentDetailsResponse) *string { return v.AgentUpdateStatus }).(pulumi.StringPtrOutput)
}

// The agent version.
func (o InMageAgentDetailsResponseOutput) AgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAgentDetailsResponse) *string { return v.AgentVersion }).(pulumi.StringPtrOutput)
}

// A value indicating whether reboot is required after update is applied.
func (o InMageAgentDetailsResponseOutput) PostUpdateRebootStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAgentDetailsResponse) *string { return v.PostUpdateRebootStatus }).(pulumi.StringPtrOutput)
}

type InMageAgentDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (InMageAgentDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InMageAgentDetailsResponse)(nil)).Elem()
}

func (o InMageAgentDetailsResponsePtrOutput) ToInMageAgentDetailsResponsePtrOutput() InMageAgentDetailsResponsePtrOutput {
	return o
}

func (o InMageAgentDetailsResponsePtrOutput) ToInMageAgentDetailsResponsePtrOutputWithContext(ctx context.Context) InMageAgentDetailsResponsePtrOutput {
	return o
}

func (o InMageAgentDetailsResponsePtrOutput) Elem() InMageAgentDetailsResponseOutput {
	return o.ApplyT(func(v *InMageAgentDetailsResponse) InMageAgentDetailsResponse { return *v }).(InMageAgentDetailsResponseOutput)
}

// Agent expiry date.
func (o InMageAgentDetailsResponsePtrOutput) AgentExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAgentDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AgentExpiryDate
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether installed agent needs to be updated.
func (o InMageAgentDetailsResponsePtrOutput) AgentUpdateStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAgentDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AgentUpdateStatus
	}).(pulumi.StringPtrOutput)
}

// The agent version.
func (o InMageAgentDetailsResponsePtrOutput) AgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAgentDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AgentVersion
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether reboot is required after update is applied.
func (o InMageAgentDetailsResponsePtrOutput) PostUpdateRebootStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAgentDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.PostUpdateRebootStatus
	}).(pulumi.StringPtrOutput)
}

// Disk input details.
type InMageAzureV2DiskInputDetails struct {
	// The DiskEncryptionSet ARM ID.
	DiskEncryptionSetId *string `pulumi:"diskEncryptionSetId"`
	// The DiskId.
	DiskId *string `pulumi:"diskId"`
	// The DiskType.
	DiskType *string `pulumi:"diskType"`
	// The LogStorageAccountId.
	LogStorageAccountId *string `pulumi:"logStorageAccountId"`
}

// InMageAzureV2DiskInputDetailsInput is an input type that accepts InMageAzureV2DiskInputDetailsArgs and InMageAzureV2DiskInputDetailsOutput values.
// You can construct a concrete instance of `InMageAzureV2DiskInputDetailsInput` via:
//
//          InMageAzureV2DiskInputDetailsArgs{...}
type InMageAzureV2DiskInputDetailsInput interface {
	pulumi.Input

	ToInMageAzureV2DiskInputDetailsOutput() InMageAzureV2DiskInputDetailsOutput
	ToInMageAzureV2DiskInputDetailsOutputWithContext(context.Context) InMageAzureV2DiskInputDetailsOutput
}

// Disk input details.
type InMageAzureV2DiskInputDetailsArgs struct {
	// The DiskEncryptionSet ARM ID.
	DiskEncryptionSetId pulumi.StringPtrInput `pulumi:"diskEncryptionSetId"`
	// The DiskId.
	DiskId pulumi.StringPtrInput `pulumi:"diskId"`
	// The DiskType.
	DiskType pulumi.StringPtrInput `pulumi:"diskType"`
	// The LogStorageAccountId.
	LogStorageAccountId pulumi.StringPtrInput `pulumi:"logStorageAccountId"`
}

func (InMageAzureV2DiskInputDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageAzureV2DiskInputDetails)(nil)).Elem()
}

func (i InMageAzureV2DiskInputDetailsArgs) ToInMageAzureV2DiskInputDetailsOutput() InMageAzureV2DiskInputDetailsOutput {
	return i.ToInMageAzureV2DiskInputDetailsOutputWithContext(context.Background())
}

func (i InMageAzureV2DiskInputDetailsArgs) ToInMageAzureV2DiskInputDetailsOutputWithContext(ctx context.Context) InMageAzureV2DiskInputDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageAzureV2DiskInputDetailsOutput)
}

// InMageAzureV2DiskInputDetailsArrayInput is an input type that accepts InMageAzureV2DiskInputDetailsArray and InMageAzureV2DiskInputDetailsArrayOutput values.
// You can construct a concrete instance of `InMageAzureV2DiskInputDetailsArrayInput` via:
//
//          InMageAzureV2DiskInputDetailsArray{ InMageAzureV2DiskInputDetailsArgs{...} }
type InMageAzureV2DiskInputDetailsArrayInput interface {
	pulumi.Input

	ToInMageAzureV2DiskInputDetailsArrayOutput() InMageAzureV2DiskInputDetailsArrayOutput
	ToInMageAzureV2DiskInputDetailsArrayOutputWithContext(context.Context) InMageAzureV2DiskInputDetailsArrayOutput
}

type InMageAzureV2DiskInputDetailsArray []InMageAzureV2DiskInputDetailsInput

func (InMageAzureV2DiskInputDetailsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InMageAzureV2DiskInputDetails)(nil)).Elem()
}

func (i InMageAzureV2DiskInputDetailsArray) ToInMageAzureV2DiskInputDetailsArrayOutput() InMageAzureV2DiskInputDetailsArrayOutput {
	return i.ToInMageAzureV2DiskInputDetailsArrayOutputWithContext(context.Background())
}

func (i InMageAzureV2DiskInputDetailsArray) ToInMageAzureV2DiskInputDetailsArrayOutputWithContext(ctx context.Context) InMageAzureV2DiskInputDetailsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageAzureV2DiskInputDetailsArrayOutput)
}

// VMware Azure specific enable protection input.
type InMageAzureV2EnableProtectionInput struct {
	// The DiskEncryptionSet ARM ID.
	DiskEncryptionSetId *string `pulumi:"diskEncryptionSetId"`
	// The DiskType.
	DiskType *string `pulumi:"diskType"`
	// The disks to include list.
	DisksToInclude []InMageAzureV2DiskInputDetails `pulumi:"disksToInclude"`
	// The selected option to enable RDP\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum.
	EnableRdpOnTargetOption *string `pulumi:"enableRdpOnTargetOption"`
	// The class type.
	InstanceType *string `pulumi:"instanceType"`
	// The storage account to be used for logging during replication.
	LogStorageAccountId *string `pulumi:"logStorageAccountId"`
	// The Master target Id.
	MasterTargetId *string `pulumi:"masterTargetId"`
	// The multi vm group Id.
	MultiVmGroupId *string `pulumi:"multiVmGroupId"`
	// The multi vm group name.
	MultiVmGroupName *string `pulumi:"multiVmGroupName"`
	// The Process Server Id.
	ProcessServerId *string `pulumi:"processServerId"`
	// The CS account Id.
	RunAsAccountId *string `pulumi:"runAsAccountId"`
	// The storage account name.
	StorageAccountId *string `pulumi:"storageAccountId"`
	// The target availability zone.
	TargetAvailabilityZone *string `pulumi:"targetAvailabilityZone"`
	// The selected target Azure network Id.
	TargetAzureNetworkId *string `pulumi:"targetAzureNetworkId"`
	// The selected target Azure subnet Id.
	TargetAzureSubnetId *string `pulumi:"targetAzureSubnetId"`
	// The Id of the target resource group (for classic deployment) in which the failover VM is to be created.
	TargetAzureV1ResourceGroupId *string `pulumi:"targetAzureV1ResourceGroupId"`
	// The Id of the target resource group (for resource manager deployment) in which the failover VM is to be created.
	TargetAzureV2ResourceGroupId *string `pulumi:"targetAzureV2ResourceGroupId"`
	// The target azure Vm Name.
	TargetAzureVmName *string `pulumi:"targetAzureVmName"`
	// The proximity placement group ARM Id.
	TargetProximityPlacementGroupId *string `pulumi:"targetProximityPlacementGroupId"`
}

// InMageAzureV2EnableProtectionInputInput is an input type that accepts InMageAzureV2EnableProtectionInputArgs and InMageAzureV2EnableProtectionInputOutput values.
// You can construct a concrete instance of `InMageAzureV2EnableProtectionInputInput` via:
//
//          InMageAzureV2EnableProtectionInputArgs{...}
type InMageAzureV2EnableProtectionInputInput interface {
	pulumi.Input

	ToInMageAzureV2EnableProtectionInputOutput() InMageAzureV2EnableProtectionInputOutput
	ToInMageAzureV2EnableProtectionInputOutputWithContext(context.Context) InMageAzureV2EnableProtectionInputOutput
}

// VMware Azure specific enable protection input.
type InMageAzureV2EnableProtectionInputArgs struct {
	// The DiskEncryptionSet ARM ID.
	DiskEncryptionSetId pulumi.StringPtrInput `pulumi:"diskEncryptionSetId"`
	// The DiskType.
	DiskType pulumi.StringPtrInput `pulumi:"diskType"`
	// The disks to include list.
	DisksToInclude InMageAzureV2DiskInputDetailsArrayInput `pulumi:"disksToInclude"`
	// The selected option to enable RDP\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum.
	EnableRdpOnTargetOption pulumi.StringPtrInput `pulumi:"enableRdpOnTargetOption"`
	// The class type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// The storage account to be used for logging during replication.
	LogStorageAccountId pulumi.StringPtrInput `pulumi:"logStorageAccountId"`
	// The Master target Id.
	MasterTargetId pulumi.StringPtrInput `pulumi:"masterTargetId"`
	// The multi vm group Id.
	MultiVmGroupId pulumi.StringPtrInput `pulumi:"multiVmGroupId"`
	// The multi vm group name.
	MultiVmGroupName pulumi.StringPtrInput `pulumi:"multiVmGroupName"`
	// The Process Server Id.
	ProcessServerId pulumi.StringPtrInput `pulumi:"processServerId"`
	// The CS account Id.
	RunAsAccountId pulumi.StringPtrInput `pulumi:"runAsAccountId"`
	// The storage account name.
	StorageAccountId pulumi.StringPtrInput `pulumi:"storageAccountId"`
	// The target availability zone.
	TargetAvailabilityZone pulumi.StringPtrInput `pulumi:"targetAvailabilityZone"`
	// The selected target Azure network Id.
	TargetAzureNetworkId pulumi.StringPtrInput `pulumi:"targetAzureNetworkId"`
	// The selected target Azure subnet Id.
	TargetAzureSubnetId pulumi.StringPtrInput `pulumi:"targetAzureSubnetId"`
	// The Id of the target resource group (for classic deployment) in which the failover VM is to be created.
	TargetAzureV1ResourceGroupId pulumi.StringPtrInput `pulumi:"targetAzureV1ResourceGroupId"`
	// The Id of the target resource group (for resource manager deployment) in which the failover VM is to be created.
	TargetAzureV2ResourceGroupId pulumi.StringPtrInput `pulumi:"targetAzureV2ResourceGroupId"`
	// The target azure Vm Name.
	TargetAzureVmName pulumi.StringPtrInput `pulumi:"targetAzureVmName"`
	// The proximity placement group ARM Id.
	TargetProximityPlacementGroupId pulumi.StringPtrInput `pulumi:"targetProximityPlacementGroupId"`
}

func (InMageAzureV2EnableProtectionInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageAzureV2EnableProtectionInput)(nil)).Elem()
}

func (i InMageAzureV2EnableProtectionInputArgs) ToInMageAzureV2EnableProtectionInputOutput() InMageAzureV2EnableProtectionInputOutput {
	return i.ToInMageAzureV2EnableProtectionInputOutputWithContext(context.Background())
}

func (i InMageAzureV2EnableProtectionInputArgs) ToInMageAzureV2EnableProtectionInputOutputWithContext(ctx context.Context) InMageAzureV2EnableProtectionInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageAzureV2EnableProtectionInputOutput)
}

// InMageAzureV2 Managed disk details.
type InMageAzureV2ManagedDiskDetailsResponse struct {
	// The disk id.
	DiskId *string `pulumi:"diskId"`
	// The replica disk type.
	ReplicaDiskType *string `pulumi:"replicaDiskType"`
	// Seed managed disk Id.
	SeedManagedDiskId *string `pulumi:"seedManagedDiskId"`
}

// InMageAzureV2 Managed disk details.
type InMageAzureV2ManagedDiskDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMageAzureV2ManagedDiskDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageAzureV2ManagedDiskDetailsResponse)(nil)).Elem()
}

func (o InMageAzureV2ManagedDiskDetailsResponseOutput) ToInMageAzureV2ManagedDiskDetailsResponseOutput() InMageAzureV2ManagedDiskDetailsResponseOutput {
	return o
}

func (o InMageAzureV2ManagedDiskDetailsResponseOutput) ToInMageAzureV2ManagedDiskDetailsResponseOutputWithContext(ctx context.Context) InMageAzureV2ManagedDiskDetailsResponseOutput {
	return o
}

// The disk id.
func (o InMageAzureV2ManagedDiskDetailsResponseOutput) DiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ManagedDiskDetailsResponse) *string { return v.DiskId }).(pulumi.StringPtrOutput)
}

// The replica disk type.
func (o InMageAzureV2ManagedDiskDetailsResponseOutput) ReplicaDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ManagedDiskDetailsResponse) *string { return v.ReplicaDiskType }).(pulumi.StringPtrOutput)
}

// Seed managed disk Id.
func (o InMageAzureV2ManagedDiskDetailsResponseOutput) SeedManagedDiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ManagedDiskDetailsResponse) *string { return v.SeedManagedDiskId }).(pulumi.StringPtrOutput)
}

type InMageAzureV2ManagedDiskDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (InMageAzureV2ManagedDiskDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InMageAzureV2ManagedDiskDetailsResponse)(nil)).Elem()
}

func (o InMageAzureV2ManagedDiskDetailsResponseArrayOutput) ToInMageAzureV2ManagedDiskDetailsResponseArrayOutput() InMageAzureV2ManagedDiskDetailsResponseArrayOutput {
	return o
}

func (o InMageAzureV2ManagedDiskDetailsResponseArrayOutput) ToInMageAzureV2ManagedDiskDetailsResponseArrayOutputWithContext(ctx context.Context) InMageAzureV2ManagedDiskDetailsResponseArrayOutput {
	return o
}

func (o InMageAzureV2ManagedDiskDetailsResponseArrayOutput) Index(i pulumi.IntInput) InMageAzureV2ManagedDiskDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InMageAzureV2ManagedDiskDetailsResponse {
		return vs[0].([]InMageAzureV2ManagedDiskDetailsResponse)[vs[1].(int)]
	}).(InMageAzureV2ManagedDiskDetailsResponseOutput)
}

// InMage Azure v2 specific protection profile details.
type InMageAzureV2PolicyDetailsResponse struct {
	// The app consistent snapshot frequency in minutes.
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// The crash consistent snapshot frequency in minutes.
	CrashConsistentFrequencyInMinutes *int `pulumi:"crashConsistentFrequencyInMinutes"`
	// Gets the class type. Overridden in derived classes.
	InstanceType string `pulumi:"instanceType"`
	// A value indicating whether multi-VM sync has to be enabled.
	MultiVmSyncStatus *string `pulumi:"multiVmSyncStatus"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistory *int `pulumi:"recoveryPointHistory"`
	// The recovery point threshold in minutes.
	RecoveryPointThresholdInMinutes *int `pulumi:"recoveryPointThresholdInMinutes"`
}

// InMage Azure v2 specific protection profile details.
type InMageAzureV2PolicyDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMageAzureV2PolicyDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageAzureV2PolicyDetailsResponse)(nil)).Elem()
}

func (o InMageAzureV2PolicyDetailsResponseOutput) ToInMageAzureV2PolicyDetailsResponseOutput() InMageAzureV2PolicyDetailsResponseOutput {
	return o
}

func (o InMageAzureV2PolicyDetailsResponseOutput) ToInMageAzureV2PolicyDetailsResponseOutputWithContext(ctx context.Context) InMageAzureV2PolicyDetailsResponseOutput {
	return o
}

// The app consistent snapshot frequency in minutes.
func (o InMageAzureV2PolicyDetailsResponseOutput) AppConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageAzureV2PolicyDetailsResponse) *int { return v.AppConsistentFrequencyInMinutes }).(pulumi.IntPtrOutput)
}

// The crash consistent snapshot frequency in minutes.
func (o InMageAzureV2PolicyDetailsResponseOutput) CrashConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageAzureV2PolicyDetailsResponse) *int { return v.CrashConsistentFrequencyInMinutes }).(pulumi.IntPtrOutput)
}

// Gets the class type. Overridden in derived classes.
func (o InMageAzureV2PolicyDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v InMageAzureV2PolicyDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// A value indicating whether multi-VM sync has to be enabled.
func (o InMageAzureV2PolicyDetailsResponseOutput) MultiVmSyncStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2PolicyDetailsResponse) *string { return v.MultiVmSyncStatus }).(pulumi.StringPtrOutput)
}

// The duration in minutes until which the recovery points need to be stored.
func (o InMageAzureV2PolicyDetailsResponseOutput) RecoveryPointHistory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageAzureV2PolicyDetailsResponse) *int { return v.RecoveryPointHistory }).(pulumi.IntPtrOutput)
}

// The recovery point threshold in minutes.
func (o InMageAzureV2PolicyDetailsResponseOutput) RecoveryPointThresholdInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageAzureV2PolicyDetailsResponse) *int { return v.RecoveryPointThresholdInMinutes }).(pulumi.IntPtrOutput)
}

// VMWare Azure specific policy Input.
type InMageAzureV2PolicyInput struct {
	// The app consistent snapshot frequency (in minutes).
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// The crash consistent snapshot frequency (in minutes).
	CrashConsistentFrequencyInMinutes *int `pulumi:"crashConsistentFrequencyInMinutes"`
	// The class type.
	InstanceType *string `pulumi:"instanceType"`
	// A value indicating whether multi-VM sync has to be enabled. Value should be 'Enabled' or 'Disabled'.
	MultiVmSyncStatus string `pulumi:"multiVmSyncStatus"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistory *int `pulumi:"recoveryPointHistory"`
	// The recovery point threshold in minutes.
	RecoveryPointThresholdInMinutes *int `pulumi:"recoveryPointThresholdInMinutes"`
}

// InMageAzureV2PolicyInputInput is an input type that accepts InMageAzureV2PolicyInputArgs and InMageAzureV2PolicyInputOutput values.
// You can construct a concrete instance of `InMageAzureV2PolicyInputInput` via:
//
//          InMageAzureV2PolicyInputArgs{...}
type InMageAzureV2PolicyInputInput interface {
	pulumi.Input

	ToInMageAzureV2PolicyInputOutput() InMageAzureV2PolicyInputOutput
	ToInMageAzureV2PolicyInputOutputWithContext(context.Context) InMageAzureV2PolicyInputOutput
}

// VMWare Azure specific policy Input.
type InMageAzureV2PolicyInputArgs struct {
	// The app consistent snapshot frequency (in minutes).
	AppConsistentFrequencyInMinutes pulumi.IntPtrInput `pulumi:"appConsistentFrequencyInMinutes"`
	// The crash consistent snapshot frequency (in minutes).
	CrashConsistentFrequencyInMinutes pulumi.IntPtrInput `pulumi:"crashConsistentFrequencyInMinutes"`
	// The class type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// A value indicating whether multi-VM sync has to be enabled. Value should be 'Enabled' or 'Disabled'.
	MultiVmSyncStatus pulumi.StringInput `pulumi:"multiVmSyncStatus"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistory pulumi.IntPtrInput `pulumi:"recoveryPointHistory"`
	// The recovery point threshold in minutes.
	RecoveryPointThresholdInMinutes pulumi.IntPtrInput `pulumi:"recoveryPointThresholdInMinutes"`
}

func (InMageAzureV2PolicyInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageAzureV2PolicyInput)(nil)).Elem()
}

func (i InMageAzureV2PolicyInputArgs) ToInMageAzureV2PolicyInputOutput() InMageAzureV2PolicyInputOutput {
	return i.ToInMageAzureV2PolicyInputOutputWithContext(context.Background())
}

func (i InMageAzureV2PolicyInputArgs) ToInMageAzureV2PolicyInputOutputWithContext(ctx context.Context) InMageAzureV2PolicyInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageAzureV2PolicyInputOutput)
}

// InMageAzureV2 protected disk details.
type InMageAzureV2ProtectedDiskDetailsResponse struct {
	// The disk capacity in bytes.
	DiskCapacityInBytes *int `pulumi:"diskCapacityInBytes"`
	// The disk id.
	DiskId *string `pulumi:"diskId"`
	// The disk name.
	DiskName *string `pulumi:"diskName"`
	// A value indicating whether disk is resized.
	DiskResized *string `pulumi:"diskResized"`
	// The disk file system capacity in bytes.
	FileSystemCapacityInBytes *int `pulumi:"fileSystemCapacityInBytes"`
	// The health error code for the disk.
	HealthErrorCode *string `pulumi:"healthErrorCode"`
	// The last RPO calculated time.
	LastRpoCalculatedTime *string `pulumi:"lastRpoCalculatedTime"`
	// The protection stage.
	ProtectionStage *string `pulumi:"protectionStage"`
	// The PS data transit in MB.
	PsDataInMegaBytes *float64 `pulumi:"psDataInMegaBytes"`
	// The resync duration in seconds.
	ResyncDurationInSeconds *int `pulumi:"resyncDurationInSeconds"`
	// The resync progress percentage.
	ResyncProgressPercentage *int `pulumi:"resyncProgressPercentage"`
	// A value indicating whether resync is required for this disk.
	ResyncRequired *string `pulumi:"resyncRequired"`
	// The RPO in seconds.
	RpoInSeconds *int `pulumi:"rpoInSeconds"`
	// The source data transit in MB.
	SourceDataInMegaBytes *float64 `pulumi:"sourceDataInMegaBytes"`
	// The target data transit in MB.
	TargetDataInMegaBytes *float64 `pulumi:"targetDataInMegaBytes"`
}

// InMageAzureV2 protected disk details.
type InMageAzureV2ProtectedDiskDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMageAzureV2ProtectedDiskDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageAzureV2ProtectedDiskDetailsResponse)(nil)).Elem()
}

func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) ToInMageAzureV2ProtectedDiskDetailsResponseOutput() InMageAzureV2ProtectedDiskDetailsResponseOutput {
	return o
}

func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) ToInMageAzureV2ProtectedDiskDetailsResponseOutputWithContext(ctx context.Context) InMageAzureV2ProtectedDiskDetailsResponseOutput {
	return o
}

// The disk capacity in bytes.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) DiskCapacityInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *int { return v.DiskCapacityInBytes }).(pulumi.IntPtrOutput)
}

// The disk id.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) DiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *string { return v.DiskId }).(pulumi.StringPtrOutput)
}

// The disk name.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) DiskName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *string { return v.DiskName }).(pulumi.StringPtrOutput)
}

// A value indicating whether disk is resized.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) DiskResized() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *string { return v.DiskResized }).(pulumi.StringPtrOutput)
}

// The disk file system capacity in bytes.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) FileSystemCapacityInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *int { return v.FileSystemCapacityInBytes }).(pulumi.IntPtrOutput)
}

// The health error code for the disk.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) HealthErrorCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *string { return v.HealthErrorCode }).(pulumi.StringPtrOutput)
}

// The last RPO calculated time.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) LastRpoCalculatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *string { return v.LastRpoCalculatedTime }).(pulumi.StringPtrOutput)
}

// The protection stage.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) ProtectionStage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *string { return v.ProtectionStage }).(pulumi.StringPtrOutput)
}

// The PS data transit in MB.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) PsDataInMegaBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *float64 { return v.PsDataInMegaBytes }).(pulumi.Float64PtrOutput)
}

// The resync duration in seconds.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) ResyncDurationInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *int { return v.ResyncDurationInSeconds }).(pulumi.IntPtrOutput)
}

// The resync progress percentage.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) ResyncProgressPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *int { return v.ResyncProgressPercentage }).(pulumi.IntPtrOutput)
}

// A value indicating whether resync is required for this disk.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) ResyncRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *string { return v.ResyncRequired }).(pulumi.StringPtrOutput)
}

// The RPO in seconds.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) RpoInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *int { return v.RpoInSeconds }).(pulumi.IntPtrOutput)
}

// The source data transit in MB.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) SourceDataInMegaBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *float64 { return v.SourceDataInMegaBytes }).(pulumi.Float64PtrOutput)
}

// The target data transit in MB.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) TargetDataInMegaBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *float64 { return v.TargetDataInMegaBytes }).(pulumi.Float64PtrOutput)
}

type InMageAzureV2ProtectedDiskDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (InMageAzureV2ProtectedDiskDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InMageAzureV2ProtectedDiskDetailsResponse)(nil)).Elem()
}

func (o InMageAzureV2ProtectedDiskDetailsResponseArrayOutput) ToInMageAzureV2ProtectedDiskDetailsResponseArrayOutput() InMageAzureV2ProtectedDiskDetailsResponseArrayOutput {
	return o
}

func (o InMageAzureV2ProtectedDiskDetailsResponseArrayOutput) ToInMageAzureV2ProtectedDiskDetailsResponseArrayOutputWithContext(ctx context.Context) InMageAzureV2ProtectedDiskDetailsResponseArrayOutput {
	return o
}

func (o InMageAzureV2ProtectedDiskDetailsResponseArrayOutput) Index(i pulumi.IntInput) InMageAzureV2ProtectedDiskDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InMageAzureV2ProtectedDiskDetailsResponse {
		return vs[0].([]InMageAzureV2ProtectedDiskDetailsResponse)[vs[1].(int)]
	}).(InMageAzureV2ProtectedDiskDetailsResponseOutput)
}

// InMageAzureV2 provider specific settings
type InMageAzureV2ReplicationDetailsResponse struct {
	// Agent expiry date.
	AgentExpiryDate *string `pulumi:"agentExpiryDate"`
	// The agent version.
	AgentVersion *string `pulumi:"agentVersion"`
	// Azure VM Disk details.
	AzureVMDiskDetails []AzureVmDiskDetailsResponse `pulumi:"azureVMDiskDetails"`
	// The compressed data change rate in MB.
	CompressedDataRateInMB *float64 `pulumi:"compressedDataRateInMB"`
	// The data stores of the on-premise machine. Value can be list of strings that contain data store names.
	Datastores []string `pulumi:"datastores"`
	// A value indicating the discovery type of the machine. Value can be vCenter or physical.
	DiscoveryType *string `pulumi:"discoveryType"`
	// A value indicating whether any disk is resized for this VM.
	DiskResized *string `pulumi:"diskResized"`
	// The selected option to enable RDP\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum.
	EnableRdpOnTargetOption *string `pulumi:"enableRdpOnTargetOption"`
	// The infrastructure VM Id.
	InfrastructureVmId *string `pulumi:"infrastructureVmId"`
	// Gets the Instance type.
	InstanceType string `pulumi:"instanceType"`
	// The source IP address.
	IpAddress *string `pulumi:"ipAddress"`
	// A value indicating whether installed agent needs to be updated.
	IsAgentUpdateRequired *string `pulumi:"isAgentUpdateRequired"`
	// A value indicating whether the source server requires a restart after update.
	IsRebootAfterUpdateRequired *string `pulumi:"isRebootAfterUpdateRequired"`
	// The last heartbeat received from the source server.
	LastHeartbeat *string `pulumi:"lastHeartbeat"`
	// The last RPO calculated time.
	LastRpoCalculatedTime *string `pulumi:"lastRpoCalculatedTime"`
	// The last update time received from on-prem components.
	LastUpdateReceivedTime *string `pulumi:"lastUpdateReceivedTime"`
	// License Type of the VM to be used.
	LicenseType *string `pulumi:"licenseType"`
	// The master target Id.
	MasterTargetId *string `pulumi:"masterTargetId"`
	// The multi vm group Id.
	MultiVmGroupId *string `pulumi:"multiVmGroupId"`
	// The multi vm group name.
	MultiVmGroupName *string `pulumi:"multiVmGroupName"`
	// A value indicating whether multi vm sync is enabled or disabled.
	MultiVmSyncStatus *string `pulumi:"multiVmSyncStatus"`
	// The id of the disk containing the OS.
	OsDiskId *string `pulumi:"osDiskId"`
	// The type of the OS on the VM.
	OsType *string `pulumi:"osType"`
	// The OS Version of the protected item.
	OsVersion *string `pulumi:"osVersion"`
	// The process server Id.
	ProcessServerId *string `pulumi:"processServerId"`
	// The process server name.
	ProcessServerName string `pulumi:"processServerName"`
	// The list of protected disks.
	ProtectedDisks []InMageAzureV2ProtectedDiskDetailsResponse `pulumi:"protectedDisks"`
	// The list of protected managed disks.
	ProtectedManagedDisks []InMageAzureV2ManagedDiskDetailsResponse `pulumi:"protectedManagedDisks"`
	// The protection stage.
	ProtectionStage *string `pulumi:"protectionStage"`
	// The recovery availability set Id.
	RecoveryAvailabilitySetId *string `pulumi:"recoveryAvailabilitySetId"`
	// The ARM id of the log storage account used for replication. This will be set to null if no log storage account was provided during enable protection.
	RecoveryAzureLogStorageAccountId *string `pulumi:"recoveryAzureLogStorageAccountId"`
	// The target resource group Id.
	RecoveryAzureResourceGroupId *string `pulumi:"recoveryAzureResourceGroupId"`
	// The recovery Azure storage account.
	RecoveryAzureStorageAccount *string `pulumi:"recoveryAzureStorageAccount"`
	// Recovery Azure given name.
	RecoveryAzureVMName *string `pulumi:"recoveryAzureVMName"`
	// The Recovery Azure VM size.
	RecoveryAzureVMSize *string `pulumi:"recoveryAzureVMSize"`
	// The replica id of the protected item.
	ReplicaId *string `pulumi:"replicaId"`
	// The resync progress percentage.
	ResyncProgressPercentage *int `pulumi:"resyncProgressPercentage"`
	// The RPO in seconds.
	RpoInSeconds *int `pulumi:"rpoInSeconds"`
	// The selected recovery azure network Id.
	SelectedRecoveryAzureNetworkId *string `pulumi:"selectedRecoveryAzureNetworkId"`
	// The selected source nic Id which will be used as the primary nic during failover.
	SelectedSourceNicId *string `pulumi:"selectedSourceNicId"`
	// The test failover virtual network.
	SelectedTfoAzureNetworkId *string `pulumi:"selectedTfoAzureNetworkId"`
	// The CPU count of the VM on the primary side.
	SourceVmCpuCount *int `pulumi:"sourceVmCpuCount"`
	// The RAM size of the VM on the primary side.
	SourceVmRamSizeInMB *int `pulumi:"sourceVmRamSizeInMB"`
	// The target availability zone.
	TargetAvailabilityZone *string `pulumi:"targetAvailabilityZone"`
	// The target proximity placement group Id.
	TargetProximityPlacementGroupId *string `pulumi:"targetProximityPlacementGroupId"`
	// The ARM Id of the target Azure VM. This value will be null until the VM is failed over. Only after failure it will be populated with the ARM Id of the Azure VM.
	TargetVmId *string `pulumi:"targetVmId"`
	// The uncompressed data change rate in MB.
	UncompressedDataRateInMB *float64 `pulumi:"uncompressedDataRateInMB"`
	// A value indicating whether managed disks should be used during failover.
	UseManagedDisks *string `pulumi:"useManagedDisks"`
	// The vCenter infrastructure Id.
	VCenterInfrastructureId *string `pulumi:"vCenterInfrastructureId"`
	// The validation errors of the on-premise machine Value can be list of validation errors.
	ValidationErrors []HealthErrorResponse `pulumi:"validationErrors"`
	// The OS disk VHD name.
	VhdName *string `pulumi:"vhdName"`
	// The virtual machine Id.
	VmId *string `pulumi:"vmId"`
	// The PE Network details.
	VmNics []VMNicDetailsResponse `pulumi:"vmNics"`
	// The protection state for the vm.
	VmProtectionState *string `pulumi:"vmProtectionState"`
	// The protection state description for the vm.
	VmProtectionStateDescription *string `pulumi:"vmProtectionStateDescription"`
}

// InMageAzureV2 provider specific settings
type InMageAzureV2ReplicationDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMageAzureV2ReplicationDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageAzureV2ReplicationDetailsResponse)(nil)).Elem()
}

func (o InMageAzureV2ReplicationDetailsResponseOutput) ToInMageAzureV2ReplicationDetailsResponseOutput() InMageAzureV2ReplicationDetailsResponseOutput {
	return o
}

func (o InMageAzureV2ReplicationDetailsResponseOutput) ToInMageAzureV2ReplicationDetailsResponseOutputWithContext(ctx context.Context) InMageAzureV2ReplicationDetailsResponseOutput {
	return o
}

// Agent expiry date.
func (o InMageAzureV2ReplicationDetailsResponseOutput) AgentExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.AgentExpiryDate }).(pulumi.StringPtrOutput)
}

// The agent version.
func (o InMageAzureV2ReplicationDetailsResponseOutput) AgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.AgentVersion }).(pulumi.StringPtrOutput)
}

// Azure VM Disk details.
func (o InMageAzureV2ReplicationDetailsResponseOutput) AzureVMDiskDetails() AzureVmDiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) []AzureVmDiskDetailsResponse {
		return v.AzureVMDiskDetails
	}).(AzureVmDiskDetailsResponseArrayOutput)
}

// The compressed data change rate in MB.
func (o InMageAzureV2ReplicationDetailsResponseOutput) CompressedDataRateInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *float64 { return v.CompressedDataRateInMB }).(pulumi.Float64PtrOutput)
}

// The data stores of the on-premise machine. Value can be list of strings that contain data store names.
func (o InMageAzureV2ReplicationDetailsResponseOutput) Datastores() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) []string { return v.Datastores }).(pulumi.StringArrayOutput)
}

// A value indicating the discovery type of the machine. Value can be vCenter or physical.
func (o InMageAzureV2ReplicationDetailsResponseOutput) DiscoveryType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.DiscoveryType }).(pulumi.StringPtrOutput)
}

// A value indicating whether any disk is resized for this VM.
func (o InMageAzureV2ReplicationDetailsResponseOutput) DiskResized() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.DiskResized }).(pulumi.StringPtrOutput)
}

// The selected option to enable RDP\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum.
func (o InMageAzureV2ReplicationDetailsResponseOutput) EnableRdpOnTargetOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.EnableRdpOnTargetOption }).(pulumi.StringPtrOutput)
}

// The infrastructure VM Id.
func (o InMageAzureV2ReplicationDetailsResponseOutput) InfrastructureVmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.InfrastructureVmId }).(pulumi.StringPtrOutput)
}

// Gets the Instance type.
func (o InMageAzureV2ReplicationDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The source IP address.
func (o InMageAzureV2ReplicationDetailsResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// A value indicating whether installed agent needs to be updated.
func (o InMageAzureV2ReplicationDetailsResponseOutput) IsAgentUpdateRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.IsAgentUpdateRequired }).(pulumi.StringPtrOutput)
}

// A value indicating whether the source server requires a restart after update.
func (o InMageAzureV2ReplicationDetailsResponseOutput) IsRebootAfterUpdateRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.IsRebootAfterUpdateRequired }).(pulumi.StringPtrOutput)
}

// The last heartbeat received from the source server.
func (o InMageAzureV2ReplicationDetailsResponseOutput) LastHeartbeat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.LastHeartbeat }).(pulumi.StringPtrOutput)
}

// The last RPO calculated time.
func (o InMageAzureV2ReplicationDetailsResponseOutput) LastRpoCalculatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.LastRpoCalculatedTime }).(pulumi.StringPtrOutput)
}

// The last update time received from on-prem components.
func (o InMageAzureV2ReplicationDetailsResponseOutput) LastUpdateReceivedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.LastUpdateReceivedTime }).(pulumi.StringPtrOutput)
}

// License Type of the VM to be used.
func (o InMageAzureV2ReplicationDetailsResponseOutput) LicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.LicenseType }).(pulumi.StringPtrOutput)
}

// The master target Id.
func (o InMageAzureV2ReplicationDetailsResponseOutput) MasterTargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.MasterTargetId }).(pulumi.StringPtrOutput)
}

// The multi vm group Id.
func (o InMageAzureV2ReplicationDetailsResponseOutput) MultiVmGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.MultiVmGroupId }).(pulumi.StringPtrOutput)
}

// The multi vm group name.
func (o InMageAzureV2ReplicationDetailsResponseOutput) MultiVmGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.MultiVmGroupName }).(pulumi.StringPtrOutput)
}

// A value indicating whether multi vm sync is enabled or disabled.
func (o InMageAzureV2ReplicationDetailsResponseOutput) MultiVmSyncStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.MultiVmSyncStatus }).(pulumi.StringPtrOutput)
}

// The id of the disk containing the OS.
func (o InMageAzureV2ReplicationDetailsResponseOutput) OsDiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.OsDiskId }).(pulumi.StringPtrOutput)
}

// The type of the OS on the VM.
func (o InMageAzureV2ReplicationDetailsResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// The OS Version of the protected item.
func (o InMageAzureV2ReplicationDetailsResponseOutput) OsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.OsVersion }).(pulumi.StringPtrOutput)
}

// The process server Id.
func (o InMageAzureV2ReplicationDetailsResponseOutput) ProcessServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.ProcessServerId }).(pulumi.StringPtrOutput)
}

// The process server name.
func (o InMageAzureV2ReplicationDetailsResponseOutput) ProcessServerName() pulumi.StringOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) string { return v.ProcessServerName }).(pulumi.StringOutput)
}

// The list of protected disks.
func (o InMageAzureV2ReplicationDetailsResponseOutput) ProtectedDisks() InMageAzureV2ProtectedDiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) []InMageAzureV2ProtectedDiskDetailsResponse {
		return v.ProtectedDisks
	}).(InMageAzureV2ProtectedDiskDetailsResponseArrayOutput)
}

// The list of protected managed disks.
func (o InMageAzureV2ReplicationDetailsResponseOutput) ProtectedManagedDisks() InMageAzureV2ManagedDiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) []InMageAzureV2ManagedDiskDetailsResponse {
		return v.ProtectedManagedDisks
	}).(InMageAzureV2ManagedDiskDetailsResponseArrayOutput)
}

// The protection stage.
func (o InMageAzureV2ReplicationDetailsResponseOutput) ProtectionStage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.ProtectionStage }).(pulumi.StringPtrOutput)
}

// The recovery availability set Id.
func (o InMageAzureV2ReplicationDetailsResponseOutput) RecoveryAvailabilitySetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.RecoveryAvailabilitySetId }).(pulumi.StringPtrOutput)
}

// The ARM id of the log storage account used for replication. This will be set to null if no log storage account was provided during enable protection.
func (o InMageAzureV2ReplicationDetailsResponseOutput) RecoveryAzureLogStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.RecoveryAzureLogStorageAccountId }).(pulumi.StringPtrOutput)
}

// The target resource group Id.
func (o InMageAzureV2ReplicationDetailsResponseOutput) RecoveryAzureResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.RecoveryAzureResourceGroupId }).(pulumi.StringPtrOutput)
}

// The recovery Azure storage account.
func (o InMageAzureV2ReplicationDetailsResponseOutput) RecoveryAzureStorageAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.RecoveryAzureStorageAccount }).(pulumi.StringPtrOutput)
}

// Recovery Azure given name.
func (o InMageAzureV2ReplicationDetailsResponseOutput) RecoveryAzureVMName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.RecoveryAzureVMName }).(pulumi.StringPtrOutput)
}

// The Recovery Azure VM size.
func (o InMageAzureV2ReplicationDetailsResponseOutput) RecoveryAzureVMSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.RecoveryAzureVMSize }).(pulumi.StringPtrOutput)
}

// The replica id of the protected item.
func (o InMageAzureV2ReplicationDetailsResponseOutput) ReplicaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.ReplicaId }).(pulumi.StringPtrOutput)
}

// The resync progress percentage.
func (o InMageAzureV2ReplicationDetailsResponseOutput) ResyncProgressPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *int { return v.ResyncProgressPercentage }).(pulumi.IntPtrOutput)
}

// The RPO in seconds.
func (o InMageAzureV2ReplicationDetailsResponseOutput) RpoInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *int { return v.RpoInSeconds }).(pulumi.IntPtrOutput)
}

// The selected recovery azure network Id.
func (o InMageAzureV2ReplicationDetailsResponseOutput) SelectedRecoveryAzureNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.SelectedRecoveryAzureNetworkId }).(pulumi.StringPtrOutput)
}

// The selected source nic Id which will be used as the primary nic during failover.
func (o InMageAzureV2ReplicationDetailsResponseOutput) SelectedSourceNicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.SelectedSourceNicId }).(pulumi.StringPtrOutput)
}

// The test failover virtual network.
func (o InMageAzureV2ReplicationDetailsResponseOutput) SelectedTfoAzureNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.SelectedTfoAzureNetworkId }).(pulumi.StringPtrOutput)
}

// The CPU count of the VM on the primary side.
func (o InMageAzureV2ReplicationDetailsResponseOutput) SourceVmCpuCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *int { return v.SourceVmCpuCount }).(pulumi.IntPtrOutput)
}

// The RAM size of the VM on the primary side.
func (o InMageAzureV2ReplicationDetailsResponseOutput) SourceVmRamSizeInMB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *int { return v.SourceVmRamSizeInMB }).(pulumi.IntPtrOutput)
}

// The target availability zone.
func (o InMageAzureV2ReplicationDetailsResponseOutput) TargetAvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.TargetAvailabilityZone }).(pulumi.StringPtrOutput)
}

// The target proximity placement group Id.
func (o InMageAzureV2ReplicationDetailsResponseOutput) TargetProximityPlacementGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.TargetProximityPlacementGroupId }).(pulumi.StringPtrOutput)
}

// The ARM Id of the target Azure VM. This value will be null until the VM is failed over. Only after failure it will be populated with the ARM Id of the Azure VM.
func (o InMageAzureV2ReplicationDetailsResponseOutput) TargetVmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.TargetVmId }).(pulumi.StringPtrOutput)
}

// The uncompressed data change rate in MB.
func (o InMageAzureV2ReplicationDetailsResponseOutput) UncompressedDataRateInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *float64 { return v.UncompressedDataRateInMB }).(pulumi.Float64PtrOutput)
}

// A value indicating whether managed disks should be used during failover.
func (o InMageAzureV2ReplicationDetailsResponseOutput) UseManagedDisks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.UseManagedDisks }).(pulumi.StringPtrOutput)
}

// The vCenter infrastructure Id.
func (o InMageAzureV2ReplicationDetailsResponseOutput) VCenterInfrastructureId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.VCenterInfrastructureId }).(pulumi.StringPtrOutput)
}

// The validation errors of the on-premise machine Value can be list of validation errors.
func (o InMageAzureV2ReplicationDetailsResponseOutput) ValidationErrors() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) []HealthErrorResponse { return v.ValidationErrors }).(HealthErrorResponseArrayOutput)
}

// The OS disk VHD name.
func (o InMageAzureV2ReplicationDetailsResponseOutput) VhdName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.VhdName }).(pulumi.StringPtrOutput)
}

// The virtual machine Id.
func (o InMageAzureV2ReplicationDetailsResponseOutput) VmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.VmId }).(pulumi.StringPtrOutput)
}

// The PE Network details.
func (o InMageAzureV2ReplicationDetailsResponseOutput) VmNics() VMNicDetailsResponseArrayOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) []VMNicDetailsResponse { return v.VmNics }).(VMNicDetailsResponseArrayOutput)
}

// The protection state for the vm.
func (o InMageAzureV2ReplicationDetailsResponseOutput) VmProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.VmProtectionState }).(pulumi.StringPtrOutput)
}

// The protection state description for the vm.
func (o InMageAzureV2ReplicationDetailsResponseOutput) VmProtectionStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.VmProtectionStateDescription }).(pulumi.StringPtrOutput)
}

// Base class for the policies of providers using InMage replication.
type InMageBasePolicyDetailsResponse struct {
	// The app consistent snapshot frequency in minutes.
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// Gets the class type. Overridden in derived classes.
	InstanceType string `pulumi:"instanceType"`
	// A value indicating whether multi-VM sync has to be enabled.
	MultiVmSyncStatus *string `pulumi:"multiVmSyncStatus"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistory *int `pulumi:"recoveryPointHistory"`
	// The recovery point threshold in minutes.
	RecoveryPointThresholdInMinutes *int `pulumi:"recoveryPointThresholdInMinutes"`
}

// Base class for the policies of providers using InMage replication.
type InMageBasePolicyDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMageBasePolicyDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageBasePolicyDetailsResponse)(nil)).Elem()
}

func (o InMageBasePolicyDetailsResponseOutput) ToInMageBasePolicyDetailsResponseOutput() InMageBasePolicyDetailsResponseOutput {
	return o
}

func (o InMageBasePolicyDetailsResponseOutput) ToInMageBasePolicyDetailsResponseOutputWithContext(ctx context.Context) InMageBasePolicyDetailsResponseOutput {
	return o
}

// The app consistent snapshot frequency in minutes.
func (o InMageBasePolicyDetailsResponseOutput) AppConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageBasePolicyDetailsResponse) *int { return v.AppConsistentFrequencyInMinutes }).(pulumi.IntPtrOutput)
}

// Gets the class type. Overridden in derived classes.
func (o InMageBasePolicyDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v InMageBasePolicyDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// A value indicating whether multi-VM sync has to be enabled.
func (o InMageBasePolicyDetailsResponseOutput) MultiVmSyncStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageBasePolicyDetailsResponse) *string { return v.MultiVmSyncStatus }).(pulumi.StringPtrOutput)
}

// The duration in minutes until which the recovery points need to be stored.
func (o InMageBasePolicyDetailsResponseOutput) RecoveryPointHistory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageBasePolicyDetailsResponse) *int { return v.RecoveryPointHistory }).(pulumi.IntPtrOutput)
}

// The recovery point threshold in minutes.
func (o InMageBasePolicyDetailsResponseOutput) RecoveryPointThresholdInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageBasePolicyDetailsResponse) *int { return v.RecoveryPointThresholdInMinutes }).(pulumi.IntPtrOutput)
}

// DiskExclusionInput when doing enable protection of virtual machine in InMage provider.
type InMageDiskExclusionInput struct {
	// The guest disk signature based option for disk exclusion.
	DiskSignatureOptions []InMageDiskSignatureExclusionOptions `pulumi:"diskSignatureOptions"`
	// The volume label based option for disk exclusion.
	VolumeOptions []InMageVolumeExclusionOptions `pulumi:"volumeOptions"`
}

// InMageDiskExclusionInputInput is an input type that accepts InMageDiskExclusionInputArgs and InMageDiskExclusionInputOutput values.
// You can construct a concrete instance of `InMageDiskExclusionInputInput` via:
//
//          InMageDiskExclusionInputArgs{...}
type InMageDiskExclusionInputInput interface {
	pulumi.Input

	ToInMageDiskExclusionInputOutput() InMageDiskExclusionInputOutput
	ToInMageDiskExclusionInputOutputWithContext(context.Context) InMageDiskExclusionInputOutput
}

// DiskExclusionInput when doing enable protection of virtual machine in InMage provider.
type InMageDiskExclusionInputArgs struct {
	// The guest disk signature based option for disk exclusion.
	DiskSignatureOptions InMageDiskSignatureExclusionOptionsArrayInput `pulumi:"diskSignatureOptions"`
	// The volume label based option for disk exclusion.
	VolumeOptions InMageVolumeExclusionOptionsArrayInput `pulumi:"volumeOptions"`
}

func (InMageDiskExclusionInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageDiskExclusionInput)(nil)).Elem()
}

func (i InMageDiskExclusionInputArgs) ToInMageDiskExclusionInputOutput() InMageDiskExclusionInputOutput {
	return i.ToInMageDiskExclusionInputOutputWithContext(context.Background())
}

func (i InMageDiskExclusionInputArgs) ToInMageDiskExclusionInputOutputWithContext(ctx context.Context) InMageDiskExclusionInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageDiskExclusionInputOutput)
}

func (i InMageDiskExclusionInputArgs) ToInMageDiskExclusionInputPtrOutput() InMageDiskExclusionInputPtrOutput {
	return i.ToInMageDiskExclusionInputPtrOutputWithContext(context.Background())
}

func (i InMageDiskExclusionInputArgs) ToInMageDiskExclusionInputPtrOutputWithContext(ctx context.Context) InMageDiskExclusionInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageDiskExclusionInputOutput).ToInMageDiskExclusionInputPtrOutputWithContext(ctx)
}

// InMageDiskExclusionInputPtrInput is an input type that accepts InMageDiskExclusionInputArgs, InMageDiskExclusionInputPtr and InMageDiskExclusionInputPtrOutput values.
// You can construct a concrete instance of `InMageDiskExclusionInputPtrInput` via:
//
//          InMageDiskExclusionInputArgs{...}
//
//  or:
//
//          nil
type InMageDiskExclusionInputPtrInput interface {
	pulumi.Input

	ToInMageDiskExclusionInputPtrOutput() InMageDiskExclusionInputPtrOutput
	ToInMageDiskExclusionInputPtrOutputWithContext(context.Context) InMageDiskExclusionInputPtrOutput
}

type inMageDiskExclusionInputPtrType InMageDiskExclusionInputArgs

func InMageDiskExclusionInputPtr(v *InMageDiskExclusionInputArgs) InMageDiskExclusionInputPtrInput {
	return (*inMageDiskExclusionInputPtrType)(v)
}

func (*inMageDiskExclusionInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InMageDiskExclusionInput)(nil)).Elem()
}

func (i *inMageDiskExclusionInputPtrType) ToInMageDiskExclusionInputPtrOutput() InMageDiskExclusionInputPtrOutput {
	return i.ToInMageDiskExclusionInputPtrOutputWithContext(context.Background())
}

func (i *inMageDiskExclusionInputPtrType) ToInMageDiskExclusionInputPtrOutputWithContext(ctx context.Context) InMageDiskExclusionInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageDiskExclusionInputPtrOutput)
}

// Guest disk signature based disk exclusion option when doing enable protection of virtual machine in InMage provider.
type InMageDiskSignatureExclusionOptions struct {
	// The guest signature of disk to be excluded from replication.
	DiskSignature *string `pulumi:"diskSignature"`
}

// InMageDiskSignatureExclusionOptionsInput is an input type that accepts InMageDiskSignatureExclusionOptionsArgs and InMageDiskSignatureExclusionOptionsOutput values.
// You can construct a concrete instance of `InMageDiskSignatureExclusionOptionsInput` via:
//
//          InMageDiskSignatureExclusionOptionsArgs{...}
type InMageDiskSignatureExclusionOptionsInput interface {
	pulumi.Input

	ToInMageDiskSignatureExclusionOptionsOutput() InMageDiskSignatureExclusionOptionsOutput
	ToInMageDiskSignatureExclusionOptionsOutputWithContext(context.Context) InMageDiskSignatureExclusionOptionsOutput
}

// Guest disk signature based disk exclusion option when doing enable protection of virtual machine in InMage provider.
type InMageDiskSignatureExclusionOptionsArgs struct {
	// The guest signature of disk to be excluded from replication.
	DiskSignature pulumi.StringPtrInput `pulumi:"diskSignature"`
}

func (InMageDiskSignatureExclusionOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageDiskSignatureExclusionOptions)(nil)).Elem()
}

func (i InMageDiskSignatureExclusionOptionsArgs) ToInMageDiskSignatureExclusionOptionsOutput() InMageDiskSignatureExclusionOptionsOutput {
	return i.ToInMageDiskSignatureExclusionOptionsOutputWithContext(context.Background())
}

func (i InMageDiskSignatureExclusionOptionsArgs) ToInMageDiskSignatureExclusionOptionsOutputWithContext(ctx context.Context) InMageDiskSignatureExclusionOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageDiskSignatureExclusionOptionsOutput)
}

// InMageDiskSignatureExclusionOptionsArrayInput is an input type that accepts InMageDiskSignatureExclusionOptionsArray and InMageDiskSignatureExclusionOptionsArrayOutput values.
// You can construct a concrete instance of `InMageDiskSignatureExclusionOptionsArrayInput` via:
//
//          InMageDiskSignatureExclusionOptionsArray{ InMageDiskSignatureExclusionOptionsArgs{...} }
type InMageDiskSignatureExclusionOptionsArrayInput interface {
	pulumi.Input

	ToInMageDiskSignatureExclusionOptionsArrayOutput() InMageDiskSignatureExclusionOptionsArrayOutput
	ToInMageDiskSignatureExclusionOptionsArrayOutputWithContext(context.Context) InMageDiskSignatureExclusionOptionsArrayOutput
}

type InMageDiskSignatureExclusionOptionsArray []InMageDiskSignatureExclusionOptionsInput

func (InMageDiskSignatureExclusionOptionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InMageDiskSignatureExclusionOptions)(nil)).Elem()
}

func (i InMageDiskSignatureExclusionOptionsArray) ToInMageDiskSignatureExclusionOptionsArrayOutput() InMageDiskSignatureExclusionOptionsArrayOutput {
	return i.ToInMageDiskSignatureExclusionOptionsArrayOutputWithContext(context.Background())
}

func (i InMageDiskSignatureExclusionOptionsArray) ToInMageDiskSignatureExclusionOptionsArrayOutputWithContext(ctx context.Context) InMageDiskSignatureExclusionOptionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageDiskSignatureExclusionOptionsArrayOutput)
}

// VMware Azure specific enable protection input.
type InMageEnableProtectionInput struct {
	// The target data store name.
	DatastoreName *string `pulumi:"datastoreName"`
	// The enable disk exclusion input.
	DiskExclusionInput *InMageDiskExclusionInput `pulumi:"diskExclusionInput"`
	// The disks to include list.
	DisksToInclude []string `pulumi:"disksToInclude"`
	// The class type.
	InstanceType *string `pulumi:"instanceType"`
	// The Master Target Id.
	MasterTargetId string `pulumi:"masterTargetId"`
	// The multi vm group Id.
	MultiVmGroupId string `pulumi:"multiVmGroupId"`
	// The multi vm group name.
	MultiVmGroupName string `pulumi:"multiVmGroupName"`
	// The Process Server Id.
	ProcessServerId string `pulumi:"processServerId"`
	// The retention drive to use on the MT.
	RetentionDrive string `pulumi:"retentionDrive"`
	// The CS account Id.
	RunAsAccountId *string `pulumi:"runAsAccountId"`
	// The Vm Name.
	VmFriendlyName *string `pulumi:"vmFriendlyName"`
}

// InMageEnableProtectionInputInput is an input type that accepts InMageEnableProtectionInputArgs and InMageEnableProtectionInputOutput values.
// You can construct a concrete instance of `InMageEnableProtectionInputInput` via:
//
//          InMageEnableProtectionInputArgs{...}
type InMageEnableProtectionInputInput interface {
	pulumi.Input

	ToInMageEnableProtectionInputOutput() InMageEnableProtectionInputOutput
	ToInMageEnableProtectionInputOutputWithContext(context.Context) InMageEnableProtectionInputOutput
}

// VMware Azure specific enable protection input.
type InMageEnableProtectionInputArgs struct {
	// The target data store name.
	DatastoreName pulumi.StringPtrInput `pulumi:"datastoreName"`
	// The enable disk exclusion input.
	DiskExclusionInput InMageDiskExclusionInputPtrInput `pulumi:"diskExclusionInput"`
	// The disks to include list.
	DisksToInclude pulumi.StringArrayInput `pulumi:"disksToInclude"`
	// The class type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// The Master Target Id.
	MasterTargetId pulumi.StringInput `pulumi:"masterTargetId"`
	// The multi vm group Id.
	MultiVmGroupId pulumi.StringInput `pulumi:"multiVmGroupId"`
	// The multi vm group name.
	MultiVmGroupName pulumi.StringInput `pulumi:"multiVmGroupName"`
	// The Process Server Id.
	ProcessServerId pulumi.StringInput `pulumi:"processServerId"`
	// The retention drive to use on the MT.
	RetentionDrive pulumi.StringInput `pulumi:"retentionDrive"`
	// The CS account Id.
	RunAsAccountId pulumi.StringPtrInput `pulumi:"runAsAccountId"`
	// The Vm Name.
	VmFriendlyName pulumi.StringPtrInput `pulumi:"vmFriendlyName"`
}

func (InMageEnableProtectionInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageEnableProtectionInput)(nil)).Elem()
}

func (i InMageEnableProtectionInputArgs) ToInMageEnableProtectionInputOutput() InMageEnableProtectionInputOutput {
	return i.ToInMageEnableProtectionInputOutputWithContext(context.Background())
}

func (i InMageEnableProtectionInputArgs) ToInMageEnableProtectionInputOutputWithContext(ctx context.Context) InMageEnableProtectionInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageEnableProtectionInputOutput)
}

// InMage specific protection profile details.
type InMagePolicyDetailsResponse struct {
	// The app consistent snapshot frequency in minutes.
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// Gets the class type. Overridden in derived classes.
	InstanceType string `pulumi:"instanceType"`
	// A value indicating whether multi-VM sync has to be enabled.
	MultiVmSyncStatus *string `pulumi:"multiVmSyncStatus"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistory *int `pulumi:"recoveryPointHistory"`
	// The recovery point threshold in minutes.
	RecoveryPointThresholdInMinutes *int `pulumi:"recoveryPointThresholdInMinutes"`
}

// InMage specific protection profile details.
type InMagePolicyDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMagePolicyDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMagePolicyDetailsResponse)(nil)).Elem()
}

func (o InMagePolicyDetailsResponseOutput) ToInMagePolicyDetailsResponseOutput() InMagePolicyDetailsResponseOutput {
	return o
}

func (o InMagePolicyDetailsResponseOutput) ToInMagePolicyDetailsResponseOutputWithContext(ctx context.Context) InMagePolicyDetailsResponseOutput {
	return o
}

// The app consistent snapshot frequency in minutes.
func (o InMagePolicyDetailsResponseOutput) AppConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMagePolicyDetailsResponse) *int { return v.AppConsistentFrequencyInMinutes }).(pulumi.IntPtrOutput)
}

// Gets the class type. Overridden in derived classes.
func (o InMagePolicyDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v InMagePolicyDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// A value indicating whether multi-VM sync has to be enabled.
func (o InMagePolicyDetailsResponseOutput) MultiVmSyncStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMagePolicyDetailsResponse) *string { return v.MultiVmSyncStatus }).(pulumi.StringPtrOutput)
}

// The duration in minutes until which the recovery points need to be stored.
func (o InMagePolicyDetailsResponseOutput) RecoveryPointHistory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMagePolicyDetailsResponse) *int { return v.RecoveryPointHistory }).(pulumi.IntPtrOutput)
}

// The recovery point threshold in minutes.
func (o InMagePolicyDetailsResponseOutput) RecoveryPointThresholdInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMagePolicyDetailsResponse) *int { return v.RecoveryPointThresholdInMinutes }).(pulumi.IntPtrOutput)
}

// VMWare Azure specific protection profile Input.
type InMagePolicyInput struct {
	// The app consistent snapshot frequency (in minutes).
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// The class type.
	InstanceType *string `pulumi:"instanceType"`
	// A value indicating whether multi-VM sync has to be enabled. Value should be 'Enabled' or 'Disabled'.
	MultiVmSyncStatus string `pulumi:"multiVmSyncStatus"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistory *int `pulumi:"recoveryPointHistory"`
	// The recovery point threshold in minutes.
	RecoveryPointThresholdInMinutes *int `pulumi:"recoveryPointThresholdInMinutes"`
}

// InMagePolicyInputInput is an input type that accepts InMagePolicyInputArgs and InMagePolicyInputOutput values.
// You can construct a concrete instance of `InMagePolicyInputInput` via:
//
//          InMagePolicyInputArgs{...}
type InMagePolicyInputInput interface {
	pulumi.Input

	ToInMagePolicyInputOutput() InMagePolicyInputOutput
	ToInMagePolicyInputOutputWithContext(context.Context) InMagePolicyInputOutput
}

// VMWare Azure specific protection profile Input.
type InMagePolicyInputArgs struct {
	// The app consistent snapshot frequency (in minutes).
	AppConsistentFrequencyInMinutes pulumi.IntPtrInput `pulumi:"appConsistentFrequencyInMinutes"`
	// The class type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// A value indicating whether multi-VM sync has to be enabled. Value should be 'Enabled' or 'Disabled'.
	MultiVmSyncStatus pulumi.StringInput `pulumi:"multiVmSyncStatus"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistory pulumi.IntPtrInput `pulumi:"recoveryPointHistory"`
	// The recovery point threshold in minutes.
	RecoveryPointThresholdInMinutes pulumi.IntPtrInput `pulumi:"recoveryPointThresholdInMinutes"`
}

func (InMagePolicyInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InMagePolicyInput)(nil)).Elem()
}

func (i InMagePolicyInputArgs) ToInMagePolicyInputOutput() InMagePolicyInputOutput {
	return i.ToInMagePolicyInputOutputWithContext(context.Background())
}

func (i InMagePolicyInputArgs) ToInMagePolicyInputOutputWithContext(ctx context.Context) InMagePolicyInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMagePolicyInputOutput)
}

// InMage protected disk details.
type InMageProtectedDiskDetailsResponse struct {
	// The disk capacity in bytes.
	DiskCapacityInBytes *int `pulumi:"diskCapacityInBytes"`
	// The disk id.
	DiskId *string `pulumi:"diskId"`
	// The disk name.
	DiskName *string `pulumi:"diskName"`
	// A value indicating whether disk is resized.
	DiskResized *string `pulumi:"diskResized"`
	// The file system capacity in bytes.
	FileSystemCapacityInBytes *int `pulumi:"fileSystemCapacityInBytes"`
	// The health error code for the disk.
	HealthErrorCode *string `pulumi:"healthErrorCode"`
	// The last RPO calculated time.
	LastRpoCalculatedTime *string `pulumi:"lastRpoCalculatedTime"`
	// The protection stage.
	ProtectionStage *string `pulumi:"protectionStage"`
	// The PS data transit in MB.
	PsDataInMB *float64 `pulumi:"psDataInMB"`
	// The resync duration in seconds.
	ResyncDurationInSeconds *int `pulumi:"resyncDurationInSeconds"`
	// The resync progress percentage.
	ResyncProgressPercentage *int `pulumi:"resyncProgressPercentage"`
	// A value indicating whether resync is required for this disk.
	ResyncRequired *string `pulumi:"resyncRequired"`
	// The RPO in seconds.
	RpoInSeconds *int `pulumi:"rpoInSeconds"`
	// The source data transit in MB.
	SourceDataInMB *float64 `pulumi:"sourceDataInMB"`
	// The target data transit in MB.
	TargetDataInMB *float64 `pulumi:"targetDataInMB"`
}

// InMage protected disk details.
type InMageProtectedDiskDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMageProtectedDiskDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageProtectedDiskDetailsResponse)(nil)).Elem()
}

func (o InMageProtectedDiskDetailsResponseOutput) ToInMageProtectedDiskDetailsResponseOutput() InMageProtectedDiskDetailsResponseOutput {
	return o
}

func (o InMageProtectedDiskDetailsResponseOutput) ToInMageProtectedDiskDetailsResponseOutputWithContext(ctx context.Context) InMageProtectedDiskDetailsResponseOutput {
	return o
}

// The disk capacity in bytes.
func (o InMageProtectedDiskDetailsResponseOutput) DiskCapacityInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *int { return v.DiskCapacityInBytes }).(pulumi.IntPtrOutput)
}

// The disk id.
func (o InMageProtectedDiskDetailsResponseOutput) DiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *string { return v.DiskId }).(pulumi.StringPtrOutput)
}

// The disk name.
func (o InMageProtectedDiskDetailsResponseOutput) DiskName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *string { return v.DiskName }).(pulumi.StringPtrOutput)
}

// A value indicating whether disk is resized.
func (o InMageProtectedDiskDetailsResponseOutput) DiskResized() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *string { return v.DiskResized }).(pulumi.StringPtrOutput)
}

// The file system capacity in bytes.
func (o InMageProtectedDiskDetailsResponseOutput) FileSystemCapacityInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *int { return v.FileSystemCapacityInBytes }).(pulumi.IntPtrOutput)
}

// The health error code for the disk.
func (o InMageProtectedDiskDetailsResponseOutput) HealthErrorCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *string { return v.HealthErrorCode }).(pulumi.StringPtrOutput)
}

// The last RPO calculated time.
func (o InMageProtectedDiskDetailsResponseOutput) LastRpoCalculatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *string { return v.LastRpoCalculatedTime }).(pulumi.StringPtrOutput)
}

// The protection stage.
func (o InMageProtectedDiskDetailsResponseOutput) ProtectionStage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *string { return v.ProtectionStage }).(pulumi.StringPtrOutput)
}

// The PS data transit in MB.
func (o InMageProtectedDiskDetailsResponseOutput) PsDataInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *float64 { return v.PsDataInMB }).(pulumi.Float64PtrOutput)
}

// The resync duration in seconds.
func (o InMageProtectedDiskDetailsResponseOutput) ResyncDurationInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *int { return v.ResyncDurationInSeconds }).(pulumi.IntPtrOutput)
}

// The resync progress percentage.
func (o InMageProtectedDiskDetailsResponseOutput) ResyncProgressPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *int { return v.ResyncProgressPercentage }).(pulumi.IntPtrOutput)
}

// A value indicating whether resync is required for this disk.
func (o InMageProtectedDiskDetailsResponseOutput) ResyncRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *string { return v.ResyncRequired }).(pulumi.StringPtrOutput)
}

// The RPO in seconds.
func (o InMageProtectedDiskDetailsResponseOutput) RpoInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *int { return v.RpoInSeconds }).(pulumi.IntPtrOutput)
}

// The source data transit in MB.
func (o InMageProtectedDiskDetailsResponseOutput) SourceDataInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *float64 { return v.SourceDataInMB }).(pulumi.Float64PtrOutput)
}

// The target data transit in MB.
func (o InMageProtectedDiskDetailsResponseOutput) TargetDataInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *float64 { return v.TargetDataInMB }).(pulumi.Float64PtrOutput)
}

type InMageProtectedDiskDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (InMageProtectedDiskDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InMageProtectedDiskDetailsResponse)(nil)).Elem()
}

func (o InMageProtectedDiskDetailsResponseArrayOutput) ToInMageProtectedDiskDetailsResponseArrayOutput() InMageProtectedDiskDetailsResponseArrayOutput {
	return o
}

func (o InMageProtectedDiskDetailsResponseArrayOutput) ToInMageProtectedDiskDetailsResponseArrayOutputWithContext(ctx context.Context) InMageProtectedDiskDetailsResponseArrayOutput {
	return o
}

func (o InMageProtectedDiskDetailsResponseArrayOutput) Index(i pulumi.IntInput) InMageProtectedDiskDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InMageProtectedDiskDetailsResponse {
		return vs[0].([]InMageProtectedDiskDetailsResponse)[vs[1].(int)]
	}).(InMageProtectedDiskDetailsResponseOutput)
}

// InMage provider specific settings
type InMageReplicationDetailsResponse struct {
	// The active location of the VM. If the VM is being protected from Azure, this field will take values from { Azure, OnPrem }. If the VM is being protected between two data-centers, this field will be OnPrem always.
	ActiveSiteType *string `pulumi:"activeSiteType"`
	// The agent details.
	AgentDetails *InMageAgentDetailsResponse `pulumi:"agentDetails"`
	// A value indicating the underlying Azure storage account. If the VM is not running in Azure, this value shall be set to null.
	AzureStorageAccountId *string `pulumi:"azureStorageAccountId"`
	// The compressed data change rate in MB.
	CompressedDataRateInMB *float64 `pulumi:"compressedDataRateInMB"`
	// The collection of Consistency points.
	ConsistencyPoints map[string]string `pulumi:"consistencyPoints"`
	// The data stores of the on-premise machine Value can be list of strings that contain data store names
	Datastores []string `pulumi:"datastores"`
	// A value indicating the discovery type of the machine.
	DiscoveryType *string `pulumi:"discoveryType"`
	// A value indicating whether any disk is resized for this VM.
	DiskResized *string `pulumi:"diskResized"`
	// The infrastructure VM Id.
	InfrastructureVmId *string `pulumi:"infrastructureVmId"`
	// Gets the Instance type.
	InstanceType string `pulumi:"instanceType"`
	// The source IP address.
	IpAddress *string `pulumi:"ipAddress"`
	// The last heartbeat received from the source server.
	LastHeartbeat *string `pulumi:"lastHeartbeat"`
	// The last RPO calculated time.
	LastRpoCalculatedTime *string `pulumi:"lastRpoCalculatedTime"`
	// The last update time received from on-prem components.
	LastUpdateReceivedTime *string `pulumi:"lastUpdateReceivedTime"`
	// The master target Id.
	MasterTargetId *string `pulumi:"masterTargetId"`
	// The multi vm group Id, if any.
	MultiVmGroupId *string `pulumi:"multiVmGroupId"`
	// The multi vm group name, if any.
	MultiVmGroupName *string `pulumi:"multiVmGroupName"`
	// A value indicating whether the multi vm sync is enabled or disabled.
	MultiVmSyncStatus *string `pulumi:"multiVmSyncStatus"`
	// The OS details.
	OsDetails *OSDiskDetailsResponse `pulumi:"osDetails"`
	// The OS Version of the protected item.
	OsVersion *string `pulumi:"osVersion"`
	// The process server Id.
	ProcessServerId *string `pulumi:"processServerId"`
	// The list of protected disks.
	ProtectedDisks []InMageProtectedDiskDetailsResponse `pulumi:"protectedDisks"`
	// The protection stage.
	ProtectionStage *string `pulumi:"protectionStage"`
	// A value indicating whether the source server requires a restart after update.
	RebootAfterUpdateStatus *string `pulumi:"rebootAfterUpdateStatus"`
	// The replica id of the protected item.
	ReplicaId *string `pulumi:"replicaId"`
	// The resync details of the machine
	ResyncDetails *InitialReplicationDetailsResponse `pulumi:"resyncDetails"`
	// The retention window end time.
	RetentionWindowEnd *string `pulumi:"retentionWindowEnd"`
	// The retention window start time.
	RetentionWindowStart *string `pulumi:"retentionWindowStart"`
	// The RPO in seconds.
	RpoInSeconds *int `pulumi:"rpoInSeconds"`
	// The CPU count of the VM on the primary side.
	SourceVmCpuCount *int `pulumi:"sourceVmCpuCount"`
	// The RAM size of the VM on the primary side.
	SourceVmRamSizeInMB *int `pulumi:"sourceVmRamSizeInMB"`
	// The uncompressed data change rate in MB.
	UncompressedDataRateInMB *float64 `pulumi:"uncompressedDataRateInMB"`
	// The vCenter infrastructure Id.
	VCenterInfrastructureId *string `pulumi:"vCenterInfrastructureId"`
	// The validation errors of the on-premise machine Value can be list of validation errors
	ValidationErrors []HealthErrorResponse `pulumi:"validationErrors"`
	// The virtual machine Id.
	VmId *string `pulumi:"vmId"`
	// The PE Network details.
	VmNics []VMNicDetailsResponse `pulumi:"vmNics"`
	// The protection state for the vm.
	VmProtectionState *string `pulumi:"vmProtectionState"`
	// The protection state description for the vm.
	VmProtectionStateDescription *string `pulumi:"vmProtectionStateDescription"`
}

// InMage provider specific settings
type InMageReplicationDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMageReplicationDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageReplicationDetailsResponse)(nil)).Elem()
}

func (o InMageReplicationDetailsResponseOutput) ToInMageReplicationDetailsResponseOutput() InMageReplicationDetailsResponseOutput {
	return o
}

func (o InMageReplicationDetailsResponseOutput) ToInMageReplicationDetailsResponseOutputWithContext(ctx context.Context) InMageReplicationDetailsResponseOutput {
	return o
}

// The active location of the VM. If the VM is being protected from Azure, this field will take values from { Azure, OnPrem }. If the VM is being protected between two data-centers, this field will be OnPrem always.
func (o InMageReplicationDetailsResponseOutput) ActiveSiteType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.ActiveSiteType }).(pulumi.StringPtrOutput)
}

// The agent details.
func (o InMageReplicationDetailsResponseOutput) AgentDetails() InMageAgentDetailsResponsePtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *InMageAgentDetailsResponse { return v.AgentDetails }).(InMageAgentDetailsResponsePtrOutput)
}

// A value indicating the underlying Azure storage account. If the VM is not running in Azure, this value shall be set to null.
func (o InMageReplicationDetailsResponseOutput) AzureStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.AzureStorageAccountId }).(pulumi.StringPtrOutput)
}

// The compressed data change rate in MB.
func (o InMageReplicationDetailsResponseOutput) CompressedDataRateInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *float64 { return v.CompressedDataRateInMB }).(pulumi.Float64PtrOutput)
}

// The collection of Consistency points.
func (o InMageReplicationDetailsResponseOutput) ConsistencyPoints() pulumi.StringMapOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) map[string]string { return v.ConsistencyPoints }).(pulumi.StringMapOutput)
}

// The data stores of the on-premise machine Value can be list of strings that contain data store names
func (o InMageReplicationDetailsResponseOutput) Datastores() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) []string { return v.Datastores }).(pulumi.StringArrayOutput)
}

// A value indicating the discovery type of the machine.
func (o InMageReplicationDetailsResponseOutput) DiscoveryType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.DiscoveryType }).(pulumi.StringPtrOutput)
}

// A value indicating whether any disk is resized for this VM.
func (o InMageReplicationDetailsResponseOutput) DiskResized() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.DiskResized }).(pulumi.StringPtrOutput)
}

// The infrastructure VM Id.
func (o InMageReplicationDetailsResponseOutput) InfrastructureVmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.InfrastructureVmId }).(pulumi.StringPtrOutput)
}

// Gets the Instance type.
func (o InMageReplicationDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The source IP address.
func (o InMageReplicationDetailsResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The last heartbeat received from the source server.
func (o InMageReplicationDetailsResponseOutput) LastHeartbeat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.LastHeartbeat }).(pulumi.StringPtrOutput)
}

// The last RPO calculated time.
func (o InMageReplicationDetailsResponseOutput) LastRpoCalculatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.LastRpoCalculatedTime }).(pulumi.StringPtrOutput)
}

// The last update time received from on-prem components.
func (o InMageReplicationDetailsResponseOutput) LastUpdateReceivedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.LastUpdateReceivedTime }).(pulumi.StringPtrOutput)
}

// The master target Id.
func (o InMageReplicationDetailsResponseOutput) MasterTargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.MasterTargetId }).(pulumi.StringPtrOutput)
}

// The multi vm group Id, if any.
func (o InMageReplicationDetailsResponseOutput) MultiVmGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.MultiVmGroupId }).(pulumi.StringPtrOutput)
}

// The multi vm group name, if any.
func (o InMageReplicationDetailsResponseOutput) MultiVmGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.MultiVmGroupName }).(pulumi.StringPtrOutput)
}

// A value indicating whether the multi vm sync is enabled or disabled.
func (o InMageReplicationDetailsResponseOutput) MultiVmSyncStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.MultiVmSyncStatus }).(pulumi.StringPtrOutput)
}

// The OS details.
func (o InMageReplicationDetailsResponseOutput) OsDetails() OSDiskDetailsResponsePtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *OSDiskDetailsResponse { return v.OsDetails }).(OSDiskDetailsResponsePtrOutput)
}

// The OS Version of the protected item.
func (o InMageReplicationDetailsResponseOutput) OsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.OsVersion }).(pulumi.StringPtrOutput)
}

// The process server Id.
func (o InMageReplicationDetailsResponseOutput) ProcessServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.ProcessServerId }).(pulumi.StringPtrOutput)
}

// The list of protected disks.
func (o InMageReplicationDetailsResponseOutput) ProtectedDisks() InMageProtectedDiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) []InMageProtectedDiskDetailsResponse { return v.ProtectedDisks }).(InMageProtectedDiskDetailsResponseArrayOutput)
}

// The protection stage.
func (o InMageReplicationDetailsResponseOutput) ProtectionStage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.ProtectionStage }).(pulumi.StringPtrOutput)
}

// A value indicating whether the source server requires a restart after update.
func (o InMageReplicationDetailsResponseOutput) RebootAfterUpdateStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.RebootAfterUpdateStatus }).(pulumi.StringPtrOutput)
}

// The replica id of the protected item.
func (o InMageReplicationDetailsResponseOutput) ReplicaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.ReplicaId }).(pulumi.StringPtrOutput)
}

// The resync details of the machine
func (o InMageReplicationDetailsResponseOutput) ResyncDetails() InitialReplicationDetailsResponsePtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *InitialReplicationDetailsResponse { return v.ResyncDetails }).(InitialReplicationDetailsResponsePtrOutput)
}

// The retention window end time.
func (o InMageReplicationDetailsResponseOutput) RetentionWindowEnd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.RetentionWindowEnd }).(pulumi.StringPtrOutput)
}

// The retention window start time.
func (o InMageReplicationDetailsResponseOutput) RetentionWindowStart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.RetentionWindowStart }).(pulumi.StringPtrOutput)
}

// The RPO in seconds.
func (o InMageReplicationDetailsResponseOutput) RpoInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *int { return v.RpoInSeconds }).(pulumi.IntPtrOutput)
}

// The CPU count of the VM on the primary side.
func (o InMageReplicationDetailsResponseOutput) SourceVmCpuCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *int { return v.SourceVmCpuCount }).(pulumi.IntPtrOutput)
}

// The RAM size of the VM on the primary side.
func (o InMageReplicationDetailsResponseOutput) SourceVmRamSizeInMB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *int { return v.SourceVmRamSizeInMB }).(pulumi.IntPtrOutput)
}

// The uncompressed data change rate in MB.
func (o InMageReplicationDetailsResponseOutput) UncompressedDataRateInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *float64 { return v.UncompressedDataRateInMB }).(pulumi.Float64PtrOutput)
}

// The vCenter infrastructure Id.
func (o InMageReplicationDetailsResponseOutput) VCenterInfrastructureId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.VCenterInfrastructureId }).(pulumi.StringPtrOutput)
}

// The validation errors of the on-premise machine Value can be list of validation errors
func (o InMageReplicationDetailsResponseOutput) ValidationErrors() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) []HealthErrorResponse { return v.ValidationErrors }).(HealthErrorResponseArrayOutput)
}

// The virtual machine Id.
func (o InMageReplicationDetailsResponseOutput) VmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.VmId }).(pulumi.StringPtrOutput)
}

// The PE Network details.
func (o InMageReplicationDetailsResponseOutput) VmNics() VMNicDetailsResponseArrayOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) []VMNicDetailsResponse { return v.VmNics }).(VMNicDetailsResponseArrayOutput)
}

// The protection state for the vm.
func (o InMageReplicationDetailsResponseOutput) VmProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.VmProtectionState }).(pulumi.StringPtrOutput)
}

// The protection state description for the vm.
func (o InMageReplicationDetailsResponseOutput) VmProtectionStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.VmProtectionStateDescription }).(pulumi.StringPtrOutput)
}

// Guest disk signature based disk exclusion option when doing enable protection of virtual machine in InMage provider.
type InMageVolumeExclusionOptions struct {
	// The value indicating whether to exclude multi volume disk or not. If a disk has multiple volumes and one of the volume has label matching with VolumeLabel this disk will be excluded from replication if OnlyExcludeIfSingleVolume is false.
	OnlyExcludeIfSingleVolume *string `pulumi:"onlyExcludeIfSingleVolume"`
	// The volume label. The disk having any volume with this label will be excluded from replication.
	VolumeLabel *string `pulumi:"volumeLabel"`
}

// InMageVolumeExclusionOptionsInput is an input type that accepts InMageVolumeExclusionOptionsArgs and InMageVolumeExclusionOptionsOutput values.
// You can construct a concrete instance of `InMageVolumeExclusionOptionsInput` via:
//
//          InMageVolumeExclusionOptionsArgs{...}
type InMageVolumeExclusionOptionsInput interface {
	pulumi.Input

	ToInMageVolumeExclusionOptionsOutput() InMageVolumeExclusionOptionsOutput
	ToInMageVolumeExclusionOptionsOutputWithContext(context.Context) InMageVolumeExclusionOptionsOutput
}

// Guest disk signature based disk exclusion option when doing enable protection of virtual machine in InMage provider.
type InMageVolumeExclusionOptionsArgs struct {
	// The value indicating whether to exclude multi volume disk or not. If a disk has multiple volumes and one of the volume has label matching with VolumeLabel this disk will be excluded from replication if OnlyExcludeIfSingleVolume is false.
	OnlyExcludeIfSingleVolume pulumi.StringPtrInput `pulumi:"onlyExcludeIfSingleVolume"`
	// The volume label. The disk having any volume with this label will be excluded from replication.
	VolumeLabel pulumi.StringPtrInput `pulumi:"volumeLabel"`
}

func (InMageVolumeExclusionOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageVolumeExclusionOptions)(nil)).Elem()
}

func (i InMageVolumeExclusionOptionsArgs) ToInMageVolumeExclusionOptionsOutput() InMageVolumeExclusionOptionsOutput {
	return i.ToInMageVolumeExclusionOptionsOutputWithContext(context.Background())
}

func (i InMageVolumeExclusionOptionsArgs) ToInMageVolumeExclusionOptionsOutputWithContext(ctx context.Context) InMageVolumeExclusionOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageVolumeExclusionOptionsOutput)
}

// InMageVolumeExclusionOptionsArrayInput is an input type that accepts InMageVolumeExclusionOptionsArray and InMageVolumeExclusionOptionsArrayOutput values.
// You can construct a concrete instance of `InMageVolumeExclusionOptionsArrayInput` via:
//
//          InMageVolumeExclusionOptionsArray{ InMageVolumeExclusionOptionsArgs{...} }
type InMageVolumeExclusionOptionsArrayInput interface {
	pulumi.Input

	ToInMageVolumeExclusionOptionsArrayOutput() InMageVolumeExclusionOptionsArrayOutput
	ToInMageVolumeExclusionOptionsArrayOutputWithContext(context.Context) InMageVolumeExclusionOptionsArrayOutput
}

type InMageVolumeExclusionOptionsArray []InMageVolumeExclusionOptionsInput

func (InMageVolumeExclusionOptionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InMageVolumeExclusionOptions)(nil)).Elem()
}

func (i InMageVolumeExclusionOptionsArray) ToInMageVolumeExclusionOptionsArrayOutput() InMageVolumeExclusionOptionsArrayOutput {
	return i.ToInMageVolumeExclusionOptionsArrayOutputWithContext(context.Background())
}

func (i InMageVolumeExclusionOptionsArray) ToInMageVolumeExclusionOptionsArrayOutputWithContext(ctx context.Context) InMageVolumeExclusionOptionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageVolumeExclusionOptionsArrayOutput)
}

// Initial replication details.
type InitialReplicationDetailsResponse struct {
	// The initial replication progress percentage.
	InitialReplicationProgressPercentage *string `pulumi:"initialReplicationProgressPercentage"`
	// Initial replication type.
	InitialReplicationType *string `pulumi:"initialReplicationType"`
}

// Initial replication details.
type InitialReplicationDetailsResponseOutput struct{ *pulumi.OutputState }

func (InitialReplicationDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InitialReplicationDetailsResponse)(nil)).Elem()
}

func (o InitialReplicationDetailsResponseOutput) ToInitialReplicationDetailsResponseOutput() InitialReplicationDetailsResponseOutput {
	return o
}

func (o InitialReplicationDetailsResponseOutput) ToInitialReplicationDetailsResponseOutputWithContext(ctx context.Context) InitialReplicationDetailsResponseOutput {
	return o
}

func (o InitialReplicationDetailsResponseOutput) ToInitialReplicationDetailsResponsePtrOutput() InitialReplicationDetailsResponsePtrOutput {
	return o.ToInitialReplicationDetailsResponsePtrOutputWithContext(context.Background())
}

func (o InitialReplicationDetailsResponseOutput) ToInitialReplicationDetailsResponsePtrOutputWithContext(ctx context.Context) InitialReplicationDetailsResponsePtrOutput {
	return o.ApplyT(func(v InitialReplicationDetailsResponse) *InitialReplicationDetailsResponse {
		return &v
	}).(InitialReplicationDetailsResponsePtrOutput)
}

// The initial replication progress percentage.
func (o InitialReplicationDetailsResponseOutput) InitialReplicationProgressPercentage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InitialReplicationDetailsResponse) *string { return v.InitialReplicationProgressPercentage }).(pulumi.StringPtrOutput)
}

// Initial replication type.
func (o InitialReplicationDetailsResponseOutput) InitialReplicationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InitialReplicationDetailsResponse) *string { return v.InitialReplicationType }).(pulumi.StringPtrOutput)
}

type InitialReplicationDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (InitialReplicationDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InitialReplicationDetailsResponse)(nil)).Elem()
}

func (o InitialReplicationDetailsResponsePtrOutput) ToInitialReplicationDetailsResponsePtrOutput() InitialReplicationDetailsResponsePtrOutput {
	return o
}

func (o InitialReplicationDetailsResponsePtrOutput) ToInitialReplicationDetailsResponsePtrOutputWithContext(ctx context.Context) InitialReplicationDetailsResponsePtrOutput {
	return o
}

func (o InitialReplicationDetailsResponsePtrOutput) Elem() InitialReplicationDetailsResponseOutput {
	return o.ApplyT(func(v *InitialReplicationDetailsResponse) InitialReplicationDetailsResponse { return *v }).(InitialReplicationDetailsResponseOutput)
}

// The initial replication progress percentage.
func (o InitialReplicationDetailsResponsePtrOutput) InitialReplicationProgressPercentage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InitialReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.InitialReplicationProgressPercentage
	}).(pulumi.StringPtrOutput)
}

// Initial replication type.
func (o InitialReplicationDetailsResponsePtrOutput) InitialReplicationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InitialReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.InitialReplicationType
	}).(pulumi.StringPtrOutput)
}

// Implements InnerHealthError class. HealthError object has a list of InnerHealthErrors as child errors. InnerHealthError is used because this will prevent an infinite loop of structures when Hydra tries to auto-generate the contract. We are exposing the related health errors as inner health errors and all API consumers can utilize this in the same fashion as Exception -&gt; InnerException.
type InnerHealthErrorResponse struct {
	// Error creation time (UTC)
	CreationTimeUtc *string `pulumi:"creationTimeUtc"`
	// ID of the entity.
	EntityId *string `pulumi:"entityId"`
	// Category of error.
	ErrorCategory *string `pulumi:"errorCategory"`
	// Error code.
	ErrorCode *string `pulumi:"errorCode"`
	// Level of error.
	ErrorLevel *string `pulumi:"errorLevel"`
	// Error message.
	ErrorMessage *string `pulumi:"errorMessage"`
	// Source of error.
	ErrorSource *string `pulumi:"errorSource"`
	// Type of error.
	ErrorType *string `pulumi:"errorType"`
	// Possible causes of error.
	PossibleCauses *string `pulumi:"possibleCauses"`
	// Recommended action to resolve error.
	RecommendedAction *string `pulumi:"recommendedAction"`
	// DRA error message.
	RecoveryProviderErrorMessage *string `pulumi:"recoveryProviderErrorMessage"`
	// Summary message of the entity.
	SummaryMessage *string `pulumi:"summaryMessage"`
}

// Implements InnerHealthError class. HealthError object has a list of InnerHealthErrors as child errors. InnerHealthError is used because this will prevent an infinite loop of structures when Hydra tries to auto-generate the contract. We are exposing the related health errors as inner health errors and all API consumers can utilize this in the same fashion as Exception -&gt; InnerException.
type InnerHealthErrorResponseOutput struct{ *pulumi.OutputState }

func (InnerHealthErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InnerHealthErrorResponse)(nil)).Elem()
}

func (o InnerHealthErrorResponseOutput) ToInnerHealthErrorResponseOutput() InnerHealthErrorResponseOutput {
	return o
}

func (o InnerHealthErrorResponseOutput) ToInnerHealthErrorResponseOutputWithContext(ctx context.Context) InnerHealthErrorResponseOutput {
	return o
}

// Error creation time (UTC)
func (o InnerHealthErrorResponseOutput) CreationTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InnerHealthErrorResponse) *string { return v.CreationTimeUtc }).(pulumi.StringPtrOutput)
}

// ID of the entity.
func (o InnerHealthErrorResponseOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InnerHealthErrorResponse) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

// Category of error.
func (o InnerHealthErrorResponseOutput) ErrorCategory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InnerHealthErrorResponse) *string { return v.ErrorCategory }).(pulumi.StringPtrOutput)
}

// Error code.
func (o InnerHealthErrorResponseOutput) ErrorCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InnerHealthErrorResponse) *string { return v.ErrorCode }).(pulumi.StringPtrOutput)
}

// Level of error.
func (o InnerHealthErrorResponseOutput) ErrorLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InnerHealthErrorResponse) *string { return v.ErrorLevel }).(pulumi.StringPtrOutput)
}

// Error message.
func (o InnerHealthErrorResponseOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InnerHealthErrorResponse) *string { return v.ErrorMessage }).(pulumi.StringPtrOutput)
}

// Source of error.
func (o InnerHealthErrorResponseOutput) ErrorSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InnerHealthErrorResponse) *string { return v.ErrorSource }).(pulumi.StringPtrOutput)
}

// Type of error.
func (o InnerHealthErrorResponseOutput) ErrorType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InnerHealthErrorResponse) *string { return v.ErrorType }).(pulumi.StringPtrOutput)
}

// Possible causes of error.
func (o InnerHealthErrorResponseOutput) PossibleCauses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InnerHealthErrorResponse) *string { return v.PossibleCauses }).(pulumi.StringPtrOutput)
}

// Recommended action to resolve error.
func (o InnerHealthErrorResponseOutput) RecommendedAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InnerHealthErrorResponse) *string { return v.RecommendedAction }).(pulumi.StringPtrOutput)
}

// DRA error message.
func (o InnerHealthErrorResponseOutput) RecoveryProviderErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InnerHealthErrorResponse) *string { return v.RecoveryProviderErrorMessage }).(pulumi.StringPtrOutput)
}

// Summary message of the entity.
func (o InnerHealthErrorResponseOutput) SummaryMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InnerHealthErrorResponse) *string { return v.SummaryMessage }).(pulumi.StringPtrOutput)
}

type InnerHealthErrorResponseArrayOutput struct{ *pulumi.OutputState }

func (InnerHealthErrorResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InnerHealthErrorResponse)(nil)).Elem()
}

func (o InnerHealthErrorResponseArrayOutput) ToInnerHealthErrorResponseArrayOutput() InnerHealthErrorResponseArrayOutput {
	return o
}

func (o InnerHealthErrorResponseArrayOutput) ToInnerHealthErrorResponseArrayOutputWithContext(ctx context.Context) InnerHealthErrorResponseArrayOutput {
	return o
}

func (o InnerHealthErrorResponseArrayOutput) Index(i pulumi.IntInput) InnerHealthErrorResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InnerHealthErrorResponse {
		return vs[0].([]InnerHealthErrorResponse)[vs[1].(int)]
	}).(InnerHealthErrorResponseOutput)
}

// Azure VM input endpoint details.
type InputEndpointResponse struct {
	// The input endpoint name.
	EndpointName *string `pulumi:"endpointName"`
	// The input endpoint private port.
	PrivatePort *int `pulumi:"privatePort"`
	// The input endpoint protocol.
	Protocol *string `pulumi:"protocol"`
	// The input endpoint public port.
	PublicPort *int `pulumi:"publicPort"`
}

// Azure VM input endpoint details.
type InputEndpointResponseOutput struct{ *pulumi.OutputState }

func (InputEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InputEndpointResponse)(nil)).Elem()
}

func (o InputEndpointResponseOutput) ToInputEndpointResponseOutput() InputEndpointResponseOutput {
	return o
}

func (o InputEndpointResponseOutput) ToInputEndpointResponseOutputWithContext(ctx context.Context) InputEndpointResponseOutput {
	return o
}

// The input endpoint name.
func (o InputEndpointResponseOutput) EndpointName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputEndpointResponse) *string { return v.EndpointName }).(pulumi.StringPtrOutput)
}

// The input endpoint private port.
func (o InputEndpointResponseOutput) PrivatePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InputEndpointResponse) *int { return v.PrivatePort }).(pulumi.IntPtrOutput)
}

// The input endpoint protocol.
func (o InputEndpointResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputEndpointResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The input endpoint public port.
func (o InputEndpointResponseOutput) PublicPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InputEndpointResponse) *int { return v.PublicPort }).(pulumi.IntPtrOutput)
}

type InputEndpointResponseArrayOutput struct{ *pulumi.OutputState }

func (InputEndpointResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InputEndpointResponse)(nil)).Elem()
}

func (o InputEndpointResponseArrayOutput) ToInputEndpointResponseArrayOutput() InputEndpointResponseArrayOutput {
	return o
}

func (o InputEndpointResponseArrayOutput) ToInputEndpointResponseArrayOutputWithContext(ctx context.Context) InputEndpointResponseArrayOutput {
	return o
}

func (o InputEndpointResponseArrayOutput) Index(i pulumi.IntInput) InputEndpointResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InputEndpointResponse {
		return vs[0].([]InputEndpointResponse)[vs[1].(int)]
	}).(InputEndpointResponseOutput)
}

// Details about inquired protectable items under a given container.
type InquiryInfo struct {
	// Inquiry Details which will have workload specific details.
	// For e.g. - For SQL and oracle this will contain different details.
	InquiryDetails []WorkloadInquiryDetails `pulumi:"inquiryDetails"`
	// Inquiry Status for this container such as
	// InProgress | Failed | Succeeded
	Status *string `pulumi:"status"`
}

// InquiryInfoInput is an input type that accepts InquiryInfoArgs and InquiryInfoOutput values.
// You can construct a concrete instance of `InquiryInfoInput` via:
//
//          InquiryInfoArgs{...}
type InquiryInfoInput interface {
	pulumi.Input

	ToInquiryInfoOutput() InquiryInfoOutput
	ToInquiryInfoOutputWithContext(context.Context) InquiryInfoOutput
}

// Details about inquired protectable items under a given container.
type InquiryInfoArgs struct {
	// Inquiry Details which will have workload specific details.
	// For e.g. - For SQL and oracle this will contain different details.
	InquiryDetails WorkloadInquiryDetailsArrayInput `pulumi:"inquiryDetails"`
	// Inquiry Status for this container such as
	// InProgress | Failed | Succeeded
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (InquiryInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InquiryInfo)(nil)).Elem()
}

func (i InquiryInfoArgs) ToInquiryInfoOutput() InquiryInfoOutput {
	return i.ToInquiryInfoOutputWithContext(context.Background())
}

func (i InquiryInfoArgs) ToInquiryInfoOutputWithContext(ctx context.Context) InquiryInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InquiryInfoOutput)
}

func (i InquiryInfoArgs) ToInquiryInfoPtrOutput() InquiryInfoPtrOutput {
	return i.ToInquiryInfoPtrOutputWithContext(context.Background())
}

func (i InquiryInfoArgs) ToInquiryInfoPtrOutputWithContext(ctx context.Context) InquiryInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InquiryInfoOutput).ToInquiryInfoPtrOutputWithContext(ctx)
}

// InquiryInfoPtrInput is an input type that accepts InquiryInfoArgs, InquiryInfoPtr and InquiryInfoPtrOutput values.
// You can construct a concrete instance of `InquiryInfoPtrInput` via:
//
//          InquiryInfoArgs{...}
//
//  or:
//
//          nil
type InquiryInfoPtrInput interface {
	pulumi.Input

	ToInquiryInfoPtrOutput() InquiryInfoPtrOutput
	ToInquiryInfoPtrOutputWithContext(context.Context) InquiryInfoPtrOutput
}

type inquiryInfoPtrType InquiryInfoArgs

func InquiryInfoPtr(v *InquiryInfoArgs) InquiryInfoPtrInput {
	return (*inquiryInfoPtrType)(v)
}

func (*inquiryInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InquiryInfo)(nil)).Elem()
}

func (i *inquiryInfoPtrType) ToInquiryInfoPtrOutput() InquiryInfoPtrOutput {
	return i.ToInquiryInfoPtrOutputWithContext(context.Background())
}

func (i *inquiryInfoPtrType) ToInquiryInfoPtrOutputWithContext(ctx context.Context) InquiryInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InquiryInfoPtrOutput)
}

// Details about inquired protectable items under a given container.
type InquiryInfoResponse struct {
	// Error Details if the Status is non-success.
	ErrorDetail *ErrorDetailResponse `pulumi:"errorDetail"`
	// Inquiry Details which will have workload specific details.
	// For e.g. - For SQL and oracle this will contain different details.
	InquiryDetails []WorkloadInquiryDetailsResponse `pulumi:"inquiryDetails"`
	// Inquiry Status for this container such as
	// InProgress | Failed | Succeeded
	Status *string `pulumi:"status"`
}

// Details about inquired protectable items under a given container.
type InquiryInfoResponseOutput struct{ *pulumi.OutputState }

func (InquiryInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InquiryInfoResponse)(nil)).Elem()
}

func (o InquiryInfoResponseOutput) ToInquiryInfoResponseOutput() InquiryInfoResponseOutput {
	return o
}

func (o InquiryInfoResponseOutput) ToInquiryInfoResponseOutputWithContext(ctx context.Context) InquiryInfoResponseOutput {
	return o
}

func (o InquiryInfoResponseOutput) ToInquiryInfoResponsePtrOutput() InquiryInfoResponsePtrOutput {
	return o.ToInquiryInfoResponsePtrOutputWithContext(context.Background())
}

func (o InquiryInfoResponseOutput) ToInquiryInfoResponsePtrOutputWithContext(ctx context.Context) InquiryInfoResponsePtrOutput {
	return o.ApplyT(func(v InquiryInfoResponse) *InquiryInfoResponse {
		return &v
	}).(InquiryInfoResponsePtrOutput)
}

// Error Details if the Status is non-success.
func (o InquiryInfoResponseOutput) ErrorDetail() ErrorDetailResponsePtrOutput {
	return o.ApplyT(func(v InquiryInfoResponse) *ErrorDetailResponse { return v.ErrorDetail }).(ErrorDetailResponsePtrOutput)
}

// Inquiry Details which will have workload specific details.
// For e.g. - For SQL and oracle this will contain different details.
func (o InquiryInfoResponseOutput) InquiryDetails() WorkloadInquiryDetailsResponseArrayOutput {
	return o.ApplyT(func(v InquiryInfoResponse) []WorkloadInquiryDetailsResponse { return v.InquiryDetails }).(WorkloadInquiryDetailsResponseArrayOutput)
}

// Inquiry Status for this container such as
// InProgress | Failed | Succeeded
func (o InquiryInfoResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InquiryInfoResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type InquiryInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (InquiryInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InquiryInfoResponse)(nil)).Elem()
}

func (o InquiryInfoResponsePtrOutput) ToInquiryInfoResponsePtrOutput() InquiryInfoResponsePtrOutput {
	return o
}

func (o InquiryInfoResponsePtrOutput) ToInquiryInfoResponsePtrOutputWithContext(ctx context.Context) InquiryInfoResponsePtrOutput {
	return o
}

func (o InquiryInfoResponsePtrOutput) Elem() InquiryInfoResponseOutput {
	return o.ApplyT(func(v *InquiryInfoResponse) InquiryInfoResponse { return *v }).(InquiryInfoResponseOutput)
}

// Error Details if the Status is non-success.
func (o InquiryInfoResponsePtrOutput) ErrorDetail() ErrorDetailResponsePtrOutput {
	return o.ApplyT(func(v *InquiryInfoResponse) *ErrorDetailResponse {
		if v == nil {
			return nil
		}
		return v.ErrorDetail
	}).(ErrorDetailResponsePtrOutput)
}

// Inquiry Details which will have workload specific details.
// For e.g. - For SQL and oracle this will contain different details.
func (o InquiryInfoResponsePtrOutput) InquiryDetails() WorkloadInquiryDetailsResponseArrayOutput {
	return o.ApplyT(func(v *InquiryInfoResponse) []WorkloadInquiryDetailsResponse {
		if v == nil {
			return nil
		}
		return v.InquiryDetails
	}).(WorkloadInquiryDetailsResponseArrayOutput)
}

// Inquiry Status for this container such as
// InProgress | Failed | Succeeded
func (o InquiryInfoResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InquiryInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Validation for inquired protectable items under a given container.
type InquiryValidation struct {
	// Status for the Inquiry Validation.
	Status *string `pulumi:"status"`
}

// InquiryValidationInput is an input type that accepts InquiryValidationArgs and InquiryValidationOutput values.
// You can construct a concrete instance of `InquiryValidationInput` via:
//
//          InquiryValidationArgs{...}
type InquiryValidationInput interface {
	pulumi.Input

	ToInquiryValidationOutput() InquiryValidationOutput
	ToInquiryValidationOutputWithContext(context.Context) InquiryValidationOutput
}

// Validation for inquired protectable items under a given container.
type InquiryValidationArgs struct {
	// Status for the Inquiry Validation.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (InquiryValidationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InquiryValidation)(nil)).Elem()
}

func (i InquiryValidationArgs) ToInquiryValidationOutput() InquiryValidationOutput {
	return i.ToInquiryValidationOutputWithContext(context.Background())
}

func (i InquiryValidationArgs) ToInquiryValidationOutputWithContext(ctx context.Context) InquiryValidationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InquiryValidationOutput)
}

func (i InquiryValidationArgs) ToInquiryValidationPtrOutput() InquiryValidationPtrOutput {
	return i.ToInquiryValidationPtrOutputWithContext(context.Background())
}

func (i InquiryValidationArgs) ToInquiryValidationPtrOutputWithContext(ctx context.Context) InquiryValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InquiryValidationOutput).ToInquiryValidationPtrOutputWithContext(ctx)
}

// InquiryValidationPtrInput is an input type that accepts InquiryValidationArgs, InquiryValidationPtr and InquiryValidationPtrOutput values.
// You can construct a concrete instance of `InquiryValidationPtrInput` via:
//
//          InquiryValidationArgs{...}
//
//  or:
//
//          nil
type InquiryValidationPtrInput interface {
	pulumi.Input

	ToInquiryValidationPtrOutput() InquiryValidationPtrOutput
	ToInquiryValidationPtrOutputWithContext(context.Context) InquiryValidationPtrOutput
}

type inquiryValidationPtrType InquiryValidationArgs

func InquiryValidationPtr(v *InquiryValidationArgs) InquiryValidationPtrInput {
	return (*inquiryValidationPtrType)(v)
}

func (*inquiryValidationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InquiryValidation)(nil)).Elem()
}

func (i *inquiryValidationPtrType) ToInquiryValidationPtrOutput() InquiryValidationPtrOutput {
	return i.ToInquiryValidationPtrOutputWithContext(context.Background())
}

func (i *inquiryValidationPtrType) ToInquiryValidationPtrOutputWithContext(ctx context.Context) InquiryValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InquiryValidationPtrOutput)
}

// Validation for inquired protectable items under a given container.
type InquiryValidationResponse struct {
	// Error Additional Detail in case the status is non-success.
	AdditionalDetail string `pulumi:"additionalDetail"`
	// Error Detail in case the status is non-success.
	ErrorDetail *ErrorDetailResponse `pulumi:"errorDetail"`
	// Status for the Inquiry Validation.
	Status *string `pulumi:"status"`
}

// Validation for inquired protectable items under a given container.
type InquiryValidationResponseOutput struct{ *pulumi.OutputState }

func (InquiryValidationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InquiryValidationResponse)(nil)).Elem()
}

func (o InquiryValidationResponseOutput) ToInquiryValidationResponseOutput() InquiryValidationResponseOutput {
	return o
}

func (o InquiryValidationResponseOutput) ToInquiryValidationResponseOutputWithContext(ctx context.Context) InquiryValidationResponseOutput {
	return o
}

func (o InquiryValidationResponseOutput) ToInquiryValidationResponsePtrOutput() InquiryValidationResponsePtrOutput {
	return o.ToInquiryValidationResponsePtrOutputWithContext(context.Background())
}

func (o InquiryValidationResponseOutput) ToInquiryValidationResponsePtrOutputWithContext(ctx context.Context) InquiryValidationResponsePtrOutput {
	return o.ApplyT(func(v InquiryValidationResponse) *InquiryValidationResponse {
		return &v
	}).(InquiryValidationResponsePtrOutput)
}

// Error Additional Detail in case the status is non-success.
func (o InquiryValidationResponseOutput) AdditionalDetail() pulumi.StringOutput {
	return o.ApplyT(func(v InquiryValidationResponse) string { return v.AdditionalDetail }).(pulumi.StringOutput)
}

// Error Detail in case the status is non-success.
func (o InquiryValidationResponseOutput) ErrorDetail() ErrorDetailResponsePtrOutput {
	return o.ApplyT(func(v InquiryValidationResponse) *ErrorDetailResponse { return v.ErrorDetail }).(ErrorDetailResponsePtrOutput)
}

// Status for the Inquiry Validation.
func (o InquiryValidationResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InquiryValidationResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type InquiryValidationResponsePtrOutput struct{ *pulumi.OutputState }

func (InquiryValidationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InquiryValidationResponse)(nil)).Elem()
}

func (o InquiryValidationResponsePtrOutput) ToInquiryValidationResponsePtrOutput() InquiryValidationResponsePtrOutput {
	return o
}

func (o InquiryValidationResponsePtrOutput) ToInquiryValidationResponsePtrOutputWithContext(ctx context.Context) InquiryValidationResponsePtrOutput {
	return o
}

func (o InquiryValidationResponsePtrOutput) Elem() InquiryValidationResponseOutput {
	return o.ApplyT(func(v *InquiryValidationResponse) InquiryValidationResponse { return *v }).(InquiryValidationResponseOutput)
}

// Error Additional Detail in case the status is non-success.
func (o InquiryValidationResponsePtrOutput) AdditionalDetail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InquiryValidationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AdditionalDetail
	}).(pulumi.StringPtrOutput)
}

// Error Detail in case the status is non-success.
func (o InquiryValidationResponsePtrOutput) ErrorDetail() ErrorDetailResponsePtrOutput {
	return o.ApplyT(func(v *InquiryValidationResponse) *ErrorDetailResponse {
		if v == nil {
			return nil
		}
		return v.ErrorDetail
	}).(ErrorDetailResponsePtrOutput)
}

// Status for the Inquiry Validation.
func (o InquiryValidationResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InquiryValidationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// KPI Resource Health Details
type KPIResourceHealthDetails struct {
	// Resource Health Status
	ResourceHealthStatus *string `pulumi:"resourceHealthStatus"`
}

// KPIResourceHealthDetailsInput is an input type that accepts KPIResourceHealthDetailsArgs and KPIResourceHealthDetailsOutput values.
// You can construct a concrete instance of `KPIResourceHealthDetailsInput` via:
//
//          KPIResourceHealthDetailsArgs{...}
type KPIResourceHealthDetailsInput interface {
	pulumi.Input

	ToKPIResourceHealthDetailsOutput() KPIResourceHealthDetailsOutput
	ToKPIResourceHealthDetailsOutputWithContext(context.Context) KPIResourceHealthDetailsOutput
}

// KPI Resource Health Details
type KPIResourceHealthDetailsArgs struct {
	// Resource Health Status
	ResourceHealthStatus pulumi.StringPtrInput `pulumi:"resourceHealthStatus"`
}

func (KPIResourceHealthDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KPIResourceHealthDetails)(nil)).Elem()
}

func (i KPIResourceHealthDetailsArgs) ToKPIResourceHealthDetailsOutput() KPIResourceHealthDetailsOutput {
	return i.ToKPIResourceHealthDetailsOutputWithContext(context.Background())
}

func (i KPIResourceHealthDetailsArgs) ToKPIResourceHealthDetailsOutputWithContext(ctx context.Context) KPIResourceHealthDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KPIResourceHealthDetailsOutput)
}

// KPIResourceHealthDetailsMapInput is an input type that accepts KPIResourceHealthDetailsMap and KPIResourceHealthDetailsMapOutput values.
// You can construct a concrete instance of `KPIResourceHealthDetailsMapInput` via:
//
//          KPIResourceHealthDetailsMap{ "key": KPIResourceHealthDetailsArgs{...} }
type KPIResourceHealthDetailsMapInput interface {
	pulumi.Input

	ToKPIResourceHealthDetailsMapOutput() KPIResourceHealthDetailsMapOutput
	ToKPIResourceHealthDetailsMapOutputWithContext(context.Context) KPIResourceHealthDetailsMapOutput
}

type KPIResourceHealthDetailsMap map[string]KPIResourceHealthDetailsInput

func (KPIResourceHealthDetailsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]KPIResourceHealthDetails)(nil)).Elem()
}

func (i KPIResourceHealthDetailsMap) ToKPIResourceHealthDetailsMapOutput() KPIResourceHealthDetailsMapOutput {
	return i.ToKPIResourceHealthDetailsMapOutputWithContext(context.Background())
}

func (i KPIResourceHealthDetailsMap) ToKPIResourceHealthDetailsMapOutputWithContext(ctx context.Context) KPIResourceHealthDetailsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KPIResourceHealthDetailsMapOutput)
}

// KPI Resource Health Details
type KPIResourceHealthDetailsResponse struct {
	// Resource Health Status
	ResourceHealthDetails []ResourceHealthDetailsResponse `pulumi:"resourceHealthDetails"`
	// Resource Health Status
	ResourceHealthStatus *string `pulumi:"resourceHealthStatus"`
}

// KPI Resource Health Details
type KPIResourceHealthDetailsResponseOutput struct{ *pulumi.OutputState }

func (KPIResourceHealthDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KPIResourceHealthDetailsResponse)(nil)).Elem()
}

func (o KPIResourceHealthDetailsResponseOutput) ToKPIResourceHealthDetailsResponseOutput() KPIResourceHealthDetailsResponseOutput {
	return o
}

func (o KPIResourceHealthDetailsResponseOutput) ToKPIResourceHealthDetailsResponseOutputWithContext(ctx context.Context) KPIResourceHealthDetailsResponseOutput {
	return o
}

// Resource Health Status
func (o KPIResourceHealthDetailsResponseOutput) ResourceHealthDetails() ResourceHealthDetailsResponseArrayOutput {
	return o.ApplyT(func(v KPIResourceHealthDetailsResponse) []ResourceHealthDetailsResponse {
		return v.ResourceHealthDetails
	}).(ResourceHealthDetailsResponseArrayOutput)
}

// Resource Health Status
func (o KPIResourceHealthDetailsResponseOutput) ResourceHealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KPIResourceHealthDetailsResponse) *string { return v.ResourceHealthStatus }).(pulumi.StringPtrOutput)
}

type KPIResourceHealthDetailsResponseMapOutput struct{ *pulumi.OutputState }

func (KPIResourceHealthDetailsResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]KPIResourceHealthDetailsResponse)(nil)).Elem()
}

func (o KPIResourceHealthDetailsResponseMapOutput) ToKPIResourceHealthDetailsResponseMapOutput() KPIResourceHealthDetailsResponseMapOutput {
	return o
}

func (o KPIResourceHealthDetailsResponseMapOutput) ToKPIResourceHealthDetailsResponseMapOutputWithContext(ctx context.Context) KPIResourceHealthDetailsResponseMapOutput {
	return o
}

func (o KPIResourceHealthDetailsResponseMapOutput) MapIndex(k pulumi.StringInput) KPIResourceHealthDetailsResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) KPIResourceHealthDetailsResponse {
		return vs[0].(map[string]KPIResourceHealthDetailsResponse)[vs[1].(string)]
	}).(KPIResourceHealthDetailsResponseOutput)
}

// Key Encryption Key (KEK) information.
type KeyEncryptionKeyInfo struct {
	// The key url / identifier.
	KeyIdentifier *string `pulumi:"keyIdentifier"`
	// The KeyVault resource ARM id for key.
	KeyVaultResourceArmId *string `pulumi:"keyVaultResourceArmId"`
}

// KeyEncryptionKeyInfoInput is an input type that accepts KeyEncryptionKeyInfoArgs and KeyEncryptionKeyInfoOutput values.
// You can construct a concrete instance of `KeyEncryptionKeyInfoInput` via:
//
//          KeyEncryptionKeyInfoArgs{...}
type KeyEncryptionKeyInfoInput interface {
	pulumi.Input

	ToKeyEncryptionKeyInfoOutput() KeyEncryptionKeyInfoOutput
	ToKeyEncryptionKeyInfoOutputWithContext(context.Context) KeyEncryptionKeyInfoOutput
}

// Key Encryption Key (KEK) information.
type KeyEncryptionKeyInfoArgs struct {
	// The key url / identifier.
	KeyIdentifier pulumi.StringPtrInput `pulumi:"keyIdentifier"`
	// The KeyVault resource ARM id for key.
	KeyVaultResourceArmId pulumi.StringPtrInput `pulumi:"keyVaultResourceArmId"`
}

func (KeyEncryptionKeyInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyEncryptionKeyInfo)(nil)).Elem()
}

func (i KeyEncryptionKeyInfoArgs) ToKeyEncryptionKeyInfoOutput() KeyEncryptionKeyInfoOutput {
	return i.ToKeyEncryptionKeyInfoOutputWithContext(context.Background())
}

func (i KeyEncryptionKeyInfoArgs) ToKeyEncryptionKeyInfoOutputWithContext(ctx context.Context) KeyEncryptionKeyInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyEncryptionKeyInfoOutput)
}

func (i KeyEncryptionKeyInfoArgs) ToKeyEncryptionKeyInfoPtrOutput() KeyEncryptionKeyInfoPtrOutput {
	return i.ToKeyEncryptionKeyInfoPtrOutputWithContext(context.Background())
}

func (i KeyEncryptionKeyInfoArgs) ToKeyEncryptionKeyInfoPtrOutputWithContext(ctx context.Context) KeyEncryptionKeyInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyEncryptionKeyInfoOutput).ToKeyEncryptionKeyInfoPtrOutputWithContext(ctx)
}

// KeyEncryptionKeyInfoPtrInput is an input type that accepts KeyEncryptionKeyInfoArgs, KeyEncryptionKeyInfoPtr and KeyEncryptionKeyInfoPtrOutput values.
// You can construct a concrete instance of `KeyEncryptionKeyInfoPtrInput` via:
//
//          KeyEncryptionKeyInfoArgs{...}
//
//  or:
//
//          nil
type KeyEncryptionKeyInfoPtrInput interface {
	pulumi.Input

	ToKeyEncryptionKeyInfoPtrOutput() KeyEncryptionKeyInfoPtrOutput
	ToKeyEncryptionKeyInfoPtrOutputWithContext(context.Context) KeyEncryptionKeyInfoPtrOutput
}

type keyEncryptionKeyInfoPtrType KeyEncryptionKeyInfoArgs

func KeyEncryptionKeyInfoPtr(v *KeyEncryptionKeyInfoArgs) KeyEncryptionKeyInfoPtrInput {
	return (*keyEncryptionKeyInfoPtrType)(v)
}

func (*keyEncryptionKeyInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyEncryptionKeyInfo)(nil)).Elem()
}

func (i *keyEncryptionKeyInfoPtrType) ToKeyEncryptionKeyInfoPtrOutput() KeyEncryptionKeyInfoPtrOutput {
	return i.ToKeyEncryptionKeyInfoPtrOutputWithContext(context.Background())
}

func (i *keyEncryptionKeyInfoPtrType) ToKeyEncryptionKeyInfoPtrOutputWithContext(ctx context.Context) KeyEncryptionKeyInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyEncryptionKeyInfoPtrOutput)
}

// Long-term retention policy.
type LongTermRetentionPolicy struct {
	// Daily retention schedule of the backup policy.
	DailySchedule *DailyRetentionSchedule `pulumi:"dailySchedule"`
	// Monthly retention schedule of the backup policy.
	MonthlySchedule *MonthlyRetentionSchedule `pulumi:"monthlySchedule"`
	// This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
	RetentionPolicyType *string `pulumi:"retentionPolicyType"`
	// Weekly retention schedule of the backup policy.
	WeeklySchedule *WeeklyRetentionSchedule `pulumi:"weeklySchedule"`
	// Yearly retention schedule of the backup policy.
	YearlySchedule *YearlyRetentionSchedule `pulumi:"yearlySchedule"`
}

// LongTermRetentionPolicyInput is an input type that accepts LongTermRetentionPolicyArgs and LongTermRetentionPolicyOutput values.
// You can construct a concrete instance of `LongTermRetentionPolicyInput` via:
//
//          LongTermRetentionPolicyArgs{...}
type LongTermRetentionPolicyInput interface {
	pulumi.Input

	ToLongTermRetentionPolicyOutput() LongTermRetentionPolicyOutput
	ToLongTermRetentionPolicyOutputWithContext(context.Context) LongTermRetentionPolicyOutput
}

// Long-term retention policy.
type LongTermRetentionPolicyArgs struct {
	// Daily retention schedule of the backup policy.
	DailySchedule DailyRetentionSchedulePtrInput `pulumi:"dailySchedule"`
	// Monthly retention schedule of the backup policy.
	MonthlySchedule MonthlyRetentionSchedulePtrInput `pulumi:"monthlySchedule"`
	// This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
	RetentionPolicyType pulumi.StringPtrInput `pulumi:"retentionPolicyType"`
	// Weekly retention schedule of the backup policy.
	WeeklySchedule WeeklyRetentionSchedulePtrInput `pulumi:"weeklySchedule"`
	// Yearly retention schedule of the backup policy.
	YearlySchedule YearlyRetentionSchedulePtrInput `pulumi:"yearlySchedule"`
}

func (LongTermRetentionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LongTermRetentionPolicy)(nil)).Elem()
}

func (i LongTermRetentionPolicyArgs) ToLongTermRetentionPolicyOutput() LongTermRetentionPolicyOutput {
	return i.ToLongTermRetentionPolicyOutputWithContext(context.Background())
}

func (i LongTermRetentionPolicyArgs) ToLongTermRetentionPolicyOutputWithContext(ctx context.Context) LongTermRetentionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LongTermRetentionPolicyOutput)
}

// Long-term retention policy.
type LongTermRetentionPolicyResponse struct {
	// Daily retention schedule of the backup policy.
	DailySchedule *DailyRetentionScheduleResponse `pulumi:"dailySchedule"`
	// Monthly retention schedule of the backup policy.
	MonthlySchedule *MonthlyRetentionScheduleResponse `pulumi:"monthlySchedule"`
	// This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
	RetentionPolicyType *string `pulumi:"retentionPolicyType"`
	// Weekly retention schedule of the backup policy.
	WeeklySchedule *WeeklyRetentionScheduleResponse `pulumi:"weeklySchedule"`
	// Yearly retention schedule of the backup policy.
	YearlySchedule *YearlyRetentionScheduleResponse `pulumi:"yearlySchedule"`
}

// Long-term retention policy.
type LongTermRetentionPolicyResponseOutput struct{ *pulumi.OutputState }

func (LongTermRetentionPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LongTermRetentionPolicyResponse)(nil)).Elem()
}

func (o LongTermRetentionPolicyResponseOutput) ToLongTermRetentionPolicyResponseOutput() LongTermRetentionPolicyResponseOutput {
	return o
}

func (o LongTermRetentionPolicyResponseOutput) ToLongTermRetentionPolicyResponseOutputWithContext(ctx context.Context) LongTermRetentionPolicyResponseOutput {
	return o
}

// Daily retention schedule of the backup policy.
func (o LongTermRetentionPolicyResponseOutput) DailySchedule() DailyRetentionScheduleResponsePtrOutput {
	return o.ApplyT(func(v LongTermRetentionPolicyResponse) *DailyRetentionScheduleResponse { return v.DailySchedule }).(DailyRetentionScheduleResponsePtrOutput)
}

// Monthly retention schedule of the backup policy.
func (o LongTermRetentionPolicyResponseOutput) MonthlySchedule() MonthlyRetentionScheduleResponsePtrOutput {
	return o.ApplyT(func(v LongTermRetentionPolicyResponse) *MonthlyRetentionScheduleResponse { return v.MonthlySchedule }).(MonthlyRetentionScheduleResponsePtrOutput)
}

// This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
func (o LongTermRetentionPolicyResponseOutput) RetentionPolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LongTermRetentionPolicyResponse) *string { return v.RetentionPolicyType }).(pulumi.StringPtrOutput)
}

// Weekly retention schedule of the backup policy.
func (o LongTermRetentionPolicyResponseOutput) WeeklySchedule() WeeklyRetentionScheduleResponsePtrOutput {
	return o.ApplyT(func(v LongTermRetentionPolicyResponse) *WeeklyRetentionScheduleResponse { return v.WeeklySchedule }).(WeeklyRetentionScheduleResponsePtrOutput)
}

// Yearly retention schedule of the backup policy.
func (o LongTermRetentionPolicyResponseOutput) YearlySchedule() YearlyRetentionScheduleResponsePtrOutput {
	return o.ApplyT(func(v LongTermRetentionPolicyResponse) *YearlyRetentionScheduleResponse { return v.YearlySchedule }).(YearlyRetentionScheduleResponsePtrOutput)
}

// Long-term policy schedule.
type LongTermSchedulePolicy struct {
	// This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
	SchedulePolicyType *string `pulumi:"schedulePolicyType"`
}

// LongTermSchedulePolicyInput is an input type that accepts LongTermSchedulePolicyArgs and LongTermSchedulePolicyOutput values.
// You can construct a concrete instance of `LongTermSchedulePolicyInput` via:
//
//          LongTermSchedulePolicyArgs{...}
type LongTermSchedulePolicyInput interface {
	pulumi.Input

	ToLongTermSchedulePolicyOutput() LongTermSchedulePolicyOutput
	ToLongTermSchedulePolicyOutputWithContext(context.Context) LongTermSchedulePolicyOutput
}

// Long-term policy schedule.
type LongTermSchedulePolicyArgs struct {
	// This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
	SchedulePolicyType pulumi.StringPtrInput `pulumi:"schedulePolicyType"`
}

func (LongTermSchedulePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LongTermSchedulePolicy)(nil)).Elem()
}

func (i LongTermSchedulePolicyArgs) ToLongTermSchedulePolicyOutput() LongTermSchedulePolicyOutput {
	return i.ToLongTermSchedulePolicyOutputWithContext(context.Background())
}

func (i LongTermSchedulePolicyArgs) ToLongTermSchedulePolicyOutputWithContext(ctx context.Context) LongTermSchedulePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LongTermSchedulePolicyOutput)
}

// Long-term policy schedule.
type LongTermSchedulePolicyResponse struct {
	// This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
	SchedulePolicyType *string `pulumi:"schedulePolicyType"`
}

// Long-term policy schedule.
type LongTermSchedulePolicyResponseOutput struct{ *pulumi.OutputState }

func (LongTermSchedulePolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LongTermSchedulePolicyResponse)(nil)).Elem()
}

func (o LongTermSchedulePolicyResponseOutput) ToLongTermSchedulePolicyResponseOutput() LongTermSchedulePolicyResponseOutput {
	return o
}

func (o LongTermSchedulePolicyResponseOutput) ToLongTermSchedulePolicyResponseOutputWithContext(ctx context.Context) LongTermSchedulePolicyResponseOutput {
	return o
}

// This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
func (o LongTermSchedulePolicyResponseOutput) SchedulePolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LongTermSchedulePolicyResponse) *string { return v.SchedulePolicyType }).(pulumi.StringPtrOutput)
}

// MAB workload-specific Health Details.
type MABContainerHealthDetails struct {
	// Health Code
	Code *int `pulumi:"code"`
	// Health Message
	Message *string `pulumi:"message"`
	// Health Recommended Actions
	Recommendations []string `pulumi:"recommendations"`
	// Health Title
	Title *string `pulumi:"title"`
}

// MABContainerHealthDetailsInput is an input type that accepts MABContainerHealthDetailsArgs and MABContainerHealthDetailsOutput values.
// You can construct a concrete instance of `MABContainerHealthDetailsInput` via:
//
//          MABContainerHealthDetailsArgs{...}
type MABContainerHealthDetailsInput interface {
	pulumi.Input

	ToMABContainerHealthDetailsOutput() MABContainerHealthDetailsOutput
	ToMABContainerHealthDetailsOutputWithContext(context.Context) MABContainerHealthDetailsOutput
}

// MAB workload-specific Health Details.
type MABContainerHealthDetailsArgs struct {
	// Health Code
	Code pulumi.IntPtrInput `pulumi:"code"`
	// Health Message
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Health Recommended Actions
	Recommendations pulumi.StringArrayInput `pulumi:"recommendations"`
	// Health Title
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (MABContainerHealthDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MABContainerHealthDetails)(nil)).Elem()
}

func (i MABContainerHealthDetailsArgs) ToMABContainerHealthDetailsOutput() MABContainerHealthDetailsOutput {
	return i.ToMABContainerHealthDetailsOutputWithContext(context.Background())
}

func (i MABContainerHealthDetailsArgs) ToMABContainerHealthDetailsOutputWithContext(ctx context.Context) MABContainerHealthDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MABContainerHealthDetailsOutput)
}

// MABContainerHealthDetailsArrayInput is an input type that accepts MABContainerHealthDetailsArray and MABContainerHealthDetailsArrayOutput values.
// You can construct a concrete instance of `MABContainerHealthDetailsArrayInput` via:
//
//          MABContainerHealthDetailsArray{ MABContainerHealthDetailsArgs{...} }
type MABContainerHealthDetailsArrayInput interface {
	pulumi.Input

	ToMABContainerHealthDetailsArrayOutput() MABContainerHealthDetailsArrayOutput
	ToMABContainerHealthDetailsArrayOutputWithContext(context.Context) MABContainerHealthDetailsArrayOutput
}

type MABContainerHealthDetailsArray []MABContainerHealthDetailsInput

func (MABContainerHealthDetailsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MABContainerHealthDetails)(nil)).Elem()
}

func (i MABContainerHealthDetailsArray) ToMABContainerHealthDetailsArrayOutput() MABContainerHealthDetailsArrayOutput {
	return i.ToMABContainerHealthDetailsArrayOutputWithContext(context.Background())
}

func (i MABContainerHealthDetailsArray) ToMABContainerHealthDetailsArrayOutputWithContext(ctx context.Context) MABContainerHealthDetailsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MABContainerHealthDetailsArrayOutput)
}

// MAB workload-specific Health Details.
type MABContainerHealthDetailsResponse struct {
	// Health Code
	Code *int `pulumi:"code"`
	// Health Message
	Message *string `pulumi:"message"`
	// Health Recommended Actions
	Recommendations []string `pulumi:"recommendations"`
	// Health Title
	Title *string `pulumi:"title"`
}

// MAB workload-specific Health Details.
type MABContainerHealthDetailsResponseOutput struct{ *pulumi.OutputState }

func (MABContainerHealthDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MABContainerHealthDetailsResponse)(nil)).Elem()
}

func (o MABContainerHealthDetailsResponseOutput) ToMABContainerHealthDetailsResponseOutput() MABContainerHealthDetailsResponseOutput {
	return o
}

func (o MABContainerHealthDetailsResponseOutput) ToMABContainerHealthDetailsResponseOutputWithContext(ctx context.Context) MABContainerHealthDetailsResponseOutput {
	return o
}

// Health Code
func (o MABContainerHealthDetailsResponseOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MABContainerHealthDetailsResponse) *int { return v.Code }).(pulumi.IntPtrOutput)
}

// Health Message
func (o MABContainerHealthDetailsResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MABContainerHealthDetailsResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Health Recommended Actions
func (o MABContainerHealthDetailsResponseOutput) Recommendations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MABContainerHealthDetailsResponse) []string { return v.Recommendations }).(pulumi.StringArrayOutput)
}

// Health Title
func (o MABContainerHealthDetailsResponseOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MABContainerHealthDetailsResponse) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type MABContainerHealthDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (MABContainerHealthDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MABContainerHealthDetailsResponse)(nil)).Elem()
}

func (o MABContainerHealthDetailsResponseArrayOutput) ToMABContainerHealthDetailsResponseArrayOutput() MABContainerHealthDetailsResponseArrayOutput {
	return o
}

func (o MABContainerHealthDetailsResponseArrayOutput) ToMABContainerHealthDetailsResponseArrayOutputWithContext(ctx context.Context) MABContainerHealthDetailsResponseArrayOutput {
	return o
}

func (o MABContainerHealthDetailsResponseArrayOutput) Index(i pulumi.IntInput) MABContainerHealthDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MABContainerHealthDetailsResponse {
		return vs[0].([]MABContainerHealthDetailsResponse)[vs[1].(int)]
	}).(MABContainerHealthDetailsResponseOutput)
}

// Container with items backed up using MAB backup engine.
type MabContainer struct {
	// Agent version of this container.
	AgentVersion *string `pulumi:"agentVersion"`
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Can the container be registered one more time.
	CanReRegister *bool `pulumi:"canReRegister"`
	// Health state of mab container.
	ContainerHealthState *string `pulumi:"containerHealthState"`
	// ContainerID represents the container.
	ContainerId *int `pulumi:"containerId"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	ContainerType *string `pulumi:"containerType"`
	// Additional information for this container
	ExtendedInfo *MabContainerExtendedInfo `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Health details on this mab container.
	MabContainerHealthDetails []MABContainerHealthDetails `pulumi:"mabContainerHealthDetails"`
	// Number of items backed up in this container.
	ProtectedItemCount *int `pulumi:"protectedItemCount"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
}

// MabContainerInput is an input type that accepts MabContainerArgs and MabContainerOutput values.
// You can construct a concrete instance of `MabContainerInput` via:
//
//          MabContainerArgs{...}
type MabContainerInput interface {
	pulumi.Input

	ToMabContainerOutput() MabContainerOutput
	ToMabContainerOutputWithContext(context.Context) MabContainerOutput
}

// Container with items backed up using MAB backup engine.
type MabContainerArgs struct {
	// Agent version of this container.
	AgentVersion pulumi.StringPtrInput `pulumi:"agentVersion"`
	// Type of backup management for the container.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// Can the container be registered one more time.
	CanReRegister pulumi.BoolPtrInput `pulumi:"canReRegister"`
	// Health state of mab container.
	ContainerHealthState pulumi.StringPtrInput `pulumi:"containerHealthState"`
	// ContainerID represents the container.
	ContainerId pulumi.IntPtrInput `pulumi:"containerId"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	ContainerType pulumi.StringPtrInput `pulumi:"containerType"`
	// Additional information for this container
	ExtendedInfo MabContainerExtendedInfoPtrInput `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus pulumi.StringPtrInput `pulumi:"healthStatus"`
	// Health details on this mab container.
	MabContainerHealthDetails MABContainerHealthDetailsArrayInput `pulumi:"mabContainerHealthDetails"`
	// Number of items backed up in this container.
	ProtectedItemCount pulumi.IntPtrInput `pulumi:"protectedItemCount"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus pulumi.StringPtrInput `pulumi:"registrationStatus"`
}

func (MabContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MabContainer)(nil)).Elem()
}

func (i MabContainerArgs) ToMabContainerOutput() MabContainerOutput {
	return i.ToMabContainerOutputWithContext(context.Background())
}

func (i MabContainerArgs) ToMabContainerOutputWithContext(ctx context.Context) MabContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MabContainerOutput)
}

// Additional information of the container.
type MabContainerExtendedInfo struct {
	// Type of backup items associated with this container.
	BackupItemType *string `pulumi:"backupItemType"`
	// List of backup items associated with this container.
	BackupItems []string `pulumi:"backupItems"`
	// Latest backup status of this container.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Time stamp when this container was refreshed.
	LastRefreshedAt *string `pulumi:"lastRefreshedAt"`
	// Backup policy associated with this container.
	PolicyName *string `pulumi:"policyName"`
}

// MabContainerExtendedInfoInput is an input type that accepts MabContainerExtendedInfoArgs and MabContainerExtendedInfoOutput values.
// You can construct a concrete instance of `MabContainerExtendedInfoInput` via:
//
//          MabContainerExtendedInfoArgs{...}
type MabContainerExtendedInfoInput interface {
	pulumi.Input

	ToMabContainerExtendedInfoOutput() MabContainerExtendedInfoOutput
	ToMabContainerExtendedInfoOutputWithContext(context.Context) MabContainerExtendedInfoOutput
}

// Additional information of the container.
type MabContainerExtendedInfoArgs struct {
	// Type of backup items associated with this container.
	BackupItemType pulumi.StringPtrInput `pulumi:"backupItemType"`
	// List of backup items associated with this container.
	BackupItems pulumi.StringArrayInput `pulumi:"backupItems"`
	// Latest backup status of this container.
	LastBackupStatus pulumi.StringPtrInput `pulumi:"lastBackupStatus"`
	// Time stamp when this container was refreshed.
	LastRefreshedAt pulumi.StringPtrInput `pulumi:"lastRefreshedAt"`
	// Backup policy associated with this container.
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
}

func (MabContainerExtendedInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MabContainerExtendedInfo)(nil)).Elem()
}

func (i MabContainerExtendedInfoArgs) ToMabContainerExtendedInfoOutput() MabContainerExtendedInfoOutput {
	return i.ToMabContainerExtendedInfoOutputWithContext(context.Background())
}

func (i MabContainerExtendedInfoArgs) ToMabContainerExtendedInfoOutputWithContext(ctx context.Context) MabContainerExtendedInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MabContainerExtendedInfoOutput)
}

func (i MabContainerExtendedInfoArgs) ToMabContainerExtendedInfoPtrOutput() MabContainerExtendedInfoPtrOutput {
	return i.ToMabContainerExtendedInfoPtrOutputWithContext(context.Background())
}

func (i MabContainerExtendedInfoArgs) ToMabContainerExtendedInfoPtrOutputWithContext(ctx context.Context) MabContainerExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MabContainerExtendedInfoOutput).ToMabContainerExtendedInfoPtrOutputWithContext(ctx)
}

// MabContainerExtendedInfoPtrInput is an input type that accepts MabContainerExtendedInfoArgs, MabContainerExtendedInfoPtr and MabContainerExtendedInfoPtrOutput values.
// You can construct a concrete instance of `MabContainerExtendedInfoPtrInput` via:
//
//          MabContainerExtendedInfoArgs{...}
//
//  or:
//
//          nil
type MabContainerExtendedInfoPtrInput interface {
	pulumi.Input

	ToMabContainerExtendedInfoPtrOutput() MabContainerExtendedInfoPtrOutput
	ToMabContainerExtendedInfoPtrOutputWithContext(context.Context) MabContainerExtendedInfoPtrOutput
}

type mabContainerExtendedInfoPtrType MabContainerExtendedInfoArgs

func MabContainerExtendedInfoPtr(v *MabContainerExtendedInfoArgs) MabContainerExtendedInfoPtrInput {
	return (*mabContainerExtendedInfoPtrType)(v)
}

func (*mabContainerExtendedInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MabContainerExtendedInfo)(nil)).Elem()
}

func (i *mabContainerExtendedInfoPtrType) ToMabContainerExtendedInfoPtrOutput() MabContainerExtendedInfoPtrOutput {
	return i.ToMabContainerExtendedInfoPtrOutputWithContext(context.Background())
}

func (i *mabContainerExtendedInfoPtrType) ToMabContainerExtendedInfoPtrOutputWithContext(ctx context.Context) MabContainerExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MabContainerExtendedInfoPtrOutput)
}

// Additional information of the container.
type MabContainerExtendedInfoResponse struct {
	// Type of backup items associated with this container.
	BackupItemType *string `pulumi:"backupItemType"`
	// List of backup items associated with this container.
	BackupItems []string `pulumi:"backupItems"`
	// Latest backup status of this container.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Time stamp when this container was refreshed.
	LastRefreshedAt *string `pulumi:"lastRefreshedAt"`
	// Backup policy associated with this container.
	PolicyName *string `pulumi:"policyName"`
}

// Additional information of the container.
type MabContainerExtendedInfoResponseOutput struct{ *pulumi.OutputState }

func (MabContainerExtendedInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MabContainerExtendedInfoResponse)(nil)).Elem()
}

func (o MabContainerExtendedInfoResponseOutput) ToMabContainerExtendedInfoResponseOutput() MabContainerExtendedInfoResponseOutput {
	return o
}

func (o MabContainerExtendedInfoResponseOutput) ToMabContainerExtendedInfoResponseOutputWithContext(ctx context.Context) MabContainerExtendedInfoResponseOutput {
	return o
}

func (o MabContainerExtendedInfoResponseOutput) ToMabContainerExtendedInfoResponsePtrOutput() MabContainerExtendedInfoResponsePtrOutput {
	return o.ToMabContainerExtendedInfoResponsePtrOutputWithContext(context.Background())
}

func (o MabContainerExtendedInfoResponseOutput) ToMabContainerExtendedInfoResponsePtrOutputWithContext(ctx context.Context) MabContainerExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v MabContainerExtendedInfoResponse) *MabContainerExtendedInfoResponse {
		return &v
	}).(MabContainerExtendedInfoResponsePtrOutput)
}

// Type of backup items associated with this container.
func (o MabContainerExtendedInfoResponseOutput) BackupItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainerExtendedInfoResponse) *string { return v.BackupItemType }).(pulumi.StringPtrOutput)
}

// List of backup items associated with this container.
func (o MabContainerExtendedInfoResponseOutput) BackupItems() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MabContainerExtendedInfoResponse) []string { return v.BackupItems }).(pulumi.StringArrayOutput)
}

// Latest backup status of this container.
func (o MabContainerExtendedInfoResponseOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainerExtendedInfoResponse) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Time stamp when this container was refreshed.
func (o MabContainerExtendedInfoResponseOutput) LastRefreshedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainerExtendedInfoResponse) *string { return v.LastRefreshedAt }).(pulumi.StringPtrOutput)
}

// Backup policy associated with this container.
func (o MabContainerExtendedInfoResponseOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainerExtendedInfoResponse) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

type MabContainerExtendedInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (MabContainerExtendedInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MabContainerExtendedInfoResponse)(nil)).Elem()
}

func (o MabContainerExtendedInfoResponsePtrOutput) ToMabContainerExtendedInfoResponsePtrOutput() MabContainerExtendedInfoResponsePtrOutput {
	return o
}

func (o MabContainerExtendedInfoResponsePtrOutput) ToMabContainerExtendedInfoResponsePtrOutputWithContext(ctx context.Context) MabContainerExtendedInfoResponsePtrOutput {
	return o
}

func (o MabContainerExtendedInfoResponsePtrOutput) Elem() MabContainerExtendedInfoResponseOutput {
	return o.ApplyT(func(v *MabContainerExtendedInfoResponse) MabContainerExtendedInfoResponse { return *v }).(MabContainerExtendedInfoResponseOutput)
}

// Type of backup items associated with this container.
func (o MabContainerExtendedInfoResponsePtrOutput) BackupItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabContainerExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.BackupItemType
	}).(pulumi.StringPtrOutput)
}

// List of backup items associated with this container.
func (o MabContainerExtendedInfoResponsePtrOutput) BackupItems() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MabContainerExtendedInfoResponse) []string {
		if v == nil {
			return nil
		}
		return v.BackupItems
	}).(pulumi.StringArrayOutput)
}

// Latest backup status of this container.
func (o MabContainerExtendedInfoResponsePtrOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabContainerExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastBackupStatus
	}).(pulumi.StringPtrOutput)
}

// Time stamp when this container was refreshed.
func (o MabContainerExtendedInfoResponsePtrOutput) LastRefreshedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabContainerExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastRefreshedAt
	}).(pulumi.StringPtrOutput)
}

// Backup policy associated with this container.
func (o MabContainerExtendedInfoResponsePtrOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabContainerExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.PolicyName
	}).(pulumi.StringPtrOutput)
}

// Container with items backed up using MAB backup engine.
type MabContainerResponse struct {
	// Agent version of this container.
	AgentVersion *string `pulumi:"agentVersion"`
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Can the container be registered one more time.
	CanReRegister *bool `pulumi:"canReRegister"`
	// Health state of mab container.
	ContainerHealthState *string `pulumi:"containerHealthState"`
	// ContainerID represents the container.
	ContainerId *int `pulumi:"containerId"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	ContainerType *string `pulumi:"containerType"`
	// Additional information for this container
	ExtendedInfo *MabContainerExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Health details on this mab container.
	MabContainerHealthDetails []MABContainerHealthDetailsResponse `pulumi:"mabContainerHealthDetails"`
	// Number of items backed up in this container.
	ProtectedItemCount *int `pulumi:"protectedItemCount"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
}

// Container with items backed up using MAB backup engine.
type MabContainerResponseOutput struct{ *pulumi.OutputState }

func (MabContainerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MabContainerResponse)(nil)).Elem()
}

func (o MabContainerResponseOutput) ToMabContainerResponseOutput() MabContainerResponseOutput {
	return o
}

func (o MabContainerResponseOutput) ToMabContainerResponseOutputWithContext(ctx context.Context) MabContainerResponseOutput {
	return o
}

// Agent version of this container.
func (o MabContainerResponseOutput) AgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainerResponse) *string { return v.AgentVersion }).(pulumi.StringPtrOutput)
}

// Type of backup management for the container.
func (o MabContainerResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainerResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Can the container be registered one more time.
func (o MabContainerResponseOutput) CanReRegister() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MabContainerResponse) *bool { return v.CanReRegister }).(pulumi.BoolPtrOutput)
}

// Health state of mab container.
func (o MabContainerResponseOutput) ContainerHealthState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainerResponse) *string { return v.ContainerHealthState }).(pulumi.StringPtrOutput)
}

// ContainerID represents the container.
func (o MabContainerResponseOutput) ContainerId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MabContainerResponse) *int { return v.ContainerId }).(pulumi.IntPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
func (o MabContainerResponseOutput) ContainerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainerResponse) *string { return v.ContainerType }).(pulumi.StringPtrOutput)
}

// Additional information for this container
func (o MabContainerResponseOutput) ExtendedInfo() MabContainerExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v MabContainerResponse) *MabContainerExtendedInfoResponse { return v.ExtendedInfo }).(MabContainerExtendedInfoResponsePtrOutput)
}

// Friendly name of the container.
func (o MabContainerResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainerResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o MabContainerResponseOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainerResponse) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Health details on this mab container.
func (o MabContainerResponseOutput) MabContainerHealthDetails() MABContainerHealthDetailsResponseArrayOutput {
	return o.ApplyT(func(v MabContainerResponse) []MABContainerHealthDetailsResponse { return v.MabContainerHealthDetails }).(MABContainerHealthDetailsResponseArrayOutput)
}

// Number of items backed up in this container.
func (o MabContainerResponseOutput) ProtectedItemCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MabContainerResponse) *int { return v.ProtectedItemCount }).(pulumi.IntPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o MabContainerResponseOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainerResponse) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// MAB workload-specific backup item.
type MabFileFolderProtectedItem struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Name of the computer associated with this backup item.
	ComputerName *string `pulumi:"computerName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Sync time for deferred deletion in UTC
	DeferredDeleteSyncTimeInUTC *int `pulumi:"deferredDeleteSyncTimeInUTC"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information with this backup item.
	ExtendedInfo *MabFileFolderProtectedItemExtendedInfo `pulumi:"extendedInfo"`
	// Friendly name of this backup item.
	FriendlyName *string `pulumi:"friendlyName"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Status of last backup operation.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// backup item type.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Protected, ProtectionStopped, IRPending or ProtectionError
	ProtectionState *string `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Type of workload this item represents.
	WorkloadType *string `pulumi:"workloadType"`
}

// MabFileFolderProtectedItemInput is an input type that accepts MabFileFolderProtectedItemArgs and MabFileFolderProtectedItemOutput values.
// You can construct a concrete instance of `MabFileFolderProtectedItemInput` via:
//
//          MabFileFolderProtectedItemArgs{...}
type MabFileFolderProtectedItemInput interface {
	pulumi.Input

	ToMabFileFolderProtectedItemOutput() MabFileFolderProtectedItemOutput
	ToMabFileFolderProtectedItemOutputWithContext(context.Context) MabFileFolderProtectedItemOutput
}

// MAB workload-specific backup item.
type MabFileFolderProtectedItemArgs struct {
	// Type of backup management for the backed up item.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName pulumi.StringPtrInput `pulumi:"backupSetName"`
	// Name of the computer associated with this backup item.
	ComputerName pulumi.StringPtrInput `pulumi:"computerName"`
	// Unique name of container
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode pulumi.StringPtrInput `pulumi:"createMode"`
	// Sync time for deferred deletion in UTC
	DeferredDeleteSyncTimeInUTC pulumi.IntPtrInput `pulumi:"deferredDeleteSyncTimeInUTC"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC pulumi.StringPtrInput `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining pulumi.StringPtrInput `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information with this backup item.
	ExtendedInfo MabFileFolderProtectedItemExtendedInfoPtrInput `pulumi:"extendedInfo"`
	// Friendly name of this backup item.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming pulumi.BoolPtrInput `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate pulumi.BoolPtrInput `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete pulumi.BoolPtrInput `pulumi:"isScheduledForDeferredDelete"`
	// Status of last backup operation.
	LastBackupStatus pulumi.StringPtrInput `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime pulumi.StringPtrInput `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint pulumi.StringPtrInput `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// backup item type.
	ProtectedItemType pulumi.StringInput `pulumi:"protectedItemType"`
	// Protected, ProtectionStopped, IRPending or ProtectionError
	ProtectionState pulumi.StringPtrInput `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
	// Type of workload this item represents.
	WorkloadType pulumi.StringPtrInput `pulumi:"workloadType"`
}

func (MabFileFolderProtectedItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MabFileFolderProtectedItem)(nil)).Elem()
}

func (i MabFileFolderProtectedItemArgs) ToMabFileFolderProtectedItemOutput() MabFileFolderProtectedItemOutput {
	return i.ToMabFileFolderProtectedItemOutputWithContext(context.Background())
}

func (i MabFileFolderProtectedItemArgs) ToMabFileFolderProtectedItemOutputWithContext(ctx context.Context) MabFileFolderProtectedItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MabFileFolderProtectedItemOutput)
}

// Additional information on the backed up item.
type MabFileFolderProtectedItemExtendedInfo struct {
	// Last time when the agent data synced to service.
	LastRefreshedAt *string `pulumi:"lastRefreshedAt"`
	// The oldest backup copy available.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// Number of backup copies associated with the backup item.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
}

// MabFileFolderProtectedItemExtendedInfoInput is an input type that accepts MabFileFolderProtectedItemExtendedInfoArgs and MabFileFolderProtectedItemExtendedInfoOutput values.
// You can construct a concrete instance of `MabFileFolderProtectedItemExtendedInfoInput` via:
//
//          MabFileFolderProtectedItemExtendedInfoArgs{...}
type MabFileFolderProtectedItemExtendedInfoInput interface {
	pulumi.Input

	ToMabFileFolderProtectedItemExtendedInfoOutput() MabFileFolderProtectedItemExtendedInfoOutput
	ToMabFileFolderProtectedItemExtendedInfoOutputWithContext(context.Context) MabFileFolderProtectedItemExtendedInfoOutput
}

// Additional information on the backed up item.
type MabFileFolderProtectedItemExtendedInfoArgs struct {
	// Last time when the agent data synced to service.
	LastRefreshedAt pulumi.StringPtrInput `pulumi:"lastRefreshedAt"`
	// The oldest backup copy available.
	OldestRecoveryPoint pulumi.StringPtrInput `pulumi:"oldestRecoveryPoint"`
	// Number of backup copies associated with the backup item.
	RecoveryPointCount pulumi.IntPtrInput `pulumi:"recoveryPointCount"`
}

func (MabFileFolderProtectedItemExtendedInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MabFileFolderProtectedItemExtendedInfo)(nil)).Elem()
}

func (i MabFileFolderProtectedItemExtendedInfoArgs) ToMabFileFolderProtectedItemExtendedInfoOutput() MabFileFolderProtectedItemExtendedInfoOutput {
	return i.ToMabFileFolderProtectedItemExtendedInfoOutputWithContext(context.Background())
}

func (i MabFileFolderProtectedItemExtendedInfoArgs) ToMabFileFolderProtectedItemExtendedInfoOutputWithContext(ctx context.Context) MabFileFolderProtectedItemExtendedInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MabFileFolderProtectedItemExtendedInfoOutput)
}

func (i MabFileFolderProtectedItemExtendedInfoArgs) ToMabFileFolderProtectedItemExtendedInfoPtrOutput() MabFileFolderProtectedItemExtendedInfoPtrOutput {
	return i.ToMabFileFolderProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (i MabFileFolderProtectedItemExtendedInfoArgs) ToMabFileFolderProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) MabFileFolderProtectedItemExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MabFileFolderProtectedItemExtendedInfoOutput).ToMabFileFolderProtectedItemExtendedInfoPtrOutputWithContext(ctx)
}

// MabFileFolderProtectedItemExtendedInfoPtrInput is an input type that accepts MabFileFolderProtectedItemExtendedInfoArgs, MabFileFolderProtectedItemExtendedInfoPtr and MabFileFolderProtectedItemExtendedInfoPtrOutput values.
// You can construct a concrete instance of `MabFileFolderProtectedItemExtendedInfoPtrInput` via:
//
//          MabFileFolderProtectedItemExtendedInfoArgs{...}
//
//  or:
//
//          nil
type MabFileFolderProtectedItemExtendedInfoPtrInput interface {
	pulumi.Input

	ToMabFileFolderProtectedItemExtendedInfoPtrOutput() MabFileFolderProtectedItemExtendedInfoPtrOutput
	ToMabFileFolderProtectedItemExtendedInfoPtrOutputWithContext(context.Context) MabFileFolderProtectedItemExtendedInfoPtrOutput
}

type mabFileFolderProtectedItemExtendedInfoPtrType MabFileFolderProtectedItemExtendedInfoArgs

func MabFileFolderProtectedItemExtendedInfoPtr(v *MabFileFolderProtectedItemExtendedInfoArgs) MabFileFolderProtectedItemExtendedInfoPtrInput {
	return (*mabFileFolderProtectedItemExtendedInfoPtrType)(v)
}

func (*mabFileFolderProtectedItemExtendedInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MabFileFolderProtectedItemExtendedInfo)(nil)).Elem()
}

func (i *mabFileFolderProtectedItemExtendedInfoPtrType) ToMabFileFolderProtectedItemExtendedInfoPtrOutput() MabFileFolderProtectedItemExtendedInfoPtrOutput {
	return i.ToMabFileFolderProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (i *mabFileFolderProtectedItemExtendedInfoPtrType) ToMabFileFolderProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) MabFileFolderProtectedItemExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MabFileFolderProtectedItemExtendedInfoPtrOutput)
}

// Additional information on the backed up item.
type MabFileFolderProtectedItemExtendedInfoResponse struct {
	// Last time when the agent data synced to service.
	LastRefreshedAt *string `pulumi:"lastRefreshedAt"`
	// The oldest backup copy available.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// Number of backup copies associated with the backup item.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
}

// Additional information on the backed up item.
type MabFileFolderProtectedItemExtendedInfoResponseOutput struct{ *pulumi.OutputState }

func (MabFileFolderProtectedItemExtendedInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MabFileFolderProtectedItemExtendedInfoResponse)(nil)).Elem()
}

func (o MabFileFolderProtectedItemExtendedInfoResponseOutput) ToMabFileFolderProtectedItemExtendedInfoResponseOutput() MabFileFolderProtectedItemExtendedInfoResponseOutput {
	return o
}

func (o MabFileFolderProtectedItemExtendedInfoResponseOutput) ToMabFileFolderProtectedItemExtendedInfoResponseOutputWithContext(ctx context.Context) MabFileFolderProtectedItemExtendedInfoResponseOutput {
	return o
}

func (o MabFileFolderProtectedItemExtendedInfoResponseOutput) ToMabFileFolderProtectedItemExtendedInfoResponsePtrOutput() MabFileFolderProtectedItemExtendedInfoResponsePtrOutput {
	return o.ToMabFileFolderProtectedItemExtendedInfoResponsePtrOutputWithContext(context.Background())
}

func (o MabFileFolderProtectedItemExtendedInfoResponseOutput) ToMabFileFolderProtectedItemExtendedInfoResponsePtrOutputWithContext(ctx context.Context) MabFileFolderProtectedItemExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemExtendedInfoResponse) *MabFileFolderProtectedItemExtendedInfoResponse {
		return &v
	}).(MabFileFolderProtectedItemExtendedInfoResponsePtrOutput)
}

// Last time when the agent data synced to service.
func (o MabFileFolderProtectedItemExtendedInfoResponseOutput) LastRefreshedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemExtendedInfoResponse) *string { return v.LastRefreshedAt }).(pulumi.StringPtrOutput)
}

// The oldest backup copy available.
func (o MabFileFolderProtectedItemExtendedInfoResponseOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemExtendedInfoResponse) *string { return v.OldestRecoveryPoint }).(pulumi.StringPtrOutput)
}

// Number of backup copies associated with the backup item.
func (o MabFileFolderProtectedItemExtendedInfoResponseOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemExtendedInfoResponse) *int { return v.RecoveryPointCount }).(pulumi.IntPtrOutput)
}

type MabFileFolderProtectedItemExtendedInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (MabFileFolderProtectedItemExtendedInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MabFileFolderProtectedItemExtendedInfoResponse)(nil)).Elem()
}

func (o MabFileFolderProtectedItemExtendedInfoResponsePtrOutput) ToMabFileFolderProtectedItemExtendedInfoResponsePtrOutput() MabFileFolderProtectedItemExtendedInfoResponsePtrOutput {
	return o
}

func (o MabFileFolderProtectedItemExtendedInfoResponsePtrOutput) ToMabFileFolderProtectedItemExtendedInfoResponsePtrOutputWithContext(ctx context.Context) MabFileFolderProtectedItemExtendedInfoResponsePtrOutput {
	return o
}

func (o MabFileFolderProtectedItemExtendedInfoResponsePtrOutput) Elem() MabFileFolderProtectedItemExtendedInfoResponseOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItemExtendedInfoResponse) MabFileFolderProtectedItemExtendedInfoResponse {
		return *v
	}).(MabFileFolderProtectedItemExtendedInfoResponseOutput)
}

// Last time when the agent data synced to service.
func (o MabFileFolderProtectedItemExtendedInfoResponsePtrOutput) LastRefreshedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastRefreshedAt
	}).(pulumi.StringPtrOutput)
}

// The oldest backup copy available.
func (o MabFileFolderProtectedItemExtendedInfoResponsePtrOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// Number of backup copies associated with the backup item.
func (o MabFileFolderProtectedItemExtendedInfoResponsePtrOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItemExtendedInfoResponse) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointCount
	}).(pulumi.IntPtrOutput)
}

// MAB workload-specific backup item.
type MabFileFolderProtectedItemResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Name of the computer associated with this backup item.
	ComputerName *string `pulumi:"computerName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Sync time for deferred deletion in UTC
	DeferredDeleteSyncTimeInUTC *int `pulumi:"deferredDeleteSyncTimeInUTC"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information with this backup item.
	ExtendedInfo *MabFileFolderProtectedItemExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of this backup item.
	FriendlyName *string `pulumi:"friendlyName"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Status of last backup operation.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// backup item type.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Protected, ProtectionStopped, IRPending or ProtectionError
	ProtectionState *string `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Type of workload this item represents.
	WorkloadType *string `pulumi:"workloadType"`
}

// MAB workload-specific backup item.
type MabFileFolderProtectedItemResponseOutput struct{ *pulumi.OutputState }

func (MabFileFolderProtectedItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MabFileFolderProtectedItemResponse)(nil)).Elem()
}

func (o MabFileFolderProtectedItemResponseOutput) ToMabFileFolderProtectedItemResponseOutput() MabFileFolderProtectedItemResponseOutput {
	return o
}

func (o MabFileFolderProtectedItemResponseOutput) ToMabFileFolderProtectedItemResponseOutputWithContext(ctx context.Context) MabFileFolderProtectedItemResponseOutput {
	return o
}

// Type of backup management for the backed up item.
func (o MabFileFolderProtectedItemResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Name of the backup set the backup item belongs to
func (o MabFileFolderProtectedItemResponseOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Name of the computer associated with this backup item.
func (o MabFileFolderProtectedItemResponseOutput) ComputerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *string { return v.ComputerName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o MabFileFolderProtectedItemResponseOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o MabFileFolderProtectedItemResponseOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Sync time for deferred deletion in UTC
func (o MabFileFolderProtectedItemResponseOutput) DeferredDeleteSyncTimeInUTC() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *int { return v.DeferredDeleteSyncTimeInUTC }).(pulumi.IntPtrOutput)
}

// Time for deferred deletion in UTC
func (o MabFileFolderProtectedItemResponseOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o MabFileFolderProtectedItemResponseOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Additional information with this backup item.
func (o MabFileFolderProtectedItemResponseOutput) ExtendedInfo() MabFileFolderProtectedItemExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *MabFileFolderProtectedItemExtendedInfoResponse {
		return v.ExtendedInfo
	}).(MabFileFolderProtectedItemExtendedInfoResponsePtrOutput)
}

// Friendly name of this backup item.
func (o MabFileFolderProtectedItemResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o MabFileFolderProtectedItemResponseOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o MabFileFolderProtectedItemResponseOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o MabFileFolderProtectedItemResponseOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Status of last backup operation.
func (o MabFileFolderProtectedItemResponseOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o MabFileFolderProtectedItemResponseOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *string { return v.LastBackupTime }).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o MabFileFolderProtectedItemResponseOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o MabFileFolderProtectedItemResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// backup item type.
func (o MabFileFolderProtectedItemResponseOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Protected, ProtectionStopped, IRPending or ProtectionError
func (o MabFileFolderProtectedItemResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o MabFileFolderProtectedItemResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// Type of workload this item represents.
func (o MabFileFolderProtectedItemResponseOutput) WorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *string { return v.WorkloadType }).(pulumi.StringPtrOutput)
}

// The backup policy for the file or folder container.
type MabProtectionPolicy struct {
	// This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// The number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// The details specified in the Retention policy.
	RetentionPolicy interface{} `pulumi:"retentionPolicy"`
	// The schedule specified in the backup policy.
	SchedulePolicy interface{} `pulumi:"schedulePolicy"`
}

// MabProtectionPolicyInput is an input type that accepts MabProtectionPolicyArgs and MabProtectionPolicyOutput values.
// You can construct a concrete instance of `MabProtectionPolicyInput` via:
//
//          MabProtectionPolicyArgs{...}
type MabProtectionPolicyInput interface {
	pulumi.Input

	ToMabProtectionPolicyOutput() MabProtectionPolicyOutput
	ToMabProtectionPolicyOutputWithContext(context.Context) MabProtectionPolicyOutput
}

// The backup policy for the file or folder container.
type MabProtectionPolicyArgs struct {
	// This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// The number of items associated with this policy.
	ProtectedItemsCount pulumi.IntPtrInput `pulumi:"protectedItemsCount"`
	// The details specified in the Retention policy.
	RetentionPolicy pulumi.Input `pulumi:"retentionPolicy"`
	// The schedule specified in the backup policy.
	SchedulePolicy pulumi.Input `pulumi:"schedulePolicy"`
}

func (MabProtectionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MabProtectionPolicy)(nil)).Elem()
}

func (i MabProtectionPolicyArgs) ToMabProtectionPolicyOutput() MabProtectionPolicyOutput {
	return i.ToMabProtectionPolicyOutputWithContext(context.Background())
}

func (i MabProtectionPolicyArgs) ToMabProtectionPolicyOutputWithContext(ctx context.Context) MabProtectionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MabProtectionPolicyOutput)
}

// The backup policy for the file or folder container.
type MabProtectionPolicyResponse struct {
	// This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// The number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// The details specified in the Retention policy.
	RetentionPolicy interface{} `pulumi:"retentionPolicy"`
	// The schedule specified in the backup policy.
	SchedulePolicy interface{} `pulumi:"schedulePolicy"`
}

// The backup policy for the file or folder container.
type MabProtectionPolicyResponseOutput struct{ *pulumi.OutputState }

func (MabProtectionPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MabProtectionPolicyResponse)(nil)).Elem()
}

func (o MabProtectionPolicyResponseOutput) ToMabProtectionPolicyResponseOutput() MabProtectionPolicyResponseOutput {
	return o
}

func (o MabProtectionPolicyResponseOutput) ToMabProtectionPolicyResponseOutputWithContext(ctx context.Context) MabProtectionPolicyResponseOutput {
	return o
}

// This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
func (o MabProtectionPolicyResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabProtectionPolicyResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// The number of items associated with this policy.
func (o MabProtectionPolicyResponseOutput) ProtectedItemsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MabProtectionPolicyResponse) *int { return v.ProtectedItemsCount }).(pulumi.IntPtrOutput)
}

// The details specified in the Retention policy.
func (o MabProtectionPolicyResponseOutput) RetentionPolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v MabProtectionPolicyResponse) interface{} { return v.RetentionPolicy }).(pulumi.AnyOutput)
}

// The schedule specified in the backup policy.
func (o MabProtectionPolicyResponseOutput) SchedulePolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v MabProtectionPolicyResponse) interface{} { return v.SchedulePolicy }).(pulumi.AnyOutput)
}

// Details of a Master Target Server.
type MasterTargetServerResponse struct {
	// Agent expiry date.
	AgentExpiryDate *string `pulumi:"agentExpiryDate"`
	// The version of the scout component on the server.
	AgentVersion *string `pulumi:"agentVersion"`
	// Agent version details.
	AgentVersionDetails *VersionDetailsResponse `pulumi:"agentVersionDetails"`
	// The list of data stores in the fabric.
	DataStores []DataStoreResponse `pulumi:"dataStores"`
	// Disk count of the master target.
	DiskCount *int `pulumi:"diskCount"`
	// Health errors.
	HealthErrors []HealthErrorResponse `pulumi:"healthErrors"`
	// The server Id.
	Id *string `pulumi:"id"`
	// The IP address of the server.
	IpAddress *string `pulumi:"ipAddress"`
	// The last heartbeat received from the server.
	LastHeartbeat *string `pulumi:"lastHeartbeat"`
	// MARS agent expiry date.
	MarsAgentExpiryDate *string `pulumi:"marsAgentExpiryDate"`
	// MARS agent version.
	MarsAgentVersion *string `pulumi:"marsAgentVersion"`
	// Mars agent version details.
	MarsAgentVersionDetails *VersionDetailsResponse `pulumi:"marsAgentVersionDetails"`
	// The server name.
	Name *string `pulumi:"name"`
	// The OS type of the server.
	OsType *string `pulumi:"osType"`
	// OS Version of the master target.
	OsVersion *string `pulumi:"osVersion"`
	// The retention volumes of Master target Server.
	RetentionVolumes []RetentionVolumeResponse `pulumi:"retentionVolumes"`
	// Validation errors.
	ValidationErrors []HealthErrorResponse `pulumi:"validationErrors"`
	// Version status
	VersionStatus *string `pulumi:"versionStatus"`
}

// Details of a Master Target Server.
type MasterTargetServerResponseOutput struct{ *pulumi.OutputState }

func (MasterTargetServerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MasterTargetServerResponse)(nil)).Elem()
}

func (o MasterTargetServerResponseOutput) ToMasterTargetServerResponseOutput() MasterTargetServerResponseOutput {
	return o
}

func (o MasterTargetServerResponseOutput) ToMasterTargetServerResponseOutputWithContext(ctx context.Context) MasterTargetServerResponseOutput {
	return o
}

// Agent expiry date.
func (o MasterTargetServerResponseOutput) AgentExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) *string { return v.AgentExpiryDate }).(pulumi.StringPtrOutput)
}

// The version of the scout component on the server.
func (o MasterTargetServerResponseOutput) AgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) *string { return v.AgentVersion }).(pulumi.StringPtrOutput)
}

// Agent version details.
func (o MasterTargetServerResponseOutput) AgentVersionDetails() VersionDetailsResponsePtrOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) *VersionDetailsResponse { return v.AgentVersionDetails }).(VersionDetailsResponsePtrOutput)
}

// The list of data stores in the fabric.
func (o MasterTargetServerResponseOutput) DataStores() DataStoreResponseArrayOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) []DataStoreResponse { return v.DataStores }).(DataStoreResponseArrayOutput)
}

// Disk count of the master target.
func (o MasterTargetServerResponseOutput) DiskCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) *int { return v.DiskCount }).(pulumi.IntPtrOutput)
}

// Health errors.
func (o MasterTargetServerResponseOutput) HealthErrors() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) []HealthErrorResponse { return v.HealthErrors }).(HealthErrorResponseArrayOutput)
}

// The server Id.
func (o MasterTargetServerResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The IP address of the server.
func (o MasterTargetServerResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The last heartbeat received from the server.
func (o MasterTargetServerResponseOutput) LastHeartbeat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) *string { return v.LastHeartbeat }).(pulumi.StringPtrOutput)
}

// MARS agent expiry date.
func (o MasterTargetServerResponseOutput) MarsAgentExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) *string { return v.MarsAgentExpiryDate }).(pulumi.StringPtrOutput)
}

// MARS agent version.
func (o MasterTargetServerResponseOutput) MarsAgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) *string { return v.MarsAgentVersion }).(pulumi.StringPtrOutput)
}

// Mars agent version details.
func (o MasterTargetServerResponseOutput) MarsAgentVersionDetails() VersionDetailsResponsePtrOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) *VersionDetailsResponse { return v.MarsAgentVersionDetails }).(VersionDetailsResponsePtrOutput)
}

// The server name.
func (o MasterTargetServerResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The OS type of the server.
func (o MasterTargetServerResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// OS Version of the master target.
func (o MasterTargetServerResponseOutput) OsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) *string { return v.OsVersion }).(pulumi.StringPtrOutput)
}

// The retention volumes of Master target Server.
func (o MasterTargetServerResponseOutput) RetentionVolumes() RetentionVolumeResponseArrayOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) []RetentionVolumeResponse { return v.RetentionVolumes }).(RetentionVolumeResponseArrayOutput)
}

// Validation errors.
func (o MasterTargetServerResponseOutput) ValidationErrors() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) []HealthErrorResponse { return v.ValidationErrors }).(HealthErrorResponseArrayOutput)
}

// Version status
func (o MasterTargetServerResponseOutput) VersionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) *string { return v.VersionStatus }).(pulumi.StringPtrOutput)
}

type MasterTargetServerResponseArrayOutput struct{ *pulumi.OutputState }

func (MasterTargetServerResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MasterTargetServerResponse)(nil)).Elem()
}

func (o MasterTargetServerResponseArrayOutput) ToMasterTargetServerResponseArrayOutput() MasterTargetServerResponseArrayOutput {
	return o
}

func (o MasterTargetServerResponseArrayOutput) ToMasterTargetServerResponseArrayOutputWithContext(ctx context.Context) MasterTargetServerResponseArrayOutput {
	return o
}

func (o MasterTargetServerResponseArrayOutput) Index(i pulumi.IntInput) MasterTargetServerResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MasterTargetServerResponse {
		return vs[0].([]MasterTargetServerResponse)[vs[1].(int)]
	}).(MasterTargetServerResponseOutput)
}

// Migration item properties.
type MigrationItemPropertiesResponse struct {
	// The allowed operations on the migration item, based on the current migration state of the item.
	AllowedOperations []string `pulumi:"allowedOperations"`
	// The current job details.
	CurrentJob CurrentJobDetailsResponse `pulumi:"currentJob"`
	// The consolidated health.
	Health string `pulumi:"health"`
	// The list of health errors.
	HealthErrors []HealthErrorResponse `pulumi:"healthErrors"`
	// The on-premise virtual machine name.
	MachineName string `pulumi:"machineName"`
	// The migration status.
	MigrationState string `pulumi:"migrationState"`
	// The migration state description.
	MigrationStateDescription string `pulumi:"migrationStateDescription"`
	// The name of policy governing this item.
	PolicyFriendlyName string `pulumi:"policyFriendlyName"`
	// The ARM Id of policy governing this item.
	PolicyId string `pulumi:"policyId"`
	// The migration provider custom settings.
	ProviderSpecificDetails *VMwareCbtMigrationDetailsResponse `pulumi:"providerSpecificDetails"`
	// The recovery services provider ARM Id.
	RecoveryServicesProviderId string `pulumi:"recoveryServicesProviderId"`
	// The test migrate state.
	TestMigrateState string `pulumi:"testMigrateState"`
	// The test migrate state description.
	TestMigrateStateDescription string `pulumi:"testMigrateStateDescription"`
}

// Migration item properties.
type MigrationItemPropertiesResponseOutput struct{ *pulumi.OutputState }

func (MigrationItemPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationItemPropertiesResponse)(nil)).Elem()
}

func (o MigrationItemPropertiesResponseOutput) ToMigrationItemPropertiesResponseOutput() MigrationItemPropertiesResponseOutput {
	return o
}

func (o MigrationItemPropertiesResponseOutput) ToMigrationItemPropertiesResponseOutputWithContext(ctx context.Context) MigrationItemPropertiesResponseOutput {
	return o
}

func (o MigrationItemPropertiesResponseOutput) ToMigrationItemPropertiesResponsePtrOutput() MigrationItemPropertiesResponsePtrOutput {
	return o.ToMigrationItemPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o MigrationItemPropertiesResponseOutput) ToMigrationItemPropertiesResponsePtrOutputWithContext(ctx context.Context) MigrationItemPropertiesResponsePtrOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) *MigrationItemPropertiesResponse {
		return &v
	}).(MigrationItemPropertiesResponsePtrOutput)
}

// The allowed operations on the migration item, based on the current migration state of the item.
func (o MigrationItemPropertiesResponseOutput) AllowedOperations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) []string { return v.AllowedOperations }).(pulumi.StringArrayOutput)
}

// The current job details.
func (o MigrationItemPropertiesResponseOutput) CurrentJob() CurrentJobDetailsResponseOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) CurrentJobDetailsResponse { return v.CurrentJob }).(CurrentJobDetailsResponseOutput)
}

// The consolidated health.
func (o MigrationItemPropertiesResponseOutput) Health() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) string { return v.Health }).(pulumi.StringOutput)
}

// The list of health errors.
func (o MigrationItemPropertiesResponseOutput) HealthErrors() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) []HealthErrorResponse { return v.HealthErrors }).(HealthErrorResponseArrayOutput)
}

// The on-premise virtual machine name.
func (o MigrationItemPropertiesResponseOutput) MachineName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) string { return v.MachineName }).(pulumi.StringOutput)
}

// The migration status.
func (o MigrationItemPropertiesResponseOutput) MigrationState() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) string { return v.MigrationState }).(pulumi.StringOutput)
}

// The migration state description.
func (o MigrationItemPropertiesResponseOutput) MigrationStateDescription() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) string { return v.MigrationStateDescription }).(pulumi.StringOutput)
}

// The name of policy governing this item.
func (o MigrationItemPropertiesResponseOutput) PolicyFriendlyName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) string { return v.PolicyFriendlyName }).(pulumi.StringOutput)
}

// The ARM Id of policy governing this item.
func (o MigrationItemPropertiesResponseOutput) PolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) string { return v.PolicyId }).(pulumi.StringOutput)
}

// The migration provider custom settings.
func (o MigrationItemPropertiesResponseOutput) ProviderSpecificDetails() VMwareCbtMigrationDetailsResponsePtrOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) *VMwareCbtMigrationDetailsResponse {
		return v.ProviderSpecificDetails
	}).(VMwareCbtMigrationDetailsResponsePtrOutput)
}

// The recovery services provider ARM Id.
func (o MigrationItemPropertiesResponseOutput) RecoveryServicesProviderId() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) string { return v.RecoveryServicesProviderId }).(pulumi.StringOutput)
}

// The test migrate state.
func (o MigrationItemPropertiesResponseOutput) TestMigrateState() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) string { return v.TestMigrateState }).(pulumi.StringOutput)
}

// The test migrate state description.
func (o MigrationItemPropertiesResponseOutput) TestMigrateStateDescription() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) string { return v.TestMigrateStateDescription }).(pulumi.StringOutput)
}

type MigrationItemPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (MigrationItemPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrationItemPropertiesResponse)(nil)).Elem()
}

func (o MigrationItemPropertiesResponsePtrOutput) ToMigrationItemPropertiesResponsePtrOutput() MigrationItemPropertiesResponsePtrOutput {
	return o
}

func (o MigrationItemPropertiesResponsePtrOutput) ToMigrationItemPropertiesResponsePtrOutputWithContext(ctx context.Context) MigrationItemPropertiesResponsePtrOutput {
	return o
}

func (o MigrationItemPropertiesResponsePtrOutput) Elem() MigrationItemPropertiesResponseOutput {
	return o.ApplyT(func(v *MigrationItemPropertiesResponse) MigrationItemPropertiesResponse { return *v }).(MigrationItemPropertiesResponseOutput)
}

// The allowed operations on the migration item, based on the current migration state of the item.
func (o MigrationItemPropertiesResponsePtrOutput) AllowedOperations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MigrationItemPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.AllowedOperations
	}).(pulumi.StringArrayOutput)
}

// The current job details.
func (o MigrationItemPropertiesResponsePtrOutput) CurrentJob() CurrentJobDetailsResponsePtrOutput {
	return o.ApplyT(func(v *MigrationItemPropertiesResponse) *CurrentJobDetailsResponse {
		if v == nil {
			return nil
		}
		return &v.CurrentJob
	}).(CurrentJobDetailsResponsePtrOutput)
}

// The consolidated health.
func (o MigrationItemPropertiesResponsePtrOutput) Health() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrationItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Health
	}).(pulumi.StringPtrOutput)
}

// The list of health errors.
func (o MigrationItemPropertiesResponsePtrOutput) HealthErrors() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v *MigrationItemPropertiesResponse) []HealthErrorResponse {
		if v == nil {
			return nil
		}
		return v.HealthErrors
	}).(HealthErrorResponseArrayOutput)
}

// The on-premise virtual machine name.
func (o MigrationItemPropertiesResponsePtrOutput) MachineName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrationItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MachineName
	}).(pulumi.StringPtrOutput)
}

// The migration status.
func (o MigrationItemPropertiesResponsePtrOutput) MigrationState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrationItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MigrationState
	}).(pulumi.StringPtrOutput)
}

// The migration state description.
func (o MigrationItemPropertiesResponsePtrOutput) MigrationStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrationItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MigrationStateDescription
	}).(pulumi.StringPtrOutput)
}

// The name of policy governing this item.
func (o MigrationItemPropertiesResponsePtrOutput) PolicyFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrationItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PolicyFriendlyName
	}).(pulumi.StringPtrOutput)
}

// The ARM Id of policy governing this item.
func (o MigrationItemPropertiesResponsePtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrationItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// The migration provider custom settings.
func (o MigrationItemPropertiesResponsePtrOutput) ProviderSpecificDetails() VMwareCbtMigrationDetailsResponsePtrOutput {
	return o.ApplyT(func(v *MigrationItemPropertiesResponse) *VMwareCbtMigrationDetailsResponse {
		if v == nil {
			return nil
		}
		return v.ProviderSpecificDetails
	}).(VMwareCbtMigrationDetailsResponsePtrOutput)
}

// The recovery services provider ARM Id.
func (o MigrationItemPropertiesResponsePtrOutput) RecoveryServicesProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrationItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RecoveryServicesProviderId
	}).(pulumi.StringPtrOutput)
}

// The test migrate state.
func (o MigrationItemPropertiesResponsePtrOutput) TestMigrateState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrationItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TestMigrateState
	}).(pulumi.StringPtrOutput)
}

// The test migrate state description.
func (o MigrationItemPropertiesResponsePtrOutput) TestMigrateStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrationItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TestMigrateStateDescription
	}).(pulumi.StringPtrOutput)
}

// The Mobility Service update details.
type MobilityServiceUpdateResponse struct {
	// The OS type.
	OsType *string `pulumi:"osType"`
	// The reboot status of the update - whether it is required or not.
	RebootStatus *string `pulumi:"rebootStatus"`
	// The version of the latest update.
	Version *string `pulumi:"version"`
}

// The Mobility Service update details.
type MobilityServiceUpdateResponseOutput struct{ *pulumi.OutputState }

func (MobilityServiceUpdateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MobilityServiceUpdateResponse)(nil)).Elem()
}

func (o MobilityServiceUpdateResponseOutput) ToMobilityServiceUpdateResponseOutput() MobilityServiceUpdateResponseOutput {
	return o
}

func (o MobilityServiceUpdateResponseOutput) ToMobilityServiceUpdateResponseOutputWithContext(ctx context.Context) MobilityServiceUpdateResponseOutput {
	return o
}

// The OS type.
func (o MobilityServiceUpdateResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MobilityServiceUpdateResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// The reboot status of the update - whether it is required or not.
func (o MobilityServiceUpdateResponseOutput) RebootStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MobilityServiceUpdateResponse) *string { return v.RebootStatus }).(pulumi.StringPtrOutput)
}

// The version of the latest update.
func (o MobilityServiceUpdateResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MobilityServiceUpdateResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type MobilityServiceUpdateResponseArrayOutput struct{ *pulumi.OutputState }

func (MobilityServiceUpdateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MobilityServiceUpdateResponse)(nil)).Elem()
}

func (o MobilityServiceUpdateResponseArrayOutput) ToMobilityServiceUpdateResponseArrayOutput() MobilityServiceUpdateResponseArrayOutput {
	return o
}

func (o MobilityServiceUpdateResponseArrayOutput) ToMobilityServiceUpdateResponseArrayOutputWithContext(ctx context.Context) MobilityServiceUpdateResponseArrayOutput {
	return o
}

func (o MobilityServiceUpdateResponseArrayOutput) Index(i pulumi.IntInput) MobilityServiceUpdateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MobilityServiceUpdateResponse {
		return vs[0].([]MobilityServiceUpdateResponse)[vs[1].(int)]
	}).(MobilityServiceUpdateResponseOutput)
}

// The monthly retention schedule.
type MonthlyRetentionSchedule struct {
	// Retention duration of the retention policy.
	RetentionDuration *RetentionDuration `pulumi:"retentionDuration"`
	// Daily retention format for the monthly retention policy.
	RetentionScheduleDaily *DailyRetentionFormat `pulumi:"retentionScheduleDaily"`
	// Retention schedule format type for monthly retention policy.
	RetentionScheduleFormatType *string `pulumi:"retentionScheduleFormatType"`
	// Weekly retention format for the monthly retention policy.
	RetentionScheduleWeekly *WeeklyRetentionFormat `pulumi:"retentionScheduleWeekly"`
	// Retention times of the retention policy.
	RetentionTimes []string `pulumi:"retentionTimes"`
}

// MonthlyRetentionScheduleInput is an input type that accepts MonthlyRetentionScheduleArgs and MonthlyRetentionScheduleOutput values.
// You can construct a concrete instance of `MonthlyRetentionScheduleInput` via:
//
//          MonthlyRetentionScheduleArgs{...}
type MonthlyRetentionScheduleInput interface {
	pulumi.Input

	ToMonthlyRetentionScheduleOutput() MonthlyRetentionScheduleOutput
	ToMonthlyRetentionScheduleOutputWithContext(context.Context) MonthlyRetentionScheduleOutput
}

// The monthly retention schedule.
type MonthlyRetentionScheduleArgs struct {
	// Retention duration of the retention policy.
	RetentionDuration RetentionDurationPtrInput `pulumi:"retentionDuration"`
	// Daily retention format for the monthly retention policy.
	RetentionScheduleDaily DailyRetentionFormatPtrInput `pulumi:"retentionScheduleDaily"`
	// Retention schedule format type for monthly retention policy.
	RetentionScheduleFormatType pulumi.StringPtrInput `pulumi:"retentionScheduleFormatType"`
	// Weekly retention format for the monthly retention policy.
	RetentionScheduleWeekly WeeklyRetentionFormatPtrInput `pulumi:"retentionScheduleWeekly"`
	// Retention times of the retention policy.
	RetentionTimes pulumi.StringArrayInput `pulumi:"retentionTimes"`
}

func (MonthlyRetentionScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonthlyRetentionSchedule)(nil)).Elem()
}

func (i MonthlyRetentionScheduleArgs) ToMonthlyRetentionScheduleOutput() MonthlyRetentionScheduleOutput {
	return i.ToMonthlyRetentionScheduleOutputWithContext(context.Background())
}

func (i MonthlyRetentionScheduleArgs) ToMonthlyRetentionScheduleOutputWithContext(ctx context.Context) MonthlyRetentionScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonthlyRetentionScheduleOutput)
}

func (i MonthlyRetentionScheduleArgs) ToMonthlyRetentionSchedulePtrOutput() MonthlyRetentionSchedulePtrOutput {
	return i.ToMonthlyRetentionSchedulePtrOutputWithContext(context.Background())
}

func (i MonthlyRetentionScheduleArgs) ToMonthlyRetentionSchedulePtrOutputWithContext(ctx context.Context) MonthlyRetentionSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonthlyRetentionScheduleOutput).ToMonthlyRetentionSchedulePtrOutputWithContext(ctx)
}

// MonthlyRetentionSchedulePtrInput is an input type that accepts MonthlyRetentionScheduleArgs, MonthlyRetentionSchedulePtr and MonthlyRetentionSchedulePtrOutput values.
// You can construct a concrete instance of `MonthlyRetentionSchedulePtrInput` via:
//
//          MonthlyRetentionScheduleArgs{...}
//
//  or:
//
//          nil
type MonthlyRetentionSchedulePtrInput interface {
	pulumi.Input

	ToMonthlyRetentionSchedulePtrOutput() MonthlyRetentionSchedulePtrOutput
	ToMonthlyRetentionSchedulePtrOutputWithContext(context.Context) MonthlyRetentionSchedulePtrOutput
}

type monthlyRetentionSchedulePtrType MonthlyRetentionScheduleArgs

func MonthlyRetentionSchedulePtr(v *MonthlyRetentionScheduleArgs) MonthlyRetentionSchedulePtrInput {
	return (*monthlyRetentionSchedulePtrType)(v)
}

func (*monthlyRetentionSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonthlyRetentionSchedule)(nil)).Elem()
}

func (i *monthlyRetentionSchedulePtrType) ToMonthlyRetentionSchedulePtrOutput() MonthlyRetentionSchedulePtrOutput {
	return i.ToMonthlyRetentionSchedulePtrOutputWithContext(context.Background())
}

func (i *monthlyRetentionSchedulePtrType) ToMonthlyRetentionSchedulePtrOutputWithContext(ctx context.Context) MonthlyRetentionSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonthlyRetentionSchedulePtrOutput)
}

// The monthly retention schedule.
type MonthlyRetentionScheduleResponse struct {
	// Retention duration of the retention policy.
	RetentionDuration *RetentionDurationResponse `pulumi:"retentionDuration"`
	// Daily retention format for the monthly retention policy.
	RetentionScheduleDaily *DailyRetentionFormatResponse `pulumi:"retentionScheduleDaily"`
	// Retention schedule format type for monthly retention policy.
	RetentionScheduleFormatType *string `pulumi:"retentionScheduleFormatType"`
	// Weekly retention format for the monthly retention policy.
	RetentionScheduleWeekly *WeeklyRetentionFormatResponse `pulumi:"retentionScheduleWeekly"`
	// Retention times of the retention policy.
	RetentionTimes []string `pulumi:"retentionTimes"`
}

// The monthly retention schedule.
type MonthlyRetentionScheduleResponseOutput struct{ *pulumi.OutputState }

func (MonthlyRetentionScheduleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonthlyRetentionScheduleResponse)(nil)).Elem()
}

func (o MonthlyRetentionScheduleResponseOutput) ToMonthlyRetentionScheduleResponseOutput() MonthlyRetentionScheduleResponseOutput {
	return o
}

func (o MonthlyRetentionScheduleResponseOutput) ToMonthlyRetentionScheduleResponseOutputWithContext(ctx context.Context) MonthlyRetentionScheduleResponseOutput {
	return o
}

func (o MonthlyRetentionScheduleResponseOutput) ToMonthlyRetentionScheduleResponsePtrOutput() MonthlyRetentionScheduleResponsePtrOutput {
	return o.ToMonthlyRetentionScheduleResponsePtrOutputWithContext(context.Background())
}

func (o MonthlyRetentionScheduleResponseOutput) ToMonthlyRetentionScheduleResponsePtrOutputWithContext(ctx context.Context) MonthlyRetentionScheduleResponsePtrOutput {
	return o.ApplyT(func(v MonthlyRetentionScheduleResponse) *MonthlyRetentionScheduleResponse {
		return &v
	}).(MonthlyRetentionScheduleResponsePtrOutput)
}

// Retention duration of the retention policy.
func (o MonthlyRetentionScheduleResponseOutput) RetentionDuration() RetentionDurationResponsePtrOutput {
	return o.ApplyT(func(v MonthlyRetentionScheduleResponse) *RetentionDurationResponse { return v.RetentionDuration }).(RetentionDurationResponsePtrOutput)
}

// Daily retention format for the monthly retention policy.
func (o MonthlyRetentionScheduleResponseOutput) RetentionScheduleDaily() DailyRetentionFormatResponsePtrOutput {
	return o.ApplyT(func(v MonthlyRetentionScheduleResponse) *DailyRetentionFormatResponse {
		return v.RetentionScheduleDaily
	}).(DailyRetentionFormatResponsePtrOutput)
}

// Retention schedule format type for monthly retention policy.
func (o MonthlyRetentionScheduleResponseOutput) RetentionScheduleFormatType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonthlyRetentionScheduleResponse) *string { return v.RetentionScheduleFormatType }).(pulumi.StringPtrOutput)
}

// Weekly retention format for the monthly retention policy.
func (o MonthlyRetentionScheduleResponseOutput) RetentionScheduleWeekly() WeeklyRetentionFormatResponsePtrOutput {
	return o.ApplyT(func(v MonthlyRetentionScheduleResponse) *WeeklyRetentionFormatResponse {
		return v.RetentionScheduleWeekly
	}).(WeeklyRetentionFormatResponsePtrOutput)
}

// Retention times of the retention policy.
func (o MonthlyRetentionScheduleResponseOutput) RetentionTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MonthlyRetentionScheduleResponse) []string { return v.RetentionTimes }).(pulumi.StringArrayOutput)
}

type MonthlyRetentionScheduleResponsePtrOutput struct{ *pulumi.OutputState }

func (MonthlyRetentionScheduleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonthlyRetentionScheduleResponse)(nil)).Elem()
}

func (o MonthlyRetentionScheduleResponsePtrOutput) ToMonthlyRetentionScheduleResponsePtrOutput() MonthlyRetentionScheduleResponsePtrOutput {
	return o
}

func (o MonthlyRetentionScheduleResponsePtrOutput) ToMonthlyRetentionScheduleResponsePtrOutputWithContext(ctx context.Context) MonthlyRetentionScheduleResponsePtrOutput {
	return o
}

func (o MonthlyRetentionScheduleResponsePtrOutput) Elem() MonthlyRetentionScheduleResponseOutput {
	return o.ApplyT(func(v *MonthlyRetentionScheduleResponse) MonthlyRetentionScheduleResponse { return *v }).(MonthlyRetentionScheduleResponseOutput)
}

// Retention duration of the retention policy.
func (o MonthlyRetentionScheduleResponsePtrOutput) RetentionDuration() RetentionDurationResponsePtrOutput {
	return o.ApplyT(func(v *MonthlyRetentionScheduleResponse) *RetentionDurationResponse {
		if v == nil {
			return nil
		}
		return v.RetentionDuration
	}).(RetentionDurationResponsePtrOutput)
}

// Daily retention format for the monthly retention policy.
func (o MonthlyRetentionScheduleResponsePtrOutput) RetentionScheduleDaily() DailyRetentionFormatResponsePtrOutput {
	return o.ApplyT(func(v *MonthlyRetentionScheduleResponse) *DailyRetentionFormatResponse {
		if v == nil {
			return nil
		}
		return v.RetentionScheduleDaily
	}).(DailyRetentionFormatResponsePtrOutput)
}

// Retention schedule format type for monthly retention policy.
func (o MonthlyRetentionScheduleResponsePtrOutput) RetentionScheduleFormatType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonthlyRetentionScheduleResponse) *string {
		if v == nil {
			return nil
		}
		return v.RetentionScheduleFormatType
	}).(pulumi.StringPtrOutput)
}

// Weekly retention format for the monthly retention policy.
func (o MonthlyRetentionScheduleResponsePtrOutput) RetentionScheduleWeekly() WeeklyRetentionFormatResponsePtrOutput {
	return o.ApplyT(func(v *MonthlyRetentionScheduleResponse) *WeeklyRetentionFormatResponse {
		if v == nil {
			return nil
		}
		return v.RetentionScheduleWeekly
	}).(WeeklyRetentionFormatResponsePtrOutput)
}

// Retention times of the retention policy.
func (o MonthlyRetentionScheduleResponsePtrOutput) RetentionTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MonthlyRetentionScheduleResponse) []string {
		if v == nil {
			return nil
		}
		return v.RetentionTimes
	}).(pulumi.StringArrayOutput)
}

// Network Mapping Properties.
type NetworkMappingPropertiesResponse struct {
	// The fabric specific settings.
	FabricSpecificSettings interface{} `pulumi:"fabricSpecificSettings"`
	// The primary fabric friendly name.
	PrimaryFabricFriendlyName *string `pulumi:"primaryFabricFriendlyName"`
	// The primary network friendly name.
	PrimaryNetworkFriendlyName *string `pulumi:"primaryNetworkFriendlyName"`
	// The primary network id for network mapping.
	PrimaryNetworkId *string `pulumi:"primaryNetworkId"`
	// The recovery fabric ARM id.
	RecoveryFabricArmId *string `pulumi:"recoveryFabricArmId"`
	// The recovery fabric friendly name.
	RecoveryFabricFriendlyName *string `pulumi:"recoveryFabricFriendlyName"`
	// The recovery network friendly name.
	RecoveryNetworkFriendlyName *string `pulumi:"recoveryNetworkFriendlyName"`
	// The recovery network id for network mapping.
	RecoveryNetworkId *string `pulumi:"recoveryNetworkId"`
	// The pairing state for network mapping.
	State *string `pulumi:"state"`
}

// Network Mapping Properties.
type NetworkMappingPropertiesResponseOutput struct{ *pulumi.OutputState }

func (NetworkMappingPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkMappingPropertiesResponse)(nil)).Elem()
}

func (o NetworkMappingPropertiesResponseOutput) ToNetworkMappingPropertiesResponseOutput() NetworkMappingPropertiesResponseOutput {
	return o
}

func (o NetworkMappingPropertiesResponseOutput) ToNetworkMappingPropertiesResponseOutputWithContext(ctx context.Context) NetworkMappingPropertiesResponseOutput {
	return o
}

func (o NetworkMappingPropertiesResponseOutput) ToNetworkMappingPropertiesResponsePtrOutput() NetworkMappingPropertiesResponsePtrOutput {
	return o.ToNetworkMappingPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o NetworkMappingPropertiesResponseOutput) ToNetworkMappingPropertiesResponsePtrOutputWithContext(ctx context.Context) NetworkMappingPropertiesResponsePtrOutput {
	return o.ApplyT(func(v NetworkMappingPropertiesResponse) *NetworkMappingPropertiesResponse {
		return &v
	}).(NetworkMappingPropertiesResponsePtrOutput)
}

// The fabric specific settings.
func (o NetworkMappingPropertiesResponseOutput) FabricSpecificSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v NetworkMappingPropertiesResponse) interface{} { return v.FabricSpecificSettings }).(pulumi.AnyOutput)
}

// The primary fabric friendly name.
func (o NetworkMappingPropertiesResponseOutput) PrimaryFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkMappingPropertiesResponse) *string { return v.PrimaryFabricFriendlyName }).(pulumi.StringPtrOutput)
}

// The primary network friendly name.
func (o NetworkMappingPropertiesResponseOutput) PrimaryNetworkFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkMappingPropertiesResponse) *string { return v.PrimaryNetworkFriendlyName }).(pulumi.StringPtrOutput)
}

// The primary network id for network mapping.
func (o NetworkMappingPropertiesResponseOutput) PrimaryNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkMappingPropertiesResponse) *string { return v.PrimaryNetworkId }).(pulumi.StringPtrOutput)
}

// The recovery fabric ARM id.
func (o NetworkMappingPropertiesResponseOutput) RecoveryFabricArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkMappingPropertiesResponse) *string { return v.RecoveryFabricArmId }).(pulumi.StringPtrOutput)
}

// The recovery fabric friendly name.
func (o NetworkMappingPropertiesResponseOutput) RecoveryFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkMappingPropertiesResponse) *string { return v.RecoveryFabricFriendlyName }).(pulumi.StringPtrOutput)
}

// The recovery network friendly name.
func (o NetworkMappingPropertiesResponseOutput) RecoveryNetworkFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkMappingPropertiesResponse) *string { return v.RecoveryNetworkFriendlyName }).(pulumi.StringPtrOutput)
}

// The recovery network id for network mapping.
func (o NetworkMappingPropertiesResponseOutput) RecoveryNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkMappingPropertiesResponse) *string { return v.RecoveryNetworkId }).(pulumi.StringPtrOutput)
}

// The pairing state for network mapping.
func (o NetworkMappingPropertiesResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkMappingPropertiesResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

type NetworkMappingPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkMappingPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkMappingPropertiesResponse)(nil)).Elem()
}

func (o NetworkMappingPropertiesResponsePtrOutput) ToNetworkMappingPropertiesResponsePtrOutput() NetworkMappingPropertiesResponsePtrOutput {
	return o
}

func (o NetworkMappingPropertiesResponsePtrOutput) ToNetworkMappingPropertiesResponsePtrOutputWithContext(ctx context.Context) NetworkMappingPropertiesResponsePtrOutput {
	return o
}

func (o NetworkMappingPropertiesResponsePtrOutput) Elem() NetworkMappingPropertiesResponseOutput {
	return o.ApplyT(func(v *NetworkMappingPropertiesResponse) NetworkMappingPropertiesResponse { return *v }).(NetworkMappingPropertiesResponseOutput)
}

// The fabric specific settings.
func (o NetworkMappingPropertiesResponsePtrOutput) FabricSpecificSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v *NetworkMappingPropertiesResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.FabricSpecificSettings
	}).(pulumi.AnyOutput)
}

// The primary fabric friendly name.
func (o NetworkMappingPropertiesResponsePtrOutput) PrimaryFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkMappingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryFabricFriendlyName
	}).(pulumi.StringPtrOutput)
}

// The primary network friendly name.
func (o NetworkMappingPropertiesResponsePtrOutput) PrimaryNetworkFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkMappingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryNetworkFriendlyName
	}).(pulumi.StringPtrOutput)
}

// The primary network id for network mapping.
func (o NetworkMappingPropertiesResponsePtrOutput) PrimaryNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkMappingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryNetworkId
	}).(pulumi.StringPtrOutput)
}

// The recovery fabric ARM id.
func (o NetworkMappingPropertiesResponsePtrOutput) RecoveryFabricArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkMappingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryFabricArmId
	}).(pulumi.StringPtrOutput)
}

// The recovery fabric friendly name.
func (o NetworkMappingPropertiesResponsePtrOutput) RecoveryFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkMappingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryFabricFriendlyName
	}).(pulumi.StringPtrOutput)
}

// The recovery network friendly name.
func (o NetworkMappingPropertiesResponsePtrOutput) RecoveryNetworkFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkMappingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryNetworkFriendlyName
	}).(pulumi.StringPtrOutput)
}

// The recovery network id for network mapping.
func (o NetworkMappingPropertiesResponsePtrOutput) RecoveryNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkMappingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryNetworkId
	}).(pulumi.StringPtrOutput)
}

// The pairing state for network mapping.
func (o NetworkMappingPropertiesResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkMappingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// Disk Details.
type OSDetailsResponse struct {
	// The OS Major Version.
	OSMajorVersion *string `pulumi:"oSMajorVersion"`
	// The OS Minor Version.
	OSMinorVersion *string `pulumi:"oSMinorVersion"`
	// The OS Version.
	OSVersion *string `pulumi:"oSVersion"`
	// The OSEdition.
	OsEdition *string `pulumi:"osEdition"`
	// VM Disk details.
	OsType *string `pulumi:"osType"`
	// Product type.
	ProductType *string `pulumi:"productType"`
}

// Disk Details.
type OSDetailsResponseOutput struct{ *pulumi.OutputState }

func (OSDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OSDetailsResponse)(nil)).Elem()
}

func (o OSDetailsResponseOutput) ToOSDetailsResponseOutput() OSDetailsResponseOutput {
	return o
}

func (o OSDetailsResponseOutput) ToOSDetailsResponseOutputWithContext(ctx context.Context) OSDetailsResponseOutput {
	return o
}

func (o OSDetailsResponseOutput) ToOSDetailsResponsePtrOutput() OSDetailsResponsePtrOutput {
	return o.ToOSDetailsResponsePtrOutputWithContext(context.Background())
}

func (o OSDetailsResponseOutput) ToOSDetailsResponsePtrOutputWithContext(ctx context.Context) OSDetailsResponsePtrOutput {
	return o.ApplyT(func(v OSDetailsResponse) *OSDetailsResponse {
		return &v
	}).(OSDetailsResponsePtrOutput)
}

// The OS Major Version.
func (o OSDetailsResponseOutput) OSMajorVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSDetailsResponse) *string { return v.OSMajorVersion }).(pulumi.StringPtrOutput)
}

// The OS Minor Version.
func (o OSDetailsResponseOutput) OSMinorVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSDetailsResponse) *string { return v.OSMinorVersion }).(pulumi.StringPtrOutput)
}

// The OS Version.
func (o OSDetailsResponseOutput) OSVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSDetailsResponse) *string { return v.OSVersion }).(pulumi.StringPtrOutput)
}

// The OSEdition.
func (o OSDetailsResponseOutput) OsEdition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSDetailsResponse) *string { return v.OsEdition }).(pulumi.StringPtrOutput)
}

// VM Disk details.
func (o OSDetailsResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSDetailsResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// Product type.
func (o OSDetailsResponseOutput) ProductType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSDetailsResponse) *string { return v.ProductType }).(pulumi.StringPtrOutput)
}

type OSDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (OSDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OSDetailsResponse)(nil)).Elem()
}

func (o OSDetailsResponsePtrOutput) ToOSDetailsResponsePtrOutput() OSDetailsResponsePtrOutput {
	return o
}

func (o OSDetailsResponsePtrOutput) ToOSDetailsResponsePtrOutputWithContext(ctx context.Context) OSDetailsResponsePtrOutput {
	return o
}

func (o OSDetailsResponsePtrOutput) Elem() OSDetailsResponseOutput {
	return o.ApplyT(func(v *OSDetailsResponse) OSDetailsResponse { return *v }).(OSDetailsResponseOutput)
}

// The OS Major Version.
func (o OSDetailsResponsePtrOutput) OSMajorVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.OSMajorVersion
	}).(pulumi.StringPtrOutput)
}

// The OS Minor Version.
func (o OSDetailsResponsePtrOutput) OSMinorVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.OSMinorVersion
	}).(pulumi.StringPtrOutput)
}

// The OS Version.
func (o OSDetailsResponsePtrOutput) OSVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.OSVersion
	}).(pulumi.StringPtrOutput)
}

// The OSEdition.
func (o OSDetailsResponsePtrOutput) OsEdition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.OsEdition
	}).(pulumi.StringPtrOutput)
}

// VM Disk details.
func (o OSDetailsResponsePtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// Product type.
func (o OSDetailsResponsePtrOutput) ProductType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProductType
	}).(pulumi.StringPtrOutput)
}

// Details of the OS Disk.
type OSDiskDetailsResponse struct {
	// The type of the OS on the VM.
	OsType *string `pulumi:"osType"`
	// The id of the disk containing the OS.
	OsVhdId *string `pulumi:"osVhdId"`
	// The OS disk VHD name.
	VhdName *string `pulumi:"vhdName"`
}

// Details of the OS Disk.
type OSDiskDetailsResponseOutput struct{ *pulumi.OutputState }

func (OSDiskDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OSDiskDetailsResponse)(nil)).Elem()
}

func (o OSDiskDetailsResponseOutput) ToOSDiskDetailsResponseOutput() OSDiskDetailsResponseOutput {
	return o
}

func (o OSDiskDetailsResponseOutput) ToOSDiskDetailsResponseOutputWithContext(ctx context.Context) OSDiskDetailsResponseOutput {
	return o
}

func (o OSDiskDetailsResponseOutput) ToOSDiskDetailsResponsePtrOutput() OSDiskDetailsResponsePtrOutput {
	return o.ToOSDiskDetailsResponsePtrOutputWithContext(context.Background())
}

func (o OSDiskDetailsResponseOutput) ToOSDiskDetailsResponsePtrOutputWithContext(ctx context.Context) OSDiskDetailsResponsePtrOutput {
	return o.ApplyT(func(v OSDiskDetailsResponse) *OSDiskDetailsResponse {
		return &v
	}).(OSDiskDetailsResponsePtrOutput)
}

// The type of the OS on the VM.
func (o OSDiskDetailsResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSDiskDetailsResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// The id of the disk containing the OS.
func (o OSDiskDetailsResponseOutput) OsVhdId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSDiskDetailsResponse) *string { return v.OsVhdId }).(pulumi.StringPtrOutput)
}

// The OS disk VHD name.
func (o OSDiskDetailsResponseOutput) VhdName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSDiskDetailsResponse) *string { return v.VhdName }).(pulumi.StringPtrOutput)
}

type OSDiskDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (OSDiskDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OSDiskDetailsResponse)(nil)).Elem()
}

func (o OSDiskDetailsResponsePtrOutput) ToOSDiskDetailsResponsePtrOutput() OSDiskDetailsResponsePtrOutput {
	return o
}

func (o OSDiskDetailsResponsePtrOutput) ToOSDiskDetailsResponsePtrOutputWithContext(ctx context.Context) OSDiskDetailsResponsePtrOutput {
	return o
}

func (o OSDiskDetailsResponsePtrOutput) Elem() OSDiskDetailsResponseOutput {
	return o.ApplyT(func(v *OSDiskDetailsResponse) OSDiskDetailsResponse { return *v }).(OSDiskDetailsResponseOutput)
}

// The type of the OS on the VM.
func (o OSDiskDetailsResponsePtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDiskDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// The id of the disk containing the OS.
func (o OSDiskDetailsResponsePtrOutput) OsVhdId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDiskDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.OsVhdId
	}).(pulumi.StringPtrOutput)
}

// The OS disk VHD name.
func (o OSDiskDetailsResponsePtrOutput) VhdName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDiskDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.VhdName
	}).(pulumi.StringPtrOutput)
}

// Protection profile custom data details.
type PolicyPropertiesResponse struct {
	// The FriendlyName.
	FriendlyName *string `pulumi:"friendlyName"`
	// The ReplicationChannelSetting.
	ProviderSpecificDetails interface{} `pulumi:"providerSpecificDetails"`
}

// Protection profile custom data details.
type PolicyPropertiesResponseOutput struct{ *pulumi.OutputState }

func (PolicyPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyPropertiesResponse)(nil)).Elem()
}

func (o PolicyPropertiesResponseOutput) ToPolicyPropertiesResponseOutput() PolicyPropertiesResponseOutput {
	return o
}

func (o PolicyPropertiesResponseOutput) ToPolicyPropertiesResponseOutputWithContext(ctx context.Context) PolicyPropertiesResponseOutput {
	return o
}

func (o PolicyPropertiesResponseOutput) ToPolicyPropertiesResponsePtrOutput() PolicyPropertiesResponsePtrOutput {
	return o.ToPolicyPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o PolicyPropertiesResponseOutput) ToPolicyPropertiesResponsePtrOutputWithContext(ctx context.Context) PolicyPropertiesResponsePtrOutput {
	return o.ApplyT(func(v PolicyPropertiesResponse) *PolicyPropertiesResponse {
		return &v
	}).(PolicyPropertiesResponsePtrOutput)
}

// The FriendlyName.
func (o PolicyPropertiesResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPropertiesResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// The ReplicationChannelSetting.
func (o PolicyPropertiesResponseOutput) ProviderSpecificDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v PolicyPropertiesResponse) interface{} { return v.ProviderSpecificDetails }).(pulumi.AnyOutput)
}

type PolicyPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (PolicyPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyPropertiesResponse)(nil)).Elem()
}

func (o PolicyPropertiesResponsePtrOutput) ToPolicyPropertiesResponsePtrOutput() PolicyPropertiesResponsePtrOutput {
	return o
}

func (o PolicyPropertiesResponsePtrOutput) ToPolicyPropertiesResponsePtrOutputWithContext(ctx context.Context) PolicyPropertiesResponsePtrOutput {
	return o
}

func (o PolicyPropertiesResponsePtrOutput) Elem() PolicyPropertiesResponseOutput {
	return o.ApplyT(func(v *PolicyPropertiesResponse) PolicyPropertiesResponse { return *v }).(PolicyPropertiesResponseOutput)
}

// The FriendlyName.
func (o PolicyPropertiesResponsePtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// The ReplicationChannelSetting.
func (o PolicyPropertiesResponsePtrOutput) ProviderSpecificDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v *PolicyPropertiesResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.ProviderSpecificDetails
	}).(pulumi.AnyOutput)
}

// The Private Endpoint network resource that is linked to the Private Endpoint connection
type PrivateEndpoint struct {
	// Gets or sets id
	Id *string `pulumi:"id"`
}

// PrivateEndpointInput is an input type that accepts PrivateEndpointArgs and PrivateEndpointOutput values.
// You can construct a concrete instance of `PrivateEndpointInput` via:
//
//          PrivateEndpointArgs{...}
type PrivateEndpointInput interface {
	pulumi.Input

	ToPrivateEndpointOutput() PrivateEndpointOutput
	ToPrivateEndpointOutputWithContext(context.Context) PrivateEndpointOutput
}

// The Private Endpoint network resource that is linked to the Private Endpoint connection
type PrivateEndpointArgs struct {
	// Gets or sets id
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (PrivateEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpoint)(nil)).Elem()
}

func (i PrivateEndpointArgs) ToPrivateEndpointOutput() PrivateEndpointOutput {
	return i.ToPrivateEndpointOutputWithContext(context.Background())
}

func (i PrivateEndpointArgs) ToPrivateEndpointOutputWithContext(ctx context.Context) PrivateEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointOutput)
}

func (i PrivateEndpointArgs) ToPrivateEndpointPtrOutput() PrivateEndpointPtrOutput {
	return i.ToPrivateEndpointPtrOutputWithContext(context.Background())
}

func (i PrivateEndpointArgs) ToPrivateEndpointPtrOutputWithContext(ctx context.Context) PrivateEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointOutput).ToPrivateEndpointPtrOutputWithContext(ctx)
}

// PrivateEndpointPtrInput is an input type that accepts PrivateEndpointArgs, PrivateEndpointPtr and PrivateEndpointPtrOutput values.
// You can construct a concrete instance of `PrivateEndpointPtrInput` via:
//
//          PrivateEndpointArgs{...}
//
//  or:
//
//          nil
type PrivateEndpointPtrInput interface {
	pulumi.Input

	ToPrivateEndpointPtrOutput() PrivateEndpointPtrOutput
	ToPrivateEndpointPtrOutputWithContext(context.Context) PrivateEndpointPtrOutput
}

type privateEndpointPtrType PrivateEndpointArgs

func PrivateEndpointPtr(v *PrivateEndpointArgs) PrivateEndpointPtrInput {
	return (*privateEndpointPtrType)(v)
}

func (*privateEndpointPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpoint)(nil)).Elem()
}

func (i *privateEndpointPtrType) ToPrivateEndpointPtrOutput() PrivateEndpointPtrOutput {
	return i.ToPrivateEndpointPtrOutputWithContext(context.Background())
}

func (i *privateEndpointPtrType) ToPrivateEndpointPtrOutputWithContext(ctx context.Context) PrivateEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointPtrOutput)
}

// Private Endpoint Connection Response Properties
type PrivateEndpointConnectionType struct {
	// Gets or sets private endpoint associated with the private endpoint connection
	PrivateEndpoint *PrivateEndpoint `pulumi:"privateEndpoint"`
	// Gets or sets private link service connection state
	PrivateLinkServiceConnectionState *PrivateLinkServiceConnectionState `pulumi:"privateLinkServiceConnectionState"`
	// Gets or sets provisioning state of the private endpoint connection
	ProvisioningState *string `pulumi:"provisioningState"`
}

// PrivateEndpointConnectionTypeInput is an input type that accepts PrivateEndpointConnectionTypeArgs and PrivateEndpointConnectionTypeOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionTypeInput` via:
//
//          PrivateEndpointConnectionTypeArgs{...}
type PrivateEndpointConnectionTypeInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionTypeOutput() PrivateEndpointConnectionTypeOutput
	ToPrivateEndpointConnectionTypeOutputWithContext(context.Context) PrivateEndpointConnectionTypeOutput
}

// Private Endpoint Connection Response Properties
type PrivateEndpointConnectionTypeArgs struct {
	// Gets or sets private endpoint associated with the private endpoint connection
	PrivateEndpoint PrivateEndpointPtrInput `pulumi:"privateEndpoint"`
	// Gets or sets private link service connection state
	PrivateLinkServiceConnectionState PrivateLinkServiceConnectionStatePtrInput `pulumi:"privateLinkServiceConnectionState"`
	// Gets or sets provisioning state of the private endpoint connection
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (PrivateEndpointConnectionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionType)(nil)).Elem()
}

func (i PrivateEndpointConnectionTypeArgs) ToPrivateEndpointConnectionTypeOutput() PrivateEndpointConnectionTypeOutput {
	return i.ToPrivateEndpointConnectionTypeOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionTypeArgs) ToPrivateEndpointConnectionTypeOutputWithContext(ctx context.Context) PrivateEndpointConnectionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionTypeOutput)
}

func (i PrivateEndpointConnectionTypeArgs) ToPrivateEndpointConnectionTypePtrOutput() PrivateEndpointConnectionTypePtrOutput {
	return i.ToPrivateEndpointConnectionTypePtrOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionTypeArgs) ToPrivateEndpointConnectionTypePtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionTypeOutput).ToPrivateEndpointConnectionTypePtrOutputWithContext(ctx)
}

// PrivateEndpointConnectionTypePtrInput is an input type that accepts PrivateEndpointConnectionTypeArgs, PrivateEndpointConnectionTypePtr and PrivateEndpointConnectionTypePtrOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionTypePtrInput` via:
//
//          PrivateEndpointConnectionTypeArgs{...}
//
//  or:
//
//          nil
type PrivateEndpointConnectionTypePtrInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionTypePtrOutput() PrivateEndpointConnectionTypePtrOutput
	ToPrivateEndpointConnectionTypePtrOutputWithContext(context.Context) PrivateEndpointConnectionTypePtrOutput
}

type privateEndpointConnectionTypePtrType PrivateEndpointConnectionTypeArgs

func PrivateEndpointConnectionTypePtr(v *PrivateEndpointConnectionTypeArgs) PrivateEndpointConnectionTypePtrInput {
	return (*privateEndpointConnectionTypePtrType)(v)
}

func (*privateEndpointConnectionTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointConnectionType)(nil)).Elem()
}

func (i *privateEndpointConnectionTypePtrType) ToPrivateEndpointConnectionTypePtrOutput() PrivateEndpointConnectionTypePtrOutput {
	return i.ToPrivateEndpointConnectionTypePtrOutputWithContext(context.Background())
}

func (i *privateEndpointConnectionTypePtrType) ToPrivateEndpointConnectionTypePtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionTypePtrOutput)
}

// Private Endpoint Connection Response Properties.
type PrivateEndpointConnectionResponse struct {
	// The Private Endpoint network resource that is linked to the Private Endpoint connection.
	PrivateEndpoint *PrivateEndpointResponse `pulumi:"privateEndpoint"`
	// Gets or sets private link service connection state.
	PrivateLinkServiceConnectionState *PrivateLinkServiceConnectionStateResponse `pulumi:"privateLinkServiceConnectionState"`
	// Gets or sets provisioning state of the private endpoint connection.
	ProvisioningState string `pulumi:"provisioningState"`
}

// Private Endpoint Connection Response Properties.
type PrivateEndpointConnectionResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutput() PrivateEndpointConnectionResponseOutput {
	return o
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseOutput {
	return o
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponsePtrOutput() PrivateEndpointConnectionResponsePtrOutput {
	return o.ToPrivateEndpointConnectionResponsePtrOutputWithContext(context.Background())
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *PrivateEndpointConnectionResponse {
		return &v
	}).(PrivateEndpointConnectionResponsePtrOutput)
}

// The Private Endpoint network resource that is linked to the Private Endpoint connection.
func (o PrivateEndpointConnectionResponseOutput) PrivateEndpoint() PrivateEndpointResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *PrivateEndpointResponse { return v.PrivateEndpoint }).(PrivateEndpointResponsePtrOutput)
}

// Gets or sets private link service connection state.
func (o PrivateEndpointConnectionResponseOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *PrivateLinkServiceConnectionStateResponse {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStateResponsePtrOutput)
}

// Gets or sets provisioning state of the private endpoint connection.
func (o PrivateEndpointConnectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type PrivateEndpointConnectionResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponsePtrOutput) ToPrivateEndpointConnectionResponsePtrOutput() PrivateEndpointConnectionResponsePtrOutput {
	return o
}

func (o PrivateEndpointConnectionResponsePtrOutput) ToPrivateEndpointConnectionResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponsePtrOutput {
	return o
}

func (o PrivateEndpointConnectionResponsePtrOutput) Elem() PrivateEndpointConnectionResponseOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionResponse) PrivateEndpointConnectionResponse { return *v }).(PrivateEndpointConnectionResponseOutput)
}

// The Private Endpoint network resource that is linked to the Private Endpoint connection.
func (o PrivateEndpointConnectionResponsePtrOutput) PrivateEndpoint() PrivateEndpointResponsePtrOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionResponse) *PrivateEndpointResponse {
		if v == nil {
			return nil
		}
		return v.PrivateEndpoint
	}).(PrivateEndpointResponsePtrOutput)
}

// Gets or sets private link service connection state.
func (o PrivateEndpointConnectionResponsePtrOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionResponse) *PrivateLinkServiceConnectionStateResponse {
		if v == nil {
			return nil
		}
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStateResponsePtrOutput)
}

// Gets or sets provisioning state of the private endpoint connection.
func (o PrivateEndpointConnectionResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Information to be stored in Vault properties as an element of privateEndpointConnections List.
type PrivateEndpointConnectionVaultPropertiesResponse struct {
	// Format of id subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.[Service]/{resource}/{resourceName}/privateEndpointConnections/{connectionName}.
	Id string `pulumi:"id"`
	// Private Endpoint Connection Response Properties.
	Properties *PrivateEndpointConnectionResponse `pulumi:"properties"`
}

// Information to be stored in Vault properties as an element of privateEndpointConnections List.
type PrivateEndpointConnectionVaultPropertiesResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionVaultPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionVaultPropertiesResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionVaultPropertiesResponseOutput) ToPrivateEndpointConnectionVaultPropertiesResponseOutput() PrivateEndpointConnectionVaultPropertiesResponseOutput {
	return o
}

func (o PrivateEndpointConnectionVaultPropertiesResponseOutput) ToPrivateEndpointConnectionVaultPropertiesResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionVaultPropertiesResponseOutput {
	return o
}

// Format of id subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.[Service]/{resource}/{resourceName}/privateEndpointConnections/{connectionName}.
func (o PrivateEndpointConnectionVaultPropertiesResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionVaultPropertiesResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Private Endpoint Connection Response Properties.
func (o PrivateEndpointConnectionVaultPropertiesResponseOutput) Properties() PrivateEndpointConnectionResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionVaultPropertiesResponse) *PrivateEndpointConnectionResponse {
		return v.Properties
	}).(PrivateEndpointConnectionResponsePtrOutput)
}

type PrivateEndpointConnectionVaultPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionVaultPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnectionVaultPropertiesResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionVaultPropertiesResponseArrayOutput) ToPrivateEndpointConnectionVaultPropertiesResponseArrayOutput() PrivateEndpointConnectionVaultPropertiesResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionVaultPropertiesResponseArrayOutput) ToPrivateEndpointConnectionVaultPropertiesResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionVaultPropertiesResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionVaultPropertiesResponseArrayOutput) Index(i pulumi.IntInput) PrivateEndpointConnectionVaultPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateEndpointConnectionVaultPropertiesResponse {
		return vs[0].([]PrivateEndpointConnectionVaultPropertiesResponse)[vs[1].(int)]
	}).(PrivateEndpointConnectionVaultPropertiesResponseOutput)
}

// The Private Endpoint network resource that is linked to the Private Endpoint connection.
type PrivateEndpointResponse struct {
	// Gets or sets id.
	Id string `pulumi:"id"`
}

// The Private Endpoint network resource that is linked to the Private Endpoint connection.
type PrivateEndpointResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutput() PrivateEndpointResponseOutput {
	return o
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutputWithContext(ctx context.Context) PrivateEndpointResponseOutput {
	return o
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return o.ToPrivateEndpointResponsePtrOutputWithContext(context.Background())
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) *PrivateEndpointResponse {
		return &v
	}).(PrivateEndpointResponsePtrOutput)
}

// Gets or sets id.
func (o PrivateEndpointResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) string { return v.Id }).(pulumi.StringOutput)
}

type PrivateEndpointResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) Elem() PrivateEndpointResponseOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) PrivateEndpointResponse { return *v }).(PrivateEndpointResponseOutput)
}

// Gets or sets id.
func (o PrivateEndpointResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Private Link Service Connection State
type PrivateLinkServiceConnectionState struct {
	// Gets or sets actions required
	ActionRequired *string `pulumi:"actionRequired"`
	// Gets or sets description
	Description *string `pulumi:"description"`
	// Gets or sets the status
	Status *string `pulumi:"status"`
}

// PrivateLinkServiceConnectionStateInput is an input type that accepts PrivateLinkServiceConnectionStateArgs and PrivateLinkServiceConnectionStateOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStateInput` via:
//
//          PrivateLinkServiceConnectionStateArgs{...}
type PrivateLinkServiceConnectionStateInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput
	ToPrivateLinkServiceConnectionStateOutputWithContext(context.Context) PrivateLinkServiceConnectionStateOutput
}

// Private Link Service Connection State
type PrivateLinkServiceConnectionStateArgs struct {
	// Gets or sets actions required
	ActionRequired pulumi.StringPtrInput `pulumi:"actionRequired"`
	// Gets or sets description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Gets or sets the status
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (PrivateLinkServiceConnectionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return i.ToPrivateLinkServiceConnectionStateOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateOutput)
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return i.ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateOutput).ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx)
}

// PrivateLinkServiceConnectionStatePtrInput is an input type that accepts PrivateLinkServiceConnectionStateArgs, PrivateLinkServiceConnectionStatePtr and PrivateLinkServiceConnectionStatePtrOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStatePtrInput` via:
//
//          PrivateLinkServiceConnectionStateArgs{...}
//
//  or:
//
//          nil
type PrivateLinkServiceConnectionStatePtrInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput
	ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Context) PrivateLinkServiceConnectionStatePtrOutput
}

type privateLinkServiceConnectionStatePtrType PrivateLinkServiceConnectionStateArgs

func PrivateLinkServiceConnectionStatePtr(v *PrivateLinkServiceConnectionStateArgs) PrivateLinkServiceConnectionStatePtrInput {
	return (*privateLinkServiceConnectionStatePtrType)(v)
}

func (*privateLinkServiceConnectionStatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (i *privateLinkServiceConnectionStatePtrType) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return i.ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (i *privateLinkServiceConnectionStatePtrType) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStatePtrOutput)
}

// Gets or sets private link service connection state.
type PrivateLinkServiceConnectionStateResponse struct {
	// Gets or sets actions required.
	ActionsRequired string `pulumi:"actionsRequired"`
	// Gets or sets description.
	Description string `pulumi:"description"`
	// Gets or sets the status.
	Status string `pulumi:"status"`
}

// Gets or sets private link service connection state.
type PrivateLinkServiceConnectionStateResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutput() PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutput() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o.ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(context.Background())
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *PrivateLinkServiceConnectionStateResponse {
		return &v
	}).(PrivateLinkServiceConnectionStateResponsePtrOutput)
}

// Gets or sets actions required.
func (o PrivateLinkServiceConnectionStateResponseOutput) ActionsRequired() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) string { return v.ActionsRequired }).(pulumi.StringOutput)
}

// Gets or sets description.
func (o PrivateLinkServiceConnectionStateResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) string { return v.Description }).(pulumi.StringOutput)
}

// Gets or sets the status.
func (o PrivateLinkServiceConnectionStateResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) string { return v.Status }).(pulumi.StringOutput)
}

type PrivateLinkServiceConnectionStateResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutput() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Elem() PrivateLinkServiceConnectionStateResponseOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) PrivateLinkServiceConnectionStateResponse {
		return *v
	}).(PrivateLinkServiceConnectionStateResponseOutput)
}

// Gets or sets actions required.
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ActionsRequired
	}).(pulumi.StringPtrOutput)
}

// Gets or sets description.
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Description
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the status.
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// Details of the Process Server.
type ProcessServerResponse struct {
	// Agent expiry date.
	AgentExpiryDate *string `pulumi:"agentExpiryDate"`
	// The version of the scout component on the server.
	AgentVersion *string `pulumi:"agentVersion"`
	// The agent version details.
	AgentVersionDetails *VersionDetailsResponse `pulumi:"agentVersionDetails"`
	// The available memory.
	AvailableMemoryInBytes *int `pulumi:"availableMemoryInBytes"`
	// The available space.
	AvailableSpaceInBytes *int `pulumi:"availableSpaceInBytes"`
	// The percentage of the CPU load.
	CpuLoad *string `pulumi:"cpuLoad"`
	// The CPU load status.
	CpuLoadStatus *string `pulumi:"cpuLoadStatus"`
	// The Process Server's friendly name.
	FriendlyName *string `pulumi:"friendlyName"`
	// The health of Process Server.
	Health string `pulumi:"health"`
	// Health errors.
	HealthErrors []HealthErrorResponse `pulumi:"healthErrors"`
	// The agent generated Id.
	HostId *string `pulumi:"hostId"`
	// The Process Server Id.
	Id *string `pulumi:"id"`
	// The IP address of the server.
	IpAddress *string `pulumi:"ipAddress"`
	// The last heartbeat received from the server.
	LastHeartbeat *string `pulumi:"lastHeartbeat"`
	// The servers configured with this PS.
	MachineCount *string `pulumi:"machineCount"`
	// The MARS communication status.
	MarsCommunicationStatus string `pulumi:"marsCommunicationStatus"`
	// The MARS registration status.
	MarsRegistrationStatus string `pulumi:"marsRegistrationStatus"`
	// The memory usage status.
	MemoryUsageStatus *string `pulumi:"memoryUsageStatus"`
	// The list of the mobility service updates available on the Process Server.
	MobilityServiceUpdates []MobilityServiceUpdateResponse `pulumi:"mobilityServiceUpdates"`
	// The OS type of the server.
	OsType *string `pulumi:"osType"`
	// OS Version of the process server. Note: This will get populated if user has CS version greater than 9.12.0.0.
	OsVersion *string `pulumi:"osVersion"`
	// The PS service status.
	PsServiceStatus *string `pulumi:"psServiceStatus"`
	// The process server stats refresh time.
	PsStatsRefreshTime string `pulumi:"psStatsRefreshTime"`
	// The number of replication pairs configured in this PS.
	ReplicationPairCount *string `pulumi:"replicationPairCount"`
	// The space usage status.
	SpaceUsageStatus *string `pulumi:"spaceUsageStatus"`
	// The PS SSL cert expiry date.
	SslCertExpiryDate *string `pulumi:"sslCertExpiryDate"`
	// CS SSL cert expiry date.
	SslCertExpiryRemainingDays *int `pulumi:"sslCertExpiryRemainingDays"`
	// The percentage of the system load.
	SystemLoad *string `pulumi:"systemLoad"`
	// The system load status.
	SystemLoadStatus *string `pulumi:"systemLoadStatus"`
	// The throughput in bytes.
	ThroughputInBytes int `pulumi:"throughputInBytes"`
	// The throughput in MBps.
	ThroughputInMBps int `pulumi:"throughputInMBps"`
	// The throughput status.
	ThroughputStatus string `pulumi:"throughputStatus"`
	// The uploading pending data in bytes.
	ThroughputUploadPendingDataInBytes int `pulumi:"throughputUploadPendingDataInBytes"`
	// The total memory.
	TotalMemoryInBytes *int `pulumi:"totalMemoryInBytes"`
	// The total space.
	TotalSpaceInBytes *int `pulumi:"totalSpaceInBytes"`
	// Version status
	VersionStatus *string `pulumi:"versionStatus"`
}

// Details of the Process Server.
type ProcessServerResponseOutput struct{ *pulumi.OutputState }

func (ProcessServerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessServerResponse)(nil)).Elem()
}

func (o ProcessServerResponseOutput) ToProcessServerResponseOutput() ProcessServerResponseOutput {
	return o
}

func (o ProcessServerResponseOutput) ToProcessServerResponseOutputWithContext(ctx context.Context) ProcessServerResponseOutput {
	return o
}

// Agent expiry date.
func (o ProcessServerResponseOutput) AgentExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.AgentExpiryDate }).(pulumi.StringPtrOutput)
}

// The version of the scout component on the server.
func (o ProcessServerResponseOutput) AgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.AgentVersion }).(pulumi.StringPtrOutput)
}

// The agent version details.
func (o ProcessServerResponseOutput) AgentVersionDetails() VersionDetailsResponsePtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *VersionDetailsResponse { return v.AgentVersionDetails }).(VersionDetailsResponsePtrOutput)
}

// The available memory.
func (o ProcessServerResponseOutput) AvailableMemoryInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *int { return v.AvailableMemoryInBytes }).(pulumi.IntPtrOutput)
}

// The available space.
func (o ProcessServerResponseOutput) AvailableSpaceInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *int { return v.AvailableSpaceInBytes }).(pulumi.IntPtrOutput)
}

// The percentage of the CPU load.
func (o ProcessServerResponseOutput) CpuLoad() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.CpuLoad }).(pulumi.StringPtrOutput)
}

// The CPU load status.
func (o ProcessServerResponseOutput) CpuLoadStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.CpuLoadStatus }).(pulumi.StringPtrOutput)
}

// The Process Server's friendly name.
func (o ProcessServerResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// The health of Process Server.
func (o ProcessServerResponseOutput) Health() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessServerResponse) string { return v.Health }).(pulumi.StringOutput)
}

// Health errors.
func (o ProcessServerResponseOutput) HealthErrors() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v ProcessServerResponse) []HealthErrorResponse { return v.HealthErrors }).(HealthErrorResponseArrayOutput)
}

// The agent generated Id.
func (o ProcessServerResponseOutput) HostId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.HostId }).(pulumi.StringPtrOutput)
}

// The Process Server Id.
func (o ProcessServerResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The IP address of the server.
func (o ProcessServerResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The last heartbeat received from the server.
func (o ProcessServerResponseOutput) LastHeartbeat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.LastHeartbeat }).(pulumi.StringPtrOutput)
}

// The servers configured with this PS.
func (o ProcessServerResponseOutput) MachineCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.MachineCount }).(pulumi.StringPtrOutput)
}

// The MARS communication status.
func (o ProcessServerResponseOutput) MarsCommunicationStatus() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessServerResponse) string { return v.MarsCommunicationStatus }).(pulumi.StringOutput)
}

// The MARS registration status.
func (o ProcessServerResponseOutput) MarsRegistrationStatus() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessServerResponse) string { return v.MarsRegistrationStatus }).(pulumi.StringOutput)
}

// The memory usage status.
func (o ProcessServerResponseOutput) MemoryUsageStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.MemoryUsageStatus }).(pulumi.StringPtrOutput)
}

// The list of the mobility service updates available on the Process Server.
func (o ProcessServerResponseOutput) MobilityServiceUpdates() MobilityServiceUpdateResponseArrayOutput {
	return o.ApplyT(func(v ProcessServerResponse) []MobilityServiceUpdateResponse { return v.MobilityServiceUpdates }).(MobilityServiceUpdateResponseArrayOutput)
}

// The OS type of the server.
func (o ProcessServerResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// OS Version of the process server. Note: This will get populated if user has CS version greater than 9.12.0.0.
func (o ProcessServerResponseOutput) OsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.OsVersion }).(pulumi.StringPtrOutput)
}

// The PS service status.
func (o ProcessServerResponseOutput) PsServiceStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.PsServiceStatus }).(pulumi.StringPtrOutput)
}

// The process server stats refresh time.
func (o ProcessServerResponseOutput) PsStatsRefreshTime() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessServerResponse) string { return v.PsStatsRefreshTime }).(pulumi.StringOutput)
}

// The number of replication pairs configured in this PS.
func (o ProcessServerResponseOutput) ReplicationPairCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.ReplicationPairCount }).(pulumi.StringPtrOutput)
}

// The space usage status.
func (o ProcessServerResponseOutput) SpaceUsageStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.SpaceUsageStatus }).(pulumi.StringPtrOutput)
}

// The PS SSL cert expiry date.
func (o ProcessServerResponseOutput) SslCertExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.SslCertExpiryDate }).(pulumi.StringPtrOutput)
}

// CS SSL cert expiry date.
func (o ProcessServerResponseOutput) SslCertExpiryRemainingDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *int { return v.SslCertExpiryRemainingDays }).(pulumi.IntPtrOutput)
}

// The percentage of the system load.
func (o ProcessServerResponseOutput) SystemLoad() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.SystemLoad }).(pulumi.StringPtrOutput)
}

// The system load status.
func (o ProcessServerResponseOutput) SystemLoadStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.SystemLoadStatus }).(pulumi.StringPtrOutput)
}

// The throughput in bytes.
func (o ProcessServerResponseOutput) ThroughputInBytes() pulumi.IntOutput {
	return o.ApplyT(func(v ProcessServerResponse) int { return v.ThroughputInBytes }).(pulumi.IntOutput)
}

// The throughput in MBps.
func (o ProcessServerResponseOutput) ThroughputInMBps() pulumi.IntOutput {
	return o.ApplyT(func(v ProcessServerResponse) int { return v.ThroughputInMBps }).(pulumi.IntOutput)
}

// The throughput status.
func (o ProcessServerResponseOutput) ThroughputStatus() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessServerResponse) string { return v.ThroughputStatus }).(pulumi.StringOutput)
}

// The uploading pending data in bytes.
func (o ProcessServerResponseOutput) ThroughputUploadPendingDataInBytes() pulumi.IntOutput {
	return o.ApplyT(func(v ProcessServerResponse) int { return v.ThroughputUploadPendingDataInBytes }).(pulumi.IntOutput)
}

// The total memory.
func (o ProcessServerResponseOutput) TotalMemoryInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *int { return v.TotalMemoryInBytes }).(pulumi.IntPtrOutput)
}

// The total space.
func (o ProcessServerResponseOutput) TotalSpaceInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *int { return v.TotalSpaceInBytes }).(pulumi.IntPtrOutput)
}

// Version status
func (o ProcessServerResponseOutput) VersionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.VersionStatus }).(pulumi.StringPtrOutput)
}

type ProcessServerResponseArrayOutput struct{ *pulumi.OutputState }

func (ProcessServerResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessServerResponse)(nil)).Elem()
}

func (o ProcessServerResponseArrayOutput) ToProcessServerResponseArrayOutput() ProcessServerResponseArrayOutput {
	return o
}

func (o ProcessServerResponseArrayOutput) ToProcessServerResponseArrayOutputWithContext(ctx context.Context) ProcessServerResponseArrayOutput {
	return o
}

func (o ProcessServerResponseArrayOutput) Index(i pulumi.IntInput) ProcessServerResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessServerResponse {
		return vs[0].([]ProcessServerResponse)[vs[1].(int)]
	}).(ProcessServerResponseOutput)
}

// Protection container mapping properties.
type ProtectionContainerMappingPropertiesResponse struct {
	// Health of pairing.
	Health *string `pulumi:"health"`
	// Health error.
	HealthErrorDetails []HealthErrorResponse `pulumi:"healthErrorDetails"`
	// Friendly name of replication policy.
	PolicyFriendlyName *string `pulumi:"policyFriendlyName"`
	// Policy ARM Id.
	PolicyId *string `pulumi:"policyId"`
	// Provider specific provider details.
	ProviderSpecificDetails interface{} `pulumi:"providerSpecificDetails"`
	// Friendly name of source fabric.
	SourceFabricFriendlyName *string `pulumi:"sourceFabricFriendlyName"`
	// Friendly name of source protection container.
	SourceProtectionContainerFriendlyName *string `pulumi:"sourceProtectionContainerFriendlyName"`
	// Association Status
	State *string `pulumi:"state"`
	// Friendly name of target fabric.
	TargetFabricFriendlyName *string `pulumi:"targetFabricFriendlyName"`
	// Friendly name of paired container.
	TargetProtectionContainerFriendlyName *string `pulumi:"targetProtectionContainerFriendlyName"`
	// Paired protection container ARM ID.
	TargetProtectionContainerId *string `pulumi:"targetProtectionContainerId"`
}

// Protection container mapping properties.
type ProtectionContainerMappingPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ProtectionContainerMappingPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionContainerMappingPropertiesResponse)(nil)).Elem()
}

func (o ProtectionContainerMappingPropertiesResponseOutput) ToProtectionContainerMappingPropertiesResponseOutput() ProtectionContainerMappingPropertiesResponseOutput {
	return o
}

func (o ProtectionContainerMappingPropertiesResponseOutput) ToProtectionContainerMappingPropertiesResponseOutputWithContext(ctx context.Context) ProtectionContainerMappingPropertiesResponseOutput {
	return o
}

func (o ProtectionContainerMappingPropertiesResponseOutput) ToProtectionContainerMappingPropertiesResponsePtrOutput() ProtectionContainerMappingPropertiesResponsePtrOutput {
	return o.ToProtectionContainerMappingPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ProtectionContainerMappingPropertiesResponseOutput) ToProtectionContainerMappingPropertiesResponsePtrOutputWithContext(ctx context.Context) ProtectionContainerMappingPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) *ProtectionContainerMappingPropertiesResponse {
		return &v
	}).(ProtectionContainerMappingPropertiesResponsePtrOutput)
}

// Health of pairing.
func (o ProtectionContainerMappingPropertiesResponseOutput) Health() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) *string { return v.Health }).(pulumi.StringPtrOutput)
}

// Health error.
func (o ProtectionContainerMappingPropertiesResponseOutput) HealthErrorDetails() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) []HealthErrorResponse {
		return v.HealthErrorDetails
	}).(HealthErrorResponseArrayOutput)
}

// Friendly name of replication policy.
func (o ProtectionContainerMappingPropertiesResponseOutput) PolicyFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) *string { return v.PolicyFriendlyName }).(pulumi.StringPtrOutput)
}

// Policy ARM Id.
func (o ProtectionContainerMappingPropertiesResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Provider specific provider details.
func (o ProtectionContainerMappingPropertiesResponseOutput) ProviderSpecificDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) interface{} { return v.ProviderSpecificDetails }).(pulumi.AnyOutput)
}

// Friendly name of source fabric.
func (o ProtectionContainerMappingPropertiesResponseOutput) SourceFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) *string { return v.SourceFabricFriendlyName }).(pulumi.StringPtrOutput)
}

// Friendly name of source protection container.
func (o ProtectionContainerMappingPropertiesResponseOutput) SourceProtectionContainerFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) *string {
		return v.SourceProtectionContainerFriendlyName
	}).(pulumi.StringPtrOutput)
}

// Association Status
func (o ProtectionContainerMappingPropertiesResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Friendly name of target fabric.
func (o ProtectionContainerMappingPropertiesResponseOutput) TargetFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) *string { return v.TargetFabricFriendlyName }).(pulumi.StringPtrOutput)
}

// Friendly name of paired container.
func (o ProtectionContainerMappingPropertiesResponseOutput) TargetProtectionContainerFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) *string {
		return v.TargetProtectionContainerFriendlyName
	}).(pulumi.StringPtrOutput)
}

// Paired protection container ARM ID.
func (o ProtectionContainerMappingPropertiesResponseOutput) TargetProtectionContainerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) *string { return v.TargetProtectionContainerId }).(pulumi.StringPtrOutput)
}

type ProtectionContainerMappingPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ProtectionContainerMappingPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtectionContainerMappingPropertiesResponse)(nil)).Elem()
}

func (o ProtectionContainerMappingPropertiesResponsePtrOutput) ToProtectionContainerMappingPropertiesResponsePtrOutput() ProtectionContainerMappingPropertiesResponsePtrOutput {
	return o
}

func (o ProtectionContainerMappingPropertiesResponsePtrOutput) ToProtectionContainerMappingPropertiesResponsePtrOutputWithContext(ctx context.Context) ProtectionContainerMappingPropertiesResponsePtrOutput {
	return o
}

func (o ProtectionContainerMappingPropertiesResponsePtrOutput) Elem() ProtectionContainerMappingPropertiesResponseOutput {
	return o.ApplyT(func(v *ProtectionContainerMappingPropertiesResponse) ProtectionContainerMappingPropertiesResponse {
		return *v
	}).(ProtectionContainerMappingPropertiesResponseOutput)
}

// Health of pairing.
func (o ProtectionContainerMappingPropertiesResponsePtrOutput) Health() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionContainerMappingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Health
	}).(pulumi.StringPtrOutput)
}

// Health error.
func (o ProtectionContainerMappingPropertiesResponsePtrOutput) HealthErrorDetails() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v *ProtectionContainerMappingPropertiesResponse) []HealthErrorResponse {
		if v == nil {
			return nil
		}
		return v.HealthErrorDetails
	}).(HealthErrorResponseArrayOutput)
}

// Friendly name of replication policy.
func (o ProtectionContainerMappingPropertiesResponsePtrOutput) PolicyFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionContainerMappingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PolicyFriendlyName
	}).(pulumi.StringPtrOutput)
}

// Policy ARM Id.
func (o ProtectionContainerMappingPropertiesResponsePtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionContainerMappingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// Provider specific provider details.
func (o ProtectionContainerMappingPropertiesResponsePtrOutput) ProviderSpecificDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v *ProtectionContainerMappingPropertiesResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.ProviderSpecificDetails
	}).(pulumi.AnyOutput)
}

// Friendly name of source fabric.
func (o ProtectionContainerMappingPropertiesResponsePtrOutput) SourceFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionContainerMappingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.SourceFabricFriendlyName
	}).(pulumi.StringPtrOutput)
}

// Friendly name of source protection container.
func (o ProtectionContainerMappingPropertiesResponsePtrOutput) SourceProtectionContainerFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionContainerMappingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.SourceProtectionContainerFriendlyName
	}).(pulumi.StringPtrOutput)
}

// Association Status
func (o ProtectionContainerMappingPropertiesResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionContainerMappingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// Friendly name of target fabric.
func (o ProtectionContainerMappingPropertiesResponsePtrOutput) TargetFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionContainerMappingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetFabricFriendlyName
	}).(pulumi.StringPtrOutput)
}

// Friendly name of paired container.
func (o ProtectionContainerMappingPropertiesResponsePtrOutput) TargetProtectionContainerFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionContainerMappingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetProtectionContainerFriendlyName
	}).(pulumi.StringPtrOutput)
}

// Paired protection container ARM ID.
func (o ProtectionContainerMappingPropertiesResponsePtrOutput) TargetProtectionContainerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionContainerMappingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetProtectionContainerId
	}).(pulumi.StringPtrOutput)
}

// RCM based Azure migration specific policy details.
type RcmAzureMigrationPolicyDetailsResponse struct {
	// The app consistent snapshot frequency in minutes.
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// The crash consistent snapshot frequency in minutes.
	CrashConsistentFrequencyInMinutes *int `pulumi:"crashConsistentFrequencyInMinutes"`
	// Gets the class type. Overridden in derived classes.
	InstanceType string `pulumi:"instanceType"`
	// A value indicating whether multi-VM sync has to be enabled.
	MultiVmSyncStatus *string `pulumi:"multiVmSyncStatus"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistory *int `pulumi:"recoveryPointHistory"`
	// The recovery point threshold in minutes.
	RecoveryPointThresholdInMinutes *int `pulumi:"recoveryPointThresholdInMinutes"`
}

// RCM based Azure migration specific policy details.
type RcmAzureMigrationPolicyDetailsResponseOutput struct{ *pulumi.OutputState }

func (RcmAzureMigrationPolicyDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RcmAzureMigrationPolicyDetailsResponse)(nil)).Elem()
}

func (o RcmAzureMigrationPolicyDetailsResponseOutput) ToRcmAzureMigrationPolicyDetailsResponseOutput() RcmAzureMigrationPolicyDetailsResponseOutput {
	return o
}

func (o RcmAzureMigrationPolicyDetailsResponseOutput) ToRcmAzureMigrationPolicyDetailsResponseOutputWithContext(ctx context.Context) RcmAzureMigrationPolicyDetailsResponseOutput {
	return o
}

// The app consistent snapshot frequency in minutes.
func (o RcmAzureMigrationPolicyDetailsResponseOutput) AppConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RcmAzureMigrationPolicyDetailsResponse) *int { return v.AppConsistentFrequencyInMinutes }).(pulumi.IntPtrOutput)
}

// The crash consistent snapshot frequency in minutes.
func (o RcmAzureMigrationPolicyDetailsResponseOutput) CrashConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RcmAzureMigrationPolicyDetailsResponse) *int { return v.CrashConsistentFrequencyInMinutes }).(pulumi.IntPtrOutput)
}

// Gets the class type. Overridden in derived classes.
func (o RcmAzureMigrationPolicyDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v RcmAzureMigrationPolicyDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// A value indicating whether multi-VM sync has to be enabled.
func (o RcmAzureMigrationPolicyDetailsResponseOutput) MultiVmSyncStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RcmAzureMigrationPolicyDetailsResponse) *string { return v.MultiVmSyncStatus }).(pulumi.StringPtrOutput)
}

// The duration in minutes until which the recovery points need to be stored.
func (o RcmAzureMigrationPolicyDetailsResponseOutput) RecoveryPointHistory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RcmAzureMigrationPolicyDetailsResponse) *int { return v.RecoveryPointHistory }).(pulumi.IntPtrOutput)
}

// The recovery point threshold in minutes.
func (o RcmAzureMigrationPolicyDetailsResponseOutput) RecoveryPointThresholdInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RcmAzureMigrationPolicyDetailsResponse) *int { return v.RecoveryPointThresholdInMinutes }).(pulumi.IntPtrOutput)
}

// Recovery plan A2A specific details.
type RecoveryPlanA2ADetailsResponse struct {
	// Gets the Instance type.
	InstanceType string `pulumi:"instanceType"`
	// The primary zone.
	PrimaryZone *string `pulumi:"primaryZone"`
	// The recovery zone.
	RecoveryZone *string `pulumi:"recoveryZone"`
}

// Recovery plan A2A specific details.
type RecoveryPlanA2ADetailsResponseOutput struct{ *pulumi.OutputState }

func (RecoveryPlanA2ADetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanA2ADetailsResponse)(nil)).Elem()
}

func (o RecoveryPlanA2ADetailsResponseOutput) ToRecoveryPlanA2ADetailsResponseOutput() RecoveryPlanA2ADetailsResponseOutput {
	return o
}

func (o RecoveryPlanA2ADetailsResponseOutput) ToRecoveryPlanA2ADetailsResponseOutputWithContext(ctx context.Context) RecoveryPlanA2ADetailsResponseOutput {
	return o
}

// Gets the Instance type.
func (o RecoveryPlanA2ADetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanA2ADetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The primary zone.
func (o RecoveryPlanA2ADetailsResponseOutput) PrimaryZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanA2ADetailsResponse) *string { return v.PrimaryZone }).(pulumi.StringPtrOutput)
}

// The recovery zone.
func (o RecoveryPlanA2ADetailsResponseOutput) RecoveryZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanA2ADetailsResponse) *string { return v.RecoveryZone }).(pulumi.StringPtrOutput)
}

type RecoveryPlanA2ADetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanA2ADetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanA2ADetailsResponse)(nil)).Elem()
}

func (o RecoveryPlanA2ADetailsResponseArrayOutput) ToRecoveryPlanA2ADetailsResponseArrayOutput() RecoveryPlanA2ADetailsResponseArrayOutput {
	return o
}

func (o RecoveryPlanA2ADetailsResponseArrayOutput) ToRecoveryPlanA2ADetailsResponseArrayOutputWithContext(ctx context.Context) RecoveryPlanA2ADetailsResponseArrayOutput {
	return o
}

func (o RecoveryPlanA2ADetailsResponseArrayOutput) Index(i pulumi.IntInput) RecoveryPlanA2ADetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanA2ADetailsResponse {
		return vs[0].([]RecoveryPlanA2ADetailsResponse)[vs[1].(int)]
	}).(RecoveryPlanA2ADetailsResponseOutput)
}

// Recovery plan A2A input.
type RecoveryPlanA2AInput struct {
	// Gets the Instance type.
	InstanceType *string `pulumi:"instanceType"`
	// The primary zone.
	PrimaryZone *string `pulumi:"primaryZone"`
	// The recovery zone.
	RecoveryZone *string `pulumi:"recoveryZone"`
}

// RecoveryPlanA2AInputInput is an input type that accepts RecoveryPlanA2AInputArgs and RecoveryPlanA2AInputOutput values.
// You can construct a concrete instance of `RecoveryPlanA2AInputInput` via:
//
//          RecoveryPlanA2AInputArgs{...}
type RecoveryPlanA2AInputInput interface {
	pulumi.Input

	ToRecoveryPlanA2AInputOutput() RecoveryPlanA2AInputOutput
	ToRecoveryPlanA2AInputOutputWithContext(context.Context) RecoveryPlanA2AInputOutput
}

// Recovery plan A2A input.
type RecoveryPlanA2AInputArgs struct {
	// Gets the Instance type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// The primary zone.
	PrimaryZone pulumi.StringPtrInput `pulumi:"primaryZone"`
	// The recovery zone.
	RecoveryZone pulumi.StringPtrInput `pulumi:"recoveryZone"`
}

func (RecoveryPlanA2AInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanA2AInput)(nil)).Elem()
}

func (i RecoveryPlanA2AInputArgs) ToRecoveryPlanA2AInputOutput() RecoveryPlanA2AInputOutput {
	return i.ToRecoveryPlanA2AInputOutputWithContext(context.Background())
}

func (i RecoveryPlanA2AInputArgs) ToRecoveryPlanA2AInputOutputWithContext(ctx context.Context) RecoveryPlanA2AInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanA2AInputOutput)
}

// RecoveryPlanA2AInputArrayInput is an input type that accepts RecoveryPlanA2AInputArray and RecoveryPlanA2AInputArrayOutput values.
// You can construct a concrete instance of `RecoveryPlanA2AInputArrayInput` via:
//
//          RecoveryPlanA2AInputArray{ RecoveryPlanA2AInputArgs{...} }
type RecoveryPlanA2AInputArrayInput interface {
	pulumi.Input

	ToRecoveryPlanA2AInputArrayOutput() RecoveryPlanA2AInputArrayOutput
	ToRecoveryPlanA2AInputArrayOutputWithContext(context.Context) RecoveryPlanA2AInputArrayOutput
}

type RecoveryPlanA2AInputArray []RecoveryPlanA2AInputInput

func (RecoveryPlanA2AInputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanA2AInput)(nil)).Elem()
}

func (i RecoveryPlanA2AInputArray) ToRecoveryPlanA2AInputArrayOutput() RecoveryPlanA2AInputArrayOutput {
	return i.ToRecoveryPlanA2AInputArrayOutputWithContext(context.Background())
}

func (i RecoveryPlanA2AInputArray) ToRecoveryPlanA2AInputArrayOutputWithContext(ctx context.Context) RecoveryPlanA2AInputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanA2AInputArrayOutput)
}

// Recovery plan action details.
type RecoveryPlanAction struct {
	// The action name.
	ActionName string `pulumi:"actionName"`
	// The list of failover directions.
	FailoverDirections []string `pulumi:"failoverDirections"`
	// The list of failover types.
	FailoverTypes []string `pulumi:"failoverTypes"`
}

// RecoveryPlanActionInput is an input type that accepts RecoveryPlanActionArgs and RecoveryPlanActionOutput values.
// You can construct a concrete instance of `RecoveryPlanActionInput` via:
//
//          RecoveryPlanActionArgs{...}
type RecoveryPlanActionInput interface {
	pulumi.Input

	ToRecoveryPlanActionOutput() RecoveryPlanActionOutput
	ToRecoveryPlanActionOutputWithContext(context.Context) RecoveryPlanActionOutput
}

// Recovery plan action details.
type RecoveryPlanActionArgs struct {
	// The action name.
	ActionName pulumi.StringInput `pulumi:"actionName"`
	// The list of failover directions.
	FailoverDirections pulumi.StringArrayInput `pulumi:"failoverDirections"`
	// The list of failover types.
	FailoverTypes pulumi.StringArrayInput `pulumi:"failoverTypes"`
}

func (RecoveryPlanActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanAction)(nil)).Elem()
}

func (i RecoveryPlanActionArgs) ToRecoveryPlanActionOutput() RecoveryPlanActionOutput {
	return i.ToRecoveryPlanActionOutputWithContext(context.Background())
}

func (i RecoveryPlanActionArgs) ToRecoveryPlanActionOutputWithContext(ctx context.Context) RecoveryPlanActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanActionOutput)
}

// RecoveryPlanActionArrayInput is an input type that accepts RecoveryPlanActionArray and RecoveryPlanActionArrayOutput values.
// You can construct a concrete instance of `RecoveryPlanActionArrayInput` via:
//
//          RecoveryPlanActionArray{ RecoveryPlanActionArgs{...} }
type RecoveryPlanActionArrayInput interface {
	pulumi.Input

	ToRecoveryPlanActionArrayOutput() RecoveryPlanActionArrayOutput
	ToRecoveryPlanActionArrayOutputWithContext(context.Context) RecoveryPlanActionArrayOutput
}

type RecoveryPlanActionArray []RecoveryPlanActionInput

func (RecoveryPlanActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanAction)(nil)).Elem()
}

func (i RecoveryPlanActionArray) ToRecoveryPlanActionArrayOutput() RecoveryPlanActionArrayOutput {
	return i.ToRecoveryPlanActionArrayOutputWithContext(context.Background())
}

func (i RecoveryPlanActionArray) ToRecoveryPlanActionArrayOutputWithContext(ctx context.Context) RecoveryPlanActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanActionArrayOutput)
}

// Recovery plan action details.
type RecoveryPlanActionResponse struct {
	// The action name.
	ActionName string `pulumi:"actionName"`
	// The custom details.
	CustomDetails interface{} `pulumi:"customDetails"`
	// The list of failover directions.
	FailoverDirections []string `pulumi:"failoverDirections"`
	// The list of failover types.
	FailoverTypes []string `pulumi:"failoverTypes"`
}

// Recovery plan action details.
type RecoveryPlanActionResponseOutput struct{ *pulumi.OutputState }

func (RecoveryPlanActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanActionResponse)(nil)).Elem()
}

func (o RecoveryPlanActionResponseOutput) ToRecoveryPlanActionResponseOutput() RecoveryPlanActionResponseOutput {
	return o
}

func (o RecoveryPlanActionResponseOutput) ToRecoveryPlanActionResponseOutputWithContext(ctx context.Context) RecoveryPlanActionResponseOutput {
	return o
}

// The action name.
func (o RecoveryPlanActionResponseOutput) ActionName() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanActionResponse) string { return v.ActionName }).(pulumi.StringOutput)
}

// The custom details.
func (o RecoveryPlanActionResponseOutput) CustomDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v RecoveryPlanActionResponse) interface{} { return v.CustomDetails }).(pulumi.AnyOutput)
}

// The list of failover directions.
func (o RecoveryPlanActionResponseOutput) FailoverDirections() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RecoveryPlanActionResponse) []string { return v.FailoverDirections }).(pulumi.StringArrayOutput)
}

// The list of failover types.
func (o RecoveryPlanActionResponseOutput) FailoverTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RecoveryPlanActionResponse) []string { return v.FailoverTypes }).(pulumi.StringArrayOutput)
}

type RecoveryPlanActionResponseArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanActionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanActionResponse)(nil)).Elem()
}

func (o RecoveryPlanActionResponseArrayOutput) ToRecoveryPlanActionResponseArrayOutput() RecoveryPlanActionResponseArrayOutput {
	return o
}

func (o RecoveryPlanActionResponseArrayOutput) ToRecoveryPlanActionResponseArrayOutputWithContext(ctx context.Context) RecoveryPlanActionResponseArrayOutput {
	return o
}

func (o RecoveryPlanActionResponseArrayOutput) Index(i pulumi.IntInput) RecoveryPlanActionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanActionResponse {
		return vs[0].([]RecoveryPlanActionResponse)[vs[1].(int)]
	}).(RecoveryPlanActionResponseOutput)
}

// Recovery plan Automation runbook action details.
type RecoveryPlanAutomationRunbookActionDetailsResponse struct {
	// The fabric location.
	FabricLocation string `pulumi:"fabricLocation"`
	// Gets the type of action details (see RecoveryPlanActionDetailsTypes enum for possible values).
	InstanceType string `pulumi:"instanceType"`
	// The runbook ARM Id.
	RunbookId *string `pulumi:"runbookId"`
	// The runbook timeout.
	Timeout *string `pulumi:"timeout"`
}

// Recovery plan Automation runbook action details.
type RecoveryPlanAutomationRunbookActionDetailsResponseOutput struct{ *pulumi.OutputState }

func (RecoveryPlanAutomationRunbookActionDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanAutomationRunbookActionDetailsResponse)(nil)).Elem()
}

func (o RecoveryPlanAutomationRunbookActionDetailsResponseOutput) ToRecoveryPlanAutomationRunbookActionDetailsResponseOutput() RecoveryPlanAutomationRunbookActionDetailsResponseOutput {
	return o
}

func (o RecoveryPlanAutomationRunbookActionDetailsResponseOutput) ToRecoveryPlanAutomationRunbookActionDetailsResponseOutputWithContext(ctx context.Context) RecoveryPlanAutomationRunbookActionDetailsResponseOutput {
	return o
}

// The fabric location.
func (o RecoveryPlanAutomationRunbookActionDetailsResponseOutput) FabricLocation() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanAutomationRunbookActionDetailsResponse) string { return v.FabricLocation }).(pulumi.StringOutput)
}

// Gets the type of action details (see RecoveryPlanActionDetailsTypes enum for possible values).
func (o RecoveryPlanAutomationRunbookActionDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanAutomationRunbookActionDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The runbook ARM Id.
func (o RecoveryPlanAutomationRunbookActionDetailsResponseOutput) RunbookId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanAutomationRunbookActionDetailsResponse) *string { return v.RunbookId }).(pulumi.StringPtrOutput)
}

// The runbook timeout.
func (o RecoveryPlanAutomationRunbookActionDetailsResponseOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanAutomationRunbookActionDetailsResponse) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

// Recovery plan group details.
type RecoveryPlanGroup struct {
	// The end group actions.
	EndGroupActions []RecoveryPlanAction `pulumi:"endGroupActions"`
	// The group type.
	GroupType string `pulumi:"groupType"`
	// The list of protected items.
	ReplicationProtectedItems []RecoveryPlanProtectedItem `pulumi:"replicationProtectedItems"`
	// The start group actions.
	StartGroupActions []RecoveryPlanAction `pulumi:"startGroupActions"`
}

// RecoveryPlanGroupInput is an input type that accepts RecoveryPlanGroupArgs and RecoveryPlanGroupOutput values.
// You can construct a concrete instance of `RecoveryPlanGroupInput` via:
//
//          RecoveryPlanGroupArgs{...}
type RecoveryPlanGroupInput interface {
	pulumi.Input

	ToRecoveryPlanGroupOutput() RecoveryPlanGroupOutput
	ToRecoveryPlanGroupOutputWithContext(context.Context) RecoveryPlanGroupOutput
}

// Recovery plan group details.
type RecoveryPlanGroupArgs struct {
	// The end group actions.
	EndGroupActions RecoveryPlanActionArrayInput `pulumi:"endGroupActions"`
	// The group type.
	GroupType pulumi.StringInput `pulumi:"groupType"`
	// The list of protected items.
	ReplicationProtectedItems RecoveryPlanProtectedItemArrayInput `pulumi:"replicationProtectedItems"`
	// The start group actions.
	StartGroupActions RecoveryPlanActionArrayInput `pulumi:"startGroupActions"`
}

func (RecoveryPlanGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanGroup)(nil)).Elem()
}

func (i RecoveryPlanGroupArgs) ToRecoveryPlanGroupOutput() RecoveryPlanGroupOutput {
	return i.ToRecoveryPlanGroupOutputWithContext(context.Background())
}

func (i RecoveryPlanGroupArgs) ToRecoveryPlanGroupOutputWithContext(ctx context.Context) RecoveryPlanGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanGroupOutput)
}

// RecoveryPlanGroupArrayInput is an input type that accepts RecoveryPlanGroupArray and RecoveryPlanGroupArrayOutput values.
// You can construct a concrete instance of `RecoveryPlanGroupArrayInput` via:
//
//          RecoveryPlanGroupArray{ RecoveryPlanGroupArgs{...} }
type RecoveryPlanGroupArrayInput interface {
	pulumi.Input

	ToRecoveryPlanGroupArrayOutput() RecoveryPlanGroupArrayOutput
	ToRecoveryPlanGroupArrayOutputWithContext(context.Context) RecoveryPlanGroupArrayOutput
}

type RecoveryPlanGroupArray []RecoveryPlanGroupInput

func (RecoveryPlanGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanGroup)(nil)).Elem()
}

func (i RecoveryPlanGroupArray) ToRecoveryPlanGroupArrayOutput() RecoveryPlanGroupArrayOutput {
	return i.ToRecoveryPlanGroupArrayOutputWithContext(context.Background())
}

func (i RecoveryPlanGroupArray) ToRecoveryPlanGroupArrayOutputWithContext(ctx context.Context) RecoveryPlanGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanGroupArrayOutput)
}

// Recovery plan group details.
type RecoveryPlanGroupResponse struct {
	// The end group actions.
	EndGroupActions []RecoveryPlanActionResponse `pulumi:"endGroupActions"`
	// The group type.
	GroupType string `pulumi:"groupType"`
	// The list of protected items.
	ReplicationProtectedItems []RecoveryPlanProtectedItemResponse `pulumi:"replicationProtectedItems"`
	// The start group actions.
	StartGroupActions []RecoveryPlanActionResponse `pulumi:"startGroupActions"`
}

// Recovery plan group details.
type RecoveryPlanGroupResponseOutput struct{ *pulumi.OutputState }

func (RecoveryPlanGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanGroupResponse)(nil)).Elem()
}

func (o RecoveryPlanGroupResponseOutput) ToRecoveryPlanGroupResponseOutput() RecoveryPlanGroupResponseOutput {
	return o
}

func (o RecoveryPlanGroupResponseOutput) ToRecoveryPlanGroupResponseOutputWithContext(ctx context.Context) RecoveryPlanGroupResponseOutput {
	return o
}

// The end group actions.
func (o RecoveryPlanGroupResponseOutput) EndGroupActions() RecoveryPlanActionResponseArrayOutput {
	return o.ApplyT(func(v RecoveryPlanGroupResponse) []RecoveryPlanActionResponse { return v.EndGroupActions }).(RecoveryPlanActionResponseArrayOutput)
}

// The group type.
func (o RecoveryPlanGroupResponseOutput) GroupType() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanGroupResponse) string { return v.GroupType }).(pulumi.StringOutput)
}

// The list of protected items.
func (o RecoveryPlanGroupResponseOutput) ReplicationProtectedItems() RecoveryPlanProtectedItemResponseArrayOutput {
	return o.ApplyT(func(v RecoveryPlanGroupResponse) []RecoveryPlanProtectedItemResponse {
		return v.ReplicationProtectedItems
	}).(RecoveryPlanProtectedItemResponseArrayOutput)
}

// The start group actions.
func (o RecoveryPlanGroupResponseOutput) StartGroupActions() RecoveryPlanActionResponseArrayOutput {
	return o.ApplyT(func(v RecoveryPlanGroupResponse) []RecoveryPlanActionResponse { return v.StartGroupActions }).(RecoveryPlanActionResponseArrayOutput)
}

type RecoveryPlanGroupResponseArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanGroupResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanGroupResponse)(nil)).Elem()
}

func (o RecoveryPlanGroupResponseArrayOutput) ToRecoveryPlanGroupResponseArrayOutput() RecoveryPlanGroupResponseArrayOutput {
	return o
}

func (o RecoveryPlanGroupResponseArrayOutput) ToRecoveryPlanGroupResponseArrayOutputWithContext(ctx context.Context) RecoveryPlanGroupResponseArrayOutput {
	return o
}

func (o RecoveryPlanGroupResponseArrayOutput) Index(i pulumi.IntInput) RecoveryPlanGroupResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanGroupResponse {
		return vs[0].([]RecoveryPlanGroupResponse)[vs[1].(int)]
	}).(RecoveryPlanGroupResponseOutput)
}

// Recovery plan manual action details.
type RecoveryPlanManualActionDetailsResponse struct {
	// The manual action description.
	Description *string `pulumi:"description"`
	// Gets the type of action details (see RecoveryPlanActionDetailsTypes enum for possible values).
	InstanceType string `pulumi:"instanceType"`
}

// Recovery plan manual action details.
type RecoveryPlanManualActionDetailsResponseOutput struct{ *pulumi.OutputState }

func (RecoveryPlanManualActionDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanManualActionDetailsResponse)(nil)).Elem()
}

func (o RecoveryPlanManualActionDetailsResponseOutput) ToRecoveryPlanManualActionDetailsResponseOutput() RecoveryPlanManualActionDetailsResponseOutput {
	return o
}

func (o RecoveryPlanManualActionDetailsResponseOutput) ToRecoveryPlanManualActionDetailsResponseOutputWithContext(ctx context.Context) RecoveryPlanManualActionDetailsResponseOutput {
	return o
}

// The manual action description.
func (o RecoveryPlanManualActionDetailsResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanManualActionDetailsResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Gets the type of action details (see RecoveryPlanActionDetailsTypes enum for possible values).
func (o RecoveryPlanManualActionDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanManualActionDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// Recovery plan custom details.
type RecoveryPlanPropertiesResponse struct {
	// The list of allowed operations.
	AllowedOperations []string `pulumi:"allowedOperations"`
	// The current scenario details.
	CurrentScenario *CurrentScenarioDetailsResponse `pulumi:"currentScenario"`
	// The recovery plan status.
	CurrentScenarioStatus *string `pulumi:"currentScenarioStatus"`
	// The recovery plan status description.
	CurrentScenarioStatusDescription *string `pulumi:"currentScenarioStatusDescription"`
	// The failover deployment model.
	FailoverDeploymentModel *string `pulumi:"failoverDeploymentModel"`
	// The friendly name.
	FriendlyName *string `pulumi:"friendlyName"`
	// The recovery plan groups.
	Groups []RecoveryPlanGroupResponse `pulumi:"groups"`
	// The start time of the last planned failover.
	LastPlannedFailoverTime *string `pulumi:"lastPlannedFailoverTime"`
	// The start time of the last test failover.
	LastTestFailoverTime *string `pulumi:"lastTestFailoverTime"`
	// The start time of the last unplanned failover.
	LastUnplannedFailoverTime *string `pulumi:"lastUnplannedFailoverTime"`
	// The primary fabric friendly name.
	PrimaryFabricFriendlyName *string `pulumi:"primaryFabricFriendlyName"`
	// The primary fabric Id.
	PrimaryFabricId *string `pulumi:"primaryFabricId"`
	// The provider id and provider specific details.
	ProviderSpecificDetails []RecoveryPlanA2ADetailsResponse `pulumi:"providerSpecificDetails"`
	// The recovery fabric friendly name.
	RecoveryFabricFriendlyName *string `pulumi:"recoveryFabricFriendlyName"`
	// The recovery fabric Id.
	RecoveryFabricId *string `pulumi:"recoveryFabricId"`
	// The list of replication providers.
	ReplicationProviders []string `pulumi:"replicationProviders"`
}

// Recovery plan custom details.
type RecoveryPlanPropertiesResponseOutput struct{ *pulumi.OutputState }

func (RecoveryPlanPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanPropertiesResponse)(nil)).Elem()
}

func (o RecoveryPlanPropertiesResponseOutput) ToRecoveryPlanPropertiesResponseOutput() RecoveryPlanPropertiesResponseOutput {
	return o
}

func (o RecoveryPlanPropertiesResponseOutput) ToRecoveryPlanPropertiesResponseOutputWithContext(ctx context.Context) RecoveryPlanPropertiesResponseOutput {
	return o
}

func (o RecoveryPlanPropertiesResponseOutput) ToRecoveryPlanPropertiesResponsePtrOutput() RecoveryPlanPropertiesResponsePtrOutput {
	return o.ToRecoveryPlanPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o RecoveryPlanPropertiesResponseOutput) ToRecoveryPlanPropertiesResponsePtrOutputWithContext(ctx context.Context) RecoveryPlanPropertiesResponsePtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *RecoveryPlanPropertiesResponse {
		return &v
	}).(RecoveryPlanPropertiesResponsePtrOutput)
}

// The list of allowed operations.
func (o RecoveryPlanPropertiesResponseOutput) AllowedOperations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) []string { return v.AllowedOperations }).(pulumi.StringArrayOutput)
}

// The current scenario details.
func (o RecoveryPlanPropertiesResponseOutput) CurrentScenario() CurrentScenarioDetailsResponsePtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *CurrentScenarioDetailsResponse { return v.CurrentScenario }).(CurrentScenarioDetailsResponsePtrOutput)
}

// The recovery plan status.
func (o RecoveryPlanPropertiesResponseOutput) CurrentScenarioStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *string { return v.CurrentScenarioStatus }).(pulumi.StringPtrOutput)
}

// The recovery plan status description.
func (o RecoveryPlanPropertiesResponseOutput) CurrentScenarioStatusDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *string { return v.CurrentScenarioStatusDescription }).(pulumi.StringPtrOutput)
}

// The failover deployment model.
func (o RecoveryPlanPropertiesResponseOutput) FailoverDeploymentModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *string { return v.FailoverDeploymentModel }).(pulumi.StringPtrOutput)
}

// The friendly name.
func (o RecoveryPlanPropertiesResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// The recovery plan groups.
func (o RecoveryPlanPropertiesResponseOutput) Groups() RecoveryPlanGroupResponseArrayOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) []RecoveryPlanGroupResponse { return v.Groups }).(RecoveryPlanGroupResponseArrayOutput)
}

// The start time of the last planned failover.
func (o RecoveryPlanPropertiesResponseOutput) LastPlannedFailoverTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *string { return v.LastPlannedFailoverTime }).(pulumi.StringPtrOutput)
}

// The start time of the last test failover.
func (o RecoveryPlanPropertiesResponseOutput) LastTestFailoverTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *string { return v.LastTestFailoverTime }).(pulumi.StringPtrOutput)
}

// The start time of the last unplanned failover.
func (o RecoveryPlanPropertiesResponseOutput) LastUnplannedFailoverTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *string { return v.LastUnplannedFailoverTime }).(pulumi.StringPtrOutput)
}

// The primary fabric friendly name.
func (o RecoveryPlanPropertiesResponseOutput) PrimaryFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *string { return v.PrimaryFabricFriendlyName }).(pulumi.StringPtrOutput)
}

// The primary fabric Id.
func (o RecoveryPlanPropertiesResponseOutput) PrimaryFabricId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *string { return v.PrimaryFabricId }).(pulumi.StringPtrOutput)
}

// The provider id and provider specific details.
func (o RecoveryPlanPropertiesResponseOutput) ProviderSpecificDetails() RecoveryPlanA2ADetailsResponseArrayOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) []RecoveryPlanA2ADetailsResponse {
		return v.ProviderSpecificDetails
	}).(RecoveryPlanA2ADetailsResponseArrayOutput)
}

// The recovery fabric friendly name.
func (o RecoveryPlanPropertiesResponseOutput) RecoveryFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *string { return v.RecoveryFabricFriendlyName }).(pulumi.StringPtrOutput)
}

// The recovery fabric Id.
func (o RecoveryPlanPropertiesResponseOutput) RecoveryFabricId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *string { return v.RecoveryFabricId }).(pulumi.StringPtrOutput)
}

// The list of replication providers.
func (o RecoveryPlanPropertiesResponseOutput) ReplicationProviders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) []string { return v.ReplicationProviders }).(pulumi.StringArrayOutput)
}

type RecoveryPlanPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (RecoveryPlanPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecoveryPlanPropertiesResponse)(nil)).Elem()
}

func (o RecoveryPlanPropertiesResponsePtrOutput) ToRecoveryPlanPropertiesResponsePtrOutput() RecoveryPlanPropertiesResponsePtrOutput {
	return o
}

func (o RecoveryPlanPropertiesResponsePtrOutput) ToRecoveryPlanPropertiesResponsePtrOutputWithContext(ctx context.Context) RecoveryPlanPropertiesResponsePtrOutput {
	return o
}

func (o RecoveryPlanPropertiesResponsePtrOutput) Elem() RecoveryPlanPropertiesResponseOutput {
	return o.ApplyT(func(v *RecoveryPlanPropertiesResponse) RecoveryPlanPropertiesResponse { return *v }).(RecoveryPlanPropertiesResponseOutput)
}

// The list of allowed operations.
func (o RecoveryPlanPropertiesResponsePtrOutput) AllowedOperations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RecoveryPlanPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.AllowedOperations
	}).(pulumi.StringArrayOutput)
}

// The current scenario details.
func (o RecoveryPlanPropertiesResponsePtrOutput) CurrentScenario() CurrentScenarioDetailsResponsePtrOutput {
	return o.ApplyT(func(v *RecoveryPlanPropertiesResponse) *CurrentScenarioDetailsResponse {
		if v == nil {
			return nil
		}
		return v.CurrentScenario
	}).(CurrentScenarioDetailsResponsePtrOutput)
}

// The recovery plan status.
func (o RecoveryPlanPropertiesResponsePtrOutput) CurrentScenarioStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.CurrentScenarioStatus
	}).(pulumi.StringPtrOutput)
}

// The recovery plan status description.
func (o RecoveryPlanPropertiesResponsePtrOutput) CurrentScenarioStatusDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.CurrentScenarioStatusDescription
	}).(pulumi.StringPtrOutput)
}

// The failover deployment model.
func (o RecoveryPlanPropertiesResponsePtrOutput) FailoverDeploymentModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.FailoverDeploymentModel
	}).(pulumi.StringPtrOutput)
}

// The friendly name.
func (o RecoveryPlanPropertiesResponsePtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// The recovery plan groups.
func (o RecoveryPlanPropertiesResponsePtrOutput) Groups() RecoveryPlanGroupResponseArrayOutput {
	return o.ApplyT(func(v *RecoveryPlanPropertiesResponse) []RecoveryPlanGroupResponse {
		if v == nil {
			return nil
		}
		return v.Groups
	}).(RecoveryPlanGroupResponseArrayOutput)
}

// The start time of the last planned failover.
func (o RecoveryPlanPropertiesResponsePtrOutput) LastPlannedFailoverTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastPlannedFailoverTime
	}).(pulumi.StringPtrOutput)
}

// The start time of the last test failover.
func (o RecoveryPlanPropertiesResponsePtrOutput) LastTestFailoverTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastTestFailoverTime
	}).(pulumi.StringPtrOutput)
}

// The start time of the last unplanned failover.
func (o RecoveryPlanPropertiesResponsePtrOutput) LastUnplannedFailoverTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastUnplannedFailoverTime
	}).(pulumi.StringPtrOutput)
}

// The primary fabric friendly name.
func (o RecoveryPlanPropertiesResponsePtrOutput) PrimaryFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryFabricFriendlyName
	}).(pulumi.StringPtrOutput)
}

// The primary fabric Id.
func (o RecoveryPlanPropertiesResponsePtrOutput) PrimaryFabricId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryFabricId
	}).(pulumi.StringPtrOutput)
}

// The provider id and provider specific details.
func (o RecoveryPlanPropertiesResponsePtrOutput) ProviderSpecificDetails() RecoveryPlanA2ADetailsResponseArrayOutput {
	return o.ApplyT(func(v *RecoveryPlanPropertiesResponse) []RecoveryPlanA2ADetailsResponse {
		if v == nil {
			return nil
		}
		return v.ProviderSpecificDetails
	}).(RecoveryPlanA2ADetailsResponseArrayOutput)
}

// The recovery fabric friendly name.
func (o RecoveryPlanPropertiesResponsePtrOutput) RecoveryFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryFabricFriendlyName
	}).(pulumi.StringPtrOutput)
}

// The recovery fabric Id.
func (o RecoveryPlanPropertiesResponsePtrOutput) RecoveryFabricId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryFabricId
	}).(pulumi.StringPtrOutput)
}

// The list of replication providers.
func (o RecoveryPlanPropertiesResponsePtrOutput) ReplicationProviders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RecoveryPlanPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.ReplicationProviders
	}).(pulumi.StringArrayOutput)
}

// Recovery plan protected item.
type RecoveryPlanProtectedItem struct {
	// The ARM Id of the recovery plan protected item.
	Id *string `pulumi:"id"`
	// The virtual machine Id.
	VirtualMachineId *string `pulumi:"virtualMachineId"`
}

// RecoveryPlanProtectedItemInput is an input type that accepts RecoveryPlanProtectedItemArgs and RecoveryPlanProtectedItemOutput values.
// You can construct a concrete instance of `RecoveryPlanProtectedItemInput` via:
//
//          RecoveryPlanProtectedItemArgs{...}
type RecoveryPlanProtectedItemInput interface {
	pulumi.Input

	ToRecoveryPlanProtectedItemOutput() RecoveryPlanProtectedItemOutput
	ToRecoveryPlanProtectedItemOutputWithContext(context.Context) RecoveryPlanProtectedItemOutput
}

// Recovery plan protected item.
type RecoveryPlanProtectedItemArgs struct {
	// The ARM Id of the recovery plan protected item.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The virtual machine Id.
	VirtualMachineId pulumi.StringPtrInput `pulumi:"virtualMachineId"`
}

func (RecoveryPlanProtectedItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanProtectedItem)(nil)).Elem()
}

func (i RecoveryPlanProtectedItemArgs) ToRecoveryPlanProtectedItemOutput() RecoveryPlanProtectedItemOutput {
	return i.ToRecoveryPlanProtectedItemOutputWithContext(context.Background())
}

func (i RecoveryPlanProtectedItemArgs) ToRecoveryPlanProtectedItemOutputWithContext(ctx context.Context) RecoveryPlanProtectedItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanProtectedItemOutput)
}

// RecoveryPlanProtectedItemArrayInput is an input type that accepts RecoveryPlanProtectedItemArray and RecoveryPlanProtectedItemArrayOutput values.
// You can construct a concrete instance of `RecoveryPlanProtectedItemArrayInput` via:
//
//          RecoveryPlanProtectedItemArray{ RecoveryPlanProtectedItemArgs{...} }
type RecoveryPlanProtectedItemArrayInput interface {
	pulumi.Input

	ToRecoveryPlanProtectedItemArrayOutput() RecoveryPlanProtectedItemArrayOutput
	ToRecoveryPlanProtectedItemArrayOutputWithContext(context.Context) RecoveryPlanProtectedItemArrayOutput
}

type RecoveryPlanProtectedItemArray []RecoveryPlanProtectedItemInput

func (RecoveryPlanProtectedItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanProtectedItem)(nil)).Elem()
}

func (i RecoveryPlanProtectedItemArray) ToRecoveryPlanProtectedItemArrayOutput() RecoveryPlanProtectedItemArrayOutput {
	return i.ToRecoveryPlanProtectedItemArrayOutputWithContext(context.Background())
}

func (i RecoveryPlanProtectedItemArray) ToRecoveryPlanProtectedItemArrayOutputWithContext(ctx context.Context) RecoveryPlanProtectedItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanProtectedItemArrayOutput)
}

// Recovery plan protected item.
type RecoveryPlanProtectedItemResponse struct {
	// The ARM Id of the recovery plan protected item.
	Id *string `pulumi:"id"`
	// The virtual machine Id.
	VirtualMachineId *string `pulumi:"virtualMachineId"`
}

// Recovery plan protected item.
type RecoveryPlanProtectedItemResponseOutput struct{ *pulumi.OutputState }

func (RecoveryPlanProtectedItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanProtectedItemResponse)(nil)).Elem()
}

func (o RecoveryPlanProtectedItemResponseOutput) ToRecoveryPlanProtectedItemResponseOutput() RecoveryPlanProtectedItemResponseOutput {
	return o
}

func (o RecoveryPlanProtectedItemResponseOutput) ToRecoveryPlanProtectedItemResponseOutputWithContext(ctx context.Context) RecoveryPlanProtectedItemResponseOutput {
	return o
}

// The ARM Id of the recovery plan protected item.
func (o RecoveryPlanProtectedItemResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanProtectedItemResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The virtual machine Id.
func (o RecoveryPlanProtectedItemResponseOutput) VirtualMachineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanProtectedItemResponse) *string { return v.VirtualMachineId }).(pulumi.StringPtrOutput)
}

type RecoveryPlanProtectedItemResponseArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanProtectedItemResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanProtectedItemResponse)(nil)).Elem()
}

func (o RecoveryPlanProtectedItemResponseArrayOutput) ToRecoveryPlanProtectedItemResponseArrayOutput() RecoveryPlanProtectedItemResponseArrayOutput {
	return o
}

func (o RecoveryPlanProtectedItemResponseArrayOutput) ToRecoveryPlanProtectedItemResponseArrayOutputWithContext(ctx context.Context) RecoveryPlanProtectedItemResponseArrayOutput {
	return o
}

func (o RecoveryPlanProtectedItemResponseArrayOutput) Index(i pulumi.IntInput) RecoveryPlanProtectedItemResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanProtectedItemResponse {
		return vs[0].([]RecoveryPlanProtectedItemResponse)[vs[1].(int)]
	}).(RecoveryPlanProtectedItemResponseOutput)
}

// Recovery plan script action details.
type RecoveryPlanScriptActionDetailsResponse struct {
	// The fabric location.
	FabricLocation string `pulumi:"fabricLocation"`
	// Gets the type of action details (see RecoveryPlanActionDetailsTypes enum for possible values).
	InstanceType string `pulumi:"instanceType"`
	// The script path.
	Path string `pulumi:"path"`
	// The script timeout.
	Timeout *string `pulumi:"timeout"`
}

// Recovery plan script action details.
type RecoveryPlanScriptActionDetailsResponseOutput struct{ *pulumi.OutputState }

func (RecoveryPlanScriptActionDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanScriptActionDetailsResponse)(nil)).Elem()
}

func (o RecoveryPlanScriptActionDetailsResponseOutput) ToRecoveryPlanScriptActionDetailsResponseOutput() RecoveryPlanScriptActionDetailsResponseOutput {
	return o
}

func (o RecoveryPlanScriptActionDetailsResponseOutput) ToRecoveryPlanScriptActionDetailsResponseOutputWithContext(ctx context.Context) RecoveryPlanScriptActionDetailsResponseOutput {
	return o
}

// The fabric location.
func (o RecoveryPlanScriptActionDetailsResponseOutput) FabricLocation() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanScriptActionDetailsResponse) string { return v.FabricLocation }).(pulumi.StringOutput)
}

// Gets the type of action details (see RecoveryPlanActionDetailsTypes enum for possible values).
func (o RecoveryPlanScriptActionDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanScriptActionDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The script path.
func (o RecoveryPlanScriptActionDetailsResponseOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanScriptActionDetailsResponse) string { return v.Path }).(pulumi.StringOutput)
}

// The script timeout.
func (o RecoveryPlanScriptActionDetailsResponseOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanScriptActionDetailsResponse) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

// Recovery services provider properties.
type RecoveryServicesProviderPropertiesResponse struct {
	// The scenarios allowed on this provider.
	AllowedScenarios []string `pulumi:"allowedScenarios"`
	// The authentication identity details.
	AuthenticationIdentityDetails *IdentityProviderDetailsResponse `pulumi:"authenticationIdentityDetails"`
	// A value indicating whether DRA is responsive.
	ConnectionStatus *string `pulumi:"connectionStatus"`
	// The DRA Id.
	DraIdentifier *string `pulumi:"draIdentifier"`
	// The fabric friendly name.
	FabricFriendlyName *string `pulumi:"fabricFriendlyName"`
	// Type of the site.
	FabricType *string `pulumi:"fabricType"`
	// Friendly name of the DRA.
	FriendlyName *string `pulumi:"friendlyName"`
	// The recovery services provider health error details.
	HealthErrorDetails []HealthErrorResponse `pulumi:"healthErrorDetails"`
	// Time when last heartbeat was sent by the DRA.
	LastHeartBeat *string `pulumi:"lastHeartBeat"`
	// Number of protected VMs currently managed by the DRA.
	ProtectedItemCount *int `pulumi:"protectedItemCount"`
	// The provider version.
	ProviderVersion *string `pulumi:"providerVersion"`
	// The provider version details.
	ProviderVersionDetails *VersionDetailsResponse `pulumi:"providerVersionDetails"`
	// Expiry date of the version.
	ProviderVersionExpiryDate *string `pulumi:"providerVersionExpiryDate"`
	// DRA version status.
	ProviderVersionState *string `pulumi:"providerVersionState"`
	// The resource access identity details.
	ResourceAccessIdentityDetails *IdentityProviderDetailsResponse `pulumi:"resourceAccessIdentityDetails"`
	// The fabric provider.
	ServerVersion *string `pulumi:"serverVersion"`
}

// Recovery services provider properties.
type RecoveryServicesProviderPropertiesResponseOutput struct{ *pulumi.OutputState }

func (RecoveryServicesProviderPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryServicesProviderPropertiesResponse)(nil)).Elem()
}

func (o RecoveryServicesProviderPropertiesResponseOutput) ToRecoveryServicesProviderPropertiesResponseOutput() RecoveryServicesProviderPropertiesResponseOutput {
	return o
}

func (o RecoveryServicesProviderPropertiesResponseOutput) ToRecoveryServicesProviderPropertiesResponseOutputWithContext(ctx context.Context) RecoveryServicesProviderPropertiesResponseOutput {
	return o
}

func (o RecoveryServicesProviderPropertiesResponseOutput) ToRecoveryServicesProviderPropertiesResponsePtrOutput() RecoveryServicesProviderPropertiesResponsePtrOutput {
	return o.ToRecoveryServicesProviderPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o RecoveryServicesProviderPropertiesResponseOutput) ToRecoveryServicesProviderPropertiesResponsePtrOutputWithContext(ctx context.Context) RecoveryServicesProviderPropertiesResponsePtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *RecoveryServicesProviderPropertiesResponse {
		return &v
	}).(RecoveryServicesProviderPropertiesResponsePtrOutput)
}

// The scenarios allowed on this provider.
func (o RecoveryServicesProviderPropertiesResponseOutput) AllowedScenarios() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) []string { return v.AllowedScenarios }).(pulumi.StringArrayOutput)
}

// The authentication identity details.
func (o RecoveryServicesProviderPropertiesResponseOutput) AuthenticationIdentityDetails() IdentityProviderDetailsResponsePtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *IdentityProviderDetailsResponse {
		return v.AuthenticationIdentityDetails
	}).(IdentityProviderDetailsResponsePtrOutput)
}

// A value indicating whether DRA is responsive.
func (o RecoveryServicesProviderPropertiesResponseOutput) ConnectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *string { return v.ConnectionStatus }).(pulumi.StringPtrOutput)
}

// The DRA Id.
func (o RecoveryServicesProviderPropertiesResponseOutput) DraIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *string { return v.DraIdentifier }).(pulumi.StringPtrOutput)
}

// The fabric friendly name.
func (o RecoveryServicesProviderPropertiesResponseOutput) FabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *string { return v.FabricFriendlyName }).(pulumi.StringPtrOutput)
}

// Type of the site.
func (o RecoveryServicesProviderPropertiesResponseOutput) FabricType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *string { return v.FabricType }).(pulumi.StringPtrOutput)
}

// Friendly name of the DRA.
func (o RecoveryServicesProviderPropertiesResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// The recovery services provider health error details.
func (o RecoveryServicesProviderPropertiesResponseOutput) HealthErrorDetails() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) []HealthErrorResponse { return v.HealthErrorDetails }).(HealthErrorResponseArrayOutput)
}

// Time when last heartbeat was sent by the DRA.
func (o RecoveryServicesProviderPropertiesResponseOutput) LastHeartBeat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *string { return v.LastHeartBeat }).(pulumi.StringPtrOutput)
}

// Number of protected VMs currently managed by the DRA.
func (o RecoveryServicesProviderPropertiesResponseOutput) ProtectedItemCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *int { return v.ProtectedItemCount }).(pulumi.IntPtrOutput)
}

// The provider version.
func (o RecoveryServicesProviderPropertiesResponseOutput) ProviderVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *string { return v.ProviderVersion }).(pulumi.StringPtrOutput)
}

// The provider version details.
func (o RecoveryServicesProviderPropertiesResponseOutput) ProviderVersionDetails() VersionDetailsResponsePtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *VersionDetailsResponse {
		return v.ProviderVersionDetails
	}).(VersionDetailsResponsePtrOutput)
}

// Expiry date of the version.
func (o RecoveryServicesProviderPropertiesResponseOutput) ProviderVersionExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *string { return v.ProviderVersionExpiryDate }).(pulumi.StringPtrOutput)
}

// DRA version status.
func (o RecoveryServicesProviderPropertiesResponseOutput) ProviderVersionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *string { return v.ProviderVersionState }).(pulumi.StringPtrOutput)
}

// The resource access identity details.
func (o RecoveryServicesProviderPropertiesResponseOutput) ResourceAccessIdentityDetails() IdentityProviderDetailsResponsePtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *IdentityProviderDetailsResponse {
		return v.ResourceAccessIdentityDetails
	}).(IdentityProviderDetailsResponsePtrOutput)
}

// The fabric provider.
func (o RecoveryServicesProviderPropertiesResponseOutput) ServerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *string { return v.ServerVersion }).(pulumi.StringPtrOutput)
}

type RecoveryServicesProviderPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (RecoveryServicesProviderPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecoveryServicesProviderPropertiesResponse)(nil)).Elem()
}

func (o RecoveryServicesProviderPropertiesResponsePtrOutput) ToRecoveryServicesProviderPropertiesResponsePtrOutput() RecoveryServicesProviderPropertiesResponsePtrOutput {
	return o
}

func (o RecoveryServicesProviderPropertiesResponsePtrOutput) ToRecoveryServicesProviderPropertiesResponsePtrOutputWithContext(ctx context.Context) RecoveryServicesProviderPropertiesResponsePtrOutput {
	return o
}

func (o RecoveryServicesProviderPropertiesResponsePtrOutput) Elem() RecoveryServicesProviderPropertiesResponseOutput {
	return o.ApplyT(func(v *RecoveryServicesProviderPropertiesResponse) RecoveryServicesProviderPropertiesResponse {
		return *v
	}).(RecoveryServicesProviderPropertiesResponseOutput)
}

// The scenarios allowed on this provider.
func (o RecoveryServicesProviderPropertiesResponsePtrOutput) AllowedScenarios() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RecoveryServicesProviderPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.AllowedScenarios
	}).(pulumi.StringArrayOutput)
}

// The authentication identity details.
func (o RecoveryServicesProviderPropertiesResponsePtrOutput) AuthenticationIdentityDetails() IdentityProviderDetailsResponsePtrOutput {
	return o.ApplyT(func(v *RecoveryServicesProviderPropertiesResponse) *IdentityProviderDetailsResponse {
		if v == nil {
			return nil
		}
		return v.AuthenticationIdentityDetails
	}).(IdentityProviderDetailsResponsePtrOutput)
}

// A value indicating whether DRA is responsive.
func (o RecoveryServicesProviderPropertiesResponsePtrOutput) ConnectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryServicesProviderPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ConnectionStatus
	}).(pulumi.StringPtrOutput)
}

// The DRA Id.
func (o RecoveryServicesProviderPropertiesResponsePtrOutput) DraIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryServicesProviderPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DraIdentifier
	}).(pulumi.StringPtrOutput)
}

// The fabric friendly name.
func (o RecoveryServicesProviderPropertiesResponsePtrOutput) FabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryServicesProviderPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.FabricFriendlyName
	}).(pulumi.StringPtrOutput)
}

// Type of the site.
func (o RecoveryServicesProviderPropertiesResponsePtrOutput) FabricType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryServicesProviderPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.FabricType
	}).(pulumi.StringPtrOutput)
}

// Friendly name of the DRA.
func (o RecoveryServicesProviderPropertiesResponsePtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryServicesProviderPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// The recovery services provider health error details.
func (o RecoveryServicesProviderPropertiesResponsePtrOutput) HealthErrorDetails() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v *RecoveryServicesProviderPropertiesResponse) []HealthErrorResponse {
		if v == nil {
			return nil
		}
		return v.HealthErrorDetails
	}).(HealthErrorResponseArrayOutput)
}

// Time when last heartbeat was sent by the DRA.
func (o RecoveryServicesProviderPropertiesResponsePtrOutput) LastHeartBeat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryServicesProviderPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastHeartBeat
	}).(pulumi.StringPtrOutput)
}

// Number of protected VMs currently managed by the DRA.
func (o RecoveryServicesProviderPropertiesResponsePtrOutput) ProtectedItemCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RecoveryServicesProviderPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.ProtectedItemCount
	}).(pulumi.IntPtrOutput)
}

// The provider version.
func (o RecoveryServicesProviderPropertiesResponsePtrOutput) ProviderVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryServicesProviderPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProviderVersion
	}).(pulumi.StringPtrOutput)
}

// The provider version details.
func (o RecoveryServicesProviderPropertiesResponsePtrOutput) ProviderVersionDetails() VersionDetailsResponsePtrOutput {
	return o.ApplyT(func(v *RecoveryServicesProviderPropertiesResponse) *VersionDetailsResponse {
		if v == nil {
			return nil
		}
		return v.ProviderVersionDetails
	}).(VersionDetailsResponsePtrOutput)
}

// Expiry date of the version.
func (o RecoveryServicesProviderPropertiesResponsePtrOutput) ProviderVersionExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryServicesProviderPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProviderVersionExpiryDate
	}).(pulumi.StringPtrOutput)
}

// DRA version status.
func (o RecoveryServicesProviderPropertiesResponsePtrOutput) ProviderVersionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryServicesProviderPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProviderVersionState
	}).(pulumi.StringPtrOutput)
}

// The resource access identity details.
func (o RecoveryServicesProviderPropertiesResponsePtrOutput) ResourceAccessIdentityDetails() IdentityProviderDetailsResponsePtrOutput {
	return o.ApplyT(func(v *RecoveryServicesProviderPropertiesResponse) *IdentityProviderDetailsResponse {
		if v == nil {
			return nil
		}
		return v.ResourceAccessIdentityDetails
	}).(IdentityProviderDetailsResponsePtrOutput)
}

// The fabric provider.
func (o RecoveryServicesProviderPropertiesResponsePtrOutput) ServerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryServicesProviderPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServerVersion
	}).(pulumi.StringPtrOutput)
}

// Replication protected item custom data details.
type ReplicationProtectedItemPropertiesResponse struct {
	// The Current active location of the PE.
	ActiveLocation *string `pulumi:"activeLocation"`
	// The allowed operations on the Replication protected item.
	AllowedOperations []string `pulumi:"allowedOperations"`
	// The current scenario.
	CurrentScenario *CurrentScenarioDetailsResponse `pulumi:"currentScenario"`
	// The consolidated failover health for the VM.
	FailoverHealth *string `pulumi:"failoverHealth"`
	// The recovery point ARM Id to which the Vm was failed over.
	FailoverRecoveryPointId *string `pulumi:"failoverRecoveryPointId"`
	// The name.
	FriendlyName *string `pulumi:"friendlyName"`
	// List of health errors.
	HealthErrors []HealthErrorResponse `pulumi:"healthErrors"`
	// The Last successful failover time.
	LastSuccessfulFailoverTime *string `pulumi:"lastSuccessfulFailoverTime"`
	// The Last successful test failover time.
	LastSuccessfulTestFailoverTime *string `pulumi:"lastSuccessfulTestFailoverTime"`
	// The name of Policy governing this PE.
	PolicyFriendlyName *string `pulumi:"policyFriendlyName"`
	// The ID of Policy governing this PE.
	PolicyId *string `pulumi:"policyId"`
	// The friendly name of the primary fabric.
	PrimaryFabricFriendlyName *string `pulumi:"primaryFabricFriendlyName"`
	// The fabric provider of the primary fabric.
	PrimaryFabricProvider *string `pulumi:"primaryFabricProvider"`
	// The name of primary protection container friendly name.
	PrimaryProtectionContainerFriendlyName *string `pulumi:"primaryProtectionContainerFriendlyName"`
	// The protected item ARM Id.
	ProtectableItemId *string `pulumi:"protectableItemId"`
	// The type of protected item type.
	ProtectedItemType *string `pulumi:"protectedItemType"`
	// The protection status.
	ProtectionState *string `pulumi:"protectionState"`
	// The protection state description.
	ProtectionStateDescription *string `pulumi:"protectionStateDescription"`
	// The Replication provider custom settings.
	ProviderSpecificDetails interface{} `pulumi:"providerSpecificDetails"`
	// The recovery container Id.
	RecoveryContainerId *string `pulumi:"recoveryContainerId"`
	// The friendly name of recovery fabric.
	RecoveryFabricFriendlyName *string `pulumi:"recoveryFabricFriendlyName"`
	// The Arm Id of recovery fabric.
	RecoveryFabricId *string `pulumi:"recoveryFabricId"`
	// The name of recovery container friendly name.
	RecoveryProtectionContainerFriendlyName *string `pulumi:"recoveryProtectionContainerFriendlyName"`
	// The recovery provider ARM Id.
	RecoveryServicesProviderId *string `pulumi:"recoveryServicesProviderId"`
	// The consolidated protection health for the VM taking any issues with SRS as well as all the replication units associated with the VM's replication group into account. This is a string representation of the ProtectionHealth enumeration.
	ReplicationHealth *string `pulumi:"replicationHealth"`
	// The Test failover state.
	TestFailoverState *string `pulumi:"testFailoverState"`
	// The Test failover state description.
	TestFailoverStateDescription *string `pulumi:"testFailoverStateDescription"`
}

// Replication protected item custom data details.
type ReplicationProtectedItemPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ReplicationProtectedItemPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationProtectedItemPropertiesResponse)(nil)).Elem()
}

func (o ReplicationProtectedItemPropertiesResponseOutput) ToReplicationProtectedItemPropertiesResponseOutput() ReplicationProtectedItemPropertiesResponseOutput {
	return o
}

func (o ReplicationProtectedItemPropertiesResponseOutput) ToReplicationProtectedItemPropertiesResponseOutputWithContext(ctx context.Context) ReplicationProtectedItemPropertiesResponseOutput {
	return o
}

func (o ReplicationProtectedItemPropertiesResponseOutput) ToReplicationProtectedItemPropertiesResponsePtrOutput() ReplicationProtectedItemPropertiesResponsePtrOutput {
	return o.ToReplicationProtectedItemPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ReplicationProtectedItemPropertiesResponseOutput) ToReplicationProtectedItemPropertiesResponsePtrOutputWithContext(ctx context.Context) ReplicationProtectedItemPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *ReplicationProtectedItemPropertiesResponse {
		return &v
	}).(ReplicationProtectedItemPropertiesResponsePtrOutput)
}

// The Current active location of the PE.
func (o ReplicationProtectedItemPropertiesResponseOutput) ActiveLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.ActiveLocation }).(pulumi.StringPtrOutput)
}

// The allowed operations on the Replication protected item.
func (o ReplicationProtectedItemPropertiesResponseOutput) AllowedOperations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) []string { return v.AllowedOperations }).(pulumi.StringArrayOutput)
}

// The current scenario.
func (o ReplicationProtectedItemPropertiesResponseOutput) CurrentScenario() CurrentScenarioDetailsResponsePtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *CurrentScenarioDetailsResponse {
		return v.CurrentScenario
	}).(CurrentScenarioDetailsResponsePtrOutput)
}

// The consolidated failover health for the VM.
func (o ReplicationProtectedItemPropertiesResponseOutput) FailoverHealth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.FailoverHealth }).(pulumi.StringPtrOutput)
}

// The recovery point ARM Id to which the Vm was failed over.
func (o ReplicationProtectedItemPropertiesResponseOutput) FailoverRecoveryPointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.FailoverRecoveryPointId }).(pulumi.StringPtrOutput)
}

// The name.
func (o ReplicationProtectedItemPropertiesResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// List of health errors.
func (o ReplicationProtectedItemPropertiesResponseOutput) HealthErrors() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) []HealthErrorResponse { return v.HealthErrors }).(HealthErrorResponseArrayOutput)
}

// The Last successful failover time.
func (o ReplicationProtectedItemPropertiesResponseOutput) LastSuccessfulFailoverTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.LastSuccessfulFailoverTime }).(pulumi.StringPtrOutput)
}

// The Last successful test failover time.
func (o ReplicationProtectedItemPropertiesResponseOutput) LastSuccessfulTestFailoverTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.LastSuccessfulTestFailoverTime }).(pulumi.StringPtrOutput)
}

// The name of Policy governing this PE.
func (o ReplicationProtectedItemPropertiesResponseOutput) PolicyFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.PolicyFriendlyName }).(pulumi.StringPtrOutput)
}

// The ID of Policy governing this PE.
func (o ReplicationProtectedItemPropertiesResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// The friendly name of the primary fabric.
func (o ReplicationProtectedItemPropertiesResponseOutput) PrimaryFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.PrimaryFabricFriendlyName }).(pulumi.StringPtrOutput)
}

// The fabric provider of the primary fabric.
func (o ReplicationProtectedItemPropertiesResponseOutput) PrimaryFabricProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.PrimaryFabricProvider }).(pulumi.StringPtrOutput)
}

// The name of primary protection container friendly name.
func (o ReplicationProtectedItemPropertiesResponseOutput) PrimaryProtectionContainerFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string {
		return v.PrimaryProtectionContainerFriendlyName
	}).(pulumi.StringPtrOutput)
}

// The protected item ARM Id.
func (o ReplicationProtectedItemPropertiesResponseOutput) ProtectableItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.ProtectableItemId }).(pulumi.StringPtrOutput)
}

// The type of protected item type.
func (o ReplicationProtectedItemPropertiesResponseOutput) ProtectedItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.ProtectedItemType }).(pulumi.StringPtrOutput)
}

// The protection status.
func (o ReplicationProtectedItemPropertiesResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// The protection state description.
func (o ReplicationProtectedItemPropertiesResponseOutput) ProtectionStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.ProtectionStateDescription }).(pulumi.StringPtrOutput)
}

// The Replication provider custom settings.
func (o ReplicationProtectedItemPropertiesResponseOutput) ProviderSpecificDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) interface{} { return v.ProviderSpecificDetails }).(pulumi.AnyOutput)
}

// The recovery container Id.
func (o ReplicationProtectedItemPropertiesResponseOutput) RecoveryContainerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.RecoveryContainerId }).(pulumi.StringPtrOutput)
}

// The friendly name of recovery fabric.
func (o ReplicationProtectedItemPropertiesResponseOutput) RecoveryFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.RecoveryFabricFriendlyName }).(pulumi.StringPtrOutput)
}

// The Arm Id of recovery fabric.
func (o ReplicationProtectedItemPropertiesResponseOutput) RecoveryFabricId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.RecoveryFabricId }).(pulumi.StringPtrOutput)
}

// The name of recovery container friendly name.
func (o ReplicationProtectedItemPropertiesResponseOutput) RecoveryProtectionContainerFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string {
		return v.RecoveryProtectionContainerFriendlyName
	}).(pulumi.StringPtrOutput)
}

// The recovery provider ARM Id.
func (o ReplicationProtectedItemPropertiesResponseOutput) RecoveryServicesProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.RecoveryServicesProviderId }).(pulumi.StringPtrOutput)
}

// The consolidated protection health for the VM taking any issues with SRS as well as all the replication units associated with the VM's replication group into account. This is a string representation of the ProtectionHealth enumeration.
func (o ReplicationProtectedItemPropertiesResponseOutput) ReplicationHealth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.ReplicationHealth }).(pulumi.StringPtrOutput)
}

// The Test failover state.
func (o ReplicationProtectedItemPropertiesResponseOutput) TestFailoverState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.TestFailoverState }).(pulumi.StringPtrOutput)
}

// The Test failover state description.
func (o ReplicationProtectedItemPropertiesResponseOutput) TestFailoverStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.TestFailoverStateDescription }).(pulumi.StringPtrOutput)
}

type ReplicationProtectedItemPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ReplicationProtectedItemPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationProtectedItemPropertiesResponse)(nil)).Elem()
}

func (o ReplicationProtectedItemPropertiesResponsePtrOutput) ToReplicationProtectedItemPropertiesResponsePtrOutput() ReplicationProtectedItemPropertiesResponsePtrOutput {
	return o
}

func (o ReplicationProtectedItemPropertiesResponsePtrOutput) ToReplicationProtectedItemPropertiesResponsePtrOutputWithContext(ctx context.Context) ReplicationProtectedItemPropertiesResponsePtrOutput {
	return o
}

func (o ReplicationProtectedItemPropertiesResponsePtrOutput) Elem() ReplicationProtectedItemPropertiesResponseOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) ReplicationProtectedItemPropertiesResponse {
		return *v
	}).(ReplicationProtectedItemPropertiesResponseOutput)
}

// The Current active location of the PE.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) ActiveLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ActiveLocation
	}).(pulumi.StringPtrOutput)
}

// The allowed operations on the Replication protected item.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) AllowedOperations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.AllowedOperations
	}).(pulumi.StringArrayOutput)
}

// The current scenario.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) CurrentScenario() CurrentScenarioDetailsResponsePtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *CurrentScenarioDetailsResponse {
		if v == nil {
			return nil
		}
		return v.CurrentScenario
	}).(CurrentScenarioDetailsResponsePtrOutput)
}

// The consolidated failover health for the VM.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) FailoverHealth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.FailoverHealth
	}).(pulumi.StringPtrOutput)
}

// The recovery point ARM Id to which the Vm was failed over.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) FailoverRecoveryPointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.FailoverRecoveryPointId
	}).(pulumi.StringPtrOutput)
}

// The name.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// List of health errors.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) HealthErrors() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) []HealthErrorResponse {
		if v == nil {
			return nil
		}
		return v.HealthErrors
	}).(HealthErrorResponseArrayOutput)
}

// The Last successful failover time.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) LastSuccessfulFailoverTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastSuccessfulFailoverTime
	}).(pulumi.StringPtrOutput)
}

// The Last successful test failover time.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) LastSuccessfulTestFailoverTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastSuccessfulTestFailoverTime
	}).(pulumi.StringPtrOutput)
}

// The name of Policy governing this PE.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) PolicyFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PolicyFriendlyName
	}).(pulumi.StringPtrOutput)
}

// The ID of Policy governing this PE.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// The friendly name of the primary fabric.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) PrimaryFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryFabricFriendlyName
	}).(pulumi.StringPtrOutput)
}

// The fabric provider of the primary fabric.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) PrimaryFabricProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryFabricProvider
	}).(pulumi.StringPtrOutput)
}

// The name of primary protection container friendly name.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) PrimaryProtectionContainerFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryProtectionContainerFriendlyName
	}).(pulumi.StringPtrOutput)
}

// The protected item ARM Id.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) ProtectableItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProtectableItemId
	}).(pulumi.StringPtrOutput)
}

// The type of protected item type.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) ProtectedItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProtectedItemType
	}).(pulumi.StringPtrOutput)
}

// The protection status.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionState
	}).(pulumi.StringPtrOutput)
}

// The protection state description.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) ProtectionStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionStateDescription
	}).(pulumi.StringPtrOutput)
}

// The Replication provider custom settings.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) ProviderSpecificDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.ProviderSpecificDetails
	}).(pulumi.AnyOutput)
}

// The recovery container Id.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) RecoveryContainerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryContainerId
	}).(pulumi.StringPtrOutput)
}

// The friendly name of recovery fabric.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) RecoveryFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryFabricFriendlyName
	}).(pulumi.StringPtrOutput)
}

// The Arm Id of recovery fabric.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) RecoveryFabricId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryFabricId
	}).(pulumi.StringPtrOutput)
}

// The name of recovery container friendly name.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) RecoveryProtectionContainerFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryProtectionContainerFriendlyName
	}).(pulumi.StringPtrOutput)
}

// The recovery provider ARM Id.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) RecoveryServicesProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryServicesProviderId
	}).(pulumi.StringPtrOutput)
}

// The consolidated protection health for the VM taking any issues with SRS as well as all the replication units associated with the VM's replication group into account. This is a string representation of the ProtectionHealth enumeration.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) ReplicationHealth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ReplicationHealth
	}).(pulumi.StringPtrOutput)
}

// The Test failover state.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) TestFailoverState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.TestFailoverState
	}).(pulumi.StringPtrOutput)
}

// The Test failover state description.
func (o ReplicationProtectedItemPropertiesResponsePtrOutput) TestFailoverStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationProtectedItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.TestFailoverStateDescription
	}).(pulumi.StringPtrOutput)
}

// Health Details for backup items.
type ResourceHealthDetailsResponse struct {
	// Health Code
	Code int `pulumi:"code"`
	// Health Message
	Message string `pulumi:"message"`
	// Health Recommended Actions
	Recommendations []string `pulumi:"recommendations"`
	// Health Title
	Title string `pulumi:"title"`
}

// Health Details for backup items.
type ResourceHealthDetailsResponseOutput struct{ *pulumi.OutputState }

func (ResourceHealthDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceHealthDetailsResponse)(nil)).Elem()
}

func (o ResourceHealthDetailsResponseOutput) ToResourceHealthDetailsResponseOutput() ResourceHealthDetailsResponseOutput {
	return o
}

func (o ResourceHealthDetailsResponseOutput) ToResourceHealthDetailsResponseOutputWithContext(ctx context.Context) ResourceHealthDetailsResponseOutput {
	return o
}

// Health Code
func (o ResourceHealthDetailsResponseOutput) Code() pulumi.IntOutput {
	return o.ApplyT(func(v ResourceHealthDetailsResponse) int { return v.Code }).(pulumi.IntOutput)
}

// Health Message
func (o ResourceHealthDetailsResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceHealthDetailsResponse) string { return v.Message }).(pulumi.StringOutput)
}

// Health Recommended Actions
func (o ResourceHealthDetailsResponseOutput) Recommendations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResourceHealthDetailsResponse) []string { return v.Recommendations }).(pulumi.StringArrayOutput)
}

// Health Title
func (o ResourceHealthDetailsResponseOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceHealthDetailsResponse) string { return v.Title }).(pulumi.StringOutput)
}

type ResourceHealthDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (ResourceHealthDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceHealthDetailsResponse)(nil)).Elem()
}

func (o ResourceHealthDetailsResponseArrayOutput) ToResourceHealthDetailsResponseArrayOutput() ResourceHealthDetailsResponseArrayOutput {
	return o
}

func (o ResourceHealthDetailsResponseArrayOutput) ToResourceHealthDetailsResponseArrayOutputWithContext(ctx context.Context) ResourceHealthDetailsResponseArrayOutput {
	return o
}

func (o ResourceHealthDetailsResponseArrayOutput) Index(i pulumi.IntInput) ResourceHealthDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceHealthDetailsResponse {
		return vs[0].([]ResourceHealthDetailsResponse)[vs[1].(int)]
	}).(ResourceHealthDetailsResponseOutput)
}

// Retention duration.
type RetentionDuration struct {
	// Count of the duration types. Retention duration is determined by the combining the Count times and durationType.
	//    For example, if Count = 3 and durationType = Weeks, then the retention duration is three weeks.
	Count *int `pulumi:"count"`
	// The retention duration type of the retention policy.
	DurationType *string `pulumi:"durationType"`
}

// RetentionDurationInput is an input type that accepts RetentionDurationArgs and RetentionDurationOutput values.
// You can construct a concrete instance of `RetentionDurationInput` via:
//
//          RetentionDurationArgs{...}
type RetentionDurationInput interface {
	pulumi.Input

	ToRetentionDurationOutput() RetentionDurationOutput
	ToRetentionDurationOutputWithContext(context.Context) RetentionDurationOutput
}

// Retention duration.
type RetentionDurationArgs struct {
	// Count of the duration types. Retention duration is determined by the combining the Count times and durationType.
	//    For example, if Count = 3 and durationType = Weeks, then the retention duration is three weeks.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// The retention duration type of the retention policy.
	DurationType pulumi.StringPtrInput `pulumi:"durationType"`
}

func (RetentionDurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RetentionDuration)(nil)).Elem()
}

func (i RetentionDurationArgs) ToRetentionDurationOutput() RetentionDurationOutput {
	return i.ToRetentionDurationOutputWithContext(context.Background())
}

func (i RetentionDurationArgs) ToRetentionDurationOutputWithContext(ctx context.Context) RetentionDurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionDurationOutput)
}

func (i RetentionDurationArgs) ToRetentionDurationPtrOutput() RetentionDurationPtrOutput {
	return i.ToRetentionDurationPtrOutputWithContext(context.Background())
}

func (i RetentionDurationArgs) ToRetentionDurationPtrOutputWithContext(ctx context.Context) RetentionDurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionDurationOutput).ToRetentionDurationPtrOutputWithContext(ctx)
}

// RetentionDurationPtrInput is an input type that accepts RetentionDurationArgs, RetentionDurationPtr and RetentionDurationPtrOutput values.
// You can construct a concrete instance of `RetentionDurationPtrInput` via:
//
//          RetentionDurationArgs{...}
//
//  or:
//
//          nil
type RetentionDurationPtrInput interface {
	pulumi.Input

	ToRetentionDurationPtrOutput() RetentionDurationPtrOutput
	ToRetentionDurationPtrOutputWithContext(context.Context) RetentionDurationPtrOutput
}

type retentionDurationPtrType RetentionDurationArgs

func RetentionDurationPtr(v *RetentionDurationArgs) RetentionDurationPtrInput {
	return (*retentionDurationPtrType)(v)
}

func (*retentionDurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RetentionDuration)(nil)).Elem()
}

func (i *retentionDurationPtrType) ToRetentionDurationPtrOutput() RetentionDurationPtrOutput {
	return i.ToRetentionDurationPtrOutputWithContext(context.Background())
}

func (i *retentionDurationPtrType) ToRetentionDurationPtrOutputWithContext(ctx context.Context) RetentionDurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionDurationPtrOutput)
}

// Retention duration.
type RetentionDurationResponse struct {
	// Count of the duration types. Retention duration is determined by the combining the Count times and durationType.
	//    For example, if Count = 3 and durationType = Weeks, then the retention duration is three weeks.
	Count *int `pulumi:"count"`
	// The retention duration type of the retention policy.
	DurationType *string `pulumi:"durationType"`
}

// Retention duration.
type RetentionDurationResponseOutput struct{ *pulumi.OutputState }

func (RetentionDurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RetentionDurationResponse)(nil)).Elem()
}

func (o RetentionDurationResponseOutput) ToRetentionDurationResponseOutput() RetentionDurationResponseOutput {
	return o
}

func (o RetentionDurationResponseOutput) ToRetentionDurationResponseOutputWithContext(ctx context.Context) RetentionDurationResponseOutput {
	return o
}

func (o RetentionDurationResponseOutput) ToRetentionDurationResponsePtrOutput() RetentionDurationResponsePtrOutput {
	return o.ToRetentionDurationResponsePtrOutputWithContext(context.Background())
}

func (o RetentionDurationResponseOutput) ToRetentionDurationResponsePtrOutputWithContext(ctx context.Context) RetentionDurationResponsePtrOutput {
	return o.ApplyT(func(v RetentionDurationResponse) *RetentionDurationResponse {
		return &v
	}).(RetentionDurationResponsePtrOutput)
}

// Count of the duration types. Retention duration is determined by the combining the Count times and durationType.
//    For example, if Count = 3 and durationType = Weeks, then the retention duration is three weeks.
func (o RetentionDurationResponseOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RetentionDurationResponse) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// The retention duration type of the retention policy.
func (o RetentionDurationResponseOutput) DurationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RetentionDurationResponse) *string { return v.DurationType }).(pulumi.StringPtrOutput)
}

type RetentionDurationResponsePtrOutput struct{ *pulumi.OutputState }

func (RetentionDurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RetentionDurationResponse)(nil)).Elem()
}

func (o RetentionDurationResponsePtrOutput) ToRetentionDurationResponsePtrOutput() RetentionDurationResponsePtrOutput {
	return o
}

func (o RetentionDurationResponsePtrOutput) ToRetentionDurationResponsePtrOutputWithContext(ctx context.Context) RetentionDurationResponsePtrOutput {
	return o
}

func (o RetentionDurationResponsePtrOutput) Elem() RetentionDurationResponseOutput {
	return o.ApplyT(func(v *RetentionDurationResponse) RetentionDurationResponse { return *v }).(RetentionDurationResponseOutput)
}

// Count of the duration types. Retention duration is determined by the combining the Count times and durationType.
//    For example, if Count = 3 and durationType = Weeks, then the retention duration is three weeks.
func (o RetentionDurationResponsePtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RetentionDurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// The retention duration type of the retention policy.
func (o RetentionDurationResponsePtrOutput) DurationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RetentionDurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.DurationType
	}).(pulumi.StringPtrOutput)
}

// The retention details of the MT.
type RetentionVolumeResponse struct {
	// The volume capacity.
	CapacityInBytes *int `pulumi:"capacityInBytes"`
	// The free space available in this volume.
	FreeSpaceInBytes *int `pulumi:"freeSpaceInBytes"`
	// The threshold percentage.
	ThresholdPercentage *int `pulumi:"thresholdPercentage"`
	// The volume name.
	VolumeName *string `pulumi:"volumeName"`
}

// The retention details of the MT.
type RetentionVolumeResponseOutput struct{ *pulumi.OutputState }

func (RetentionVolumeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RetentionVolumeResponse)(nil)).Elem()
}

func (o RetentionVolumeResponseOutput) ToRetentionVolumeResponseOutput() RetentionVolumeResponseOutput {
	return o
}

func (o RetentionVolumeResponseOutput) ToRetentionVolumeResponseOutputWithContext(ctx context.Context) RetentionVolumeResponseOutput {
	return o
}

// The volume capacity.
func (o RetentionVolumeResponseOutput) CapacityInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RetentionVolumeResponse) *int { return v.CapacityInBytes }).(pulumi.IntPtrOutput)
}

// The free space available in this volume.
func (o RetentionVolumeResponseOutput) FreeSpaceInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RetentionVolumeResponse) *int { return v.FreeSpaceInBytes }).(pulumi.IntPtrOutput)
}

// The threshold percentage.
func (o RetentionVolumeResponseOutput) ThresholdPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RetentionVolumeResponse) *int { return v.ThresholdPercentage }).(pulumi.IntPtrOutput)
}

// The volume name.
func (o RetentionVolumeResponseOutput) VolumeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RetentionVolumeResponse) *string { return v.VolumeName }).(pulumi.StringPtrOutput)
}

type RetentionVolumeResponseArrayOutput struct{ *pulumi.OutputState }

func (RetentionVolumeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RetentionVolumeResponse)(nil)).Elem()
}

func (o RetentionVolumeResponseArrayOutput) ToRetentionVolumeResponseArrayOutput() RetentionVolumeResponseArrayOutput {
	return o
}

func (o RetentionVolumeResponseArrayOutput) ToRetentionVolumeResponseArrayOutputWithContext(ctx context.Context) RetentionVolumeResponseArrayOutput {
	return o
}

func (o RetentionVolumeResponseArrayOutput) Index(i pulumi.IntInput) RetentionVolumeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RetentionVolumeResponse {
		return vs[0].([]RetentionVolumeResponse)[vs[1].(int)]
	}).(RetentionVolumeResponseOutput)
}

// CS Accounts Details.
type RunAsAccountResponse struct {
	// The CS RunAs account Id.
	AccountId *string `pulumi:"accountId"`
	// The CS RunAs account name.
	AccountName *string `pulumi:"accountName"`
}

// CS Accounts Details.
type RunAsAccountResponseOutput struct{ *pulumi.OutputState }

func (RunAsAccountResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RunAsAccountResponse)(nil)).Elem()
}

func (o RunAsAccountResponseOutput) ToRunAsAccountResponseOutput() RunAsAccountResponseOutput {
	return o
}

func (o RunAsAccountResponseOutput) ToRunAsAccountResponseOutputWithContext(ctx context.Context) RunAsAccountResponseOutput {
	return o
}

// The CS RunAs account Id.
func (o RunAsAccountResponseOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RunAsAccountResponse) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// The CS RunAs account name.
func (o RunAsAccountResponseOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RunAsAccountResponse) *string { return v.AccountName }).(pulumi.StringPtrOutput)
}

type RunAsAccountResponseArrayOutput struct{ *pulumi.OutputState }

func (RunAsAccountResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RunAsAccountResponse)(nil)).Elem()
}

func (o RunAsAccountResponseArrayOutput) ToRunAsAccountResponseArrayOutput() RunAsAccountResponseArrayOutput {
	return o
}

func (o RunAsAccountResponseArrayOutput) ToRunAsAccountResponseArrayOutputWithContext(ctx context.Context) RunAsAccountResponseArrayOutput {
	return o
}

func (o RunAsAccountResponseArrayOutput) Index(i pulumi.IntInput) RunAsAccountResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RunAsAccountResponse {
		return vs[0].([]RunAsAccountResponse)[vs[1].(int)]
	}).(RunAsAccountResponseOutput)
}

// San enable protection provider specific input.
type SanEnableProtectionInput struct {
	// The class type.
	InstanceType *string `pulumi:"instanceType"`
}

// SanEnableProtectionInputInput is an input type that accepts SanEnableProtectionInputArgs and SanEnableProtectionInputOutput values.
// You can construct a concrete instance of `SanEnableProtectionInputInput` via:
//
//          SanEnableProtectionInputArgs{...}
type SanEnableProtectionInputInput interface {
	pulumi.Input

	ToSanEnableProtectionInputOutput() SanEnableProtectionInputOutput
	ToSanEnableProtectionInputOutputWithContext(context.Context) SanEnableProtectionInputOutput
}

// San enable protection provider specific input.
type SanEnableProtectionInputArgs struct {
	// The class type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
}

func (SanEnableProtectionInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SanEnableProtectionInput)(nil)).Elem()
}

func (i SanEnableProtectionInputArgs) ToSanEnableProtectionInputOutput() SanEnableProtectionInputOutput {
	return i.ToSanEnableProtectionInputOutputWithContext(context.Background())
}

func (i SanEnableProtectionInputArgs) ToSanEnableProtectionInputOutputWithContext(ctx context.Context) SanEnableProtectionInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SanEnableProtectionInputOutput)
}

// Simple policy retention.
type SimpleRetentionPolicy struct {
	// Retention duration of the protection policy.
	RetentionDuration *RetentionDuration `pulumi:"retentionDuration"`
	// This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
	RetentionPolicyType *string `pulumi:"retentionPolicyType"`
}

// SimpleRetentionPolicyInput is an input type that accepts SimpleRetentionPolicyArgs and SimpleRetentionPolicyOutput values.
// You can construct a concrete instance of `SimpleRetentionPolicyInput` via:
//
//          SimpleRetentionPolicyArgs{...}
type SimpleRetentionPolicyInput interface {
	pulumi.Input

	ToSimpleRetentionPolicyOutput() SimpleRetentionPolicyOutput
	ToSimpleRetentionPolicyOutputWithContext(context.Context) SimpleRetentionPolicyOutput
}

// Simple policy retention.
type SimpleRetentionPolicyArgs struct {
	// Retention duration of the protection policy.
	RetentionDuration RetentionDurationPtrInput `pulumi:"retentionDuration"`
	// This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
	RetentionPolicyType pulumi.StringPtrInput `pulumi:"retentionPolicyType"`
}

func (SimpleRetentionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SimpleRetentionPolicy)(nil)).Elem()
}

func (i SimpleRetentionPolicyArgs) ToSimpleRetentionPolicyOutput() SimpleRetentionPolicyOutput {
	return i.ToSimpleRetentionPolicyOutputWithContext(context.Background())
}

func (i SimpleRetentionPolicyArgs) ToSimpleRetentionPolicyOutputWithContext(ctx context.Context) SimpleRetentionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SimpleRetentionPolicyOutput)
}

// Simple policy retention.
type SimpleRetentionPolicyResponse struct {
	// Retention duration of the protection policy.
	RetentionDuration *RetentionDurationResponse `pulumi:"retentionDuration"`
	// This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
	RetentionPolicyType *string `pulumi:"retentionPolicyType"`
}

// Simple policy retention.
type SimpleRetentionPolicyResponseOutput struct{ *pulumi.OutputState }

func (SimpleRetentionPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SimpleRetentionPolicyResponse)(nil)).Elem()
}

func (o SimpleRetentionPolicyResponseOutput) ToSimpleRetentionPolicyResponseOutput() SimpleRetentionPolicyResponseOutput {
	return o
}

func (o SimpleRetentionPolicyResponseOutput) ToSimpleRetentionPolicyResponseOutputWithContext(ctx context.Context) SimpleRetentionPolicyResponseOutput {
	return o
}

// Retention duration of the protection policy.
func (o SimpleRetentionPolicyResponseOutput) RetentionDuration() RetentionDurationResponsePtrOutput {
	return o.ApplyT(func(v SimpleRetentionPolicyResponse) *RetentionDurationResponse { return v.RetentionDuration }).(RetentionDurationResponsePtrOutput)
}

// This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
func (o SimpleRetentionPolicyResponseOutput) RetentionPolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SimpleRetentionPolicyResponse) *string { return v.RetentionPolicyType }).(pulumi.StringPtrOutput)
}

// Simple policy schedule.
type SimpleSchedulePolicy struct {
	// This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
	SchedulePolicyType *string `pulumi:"schedulePolicyType"`
	// This list is the days of the week when the schedule runs.
	ScheduleRunDays []string `pulumi:"scheduleRunDays"`
	// Defines the frequency interval (daily or weekly) for the schedule policy.
	ScheduleRunFrequency *string `pulumi:"scheduleRunFrequency"`
	// List of times, during a day, when the schedule runs.
	ScheduleRunTimes []string `pulumi:"scheduleRunTimes"`
	// The number of times per week the schedule runs.
	ScheduleWeeklyFrequency *int `pulumi:"scheduleWeeklyFrequency"`
}

// SimpleSchedulePolicyInput is an input type that accepts SimpleSchedulePolicyArgs and SimpleSchedulePolicyOutput values.
// You can construct a concrete instance of `SimpleSchedulePolicyInput` via:
//
//          SimpleSchedulePolicyArgs{...}
type SimpleSchedulePolicyInput interface {
	pulumi.Input

	ToSimpleSchedulePolicyOutput() SimpleSchedulePolicyOutput
	ToSimpleSchedulePolicyOutputWithContext(context.Context) SimpleSchedulePolicyOutput
}

// Simple policy schedule.
type SimpleSchedulePolicyArgs struct {
	// This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
	SchedulePolicyType pulumi.StringPtrInput `pulumi:"schedulePolicyType"`
	// This list is the days of the week when the schedule runs.
	ScheduleRunDays pulumi.StringArrayInput `pulumi:"scheduleRunDays"`
	// Defines the frequency interval (daily or weekly) for the schedule policy.
	ScheduleRunFrequency pulumi.StringPtrInput `pulumi:"scheduleRunFrequency"`
	// List of times, during a day, when the schedule runs.
	ScheduleRunTimes pulumi.StringArrayInput `pulumi:"scheduleRunTimes"`
	// The number of times per week the schedule runs.
	ScheduleWeeklyFrequency pulumi.IntPtrInput `pulumi:"scheduleWeeklyFrequency"`
}

func (SimpleSchedulePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SimpleSchedulePolicy)(nil)).Elem()
}

func (i SimpleSchedulePolicyArgs) ToSimpleSchedulePolicyOutput() SimpleSchedulePolicyOutput {
	return i.ToSimpleSchedulePolicyOutputWithContext(context.Background())
}

func (i SimpleSchedulePolicyArgs) ToSimpleSchedulePolicyOutputWithContext(ctx context.Context) SimpleSchedulePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SimpleSchedulePolicyOutput)
}

// Simple policy schedule.
type SimpleSchedulePolicyResponse struct {
	// This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
	SchedulePolicyType *string `pulumi:"schedulePolicyType"`
	// This list is the days of the week when the schedule runs.
	ScheduleRunDays []string `pulumi:"scheduleRunDays"`
	// Defines the frequency interval (daily or weekly) for the schedule policy.
	ScheduleRunFrequency *string `pulumi:"scheduleRunFrequency"`
	// List of times, during a day, when the schedule runs.
	ScheduleRunTimes []string `pulumi:"scheduleRunTimes"`
	// The number of times per week the schedule runs.
	ScheduleWeeklyFrequency *int `pulumi:"scheduleWeeklyFrequency"`
}

// Simple policy schedule.
type SimpleSchedulePolicyResponseOutput struct{ *pulumi.OutputState }

func (SimpleSchedulePolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SimpleSchedulePolicyResponse)(nil)).Elem()
}

func (o SimpleSchedulePolicyResponseOutput) ToSimpleSchedulePolicyResponseOutput() SimpleSchedulePolicyResponseOutput {
	return o
}

func (o SimpleSchedulePolicyResponseOutput) ToSimpleSchedulePolicyResponseOutputWithContext(ctx context.Context) SimpleSchedulePolicyResponseOutput {
	return o
}

// This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
func (o SimpleSchedulePolicyResponseOutput) SchedulePolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SimpleSchedulePolicyResponse) *string { return v.SchedulePolicyType }).(pulumi.StringPtrOutput)
}

// This list is the days of the week when the schedule runs.
func (o SimpleSchedulePolicyResponseOutput) ScheduleRunDays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SimpleSchedulePolicyResponse) []string { return v.ScheduleRunDays }).(pulumi.StringArrayOutput)
}

// Defines the frequency interval (daily or weekly) for the schedule policy.
func (o SimpleSchedulePolicyResponseOutput) ScheduleRunFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SimpleSchedulePolicyResponse) *string { return v.ScheduleRunFrequency }).(pulumi.StringPtrOutput)
}

// List of times, during a day, when the schedule runs.
func (o SimpleSchedulePolicyResponseOutput) ScheduleRunTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SimpleSchedulePolicyResponse) []string { return v.ScheduleRunTimes }).(pulumi.StringArrayOutput)
}

// The number of times per week the schedule runs.
func (o SimpleSchedulePolicyResponseOutput) ScheduleWeeklyFrequency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SimpleSchedulePolicyResponse) *int { return v.ScheduleWeeklyFrequency }).(pulumi.IntPtrOutput)
}

// Identifies the unique system identifier for each Azure resource.
type Sku struct {
	// The Sku name.
	Name string `pulumi:"name"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//          SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// Identifies the unique system identifier for each Azure resource.
type SkuArgs struct {
	// The Sku name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//          SkuArgs{...}
//
//  or:
//
//          nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// Identifies the unique system identifier for each Azure resource.
type SkuResponse struct {
	// The Sku name.
	Name string `pulumi:"name"`
}

// Identifies the unique system identifier for each Azure resource.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (o SkuResponseOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o.ApplyT(func(v SkuResponse) *SkuResponse {
		return &v
	}).(SkuResponsePtrOutput)
}

// The Sku name.
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse { return *v }).(SkuResponseOutput)
}

// The Sku name.
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Storage mapping properties.
type StorageClassificationMappingPropertiesResponse struct {
	// Target storage object Id.
	TargetStorageClassificationId *string `pulumi:"targetStorageClassificationId"`
}

// Storage mapping properties.
type StorageClassificationMappingPropertiesResponseOutput struct{ *pulumi.OutputState }

func (StorageClassificationMappingPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClassificationMappingPropertiesResponse)(nil)).Elem()
}

func (o StorageClassificationMappingPropertiesResponseOutput) ToStorageClassificationMappingPropertiesResponseOutput() StorageClassificationMappingPropertiesResponseOutput {
	return o
}

func (o StorageClassificationMappingPropertiesResponseOutput) ToStorageClassificationMappingPropertiesResponseOutputWithContext(ctx context.Context) StorageClassificationMappingPropertiesResponseOutput {
	return o
}

func (o StorageClassificationMappingPropertiesResponseOutput) ToStorageClassificationMappingPropertiesResponsePtrOutput() StorageClassificationMappingPropertiesResponsePtrOutput {
	return o.ToStorageClassificationMappingPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o StorageClassificationMappingPropertiesResponseOutput) ToStorageClassificationMappingPropertiesResponsePtrOutputWithContext(ctx context.Context) StorageClassificationMappingPropertiesResponsePtrOutput {
	return o.ApplyT(func(v StorageClassificationMappingPropertiesResponse) *StorageClassificationMappingPropertiesResponse {
		return &v
	}).(StorageClassificationMappingPropertiesResponsePtrOutput)
}

// Target storage object Id.
func (o StorageClassificationMappingPropertiesResponseOutput) TargetStorageClassificationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClassificationMappingPropertiesResponse) *string { return v.TargetStorageClassificationId }).(pulumi.StringPtrOutput)
}

type StorageClassificationMappingPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (StorageClassificationMappingPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClassificationMappingPropertiesResponse)(nil)).Elem()
}

func (o StorageClassificationMappingPropertiesResponsePtrOutput) ToStorageClassificationMappingPropertiesResponsePtrOutput() StorageClassificationMappingPropertiesResponsePtrOutput {
	return o
}

func (o StorageClassificationMappingPropertiesResponsePtrOutput) ToStorageClassificationMappingPropertiesResponsePtrOutputWithContext(ctx context.Context) StorageClassificationMappingPropertiesResponsePtrOutput {
	return o
}

func (o StorageClassificationMappingPropertiesResponsePtrOutput) Elem() StorageClassificationMappingPropertiesResponseOutput {
	return o.ApplyT(func(v *StorageClassificationMappingPropertiesResponse) StorageClassificationMappingPropertiesResponse {
		return *v
	}).(StorageClassificationMappingPropertiesResponseOutput)
}

// Target storage object Id.
func (o StorageClassificationMappingPropertiesResponsePtrOutput) TargetStorageClassificationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClassificationMappingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetStorageClassificationId
	}).(pulumi.StringPtrOutput)
}

// Storage mapping input properties.
type StorageMappingInputProperties struct {
	// The ID of the storage object.
	TargetStorageClassificationId *string `pulumi:"targetStorageClassificationId"`
}

// StorageMappingInputPropertiesInput is an input type that accepts StorageMappingInputPropertiesArgs and StorageMappingInputPropertiesOutput values.
// You can construct a concrete instance of `StorageMappingInputPropertiesInput` via:
//
//          StorageMappingInputPropertiesArgs{...}
type StorageMappingInputPropertiesInput interface {
	pulumi.Input

	ToStorageMappingInputPropertiesOutput() StorageMappingInputPropertiesOutput
	ToStorageMappingInputPropertiesOutputWithContext(context.Context) StorageMappingInputPropertiesOutput
}

// Storage mapping input properties.
type StorageMappingInputPropertiesArgs struct {
	// The ID of the storage object.
	TargetStorageClassificationId pulumi.StringPtrInput `pulumi:"targetStorageClassificationId"`
}

func (StorageMappingInputPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageMappingInputProperties)(nil)).Elem()
}

func (i StorageMappingInputPropertiesArgs) ToStorageMappingInputPropertiesOutput() StorageMappingInputPropertiesOutput {
	return i.ToStorageMappingInputPropertiesOutputWithContext(context.Background())
}

func (i StorageMappingInputPropertiesArgs) ToStorageMappingInputPropertiesOutputWithContext(ctx context.Context) StorageMappingInputPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageMappingInputPropertiesOutput)
}

func (i StorageMappingInputPropertiesArgs) ToStorageMappingInputPropertiesPtrOutput() StorageMappingInputPropertiesPtrOutput {
	return i.ToStorageMappingInputPropertiesPtrOutputWithContext(context.Background())
}

func (i StorageMappingInputPropertiesArgs) ToStorageMappingInputPropertiesPtrOutputWithContext(ctx context.Context) StorageMappingInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageMappingInputPropertiesOutput).ToStorageMappingInputPropertiesPtrOutputWithContext(ctx)
}

// StorageMappingInputPropertiesPtrInput is an input type that accepts StorageMappingInputPropertiesArgs, StorageMappingInputPropertiesPtr and StorageMappingInputPropertiesPtrOutput values.
// You can construct a concrete instance of `StorageMappingInputPropertiesPtrInput` via:
//
//          StorageMappingInputPropertiesArgs{...}
//
//  or:
//
//          nil
type StorageMappingInputPropertiesPtrInput interface {
	pulumi.Input

	ToStorageMappingInputPropertiesPtrOutput() StorageMappingInputPropertiesPtrOutput
	ToStorageMappingInputPropertiesPtrOutputWithContext(context.Context) StorageMappingInputPropertiesPtrOutput
}

type storageMappingInputPropertiesPtrType StorageMappingInputPropertiesArgs

func StorageMappingInputPropertiesPtr(v *StorageMappingInputPropertiesArgs) StorageMappingInputPropertiesPtrInput {
	return (*storageMappingInputPropertiesPtrType)(v)
}

func (*storageMappingInputPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageMappingInputProperties)(nil)).Elem()
}

func (i *storageMappingInputPropertiesPtrType) ToStorageMappingInputPropertiesPtrOutput() StorageMappingInputPropertiesPtrOutput {
	return i.ToStorageMappingInputPropertiesPtrOutputWithContext(context.Background())
}

func (i *storageMappingInputPropertiesPtrType) ToStorageMappingInputPropertiesPtrOutputWithContext(ctx context.Context) StorageMappingInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageMappingInputPropertiesPtrOutput)
}

// Details for upgrading vault.
type UpgradeDetailsResponse struct {
	// UTC time at which the upgrade operation has ended.
	EndTimeUtc string `pulumi:"endTimeUtc"`
	// UTC time at which the upgrade operation status was last updated.
	LastUpdatedTimeUtc string `pulumi:"lastUpdatedTimeUtc"`
	// Message to the user containing information about the upgrade operation.
	Message string `pulumi:"message"`
	// ID of the vault upgrade operation.
	OperationId string `pulumi:"operationId"`
	// Resource ID of the vault before the upgrade.
	PreviousResourceId string `pulumi:"previousResourceId"`
	// UTC time at which the upgrade operation has started.
	StartTimeUtc string `pulumi:"startTimeUtc"`
	// Status of the vault upgrade operation.
	Status string `pulumi:"status"`
	// The way the vault upgrade was triggered.
	TriggerType string `pulumi:"triggerType"`
	// Resource ID of the upgraded vault.
	UpgradedResourceId string `pulumi:"upgradedResourceId"`
}

// Details for upgrading vault.
type UpgradeDetailsResponseOutput struct{ *pulumi.OutputState }

func (UpgradeDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpgradeDetailsResponse)(nil)).Elem()
}

func (o UpgradeDetailsResponseOutput) ToUpgradeDetailsResponseOutput() UpgradeDetailsResponseOutput {
	return o
}

func (o UpgradeDetailsResponseOutput) ToUpgradeDetailsResponseOutputWithContext(ctx context.Context) UpgradeDetailsResponseOutput {
	return o
}

func (o UpgradeDetailsResponseOutput) ToUpgradeDetailsResponsePtrOutput() UpgradeDetailsResponsePtrOutput {
	return o.ToUpgradeDetailsResponsePtrOutputWithContext(context.Background())
}

func (o UpgradeDetailsResponseOutput) ToUpgradeDetailsResponsePtrOutputWithContext(ctx context.Context) UpgradeDetailsResponsePtrOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) *UpgradeDetailsResponse {
		return &v
	}).(UpgradeDetailsResponsePtrOutput)
}

// UTC time at which the upgrade operation has ended.
func (o UpgradeDetailsResponseOutput) EndTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) string { return v.EndTimeUtc }).(pulumi.StringOutput)
}

// UTC time at which the upgrade operation status was last updated.
func (o UpgradeDetailsResponseOutput) LastUpdatedTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) string { return v.LastUpdatedTimeUtc }).(pulumi.StringOutput)
}

// Message to the user containing information about the upgrade operation.
func (o UpgradeDetailsResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) string { return v.Message }).(pulumi.StringOutput)
}

// ID of the vault upgrade operation.
func (o UpgradeDetailsResponseOutput) OperationId() pulumi.StringOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) string { return v.OperationId }).(pulumi.StringOutput)
}

// Resource ID of the vault before the upgrade.
func (o UpgradeDetailsResponseOutput) PreviousResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) string { return v.PreviousResourceId }).(pulumi.StringOutput)
}

// UTC time at which the upgrade operation has started.
func (o UpgradeDetailsResponseOutput) StartTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) string { return v.StartTimeUtc }).(pulumi.StringOutput)
}

// Status of the vault upgrade operation.
func (o UpgradeDetailsResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) string { return v.Status }).(pulumi.StringOutput)
}

// The way the vault upgrade was triggered.
func (o UpgradeDetailsResponseOutput) TriggerType() pulumi.StringOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) string { return v.TriggerType }).(pulumi.StringOutput)
}

// Resource ID of the upgraded vault.
func (o UpgradeDetailsResponseOutput) UpgradedResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) string { return v.UpgradedResourceId }).(pulumi.StringOutput)
}

type UpgradeDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (UpgradeDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UpgradeDetailsResponse)(nil)).Elem()
}

func (o UpgradeDetailsResponsePtrOutput) ToUpgradeDetailsResponsePtrOutput() UpgradeDetailsResponsePtrOutput {
	return o
}

func (o UpgradeDetailsResponsePtrOutput) ToUpgradeDetailsResponsePtrOutputWithContext(ctx context.Context) UpgradeDetailsResponsePtrOutput {
	return o
}

func (o UpgradeDetailsResponsePtrOutput) Elem() UpgradeDetailsResponseOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) UpgradeDetailsResponse { return *v }).(UpgradeDetailsResponseOutput)
}

// UTC time at which the upgrade operation has ended.
func (o UpgradeDetailsResponsePtrOutput) EndTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.EndTimeUtc
	}).(pulumi.StringPtrOutput)
}

// UTC time at which the upgrade operation status was last updated.
func (o UpgradeDetailsResponsePtrOutput) LastUpdatedTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastUpdatedTimeUtc
	}).(pulumi.StringPtrOutput)
}

// Message to the user containing information about the upgrade operation.
func (o UpgradeDetailsResponsePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Message
	}).(pulumi.StringPtrOutput)
}

// ID of the vault upgrade operation.
func (o UpgradeDetailsResponsePtrOutput) OperationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.OperationId
	}).(pulumi.StringPtrOutput)
}

// Resource ID of the vault before the upgrade.
func (o UpgradeDetailsResponsePtrOutput) PreviousResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PreviousResourceId
	}).(pulumi.StringPtrOutput)
}

// UTC time at which the upgrade operation has started.
func (o UpgradeDetailsResponsePtrOutput) StartTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StartTimeUtc
	}).(pulumi.StringPtrOutput)
}

// Status of the vault upgrade operation.
func (o UpgradeDetailsResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// The way the vault upgrade was triggered.
func (o UpgradeDetailsResponsePtrOutput) TriggerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TriggerType
	}).(pulumi.StringPtrOutput)
}

// Resource ID of the upgraded vault.
func (o UpgradeDetailsResponsePtrOutput) UpgradedResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UpgradedResourceId
	}).(pulumi.StringPtrOutput)
}

// vCenter properties.
type VCenterPropertiesResponse struct {
	// The VCenter discovery status.
	DiscoveryStatus *string `pulumi:"discoveryStatus"`
	// The ARM resource name of the fabric containing this VCenter.
	FabricArmResourceName *string `pulumi:"fabricArmResourceName"`
	// Friendly name of the vCenter.
	FriendlyName *string `pulumi:"friendlyName"`
	// The health errors for this VCenter.
	HealthErrors []HealthErrorResponse `pulumi:"healthErrors"`
	// The infrastructure Id of vCenter.
	InfrastructureId *string `pulumi:"infrastructureId"`
	// VCenter internal ID.
	InternalId *string `pulumi:"internalId"`
	// The IP address of the vCenter.
	IpAddress *string `pulumi:"ipAddress"`
	// The time when the last heartbeat was received by vCenter.
	LastHeartbeat *string `pulumi:"lastHeartbeat"`
	// The port number for discovery.
	Port *string `pulumi:"port"`
	// The process server Id.
	ProcessServerId *string `pulumi:"processServerId"`
	// The account Id which has privileges to discover the vCenter.
	RunAsAccountId *string `pulumi:"runAsAccountId"`
}

// vCenter properties.
type VCenterPropertiesResponseOutput struct{ *pulumi.OutputState }

func (VCenterPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VCenterPropertiesResponse)(nil)).Elem()
}

func (o VCenterPropertiesResponseOutput) ToVCenterPropertiesResponseOutput() VCenterPropertiesResponseOutput {
	return o
}

func (o VCenterPropertiesResponseOutput) ToVCenterPropertiesResponseOutputWithContext(ctx context.Context) VCenterPropertiesResponseOutput {
	return o
}

func (o VCenterPropertiesResponseOutput) ToVCenterPropertiesResponsePtrOutput() VCenterPropertiesResponsePtrOutput {
	return o.ToVCenterPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o VCenterPropertiesResponseOutput) ToVCenterPropertiesResponsePtrOutputWithContext(ctx context.Context) VCenterPropertiesResponsePtrOutput {
	return o.ApplyT(func(v VCenterPropertiesResponse) *VCenterPropertiesResponse {
		return &v
	}).(VCenterPropertiesResponsePtrOutput)
}

// The VCenter discovery status.
func (o VCenterPropertiesResponseOutput) DiscoveryStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VCenterPropertiesResponse) *string { return v.DiscoveryStatus }).(pulumi.StringPtrOutput)
}

// The ARM resource name of the fabric containing this VCenter.
func (o VCenterPropertiesResponseOutput) FabricArmResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VCenterPropertiesResponse) *string { return v.FabricArmResourceName }).(pulumi.StringPtrOutput)
}

// Friendly name of the vCenter.
func (o VCenterPropertiesResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VCenterPropertiesResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// The health errors for this VCenter.
func (o VCenterPropertiesResponseOutput) HealthErrors() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v VCenterPropertiesResponse) []HealthErrorResponse { return v.HealthErrors }).(HealthErrorResponseArrayOutput)
}

// The infrastructure Id of vCenter.
func (o VCenterPropertiesResponseOutput) InfrastructureId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VCenterPropertiesResponse) *string { return v.InfrastructureId }).(pulumi.StringPtrOutput)
}

// VCenter internal ID.
func (o VCenterPropertiesResponseOutput) InternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VCenterPropertiesResponse) *string { return v.InternalId }).(pulumi.StringPtrOutput)
}

// The IP address of the vCenter.
func (o VCenterPropertiesResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VCenterPropertiesResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The time when the last heartbeat was received by vCenter.
func (o VCenterPropertiesResponseOutput) LastHeartbeat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VCenterPropertiesResponse) *string { return v.LastHeartbeat }).(pulumi.StringPtrOutput)
}

// The port number for discovery.
func (o VCenterPropertiesResponseOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VCenterPropertiesResponse) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// The process server Id.
func (o VCenterPropertiesResponseOutput) ProcessServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VCenterPropertiesResponse) *string { return v.ProcessServerId }).(pulumi.StringPtrOutput)
}

// The account Id which has privileges to discover the vCenter.
func (o VCenterPropertiesResponseOutput) RunAsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VCenterPropertiesResponse) *string { return v.RunAsAccountId }).(pulumi.StringPtrOutput)
}

type VCenterPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (VCenterPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VCenterPropertiesResponse)(nil)).Elem()
}

func (o VCenterPropertiesResponsePtrOutput) ToVCenterPropertiesResponsePtrOutput() VCenterPropertiesResponsePtrOutput {
	return o
}

func (o VCenterPropertiesResponsePtrOutput) ToVCenterPropertiesResponsePtrOutputWithContext(ctx context.Context) VCenterPropertiesResponsePtrOutput {
	return o
}

func (o VCenterPropertiesResponsePtrOutput) Elem() VCenterPropertiesResponseOutput {
	return o.ApplyT(func(v *VCenterPropertiesResponse) VCenterPropertiesResponse { return *v }).(VCenterPropertiesResponseOutput)
}

// The VCenter discovery status.
func (o VCenterPropertiesResponsePtrOutput) DiscoveryStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VCenterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DiscoveryStatus
	}).(pulumi.StringPtrOutput)
}

// The ARM resource name of the fabric containing this VCenter.
func (o VCenterPropertiesResponsePtrOutput) FabricArmResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VCenterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.FabricArmResourceName
	}).(pulumi.StringPtrOutput)
}

// Friendly name of the vCenter.
func (o VCenterPropertiesResponsePtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VCenterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// The health errors for this VCenter.
func (o VCenterPropertiesResponsePtrOutput) HealthErrors() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v *VCenterPropertiesResponse) []HealthErrorResponse {
		if v == nil {
			return nil
		}
		return v.HealthErrors
	}).(HealthErrorResponseArrayOutput)
}

// The infrastructure Id of vCenter.
func (o VCenterPropertiesResponsePtrOutput) InfrastructureId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VCenterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.InfrastructureId
	}).(pulumi.StringPtrOutput)
}

// VCenter internal ID.
func (o VCenterPropertiesResponsePtrOutput) InternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VCenterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.InternalId
	}).(pulumi.StringPtrOutput)
}

// The IP address of the vCenter.
func (o VCenterPropertiesResponsePtrOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VCenterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.IpAddress
	}).(pulumi.StringPtrOutput)
}

// The time when the last heartbeat was received by vCenter.
func (o VCenterPropertiesResponsePtrOutput) LastHeartbeat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VCenterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastHeartbeat
	}).(pulumi.StringPtrOutput)
}

// The port number for discovery.
func (o VCenterPropertiesResponsePtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VCenterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

// The process server Id.
func (o VCenterPropertiesResponsePtrOutput) ProcessServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VCenterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProcessServerId
	}).(pulumi.StringPtrOutput)
}

// The account Id which has privileges to discover the vCenter.
func (o VCenterPropertiesResponsePtrOutput) RunAsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VCenterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.RunAsAccountId
	}).(pulumi.StringPtrOutput)
}

// Hyper V VM network details.
type VMNicDetailsResponse struct {
	// A value indicating whether the NIC has accelerated networking enabled.
	EnableAcceleratedNetworkingOnRecovery *bool `pulumi:"enableAcceleratedNetworkingOnRecovery"`
	// Whether the test failover NIC has accelerated networking enabled.
	EnableAcceleratedNetworkingOnTfo *bool `pulumi:"enableAcceleratedNetworkingOnTfo"`
	// Ip address type.
	IpAddressType *string `pulumi:"ipAddressType"`
	// The nic Id.
	NicId *string `pulumi:"nicId"`
	// Primary nic static IP address.
	PrimaryNicStaticIPAddress *string `pulumi:"primaryNicStaticIPAddress"`
	// The target backend address pools for the NIC.
	RecoveryLBBackendAddressPoolIds []string `pulumi:"recoveryLBBackendAddressPoolIds"`
	// The id of the NSG associated with the NIC.
	RecoveryNetworkSecurityGroupId *string `pulumi:"recoveryNetworkSecurityGroupId"`
	// IP allocation type for recovery VM.
	RecoveryNicIpAddressType *string `pulumi:"recoveryNicIpAddressType"`
	// The name of the NIC to be used when creating target NICs.
	RecoveryNicName *string `pulumi:"recoveryNicName"`
	// The resource group of the NIC to be used when creating target NICs.
	RecoveryNicResourceGroupName *string `pulumi:"recoveryNicResourceGroupName"`
	// The id of the public IP address resource associated with the NIC.
	RecoveryPublicIpAddressId *string `pulumi:"recoveryPublicIpAddressId"`
	// Recovery VM network Id.
	RecoveryVMNetworkId *string `pulumi:"recoveryVMNetworkId"`
	// Recovery VM subnet name.
	RecoveryVMSubnetName *string `pulumi:"recoveryVMSubnetName"`
	// The replica nic Id.
	ReplicaNicId *string `pulumi:"replicaNicId"`
	// Replica nic static IP address.
	ReplicaNicStaticIPAddress *string `pulumi:"replicaNicStaticIPAddress"`
	// A value indicating whether an existing NIC is allowed to be reused during failover subject to availability.
	ReuseExistingNic *bool `pulumi:"reuseExistingNic"`
	// Selection type for failover.
	SelectionType *string `pulumi:"selectionType"`
	// The source nic ARM Id.
	SourceNicArmId *string `pulumi:"sourceNicArmId"`
	// The IP configurations to be used by NIC during test failover.
	TfoIPConfigs []IPConfigResponse `pulumi:"tfoIPConfigs"`
	// The NSG to be used by NIC during test failover.
	TfoNetworkSecurityGroupId *string `pulumi:"tfoNetworkSecurityGroupId"`
	// The name of the NIC to be used when creating target NICs in TFO.
	TfoRecoveryNicName *string `pulumi:"tfoRecoveryNicName"`
	// The resource group of the NIC to be used when creating target NICs in TFO.
	TfoRecoveryNicResourceGroupName *string `pulumi:"tfoRecoveryNicResourceGroupName"`
	// A value indicating whether an existing NIC is allowed to be reused during test failover subject to availability.
	TfoReuseExistingNic *bool `pulumi:"tfoReuseExistingNic"`
	// The network to be used by NIC during test failover.
	TfoVMNetworkId *string `pulumi:"tfoVMNetworkId"`
	// The subnet to be used by NIC during test failover.
	TfoVMSubnetName *string `pulumi:"tfoVMSubnetName"`
	// VM network name.
	VMNetworkName *string `pulumi:"vMNetworkName"`
	// VM subnet name.
	VMSubnetName *string `pulumi:"vMSubnetName"`
}

// Hyper V VM network details.
type VMNicDetailsResponseOutput struct{ *pulumi.OutputState }

func (VMNicDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMNicDetailsResponse)(nil)).Elem()
}

func (o VMNicDetailsResponseOutput) ToVMNicDetailsResponseOutput() VMNicDetailsResponseOutput {
	return o
}

func (o VMNicDetailsResponseOutput) ToVMNicDetailsResponseOutputWithContext(ctx context.Context) VMNicDetailsResponseOutput {
	return o
}

// A value indicating whether the NIC has accelerated networking enabled.
func (o VMNicDetailsResponseOutput) EnableAcceleratedNetworkingOnRecovery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *bool { return v.EnableAcceleratedNetworkingOnRecovery }).(pulumi.BoolPtrOutput)
}

// Whether the test failover NIC has accelerated networking enabled.
func (o VMNicDetailsResponseOutput) EnableAcceleratedNetworkingOnTfo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *bool { return v.EnableAcceleratedNetworkingOnTfo }).(pulumi.BoolPtrOutput)
}

// Ip address type.
func (o VMNicDetailsResponseOutput) IpAddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.IpAddressType }).(pulumi.StringPtrOutput)
}

// The nic Id.
func (o VMNicDetailsResponseOutput) NicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.NicId }).(pulumi.StringPtrOutput)
}

// Primary nic static IP address.
func (o VMNicDetailsResponseOutput) PrimaryNicStaticIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.PrimaryNicStaticIPAddress }).(pulumi.StringPtrOutput)
}

// The target backend address pools for the NIC.
func (o VMNicDetailsResponseOutput) RecoveryLBBackendAddressPoolIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) []string { return v.RecoveryLBBackendAddressPoolIds }).(pulumi.StringArrayOutput)
}

// The id of the NSG associated with the NIC.
func (o VMNicDetailsResponseOutput) RecoveryNetworkSecurityGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.RecoveryNetworkSecurityGroupId }).(pulumi.StringPtrOutput)
}

// IP allocation type for recovery VM.
func (o VMNicDetailsResponseOutput) RecoveryNicIpAddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.RecoveryNicIpAddressType }).(pulumi.StringPtrOutput)
}

// The name of the NIC to be used when creating target NICs.
func (o VMNicDetailsResponseOutput) RecoveryNicName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.RecoveryNicName }).(pulumi.StringPtrOutput)
}

// The resource group of the NIC to be used when creating target NICs.
func (o VMNicDetailsResponseOutput) RecoveryNicResourceGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.RecoveryNicResourceGroupName }).(pulumi.StringPtrOutput)
}

// The id of the public IP address resource associated with the NIC.
func (o VMNicDetailsResponseOutput) RecoveryPublicIpAddressId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.RecoveryPublicIpAddressId }).(pulumi.StringPtrOutput)
}

// Recovery VM network Id.
func (o VMNicDetailsResponseOutput) RecoveryVMNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.RecoveryVMNetworkId }).(pulumi.StringPtrOutput)
}

// Recovery VM subnet name.
func (o VMNicDetailsResponseOutput) RecoveryVMSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.RecoveryVMSubnetName }).(pulumi.StringPtrOutput)
}

// The replica nic Id.
func (o VMNicDetailsResponseOutput) ReplicaNicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.ReplicaNicId }).(pulumi.StringPtrOutput)
}

// Replica nic static IP address.
func (o VMNicDetailsResponseOutput) ReplicaNicStaticIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.ReplicaNicStaticIPAddress }).(pulumi.StringPtrOutput)
}

// A value indicating whether an existing NIC is allowed to be reused during failover subject to availability.
func (o VMNicDetailsResponseOutput) ReuseExistingNic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *bool { return v.ReuseExistingNic }).(pulumi.BoolPtrOutput)
}

// Selection type for failover.
func (o VMNicDetailsResponseOutput) SelectionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.SelectionType }).(pulumi.StringPtrOutput)
}

// The source nic ARM Id.
func (o VMNicDetailsResponseOutput) SourceNicArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.SourceNicArmId }).(pulumi.StringPtrOutput)
}

// The IP configurations to be used by NIC during test failover.
func (o VMNicDetailsResponseOutput) TfoIPConfigs() IPConfigResponseArrayOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) []IPConfigResponse { return v.TfoIPConfigs }).(IPConfigResponseArrayOutput)
}

// The NSG to be used by NIC during test failover.
func (o VMNicDetailsResponseOutput) TfoNetworkSecurityGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.TfoNetworkSecurityGroupId }).(pulumi.StringPtrOutput)
}

// The name of the NIC to be used when creating target NICs in TFO.
func (o VMNicDetailsResponseOutput) TfoRecoveryNicName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.TfoRecoveryNicName }).(pulumi.StringPtrOutput)
}

// The resource group of the NIC to be used when creating target NICs in TFO.
func (o VMNicDetailsResponseOutput) TfoRecoveryNicResourceGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.TfoRecoveryNicResourceGroupName }).(pulumi.StringPtrOutput)
}

// A value indicating whether an existing NIC is allowed to be reused during test failover subject to availability.
func (o VMNicDetailsResponseOutput) TfoReuseExistingNic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *bool { return v.TfoReuseExistingNic }).(pulumi.BoolPtrOutput)
}

// The network to be used by NIC during test failover.
func (o VMNicDetailsResponseOutput) TfoVMNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.TfoVMNetworkId }).(pulumi.StringPtrOutput)
}

// The subnet to be used by NIC during test failover.
func (o VMNicDetailsResponseOutput) TfoVMSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.TfoVMSubnetName }).(pulumi.StringPtrOutput)
}

// VM network name.
func (o VMNicDetailsResponseOutput) VMNetworkName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.VMNetworkName }).(pulumi.StringPtrOutput)
}

// VM subnet name.
func (o VMNicDetailsResponseOutput) VMSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.VMSubnetName }).(pulumi.StringPtrOutput)
}

type VMNicDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (VMNicDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMNicDetailsResponse)(nil)).Elem()
}

func (o VMNicDetailsResponseArrayOutput) ToVMNicDetailsResponseArrayOutput() VMNicDetailsResponseArrayOutput {
	return o
}

func (o VMNicDetailsResponseArrayOutput) ToVMNicDetailsResponseArrayOutputWithContext(ctx context.Context) VMNicDetailsResponseArrayOutput {
	return o
}

func (o VMNicDetailsResponseArrayOutput) Index(i pulumi.IntInput) VMNicDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VMNicDetailsResponse {
		return vs[0].([]VMNicDetailsResponse)[vs[1].(int)]
	}).(VMNicDetailsResponseOutput)
}

// VMwareCbt container mapping input.
type VMwareCbtContainerMappingInput struct {
	// The class type.
	InstanceType *string `pulumi:"instanceType"`
	// The target key vault ARM Id.
	KeyVaultId string `pulumi:"keyVaultId"`
	// The target key vault URL.
	KeyVaultUri string `pulumi:"keyVaultUri"`
	// The secret name of the service bus connection string.
	ServiceBusConnectionStringSecretName string `pulumi:"serviceBusConnectionStringSecretName"`
	// The storage account ARM Id.
	StorageAccountId string `pulumi:"storageAccountId"`
	// The secret name of the storage account.
	StorageAccountSasSecretName string `pulumi:"storageAccountSasSecretName"`
	// The target location.
	TargetLocation string `pulumi:"targetLocation"`
}

// VMwareCbtContainerMappingInputInput is an input type that accepts VMwareCbtContainerMappingInputArgs and VMwareCbtContainerMappingInputOutput values.
// You can construct a concrete instance of `VMwareCbtContainerMappingInputInput` via:
//
//          VMwareCbtContainerMappingInputArgs{...}
type VMwareCbtContainerMappingInputInput interface {
	pulumi.Input

	ToVMwareCbtContainerMappingInputOutput() VMwareCbtContainerMappingInputOutput
	ToVMwareCbtContainerMappingInputOutputWithContext(context.Context) VMwareCbtContainerMappingInputOutput
}

// VMwareCbt container mapping input.
type VMwareCbtContainerMappingInputArgs struct {
	// The class type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// The target key vault ARM Id.
	KeyVaultId pulumi.StringInput `pulumi:"keyVaultId"`
	// The target key vault URL.
	KeyVaultUri pulumi.StringInput `pulumi:"keyVaultUri"`
	// The secret name of the service bus connection string.
	ServiceBusConnectionStringSecretName pulumi.StringInput `pulumi:"serviceBusConnectionStringSecretName"`
	// The storage account ARM Id.
	StorageAccountId pulumi.StringInput `pulumi:"storageAccountId"`
	// The secret name of the storage account.
	StorageAccountSasSecretName pulumi.StringInput `pulumi:"storageAccountSasSecretName"`
	// The target location.
	TargetLocation pulumi.StringInput `pulumi:"targetLocation"`
}

func (VMwareCbtContainerMappingInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareCbtContainerMappingInput)(nil)).Elem()
}

func (i VMwareCbtContainerMappingInputArgs) ToVMwareCbtContainerMappingInputOutput() VMwareCbtContainerMappingInputOutput {
	return i.ToVMwareCbtContainerMappingInputOutputWithContext(context.Background())
}

func (i VMwareCbtContainerMappingInputArgs) ToVMwareCbtContainerMappingInputOutputWithContext(ctx context.Context) VMwareCbtContainerMappingInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareCbtContainerMappingInputOutput)
}

// VMwareCbt disk input.
type VMwareCbtDiskInput struct {
	// The disk Id.
	DiskId string `pulumi:"diskId"`
	// The disk type.
	DiskType *string `pulumi:"diskType"`
	// A value indicating whether the disk is the OS disk.
	IsOSDisk string `pulumi:"isOSDisk"`
	// The log storage account ARM Id.
	LogStorageAccountId string `pulumi:"logStorageAccountId"`
	// The key vault secret name of the log storage account.
	LogStorageAccountSasSecretName string `pulumi:"logStorageAccountSasSecretName"`
}

// VMwareCbtDiskInputInput is an input type that accepts VMwareCbtDiskInputArgs and VMwareCbtDiskInputOutput values.
// You can construct a concrete instance of `VMwareCbtDiskInputInput` via:
//
//          VMwareCbtDiskInputArgs{...}
type VMwareCbtDiskInputInput interface {
	pulumi.Input

	ToVMwareCbtDiskInputOutput() VMwareCbtDiskInputOutput
	ToVMwareCbtDiskInputOutputWithContext(context.Context) VMwareCbtDiskInputOutput
}

// VMwareCbt disk input.
type VMwareCbtDiskInputArgs struct {
	// The disk Id.
	DiskId pulumi.StringInput `pulumi:"diskId"`
	// The disk type.
	DiskType pulumi.StringPtrInput `pulumi:"diskType"`
	// A value indicating whether the disk is the OS disk.
	IsOSDisk pulumi.StringInput `pulumi:"isOSDisk"`
	// The log storage account ARM Id.
	LogStorageAccountId pulumi.StringInput `pulumi:"logStorageAccountId"`
	// The key vault secret name of the log storage account.
	LogStorageAccountSasSecretName pulumi.StringInput `pulumi:"logStorageAccountSasSecretName"`
}

func (VMwareCbtDiskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareCbtDiskInput)(nil)).Elem()
}

func (i VMwareCbtDiskInputArgs) ToVMwareCbtDiskInputOutput() VMwareCbtDiskInputOutput {
	return i.ToVMwareCbtDiskInputOutputWithContext(context.Background())
}

func (i VMwareCbtDiskInputArgs) ToVMwareCbtDiskInputOutputWithContext(ctx context.Context) VMwareCbtDiskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareCbtDiskInputOutput)
}

// VMwareCbtDiskInputArrayInput is an input type that accepts VMwareCbtDiskInputArray and VMwareCbtDiskInputArrayOutput values.
// You can construct a concrete instance of `VMwareCbtDiskInputArrayInput` via:
//
//          VMwareCbtDiskInputArray{ VMwareCbtDiskInputArgs{...} }
type VMwareCbtDiskInputArrayInput interface {
	pulumi.Input

	ToVMwareCbtDiskInputArrayOutput() VMwareCbtDiskInputArrayOutput
	ToVMwareCbtDiskInputArrayOutputWithContext(context.Context) VMwareCbtDiskInputArrayOutput
}

type VMwareCbtDiskInputArray []VMwareCbtDiskInputInput

func (VMwareCbtDiskInputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareCbtDiskInput)(nil)).Elem()
}

func (i VMwareCbtDiskInputArray) ToVMwareCbtDiskInputArrayOutput() VMwareCbtDiskInputArrayOutput {
	return i.ToVMwareCbtDiskInputArrayOutputWithContext(context.Background())
}

func (i VMwareCbtDiskInputArray) ToVMwareCbtDiskInputArrayOutputWithContext(ctx context.Context) VMwareCbtDiskInputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareCbtDiskInputArrayOutput)
}

// VMwareCbt specific enable migration input.
type VMwareCbtEnableMigrationInput struct {
	// The data mover RunAs account Id.
	DataMoverRunAsAccountId string `pulumi:"dataMoverRunAsAccountId"`
	// The disks to include list.
	DisksToInclude []VMwareCbtDiskInput `pulumi:"disksToInclude"`
	// The class type.
	InstanceType string `pulumi:"instanceType"`
	// License type.
	LicenseType *string `pulumi:"licenseType"`
	// The snapshot RunAs account Id.
	SnapshotRunAsAccountId string `pulumi:"snapshotRunAsAccountId"`
	// The target availability set ARM Id.
	TargetAvailabilitySetId *string `pulumi:"targetAvailabilitySetId"`
	// The target boot diagnostics storage account ARM Id.
	TargetBootDiagnosticsStorageAccountId *string `pulumi:"targetBootDiagnosticsStorageAccountId"`
	// The target network ARM Id.
	TargetNetworkId string `pulumi:"targetNetworkId"`
	// The target resource group ARM Id.
	TargetResourceGroupId string `pulumi:"targetResourceGroupId"`
	// The target subnet name.
	TargetSubnetName *string `pulumi:"targetSubnetName"`
	// The target VM name.
	TargetVmName *string `pulumi:"targetVmName"`
	// The target VM size.
	TargetVmSize *string `pulumi:"targetVmSize"`
	// The ARM Id of the VM discovered in VMware.
	VmwareMachineId string `pulumi:"vmwareMachineId"`
}

// VMwareCbtEnableMigrationInputInput is an input type that accepts VMwareCbtEnableMigrationInputArgs and VMwareCbtEnableMigrationInputOutput values.
// You can construct a concrete instance of `VMwareCbtEnableMigrationInputInput` via:
//
//          VMwareCbtEnableMigrationInputArgs{...}
type VMwareCbtEnableMigrationInputInput interface {
	pulumi.Input

	ToVMwareCbtEnableMigrationInputOutput() VMwareCbtEnableMigrationInputOutput
	ToVMwareCbtEnableMigrationInputOutputWithContext(context.Context) VMwareCbtEnableMigrationInputOutput
}

// VMwareCbt specific enable migration input.
type VMwareCbtEnableMigrationInputArgs struct {
	// The data mover RunAs account Id.
	DataMoverRunAsAccountId pulumi.StringInput `pulumi:"dataMoverRunAsAccountId"`
	// The disks to include list.
	DisksToInclude VMwareCbtDiskInputArrayInput `pulumi:"disksToInclude"`
	// The class type.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// License type.
	LicenseType pulumi.StringPtrInput `pulumi:"licenseType"`
	// The snapshot RunAs account Id.
	SnapshotRunAsAccountId pulumi.StringInput `pulumi:"snapshotRunAsAccountId"`
	// The target availability set ARM Id.
	TargetAvailabilitySetId pulumi.StringPtrInput `pulumi:"targetAvailabilitySetId"`
	// The target boot diagnostics storage account ARM Id.
	TargetBootDiagnosticsStorageAccountId pulumi.StringPtrInput `pulumi:"targetBootDiagnosticsStorageAccountId"`
	// The target network ARM Id.
	TargetNetworkId pulumi.StringInput `pulumi:"targetNetworkId"`
	// The target resource group ARM Id.
	TargetResourceGroupId pulumi.StringInput `pulumi:"targetResourceGroupId"`
	// The target subnet name.
	TargetSubnetName pulumi.StringPtrInput `pulumi:"targetSubnetName"`
	// The target VM name.
	TargetVmName pulumi.StringPtrInput `pulumi:"targetVmName"`
	// The target VM size.
	TargetVmSize pulumi.StringPtrInput `pulumi:"targetVmSize"`
	// The ARM Id of the VM discovered in VMware.
	VmwareMachineId pulumi.StringInput `pulumi:"vmwareMachineId"`
}

func (VMwareCbtEnableMigrationInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareCbtEnableMigrationInput)(nil)).Elem()
}

func (i VMwareCbtEnableMigrationInputArgs) ToVMwareCbtEnableMigrationInputOutput() VMwareCbtEnableMigrationInputOutput {
	return i.ToVMwareCbtEnableMigrationInputOutputWithContext(context.Background())
}

func (i VMwareCbtEnableMigrationInputArgs) ToVMwareCbtEnableMigrationInputOutputWithContext(ctx context.Context) VMwareCbtEnableMigrationInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareCbtEnableMigrationInputOutput)
}

func (i VMwareCbtEnableMigrationInputArgs) ToVMwareCbtEnableMigrationInputPtrOutput() VMwareCbtEnableMigrationInputPtrOutput {
	return i.ToVMwareCbtEnableMigrationInputPtrOutputWithContext(context.Background())
}

func (i VMwareCbtEnableMigrationInputArgs) ToVMwareCbtEnableMigrationInputPtrOutputWithContext(ctx context.Context) VMwareCbtEnableMigrationInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareCbtEnableMigrationInputOutput).ToVMwareCbtEnableMigrationInputPtrOutputWithContext(ctx)
}

// VMwareCbtEnableMigrationInputPtrInput is an input type that accepts VMwareCbtEnableMigrationInputArgs, VMwareCbtEnableMigrationInputPtr and VMwareCbtEnableMigrationInputPtrOutput values.
// You can construct a concrete instance of `VMwareCbtEnableMigrationInputPtrInput` via:
//
//          VMwareCbtEnableMigrationInputArgs{...}
//
//  or:
//
//          nil
type VMwareCbtEnableMigrationInputPtrInput interface {
	pulumi.Input

	ToVMwareCbtEnableMigrationInputPtrOutput() VMwareCbtEnableMigrationInputPtrOutput
	ToVMwareCbtEnableMigrationInputPtrOutputWithContext(context.Context) VMwareCbtEnableMigrationInputPtrOutput
}

type vmwareCbtEnableMigrationInputPtrType VMwareCbtEnableMigrationInputArgs

func VMwareCbtEnableMigrationInputPtr(v *VMwareCbtEnableMigrationInputArgs) VMwareCbtEnableMigrationInputPtrInput {
	return (*vmwareCbtEnableMigrationInputPtrType)(v)
}

func (*vmwareCbtEnableMigrationInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareCbtEnableMigrationInput)(nil)).Elem()
}

func (i *vmwareCbtEnableMigrationInputPtrType) ToVMwareCbtEnableMigrationInputPtrOutput() VMwareCbtEnableMigrationInputPtrOutput {
	return i.ToVMwareCbtEnableMigrationInputPtrOutputWithContext(context.Background())
}

func (i *vmwareCbtEnableMigrationInputPtrType) ToVMwareCbtEnableMigrationInputPtrOutputWithContext(ctx context.Context) VMwareCbtEnableMigrationInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareCbtEnableMigrationInputPtrOutput)
}

// VMwareCbt provider specific settings
type VMwareCbtMigrationDetailsResponse struct {
	// The data mover RunAs account Id.
	DataMoverRunAsAccountId string `pulumi:"dataMoverRunAsAccountId"`
	// Gets the instance type.
	InstanceType string `pulumi:"instanceType"`
	// The last recovery point received time.
	LastRecoveryPointReceived string `pulumi:"lastRecoveryPointReceived"`
	// License Type of the VM to be used.
	LicenseType *string `pulumi:"licenseType"`
	// The recovery point Id to which the VM was migrated.
	MigrationRecoveryPointId string `pulumi:"migrationRecoveryPointId"`
	// The type of the OS on the VM.
	OsType string `pulumi:"osType"`
	// The list of protected disks.
	ProtectedDisks []VMwareCbtProtectedDiskDetailsResponse `pulumi:"protectedDisks"`
	// The snapshot RunAs account Id.
	SnapshotRunAsAccountId string `pulumi:"snapshotRunAsAccountId"`
	// The target availability set Id.
	TargetAvailabilitySetId *string `pulumi:"targetAvailabilitySetId"`
	// The target boot diagnostics storage account ARM Id.
	TargetBootDiagnosticsStorageAccountId *string `pulumi:"targetBootDiagnosticsStorageAccountId"`
	// The target location.
	TargetLocation string `pulumi:"targetLocation"`
	// The target network Id.
	TargetNetworkId *string `pulumi:"targetNetworkId"`
	// The target resource group Id.
	TargetResourceGroupId *string `pulumi:"targetResourceGroupId"`
	// Target VM name.
	TargetVmName *string `pulumi:"targetVmName"`
	// The target VM size.
	TargetVmSize *string `pulumi:"targetVmSize"`
	// The network details.
	VmNics []VMwareCbtNicDetailsResponse `pulumi:"vmNics"`
	// The ARM Id of the VM discovered in VMware.
	VmwareMachineId string `pulumi:"vmwareMachineId"`
}

// VMwareCbt provider specific settings
type VMwareCbtMigrationDetailsResponseOutput struct{ *pulumi.OutputState }

func (VMwareCbtMigrationDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareCbtMigrationDetailsResponse)(nil)).Elem()
}

func (o VMwareCbtMigrationDetailsResponseOutput) ToVMwareCbtMigrationDetailsResponseOutput() VMwareCbtMigrationDetailsResponseOutput {
	return o
}

func (o VMwareCbtMigrationDetailsResponseOutput) ToVMwareCbtMigrationDetailsResponseOutputWithContext(ctx context.Context) VMwareCbtMigrationDetailsResponseOutput {
	return o
}

func (o VMwareCbtMigrationDetailsResponseOutput) ToVMwareCbtMigrationDetailsResponsePtrOutput() VMwareCbtMigrationDetailsResponsePtrOutput {
	return o.ToVMwareCbtMigrationDetailsResponsePtrOutputWithContext(context.Background())
}

func (o VMwareCbtMigrationDetailsResponseOutput) ToVMwareCbtMigrationDetailsResponsePtrOutputWithContext(ctx context.Context) VMwareCbtMigrationDetailsResponsePtrOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) *VMwareCbtMigrationDetailsResponse {
		return &v
	}).(VMwareCbtMigrationDetailsResponsePtrOutput)
}

// The data mover RunAs account Id.
func (o VMwareCbtMigrationDetailsResponseOutput) DataMoverRunAsAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) string { return v.DataMoverRunAsAccountId }).(pulumi.StringOutput)
}

// Gets the instance type.
func (o VMwareCbtMigrationDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The last recovery point received time.
func (o VMwareCbtMigrationDetailsResponseOutput) LastRecoveryPointReceived() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) string { return v.LastRecoveryPointReceived }).(pulumi.StringOutput)
}

// License Type of the VM to be used.
func (o VMwareCbtMigrationDetailsResponseOutput) LicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) *string { return v.LicenseType }).(pulumi.StringPtrOutput)
}

// The recovery point Id to which the VM was migrated.
func (o VMwareCbtMigrationDetailsResponseOutput) MigrationRecoveryPointId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) string { return v.MigrationRecoveryPointId }).(pulumi.StringOutput)
}

// The type of the OS on the VM.
func (o VMwareCbtMigrationDetailsResponseOutput) OsType() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) string { return v.OsType }).(pulumi.StringOutput)
}

// The list of protected disks.
func (o VMwareCbtMigrationDetailsResponseOutput) ProtectedDisks() VMwareCbtProtectedDiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) []VMwareCbtProtectedDiskDetailsResponse {
		return v.ProtectedDisks
	}).(VMwareCbtProtectedDiskDetailsResponseArrayOutput)
}

// The snapshot RunAs account Id.
func (o VMwareCbtMigrationDetailsResponseOutput) SnapshotRunAsAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) string { return v.SnapshotRunAsAccountId }).(pulumi.StringOutput)
}

// The target availability set Id.
func (o VMwareCbtMigrationDetailsResponseOutput) TargetAvailabilitySetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) *string { return v.TargetAvailabilitySetId }).(pulumi.StringPtrOutput)
}

// The target boot diagnostics storage account ARM Id.
func (o VMwareCbtMigrationDetailsResponseOutput) TargetBootDiagnosticsStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) *string { return v.TargetBootDiagnosticsStorageAccountId }).(pulumi.StringPtrOutput)
}

// The target location.
func (o VMwareCbtMigrationDetailsResponseOutput) TargetLocation() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) string { return v.TargetLocation }).(pulumi.StringOutput)
}

// The target network Id.
func (o VMwareCbtMigrationDetailsResponseOutput) TargetNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) *string { return v.TargetNetworkId }).(pulumi.StringPtrOutput)
}

// The target resource group Id.
func (o VMwareCbtMigrationDetailsResponseOutput) TargetResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) *string { return v.TargetResourceGroupId }).(pulumi.StringPtrOutput)
}

// Target VM name.
func (o VMwareCbtMigrationDetailsResponseOutput) TargetVmName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) *string { return v.TargetVmName }).(pulumi.StringPtrOutput)
}

// The target VM size.
func (o VMwareCbtMigrationDetailsResponseOutput) TargetVmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) *string { return v.TargetVmSize }).(pulumi.StringPtrOutput)
}

// The network details.
func (o VMwareCbtMigrationDetailsResponseOutput) VmNics() VMwareCbtNicDetailsResponseArrayOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) []VMwareCbtNicDetailsResponse { return v.VmNics }).(VMwareCbtNicDetailsResponseArrayOutput)
}

// The ARM Id of the VM discovered in VMware.
func (o VMwareCbtMigrationDetailsResponseOutput) VmwareMachineId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) string { return v.VmwareMachineId }).(pulumi.StringOutput)
}

type VMwareCbtMigrationDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (VMwareCbtMigrationDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareCbtMigrationDetailsResponse)(nil)).Elem()
}

func (o VMwareCbtMigrationDetailsResponsePtrOutput) ToVMwareCbtMigrationDetailsResponsePtrOutput() VMwareCbtMigrationDetailsResponsePtrOutput {
	return o
}

func (o VMwareCbtMigrationDetailsResponsePtrOutput) ToVMwareCbtMigrationDetailsResponsePtrOutputWithContext(ctx context.Context) VMwareCbtMigrationDetailsResponsePtrOutput {
	return o
}

func (o VMwareCbtMigrationDetailsResponsePtrOutput) Elem() VMwareCbtMigrationDetailsResponseOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) VMwareCbtMigrationDetailsResponse { return *v }).(VMwareCbtMigrationDetailsResponseOutput)
}

// The data mover RunAs account Id.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) DataMoverRunAsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DataMoverRunAsAccountId
	}).(pulumi.StringPtrOutput)
}

// Gets the instance type.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// The last recovery point received time.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) LastRecoveryPointReceived() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastRecoveryPointReceived
	}).(pulumi.StringPtrOutput)
}

// License Type of the VM to be used.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) LicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.LicenseType
	}).(pulumi.StringPtrOutput)
}

// The recovery point Id to which the VM was migrated.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) MigrationRecoveryPointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MigrationRecoveryPointId
	}).(pulumi.StringPtrOutput)
}

// The type of the OS on the VM.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.OsType
	}).(pulumi.StringPtrOutput)
}

// The list of protected disks.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) ProtectedDisks() VMwareCbtProtectedDiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) []VMwareCbtProtectedDiskDetailsResponse {
		if v == nil {
			return nil
		}
		return v.ProtectedDisks
	}).(VMwareCbtProtectedDiskDetailsResponseArrayOutput)
}

// The snapshot RunAs account Id.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) SnapshotRunAsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SnapshotRunAsAccountId
	}).(pulumi.StringPtrOutput)
}

// The target availability set Id.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) TargetAvailabilitySetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetAvailabilitySetId
	}).(pulumi.StringPtrOutput)
}

// The target boot diagnostics storage account ARM Id.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) TargetBootDiagnosticsStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetBootDiagnosticsStorageAccountId
	}).(pulumi.StringPtrOutput)
}

// The target location.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) TargetLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TargetLocation
	}).(pulumi.StringPtrOutput)
}

// The target network Id.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) TargetNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetNetworkId
	}).(pulumi.StringPtrOutput)
}

// The target resource group Id.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) TargetResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetResourceGroupId
	}).(pulumi.StringPtrOutput)
}

// Target VM name.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) TargetVmName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetVmName
	}).(pulumi.StringPtrOutput)
}

// The target VM size.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) TargetVmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetVmSize
	}).(pulumi.StringPtrOutput)
}

// The network details.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) VmNics() VMwareCbtNicDetailsResponseArrayOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) []VMwareCbtNicDetailsResponse {
		if v == nil {
			return nil
		}
		return v.VmNics
	}).(VMwareCbtNicDetailsResponseArrayOutput)
}

// The ARM Id of the VM discovered in VMware.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) VmwareMachineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.VmwareMachineId
	}).(pulumi.StringPtrOutput)
}

// VMwareCbt NIC details.
type VMwareCbtNicDetailsResponse struct {
	// A value indicating whether this is the primary NIC.
	IsPrimaryNic *string `pulumi:"isPrimaryNic"`
	// A value indicating whether this NIC is selected for migration.
	IsSelectedForMigration *string `pulumi:"isSelectedForMigration"`
	// The NIC Id.
	NicId string `pulumi:"nicId"`
	// The source IP address.
	SourceIPAddress string `pulumi:"sourceIPAddress"`
	// The source IP address type.
	SourceIPAddressType string `pulumi:"sourceIPAddressType"`
	// Source network Id.
	SourceNetworkId string `pulumi:"sourceNetworkId"`
	// The target IP address.
	TargetIPAddress *string `pulumi:"targetIPAddress"`
	// The target IP address type.
	TargetIPAddressType *string `pulumi:"targetIPAddressType"`
	// Target subnet name.
	TargetSubnetName *string `pulumi:"targetSubnetName"`
}

// VMwareCbt NIC details.
type VMwareCbtNicDetailsResponseOutput struct{ *pulumi.OutputState }

func (VMwareCbtNicDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareCbtNicDetailsResponse)(nil)).Elem()
}

func (o VMwareCbtNicDetailsResponseOutput) ToVMwareCbtNicDetailsResponseOutput() VMwareCbtNicDetailsResponseOutput {
	return o
}

func (o VMwareCbtNicDetailsResponseOutput) ToVMwareCbtNicDetailsResponseOutputWithContext(ctx context.Context) VMwareCbtNicDetailsResponseOutput {
	return o
}

// A value indicating whether this is the primary NIC.
func (o VMwareCbtNicDetailsResponseOutput) IsPrimaryNic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtNicDetailsResponse) *string { return v.IsPrimaryNic }).(pulumi.StringPtrOutput)
}

// A value indicating whether this NIC is selected for migration.
func (o VMwareCbtNicDetailsResponseOutput) IsSelectedForMigration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtNicDetailsResponse) *string { return v.IsSelectedForMigration }).(pulumi.StringPtrOutput)
}

// The NIC Id.
func (o VMwareCbtNicDetailsResponseOutput) NicId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtNicDetailsResponse) string { return v.NicId }).(pulumi.StringOutput)
}

// The source IP address.
func (o VMwareCbtNicDetailsResponseOutput) SourceIPAddress() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtNicDetailsResponse) string { return v.SourceIPAddress }).(pulumi.StringOutput)
}

// The source IP address type.
func (o VMwareCbtNicDetailsResponseOutput) SourceIPAddressType() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtNicDetailsResponse) string { return v.SourceIPAddressType }).(pulumi.StringOutput)
}

// Source network Id.
func (o VMwareCbtNicDetailsResponseOutput) SourceNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtNicDetailsResponse) string { return v.SourceNetworkId }).(pulumi.StringOutput)
}

// The target IP address.
func (o VMwareCbtNicDetailsResponseOutput) TargetIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtNicDetailsResponse) *string { return v.TargetIPAddress }).(pulumi.StringPtrOutput)
}

// The target IP address type.
func (o VMwareCbtNicDetailsResponseOutput) TargetIPAddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtNicDetailsResponse) *string { return v.TargetIPAddressType }).(pulumi.StringPtrOutput)
}

// Target subnet name.
func (o VMwareCbtNicDetailsResponseOutput) TargetSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtNicDetailsResponse) *string { return v.TargetSubnetName }).(pulumi.StringPtrOutput)
}

type VMwareCbtNicDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (VMwareCbtNicDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareCbtNicDetailsResponse)(nil)).Elem()
}

func (o VMwareCbtNicDetailsResponseArrayOutput) ToVMwareCbtNicDetailsResponseArrayOutput() VMwareCbtNicDetailsResponseArrayOutput {
	return o
}

func (o VMwareCbtNicDetailsResponseArrayOutput) ToVMwareCbtNicDetailsResponseArrayOutputWithContext(ctx context.Context) VMwareCbtNicDetailsResponseArrayOutput {
	return o
}

func (o VMwareCbtNicDetailsResponseArrayOutput) Index(i pulumi.IntInput) VMwareCbtNicDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VMwareCbtNicDetailsResponse {
		return vs[0].([]VMwareCbtNicDetailsResponse)[vs[1].(int)]
	}).(VMwareCbtNicDetailsResponseOutput)
}

// VMware Cbt policy creation input.
type VMwareCbtPolicyCreationInput struct {
	// The app consistent snapshot frequency (in minutes).
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// The crash consistent snapshot frequency (in minutes).
	CrashConsistentFrequencyInMinutes *int `pulumi:"crashConsistentFrequencyInMinutes"`
	// The class type.
	InstanceType *string `pulumi:"instanceType"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistoryInMinutes *int `pulumi:"recoveryPointHistoryInMinutes"`
}

// VMwareCbtPolicyCreationInputInput is an input type that accepts VMwareCbtPolicyCreationInputArgs and VMwareCbtPolicyCreationInputOutput values.
// You can construct a concrete instance of `VMwareCbtPolicyCreationInputInput` via:
//
//          VMwareCbtPolicyCreationInputArgs{...}
type VMwareCbtPolicyCreationInputInput interface {
	pulumi.Input

	ToVMwareCbtPolicyCreationInputOutput() VMwareCbtPolicyCreationInputOutput
	ToVMwareCbtPolicyCreationInputOutputWithContext(context.Context) VMwareCbtPolicyCreationInputOutput
}

// VMware Cbt policy creation input.
type VMwareCbtPolicyCreationInputArgs struct {
	// The app consistent snapshot frequency (in minutes).
	AppConsistentFrequencyInMinutes pulumi.IntPtrInput `pulumi:"appConsistentFrequencyInMinutes"`
	// The crash consistent snapshot frequency (in minutes).
	CrashConsistentFrequencyInMinutes pulumi.IntPtrInput `pulumi:"crashConsistentFrequencyInMinutes"`
	// The class type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistoryInMinutes pulumi.IntPtrInput `pulumi:"recoveryPointHistoryInMinutes"`
}

func (VMwareCbtPolicyCreationInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareCbtPolicyCreationInput)(nil)).Elem()
}

func (i VMwareCbtPolicyCreationInputArgs) ToVMwareCbtPolicyCreationInputOutput() VMwareCbtPolicyCreationInputOutput {
	return i.ToVMwareCbtPolicyCreationInputOutputWithContext(context.Background())
}

func (i VMwareCbtPolicyCreationInputArgs) ToVMwareCbtPolicyCreationInputOutputWithContext(ctx context.Context) VMwareCbtPolicyCreationInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareCbtPolicyCreationInputOutput)
}

// VMwareCbt protected disk details.
type VMwareCbtProtectedDiskDetailsResponse struct {
	// The disk capacity in bytes.
	CapacityInBytes int `pulumi:"capacityInBytes"`
	// The disk id.
	DiskId string `pulumi:"diskId"`
	// The disk name.
	DiskName string `pulumi:"diskName"`
	// The disk path.
	DiskPath string `pulumi:"diskPath"`
	// The disk type.
	DiskType *string `pulumi:"diskType"`
	// A value indicating whether the disk is the OS disk.
	IsOSDisk string `pulumi:"isOSDisk"`
	// The log storage account ARM Id.
	LogStorageAccountId string `pulumi:"logStorageAccountId"`
	// The key vault secret name of the log storage account.
	LogStorageAccountSasSecretName string `pulumi:"logStorageAccountSasSecretName"`
	// The ARM Id of the seed managed disk.
	SeedManagedDiskId string `pulumi:"seedManagedDiskId"`
	// The ARM Id of the target managed disk.
	TargetManagedDiskId string `pulumi:"targetManagedDiskId"`
}

// VMwareCbt protected disk details.
type VMwareCbtProtectedDiskDetailsResponseOutput struct{ *pulumi.OutputState }

func (VMwareCbtProtectedDiskDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareCbtProtectedDiskDetailsResponse)(nil)).Elem()
}

func (o VMwareCbtProtectedDiskDetailsResponseOutput) ToVMwareCbtProtectedDiskDetailsResponseOutput() VMwareCbtProtectedDiskDetailsResponseOutput {
	return o
}

func (o VMwareCbtProtectedDiskDetailsResponseOutput) ToVMwareCbtProtectedDiskDetailsResponseOutputWithContext(ctx context.Context) VMwareCbtProtectedDiskDetailsResponseOutput {
	return o
}

// The disk capacity in bytes.
func (o VMwareCbtProtectedDiskDetailsResponseOutput) CapacityInBytes() pulumi.IntOutput {
	return o.ApplyT(func(v VMwareCbtProtectedDiskDetailsResponse) int { return v.CapacityInBytes }).(pulumi.IntOutput)
}

// The disk id.
func (o VMwareCbtProtectedDiskDetailsResponseOutput) DiskId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtProtectedDiskDetailsResponse) string { return v.DiskId }).(pulumi.StringOutput)
}

// The disk name.
func (o VMwareCbtProtectedDiskDetailsResponseOutput) DiskName() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtProtectedDiskDetailsResponse) string { return v.DiskName }).(pulumi.StringOutput)
}

// The disk path.
func (o VMwareCbtProtectedDiskDetailsResponseOutput) DiskPath() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtProtectedDiskDetailsResponse) string { return v.DiskPath }).(pulumi.StringOutput)
}

// The disk type.
func (o VMwareCbtProtectedDiskDetailsResponseOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtProtectedDiskDetailsResponse) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

// A value indicating whether the disk is the OS disk.
func (o VMwareCbtProtectedDiskDetailsResponseOutput) IsOSDisk() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtProtectedDiskDetailsResponse) string { return v.IsOSDisk }).(pulumi.StringOutput)
}

// The log storage account ARM Id.
func (o VMwareCbtProtectedDiskDetailsResponseOutput) LogStorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtProtectedDiskDetailsResponse) string { return v.LogStorageAccountId }).(pulumi.StringOutput)
}

// The key vault secret name of the log storage account.
func (o VMwareCbtProtectedDiskDetailsResponseOutput) LogStorageAccountSasSecretName() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtProtectedDiskDetailsResponse) string { return v.LogStorageAccountSasSecretName }).(pulumi.StringOutput)
}

// The ARM Id of the seed managed disk.
func (o VMwareCbtProtectedDiskDetailsResponseOutput) SeedManagedDiskId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtProtectedDiskDetailsResponse) string { return v.SeedManagedDiskId }).(pulumi.StringOutput)
}

// The ARM Id of the target managed disk.
func (o VMwareCbtProtectedDiskDetailsResponseOutput) TargetManagedDiskId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtProtectedDiskDetailsResponse) string { return v.TargetManagedDiskId }).(pulumi.StringOutput)
}

type VMwareCbtProtectedDiskDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (VMwareCbtProtectedDiskDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareCbtProtectedDiskDetailsResponse)(nil)).Elem()
}

func (o VMwareCbtProtectedDiskDetailsResponseArrayOutput) ToVMwareCbtProtectedDiskDetailsResponseArrayOutput() VMwareCbtProtectedDiskDetailsResponseArrayOutput {
	return o
}

func (o VMwareCbtProtectedDiskDetailsResponseArrayOutput) ToVMwareCbtProtectedDiskDetailsResponseArrayOutputWithContext(ctx context.Context) VMwareCbtProtectedDiskDetailsResponseArrayOutput {
	return o
}

func (o VMwareCbtProtectedDiskDetailsResponseArrayOutput) Index(i pulumi.IntInput) VMwareCbtProtectedDiskDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VMwareCbtProtectedDiskDetailsResponse {
		return vs[0].([]VMwareCbtProtectedDiskDetailsResponse)[vs[1].(int)]
	}).(VMwareCbtProtectedDiskDetailsResponseOutput)
}

// VMwareCbt provider specific container mapping details.
type VMwareCbtProtectionContainerMappingDetailsResponse struct {
	// Gets the class type. Overridden in derived classes.
	InstanceType string `pulumi:"instanceType"`
	// The target key vault ARM Id.
	KeyVaultId string `pulumi:"keyVaultId"`
	// The target key vault URI.
	KeyVaultUri string `pulumi:"keyVaultUri"`
	// The secret name of the service bus connection string.
	ServiceBusConnectionStringSecretName string `pulumi:"serviceBusConnectionStringSecretName"`
	// The storage account ARM Id.
	StorageAccountId string `pulumi:"storageAccountId"`
	// The secret name of the storage account.
	StorageAccountSasSecretName string `pulumi:"storageAccountSasSecretName"`
	// The target location.
	TargetLocation string `pulumi:"targetLocation"`
}

// VMwareCbt provider specific container mapping details.
type VMwareCbtProtectionContainerMappingDetailsResponseOutput struct{ *pulumi.OutputState }

func (VMwareCbtProtectionContainerMappingDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareCbtProtectionContainerMappingDetailsResponse)(nil)).Elem()
}

func (o VMwareCbtProtectionContainerMappingDetailsResponseOutput) ToVMwareCbtProtectionContainerMappingDetailsResponseOutput() VMwareCbtProtectionContainerMappingDetailsResponseOutput {
	return o
}

func (o VMwareCbtProtectionContainerMappingDetailsResponseOutput) ToVMwareCbtProtectionContainerMappingDetailsResponseOutputWithContext(ctx context.Context) VMwareCbtProtectionContainerMappingDetailsResponseOutput {
	return o
}

// Gets the class type. Overridden in derived classes.
func (o VMwareCbtProtectionContainerMappingDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtProtectionContainerMappingDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The target key vault ARM Id.
func (o VMwareCbtProtectionContainerMappingDetailsResponseOutput) KeyVaultId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtProtectionContainerMappingDetailsResponse) string { return v.KeyVaultId }).(pulumi.StringOutput)
}

// The target key vault URI.
func (o VMwareCbtProtectionContainerMappingDetailsResponseOutput) KeyVaultUri() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtProtectionContainerMappingDetailsResponse) string { return v.KeyVaultUri }).(pulumi.StringOutput)
}

// The secret name of the service bus connection string.
func (o VMwareCbtProtectionContainerMappingDetailsResponseOutput) ServiceBusConnectionStringSecretName() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtProtectionContainerMappingDetailsResponse) string {
		return v.ServiceBusConnectionStringSecretName
	}).(pulumi.StringOutput)
}

// The storage account ARM Id.
func (o VMwareCbtProtectionContainerMappingDetailsResponseOutput) StorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtProtectionContainerMappingDetailsResponse) string { return v.StorageAccountId }).(pulumi.StringOutput)
}

// The secret name of the storage account.
func (o VMwareCbtProtectionContainerMappingDetailsResponseOutput) StorageAccountSasSecretName() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtProtectionContainerMappingDetailsResponse) string {
		return v.StorageAccountSasSecretName
	}).(pulumi.StringOutput)
}

// The target location.
func (o VMwareCbtProtectionContainerMappingDetailsResponseOutput) TargetLocation() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtProtectionContainerMappingDetailsResponse) string { return v.TargetLocation }).(pulumi.StringOutput)
}

// Store the fabric details specific to the VMware fabric.
type VMwareDetailsResponse struct {
	// The number of source and target servers configured to talk to this CS.
	AgentCount *string `pulumi:"agentCount"`
	// Agent expiry date.
	AgentExpiryDate *string `pulumi:"agentExpiryDate"`
	// The agent Version.
	AgentVersion *string `pulumi:"agentVersion"`
	// The agent version details.
	AgentVersionDetails *VersionDetailsResponse `pulumi:"agentVersionDetails"`
	// The available memory.
	AvailableMemoryInBytes *int `pulumi:"availableMemoryInBytes"`
	// The available space.
	AvailableSpaceInBytes *int `pulumi:"availableSpaceInBytes"`
	// The percentage of the CPU load.
	CpuLoad *string `pulumi:"cpuLoad"`
	// The CPU load status.
	CpuLoadStatus *string `pulumi:"cpuLoadStatus"`
	// The CS service status.
	CsServiceStatus *string `pulumi:"csServiceStatus"`
	// The database server load.
	DatabaseServerLoad *string `pulumi:"databaseServerLoad"`
	// The database server load status.
	DatabaseServerLoadStatus *string `pulumi:"databaseServerLoadStatus"`
	// The host name.
	HostName *string `pulumi:"hostName"`
	// Gets the class type. Overridden in derived classes.
	InstanceType string `pulumi:"instanceType"`
	// The IP address.
	IpAddress *string `pulumi:"ipAddress"`
	// The last heartbeat received from CS server.
	LastHeartbeat *string `pulumi:"lastHeartbeat"`
	// The list of Master Target servers associated with the fabric.
	MasterTargetServers []MasterTargetServerResponse `pulumi:"masterTargetServers"`
	// The memory usage status.
	MemoryUsageStatus *string `pulumi:"memoryUsageStatus"`
	// The number of process servers.
	ProcessServerCount *string `pulumi:"processServerCount"`
	// The list of Process Servers associated with the fabric.
	ProcessServers []ProcessServerResponse `pulumi:"processServers"`
	// The number of protected servers.
	ProtectedServers *string `pulumi:"protectedServers"`
	// PS template version.
	PsTemplateVersion *string `pulumi:"psTemplateVersion"`
	// The number of replication pairs configured in this CS.
	ReplicationPairCount *string `pulumi:"replicationPairCount"`
	// The list of run as accounts created on the server.
	RunAsAccounts []RunAsAccountResponse `pulumi:"runAsAccounts"`
	// The space usage status.
	SpaceUsageStatus *string `pulumi:"spaceUsageStatus"`
	// CS SSL cert expiry date.
	SslCertExpiryDate *string `pulumi:"sslCertExpiryDate"`
	// CS SSL cert expiry date.
	SslCertExpiryRemainingDays *int `pulumi:"sslCertExpiryRemainingDays"`
	// The percentage of the system load.
	SystemLoad *string `pulumi:"systemLoad"`
	// The system load status.
	SystemLoadStatus *string `pulumi:"systemLoadStatus"`
	// The total memory.
	TotalMemoryInBytes *int `pulumi:"totalMemoryInBytes"`
	// The total space.
	TotalSpaceInBytes *int `pulumi:"totalSpaceInBytes"`
	// Version status
	VersionStatus *string `pulumi:"versionStatus"`
	// The web load.
	WebLoad *string `pulumi:"webLoad"`
	// The web load status.
	WebLoadStatus *string `pulumi:"webLoadStatus"`
}

// Store the fabric details specific to the VMware fabric.
type VMwareDetailsResponseOutput struct{ *pulumi.OutputState }

func (VMwareDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareDetailsResponse)(nil)).Elem()
}

func (o VMwareDetailsResponseOutput) ToVMwareDetailsResponseOutput() VMwareDetailsResponseOutput {
	return o
}

func (o VMwareDetailsResponseOutput) ToVMwareDetailsResponseOutputWithContext(ctx context.Context) VMwareDetailsResponseOutput {
	return o
}

// The number of source and target servers configured to talk to this CS.
func (o VMwareDetailsResponseOutput) AgentCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.AgentCount }).(pulumi.StringPtrOutput)
}

// Agent expiry date.
func (o VMwareDetailsResponseOutput) AgentExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.AgentExpiryDate }).(pulumi.StringPtrOutput)
}

// The agent Version.
func (o VMwareDetailsResponseOutput) AgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.AgentVersion }).(pulumi.StringPtrOutput)
}

// The agent version details.
func (o VMwareDetailsResponseOutput) AgentVersionDetails() VersionDetailsResponsePtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *VersionDetailsResponse { return v.AgentVersionDetails }).(VersionDetailsResponsePtrOutput)
}

// The available memory.
func (o VMwareDetailsResponseOutput) AvailableMemoryInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *int { return v.AvailableMemoryInBytes }).(pulumi.IntPtrOutput)
}

// The available space.
func (o VMwareDetailsResponseOutput) AvailableSpaceInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *int { return v.AvailableSpaceInBytes }).(pulumi.IntPtrOutput)
}

// The percentage of the CPU load.
func (o VMwareDetailsResponseOutput) CpuLoad() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.CpuLoad }).(pulumi.StringPtrOutput)
}

// The CPU load status.
func (o VMwareDetailsResponseOutput) CpuLoadStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.CpuLoadStatus }).(pulumi.StringPtrOutput)
}

// The CS service status.
func (o VMwareDetailsResponseOutput) CsServiceStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.CsServiceStatus }).(pulumi.StringPtrOutput)
}

// The database server load.
func (o VMwareDetailsResponseOutput) DatabaseServerLoad() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.DatabaseServerLoad }).(pulumi.StringPtrOutput)
}

// The database server load status.
func (o VMwareDetailsResponseOutput) DatabaseServerLoadStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.DatabaseServerLoadStatus }).(pulumi.StringPtrOutput)
}

// The host name.
func (o VMwareDetailsResponseOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.HostName }).(pulumi.StringPtrOutput)
}

// Gets the class type. Overridden in derived classes.
func (o VMwareDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The IP address.
func (o VMwareDetailsResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The last heartbeat received from CS server.
func (o VMwareDetailsResponseOutput) LastHeartbeat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.LastHeartbeat }).(pulumi.StringPtrOutput)
}

// The list of Master Target servers associated with the fabric.
func (o VMwareDetailsResponseOutput) MasterTargetServers() MasterTargetServerResponseArrayOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) []MasterTargetServerResponse { return v.MasterTargetServers }).(MasterTargetServerResponseArrayOutput)
}

// The memory usage status.
func (o VMwareDetailsResponseOutput) MemoryUsageStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.MemoryUsageStatus }).(pulumi.StringPtrOutput)
}

// The number of process servers.
func (o VMwareDetailsResponseOutput) ProcessServerCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.ProcessServerCount }).(pulumi.StringPtrOutput)
}

// The list of Process Servers associated with the fabric.
func (o VMwareDetailsResponseOutput) ProcessServers() ProcessServerResponseArrayOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) []ProcessServerResponse { return v.ProcessServers }).(ProcessServerResponseArrayOutput)
}

// The number of protected servers.
func (o VMwareDetailsResponseOutput) ProtectedServers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.ProtectedServers }).(pulumi.StringPtrOutput)
}

// PS template version.
func (o VMwareDetailsResponseOutput) PsTemplateVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.PsTemplateVersion }).(pulumi.StringPtrOutput)
}

// The number of replication pairs configured in this CS.
func (o VMwareDetailsResponseOutput) ReplicationPairCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.ReplicationPairCount }).(pulumi.StringPtrOutput)
}

// The list of run as accounts created on the server.
func (o VMwareDetailsResponseOutput) RunAsAccounts() RunAsAccountResponseArrayOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) []RunAsAccountResponse { return v.RunAsAccounts }).(RunAsAccountResponseArrayOutput)
}

// The space usage status.
func (o VMwareDetailsResponseOutput) SpaceUsageStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.SpaceUsageStatus }).(pulumi.StringPtrOutput)
}

// CS SSL cert expiry date.
func (o VMwareDetailsResponseOutput) SslCertExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.SslCertExpiryDate }).(pulumi.StringPtrOutput)
}

// CS SSL cert expiry date.
func (o VMwareDetailsResponseOutput) SslCertExpiryRemainingDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *int { return v.SslCertExpiryRemainingDays }).(pulumi.IntPtrOutput)
}

// The percentage of the system load.
func (o VMwareDetailsResponseOutput) SystemLoad() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.SystemLoad }).(pulumi.StringPtrOutput)
}

// The system load status.
func (o VMwareDetailsResponseOutput) SystemLoadStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.SystemLoadStatus }).(pulumi.StringPtrOutput)
}

// The total memory.
func (o VMwareDetailsResponseOutput) TotalMemoryInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *int { return v.TotalMemoryInBytes }).(pulumi.IntPtrOutput)
}

// The total space.
func (o VMwareDetailsResponseOutput) TotalSpaceInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *int { return v.TotalSpaceInBytes }).(pulumi.IntPtrOutput)
}

// Version status
func (o VMwareDetailsResponseOutput) VersionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.VersionStatus }).(pulumi.StringPtrOutput)
}

// The web load.
func (o VMwareDetailsResponseOutput) WebLoad() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.WebLoad }).(pulumi.StringPtrOutput)
}

// The web load status.
func (o VMwareDetailsResponseOutput) WebLoadStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.WebLoadStatus }).(pulumi.StringPtrOutput)
}

// VMwareV2 fabric provider specific settings.
type VMwareV2FabricCreationInput struct {
	// Gets the class type.
	InstanceType *string `pulumi:"instanceType"`
	// The ARM Id of the migration solution.
	MigrationSolutionId string `pulumi:"migrationSolutionId"`
	// The ARM Id of the VMware site.
	VmwareSiteId string `pulumi:"vmwareSiteId"`
}

// VMwareV2FabricCreationInputInput is an input type that accepts VMwareV2FabricCreationInputArgs and VMwareV2FabricCreationInputOutput values.
// You can construct a concrete instance of `VMwareV2FabricCreationInputInput` via:
//
//          VMwareV2FabricCreationInputArgs{...}
type VMwareV2FabricCreationInputInput interface {
	pulumi.Input

	ToVMwareV2FabricCreationInputOutput() VMwareV2FabricCreationInputOutput
	ToVMwareV2FabricCreationInputOutputWithContext(context.Context) VMwareV2FabricCreationInputOutput
}

// VMwareV2 fabric provider specific settings.
type VMwareV2FabricCreationInputArgs struct {
	// Gets the class type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// The ARM Id of the migration solution.
	MigrationSolutionId pulumi.StringInput `pulumi:"migrationSolutionId"`
	// The ARM Id of the VMware site.
	VmwareSiteId pulumi.StringInput `pulumi:"vmwareSiteId"`
}

func (VMwareV2FabricCreationInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareV2FabricCreationInput)(nil)).Elem()
}

func (i VMwareV2FabricCreationInputArgs) ToVMwareV2FabricCreationInputOutput() VMwareV2FabricCreationInputOutput {
	return i.ToVMwareV2FabricCreationInputOutputWithContext(context.Background())
}

func (i VMwareV2FabricCreationInputArgs) ToVMwareV2FabricCreationInputOutputWithContext(ctx context.Context) VMwareV2FabricCreationInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareV2FabricCreationInputOutput)
}

// VMwareV2 fabric specific details.
type VMwareV2FabricSpecificDetailsResponse struct {
	// Gets the class type. Overridden in derived classes.
	InstanceType string `pulumi:"instanceType"`
	// The Migration solution ARM Id.
	MigrationSolutionId string `pulumi:"migrationSolutionId"`
	// The service endpoint.
	ServiceEndpoint string `pulumi:"serviceEndpoint"`
	// The service resource Id.
	ServiceResourceId string `pulumi:"serviceResourceId"`
	// The ARM Id of the VMware site.
	VmwareSiteId string `pulumi:"vmwareSiteId"`
}

// VMwareV2 fabric specific details.
type VMwareV2FabricSpecificDetailsResponseOutput struct{ *pulumi.OutputState }

func (VMwareV2FabricSpecificDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareV2FabricSpecificDetailsResponse)(nil)).Elem()
}

func (o VMwareV2FabricSpecificDetailsResponseOutput) ToVMwareV2FabricSpecificDetailsResponseOutput() VMwareV2FabricSpecificDetailsResponseOutput {
	return o
}

func (o VMwareV2FabricSpecificDetailsResponseOutput) ToVMwareV2FabricSpecificDetailsResponseOutputWithContext(ctx context.Context) VMwareV2FabricSpecificDetailsResponseOutput {
	return o
}

// Gets the class type. Overridden in derived classes.
func (o VMwareV2FabricSpecificDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareV2FabricSpecificDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The Migration solution ARM Id.
func (o VMwareV2FabricSpecificDetailsResponseOutput) MigrationSolutionId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareV2FabricSpecificDetailsResponse) string { return v.MigrationSolutionId }).(pulumi.StringOutput)
}

// The service endpoint.
func (o VMwareV2FabricSpecificDetailsResponseOutput) ServiceEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareV2FabricSpecificDetailsResponse) string { return v.ServiceEndpoint }).(pulumi.StringOutput)
}

// The service resource Id.
func (o VMwareV2FabricSpecificDetailsResponseOutput) ServiceResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareV2FabricSpecificDetailsResponse) string { return v.ServiceResourceId }).(pulumi.StringOutput)
}

// The ARM Id of the VMware site.
func (o VMwareV2FabricSpecificDetailsResponseOutput) VmwareSiteId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareV2FabricSpecificDetailsResponse) string { return v.VmwareSiteId }).(pulumi.StringOutput)
}

// Properties of the vault.
type VaultPropertiesResponse struct {
	// List of private endpoint connection.
	PrivateEndpointConnections []PrivateEndpointConnectionVaultPropertiesResponse `pulumi:"privateEndpointConnections"`
	// Private endpoint state for backup.
	PrivateEndpointStateForBackup string `pulumi:"privateEndpointStateForBackup"`
	// Private endpoint state for site recovery.
	PrivateEndpointStateForSiteRecovery string `pulumi:"privateEndpointStateForSiteRecovery"`
	// Provisioning State.
	ProvisioningState string `pulumi:"provisioningState"`
	// Details for upgrading vault.
	UpgradeDetails *UpgradeDetailsResponse `pulumi:"upgradeDetails"`
}

// Properties of the vault.
type VaultPropertiesResponseOutput struct{ *pulumi.OutputState }

func (VaultPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultPropertiesResponse)(nil)).Elem()
}

func (o VaultPropertiesResponseOutput) ToVaultPropertiesResponseOutput() VaultPropertiesResponseOutput {
	return o
}

func (o VaultPropertiesResponseOutput) ToVaultPropertiesResponseOutputWithContext(ctx context.Context) VaultPropertiesResponseOutput {
	return o
}

func (o VaultPropertiesResponseOutput) ToVaultPropertiesResponsePtrOutput() VaultPropertiesResponsePtrOutput {
	return o.ToVaultPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o VaultPropertiesResponseOutput) ToVaultPropertiesResponsePtrOutputWithContext(ctx context.Context) VaultPropertiesResponsePtrOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) *VaultPropertiesResponse {
		return &v
	}).(VaultPropertiesResponsePtrOutput)
}

// List of private endpoint connection.
func (o VaultPropertiesResponseOutput) PrivateEndpointConnections() PrivateEndpointConnectionVaultPropertiesResponseArrayOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) []PrivateEndpointConnectionVaultPropertiesResponse {
		return v.PrivateEndpointConnections
	}).(PrivateEndpointConnectionVaultPropertiesResponseArrayOutput)
}

// Private endpoint state for backup.
func (o VaultPropertiesResponseOutput) PrivateEndpointStateForBackup() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) string { return v.PrivateEndpointStateForBackup }).(pulumi.StringOutput)
}

// Private endpoint state for site recovery.
func (o VaultPropertiesResponseOutput) PrivateEndpointStateForSiteRecovery() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) string { return v.PrivateEndpointStateForSiteRecovery }).(pulumi.StringOutput)
}

// Provisioning State.
func (o VaultPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Details for upgrading vault.
func (o VaultPropertiesResponseOutput) UpgradeDetails() UpgradeDetailsResponsePtrOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) *UpgradeDetailsResponse { return v.UpgradeDetails }).(UpgradeDetailsResponsePtrOutput)
}

type VaultPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (VaultPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VaultPropertiesResponse)(nil)).Elem()
}

func (o VaultPropertiesResponsePtrOutput) ToVaultPropertiesResponsePtrOutput() VaultPropertiesResponsePtrOutput {
	return o
}

func (o VaultPropertiesResponsePtrOutput) ToVaultPropertiesResponsePtrOutputWithContext(ctx context.Context) VaultPropertiesResponsePtrOutput {
	return o
}

func (o VaultPropertiesResponsePtrOutput) Elem() VaultPropertiesResponseOutput {
	return o.ApplyT(func(v *VaultPropertiesResponse) VaultPropertiesResponse { return *v }).(VaultPropertiesResponseOutput)
}

// List of private endpoint connection.
func (o VaultPropertiesResponsePtrOutput) PrivateEndpointConnections() PrivateEndpointConnectionVaultPropertiesResponseArrayOutput {
	return o.ApplyT(func(v *VaultPropertiesResponse) []PrivateEndpointConnectionVaultPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.PrivateEndpointConnections
	}).(PrivateEndpointConnectionVaultPropertiesResponseArrayOutput)
}

// Private endpoint state for backup.
func (o VaultPropertiesResponsePtrOutput) PrivateEndpointStateForBackup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrivateEndpointStateForBackup
	}).(pulumi.StringPtrOutput)
}

// Private endpoint state for site recovery.
func (o VaultPropertiesResponsePtrOutput) PrivateEndpointStateForSiteRecovery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrivateEndpointStateForSiteRecovery
	}).(pulumi.StringPtrOutput)
}

// Provisioning State.
func (o VaultPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Details for upgrading vault.
func (o VaultPropertiesResponsePtrOutput) UpgradeDetails() UpgradeDetailsResponsePtrOutput {
	return o.ApplyT(func(v *VaultPropertiesResponse) *UpgradeDetailsResponse {
		if v == nil {
			return nil
		}
		return v.UpgradeDetails
	}).(UpgradeDetailsResponsePtrOutput)
}

// Version related details.
type VersionDetailsResponse struct {
	// Version expiry date.
	ExpiryDate *string `pulumi:"expiryDate"`
	// A value indicating whether security update required.
	Status *string `pulumi:"status"`
	// The agent version.
	Version *string `pulumi:"version"`
}

// Version related details.
type VersionDetailsResponseOutput struct{ *pulumi.OutputState }

func (VersionDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VersionDetailsResponse)(nil)).Elem()
}

func (o VersionDetailsResponseOutput) ToVersionDetailsResponseOutput() VersionDetailsResponseOutput {
	return o
}

func (o VersionDetailsResponseOutput) ToVersionDetailsResponseOutputWithContext(ctx context.Context) VersionDetailsResponseOutput {
	return o
}

func (o VersionDetailsResponseOutput) ToVersionDetailsResponsePtrOutput() VersionDetailsResponsePtrOutput {
	return o.ToVersionDetailsResponsePtrOutputWithContext(context.Background())
}

func (o VersionDetailsResponseOutput) ToVersionDetailsResponsePtrOutputWithContext(ctx context.Context) VersionDetailsResponsePtrOutput {
	return o.ApplyT(func(v VersionDetailsResponse) *VersionDetailsResponse {
		return &v
	}).(VersionDetailsResponsePtrOutput)
}

// Version expiry date.
func (o VersionDetailsResponseOutput) ExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VersionDetailsResponse) *string { return v.ExpiryDate }).(pulumi.StringPtrOutput)
}

// A value indicating whether security update required.
func (o VersionDetailsResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VersionDetailsResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The agent version.
func (o VersionDetailsResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VersionDetailsResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type VersionDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (VersionDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VersionDetailsResponse)(nil)).Elem()
}

func (o VersionDetailsResponsePtrOutput) ToVersionDetailsResponsePtrOutput() VersionDetailsResponsePtrOutput {
	return o
}

func (o VersionDetailsResponsePtrOutput) ToVersionDetailsResponsePtrOutputWithContext(ctx context.Context) VersionDetailsResponsePtrOutput {
	return o
}

func (o VersionDetailsResponsePtrOutput) Elem() VersionDetailsResponseOutput {
	return o.ApplyT(func(v *VersionDetailsResponse) VersionDetailsResponse { return *v }).(VersionDetailsResponseOutput)
}

// Version expiry date.
func (o VersionDetailsResponsePtrOutput) ExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VersionDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ExpiryDate
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether security update required.
func (o VersionDetailsResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VersionDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The agent version.
func (o VersionDetailsResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VersionDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// VMM fabric specific details.
type VmmDetailsResponse struct {
	// Gets the class type. Overridden in derived classes.
	InstanceType string `pulumi:"instanceType"`
}

// VMM fabric specific details.
type VmmDetailsResponseOutput struct{ *pulumi.OutputState }

func (VmmDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmmDetailsResponse)(nil)).Elem()
}

func (o VmmDetailsResponseOutput) ToVmmDetailsResponseOutput() VmmDetailsResponseOutput {
	return o
}

func (o VmmDetailsResponseOutput) ToVmmDetailsResponseOutputWithContext(ctx context.Context) VmmDetailsResponseOutput {
	return o
}

// Gets the class type. Overridden in derived classes.
func (o VmmDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v VmmDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// Create network mappings input properties/behavior specific to Vmm to Azure Network mapping.
type VmmToAzureCreateNetworkMappingInput struct {
	// The instance type.
	InstanceType *string `pulumi:"instanceType"`
}

// VmmToAzureCreateNetworkMappingInputInput is an input type that accepts VmmToAzureCreateNetworkMappingInputArgs and VmmToAzureCreateNetworkMappingInputOutput values.
// You can construct a concrete instance of `VmmToAzureCreateNetworkMappingInputInput` via:
//
//          VmmToAzureCreateNetworkMappingInputArgs{...}
type VmmToAzureCreateNetworkMappingInputInput interface {
	pulumi.Input

	ToVmmToAzureCreateNetworkMappingInputOutput() VmmToAzureCreateNetworkMappingInputOutput
	ToVmmToAzureCreateNetworkMappingInputOutputWithContext(context.Context) VmmToAzureCreateNetworkMappingInputOutput
}

// Create network mappings input properties/behavior specific to Vmm to Azure Network mapping.
type VmmToAzureCreateNetworkMappingInputArgs struct {
	// The instance type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
}

func (VmmToAzureCreateNetworkMappingInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmmToAzureCreateNetworkMappingInput)(nil)).Elem()
}

func (i VmmToAzureCreateNetworkMappingInputArgs) ToVmmToAzureCreateNetworkMappingInputOutput() VmmToAzureCreateNetworkMappingInputOutput {
	return i.ToVmmToAzureCreateNetworkMappingInputOutputWithContext(context.Background())
}

func (i VmmToAzureCreateNetworkMappingInputArgs) ToVmmToAzureCreateNetworkMappingInputOutputWithContext(ctx context.Context) VmmToAzureCreateNetworkMappingInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmmToAzureCreateNetworkMappingInputOutput)
}

// E2A Network Mapping fabric specific settings.
type VmmToAzureNetworkMappingSettingsResponse struct {
	// Gets the Instance type.
	InstanceType string `pulumi:"instanceType"`
}

// E2A Network Mapping fabric specific settings.
type VmmToAzureNetworkMappingSettingsResponseOutput struct{ *pulumi.OutputState }

func (VmmToAzureNetworkMappingSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmmToAzureNetworkMappingSettingsResponse)(nil)).Elem()
}

func (o VmmToAzureNetworkMappingSettingsResponseOutput) ToVmmToAzureNetworkMappingSettingsResponseOutput() VmmToAzureNetworkMappingSettingsResponseOutput {
	return o
}

func (o VmmToAzureNetworkMappingSettingsResponseOutput) ToVmmToAzureNetworkMappingSettingsResponseOutputWithContext(ctx context.Context) VmmToAzureNetworkMappingSettingsResponseOutput {
	return o
}

// Gets the Instance type.
func (o VmmToAzureNetworkMappingSettingsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v VmmToAzureNetworkMappingSettingsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// Create network mappings input properties/behavior specific to vmm to vmm Network mapping.
type VmmToVmmCreateNetworkMappingInput struct {
	// The instance type.
	InstanceType *string `pulumi:"instanceType"`
}

// VmmToVmmCreateNetworkMappingInputInput is an input type that accepts VmmToVmmCreateNetworkMappingInputArgs and VmmToVmmCreateNetworkMappingInputOutput values.
// You can construct a concrete instance of `VmmToVmmCreateNetworkMappingInputInput` via:
//
//          VmmToVmmCreateNetworkMappingInputArgs{...}
type VmmToVmmCreateNetworkMappingInputInput interface {
	pulumi.Input

	ToVmmToVmmCreateNetworkMappingInputOutput() VmmToVmmCreateNetworkMappingInputOutput
	ToVmmToVmmCreateNetworkMappingInputOutputWithContext(context.Context) VmmToVmmCreateNetworkMappingInputOutput
}

// Create network mappings input properties/behavior specific to vmm to vmm Network mapping.
type VmmToVmmCreateNetworkMappingInputArgs struct {
	// The instance type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
}

func (VmmToVmmCreateNetworkMappingInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmmToVmmCreateNetworkMappingInput)(nil)).Elem()
}

func (i VmmToVmmCreateNetworkMappingInputArgs) ToVmmToVmmCreateNetworkMappingInputOutput() VmmToVmmCreateNetworkMappingInputOutput {
	return i.ToVmmToVmmCreateNetworkMappingInputOutputWithContext(context.Background())
}

func (i VmmToVmmCreateNetworkMappingInputArgs) ToVmmToVmmCreateNetworkMappingInputOutputWithContext(ctx context.Context) VmmToVmmCreateNetworkMappingInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmmToVmmCreateNetworkMappingInputOutput)
}

// E2E Network Mapping fabric specific settings.
type VmmToVmmNetworkMappingSettingsResponse struct {
	// Gets the Instance type.
	InstanceType string `pulumi:"instanceType"`
}

// E2E Network Mapping fabric specific settings.
type VmmToVmmNetworkMappingSettingsResponseOutput struct{ *pulumi.OutputState }

func (VmmToVmmNetworkMappingSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmmToVmmNetworkMappingSettingsResponse)(nil)).Elem()
}

func (o VmmToVmmNetworkMappingSettingsResponseOutput) ToVmmToVmmNetworkMappingSettingsResponseOutput() VmmToVmmNetworkMappingSettingsResponseOutput {
	return o
}

func (o VmmToVmmNetworkMappingSettingsResponseOutput) ToVmmToVmmNetworkMappingSettingsResponseOutputWithContext(ctx context.Context) VmmToVmmNetworkMappingSettingsResponseOutput {
	return o
}

// Gets the Instance type.
func (o VmmToVmmNetworkMappingSettingsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v VmmToVmmNetworkMappingSettingsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// VMware Cbt specific policy details.
type VmwareCbtPolicyDetailsResponse struct {
	// The app consistent snapshot frequency in minutes.
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// The crash consistent snapshot frequency in minutes.
	CrashConsistentFrequencyInMinutes *int `pulumi:"crashConsistentFrequencyInMinutes"`
	// Gets the class type. Overridden in derived classes.
	InstanceType string `pulumi:"instanceType"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistoryInMinutes *int `pulumi:"recoveryPointHistoryInMinutes"`
}

// VMware Cbt specific policy details.
type VmwareCbtPolicyDetailsResponseOutput struct{ *pulumi.OutputState }

func (VmwareCbtPolicyDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmwareCbtPolicyDetailsResponse)(nil)).Elem()
}

func (o VmwareCbtPolicyDetailsResponseOutput) ToVmwareCbtPolicyDetailsResponseOutput() VmwareCbtPolicyDetailsResponseOutput {
	return o
}

func (o VmwareCbtPolicyDetailsResponseOutput) ToVmwareCbtPolicyDetailsResponseOutputWithContext(ctx context.Context) VmwareCbtPolicyDetailsResponseOutput {
	return o
}

// The app consistent snapshot frequency in minutes.
func (o VmwareCbtPolicyDetailsResponseOutput) AppConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VmwareCbtPolicyDetailsResponse) *int { return v.AppConsistentFrequencyInMinutes }).(pulumi.IntPtrOutput)
}

// The crash consistent snapshot frequency in minutes.
func (o VmwareCbtPolicyDetailsResponseOutput) CrashConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VmwareCbtPolicyDetailsResponse) *int { return v.CrashConsistentFrequencyInMinutes }).(pulumi.IntPtrOutput)
}

// Gets the class type. Overridden in derived classes.
func (o VmwareCbtPolicyDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v VmwareCbtPolicyDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The duration in minutes until which the recovery points need to be stored.
func (o VmwareCbtPolicyDetailsResponseOutput) RecoveryPointHistoryInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VmwareCbtPolicyDetailsResponse) *int { return v.RecoveryPointHistoryInMinutes }).(pulumi.IntPtrOutput)
}

// Weekly retention format.
type WeeklyRetentionFormat struct {
	// List of days of the week.
	DaysOfTheWeek []string `pulumi:"daysOfTheWeek"`
	// List of weeks of the month.
	WeeksOfTheMonth []string `pulumi:"weeksOfTheMonth"`
}

// WeeklyRetentionFormatInput is an input type that accepts WeeklyRetentionFormatArgs and WeeklyRetentionFormatOutput values.
// You can construct a concrete instance of `WeeklyRetentionFormatInput` via:
//
//          WeeklyRetentionFormatArgs{...}
type WeeklyRetentionFormatInput interface {
	pulumi.Input

	ToWeeklyRetentionFormatOutput() WeeklyRetentionFormatOutput
	ToWeeklyRetentionFormatOutputWithContext(context.Context) WeeklyRetentionFormatOutput
}

// Weekly retention format.
type WeeklyRetentionFormatArgs struct {
	// List of days of the week.
	DaysOfTheWeek pulumi.StringArrayInput `pulumi:"daysOfTheWeek"`
	// List of weeks of the month.
	WeeksOfTheMonth pulumi.StringArrayInput `pulumi:"weeksOfTheMonth"`
}

func (WeeklyRetentionFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WeeklyRetentionFormat)(nil)).Elem()
}

func (i WeeklyRetentionFormatArgs) ToWeeklyRetentionFormatOutput() WeeklyRetentionFormatOutput {
	return i.ToWeeklyRetentionFormatOutputWithContext(context.Background())
}

func (i WeeklyRetentionFormatArgs) ToWeeklyRetentionFormatOutputWithContext(ctx context.Context) WeeklyRetentionFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeeklyRetentionFormatOutput)
}

func (i WeeklyRetentionFormatArgs) ToWeeklyRetentionFormatPtrOutput() WeeklyRetentionFormatPtrOutput {
	return i.ToWeeklyRetentionFormatPtrOutputWithContext(context.Background())
}

func (i WeeklyRetentionFormatArgs) ToWeeklyRetentionFormatPtrOutputWithContext(ctx context.Context) WeeklyRetentionFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeeklyRetentionFormatOutput).ToWeeklyRetentionFormatPtrOutputWithContext(ctx)
}

// WeeklyRetentionFormatPtrInput is an input type that accepts WeeklyRetentionFormatArgs, WeeklyRetentionFormatPtr and WeeklyRetentionFormatPtrOutput values.
// You can construct a concrete instance of `WeeklyRetentionFormatPtrInput` via:
//
//          WeeklyRetentionFormatArgs{...}
//
//  or:
//
//          nil
type WeeklyRetentionFormatPtrInput interface {
	pulumi.Input

	ToWeeklyRetentionFormatPtrOutput() WeeklyRetentionFormatPtrOutput
	ToWeeklyRetentionFormatPtrOutputWithContext(context.Context) WeeklyRetentionFormatPtrOutput
}

type weeklyRetentionFormatPtrType WeeklyRetentionFormatArgs

func WeeklyRetentionFormatPtr(v *WeeklyRetentionFormatArgs) WeeklyRetentionFormatPtrInput {
	return (*weeklyRetentionFormatPtrType)(v)
}

func (*weeklyRetentionFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WeeklyRetentionFormat)(nil)).Elem()
}

func (i *weeklyRetentionFormatPtrType) ToWeeklyRetentionFormatPtrOutput() WeeklyRetentionFormatPtrOutput {
	return i.ToWeeklyRetentionFormatPtrOutputWithContext(context.Background())
}

func (i *weeklyRetentionFormatPtrType) ToWeeklyRetentionFormatPtrOutputWithContext(ctx context.Context) WeeklyRetentionFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeeklyRetentionFormatPtrOutput)
}

// Weekly retention format.
type WeeklyRetentionFormatResponse struct {
	// List of days of the week.
	DaysOfTheWeek []string `pulumi:"daysOfTheWeek"`
	// List of weeks of the month.
	WeeksOfTheMonth []string `pulumi:"weeksOfTheMonth"`
}

// Weekly retention format.
type WeeklyRetentionFormatResponseOutput struct{ *pulumi.OutputState }

func (WeeklyRetentionFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WeeklyRetentionFormatResponse)(nil)).Elem()
}

func (o WeeklyRetentionFormatResponseOutput) ToWeeklyRetentionFormatResponseOutput() WeeklyRetentionFormatResponseOutput {
	return o
}

func (o WeeklyRetentionFormatResponseOutput) ToWeeklyRetentionFormatResponseOutputWithContext(ctx context.Context) WeeklyRetentionFormatResponseOutput {
	return o
}

func (o WeeklyRetentionFormatResponseOutput) ToWeeklyRetentionFormatResponsePtrOutput() WeeklyRetentionFormatResponsePtrOutput {
	return o.ToWeeklyRetentionFormatResponsePtrOutputWithContext(context.Background())
}

func (o WeeklyRetentionFormatResponseOutput) ToWeeklyRetentionFormatResponsePtrOutputWithContext(ctx context.Context) WeeklyRetentionFormatResponsePtrOutput {
	return o.ApplyT(func(v WeeklyRetentionFormatResponse) *WeeklyRetentionFormatResponse {
		return &v
	}).(WeeklyRetentionFormatResponsePtrOutput)
}

// List of days of the week.
func (o WeeklyRetentionFormatResponseOutput) DaysOfTheWeek() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WeeklyRetentionFormatResponse) []string { return v.DaysOfTheWeek }).(pulumi.StringArrayOutput)
}

// List of weeks of the month.
func (o WeeklyRetentionFormatResponseOutput) WeeksOfTheMonth() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WeeklyRetentionFormatResponse) []string { return v.WeeksOfTheMonth }).(pulumi.StringArrayOutput)
}

type WeeklyRetentionFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (WeeklyRetentionFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WeeklyRetentionFormatResponse)(nil)).Elem()
}

func (o WeeklyRetentionFormatResponsePtrOutput) ToWeeklyRetentionFormatResponsePtrOutput() WeeklyRetentionFormatResponsePtrOutput {
	return o
}

func (o WeeklyRetentionFormatResponsePtrOutput) ToWeeklyRetentionFormatResponsePtrOutputWithContext(ctx context.Context) WeeklyRetentionFormatResponsePtrOutput {
	return o
}

func (o WeeklyRetentionFormatResponsePtrOutput) Elem() WeeklyRetentionFormatResponseOutput {
	return o.ApplyT(func(v *WeeklyRetentionFormatResponse) WeeklyRetentionFormatResponse { return *v }).(WeeklyRetentionFormatResponseOutput)
}

// List of days of the week.
func (o WeeklyRetentionFormatResponsePtrOutput) DaysOfTheWeek() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WeeklyRetentionFormatResponse) []string {
		if v == nil {
			return nil
		}
		return v.DaysOfTheWeek
	}).(pulumi.StringArrayOutput)
}

// List of weeks of the month.
func (o WeeklyRetentionFormatResponsePtrOutput) WeeksOfTheMonth() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WeeklyRetentionFormatResponse) []string {
		if v == nil {
			return nil
		}
		return v.WeeksOfTheMonth
	}).(pulumi.StringArrayOutput)
}

// Weekly retention schedule.
type WeeklyRetentionSchedule struct {
	// List of the days of the week for the weekly retention policy.
	DaysOfTheWeek []string `pulumi:"daysOfTheWeek"`
	// Retention duration of retention policy.
	RetentionDuration *RetentionDuration `pulumi:"retentionDuration"`
	// Retention times of the retention policy.
	RetentionTimes []string `pulumi:"retentionTimes"`
}

// WeeklyRetentionScheduleInput is an input type that accepts WeeklyRetentionScheduleArgs and WeeklyRetentionScheduleOutput values.
// You can construct a concrete instance of `WeeklyRetentionScheduleInput` via:
//
//          WeeklyRetentionScheduleArgs{...}
type WeeklyRetentionScheduleInput interface {
	pulumi.Input

	ToWeeklyRetentionScheduleOutput() WeeklyRetentionScheduleOutput
	ToWeeklyRetentionScheduleOutputWithContext(context.Context) WeeklyRetentionScheduleOutput
}

// Weekly retention schedule.
type WeeklyRetentionScheduleArgs struct {
	// List of the days of the week for the weekly retention policy.
	DaysOfTheWeek pulumi.StringArrayInput `pulumi:"daysOfTheWeek"`
	// Retention duration of retention policy.
	RetentionDuration RetentionDurationPtrInput `pulumi:"retentionDuration"`
	// Retention times of the retention policy.
	RetentionTimes pulumi.StringArrayInput `pulumi:"retentionTimes"`
}

func (WeeklyRetentionScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WeeklyRetentionSchedule)(nil)).Elem()
}

func (i WeeklyRetentionScheduleArgs) ToWeeklyRetentionScheduleOutput() WeeklyRetentionScheduleOutput {
	return i.ToWeeklyRetentionScheduleOutputWithContext(context.Background())
}

func (i WeeklyRetentionScheduleArgs) ToWeeklyRetentionScheduleOutputWithContext(ctx context.Context) WeeklyRetentionScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeeklyRetentionScheduleOutput)
}

func (i WeeklyRetentionScheduleArgs) ToWeeklyRetentionSchedulePtrOutput() WeeklyRetentionSchedulePtrOutput {
	return i.ToWeeklyRetentionSchedulePtrOutputWithContext(context.Background())
}

func (i WeeklyRetentionScheduleArgs) ToWeeklyRetentionSchedulePtrOutputWithContext(ctx context.Context) WeeklyRetentionSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeeklyRetentionScheduleOutput).ToWeeklyRetentionSchedulePtrOutputWithContext(ctx)
}

// WeeklyRetentionSchedulePtrInput is an input type that accepts WeeklyRetentionScheduleArgs, WeeklyRetentionSchedulePtr and WeeklyRetentionSchedulePtrOutput values.
// You can construct a concrete instance of `WeeklyRetentionSchedulePtrInput` via:
//
//          WeeklyRetentionScheduleArgs{...}
//
//  or:
//
//          nil
type WeeklyRetentionSchedulePtrInput interface {
	pulumi.Input

	ToWeeklyRetentionSchedulePtrOutput() WeeklyRetentionSchedulePtrOutput
	ToWeeklyRetentionSchedulePtrOutputWithContext(context.Context) WeeklyRetentionSchedulePtrOutput
}

type weeklyRetentionSchedulePtrType WeeklyRetentionScheduleArgs

func WeeklyRetentionSchedulePtr(v *WeeklyRetentionScheduleArgs) WeeklyRetentionSchedulePtrInput {
	return (*weeklyRetentionSchedulePtrType)(v)
}

func (*weeklyRetentionSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WeeklyRetentionSchedule)(nil)).Elem()
}

func (i *weeklyRetentionSchedulePtrType) ToWeeklyRetentionSchedulePtrOutput() WeeklyRetentionSchedulePtrOutput {
	return i.ToWeeklyRetentionSchedulePtrOutputWithContext(context.Background())
}

func (i *weeklyRetentionSchedulePtrType) ToWeeklyRetentionSchedulePtrOutputWithContext(ctx context.Context) WeeklyRetentionSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeeklyRetentionSchedulePtrOutput)
}

// Weekly retention schedule.
type WeeklyRetentionScheduleResponse struct {
	// List of the days of the week for the weekly retention policy.
	DaysOfTheWeek []string `pulumi:"daysOfTheWeek"`
	// Retention duration of retention policy.
	RetentionDuration *RetentionDurationResponse `pulumi:"retentionDuration"`
	// Retention times of the retention policy.
	RetentionTimes []string `pulumi:"retentionTimes"`
}

// Weekly retention schedule.
type WeeklyRetentionScheduleResponseOutput struct{ *pulumi.OutputState }

func (WeeklyRetentionScheduleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WeeklyRetentionScheduleResponse)(nil)).Elem()
}

func (o WeeklyRetentionScheduleResponseOutput) ToWeeklyRetentionScheduleResponseOutput() WeeklyRetentionScheduleResponseOutput {
	return o
}

func (o WeeklyRetentionScheduleResponseOutput) ToWeeklyRetentionScheduleResponseOutputWithContext(ctx context.Context) WeeklyRetentionScheduleResponseOutput {
	return o
}

func (o WeeklyRetentionScheduleResponseOutput) ToWeeklyRetentionScheduleResponsePtrOutput() WeeklyRetentionScheduleResponsePtrOutput {
	return o.ToWeeklyRetentionScheduleResponsePtrOutputWithContext(context.Background())
}

func (o WeeklyRetentionScheduleResponseOutput) ToWeeklyRetentionScheduleResponsePtrOutputWithContext(ctx context.Context) WeeklyRetentionScheduleResponsePtrOutput {
	return o.ApplyT(func(v WeeklyRetentionScheduleResponse) *WeeklyRetentionScheduleResponse {
		return &v
	}).(WeeklyRetentionScheduleResponsePtrOutput)
}

// List of the days of the week for the weekly retention policy.
func (o WeeklyRetentionScheduleResponseOutput) DaysOfTheWeek() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WeeklyRetentionScheduleResponse) []string { return v.DaysOfTheWeek }).(pulumi.StringArrayOutput)
}

// Retention duration of retention policy.
func (o WeeklyRetentionScheduleResponseOutput) RetentionDuration() RetentionDurationResponsePtrOutput {
	return o.ApplyT(func(v WeeklyRetentionScheduleResponse) *RetentionDurationResponse { return v.RetentionDuration }).(RetentionDurationResponsePtrOutput)
}

// Retention times of the retention policy.
func (o WeeklyRetentionScheduleResponseOutput) RetentionTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WeeklyRetentionScheduleResponse) []string { return v.RetentionTimes }).(pulumi.StringArrayOutput)
}

type WeeklyRetentionScheduleResponsePtrOutput struct{ *pulumi.OutputState }

func (WeeklyRetentionScheduleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WeeklyRetentionScheduleResponse)(nil)).Elem()
}

func (o WeeklyRetentionScheduleResponsePtrOutput) ToWeeklyRetentionScheduleResponsePtrOutput() WeeklyRetentionScheduleResponsePtrOutput {
	return o
}

func (o WeeklyRetentionScheduleResponsePtrOutput) ToWeeklyRetentionScheduleResponsePtrOutputWithContext(ctx context.Context) WeeklyRetentionScheduleResponsePtrOutput {
	return o
}

func (o WeeklyRetentionScheduleResponsePtrOutput) Elem() WeeklyRetentionScheduleResponseOutput {
	return o.ApplyT(func(v *WeeklyRetentionScheduleResponse) WeeklyRetentionScheduleResponse { return *v }).(WeeklyRetentionScheduleResponseOutput)
}

// List of the days of the week for the weekly retention policy.
func (o WeeklyRetentionScheduleResponsePtrOutput) DaysOfTheWeek() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WeeklyRetentionScheduleResponse) []string {
		if v == nil {
			return nil
		}
		return v.DaysOfTheWeek
	}).(pulumi.StringArrayOutput)
}

// Retention duration of retention policy.
func (o WeeklyRetentionScheduleResponsePtrOutput) RetentionDuration() RetentionDurationResponsePtrOutput {
	return o.ApplyT(func(v *WeeklyRetentionScheduleResponse) *RetentionDurationResponse {
		if v == nil {
			return nil
		}
		return v.RetentionDuration
	}).(RetentionDurationResponsePtrOutput)
}

// Retention times of the retention policy.
func (o WeeklyRetentionScheduleResponsePtrOutput) RetentionTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WeeklyRetentionScheduleResponse) []string {
		if v == nil {
			return nil
		}
		return v.RetentionTimes
	}).(pulumi.StringArrayOutput)
}

// Details of an inquired protectable item.
type WorkloadInquiryDetails struct {
	// Inquiry validation such as permissions and other backup validations.
	InquiryValidation *InquiryValidation `pulumi:"inquiryValidation"`
	// Contains the protectable item Count inside this Container.
	ItemCount *int `pulumi:"itemCount"`
	// Type of the Workload such as SQL, Oracle etc.
	Type *string `pulumi:"type"`
}

// WorkloadInquiryDetailsInput is an input type that accepts WorkloadInquiryDetailsArgs and WorkloadInquiryDetailsOutput values.
// You can construct a concrete instance of `WorkloadInquiryDetailsInput` via:
//
//          WorkloadInquiryDetailsArgs{...}
type WorkloadInquiryDetailsInput interface {
	pulumi.Input

	ToWorkloadInquiryDetailsOutput() WorkloadInquiryDetailsOutput
	ToWorkloadInquiryDetailsOutputWithContext(context.Context) WorkloadInquiryDetailsOutput
}

// Details of an inquired protectable item.
type WorkloadInquiryDetailsArgs struct {
	// Inquiry validation such as permissions and other backup validations.
	InquiryValidation InquiryValidationPtrInput `pulumi:"inquiryValidation"`
	// Contains the protectable item Count inside this Container.
	ItemCount pulumi.IntPtrInput `pulumi:"itemCount"`
	// Type of the Workload such as SQL, Oracle etc.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (WorkloadInquiryDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadInquiryDetails)(nil)).Elem()
}

func (i WorkloadInquiryDetailsArgs) ToWorkloadInquiryDetailsOutput() WorkloadInquiryDetailsOutput {
	return i.ToWorkloadInquiryDetailsOutputWithContext(context.Background())
}

func (i WorkloadInquiryDetailsArgs) ToWorkloadInquiryDetailsOutputWithContext(ctx context.Context) WorkloadInquiryDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadInquiryDetailsOutput)
}

// WorkloadInquiryDetailsArrayInput is an input type that accepts WorkloadInquiryDetailsArray and WorkloadInquiryDetailsArrayOutput values.
// You can construct a concrete instance of `WorkloadInquiryDetailsArrayInput` via:
//
//          WorkloadInquiryDetailsArray{ WorkloadInquiryDetailsArgs{...} }
type WorkloadInquiryDetailsArrayInput interface {
	pulumi.Input

	ToWorkloadInquiryDetailsArrayOutput() WorkloadInquiryDetailsArrayOutput
	ToWorkloadInquiryDetailsArrayOutputWithContext(context.Context) WorkloadInquiryDetailsArrayOutput
}

type WorkloadInquiryDetailsArray []WorkloadInquiryDetailsInput

func (WorkloadInquiryDetailsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadInquiryDetails)(nil)).Elem()
}

func (i WorkloadInquiryDetailsArray) ToWorkloadInquiryDetailsArrayOutput() WorkloadInquiryDetailsArrayOutput {
	return i.ToWorkloadInquiryDetailsArrayOutputWithContext(context.Background())
}

func (i WorkloadInquiryDetailsArray) ToWorkloadInquiryDetailsArrayOutputWithContext(ctx context.Context) WorkloadInquiryDetailsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadInquiryDetailsArrayOutput)
}

// Details of an inquired protectable item.
type WorkloadInquiryDetailsResponse struct {
	// Inquiry validation such as permissions and other backup validations.
	InquiryValidation *InquiryValidationResponse `pulumi:"inquiryValidation"`
	// Contains the protectable item Count inside this Container.
	ItemCount *int `pulumi:"itemCount"`
	// Type of the Workload such as SQL, Oracle etc.
	Type *string `pulumi:"type"`
}

// Details of an inquired protectable item.
type WorkloadInquiryDetailsResponseOutput struct{ *pulumi.OutputState }

func (WorkloadInquiryDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadInquiryDetailsResponse)(nil)).Elem()
}

func (o WorkloadInquiryDetailsResponseOutput) ToWorkloadInquiryDetailsResponseOutput() WorkloadInquiryDetailsResponseOutput {
	return o
}

func (o WorkloadInquiryDetailsResponseOutput) ToWorkloadInquiryDetailsResponseOutputWithContext(ctx context.Context) WorkloadInquiryDetailsResponseOutput {
	return o
}

// Inquiry validation such as permissions and other backup validations.
func (o WorkloadInquiryDetailsResponseOutput) InquiryValidation() InquiryValidationResponsePtrOutput {
	return o.ApplyT(func(v WorkloadInquiryDetailsResponse) *InquiryValidationResponse { return v.InquiryValidation }).(InquiryValidationResponsePtrOutput)
}

// Contains the protectable item Count inside this Container.
func (o WorkloadInquiryDetailsResponseOutput) ItemCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadInquiryDetailsResponse) *int { return v.ItemCount }).(pulumi.IntPtrOutput)
}

// Type of the Workload such as SQL, Oracle etc.
func (o WorkloadInquiryDetailsResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadInquiryDetailsResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type WorkloadInquiryDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (WorkloadInquiryDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadInquiryDetailsResponse)(nil)).Elem()
}

func (o WorkloadInquiryDetailsResponseArrayOutput) ToWorkloadInquiryDetailsResponseArrayOutput() WorkloadInquiryDetailsResponseArrayOutput {
	return o
}

func (o WorkloadInquiryDetailsResponseArrayOutput) ToWorkloadInquiryDetailsResponseArrayOutputWithContext(ctx context.Context) WorkloadInquiryDetailsResponseArrayOutput {
	return o
}

func (o WorkloadInquiryDetailsResponseArrayOutput) Index(i pulumi.IntInput) WorkloadInquiryDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkloadInquiryDetailsResponse {
		return vs[0].([]WorkloadInquiryDetailsResponse)[vs[1].(int)]
	}).(WorkloadInquiryDetailsResponseOutput)
}

// Yearly retention schedule.
type YearlyRetentionSchedule struct {
	// List of the months of year for the yearly retention policy.
	MonthsOfYear []string `pulumi:"monthsOfYear"`
	// Retention duration for the retention policy.
	RetentionDuration *RetentionDuration `pulumi:"retentionDuration"`
	// Daily retention format for the yearly retention policy.
	RetentionScheduleDaily *DailyRetentionFormat `pulumi:"retentionScheduleDaily"`
	// Retention schedule format for the yearly retention policy.
	RetentionScheduleFormatType *string `pulumi:"retentionScheduleFormatType"`
	// Weekly retention format for the yearly retention policy.
	RetentionScheduleWeekly *WeeklyRetentionFormat `pulumi:"retentionScheduleWeekly"`
	// Retention times for the retention policy.
	RetentionTimes []string `pulumi:"retentionTimes"`
}

// YearlyRetentionScheduleInput is an input type that accepts YearlyRetentionScheduleArgs and YearlyRetentionScheduleOutput values.
// You can construct a concrete instance of `YearlyRetentionScheduleInput` via:
//
//          YearlyRetentionScheduleArgs{...}
type YearlyRetentionScheduleInput interface {
	pulumi.Input

	ToYearlyRetentionScheduleOutput() YearlyRetentionScheduleOutput
	ToYearlyRetentionScheduleOutputWithContext(context.Context) YearlyRetentionScheduleOutput
}

// Yearly retention schedule.
type YearlyRetentionScheduleArgs struct {
	// List of the months of year for the yearly retention policy.
	MonthsOfYear pulumi.StringArrayInput `pulumi:"monthsOfYear"`
	// Retention duration for the retention policy.
	RetentionDuration RetentionDurationPtrInput `pulumi:"retentionDuration"`
	// Daily retention format for the yearly retention policy.
	RetentionScheduleDaily DailyRetentionFormatPtrInput `pulumi:"retentionScheduleDaily"`
	// Retention schedule format for the yearly retention policy.
	RetentionScheduleFormatType pulumi.StringPtrInput `pulumi:"retentionScheduleFormatType"`
	// Weekly retention format for the yearly retention policy.
	RetentionScheduleWeekly WeeklyRetentionFormatPtrInput `pulumi:"retentionScheduleWeekly"`
	// Retention times for the retention policy.
	RetentionTimes pulumi.StringArrayInput `pulumi:"retentionTimes"`
}

func (YearlyRetentionScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*YearlyRetentionSchedule)(nil)).Elem()
}

func (i YearlyRetentionScheduleArgs) ToYearlyRetentionScheduleOutput() YearlyRetentionScheduleOutput {
	return i.ToYearlyRetentionScheduleOutputWithContext(context.Background())
}

func (i YearlyRetentionScheduleArgs) ToYearlyRetentionScheduleOutputWithContext(ctx context.Context) YearlyRetentionScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(YearlyRetentionScheduleOutput)
}

func (i YearlyRetentionScheduleArgs) ToYearlyRetentionSchedulePtrOutput() YearlyRetentionSchedulePtrOutput {
	return i.ToYearlyRetentionSchedulePtrOutputWithContext(context.Background())
}

func (i YearlyRetentionScheduleArgs) ToYearlyRetentionSchedulePtrOutputWithContext(ctx context.Context) YearlyRetentionSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(YearlyRetentionScheduleOutput).ToYearlyRetentionSchedulePtrOutputWithContext(ctx)
}

// YearlyRetentionSchedulePtrInput is an input type that accepts YearlyRetentionScheduleArgs, YearlyRetentionSchedulePtr and YearlyRetentionSchedulePtrOutput values.
// You can construct a concrete instance of `YearlyRetentionSchedulePtrInput` via:
//
//          YearlyRetentionScheduleArgs{...}
//
//  or:
//
//          nil
type YearlyRetentionSchedulePtrInput interface {
	pulumi.Input

	ToYearlyRetentionSchedulePtrOutput() YearlyRetentionSchedulePtrOutput
	ToYearlyRetentionSchedulePtrOutputWithContext(context.Context) YearlyRetentionSchedulePtrOutput
}

type yearlyRetentionSchedulePtrType YearlyRetentionScheduleArgs

func YearlyRetentionSchedulePtr(v *YearlyRetentionScheduleArgs) YearlyRetentionSchedulePtrInput {
	return (*yearlyRetentionSchedulePtrType)(v)
}

func (*yearlyRetentionSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**YearlyRetentionSchedule)(nil)).Elem()
}

func (i *yearlyRetentionSchedulePtrType) ToYearlyRetentionSchedulePtrOutput() YearlyRetentionSchedulePtrOutput {
	return i.ToYearlyRetentionSchedulePtrOutputWithContext(context.Background())
}

func (i *yearlyRetentionSchedulePtrType) ToYearlyRetentionSchedulePtrOutputWithContext(ctx context.Context) YearlyRetentionSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(YearlyRetentionSchedulePtrOutput)
}

// Yearly retention schedule.
type YearlyRetentionScheduleResponse struct {
	// List of the months of year for the yearly retention policy.
	MonthsOfYear []string `pulumi:"monthsOfYear"`
	// Retention duration for the retention policy.
	RetentionDuration *RetentionDurationResponse `pulumi:"retentionDuration"`
	// Daily retention format for the yearly retention policy.
	RetentionScheduleDaily *DailyRetentionFormatResponse `pulumi:"retentionScheduleDaily"`
	// Retention schedule format for the yearly retention policy.
	RetentionScheduleFormatType *string `pulumi:"retentionScheduleFormatType"`
	// Weekly retention format for the yearly retention policy.
	RetentionScheduleWeekly *WeeklyRetentionFormatResponse `pulumi:"retentionScheduleWeekly"`
	// Retention times for the retention policy.
	RetentionTimes []string `pulumi:"retentionTimes"`
}

// Yearly retention schedule.
type YearlyRetentionScheduleResponseOutput struct{ *pulumi.OutputState }

func (YearlyRetentionScheduleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*YearlyRetentionScheduleResponse)(nil)).Elem()
}

func (o YearlyRetentionScheduleResponseOutput) ToYearlyRetentionScheduleResponseOutput() YearlyRetentionScheduleResponseOutput {
	return o
}

func (o YearlyRetentionScheduleResponseOutput) ToYearlyRetentionScheduleResponseOutputWithContext(ctx context.Context) YearlyRetentionScheduleResponseOutput {
	return o
}

func (o YearlyRetentionScheduleResponseOutput) ToYearlyRetentionScheduleResponsePtrOutput() YearlyRetentionScheduleResponsePtrOutput {
	return o.ToYearlyRetentionScheduleResponsePtrOutputWithContext(context.Background())
}

func (o YearlyRetentionScheduleResponseOutput) ToYearlyRetentionScheduleResponsePtrOutputWithContext(ctx context.Context) YearlyRetentionScheduleResponsePtrOutput {
	return o.ApplyT(func(v YearlyRetentionScheduleResponse) *YearlyRetentionScheduleResponse {
		return &v
	}).(YearlyRetentionScheduleResponsePtrOutput)
}

// List of the months of year for the yearly retention policy.
func (o YearlyRetentionScheduleResponseOutput) MonthsOfYear() pulumi.StringArrayOutput {
	return o.ApplyT(func(v YearlyRetentionScheduleResponse) []string { return v.MonthsOfYear }).(pulumi.StringArrayOutput)
}

// Retention duration for the retention policy.
func (o YearlyRetentionScheduleResponseOutput) RetentionDuration() RetentionDurationResponsePtrOutput {
	return o.ApplyT(func(v YearlyRetentionScheduleResponse) *RetentionDurationResponse { return v.RetentionDuration }).(RetentionDurationResponsePtrOutput)
}

// Daily retention format for the yearly retention policy.
func (o YearlyRetentionScheduleResponseOutput) RetentionScheduleDaily() DailyRetentionFormatResponsePtrOutput {
	return o.ApplyT(func(v YearlyRetentionScheduleResponse) *DailyRetentionFormatResponse { return v.RetentionScheduleDaily }).(DailyRetentionFormatResponsePtrOutput)
}

// Retention schedule format for the yearly retention policy.
func (o YearlyRetentionScheduleResponseOutput) RetentionScheduleFormatType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v YearlyRetentionScheduleResponse) *string { return v.RetentionScheduleFormatType }).(pulumi.StringPtrOutput)
}

// Weekly retention format for the yearly retention policy.
func (o YearlyRetentionScheduleResponseOutput) RetentionScheduleWeekly() WeeklyRetentionFormatResponsePtrOutput {
	return o.ApplyT(func(v YearlyRetentionScheduleResponse) *WeeklyRetentionFormatResponse {
		return v.RetentionScheduleWeekly
	}).(WeeklyRetentionFormatResponsePtrOutput)
}

// Retention times for the retention policy.
func (o YearlyRetentionScheduleResponseOutput) RetentionTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v YearlyRetentionScheduleResponse) []string { return v.RetentionTimes }).(pulumi.StringArrayOutput)
}

type YearlyRetentionScheduleResponsePtrOutput struct{ *pulumi.OutputState }

func (YearlyRetentionScheduleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**YearlyRetentionScheduleResponse)(nil)).Elem()
}

func (o YearlyRetentionScheduleResponsePtrOutput) ToYearlyRetentionScheduleResponsePtrOutput() YearlyRetentionScheduleResponsePtrOutput {
	return o
}

func (o YearlyRetentionScheduleResponsePtrOutput) ToYearlyRetentionScheduleResponsePtrOutputWithContext(ctx context.Context) YearlyRetentionScheduleResponsePtrOutput {
	return o
}

func (o YearlyRetentionScheduleResponsePtrOutput) Elem() YearlyRetentionScheduleResponseOutput {
	return o.ApplyT(func(v *YearlyRetentionScheduleResponse) YearlyRetentionScheduleResponse { return *v }).(YearlyRetentionScheduleResponseOutput)
}

// List of the months of year for the yearly retention policy.
func (o YearlyRetentionScheduleResponsePtrOutput) MonthsOfYear() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *YearlyRetentionScheduleResponse) []string {
		if v == nil {
			return nil
		}
		return v.MonthsOfYear
	}).(pulumi.StringArrayOutput)
}

// Retention duration for the retention policy.
func (o YearlyRetentionScheduleResponsePtrOutput) RetentionDuration() RetentionDurationResponsePtrOutput {
	return o.ApplyT(func(v *YearlyRetentionScheduleResponse) *RetentionDurationResponse {
		if v == nil {
			return nil
		}
		return v.RetentionDuration
	}).(RetentionDurationResponsePtrOutput)
}

// Daily retention format for the yearly retention policy.
func (o YearlyRetentionScheduleResponsePtrOutput) RetentionScheduleDaily() DailyRetentionFormatResponsePtrOutput {
	return o.ApplyT(func(v *YearlyRetentionScheduleResponse) *DailyRetentionFormatResponse {
		if v == nil {
			return nil
		}
		return v.RetentionScheduleDaily
	}).(DailyRetentionFormatResponsePtrOutput)
}

// Retention schedule format for the yearly retention policy.
func (o YearlyRetentionScheduleResponsePtrOutput) RetentionScheduleFormatType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *YearlyRetentionScheduleResponse) *string {
		if v == nil {
			return nil
		}
		return v.RetentionScheduleFormatType
	}).(pulumi.StringPtrOutput)
}

// Weekly retention format for the yearly retention policy.
func (o YearlyRetentionScheduleResponsePtrOutput) RetentionScheduleWeekly() WeeklyRetentionFormatResponsePtrOutput {
	return o.ApplyT(func(v *YearlyRetentionScheduleResponse) *WeeklyRetentionFormatResponse {
		if v == nil {
			return nil
		}
		return v.RetentionScheduleWeekly
	}).(WeeklyRetentionFormatResponsePtrOutput)
}

// Retention times for the retention policy.
func (o YearlyRetentionScheduleResponsePtrOutput) RetentionTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *YearlyRetentionScheduleResponse) []string {
		if v == nil {
			return nil
		}
		return v.RetentionTimes
	}).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(A2AContainerMappingInputOutput{})
	pulumi.RegisterOutputType(A2AEnableProtectionInputOutput{})
	pulumi.RegisterOutputType(A2APolicyCreationInputOutput{})
	pulumi.RegisterOutputType(A2APolicyDetailsResponseOutput{})
	pulumi.RegisterOutputType(A2AProtectedDiskDetailsResponseOutput{})
	pulumi.RegisterOutputType(A2AProtectedDiskDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(A2AProtectedManagedDiskDetailsResponseOutput{})
	pulumi.RegisterOutputType(A2AProtectedManagedDiskDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(A2AProtectionContainerMappingDetailsResponseOutput{})
	pulumi.RegisterOutputType(A2AReplicationDetailsResponseOutput{})
	pulumi.RegisterOutputType(A2AUnprotectedDiskDetailsResponseOutput{})
	pulumi.RegisterOutputType(A2AUnprotectedDiskDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(A2AVmDiskInputDetailsOutput{})
	pulumi.RegisterOutputType(A2AVmDiskInputDetailsArrayOutput{})
	pulumi.RegisterOutputType(A2AVmManagedDiskInputDetailsOutput{})
	pulumi.RegisterOutputType(A2AVmManagedDiskInputDetailsArrayOutput{})
	pulumi.RegisterOutputType(AddRecoveryServicesProviderInputPropertiesOutput{})
	pulumi.RegisterOutputType(AddRecoveryServicesProviderInputPropertiesPtrOutput{})
	pulumi.RegisterOutputType(AddVCenterRequestPropertiesOutput{})
	pulumi.RegisterOutputType(AddVCenterRequestPropertiesPtrOutput{})
	pulumi.RegisterOutputType(AzureFabricCreationInputOutput{})
	pulumi.RegisterOutputType(AzureFabricSpecificDetailsResponseOutput{})
	pulumi.RegisterOutputType(AzureFileshareProtectedItemOutput{})
	pulumi.RegisterOutputType(AzureFileshareProtectedItemExtendedInfoOutput{})
	pulumi.RegisterOutputType(AzureFileshareProtectedItemExtendedInfoPtrOutput{})
	pulumi.RegisterOutputType(AzureFileshareProtectedItemExtendedInfoResponseOutput{})
	pulumi.RegisterOutputType(AzureFileshareProtectedItemExtendedInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureFileshareProtectedItemResponseOutput{})
	pulumi.RegisterOutputType(AzureIaaSVMHealthDetailsResponseOutput{})
	pulumi.RegisterOutputType(AzureIaaSVMHealthDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureIaaSVMProtectedItemOutput{})
	pulumi.RegisterOutputType(AzureIaaSVMProtectedItemExtendedInfoOutput{})
	pulumi.RegisterOutputType(AzureIaaSVMProtectedItemExtendedInfoPtrOutput{})
	pulumi.RegisterOutputType(AzureIaaSVMProtectedItemExtendedInfoResponseOutput{})
	pulumi.RegisterOutputType(AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureIaaSVMProtectedItemResponseOutput{})
	pulumi.RegisterOutputType(AzureIaaSVMProtectionPolicyOutput{})
	pulumi.RegisterOutputType(AzureIaaSVMProtectionPolicyResponseOutput{})
	pulumi.RegisterOutputType(AzureRecoveryServiceVaultProtectionIntentOutput{})
	pulumi.RegisterOutputType(AzureRecoveryServiceVaultProtectionIntentResponseOutput{})
	pulumi.RegisterOutputType(AzureResourceProtectionIntentOutput{})
	pulumi.RegisterOutputType(AzureResourceProtectionIntentResponseOutput{})
	pulumi.RegisterOutputType(AzureSqlContainerOutput{})
	pulumi.RegisterOutputType(AzureSqlContainerResponseOutput{})
	pulumi.RegisterOutputType(AzureSqlProtectedItemOutput{})
	pulumi.RegisterOutputType(AzureSqlProtectedItemExtendedInfoOutput{})
	pulumi.RegisterOutputType(AzureSqlProtectedItemExtendedInfoPtrOutput{})
	pulumi.RegisterOutputType(AzureSqlProtectedItemExtendedInfoResponseOutput{})
	pulumi.RegisterOutputType(AzureSqlProtectedItemExtendedInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureSqlProtectedItemResponseOutput{})
	pulumi.RegisterOutputType(AzureSqlProtectionPolicyOutput{})
	pulumi.RegisterOutputType(AzureSqlProtectionPolicyResponseOutput{})
	pulumi.RegisterOutputType(AzureStorageContainerOutput{})
	pulumi.RegisterOutputType(AzureStorageContainerResponseOutput{})
	pulumi.RegisterOutputType(AzureToAzureCreateNetworkMappingInputOutput{})
	pulumi.RegisterOutputType(AzureToAzureNetworkMappingSettingsResponseOutput{})
	pulumi.RegisterOutputType(AzureToAzureVmSyncedConfigDetailsResponseOutput{})
	pulumi.RegisterOutputType(AzureToAzureVmSyncedConfigDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureVmDiskDetailsResponseOutput{})
	pulumi.RegisterOutputType(AzureVmDiskDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadProtectedItemOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadProtectedItemExtendedInfoOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadProtectedItemExtendedInfoPtrOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadProtectedItemExtendedInfoResponseOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadProtectedItemResponseOutput{})
	pulumi.RegisterOutputType(AzureWorkloadContainerOutput{})
	pulumi.RegisterOutputType(AzureWorkloadContainerExtendedInfoOutput{})
	pulumi.RegisterOutputType(AzureWorkloadContainerExtendedInfoPtrOutput{})
	pulumi.RegisterOutputType(AzureWorkloadContainerExtendedInfoResponseOutput{})
	pulumi.RegisterOutputType(AzureWorkloadContainerExtendedInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureWorkloadContainerResponseOutput{})
	pulumi.RegisterOutputType(ContainerIdentityInfoOutput{})
	pulumi.RegisterOutputType(ContainerIdentityInfoPtrOutput{})
	pulumi.RegisterOutputType(ContainerIdentityInfoResponseOutput{})
	pulumi.RegisterOutputType(ContainerIdentityInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(CreateNetworkMappingInputPropertiesOutput{})
	pulumi.RegisterOutputType(CreateNetworkMappingInputPropertiesPtrOutput{})
	pulumi.RegisterOutputType(CreatePolicyInputPropertiesOutput{})
	pulumi.RegisterOutputType(CreatePolicyInputPropertiesPtrOutput{})
	pulumi.RegisterOutputType(CreateProtectionContainerMappingInputPropertiesOutput{})
	pulumi.RegisterOutputType(CreateProtectionContainerMappingInputPropertiesPtrOutput{})
	pulumi.RegisterOutputType(CreateRecoveryPlanInputPropertiesOutput{})
	pulumi.RegisterOutputType(CreateRecoveryPlanInputPropertiesPtrOutput{})
	pulumi.RegisterOutputType(CurrentJobDetailsResponseOutput{})
	pulumi.RegisterOutputType(CurrentJobDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(CurrentScenarioDetailsResponseOutput{})
	pulumi.RegisterOutputType(CurrentScenarioDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(DPMContainerExtendedInfoOutput{})
	pulumi.RegisterOutputType(DPMContainerExtendedInfoPtrOutput{})
	pulumi.RegisterOutputType(DPMContainerExtendedInfoResponseOutput{})
	pulumi.RegisterOutputType(DPMContainerExtendedInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(DPMProtectedItemOutput{})
	pulumi.RegisterOutputType(DPMProtectedItemExtendedInfoOutput{})
	pulumi.RegisterOutputType(DPMProtectedItemExtendedInfoPtrOutput{})
	pulumi.RegisterOutputType(DPMProtectedItemExtendedInfoResponseOutput{})
	pulumi.RegisterOutputType(DPMProtectedItemExtendedInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(DPMProtectedItemResponseOutput{})
	pulumi.RegisterOutputType(DailyRetentionFormatOutput{})
	pulumi.RegisterOutputType(DailyRetentionFormatPtrOutput{})
	pulumi.RegisterOutputType(DailyRetentionFormatResponseOutput{})
	pulumi.RegisterOutputType(DailyRetentionFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(DailyRetentionScheduleOutput{})
	pulumi.RegisterOutputType(DailyRetentionSchedulePtrOutput{})
	pulumi.RegisterOutputType(DailyRetentionScheduleResponseOutput{})
	pulumi.RegisterOutputType(DailyRetentionScheduleResponsePtrOutput{})
	pulumi.RegisterOutputType(DataStoreResponseOutput{})
	pulumi.RegisterOutputType(DataStoreResponseArrayOutput{})
	pulumi.RegisterOutputType(DayOutput{})
	pulumi.RegisterOutputType(DayArrayOutput{})
	pulumi.RegisterOutputType(DayResponseOutput{})
	pulumi.RegisterOutputType(DayResponseArrayOutput{})
	pulumi.RegisterOutputType(DiskDetailsResponseOutput{})
	pulumi.RegisterOutputType(DiskDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(DiskEncryptionInfoOutput{})
	pulumi.RegisterOutputType(DiskEncryptionInfoPtrOutput{})
	pulumi.RegisterOutputType(DiskEncryptionKeyInfoOutput{})
	pulumi.RegisterOutputType(DiskEncryptionKeyInfoPtrOutput{})
	pulumi.RegisterOutputType(DiskExclusionPropertiesOutput{})
	pulumi.RegisterOutputType(DiskExclusionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DiskExclusionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(DiskExclusionPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(DistributedNodesInfoOutput{})
	pulumi.RegisterOutputType(DistributedNodesInfoArrayOutput{})
	pulumi.RegisterOutputType(DistributedNodesInfoResponseOutput{})
	pulumi.RegisterOutputType(DistributedNodesInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(DpmContainerOutput{})
	pulumi.RegisterOutputType(DpmContainerResponseOutput{})
	pulumi.RegisterOutputType(EnableMigrationInputPropertiesOutput{})
	pulumi.RegisterOutputType(EnableMigrationInputPropertiesPtrOutput{})
	pulumi.RegisterOutputType(EnableProtectionInputPropertiesOutput{})
	pulumi.RegisterOutputType(EnableProtectionInputPropertiesPtrOutput{})
	pulumi.RegisterOutputType(EncryptionDetailsResponseOutput{})
	pulumi.RegisterOutputType(EncryptionDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(ErrorDetailResponseOutput{})
	pulumi.RegisterOutputType(ErrorDetailResponsePtrOutput{})
	pulumi.RegisterOutputType(ExtendedPropertiesOutput{})
	pulumi.RegisterOutputType(ExtendedPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ExtendedPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ExtendedPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(FabricCreationInputPropertiesOutput{})
	pulumi.RegisterOutputType(FabricCreationInputPropertiesPtrOutput{})
	pulumi.RegisterOutputType(FabricPropertiesResponseOutput{})
	pulumi.RegisterOutputType(FabricPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(GenericContainerOutput{})
	pulumi.RegisterOutputType(GenericContainerExtendedInfoOutput{})
	pulumi.RegisterOutputType(GenericContainerExtendedInfoPtrOutput{})
	pulumi.RegisterOutputType(GenericContainerExtendedInfoResponseOutput{})
	pulumi.RegisterOutputType(GenericContainerExtendedInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(GenericContainerResponseOutput{})
	pulumi.RegisterOutputType(GenericProtectedItemOutput{})
	pulumi.RegisterOutputType(GenericProtectedItemResponseOutput{})
	pulumi.RegisterOutputType(HealthErrorResponseOutput{})
	pulumi.RegisterOutputType(HealthErrorResponseArrayOutput{})
	pulumi.RegisterOutputType(HyperVReplicaAzureEnableProtectionInputOutput{})
	pulumi.RegisterOutputType(HyperVReplicaAzurePolicyDetailsResponseOutput{})
	pulumi.RegisterOutputType(HyperVReplicaAzurePolicyInputOutput{})
	pulumi.RegisterOutputType(HyperVReplicaAzureReplicationDetailsResponseOutput{})
	pulumi.RegisterOutputType(HyperVReplicaBasePolicyDetailsResponseOutput{})
	pulumi.RegisterOutputType(HyperVReplicaBaseReplicationDetailsResponseOutput{})
	pulumi.RegisterOutputType(HyperVReplicaBluePolicyDetailsResponseOutput{})
	pulumi.RegisterOutputType(HyperVReplicaBluePolicyInputOutput{})
	pulumi.RegisterOutputType(HyperVReplicaBlueReplicationDetailsResponseOutput{})
	pulumi.RegisterOutputType(HyperVReplicaPolicyDetailsResponseOutput{})
	pulumi.RegisterOutputType(HyperVReplicaPolicyInputOutput{})
	pulumi.RegisterOutputType(HyperVReplicaReplicationDetailsResponseOutput{})
	pulumi.RegisterOutputType(HyperVSiteDetailsResponseOutput{})
	pulumi.RegisterOutputType(IPConfigResponseOutput{})
	pulumi.RegisterOutputType(IPConfigResponseArrayOutput{})
	pulumi.RegisterOutputType(IaaSVMContainerOutput{})
	pulumi.RegisterOutputType(IaaSVMContainerResponseOutput{})
	pulumi.RegisterOutputType(IdentityDataOutput{})
	pulumi.RegisterOutputType(IdentityDataPtrOutput{})
	pulumi.RegisterOutputType(IdentityDataResponseOutput{})
	pulumi.RegisterOutputType(IdentityDataResponsePtrOutput{})
	pulumi.RegisterOutputType(IdentityProviderDetailsResponseOutput{})
	pulumi.RegisterOutputType(IdentityProviderDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(IdentityProviderInputOutput{})
	pulumi.RegisterOutputType(IdentityProviderInputPtrOutput{})
	pulumi.RegisterOutputType(InMageAgentDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMageAgentDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(InMageAzureV2DiskInputDetailsOutput{})
	pulumi.RegisterOutputType(InMageAzureV2DiskInputDetailsArrayOutput{})
	pulumi.RegisterOutputType(InMageAzureV2EnableProtectionInputOutput{})
	pulumi.RegisterOutputType(InMageAzureV2ManagedDiskDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMageAzureV2ManagedDiskDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(InMageAzureV2PolicyDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMageAzureV2PolicyInputOutput{})
	pulumi.RegisterOutputType(InMageAzureV2ProtectedDiskDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMageAzureV2ProtectedDiskDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(InMageAzureV2ReplicationDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMageBasePolicyDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMageDiskExclusionInputOutput{})
	pulumi.RegisterOutputType(InMageDiskExclusionInputPtrOutput{})
	pulumi.RegisterOutputType(InMageDiskSignatureExclusionOptionsOutput{})
	pulumi.RegisterOutputType(InMageDiskSignatureExclusionOptionsArrayOutput{})
	pulumi.RegisterOutputType(InMageEnableProtectionInputOutput{})
	pulumi.RegisterOutputType(InMagePolicyDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMagePolicyInputOutput{})
	pulumi.RegisterOutputType(InMageProtectedDiskDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMageProtectedDiskDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(InMageReplicationDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMageVolumeExclusionOptionsOutput{})
	pulumi.RegisterOutputType(InMageVolumeExclusionOptionsArrayOutput{})
	pulumi.RegisterOutputType(InitialReplicationDetailsResponseOutput{})
	pulumi.RegisterOutputType(InitialReplicationDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(InnerHealthErrorResponseOutput{})
	pulumi.RegisterOutputType(InnerHealthErrorResponseArrayOutput{})
	pulumi.RegisterOutputType(InputEndpointResponseOutput{})
	pulumi.RegisterOutputType(InputEndpointResponseArrayOutput{})
	pulumi.RegisterOutputType(InquiryInfoOutput{})
	pulumi.RegisterOutputType(InquiryInfoPtrOutput{})
	pulumi.RegisterOutputType(InquiryInfoResponseOutput{})
	pulumi.RegisterOutputType(InquiryInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(InquiryValidationOutput{})
	pulumi.RegisterOutputType(InquiryValidationPtrOutput{})
	pulumi.RegisterOutputType(InquiryValidationResponseOutput{})
	pulumi.RegisterOutputType(InquiryValidationResponsePtrOutput{})
	pulumi.RegisterOutputType(KPIResourceHealthDetailsOutput{})
	pulumi.RegisterOutputType(KPIResourceHealthDetailsMapOutput{})
	pulumi.RegisterOutputType(KPIResourceHealthDetailsResponseOutput{})
	pulumi.RegisterOutputType(KPIResourceHealthDetailsResponseMapOutput{})
	pulumi.RegisterOutputType(KeyEncryptionKeyInfoOutput{})
	pulumi.RegisterOutputType(KeyEncryptionKeyInfoPtrOutput{})
	pulumi.RegisterOutputType(LongTermRetentionPolicyOutput{})
	pulumi.RegisterOutputType(LongTermRetentionPolicyResponseOutput{})
	pulumi.RegisterOutputType(LongTermSchedulePolicyOutput{})
	pulumi.RegisterOutputType(LongTermSchedulePolicyResponseOutput{})
	pulumi.RegisterOutputType(MABContainerHealthDetailsOutput{})
	pulumi.RegisterOutputType(MABContainerHealthDetailsArrayOutput{})
	pulumi.RegisterOutputType(MABContainerHealthDetailsResponseOutput{})
	pulumi.RegisterOutputType(MABContainerHealthDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(MabContainerOutput{})
	pulumi.RegisterOutputType(MabContainerExtendedInfoOutput{})
	pulumi.RegisterOutputType(MabContainerExtendedInfoPtrOutput{})
	pulumi.RegisterOutputType(MabContainerExtendedInfoResponseOutput{})
	pulumi.RegisterOutputType(MabContainerExtendedInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(MabContainerResponseOutput{})
	pulumi.RegisterOutputType(MabFileFolderProtectedItemOutput{})
	pulumi.RegisterOutputType(MabFileFolderProtectedItemExtendedInfoOutput{})
	pulumi.RegisterOutputType(MabFileFolderProtectedItemExtendedInfoPtrOutput{})
	pulumi.RegisterOutputType(MabFileFolderProtectedItemExtendedInfoResponseOutput{})
	pulumi.RegisterOutputType(MabFileFolderProtectedItemExtendedInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(MabFileFolderProtectedItemResponseOutput{})
	pulumi.RegisterOutputType(MabProtectionPolicyOutput{})
	pulumi.RegisterOutputType(MabProtectionPolicyResponseOutput{})
	pulumi.RegisterOutputType(MasterTargetServerResponseOutput{})
	pulumi.RegisterOutputType(MasterTargetServerResponseArrayOutput{})
	pulumi.RegisterOutputType(MigrationItemPropertiesResponseOutput{})
	pulumi.RegisterOutputType(MigrationItemPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(MobilityServiceUpdateResponseOutput{})
	pulumi.RegisterOutputType(MobilityServiceUpdateResponseArrayOutput{})
	pulumi.RegisterOutputType(MonthlyRetentionScheduleOutput{})
	pulumi.RegisterOutputType(MonthlyRetentionSchedulePtrOutput{})
	pulumi.RegisterOutputType(MonthlyRetentionScheduleResponseOutput{})
	pulumi.RegisterOutputType(MonthlyRetentionScheduleResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkMappingPropertiesResponseOutput{})
	pulumi.RegisterOutputType(NetworkMappingPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(OSDetailsResponseOutput{})
	pulumi.RegisterOutputType(OSDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(OSDiskDetailsResponseOutput{})
	pulumi.RegisterOutputType(OSDiskDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(PolicyPropertiesResponseOutput{})
	pulumi.RegisterOutputType(PolicyPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointOutput{})
	pulumi.RegisterOutputType(PrivateEndpointPtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionTypeOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionTypePtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionVaultPropertiesResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionVaultPropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStatePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponseOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponsePtrOutput{})
	pulumi.RegisterOutputType(ProcessServerResponseOutput{})
	pulumi.RegisterOutputType(ProcessServerResponseArrayOutput{})
	pulumi.RegisterOutputType(ProtectionContainerMappingPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ProtectionContainerMappingPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(RcmAzureMigrationPolicyDetailsResponseOutput{})
	pulumi.RegisterOutputType(RecoveryPlanA2ADetailsResponseOutput{})
	pulumi.RegisterOutputType(RecoveryPlanA2ADetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanA2AInputOutput{})
	pulumi.RegisterOutputType(RecoveryPlanA2AInputArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanActionOutput{})
	pulumi.RegisterOutputType(RecoveryPlanActionArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanActionResponseOutput{})
	pulumi.RegisterOutputType(RecoveryPlanActionResponseArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanAutomationRunbookActionDetailsResponseOutput{})
	pulumi.RegisterOutputType(RecoveryPlanGroupOutput{})
	pulumi.RegisterOutputType(RecoveryPlanGroupArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanGroupResponseOutput{})
	pulumi.RegisterOutputType(RecoveryPlanGroupResponseArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanManualActionDetailsResponseOutput{})
	pulumi.RegisterOutputType(RecoveryPlanPropertiesResponseOutput{})
	pulumi.RegisterOutputType(RecoveryPlanPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(RecoveryPlanProtectedItemOutput{})
	pulumi.RegisterOutputType(RecoveryPlanProtectedItemArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanProtectedItemResponseOutput{})
	pulumi.RegisterOutputType(RecoveryPlanProtectedItemResponseArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanScriptActionDetailsResponseOutput{})
	pulumi.RegisterOutputType(RecoveryServicesProviderPropertiesResponseOutput{})
	pulumi.RegisterOutputType(RecoveryServicesProviderPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ReplicationProtectedItemPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ReplicationProtectedItemPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceHealthDetailsResponseOutput{})
	pulumi.RegisterOutputType(ResourceHealthDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(RetentionDurationOutput{})
	pulumi.RegisterOutputType(RetentionDurationPtrOutput{})
	pulumi.RegisterOutputType(RetentionDurationResponseOutput{})
	pulumi.RegisterOutputType(RetentionDurationResponsePtrOutput{})
	pulumi.RegisterOutputType(RetentionVolumeResponseOutput{})
	pulumi.RegisterOutputType(RetentionVolumeResponseArrayOutput{})
	pulumi.RegisterOutputType(RunAsAccountResponseOutput{})
	pulumi.RegisterOutputType(RunAsAccountResponseArrayOutput{})
	pulumi.RegisterOutputType(SanEnableProtectionInputOutput{})
	pulumi.RegisterOutputType(SimpleRetentionPolicyOutput{})
	pulumi.RegisterOutputType(SimpleRetentionPolicyResponseOutput{})
	pulumi.RegisterOutputType(SimpleSchedulePolicyOutput{})
	pulumi.RegisterOutputType(SimpleSchedulePolicyResponseOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
	pulumi.RegisterOutputType(StorageClassificationMappingPropertiesResponseOutput{})
	pulumi.RegisterOutputType(StorageClassificationMappingPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(StorageMappingInputPropertiesOutput{})
	pulumi.RegisterOutputType(StorageMappingInputPropertiesPtrOutput{})
	pulumi.RegisterOutputType(UpgradeDetailsResponseOutput{})
	pulumi.RegisterOutputType(UpgradeDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(VCenterPropertiesResponseOutput{})
	pulumi.RegisterOutputType(VCenterPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(VMNicDetailsResponseOutput{})
	pulumi.RegisterOutputType(VMNicDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(VMwareCbtContainerMappingInputOutput{})
	pulumi.RegisterOutputType(VMwareCbtDiskInputOutput{})
	pulumi.RegisterOutputType(VMwareCbtDiskInputArrayOutput{})
	pulumi.RegisterOutputType(VMwareCbtEnableMigrationInputOutput{})
	pulumi.RegisterOutputType(VMwareCbtEnableMigrationInputPtrOutput{})
	pulumi.RegisterOutputType(VMwareCbtMigrationDetailsResponseOutput{})
	pulumi.RegisterOutputType(VMwareCbtMigrationDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(VMwareCbtNicDetailsResponseOutput{})
	pulumi.RegisterOutputType(VMwareCbtNicDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(VMwareCbtPolicyCreationInputOutput{})
	pulumi.RegisterOutputType(VMwareCbtProtectedDiskDetailsResponseOutput{})
	pulumi.RegisterOutputType(VMwareCbtProtectedDiskDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(VMwareCbtProtectionContainerMappingDetailsResponseOutput{})
	pulumi.RegisterOutputType(VMwareDetailsResponseOutput{})
	pulumi.RegisterOutputType(VMwareV2FabricCreationInputOutput{})
	pulumi.RegisterOutputType(VMwareV2FabricSpecificDetailsResponseOutput{})
	pulumi.RegisterOutputType(VaultPropertiesResponseOutput{})
	pulumi.RegisterOutputType(VaultPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(VersionDetailsResponseOutput{})
	pulumi.RegisterOutputType(VersionDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(VmmDetailsResponseOutput{})
	pulumi.RegisterOutputType(VmmToAzureCreateNetworkMappingInputOutput{})
	pulumi.RegisterOutputType(VmmToAzureNetworkMappingSettingsResponseOutput{})
	pulumi.RegisterOutputType(VmmToVmmCreateNetworkMappingInputOutput{})
	pulumi.RegisterOutputType(VmmToVmmNetworkMappingSettingsResponseOutput{})
	pulumi.RegisterOutputType(VmwareCbtPolicyDetailsResponseOutput{})
	pulumi.RegisterOutputType(WeeklyRetentionFormatOutput{})
	pulumi.RegisterOutputType(WeeklyRetentionFormatPtrOutput{})
	pulumi.RegisterOutputType(WeeklyRetentionFormatResponseOutput{})
	pulumi.RegisterOutputType(WeeklyRetentionFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(WeeklyRetentionScheduleOutput{})
	pulumi.RegisterOutputType(WeeklyRetentionSchedulePtrOutput{})
	pulumi.RegisterOutputType(WeeklyRetentionScheduleResponseOutput{})
	pulumi.RegisterOutputType(WeeklyRetentionScheduleResponsePtrOutput{})
	pulumi.RegisterOutputType(WorkloadInquiryDetailsOutput{})
	pulumi.RegisterOutputType(WorkloadInquiryDetailsArrayOutput{})
	pulumi.RegisterOutputType(WorkloadInquiryDetailsResponseOutput{})
	pulumi.RegisterOutputType(WorkloadInquiryDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(YearlyRetentionScheduleOutput{})
	pulumi.RegisterOutputType(YearlyRetentionSchedulePtrOutput{})
	pulumi.RegisterOutputType(YearlyRetentionScheduleResponseOutput{})
	pulumi.RegisterOutputType(YearlyRetentionScheduleResponsePtrOutput{})
}
