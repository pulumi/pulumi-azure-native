// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package recoveryservices

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Fabric definition.
type VaultReplicationFabric struct {
	pulumi.CustomResourceState

	// Resource Location
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// Resource Name
	Name pulumi.StringOutput `pulumi:"name"`
	// Fabric related data.
	Properties FabricPropertiesResponseOutput `pulumi:"properties"`
	// Resource Type
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewVaultReplicationFabric registers a new resource with the given unique name, arguments, and options.
func NewVaultReplicationFabric(ctx *pulumi.Context,
	name string, args *VaultReplicationFabricArgs, opts ...pulumi.ResourceOption) (*VaultReplicationFabric, error) {
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.ResourceName == nil {
		return nil, errors.New("missing required argument 'ResourceName'")
	}
	if args == nil {
		args = &VaultReplicationFabricArgs{}
	}
	var resource VaultReplicationFabric
	err := ctx.RegisterResource("azurerm:recoveryservices:VaultReplicationFabric", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVaultReplicationFabric gets an existing VaultReplicationFabric resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVaultReplicationFabric(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VaultReplicationFabricState, opts ...pulumi.ResourceOption) (*VaultReplicationFabric, error) {
	var resource VaultReplicationFabric
	err := ctx.ReadResource("azurerm:recoveryservices:VaultReplicationFabric", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VaultReplicationFabric resources.
type vaultReplicationFabricState struct {
	// Resource Location
	Location *string `pulumi:"location"`
	// Resource Name
	Name *string `pulumi:"name"`
	// Fabric related data.
	Properties *FabricPropertiesResponse `pulumi:"properties"`
	// Resource Type
	Type *string `pulumi:"type"`
}

type VaultReplicationFabricState struct {
	// Resource Location
	Location pulumi.StringPtrInput
	// Resource Name
	Name pulumi.StringPtrInput
	// Fabric related data.
	Properties FabricPropertiesResponsePtrInput
	// Resource Type
	Type pulumi.StringPtrInput
}

func (VaultReplicationFabricState) ElementType() reflect.Type {
	return reflect.TypeOf((*vaultReplicationFabricState)(nil)).Elem()
}

type vaultReplicationFabricArgs struct {
	// Name of the ASR fabric.
	Name string `pulumi:"name"`
	// Fabric creation input.
	Properties *FabricCreationInputProperties `pulumi:"properties"`
	// The name of the resource group where the recovery services vault is present.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the recovery services vault.
	ResourceName string `pulumi:"resourceName"`
}

// The set of arguments for constructing a VaultReplicationFabric resource.
type VaultReplicationFabricArgs struct {
	// Name of the ASR fabric.
	Name pulumi.StringInput
	// Fabric creation input.
	Properties FabricCreationInputPropertiesPtrInput
	// The name of the resource group where the recovery services vault is present.
	ResourceGroupName pulumi.StringInput
	// The name of the recovery services vault.
	ResourceName pulumi.StringInput
}

func (VaultReplicationFabricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vaultReplicationFabricArgs)(nil)).Elem()
}
