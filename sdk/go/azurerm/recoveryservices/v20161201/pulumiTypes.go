// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20161201

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Base class for container with backup items. Containers with specific workloads are derived from this class.
type ProtectionContainerType struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	ContainerType *string `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
}

// ProtectionContainerTypeInput is an input type that accepts ProtectionContainerTypeArgs and ProtectionContainerTypeOutput values.
// You can construct a concrete instance of `ProtectionContainerTypeInput` via:
//
//          ProtectionContainerTypeArgs{...}
type ProtectionContainerTypeInput interface {
	pulumi.Input

	ToProtectionContainerTypeOutput() ProtectionContainerTypeOutput
	ToProtectionContainerTypeOutputWithContext(context.Context) ProtectionContainerTypeOutput
}

// Base class for container with backup items. Containers with specific workloads are derived from this class.
type ProtectionContainerTypeArgs struct {
	// Type of backup management for the container.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	ContainerType pulumi.StringPtrInput `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus pulumi.StringPtrInput `pulumi:"healthStatus"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus pulumi.StringPtrInput `pulumi:"registrationStatus"`
}

func (ProtectionContainerTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionContainerType)(nil)).Elem()
}

func (i ProtectionContainerTypeArgs) ToProtectionContainerTypeOutput() ProtectionContainerTypeOutput {
	return i.ToProtectionContainerTypeOutputWithContext(context.Background())
}

func (i ProtectionContainerTypeArgs) ToProtectionContainerTypeOutputWithContext(ctx context.Context) ProtectionContainerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionContainerTypeOutput)
}

func (i ProtectionContainerTypeArgs) ToProtectionContainerTypePtrOutput() ProtectionContainerTypePtrOutput {
	return i.ToProtectionContainerTypePtrOutputWithContext(context.Background())
}

func (i ProtectionContainerTypeArgs) ToProtectionContainerTypePtrOutputWithContext(ctx context.Context) ProtectionContainerTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionContainerTypeOutput).ToProtectionContainerTypePtrOutputWithContext(ctx)
}

// ProtectionContainerTypePtrInput is an input type that accepts ProtectionContainerTypeArgs, ProtectionContainerTypePtr and ProtectionContainerTypePtrOutput values.
// You can construct a concrete instance of `ProtectionContainerTypePtrInput` via:
//
//          ProtectionContainerTypeArgs{...}
//
//  or:
//
//          nil
type ProtectionContainerTypePtrInput interface {
	pulumi.Input

	ToProtectionContainerTypePtrOutput() ProtectionContainerTypePtrOutput
	ToProtectionContainerTypePtrOutputWithContext(context.Context) ProtectionContainerTypePtrOutput
}

type protectionContainerTypePtrType ProtectionContainerTypeArgs

func ProtectionContainerTypePtr(v *ProtectionContainerTypeArgs) ProtectionContainerTypePtrInput {
	return (*protectionContainerTypePtrType)(v)
}

func (*protectionContainerTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtectionContainerType)(nil)).Elem()
}

func (i *protectionContainerTypePtrType) ToProtectionContainerTypePtrOutput() ProtectionContainerTypePtrOutput {
	return i.ToProtectionContainerTypePtrOutputWithContext(context.Background())
}

func (i *protectionContainerTypePtrType) ToProtectionContainerTypePtrOutputWithContext(ctx context.Context) ProtectionContainerTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionContainerTypePtrOutput)
}

// Base class for container with backup items. Containers with specific workloads are derived from this class.
type ProtectionContainerTypeOutput struct{ *pulumi.OutputState }

func (ProtectionContainerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionContainerType)(nil)).Elem()
}

func (o ProtectionContainerTypeOutput) ToProtectionContainerTypeOutput() ProtectionContainerTypeOutput {
	return o
}

func (o ProtectionContainerTypeOutput) ToProtectionContainerTypeOutputWithContext(ctx context.Context) ProtectionContainerTypeOutput {
	return o
}

func (o ProtectionContainerTypeOutput) ToProtectionContainerTypePtrOutput() ProtectionContainerTypePtrOutput {
	return o.ToProtectionContainerTypePtrOutputWithContext(context.Background())
}

func (o ProtectionContainerTypeOutput) ToProtectionContainerTypePtrOutputWithContext(ctx context.Context) ProtectionContainerTypePtrOutput {
	return o.ApplyT(func(v ProtectionContainerType) *ProtectionContainerType {
		return &v
	}).(ProtectionContainerTypePtrOutput)
}

// Type of backup management for the container.
func (o ProtectionContainerTypeOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerType) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
func (o ProtectionContainerTypeOutput) ContainerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerType) *string { return v.ContainerType }).(pulumi.StringPtrOutput)
}

// Friendly name of the container.
func (o ProtectionContainerTypeOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerType) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o ProtectionContainerTypeOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerType) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o ProtectionContainerTypeOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerType) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

type ProtectionContainerTypePtrOutput struct{ *pulumi.OutputState }

func (ProtectionContainerTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtectionContainerType)(nil)).Elem()
}

func (o ProtectionContainerTypePtrOutput) ToProtectionContainerTypePtrOutput() ProtectionContainerTypePtrOutput {
	return o
}

func (o ProtectionContainerTypePtrOutput) ToProtectionContainerTypePtrOutputWithContext(ctx context.Context) ProtectionContainerTypePtrOutput {
	return o
}

func (o ProtectionContainerTypePtrOutput) Elem() ProtectionContainerTypeOutput {
	return o.ApplyT(func(v *ProtectionContainerType) ProtectionContainerType { return *v }).(ProtectionContainerTypeOutput)
}

// Type of backup management for the container.
func (o ProtectionContainerTypePtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionContainerType) *string {
		if v == nil {
			return nil
		}
		return v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
func (o ProtectionContainerTypePtrOutput) ContainerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionContainerType) *string {
		if v == nil {
			return nil
		}
		return v.ContainerType
	}).(pulumi.StringPtrOutput)
}

// Friendly name of the container.
func (o ProtectionContainerTypePtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionContainerType) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o ProtectionContainerTypePtrOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionContainerType) *string {
		if v == nil {
			return nil
		}
		return v.HealthStatus
	}).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o ProtectionContainerTypePtrOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionContainerType) *string {
		if v == nil {
			return nil
		}
		return v.RegistrationStatus
	}).(pulumi.StringPtrOutput)
}

// Base class for container with backup items. Containers with specific workloads are derived from this class.
type ProtectionContainerResponse struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	ContainerType *string `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
}

// ProtectionContainerResponseInput is an input type that accepts ProtectionContainerResponseArgs and ProtectionContainerResponseOutput values.
// You can construct a concrete instance of `ProtectionContainerResponseInput` via:
//
//          ProtectionContainerResponseArgs{...}
type ProtectionContainerResponseInput interface {
	pulumi.Input

	ToProtectionContainerResponseOutput() ProtectionContainerResponseOutput
	ToProtectionContainerResponseOutputWithContext(context.Context) ProtectionContainerResponseOutput
}

// Base class for container with backup items. Containers with specific workloads are derived from this class.
type ProtectionContainerResponseArgs struct {
	// Type of backup management for the container.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	ContainerType pulumi.StringPtrInput `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus pulumi.StringPtrInput `pulumi:"healthStatus"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus pulumi.StringPtrInput `pulumi:"registrationStatus"`
}

func (ProtectionContainerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionContainerResponse)(nil)).Elem()
}

func (i ProtectionContainerResponseArgs) ToProtectionContainerResponseOutput() ProtectionContainerResponseOutput {
	return i.ToProtectionContainerResponseOutputWithContext(context.Background())
}

func (i ProtectionContainerResponseArgs) ToProtectionContainerResponseOutputWithContext(ctx context.Context) ProtectionContainerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionContainerResponseOutput)
}

func (i ProtectionContainerResponseArgs) ToProtectionContainerResponsePtrOutput() ProtectionContainerResponsePtrOutput {
	return i.ToProtectionContainerResponsePtrOutputWithContext(context.Background())
}

func (i ProtectionContainerResponseArgs) ToProtectionContainerResponsePtrOutputWithContext(ctx context.Context) ProtectionContainerResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionContainerResponseOutput).ToProtectionContainerResponsePtrOutputWithContext(ctx)
}

// ProtectionContainerResponsePtrInput is an input type that accepts ProtectionContainerResponseArgs, ProtectionContainerResponsePtr and ProtectionContainerResponsePtrOutput values.
// You can construct a concrete instance of `ProtectionContainerResponsePtrInput` via:
//
//          ProtectionContainerResponseArgs{...}
//
//  or:
//
//          nil
type ProtectionContainerResponsePtrInput interface {
	pulumi.Input

	ToProtectionContainerResponsePtrOutput() ProtectionContainerResponsePtrOutput
	ToProtectionContainerResponsePtrOutputWithContext(context.Context) ProtectionContainerResponsePtrOutput
}

type protectionContainerResponsePtrType ProtectionContainerResponseArgs

func ProtectionContainerResponsePtr(v *ProtectionContainerResponseArgs) ProtectionContainerResponsePtrInput {
	return (*protectionContainerResponsePtrType)(v)
}

func (*protectionContainerResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtectionContainerResponse)(nil)).Elem()
}

func (i *protectionContainerResponsePtrType) ToProtectionContainerResponsePtrOutput() ProtectionContainerResponsePtrOutput {
	return i.ToProtectionContainerResponsePtrOutputWithContext(context.Background())
}

func (i *protectionContainerResponsePtrType) ToProtectionContainerResponsePtrOutputWithContext(ctx context.Context) ProtectionContainerResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionContainerResponsePtrOutput)
}

// Base class for container with backup items. Containers with specific workloads are derived from this class.
type ProtectionContainerResponseOutput struct{ *pulumi.OutputState }

func (ProtectionContainerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionContainerResponse)(nil)).Elem()
}

func (o ProtectionContainerResponseOutput) ToProtectionContainerResponseOutput() ProtectionContainerResponseOutput {
	return o
}

func (o ProtectionContainerResponseOutput) ToProtectionContainerResponseOutputWithContext(ctx context.Context) ProtectionContainerResponseOutput {
	return o
}

func (o ProtectionContainerResponseOutput) ToProtectionContainerResponsePtrOutput() ProtectionContainerResponsePtrOutput {
	return o.ToProtectionContainerResponsePtrOutputWithContext(context.Background())
}

func (o ProtectionContainerResponseOutput) ToProtectionContainerResponsePtrOutputWithContext(ctx context.Context) ProtectionContainerResponsePtrOutput {
	return o.ApplyT(func(v ProtectionContainerResponse) *ProtectionContainerResponse {
		return &v
	}).(ProtectionContainerResponsePtrOutput)
}

// Type of backup management for the container.
func (o ProtectionContainerResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
func (o ProtectionContainerResponseOutput) ContainerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerResponse) *string { return v.ContainerType }).(pulumi.StringPtrOutput)
}

// Friendly name of the container.
func (o ProtectionContainerResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o ProtectionContainerResponseOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerResponse) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o ProtectionContainerResponseOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerResponse) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

type ProtectionContainerResponsePtrOutput struct{ *pulumi.OutputState }

func (ProtectionContainerResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtectionContainerResponse)(nil)).Elem()
}

func (o ProtectionContainerResponsePtrOutput) ToProtectionContainerResponsePtrOutput() ProtectionContainerResponsePtrOutput {
	return o
}

func (o ProtectionContainerResponsePtrOutput) ToProtectionContainerResponsePtrOutputWithContext(ctx context.Context) ProtectionContainerResponsePtrOutput {
	return o
}

func (o ProtectionContainerResponsePtrOutput) Elem() ProtectionContainerResponseOutput {
	return o.ApplyT(func(v *ProtectionContainerResponse) ProtectionContainerResponse { return *v }).(ProtectionContainerResponseOutput)
}

// Type of backup management for the container.
func (o ProtectionContainerResponsePtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionContainerResponse) *string {
		if v == nil {
			return nil
		}
		return v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
func (o ProtectionContainerResponsePtrOutput) ContainerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionContainerResponse) *string {
		if v == nil {
			return nil
		}
		return v.ContainerType
	}).(pulumi.StringPtrOutput)
}

// Friendly name of the container.
func (o ProtectionContainerResponsePtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionContainerResponse) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o ProtectionContainerResponsePtrOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionContainerResponse) *string {
		if v == nil {
			return nil
		}
		return v.HealthStatus
	}).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o ProtectionContainerResponsePtrOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionContainerResponse) *string {
		if v == nil {
			return nil
		}
		return v.RegistrationStatus
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ProtectionContainerTypeOutput{})
	pulumi.RegisterOutputType(ProtectionContainerTypePtrOutput{})
	pulumi.RegisterOutputType(ProtectionContainerResponseOutput{})
	pulumi.RegisterOutputType(ProtectionContainerResponsePtrOutput{})
}
