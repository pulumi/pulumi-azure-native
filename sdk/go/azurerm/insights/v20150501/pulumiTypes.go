// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20150501

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Properties that define an Analytics item that is associated to an Application Insights component.
type AnalyticsItemType struct {
	// The content of this item
	Content *string `pulumi:"Content"`
	// Internally assigned unique id of the item definition.
	Id *string `pulumi:"Id"`
	// The user-defined name of the item.
	Name *string `pulumi:"Name"`
	// A set of properties that can be defined in the context of a specific item type. Each type may have its own properties.
	Properties *ApplicationInsightsComponentAnalyticsItemPropertiesResponse `pulumi:"Properties"`
	// Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component.
	Scope *string `pulumi:"Scope"`
	// Date and time in UTC when this item was created.
	TimeCreated string `pulumi:"TimeCreated"`
	// Date and time in UTC of the last modification that was made to this item.
	TimeModified string `pulumi:"TimeModified"`
	// Enum indicating the type of the Analytics item.
	Type *string `pulumi:"Type"`
	// This instance's version of the data model. This can change as new features are added.
	Version string `pulumi:"Version"`
}

// AnalyticsItemTypeInput is an input type that accepts AnalyticsItemTypeArgs and AnalyticsItemTypeOutput values.
// You can construct a concrete instance of `AnalyticsItemTypeInput` via:
//
//          AnalyticsItemTypeArgs{...}
type AnalyticsItemTypeInput interface {
	pulumi.Input

	ToAnalyticsItemTypeOutput() AnalyticsItemTypeOutput
	ToAnalyticsItemTypeOutputWithContext(context.Context) AnalyticsItemTypeOutput
}

// Properties that define an Analytics item that is associated to an Application Insights component.
type AnalyticsItemTypeArgs struct {
	// The content of this item
	Content pulumi.StringPtrInput `pulumi:"Content"`
	// Internally assigned unique id of the item definition.
	Id pulumi.StringPtrInput `pulumi:"Id"`
	// The user-defined name of the item.
	Name pulumi.StringPtrInput `pulumi:"Name"`
	// A set of properties that can be defined in the context of a specific item type. Each type may have its own properties.
	Properties ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrInput `pulumi:"Properties"`
	// Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component.
	Scope pulumi.StringPtrInput `pulumi:"Scope"`
	// Date and time in UTC when this item was created.
	TimeCreated pulumi.StringInput `pulumi:"TimeCreated"`
	// Date and time in UTC of the last modification that was made to this item.
	TimeModified pulumi.StringInput `pulumi:"TimeModified"`
	// Enum indicating the type of the Analytics item.
	Type pulumi.StringPtrInput `pulumi:"Type"`
	// This instance's version of the data model. This can change as new features are added.
	Version pulumi.StringInput `pulumi:"Version"`
}

func (AnalyticsItemTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsItemType)(nil)).Elem()
}

func (i AnalyticsItemTypeArgs) ToAnalyticsItemTypeOutput() AnalyticsItemTypeOutput {
	return i.ToAnalyticsItemTypeOutputWithContext(context.Background())
}

func (i AnalyticsItemTypeArgs) ToAnalyticsItemTypeOutputWithContext(ctx context.Context) AnalyticsItemTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsItemTypeOutput)
}

// Properties that define an Analytics item that is associated to an Application Insights component.
type AnalyticsItemTypeOutput struct{ *pulumi.OutputState }

func (AnalyticsItemTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsItemType)(nil)).Elem()
}

func (o AnalyticsItemTypeOutput) ToAnalyticsItemTypeOutput() AnalyticsItemTypeOutput {
	return o
}

func (o AnalyticsItemTypeOutput) ToAnalyticsItemTypeOutputWithContext(ctx context.Context) AnalyticsItemTypeOutput {
	return o
}

// The content of this item
func (o AnalyticsItemTypeOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsItemType) *string { return v.Content }).(pulumi.StringPtrOutput)
}

// Internally assigned unique id of the item definition.
func (o AnalyticsItemTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsItemType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The user-defined name of the item.
func (o AnalyticsItemTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsItemType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A set of properties that can be defined in the context of a specific item type. Each type may have its own properties.
func (o AnalyticsItemTypeOutput) Properties() ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput {
	return o.ApplyT(func(v AnalyticsItemType) *ApplicationInsightsComponentAnalyticsItemPropertiesResponse {
		return v.Properties
	}).(ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput)
}

// Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component.
func (o AnalyticsItemTypeOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsItemType) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// Date and time in UTC when this item was created.
func (o AnalyticsItemTypeOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsItemType) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// Date and time in UTC of the last modification that was made to this item.
func (o AnalyticsItemTypeOutput) TimeModified() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsItemType) string { return v.TimeModified }).(pulumi.StringOutput)
}

// Enum indicating the type of the Analytics item.
func (o AnalyticsItemTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsItemType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// This instance's version of the data model. This can change as new features are added.
func (o AnalyticsItemTypeOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsItemType) string { return v.Version }).(pulumi.StringOutput)
}

// A set of properties that can be defined in the context of a specific item type. Each type may have its own properties.
type ApplicationInsightsComponentAnalyticsItemProperties struct {
	// A function alias, used when the type of the item is Function
	FunctionAlias *string `pulumi:"functionAlias"`
}

// ApplicationInsightsComponentAnalyticsItemPropertiesInput is an input type that accepts ApplicationInsightsComponentAnalyticsItemPropertiesArgs and ApplicationInsightsComponentAnalyticsItemPropertiesOutput values.
// You can construct a concrete instance of `ApplicationInsightsComponentAnalyticsItemPropertiesInput` via:
//
//          ApplicationInsightsComponentAnalyticsItemPropertiesArgs{...}
type ApplicationInsightsComponentAnalyticsItemPropertiesInput interface {
	pulumi.Input

	ToApplicationInsightsComponentAnalyticsItemPropertiesOutput() ApplicationInsightsComponentAnalyticsItemPropertiesOutput
	ToApplicationInsightsComponentAnalyticsItemPropertiesOutputWithContext(context.Context) ApplicationInsightsComponentAnalyticsItemPropertiesOutput
}

// A set of properties that can be defined in the context of a specific item type. Each type may have its own properties.
type ApplicationInsightsComponentAnalyticsItemPropertiesArgs struct {
	// A function alias, used when the type of the item is Function
	FunctionAlias pulumi.StringPtrInput `pulumi:"functionAlias"`
}

func (ApplicationInsightsComponentAnalyticsItemPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInsightsComponentAnalyticsItemProperties)(nil)).Elem()
}

func (i ApplicationInsightsComponentAnalyticsItemPropertiesArgs) ToApplicationInsightsComponentAnalyticsItemPropertiesOutput() ApplicationInsightsComponentAnalyticsItemPropertiesOutput {
	return i.ToApplicationInsightsComponentAnalyticsItemPropertiesOutputWithContext(context.Background())
}

func (i ApplicationInsightsComponentAnalyticsItemPropertiesArgs) ToApplicationInsightsComponentAnalyticsItemPropertiesOutputWithContext(ctx context.Context) ApplicationInsightsComponentAnalyticsItemPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInsightsComponentAnalyticsItemPropertiesOutput)
}

func (i ApplicationInsightsComponentAnalyticsItemPropertiesArgs) ToApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput() ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput {
	return i.ToApplicationInsightsComponentAnalyticsItemPropertiesPtrOutputWithContext(context.Background())
}

func (i ApplicationInsightsComponentAnalyticsItemPropertiesArgs) ToApplicationInsightsComponentAnalyticsItemPropertiesPtrOutputWithContext(ctx context.Context) ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInsightsComponentAnalyticsItemPropertiesOutput).ToApplicationInsightsComponentAnalyticsItemPropertiesPtrOutputWithContext(ctx)
}

// ApplicationInsightsComponentAnalyticsItemPropertiesPtrInput is an input type that accepts ApplicationInsightsComponentAnalyticsItemPropertiesArgs, ApplicationInsightsComponentAnalyticsItemPropertiesPtr and ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput values.
// You can construct a concrete instance of `ApplicationInsightsComponentAnalyticsItemPropertiesPtrInput` via:
//
//          ApplicationInsightsComponentAnalyticsItemPropertiesArgs{...}
//
//  or:
//
//          nil
type ApplicationInsightsComponentAnalyticsItemPropertiesPtrInput interface {
	pulumi.Input

	ToApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput() ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput
	ToApplicationInsightsComponentAnalyticsItemPropertiesPtrOutputWithContext(context.Context) ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput
}

type applicationInsightsComponentAnalyticsItemPropertiesPtrType ApplicationInsightsComponentAnalyticsItemPropertiesArgs

func ApplicationInsightsComponentAnalyticsItemPropertiesPtr(v *ApplicationInsightsComponentAnalyticsItemPropertiesArgs) ApplicationInsightsComponentAnalyticsItemPropertiesPtrInput {
	return (*applicationInsightsComponentAnalyticsItemPropertiesPtrType)(v)
}

func (*applicationInsightsComponentAnalyticsItemPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationInsightsComponentAnalyticsItemProperties)(nil)).Elem()
}

func (i *applicationInsightsComponentAnalyticsItemPropertiesPtrType) ToApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput() ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput {
	return i.ToApplicationInsightsComponentAnalyticsItemPropertiesPtrOutputWithContext(context.Background())
}

func (i *applicationInsightsComponentAnalyticsItemPropertiesPtrType) ToApplicationInsightsComponentAnalyticsItemPropertiesPtrOutputWithContext(ctx context.Context) ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput)
}

// A set of properties that can be defined in the context of a specific item type. Each type may have its own properties.
type ApplicationInsightsComponentAnalyticsItemPropertiesOutput struct{ *pulumi.OutputState }

func (ApplicationInsightsComponentAnalyticsItemPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInsightsComponentAnalyticsItemProperties)(nil)).Elem()
}

func (o ApplicationInsightsComponentAnalyticsItemPropertiesOutput) ToApplicationInsightsComponentAnalyticsItemPropertiesOutput() ApplicationInsightsComponentAnalyticsItemPropertiesOutput {
	return o
}

func (o ApplicationInsightsComponentAnalyticsItemPropertiesOutput) ToApplicationInsightsComponentAnalyticsItemPropertiesOutputWithContext(ctx context.Context) ApplicationInsightsComponentAnalyticsItemPropertiesOutput {
	return o
}

func (o ApplicationInsightsComponentAnalyticsItemPropertiesOutput) ToApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput() ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput {
	return o.ToApplicationInsightsComponentAnalyticsItemPropertiesPtrOutputWithContext(context.Background())
}

func (o ApplicationInsightsComponentAnalyticsItemPropertiesOutput) ToApplicationInsightsComponentAnalyticsItemPropertiesPtrOutputWithContext(ctx context.Context) ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentAnalyticsItemProperties) *ApplicationInsightsComponentAnalyticsItemProperties {
		return &v
	}).(ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput)
}

// A function alias, used when the type of the item is Function
func (o ApplicationInsightsComponentAnalyticsItemPropertiesOutput) FunctionAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentAnalyticsItemProperties) *string { return v.FunctionAlias }).(pulumi.StringPtrOutput)
}

type ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationInsightsComponentAnalyticsItemProperties)(nil)).Elem()
}

func (o ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput) ToApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput() ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput {
	return o
}

func (o ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput) ToApplicationInsightsComponentAnalyticsItemPropertiesPtrOutputWithContext(ctx context.Context) ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput {
	return o
}

func (o ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput) Elem() ApplicationInsightsComponentAnalyticsItemPropertiesOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentAnalyticsItemProperties) ApplicationInsightsComponentAnalyticsItemProperties {
		return *v
	}).(ApplicationInsightsComponentAnalyticsItemPropertiesOutput)
}

// A function alias, used when the type of the item is Function
func (o ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput) FunctionAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentAnalyticsItemProperties) *string {
		if v == nil {
			return nil
		}
		return v.FunctionAlias
	}).(pulumi.StringPtrOutput)
}

// A set of properties that can be defined in the context of a specific item type. Each type may have its own properties.
type ApplicationInsightsComponentAnalyticsItemPropertiesResponse struct {
	// A function alias, used when the type of the item is Function
	FunctionAlias *string `pulumi:"functionAlias"`
}

// ApplicationInsightsComponentAnalyticsItemPropertiesResponseInput is an input type that accepts ApplicationInsightsComponentAnalyticsItemPropertiesResponseArgs and ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput values.
// You can construct a concrete instance of `ApplicationInsightsComponentAnalyticsItemPropertiesResponseInput` via:
//
//          ApplicationInsightsComponentAnalyticsItemPropertiesResponseArgs{...}
type ApplicationInsightsComponentAnalyticsItemPropertiesResponseInput interface {
	pulumi.Input

	ToApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput() ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput
	ToApplicationInsightsComponentAnalyticsItemPropertiesResponseOutputWithContext(context.Context) ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput
}

// A set of properties that can be defined in the context of a specific item type. Each type may have its own properties.
type ApplicationInsightsComponentAnalyticsItemPropertiesResponseArgs struct {
	// A function alias, used when the type of the item is Function
	FunctionAlias pulumi.StringPtrInput `pulumi:"functionAlias"`
}

func (ApplicationInsightsComponentAnalyticsItemPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInsightsComponentAnalyticsItemPropertiesResponse)(nil)).Elem()
}

func (i ApplicationInsightsComponentAnalyticsItemPropertiesResponseArgs) ToApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput() ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput {
	return i.ToApplicationInsightsComponentAnalyticsItemPropertiesResponseOutputWithContext(context.Background())
}

func (i ApplicationInsightsComponentAnalyticsItemPropertiesResponseArgs) ToApplicationInsightsComponentAnalyticsItemPropertiesResponseOutputWithContext(ctx context.Context) ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput)
}

func (i ApplicationInsightsComponentAnalyticsItemPropertiesResponseArgs) ToApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput() ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput {
	return i.ToApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationInsightsComponentAnalyticsItemPropertiesResponseArgs) ToApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutputWithContext(ctx context.Context) ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput).ToApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutputWithContext(ctx)
}

// ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrInput is an input type that accepts ApplicationInsightsComponentAnalyticsItemPropertiesResponseArgs, ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtr and ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrInput` via:
//
//          ApplicationInsightsComponentAnalyticsItemPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrInput interface {
	pulumi.Input

	ToApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput() ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput
	ToApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutputWithContext(context.Context) ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput
}

type applicationInsightsComponentAnalyticsItemPropertiesResponsePtrType ApplicationInsightsComponentAnalyticsItemPropertiesResponseArgs

func ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtr(v *ApplicationInsightsComponentAnalyticsItemPropertiesResponseArgs) ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrInput {
	return (*applicationInsightsComponentAnalyticsItemPropertiesResponsePtrType)(v)
}

func (*applicationInsightsComponentAnalyticsItemPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationInsightsComponentAnalyticsItemPropertiesResponse)(nil)).Elem()
}

func (i *applicationInsightsComponentAnalyticsItemPropertiesResponsePtrType) ToApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput() ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput {
	return i.ToApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *applicationInsightsComponentAnalyticsItemPropertiesResponsePtrType) ToApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutputWithContext(ctx context.Context) ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput)
}

// A set of properties that can be defined in the context of a specific item type. Each type may have its own properties.
type ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInsightsComponentAnalyticsItemPropertiesResponse)(nil)).Elem()
}

func (o ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput) ToApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput() ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput {
	return o
}

func (o ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput) ToApplicationInsightsComponentAnalyticsItemPropertiesResponseOutputWithContext(ctx context.Context) ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput {
	return o
}

func (o ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput) ToApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput() ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput {
	return o.ToApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput) ToApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutputWithContext(ctx context.Context) ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentAnalyticsItemPropertiesResponse) *ApplicationInsightsComponentAnalyticsItemPropertiesResponse {
		return &v
	}).(ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput)
}

// A function alias, used when the type of the item is Function
func (o ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput) FunctionAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentAnalyticsItemPropertiesResponse) *string { return v.FunctionAlias }).(pulumi.StringPtrOutput)
}

type ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationInsightsComponentAnalyticsItemPropertiesResponse)(nil)).Elem()
}

func (o ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput) ToApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput() ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput {
	return o
}

func (o ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput) ToApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutputWithContext(ctx context.Context) ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput {
	return o
}

func (o ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput) Elem() ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentAnalyticsItemPropertiesResponse) ApplicationInsightsComponentAnalyticsItemPropertiesResponse {
		return *v
	}).(ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput)
}

// A function alias, used when the type of the item is Function
func (o ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput) FunctionAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentAnalyticsItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.FunctionAlias
	}).(pulumi.StringPtrOutput)
}

// Properties that define an Application Insights component resource.
type ApplicationInsightsComponentProperties struct {
	// Type of application being monitored.
	Application_Type string `pulumi:"Application_Type"`
	// Disable IP masking.
	DisableIpMasking *bool `pulumi:"DisableIpMasking"`
	// Used by the Application Insights system to determine what kind of flow this component was created by. This is to be set to 'Bluefield' when creating/updating a component via the REST API.
	Flow_Type *string `pulumi:"Flow_Type"`
	// The unique application ID created when a new application is added to HockeyApp, used for communications with HockeyApp.
	HockeyAppId *string `pulumi:"HockeyAppId"`
	// Purge data immediately after 30 days.
	ImmediatePurgeDataOn30Days *bool `pulumi:"ImmediatePurgeDataOn30Days"`
	// Indicates the flow of the ingestion.
	IngestionMode *string `pulumi:"IngestionMode"`
	// Describes what tool created this Application Insights component. Customers using this API should set this to the default 'rest'.
	Request_Source *string `pulumi:"Request_Source"`
	// Retention period in days.
	RetentionInDays *int `pulumi:"RetentionInDays"`
	// Percentage of the data produced by the application being monitored that is being sampled for Application Insights telemetry.
	SamplingPercentage *float64 `pulumi:"SamplingPercentage"`
}

// ApplicationInsightsComponentPropertiesInput is an input type that accepts ApplicationInsightsComponentPropertiesArgs and ApplicationInsightsComponentPropertiesOutput values.
// You can construct a concrete instance of `ApplicationInsightsComponentPropertiesInput` via:
//
//          ApplicationInsightsComponentPropertiesArgs{...}
type ApplicationInsightsComponentPropertiesInput interface {
	pulumi.Input

	ToApplicationInsightsComponentPropertiesOutput() ApplicationInsightsComponentPropertiesOutput
	ToApplicationInsightsComponentPropertiesOutputWithContext(context.Context) ApplicationInsightsComponentPropertiesOutput
}

// Properties that define an Application Insights component resource.
type ApplicationInsightsComponentPropertiesArgs struct {
	// Type of application being monitored.
	Application_Type pulumi.StringInput `pulumi:"Application_Type"`
	// Disable IP masking.
	DisableIpMasking pulumi.BoolPtrInput `pulumi:"DisableIpMasking"`
	// Used by the Application Insights system to determine what kind of flow this component was created by. This is to be set to 'Bluefield' when creating/updating a component via the REST API.
	Flow_Type pulumi.StringPtrInput `pulumi:"Flow_Type"`
	// The unique application ID created when a new application is added to HockeyApp, used for communications with HockeyApp.
	HockeyAppId pulumi.StringPtrInput `pulumi:"HockeyAppId"`
	// Purge data immediately after 30 days.
	ImmediatePurgeDataOn30Days pulumi.BoolPtrInput `pulumi:"ImmediatePurgeDataOn30Days"`
	// Indicates the flow of the ingestion.
	IngestionMode pulumi.StringPtrInput `pulumi:"IngestionMode"`
	// Describes what tool created this Application Insights component. Customers using this API should set this to the default 'rest'.
	Request_Source pulumi.StringPtrInput `pulumi:"Request_Source"`
	// Retention period in days.
	RetentionInDays pulumi.IntPtrInput `pulumi:"RetentionInDays"`
	// Percentage of the data produced by the application being monitored that is being sampled for Application Insights telemetry.
	SamplingPercentage pulumi.Float64PtrInput `pulumi:"SamplingPercentage"`
}

func (ApplicationInsightsComponentPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInsightsComponentProperties)(nil)).Elem()
}

func (i ApplicationInsightsComponentPropertiesArgs) ToApplicationInsightsComponentPropertiesOutput() ApplicationInsightsComponentPropertiesOutput {
	return i.ToApplicationInsightsComponentPropertiesOutputWithContext(context.Background())
}

func (i ApplicationInsightsComponentPropertiesArgs) ToApplicationInsightsComponentPropertiesOutputWithContext(ctx context.Context) ApplicationInsightsComponentPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInsightsComponentPropertiesOutput)
}

func (i ApplicationInsightsComponentPropertiesArgs) ToApplicationInsightsComponentPropertiesPtrOutput() ApplicationInsightsComponentPropertiesPtrOutput {
	return i.ToApplicationInsightsComponentPropertiesPtrOutputWithContext(context.Background())
}

func (i ApplicationInsightsComponentPropertiesArgs) ToApplicationInsightsComponentPropertiesPtrOutputWithContext(ctx context.Context) ApplicationInsightsComponentPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInsightsComponentPropertiesOutput).ToApplicationInsightsComponentPropertiesPtrOutputWithContext(ctx)
}

// ApplicationInsightsComponentPropertiesPtrInput is an input type that accepts ApplicationInsightsComponentPropertiesArgs, ApplicationInsightsComponentPropertiesPtr and ApplicationInsightsComponentPropertiesPtrOutput values.
// You can construct a concrete instance of `ApplicationInsightsComponentPropertiesPtrInput` via:
//
//          ApplicationInsightsComponentPropertiesArgs{...}
//
//  or:
//
//          nil
type ApplicationInsightsComponentPropertiesPtrInput interface {
	pulumi.Input

	ToApplicationInsightsComponentPropertiesPtrOutput() ApplicationInsightsComponentPropertiesPtrOutput
	ToApplicationInsightsComponentPropertiesPtrOutputWithContext(context.Context) ApplicationInsightsComponentPropertiesPtrOutput
}

type applicationInsightsComponentPropertiesPtrType ApplicationInsightsComponentPropertiesArgs

func ApplicationInsightsComponentPropertiesPtr(v *ApplicationInsightsComponentPropertiesArgs) ApplicationInsightsComponentPropertiesPtrInput {
	return (*applicationInsightsComponentPropertiesPtrType)(v)
}

func (*applicationInsightsComponentPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationInsightsComponentProperties)(nil)).Elem()
}

func (i *applicationInsightsComponentPropertiesPtrType) ToApplicationInsightsComponentPropertiesPtrOutput() ApplicationInsightsComponentPropertiesPtrOutput {
	return i.ToApplicationInsightsComponentPropertiesPtrOutputWithContext(context.Background())
}

func (i *applicationInsightsComponentPropertiesPtrType) ToApplicationInsightsComponentPropertiesPtrOutputWithContext(ctx context.Context) ApplicationInsightsComponentPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInsightsComponentPropertiesPtrOutput)
}

// Properties that define an Application Insights component resource.
type ApplicationInsightsComponentPropertiesOutput struct{ *pulumi.OutputState }

func (ApplicationInsightsComponentPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInsightsComponentProperties)(nil)).Elem()
}

func (o ApplicationInsightsComponentPropertiesOutput) ToApplicationInsightsComponentPropertiesOutput() ApplicationInsightsComponentPropertiesOutput {
	return o
}

func (o ApplicationInsightsComponentPropertiesOutput) ToApplicationInsightsComponentPropertiesOutputWithContext(ctx context.Context) ApplicationInsightsComponentPropertiesOutput {
	return o
}

func (o ApplicationInsightsComponentPropertiesOutput) ToApplicationInsightsComponentPropertiesPtrOutput() ApplicationInsightsComponentPropertiesPtrOutput {
	return o.ToApplicationInsightsComponentPropertiesPtrOutputWithContext(context.Background())
}

func (o ApplicationInsightsComponentPropertiesOutput) ToApplicationInsightsComponentPropertiesPtrOutputWithContext(ctx context.Context) ApplicationInsightsComponentPropertiesPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentProperties) *ApplicationInsightsComponentProperties {
		return &v
	}).(ApplicationInsightsComponentPropertiesPtrOutput)
}

// Type of application being monitored.
func (o ApplicationInsightsComponentPropertiesOutput) Application_Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentProperties) string { return v.Application_Type }).(pulumi.StringOutput)
}

// Disable IP masking.
func (o ApplicationInsightsComponentPropertiesOutput) DisableIpMasking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentProperties) *bool { return v.DisableIpMasking }).(pulumi.BoolPtrOutput)
}

// Used by the Application Insights system to determine what kind of flow this component was created by. This is to be set to 'Bluefield' when creating/updating a component via the REST API.
func (o ApplicationInsightsComponentPropertiesOutput) Flow_Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentProperties) *string { return v.Flow_Type }).(pulumi.StringPtrOutput)
}

// The unique application ID created when a new application is added to HockeyApp, used for communications with HockeyApp.
func (o ApplicationInsightsComponentPropertiesOutput) HockeyAppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentProperties) *string { return v.HockeyAppId }).(pulumi.StringPtrOutput)
}

// Purge data immediately after 30 days.
func (o ApplicationInsightsComponentPropertiesOutput) ImmediatePurgeDataOn30Days() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentProperties) *bool { return v.ImmediatePurgeDataOn30Days }).(pulumi.BoolPtrOutput)
}

// Indicates the flow of the ingestion.
func (o ApplicationInsightsComponentPropertiesOutput) IngestionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentProperties) *string { return v.IngestionMode }).(pulumi.StringPtrOutput)
}

// Describes what tool created this Application Insights component. Customers using this API should set this to the default 'rest'.
func (o ApplicationInsightsComponentPropertiesOutput) Request_Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentProperties) *string { return v.Request_Source }).(pulumi.StringPtrOutput)
}

// Retention period in days.
func (o ApplicationInsightsComponentPropertiesOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentProperties) *int { return v.RetentionInDays }).(pulumi.IntPtrOutput)
}

// Percentage of the data produced by the application being monitored that is being sampled for Application Insights telemetry.
func (o ApplicationInsightsComponentPropertiesOutput) SamplingPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentProperties) *float64 { return v.SamplingPercentage }).(pulumi.Float64PtrOutput)
}

type ApplicationInsightsComponentPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ApplicationInsightsComponentPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationInsightsComponentProperties)(nil)).Elem()
}

func (o ApplicationInsightsComponentPropertiesPtrOutput) ToApplicationInsightsComponentPropertiesPtrOutput() ApplicationInsightsComponentPropertiesPtrOutput {
	return o
}

func (o ApplicationInsightsComponentPropertiesPtrOutput) ToApplicationInsightsComponentPropertiesPtrOutputWithContext(ctx context.Context) ApplicationInsightsComponentPropertiesPtrOutput {
	return o
}

func (o ApplicationInsightsComponentPropertiesPtrOutput) Elem() ApplicationInsightsComponentPropertiesOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentProperties) ApplicationInsightsComponentProperties { return *v }).(ApplicationInsightsComponentPropertiesOutput)
}

// Type of application being monitored.
func (o ApplicationInsightsComponentPropertiesPtrOutput) Application_Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Application_Type
	}).(pulumi.StringPtrOutput)
}

// Disable IP masking.
func (o ApplicationInsightsComponentPropertiesPtrOutput) DisableIpMasking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentProperties) *bool {
		if v == nil {
			return nil
		}
		return v.DisableIpMasking
	}).(pulumi.BoolPtrOutput)
}

// Used by the Application Insights system to determine what kind of flow this component was created by. This is to be set to 'Bluefield' when creating/updating a component via the REST API.
func (o ApplicationInsightsComponentPropertiesPtrOutput) Flow_Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentProperties) *string {
		if v == nil {
			return nil
		}
		return v.Flow_Type
	}).(pulumi.StringPtrOutput)
}

// The unique application ID created when a new application is added to HockeyApp, used for communications with HockeyApp.
func (o ApplicationInsightsComponentPropertiesPtrOutput) HockeyAppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentProperties) *string {
		if v == nil {
			return nil
		}
		return v.HockeyAppId
	}).(pulumi.StringPtrOutput)
}

// Purge data immediately after 30 days.
func (o ApplicationInsightsComponentPropertiesPtrOutput) ImmediatePurgeDataOn30Days() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentProperties) *bool {
		if v == nil {
			return nil
		}
		return v.ImmediatePurgeDataOn30Days
	}).(pulumi.BoolPtrOutput)
}

// Indicates the flow of the ingestion.
func (o ApplicationInsightsComponentPropertiesPtrOutput) IngestionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentProperties) *string {
		if v == nil {
			return nil
		}
		return v.IngestionMode
	}).(pulumi.StringPtrOutput)
}

// Describes what tool created this Application Insights component. Customers using this API should set this to the default 'rest'.
func (o ApplicationInsightsComponentPropertiesPtrOutput) Request_Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentProperties) *string {
		if v == nil {
			return nil
		}
		return v.Request_Source
	}).(pulumi.StringPtrOutput)
}

// Retention period in days.
func (o ApplicationInsightsComponentPropertiesPtrOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentProperties) *int {
		if v == nil {
			return nil
		}
		return v.RetentionInDays
	}).(pulumi.IntPtrOutput)
}

// Percentage of the data produced by the application being monitored that is being sampled for Application Insights telemetry.
func (o ApplicationInsightsComponentPropertiesPtrOutput) SamplingPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.SamplingPercentage
	}).(pulumi.Float64PtrOutput)
}

// Properties that define an Application Insights component resource.
type ApplicationInsightsComponentPropertiesResponse struct {
	// Application Insights Unique ID for your Application.
	AppId string `pulumi:"AppId"`
	// The unique ID of your application. This field mirrors the 'Name' field and cannot be changed.
	ApplicationId string `pulumi:"ApplicationId"`
	// Type of application being monitored.
	Application_Type string `pulumi:"Application_Type"`
	// Application Insights component connection string.
	ConnectionString string `pulumi:"ConnectionString"`
	// Creation Date for the Application Insights component, in ISO 8601 format.
	CreationDate string `pulumi:"CreationDate"`
	// Disable IP masking.
	DisableIpMasking *bool `pulumi:"DisableIpMasking"`
	// Used by the Application Insights system to determine what kind of flow this component was created by. This is to be set to 'Bluefield' when creating/updating a component via the REST API.
	Flow_Type *string `pulumi:"Flow_Type"`
	// The unique application ID created when a new application is added to HockeyApp, used for communications with HockeyApp.
	HockeyAppId *string `pulumi:"HockeyAppId"`
	// Token used to authenticate communications with between Application Insights and HockeyApp.
	HockeyAppToken string `pulumi:"HockeyAppToken"`
	// Purge data immediately after 30 days.
	ImmediatePurgeDataOn30Days *bool `pulumi:"ImmediatePurgeDataOn30Days"`
	// Indicates the flow of the ingestion.
	IngestionMode *string `pulumi:"IngestionMode"`
	// Application Insights Instrumentation key. A read-only value that applications can use to identify the destination for all telemetry sent to Azure Application Insights. This value will be supplied upon construction of each new Application Insights component.
	InstrumentationKey string `pulumi:"InstrumentationKey"`
	// List of linked private link scope resources.
	PrivateLinkScopedResources []PrivateLinkScopedResourceResponse `pulumi:"PrivateLinkScopedResources"`
	// Describes what tool created this Application Insights component. Customers using this API should set this to the default 'rest'.
	Request_Source *string `pulumi:"Request_Source"`
	// Retention period in days.
	RetentionInDays *int `pulumi:"RetentionInDays"`
	// Percentage of the data produced by the application being monitored that is being sampled for Application Insights telemetry.
	SamplingPercentage *float64 `pulumi:"SamplingPercentage"`
	// Azure Tenant Id.
	TenantId string `pulumi:"TenantId"`
	// Current state of this component: whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Succeeded, Deploying, Canceled, and Failed.
	ProvisioningState string `pulumi:"provisioningState"`
}

// ApplicationInsightsComponentPropertiesResponseInput is an input type that accepts ApplicationInsightsComponentPropertiesResponseArgs and ApplicationInsightsComponentPropertiesResponseOutput values.
// You can construct a concrete instance of `ApplicationInsightsComponentPropertiesResponseInput` via:
//
//          ApplicationInsightsComponentPropertiesResponseArgs{...}
type ApplicationInsightsComponentPropertiesResponseInput interface {
	pulumi.Input

	ToApplicationInsightsComponentPropertiesResponseOutput() ApplicationInsightsComponentPropertiesResponseOutput
	ToApplicationInsightsComponentPropertiesResponseOutputWithContext(context.Context) ApplicationInsightsComponentPropertiesResponseOutput
}

// Properties that define an Application Insights component resource.
type ApplicationInsightsComponentPropertiesResponseArgs struct {
	// Application Insights Unique ID for your Application.
	AppId pulumi.StringInput `pulumi:"AppId"`
	// The unique ID of your application. This field mirrors the 'Name' field and cannot be changed.
	ApplicationId pulumi.StringInput `pulumi:"ApplicationId"`
	// Type of application being monitored.
	Application_Type pulumi.StringInput `pulumi:"Application_Type"`
	// Application Insights component connection string.
	ConnectionString pulumi.StringInput `pulumi:"ConnectionString"`
	// Creation Date for the Application Insights component, in ISO 8601 format.
	CreationDate pulumi.StringInput `pulumi:"CreationDate"`
	// Disable IP masking.
	DisableIpMasking pulumi.BoolPtrInput `pulumi:"DisableIpMasking"`
	// Used by the Application Insights system to determine what kind of flow this component was created by. This is to be set to 'Bluefield' when creating/updating a component via the REST API.
	Flow_Type pulumi.StringPtrInput `pulumi:"Flow_Type"`
	// The unique application ID created when a new application is added to HockeyApp, used for communications with HockeyApp.
	HockeyAppId pulumi.StringPtrInput `pulumi:"HockeyAppId"`
	// Token used to authenticate communications with between Application Insights and HockeyApp.
	HockeyAppToken pulumi.StringInput `pulumi:"HockeyAppToken"`
	// Purge data immediately after 30 days.
	ImmediatePurgeDataOn30Days pulumi.BoolPtrInput `pulumi:"ImmediatePurgeDataOn30Days"`
	// Indicates the flow of the ingestion.
	IngestionMode pulumi.StringPtrInput `pulumi:"IngestionMode"`
	// Application Insights Instrumentation key. A read-only value that applications can use to identify the destination for all telemetry sent to Azure Application Insights. This value will be supplied upon construction of each new Application Insights component.
	InstrumentationKey pulumi.StringInput `pulumi:"InstrumentationKey"`
	// List of linked private link scope resources.
	PrivateLinkScopedResources PrivateLinkScopedResourceResponseArrayInput `pulumi:"PrivateLinkScopedResources"`
	// Describes what tool created this Application Insights component. Customers using this API should set this to the default 'rest'.
	Request_Source pulumi.StringPtrInput `pulumi:"Request_Source"`
	// Retention period in days.
	RetentionInDays pulumi.IntPtrInput `pulumi:"RetentionInDays"`
	// Percentage of the data produced by the application being monitored that is being sampled for Application Insights telemetry.
	SamplingPercentage pulumi.Float64PtrInput `pulumi:"SamplingPercentage"`
	// Azure Tenant Id.
	TenantId pulumi.StringInput `pulumi:"TenantId"`
	// Current state of this component: whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Succeeded, Deploying, Canceled, and Failed.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
}

func (ApplicationInsightsComponentPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInsightsComponentPropertiesResponse)(nil)).Elem()
}

func (i ApplicationInsightsComponentPropertiesResponseArgs) ToApplicationInsightsComponentPropertiesResponseOutput() ApplicationInsightsComponentPropertiesResponseOutput {
	return i.ToApplicationInsightsComponentPropertiesResponseOutputWithContext(context.Background())
}

func (i ApplicationInsightsComponentPropertiesResponseArgs) ToApplicationInsightsComponentPropertiesResponseOutputWithContext(ctx context.Context) ApplicationInsightsComponentPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInsightsComponentPropertiesResponseOutput)
}

func (i ApplicationInsightsComponentPropertiesResponseArgs) ToApplicationInsightsComponentPropertiesResponsePtrOutput() ApplicationInsightsComponentPropertiesResponsePtrOutput {
	return i.ToApplicationInsightsComponentPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationInsightsComponentPropertiesResponseArgs) ToApplicationInsightsComponentPropertiesResponsePtrOutputWithContext(ctx context.Context) ApplicationInsightsComponentPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInsightsComponentPropertiesResponseOutput).ToApplicationInsightsComponentPropertiesResponsePtrOutputWithContext(ctx)
}

// ApplicationInsightsComponentPropertiesResponsePtrInput is an input type that accepts ApplicationInsightsComponentPropertiesResponseArgs, ApplicationInsightsComponentPropertiesResponsePtr and ApplicationInsightsComponentPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationInsightsComponentPropertiesResponsePtrInput` via:
//
//          ApplicationInsightsComponentPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationInsightsComponentPropertiesResponsePtrInput interface {
	pulumi.Input

	ToApplicationInsightsComponentPropertiesResponsePtrOutput() ApplicationInsightsComponentPropertiesResponsePtrOutput
	ToApplicationInsightsComponentPropertiesResponsePtrOutputWithContext(context.Context) ApplicationInsightsComponentPropertiesResponsePtrOutput
}

type applicationInsightsComponentPropertiesResponsePtrType ApplicationInsightsComponentPropertiesResponseArgs

func ApplicationInsightsComponentPropertiesResponsePtr(v *ApplicationInsightsComponentPropertiesResponseArgs) ApplicationInsightsComponentPropertiesResponsePtrInput {
	return (*applicationInsightsComponentPropertiesResponsePtrType)(v)
}

func (*applicationInsightsComponentPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationInsightsComponentPropertiesResponse)(nil)).Elem()
}

func (i *applicationInsightsComponentPropertiesResponsePtrType) ToApplicationInsightsComponentPropertiesResponsePtrOutput() ApplicationInsightsComponentPropertiesResponsePtrOutput {
	return i.ToApplicationInsightsComponentPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *applicationInsightsComponentPropertiesResponsePtrType) ToApplicationInsightsComponentPropertiesResponsePtrOutputWithContext(ctx context.Context) ApplicationInsightsComponentPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInsightsComponentPropertiesResponsePtrOutput)
}

// Properties that define an Application Insights component resource.
type ApplicationInsightsComponentPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ApplicationInsightsComponentPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInsightsComponentPropertiesResponse)(nil)).Elem()
}

func (o ApplicationInsightsComponentPropertiesResponseOutput) ToApplicationInsightsComponentPropertiesResponseOutput() ApplicationInsightsComponentPropertiesResponseOutput {
	return o
}

func (o ApplicationInsightsComponentPropertiesResponseOutput) ToApplicationInsightsComponentPropertiesResponseOutputWithContext(ctx context.Context) ApplicationInsightsComponentPropertiesResponseOutput {
	return o
}

func (o ApplicationInsightsComponentPropertiesResponseOutput) ToApplicationInsightsComponentPropertiesResponsePtrOutput() ApplicationInsightsComponentPropertiesResponsePtrOutput {
	return o.ToApplicationInsightsComponentPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationInsightsComponentPropertiesResponseOutput) ToApplicationInsightsComponentPropertiesResponsePtrOutputWithContext(ctx context.Context) ApplicationInsightsComponentPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentPropertiesResponse) *ApplicationInsightsComponentPropertiesResponse {
		return &v
	}).(ApplicationInsightsComponentPropertiesResponsePtrOutput)
}

// Application Insights Unique ID for your Application.
func (o ApplicationInsightsComponentPropertiesResponseOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentPropertiesResponse) string { return v.AppId }).(pulumi.StringOutput)
}

// The unique ID of your application. This field mirrors the 'Name' field and cannot be changed.
func (o ApplicationInsightsComponentPropertiesResponseOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentPropertiesResponse) string { return v.ApplicationId }).(pulumi.StringOutput)
}

// Type of application being monitored.
func (o ApplicationInsightsComponentPropertiesResponseOutput) Application_Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentPropertiesResponse) string { return v.Application_Type }).(pulumi.StringOutput)
}

// Application Insights component connection string.
func (o ApplicationInsightsComponentPropertiesResponseOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentPropertiesResponse) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// Creation Date for the Application Insights component, in ISO 8601 format.
func (o ApplicationInsightsComponentPropertiesResponseOutput) CreationDate() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentPropertiesResponse) string { return v.CreationDate }).(pulumi.StringOutput)
}

// Disable IP masking.
func (o ApplicationInsightsComponentPropertiesResponseOutput) DisableIpMasking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentPropertiesResponse) *bool { return v.DisableIpMasking }).(pulumi.BoolPtrOutput)
}

// Used by the Application Insights system to determine what kind of flow this component was created by. This is to be set to 'Bluefield' when creating/updating a component via the REST API.
func (o ApplicationInsightsComponentPropertiesResponseOutput) Flow_Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentPropertiesResponse) *string { return v.Flow_Type }).(pulumi.StringPtrOutput)
}

// The unique application ID created when a new application is added to HockeyApp, used for communications with HockeyApp.
func (o ApplicationInsightsComponentPropertiesResponseOutput) HockeyAppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentPropertiesResponse) *string { return v.HockeyAppId }).(pulumi.StringPtrOutput)
}

// Token used to authenticate communications with between Application Insights and HockeyApp.
func (o ApplicationInsightsComponentPropertiesResponseOutput) HockeyAppToken() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentPropertiesResponse) string { return v.HockeyAppToken }).(pulumi.StringOutput)
}

// Purge data immediately after 30 days.
func (o ApplicationInsightsComponentPropertiesResponseOutput) ImmediatePurgeDataOn30Days() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentPropertiesResponse) *bool { return v.ImmediatePurgeDataOn30Days }).(pulumi.BoolPtrOutput)
}

// Indicates the flow of the ingestion.
func (o ApplicationInsightsComponentPropertiesResponseOutput) IngestionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentPropertiesResponse) *string { return v.IngestionMode }).(pulumi.StringPtrOutput)
}

// Application Insights Instrumentation key. A read-only value that applications can use to identify the destination for all telemetry sent to Azure Application Insights. This value will be supplied upon construction of each new Application Insights component.
func (o ApplicationInsightsComponentPropertiesResponseOutput) InstrumentationKey() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentPropertiesResponse) string { return v.InstrumentationKey }).(pulumi.StringOutput)
}

// List of linked private link scope resources.
func (o ApplicationInsightsComponentPropertiesResponseOutput) PrivateLinkScopedResources() PrivateLinkScopedResourceResponseArrayOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentPropertiesResponse) []PrivateLinkScopedResourceResponse {
		return v.PrivateLinkScopedResources
	}).(PrivateLinkScopedResourceResponseArrayOutput)
}

// Describes what tool created this Application Insights component. Customers using this API should set this to the default 'rest'.
func (o ApplicationInsightsComponentPropertiesResponseOutput) Request_Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentPropertiesResponse) *string { return v.Request_Source }).(pulumi.StringPtrOutput)
}

// Retention period in days.
func (o ApplicationInsightsComponentPropertiesResponseOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentPropertiesResponse) *int { return v.RetentionInDays }).(pulumi.IntPtrOutput)
}

// Percentage of the data produced by the application being monitored that is being sampled for Application Insights telemetry.
func (o ApplicationInsightsComponentPropertiesResponseOutput) SamplingPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentPropertiesResponse) *float64 { return v.SamplingPercentage }).(pulumi.Float64PtrOutput)
}

// Azure Tenant Id.
func (o ApplicationInsightsComponentPropertiesResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentPropertiesResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Current state of this component: whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Succeeded, Deploying, Canceled, and Failed.
func (o ApplicationInsightsComponentPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type ApplicationInsightsComponentPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationInsightsComponentPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationInsightsComponentPropertiesResponse)(nil)).Elem()
}

func (o ApplicationInsightsComponentPropertiesResponsePtrOutput) ToApplicationInsightsComponentPropertiesResponsePtrOutput() ApplicationInsightsComponentPropertiesResponsePtrOutput {
	return o
}

func (o ApplicationInsightsComponentPropertiesResponsePtrOutput) ToApplicationInsightsComponentPropertiesResponsePtrOutputWithContext(ctx context.Context) ApplicationInsightsComponentPropertiesResponsePtrOutput {
	return o
}

func (o ApplicationInsightsComponentPropertiesResponsePtrOutput) Elem() ApplicationInsightsComponentPropertiesResponseOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentPropertiesResponse) ApplicationInsightsComponentPropertiesResponse {
		return *v
	}).(ApplicationInsightsComponentPropertiesResponseOutput)
}

// Application Insights Unique ID for your Application.
func (o ApplicationInsightsComponentPropertiesResponsePtrOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AppId
	}).(pulumi.StringPtrOutput)
}

// The unique ID of your application. This field mirrors the 'Name' field and cannot be changed.
func (o ApplicationInsightsComponentPropertiesResponsePtrOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ApplicationId
	}).(pulumi.StringPtrOutput)
}

// Type of application being monitored.
func (o ApplicationInsightsComponentPropertiesResponsePtrOutput) Application_Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Application_Type
	}).(pulumi.StringPtrOutput)
}

// Application Insights component connection string.
func (o ApplicationInsightsComponentPropertiesResponsePtrOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ConnectionString
	}).(pulumi.StringPtrOutput)
}

// Creation Date for the Application Insights component, in ISO 8601 format.
func (o ApplicationInsightsComponentPropertiesResponsePtrOutput) CreationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreationDate
	}).(pulumi.StringPtrOutput)
}

// Disable IP masking.
func (o ApplicationInsightsComponentPropertiesResponsePtrOutput) DisableIpMasking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.DisableIpMasking
	}).(pulumi.BoolPtrOutput)
}

// Used by the Application Insights system to determine what kind of flow this component was created by. This is to be set to 'Bluefield' when creating/updating a component via the REST API.
func (o ApplicationInsightsComponentPropertiesResponsePtrOutput) Flow_Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Flow_Type
	}).(pulumi.StringPtrOutput)
}

// The unique application ID created when a new application is added to HockeyApp, used for communications with HockeyApp.
func (o ApplicationInsightsComponentPropertiesResponsePtrOutput) HockeyAppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.HockeyAppId
	}).(pulumi.StringPtrOutput)
}

// Token used to authenticate communications with between Application Insights and HockeyApp.
func (o ApplicationInsightsComponentPropertiesResponsePtrOutput) HockeyAppToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.HockeyAppToken
	}).(pulumi.StringPtrOutput)
}

// Purge data immediately after 30 days.
func (o ApplicationInsightsComponentPropertiesResponsePtrOutput) ImmediatePurgeDataOn30Days() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ImmediatePurgeDataOn30Days
	}).(pulumi.BoolPtrOutput)
}

// Indicates the flow of the ingestion.
func (o ApplicationInsightsComponentPropertiesResponsePtrOutput) IngestionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.IngestionMode
	}).(pulumi.StringPtrOutput)
}

// Application Insights Instrumentation key. A read-only value that applications can use to identify the destination for all telemetry sent to Azure Application Insights. This value will be supplied upon construction of each new Application Insights component.
func (o ApplicationInsightsComponentPropertiesResponsePtrOutput) InstrumentationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InstrumentationKey
	}).(pulumi.StringPtrOutput)
}

// List of linked private link scope resources.
func (o ApplicationInsightsComponentPropertiesResponsePtrOutput) PrivateLinkScopedResources() PrivateLinkScopedResourceResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentPropertiesResponse) []PrivateLinkScopedResourceResponse {
		if v == nil {
			return nil
		}
		return v.PrivateLinkScopedResources
	}).(PrivateLinkScopedResourceResponseArrayOutput)
}

// Describes what tool created this Application Insights component. Customers using this API should set this to the default 'rest'.
func (o ApplicationInsightsComponentPropertiesResponsePtrOutput) Request_Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Request_Source
	}).(pulumi.StringPtrOutput)
}

// Retention period in days.
func (o ApplicationInsightsComponentPropertiesResponsePtrOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.RetentionInDays
	}).(pulumi.IntPtrOutput)
}

// Percentage of the data produced by the application being monitored that is being sampled for Application Insights telemetry.
func (o ApplicationInsightsComponentPropertiesResponsePtrOutput) SamplingPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentPropertiesResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.SamplingPercentage
	}).(pulumi.Float64PtrOutput)
}

// Azure Tenant Id.
func (o ApplicationInsightsComponentPropertiesResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Current state of this component: whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Succeeded, Deploying, Canceled, and Failed.
func (o ApplicationInsightsComponentPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// An Application Insights component definition.
type ComponentType struct {
	// The kind of application that this component refers to, used to customize UI. This value is a freeform string, values should typically be one of the following: web, ios, other, store, java, phone.
	Kind string `pulumi:"kind"`
	// Resource location
	Location string `pulumi:"location"`
	// Azure resource name
	Name string `pulumi:"name"`
	// Properties that define an Application Insights component resource.
	Properties ApplicationInsightsComponentPropertiesResponse `pulumi:"properties"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Azure resource type
	Type string `pulumi:"type"`
}

// ComponentTypeInput is an input type that accepts ComponentTypeArgs and ComponentTypeOutput values.
// You can construct a concrete instance of `ComponentTypeInput` via:
//
//          ComponentTypeArgs{...}
type ComponentTypeInput interface {
	pulumi.Input

	ToComponentTypeOutput() ComponentTypeOutput
	ToComponentTypeOutputWithContext(context.Context) ComponentTypeOutput
}

// An Application Insights component definition.
type ComponentTypeArgs struct {
	// The kind of application that this component refers to, used to customize UI. This value is a freeform string, values should typically be one of the following: web, ios, other, store, java, phone.
	Kind pulumi.StringInput `pulumi:"kind"`
	// Resource location
	Location pulumi.StringInput `pulumi:"location"`
	// Azure resource name
	Name pulumi.StringInput `pulumi:"name"`
	// Properties that define an Application Insights component resource.
	Properties ApplicationInsightsComponentPropertiesResponseInput `pulumi:"properties"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Azure resource type
	Type pulumi.StringInput `pulumi:"type"`
}

func (ComponentTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentType)(nil)).Elem()
}

func (i ComponentTypeArgs) ToComponentTypeOutput() ComponentTypeOutput {
	return i.ToComponentTypeOutputWithContext(context.Background())
}

func (i ComponentTypeArgs) ToComponentTypeOutputWithContext(ctx context.Context) ComponentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentTypeOutput)
}

// An Application Insights component definition.
type ComponentTypeOutput struct{ *pulumi.OutputState }

func (ComponentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentType)(nil)).Elem()
}

func (o ComponentTypeOutput) ToComponentTypeOutput() ComponentTypeOutput {
	return o
}

func (o ComponentTypeOutput) ToComponentTypeOutputWithContext(ctx context.Context) ComponentTypeOutput {
	return o
}

// The kind of application that this component refers to, used to customize UI. This value is a freeform string, values should typically be one of the following: web, ios, other, store, java, phone.
func (o ComponentTypeOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ComponentType) string { return v.Kind }).(pulumi.StringOutput)
}

// Resource location
func (o ComponentTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v ComponentType) string { return v.Location }).(pulumi.StringOutput)
}

// Azure resource name
func (o ComponentTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ComponentType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties that define an Application Insights component resource.
func (o ComponentTypeOutput) Properties() ApplicationInsightsComponentPropertiesResponseOutput {
	return o.ApplyT(func(v ComponentType) ApplicationInsightsComponentPropertiesResponse { return v.Properties }).(ApplicationInsightsComponentPropertiesResponseOutput)
}

// Resource tags
func (o ComponentTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ComponentType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Azure resource type
func (o ComponentTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ComponentType) string { return v.Type }).(pulumi.StringOutput)
}

// Properties that define a Continuous Export configuration.
type ExportConfigurationType struct {
	// The name of the Application Insights component.
	ApplicationName string `pulumi:"ApplicationName"`
	// The name of the destination storage container.
	ContainerName string `pulumi:"ContainerName"`
	// The name of destination account.
	DestinationAccountId string `pulumi:"DestinationAccountId"`
	// The destination account location ID.
	DestinationStorageLocationId string `pulumi:"DestinationStorageLocationId"`
	// The destination storage account subscription ID.
	DestinationStorageSubscriptionId string `pulumi:"DestinationStorageSubscriptionId"`
	// The destination type.
	DestinationType string `pulumi:"DestinationType"`
	// The unique ID of the export configuration inside an Application Insights component. It is auto generated when the Continuous Export configuration is created.
	ExportId string `pulumi:"ExportId"`
	// This indicates current Continuous Export configuration status. The possible values are 'Preparing', 'Success', 'Failure'.
	ExportStatus string `pulumi:"ExportStatus"`
	// The instrumentation key of the Application Insights component.
	InstrumentationKey string `pulumi:"InstrumentationKey"`
	// This will be 'true' if the Continuous Export configuration is enabled, otherwise it will be 'false'.
	IsUserEnabled string `pulumi:"IsUserEnabled"`
	// The last time the Continuous Export configuration started failing.
	LastGapTime string `pulumi:"LastGapTime"`
	// The last time data was successfully delivered to the destination storage container for this Continuous Export configuration.
	LastSuccessTime string `pulumi:"LastSuccessTime"`
	// Last time the Continuous Export configuration was updated.
	LastUserUpdate string `pulumi:"LastUserUpdate"`
	// Deprecated
	NotificationQueueEnabled *string `pulumi:"NotificationQueueEnabled"`
	// This is the reason the Continuous Export configuration started failing. It can be 'AzureStorageNotFound' or 'AzureStorageAccessDenied'.
	PermanentErrorReason string `pulumi:"PermanentErrorReason"`
	// This comma separated list of document types that will be exported. The possible values include 'Requests', 'Event', 'Exceptions', 'Metrics', 'PageViews', 'PageViewPerformance', 'Rdd', 'PerformanceCounters', 'Availability', 'Messages'.
	RecordTypes *string `pulumi:"RecordTypes"`
	// The resource group of the Application Insights component.
	ResourceGroup string `pulumi:"ResourceGroup"`
	// The name of the destination storage account.
	StorageName string `pulumi:"StorageName"`
	// The subscription of the Application Insights component.
	SubscriptionId string `pulumi:"SubscriptionId"`
}

// ExportConfigurationTypeInput is an input type that accepts ExportConfigurationTypeArgs and ExportConfigurationTypeOutput values.
// You can construct a concrete instance of `ExportConfigurationTypeInput` via:
//
//          ExportConfigurationTypeArgs{...}
type ExportConfigurationTypeInput interface {
	pulumi.Input

	ToExportConfigurationTypeOutput() ExportConfigurationTypeOutput
	ToExportConfigurationTypeOutputWithContext(context.Context) ExportConfigurationTypeOutput
}

// Properties that define a Continuous Export configuration.
type ExportConfigurationTypeArgs struct {
	// The name of the Application Insights component.
	ApplicationName pulumi.StringInput `pulumi:"ApplicationName"`
	// The name of the destination storage container.
	ContainerName pulumi.StringInput `pulumi:"ContainerName"`
	// The name of destination account.
	DestinationAccountId pulumi.StringInput `pulumi:"DestinationAccountId"`
	// The destination account location ID.
	DestinationStorageLocationId pulumi.StringInput `pulumi:"DestinationStorageLocationId"`
	// The destination storage account subscription ID.
	DestinationStorageSubscriptionId pulumi.StringInput `pulumi:"DestinationStorageSubscriptionId"`
	// The destination type.
	DestinationType pulumi.StringInput `pulumi:"DestinationType"`
	// The unique ID of the export configuration inside an Application Insights component. It is auto generated when the Continuous Export configuration is created.
	ExportId pulumi.StringInput `pulumi:"ExportId"`
	// This indicates current Continuous Export configuration status. The possible values are 'Preparing', 'Success', 'Failure'.
	ExportStatus pulumi.StringInput `pulumi:"ExportStatus"`
	// The instrumentation key of the Application Insights component.
	InstrumentationKey pulumi.StringInput `pulumi:"InstrumentationKey"`
	// This will be 'true' if the Continuous Export configuration is enabled, otherwise it will be 'false'.
	IsUserEnabled pulumi.StringInput `pulumi:"IsUserEnabled"`
	// The last time the Continuous Export configuration started failing.
	LastGapTime pulumi.StringInput `pulumi:"LastGapTime"`
	// The last time data was successfully delivered to the destination storage container for this Continuous Export configuration.
	LastSuccessTime pulumi.StringInput `pulumi:"LastSuccessTime"`
	// Last time the Continuous Export configuration was updated.
	LastUserUpdate pulumi.StringInput `pulumi:"LastUserUpdate"`
	// Deprecated
	NotificationQueueEnabled pulumi.StringPtrInput `pulumi:"NotificationQueueEnabled"`
	// This is the reason the Continuous Export configuration started failing. It can be 'AzureStorageNotFound' or 'AzureStorageAccessDenied'.
	PermanentErrorReason pulumi.StringInput `pulumi:"PermanentErrorReason"`
	// This comma separated list of document types that will be exported. The possible values include 'Requests', 'Event', 'Exceptions', 'Metrics', 'PageViews', 'PageViewPerformance', 'Rdd', 'PerformanceCounters', 'Availability', 'Messages'.
	RecordTypes pulumi.StringPtrInput `pulumi:"RecordTypes"`
	// The resource group of the Application Insights component.
	ResourceGroup pulumi.StringInput `pulumi:"ResourceGroup"`
	// The name of the destination storage account.
	StorageName pulumi.StringInput `pulumi:"StorageName"`
	// The subscription of the Application Insights component.
	SubscriptionId pulumi.StringInput `pulumi:"SubscriptionId"`
}

func (ExportConfigurationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExportConfigurationType)(nil)).Elem()
}

func (i ExportConfigurationTypeArgs) ToExportConfigurationTypeOutput() ExportConfigurationTypeOutput {
	return i.ToExportConfigurationTypeOutputWithContext(context.Background())
}

func (i ExportConfigurationTypeArgs) ToExportConfigurationTypeOutputWithContext(ctx context.Context) ExportConfigurationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExportConfigurationTypeOutput)
}

// Properties that define a Continuous Export configuration.
type ExportConfigurationTypeOutput struct{ *pulumi.OutputState }

func (ExportConfigurationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExportConfigurationType)(nil)).Elem()
}

func (o ExportConfigurationTypeOutput) ToExportConfigurationTypeOutput() ExportConfigurationTypeOutput {
	return o
}

func (o ExportConfigurationTypeOutput) ToExportConfigurationTypeOutputWithContext(ctx context.Context) ExportConfigurationTypeOutput {
	return o
}

// The name of the Application Insights component.
func (o ExportConfigurationTypeOutput) ApplicationName() pulumi.StringOutput {
	return o.ApplyT(func(v ExportConfigurationType) string { return v.ApplicationName }).(pulumi.StringOutput)
}

// The name of the destination storage container.
func (o ExportConfigurationTypeOutput) ContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v ExportConfigurationType) string { return v.ContainerName }).(pulumi.StringOutput)
}

// The name of destination account.
func (o ExportConfigurationTypeOutput) DestinationAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v ExportConfigurationType) string { return v.DestinationAccountId }).(pulumi.StringOutput)
}

// The destination account location ID.
func (o ExportConfigurationTypeOutput) DestinationStorageLocationId() pulumi.StringOutput {
	return o.ApplyT(func(v ExportConfigurationType) string { return v.DestinationStorageLocationId }).(pulumi.StringOutput)
}

// The destination storage account subscription ID.
func (o ExportConfigurationTypeOutput) DestinationStorageSubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v ExportConfigurationType) string { return v.DestinationStorageSubscriptionId }).(pulumi.StringOutput)
}

// The destination type.
func (o ExportConfigurationTypeOutput) DestinationType() pulumi.StringOutput {
	return o.ApplyT(func(v ExportConfigurationType) string { return v.DestinationType }).(pulumi.StringOutput)
}

// The unique ID of the export configuration inside an Application Insights component. It is auto generated when the Continuous Export configuration is created.
func (o ExportConfigurationTypeOutput) ExportId() pulumi.StringOutput {
	return o.ApplyT(func(v ExportConfigurationType) string { return v.ExportId }).(pulumi.StringOutput)
}

// This indicates current Continuous Export configuration status. The possible values are 'Preparing', 'Success', 'Failure'.
func (o ExportConfigurationTypeOutput) ExportStatus() pulumi.StringOutput {
	return o.ApplyT(func(v ExportConfigurationType) string { return v.ExportStatus }).(pulumi.StringOutput)
}

// The instrumentation key of the Application Insights component.
func (o ExportConfigurationTypeOutput) InstrumentationKey() pulumi.StringOutput {
	return o.ApplyT(func(v ExportConfigurationType) string { return v.InstrumentationKey }).(pulumi.StringOutput)
}

// This will be 'true' if the Continuous Export configuration is enabled, otherwise it will be 'false'.
func (o ExportConfigurationTypeOutput) IsUserEnabled() pulumi.StringOutput {
	return o.ApplyT(func(v ExportConfigurationType) string { return v.IsUserEnabled }).(pulumi.StringOutput)
}

// The last time the Continuous Export configuration started failing.
func (o ExportConfigurationTypeOutput) LastGapTime() pulumi.StringOutput {
	return o.ApplyT(func(v ExportConfigurationType) string { return v.LastGapTime }).(pulumi.StringOutput)
}

// The last time data was successfully delivered to the destination storage container for this Continuous Export configuration.
func (o ExportConfigurationTypeOutput) LastSuccessTime() pulumi.StringOutput {
	return o.ApplyT(func(v ExportConfigurationType) string { return v.LastSuccessTime }).(pulumi.StringOutput)
}

// Last time the Continuous Export configuration was updated.
func (o ExportConfigurationTypeOutput) LastUserUpdate() pulumi.StringOutput {
	return o.ApplyT(func(v ExportConfigurationType) string { return v.LastUserUpdate }).(pulumi.StringOutput)
}

// Deprecated
func (o ExportConfigurationTypeOutput) NotificationQueueEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExportConfigurationType) *string { return v.NotificationQueueEnabled }).(pulumi.StringPtrOutput)
}

// This is the reason the Continuous Export configuration started failing. It can be 'AzureStorageNotFound' or 'AzureStorageAccessDenied'.
func (o ExportConfigurationTypeOutput) PermanentErrorReason() pulumi.StringOutput {
	return o.ApplyT(func(v ExportConfigurationType) string { return v.PermanentErrorReason }).(pulumi.StringOutput)
}

// This comma separated list of document types that will be exported. The possible values include 'Requests', 'Event', 'Exceptions', 'Metrics', 'PageViews', 'PageViewPerformance', 'Rdd', 'PerformanceCounters', 'Availability', 'Messages'.
func (o ExportConfigurationTypeOutput) RecordTypes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExportConfigurationType) *string { return v.RecordTypes }).(pulumi.StringPtrOutput)
}

// The resource group of the Application Insights component.
func (o ExportConfigurationTypeOutput) ResourceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v ExportConfigurationType) string { return v.ResourceGroup }).(pulumi.StringOutput)
}

// The name of the destination storage account.
func (o ExportConfigurationTypeOutput) StorageName() pulumi.StringOutput {
	return o.ApplyT(func(v ExportConfigurationType) string { return v.StorageName }).(pulumi.StringOutput)
}

// The subscription of the Application Insights component.
func (o ExportConfigurationTypeOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v ExportConfigurationType) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

// Properties that define a favorite that is associated to an Application Insights component.
type FavoriteType struct {
	// Favorite category, as defined by the user at creation time.
	Category *string `pulumi:"Category"`
	// Configuration of this particular favorite, which are driven by the Azure portal UX. Configuration data is a string containing valid JSON
	Config *string `pulumi:"Config"`
	// Internally assigned unique id of the favorite definition.
	FavoriteId string `pulumi:"FavoriteId"`
	// Enum indicating if this favorite definition is owned by a specific user or is shared between all users with access to the Application Insights component.
	FavoriteType *string `pulumi:"FavoriteType"`
	// Flag denoting wether or not this favorite was generated from a template.
	IsGeneratedFromTemplate *bool `pulumi:"IsGeneratedFromTemplate"`
	// The user-defined name of the favorite.
	Name *string `pulumi:"Name"`
	// The source of the favorite definition.
	SourceType *string `pulumi:"SourceType"`
	// A list of 0 or more tags that are associated with this favorite definition
	Tags []string `pulumi:"Tags"`
	// Date and time in UTC of the last modification that was made to this favorite definition.
	TimeModified string `pulumi:"TimeModified"`
	// Unique user id of the specific user that owns this favorite.
	UserId string `pulumi:"UserId"`
	// This instance's version of the data model. This can change as new features are added that can be marked favorite. Current examples include MetricsExplorer (ME) and Search.
	Version *string `pulumi:"Version"`
}

// FavoriteTypeInput is an input type that accepts FavoriteTypeArgs and FavoriteTypeOutput values.
// You can construct a concrete instance of `FavoriteTypeInput` via:
//
//          FavoriteTypeArgs{...}
type FavoriteTypeInput interface {
	pulumi.Input

	ToFavoriteTypeOutput() FavoriteTypeOutput
	ToFavoriteTypeOutputWithContext(context.Context) FavoriteTypeOutput
}

// Properties that define a favorite that is associated to an Application Insights component.
type FavoriteTypeArgs struct {
	// Favorite category, as defined by the user at creation time.
	Category pulumi.StringPtrInput `pulumi:"Category"`
	// Configuration of this particular favorite, which are driven by the Azure portal UX. Configuration data is a string containing valid JSON
	Config pulumi.StringPtrInput `pulumi:"Config"`
	// Internally assigned unique id of the favorite definition.
	FavoriteId pulumi.StringInput `pulumi:"FavoriteId"`
	// Enum indicating if this favorite definition is owned by a specific user or is shared between all users with access to the Application Insights component.
	FavoriteType pulumi.StringPtrInput `pulumi:"FavoriteType"`
	// Flag denoting wether or not this favorite was generated from a template.
	IsGeneratedFromTemplate pulumi.BoolPtrInput `pulumi:"IsGeneratedFromTemplate"`
	// The user-defined name of the favorite.
	Name pulumi.StringPtrInput `pulumi:"Name"`
	// The source of the favorite definition.
	SourceType pulumi.StringPtrInput `pulumi:"SourceType"`
	// A list of 0 or more tags that are associated with this favorite definition
	Tags pulumi.StringArrayInput `pulumi:"Tags"`
	// Date and time in UTC of the last modification that was made to this favorite definition.
	TimeModified pulumi.StringInput `pulumi:"TimeModified"`
	// Unique user id of the specific user that owns this favorite.
	UserId pulumi.StringInput `pulumi:"UserId"`
	// This instance's version of the data model. This can change as new features are added that can be marked favorite. Current examples include MetricsExplorer (ME) and Search.
	Version pulumi.StringPtrInput `pulumi:"Version"`
}

func (FavoriteTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FavoriteType)(nil)).Elem()
}

func (i FavoriteTypeArgs) ToFavoriteTypeOutput() FavoriteTypeOutput {
	return i.ToFavoriteTypeOutputWithContext(context.Background())
}

func (i FavoriteTypeArgs) ToFavoriteTypeOutputWithContext(ctx context.Context) FavoriteTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FavoriteTypeOutput)
}

// Properties that define a favorite that is associated to an Application Insights component.
type FavoriteTypeOutput struct{ *pulumi.OutputState }

func (FavoriteTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FavoriteType)(nil)).Elem()
}

func (o FavoriteTypeOutput) ToFavoriteTypeOutput() FavoriteTypeOutput {
	return o
}

func (o FavoriteTypeOutput) ToFavoriteTypeOutputWithContext(ctx context.Context) FavoriteTypeOutput {
	return o
}

// Favorite category, as defined by the user at creation time.
func (o FavoriteTypeOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FavoriteType) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Configuration of this particular favorite, which are driven by the Azure portal UX. Configuration data is a string containing valid JSON
func (o FavoriteTypeOutput) Config() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FavoriteType) *string { return v.Config }).(pulumi.StringPtrOutput)
}

// Internally assigned unique id of the favorite definition.
func (o FavoriteTypeOutput) FavoriteId() pulumi.StringOutput {
	return o.ApplyT(func(v FavoriteType) string { return v.FavoriteId }).(pulumi.StringOutput)
}

// Enum indicating if this favorite definition is owned by a specific user or is shared between all users with access to the Application Insights component.
func (o FavoriteTypeOutput) FavoriteType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FavoriteType) *string { return v.FavoriteType }).(pulumi.StringPtrOutput)
}

// Flag denoting wether or not this favorite was generated from a template.
func (o FavoriteTypeOutput) IsGeneratedFromTemplate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FavoriteType) *bool { return v.IsGeneratedFromTemplate }).(pulumi.BoolPtrOutput)
}

// The user-defined name of the favorite.
func (o FavoriteTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FavoriteType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The source of the favorite definition.
func (o FavoriteTypeOutput) SourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FavoriteType) *string { return v.SourceType }).(pulumi.StringPtrOutput)
}

// A list of 0 or more tags that are associated with this favorite definition
func (o FavoriteTypeOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FavoriteType) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// Date and time in UTC of the last modification that was made to this favorite definition.
func (o FavoriteTypeOutput) TimeModified() pulumi.StringOutput {
	return o.ApplyT(func(v FavoriteType) string { return v.TimeModified }).(pulumi.StringOutput)
}

// Unique user id of the specific user that owns this favorite.
func (o FavoriteTypeOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v FavoriteType) string { return v.UserId }).(pulumi.StringOutput)
}

// This instance's version of the data model. This can change as new features are added that can be marked favorite. Current examples include MetricsExplorer (ME) and Search.
func (o FavoriteTypeOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FavoriteType) *string { return v.Version }).(pulumi.StringPtrOutput)
}

// The private link scope resource reference.
type PrivateLinkScopedResource struct {
	// The full resource Id of the private link scope resource.
	ResourceId *string `pulumi:"ResourceId"`
	// The private link scope unique Identifier.
	ScopeId *string `pulumi:"ScopeId"`
}

// PrivateLinkScopedResourceInput is an input type that accepts PrivateLinkScopedResourceArgs and PrivateLinkScopedResourceOutput values.
// You can construct a concrete instance of `PrivateLinkScopedResourceInput` via:
//
//          PrivateLinkScopedResourceArgs{...}
type PrivateLinkScopedResourceInput interface {
	pulumi.Input

	ToPrivateLinkScopedResourceOutput() PrivateLinkScopedResourceOutput
	ToPrivateLinkScopedResourceOutputWithContext(context.Context) PrivateLinkScopedResourceOutput
}

// The private link scope resource reference.
type PrivateLinkScopedResourceArgs struct {
	// The full resource Id of the private link scope resource.
	ResourceId pulumi.StringPtrInput `pulumi:"ResourceId"`
	// The private link scope unique Identifier.
	ScopeId pulumi.StringPtrInput `pulumi:"ScopeId"`
}

func (PrivateLinkScopedResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkScopedResource)(nil)).Elem()
}

func (i PrivateLinkScopedResourceArgs) ToPrivateLinkScopedResourceOutput() PrivateLinkScopedResourceOutput {
	return i.ToPrivateLinkScopedResourceOutputWithContext(context.Background())
}

func (i PrivateLinkScopedResourceArgs) ToPrivateLinkScopedResourceOutputWithContext(ctx context.Context) PrivateLinkScopedResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkScopedResourceOutput)
}

// The private link scope resource reference.
type PrivateLinkScopedResourceOutput struct{ *pulumi.OutputState }

func (PrivateLinkScopedResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkScopedResource)(nil)).Elem()
}

func (o PrivateLinkScopedResourceOutput) ToPrivateLinkScopedResourceOutput() PrivateLinkScopedResourceOutput {
	return o
}

func (o PrivateLinkScopedResourceOutput) ToPrivateLinkScopedResourceOutputWithContext(ctx context.Context) PrivateLinkScopedResourceOutput {
	return o
}

// The full resource Id of the private link scope resource.
func (o PrivateLinkScopedResourceOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkScopedResource) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// The private link scope unique Identifier.
func (o PrivateLinkScopedResourceOutput) ScopeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkScopedResource) *string { return v.ScopeId }).(pulumi.StringPtrOutput)
}

// The private link scope resource reference.
type PrivateLinkScopedResourceResponse struct {
	// The full resource Id of the private link scope resource.
	ResourceId *string `pulumi:"ResourceId"`
	// The private link scope unique Identifier.
	ScopeId *string `pulumi:"ScopeId"`
}

// PrivateLinkScopedResourceResponseInput is an input type that accepts PrivateLinkScopedResourceResponseArgs and PrivateLinkScopedResourceResponseOutput values.
// You can construct a concrete instance of `PrivateLinkScopedResourceResponseInput` via:
//
//          PrivateLinkScopedResourceResponseArgs{...}
type PrivateLinkScopedResourceResponseInput interface {
	pulumi.Input

	ToPrivateLinkScopedResourceResponseOutput() PrivateLinkScopedResourceResponseOutput
	ToPrivateLinkScopedResourceResponseOutputWithContext(context.Context) PrivateLinkScopedResourceResponseOutput
}

// The private link scope resource reference.
type PrivateLinkScopedResourceResponseArgs struct {
	// The full resource Id of the private link scope resource.
	ResourceId pulumi.StringPtrInput `pulumi:"ResourceId"`
	// The private link scope unique Identifier.
	ScopeId pulumi.StringPtrInput `pulumi:"ScopeId"`
}

func (PrivateLinkScopedResourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkScopedResourceResponse)(nil)).Elem()
}

func (i PrivateLinkScopedResourceResponseArgs) ToPrivateLinkScopedResourceResponseOutput() PrivateLinkScopedResourceResponseOutput {
	return i.ToPrivateLinkScopedResourceResponseOutputWithContext(context.Background())
}

func (i PrivateLinkScopedResourceResponseArgs) ToPrivateLinkScopedResourceResponseOutputWithContext(ctx context.Context) PrivateLinkScopedResourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkScopedResourceResponseOutput)
}

// PrivateLinkScopedResourceResponseArrayInput is an input type that accepts PrivateLinkScopedResourceResponseArray and PrivateLinkScopedResourceResponseArrayOutput values.
// You can construct a concrete instance of `PrivateLinkScopedResourceResponseArrayInput` via:
//
//          PrivateLinkScopedResourceResponseArray{ PrivateLinkScopedResourceResponseArgs{...} }
type PrivateLinkScopedResourceResponseArrayInput interface {
	pulumi.Input

	ToPrivateLinkScopedResourceResponseArrayOutput() PrivateLinkScopedResourceResponseArrayOutput
	ToPrivateLinkScopedResourceResponseArrayOutputWithContext(context.Context) PrivateLinkScopedResourceResponseArrayOutput
}

type PrivateLinkScopedResourceResponseArray []PrivateLinkScopedResourceResponseInput

func (PrivateLinkScopedResourceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateLinkScopedResourceResponse)(nil)).Elem()
}

func (i PrivateLinkScopedResourceResponseArray) ToPrivateLinkScopedResourceResponseArrayOutput() PrivateLinkScopedResourceResponseArrayOutput {
	return i.ToPrivateLinkScopedResourceResponseArrayOutputWithContext(context.Background())
}

func (i PrivateLinkScopedResourceResponseArray) ToPrivateLinkScopedResourceResponseArrayOutputWithContext(ctx context.Context) PrivateLinkScopedResourceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkScopedResourceResponseArrayOutput)
}

// The private link scope resource reference.
type PrivateLinkScopedResourceResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkScopedResourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkScopedResourceResponse)(nil)).Elem()
}

func (o PrivateLinkScopedResourceResponseOutput) ToPrivateLinkScopedResourceResponseOutput() PrivateLinkScopedResourceResponseOutput {
	return o
}

func (o PrivateLinkScopedResourceResponseOutput) ToPrivateLinkScopedResourceResponseOutputWithContext(ctx context.Context) PrivateLinkScopedResourceResponseOutput {
	return o
}

// The full resource Id of the private link scope resource.
func (o PrivateLinkScopedResourceResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkScopedResourceResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// The private link scope unique Identifier.
func (o PrivateLinkScopedResourceResponseOutput) ScopeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkScopedResourceResponse) *string { return v.ScopeId }).(pulumi.StringPtrOutput)
}

type PrivateLinkScopedResourceResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateLinkScopedResourceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateLinkScopedResourceResponse)(nil)).Elem()
}

func (o PrivateLinkScopedResourceResponseArrayOutput) ToPrivateLinkScopedResourceResponseArrayOutput() PrivateLinkScopedResourceResponseArrayOutput {
	return o
}

func (o PrivateLinkScopedResourceResponseArrayOutput) ToPrivateLinkScopedResourceResponseArrayOutputWithContext(ctx context.Context) PrivateLinkScopedResourceResponseArrayOutput {
	return o
}

func (o PrivateLinkScopedResourceResponseArrayOutput) Index(i pulumi.IntInput) PrivateLinkScopedResourceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateLinkScopedResourceResponse {
		return vs[0].([]PrivateLinkScopedResourceResponse)[vs[1].(int)]
	}).(PrivateLinkScopedResourceResponseOutput)
}

// An Application Insights web test definition.
type WebTestType struct {
	// The kind of web test that this web test watches. Choices are ping and multistep.
	Kind *string `pulumi:"kind"`
	// Resource location
	Location string `pulumi:"location"`
	// Azure resource name
	Name string `pulumi:"name"`
	// Metadata describing a web test for an Azure resource.
	Properties WebTestPropertiesResponse `pulumi:"properties"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Azure resource type
	Type string `pulumi:"type"`
}

// WebTestTypeInput is an input type that accepts WebTestTypeArgs and WebTestTypeOutput values.
// You can construct a concrete instance of `WebTestTypeInput` via:
//
//          WebTestTypeArgs{...}
type WebTestTypeInput interface {
	pulumi.Input

	ToWebTestTypeOutput() WebTestTypeOutput
	ToWebTestTypeOutputWithContext(context.Context) WebTestTypeOutput
}

// An Application Insights web test definition.
type WebTestTypeArgs struct {
	// The kind of web test that this web test watches. Choices are ping and multistep.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource location
	Location pulumi.StringInput `pulumi:"location"`
	// Azure resource name
	Name pulumi.StringInput `pulumi:"name"`
	// Metadata describing a web test for an Azure resource.
	Properties WebTestPropertiesResponseInput `pulumi:"properties"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Azure resource type
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebTestTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTestType)(nil)).Elem()
}

func (i WebTestTypeArgs) ToWebTestTypeOutput() WebTestTypeOutput {
	return i.ToWebTestTypeOutputWithContext(context.Background())
}

func (i WebTestTypeArgs) ToWebTestTypeOutputWithContext(ctx context.Context) WebTestTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTestTypeOutput)
}

// An Application Insights web test definition.
type WebTestTypeOutput struct{ *pulumi.OutputState }

func (WebTestTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTestType)(nil)).Elem()
}

func (o WebTestTypeOutput) ToWebTestTypeOutput() WebTestTypeOutput {
	return o
}

func (o WebTestTypeOutput) ToWebTestTypeOutputWithContext(ctx context.Context) WebTestTypeOutput {
	return o
}

// The kind of web test that this web test watches. Choices are ping and multistep.
func (o WebTestTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebTestType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource location
func (o WebTestTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v WebTestType) string { return v.Location }).(pulumi.StringOutput)
}

// Azure resource name
func (o WebTestTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebTestType) string { return v.Name }).(pulumi.StringOutput)
}

// Metadata describing a web test for an Azure resource.
func (o WebTestTypeOutput) Properties() WebTestPropertiesResponseOutput {
	return o.ApplyT(func(v WebTestType) WebTestPropertiesResponse { return v.Properties }).(WebTestPropertiesResponseOutput)
}

// Resource tags
func (o WebTestTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v WebTestType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Azure resource type
func (o WebTestTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebTestType) string { return v.Type }).(pulumi.StringOutput)
}

// Geo-physical location to run a web test from. You must specify one or more locations for the test to run from.
type WebTestGeolocation struct {
	// Location ID for the webtest to run from.
	Location *string `pulumi:"location"`
}

// WebTestGeolocationInput is an input type that accepts WebTestGeolocationArgs and WebTestGeolocationOutput values.
// You can construct a concrete instance of `WebTestGeolocationInput` via:
//
//          WebTestGeolocationArgs{...}
type WebTestGeolocationInput interface {
	pulumi.Input

	ToWebTestGeolocationOutput() WebTestGeolocationOutput
	ToWebTestGeolocationOutputWithContext(context.Context) WebTestGeolocationOutput
}

// Geo-physical location to run a web test from. You must specify one or more locations for the test to run from.
type WebTestGeolocationArgs struct {
	// Location ID for the webtest to run from.
	Location pulumi.StringPtrInput `pulumi:"location"`
}

func (WebTestGeolocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTestGeolocation)(nil)).Elem()
}

func (i WebTestGeolocationArgs) ToWebTestGeolocationOutput() WebTestGeolocationOutput {
	return i.ToWebTestGeolocationOutputWithContext(context.Background())
}

func (i WebTestGeolocationArgs) ToWebTestGeolocationOutputWithContext(ctx context.Context) WebTestGeolocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTestGeolocationOutput)
}

// WebTestGeolocationArrayInput is an input type that accepts WebTestGeolocationArray and WebTestGeolocationArrayOutput values.
// You can construct a concrete instance of `WebTestGeolocationArrayInput` via:
//
//          WebTestGeolocationArray{ WebTestGeolocationArgs{...} }
type WebTestGeolocationArrayInput interface {
	pulumi.Input

	ToWebTestGeolocationArrayOutput() WebTestGeolocationArrayOutput
	ToWebTestGeolocationArrayOutputWithContext(context.Context) WebTestGeolocationArrayOutput
}

type WebTestGeolocationArray []WebTestGeolocationInput

func (WebTestGeolocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebTestGeolocation)(nil)).Elem()
}

func (i WebTestGeolocationArray) ToWebTestGeolocationArrayOutput() WebTestGeolocationArrayOutput {
	return i.ToWebTestGeolocationArrayOutputWithContext(context.Background())
}

func (i WebTestGeolocationArray) ToWebTestGeolocationArrayOutputWithContext(ctx context.Context) WebTestGeolocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTestGeolocationArrayOutput)
}

// Geo-physical location to run a web test from. You must specify one or more locations for the test to run from.
type WebTestGeolocationOutput struct{ *pulumi.OutputState }

func (WebTestGeolocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTestGeolocation)(nil)).Elem()
}

func (o WebTestGeolocationOutput) ToWebTestGeolocationOutput() WebTestGeolocationOutput {
	return o
}

func (o WebTestGeolocationOutput) ToWebTestGeolocationOutputWithContext(ctx context.Context) WebTestGeolocationOutput {
	return o
}

// Location ID for the webtest to run from.
func (o WebTestGeolocationOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebTestGeolocation) *string { return v.Location }).(pulumi.StringPtrOutput)
}

type WebTestGeolocationArrayOutput struct{ *pulumi.OutputState }

func (WebTestGeolocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebTestGeolocation)(nil)).Elem()
}

func (o WebTestGeolocationArrayOutput) ToWebTestGeolocationArrayOutput() WebTestGeolocationArrayOutput {
	return o
}

func (o WebTestGeolocationArrayOutput) ToWebTestGeolocationArrayOutputWithContext(ctx context.Context) WebTestGeolocationArrayOutput {
	return o
}

func (o WebTestGeolocationArrayOutput) Index(i pulumi.IntInput) WebTestGeolocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebTestGeolocation {
		return vs[0].([]WebTestGeolocation)[vs[1].(int)]
	}).(WebTestGeolocationOutput)
}

// Geo-physical location to run a web test from. You must specify one or more locations for the test to run from.
type WebTestGeolocationResponse struct {
	// Location ID for the webtest to run from.
	Id *string `pulumi:"Id"`
}

// WebTestGeolocationResponseInput is an input type that accepts WebTestGeolocationResponseArgs and WebTestGeolocationResponseOutput values.
// You can construct a concrete instance of `WebTestGeolocationResponseInput` via:
//
//          WebTestGeolocationResponseArgs{...}
type WebTestGeolocationResponseInput interface {
	pulumi.Input

	ToWebTestGeolocationResponseOutput() WebTestGeolocationResponseOutput
	ToWebTestGeolocationResponseOutputWithContext(context.Context) WebTestGeolocationResponseOutput
}

// Geo-physical location to run a web test from. You must specify one or more locations for the test to run from.
type WebTestGeolocationResponseArgs struct {
	// Location ID for the webtest to run from.
	Id pulumi.StringPtrInput `pulumi:"Id"`
}

func (WebTestGeolocationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTestGeolocationResponse)(nil)).Elem()
}

func (i WebTestGeolocationResponseArgs) ToWebTestGeolocationResponseOutput() WebTestGeolocationResponseOutput {
	return i.ToWebTestGeolocationResponseOutputWithContext(context.Background())
}

func (i WebTestGeolocationResponseArgs) ToWebTestGeolocationResponseOutputWithContext(ctx context.Context) WebTestGeolocationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTestGeolocationResponseOutput)
}

// WebTestGeolocationResponseArrayInput is an input type that accepts WebTestGeolocationResponseArray and WebTestGeolocationResponseArrayOutput values.
// You can construct a concrete instance of `WebTestGeolocationResponseArrayInput` via:
//
//          WebTestGeolocationResponseArray{ WebTestGeolocationResponseArgs{...} }
type WebTestGeolocationResponseArrayInput interface {
	pulumi.Input

	ToWebTestGeolocationResponseArrayOutput() WebTestGeolocationResponseArrayOutput
	ToWebTestGeolocationResponseArrayOutputWithContext(context.Context) WebTestGeolocationResponseArrayOutput
}

type WebTestGeolocationResponseArray []WebTestGeolocationResponseInput

func (WebTestGeolocationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebTestGeolocationResponse)(nil)).Elem()
}

func (i WebTestGeolocationResponseArray) ToWebTestGeolocationResponseArrayOutput() WebTestGeolocationResponseArrayOutput {
	return i.ToWebTestGeolocationResponseArrayOutputWithContext(context.Background())
}

func (i WebTestGeolocationResponseArray) ToWebTestGeolocationResponseArrayOutputWithContext(ctx context.Context) WebTestGeolocationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTestGeolocationResponseArrayOutput)
}

// Geo-physical location to run a web test from. You must specify one or more locations for the test to run from.
type WebTestGeolocationResponseOutput struct{ *pulumi.OutputState }

func (WebTestGeolocationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTestGeolocationResponse)(nil)).Elem()
}

func (o WebTestGeolocationResponseOutput) ToWebTestGeolocationResponseOutput() WebTestGeolocationResponseOutput {
	return o
}

func (o WebTestGeolocationResponseOutput) ToWebTestGeolocationResponseOutputWithContext(ctx context.Context) WebTestGeolocationResponseOutput {
	return o
}

// Location ID for the webtest to run from.
func (o WebTestGeolocationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebTestGeolocationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type WebTestGeolocationResponseArrayOutput struct{ *pulumi.OutputState }

func (WebTestGeolocationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebTestGeolocationResponse)(nil)).Elem()
}

func (o WebTestGeolocationResponseArrayOutput) ToWebTestGeolocationResponseArrayOutput() WebTestGeolocationResponseArrayOutput {
	return o
}

func (o WebTestGeolocationResponseArrayOutput) ToWebTestGeolocationResponseArrayOutputWithContext(ctx context.Context) WebTestGeolocationResponseArrayOutput {
	return o
}

func (o WebTestGeolocationResponseArrayOutput) Index(i pulumi.IntInput) WebTestGeolocationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebTestGeolocationResponse {
		return vs[0].([]WebTestGeolocationResponse)[vs[1].(int)]
	}).(WebTestGeolocationResponseOutput)
}

// Metadata describing a web test for an Azure resource.
type WebTestProperties struct {
	// An XML configuration specification for a WebTest.
	Configuration *WebTestPropertiesProperties `pulumi:"Configuration"`
	// Purpose/user defined descriptive test for this WebTest.
	Description *string `pulumi:"Description"`
	// Is the test actively being monitored.
	Enabled *bool `pulumi:"Enabled"`
	// Interval in seconds between test runs for this WebTest. Default value is 300.
	Frequency *int `pulumi:"Frequency"`
	// A list of where to physically run the tests from to give global coverage for accessibility of your application.
	Locations []WebTestGeolocation `pulumi:"Locations"`
	// Allow for retries should this WebTest fail.
	RetryEnabled *bool `pulumi:"RetryEnabled"`
	// Unique ID of this WebTest. This is typically the same value as the Name field.
	SyntheticMonitorId string `pulumi:"SyntheticMonitorId"`
	// Seconds until this WebTest will timeout and fail. Default value is 30.
	Timeout *int `pulumi:"Timeout"`
	// The kind of web test this is, valid choices are ping and multistep.
	WebTestKind string `pulumi:"webTestKind"`
	// User defined name if this WebTest.
	WebTestName string `pulumi:"webTestName"`
}

// WebTestPropertiesInput is an input type that accepts WebTestPropertiesArgs and WebTestPropertiesOutput values.
// You can construct a concrete instance of `WebTestPropertiesInput` via:
//
//          WebTestPropertiesArgs{...}
type WebTestPropertiesInput interface {
	pulumi.Input

	ToWebTestPropertiesOutput() WebTestPropertiesOutput
	ToWebTestPropertiesOutputWithContext(context.Context) WebTestPropertiesOutput
}

// Metadata describing a web test for an Azure resource.
type WebTestPropertiesArgs struct {
	// An XML configuration specification for a WebTest.
	Configuration WebTestPropertiesPropertiesPtrInput `pulumi:"Configuration"`
	// Purpose/user defined descriptive test for this WebTest.
	Description pulumi.StringPtrInput `pulumi:"Description"`
	// Is the test actively being monitored.
	Enabled pulumi.BoolPtrInput `pulumi:"Enabled"`
	// Interval in seconds between test runs for this WebTest. Default value is 300.
	Frequency pulumi.IntPtrInput `pulumi:"Frequency"`
	// A list of where to physically run the tests from to give global coverage for accessibility of your application.
	Locations WebTestGeolocationArrayInput `pulumi:"Locations"`
	// Allow for retries should this WebTest fail.
	RetryEnabled pulumi.BoolPtrInput `pulumi:"RetryEnabled"`
	// Unique ID of this WebTest. This is typically the same value as the Name field.
	SyntheticMonitorId pulumi.StringInput `pulumi:"SyntheticMonitorId"`
	// Seconds until this WebTest will timeout and fail. Default value is 30.
	Timeout pulumi.IntPtrInput `pulumi:"Timeout"`
	// The kind of web test this is, valid choices are ping and multistep.
	WebTestKind pulumi.StringInput `pulumi:"webTestKind"`
	// User defined name if this WebTest.
	WebTestName pulumi.StringInput `pulumi:"webTestName"`
}

func (WebTestPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTestProperties)(nil)).Elem()
}

func (i WebTestPropertiesArgs) ToWebTestPropertiesOutput() WebTestPropertiesOutput {
	return i.ToWebTestPropertiesOutputWithContext(context.Background())
}

func (i WebTestPropertiesArgs) ToWebTestPropertiesOutputWithContext(ctx context.Context) WebTestPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTestPropertiesOutput)
}

func (i WebTestPropertiesArgs) ToWebTestPropertiesPtrOutput() WebTestPropertiesPtrOutput {
	return i.ToWebTestPropertiesPtrOutputWithContext(context.Background())
}

func (i WebTestPropertiesArgs) ToWebTestPropertiesPtrOutputWithContext(ctx context.Context) WebTestPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTestPropertiesOutput).ToWebTestPropertiesPtrOutputWithContext(ctx)
}

// WebTestPropertiesPtrInput is an input type that accepts WebTestPropertiesArgs, WebTestPropertiesPtr and WebTestPropertiesPtrOutput values.
// You can construct a concrete instance of `WebTestPropertiesPtrInput` via:
//
//          WebTestPropertiesArgs{...}
//
//  or:
//
//          nil
type WebTestPropertiesPtrInput interface {
	pulumi.Input

	ToWebTestPropertiesPtrOutput() WebTestPropertiesPtrOutput
	ToWebTestPropertiesPtrOutputWithContext(context.Context) WebTestPropertiesPtrOutput
}

type webTestPropertiesPtrType WebTestPropertiesArgs

func WebTestPropertiesPtr(v *WebTestPropertiesArgs) WebTestPropertiesPtrInput {
	return (*webTestPropertiesPtrType)(v)
}

func (*webTestPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebTestProperties)(nil)).Elem()
}

func (i *webTestPropertiesPtrType) ToWebTestPropertiesPtrOutput() WebTestPropertiesPtrOutput {
	return i.ToWebTestPropertiesPtrOutputWithContext(context.Background())
}

func (i *webTestPropertiesPtrType) ToWebTestPropertiesPtrOutputWithContext(ctx context.Context) WebTestPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTestPropertiesPtrOutput)
}

// Metadata describing a web test for an Azure resource.
type WebTestPropertiesOutput struct{ *pulumi.OutputState }

func (WebTestPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTestProperties)(nil)).Elem()
}

func (o WebTestPropertiesOutput) ToWebTestPropertiesOutput() WebTestPropertiesOutput {
	return o
}

func (o WebTestPropertiesOutput) ToWebTestPropertiesOutputWithContext(ctx context.Context) WebTestPropertiesOutput {
	return o
}

func (o WebTestPropertiesOutput) ToWebTestPropertiesPtrOutput() WebTestPropertiesPtrOutput {
	return o.ToWebTestPropertiesPtrOutputWithContext(context.Background())
}

func (o WebTestPropertiesOutput) ToWebTestPropertiesPtrOutputWithContext(ctx context.Context) WebTestPropertiesPtrOutput {
	return o.ApplyT(func(v WebTestProperties) *WebTestProperties {
		return &v
	}).(WebTestPropertiesPtrOutput)
}

// An XML configuration specification for a WebTest.
func (o WebTestPropertiesOutput) Configuration() WebTestPropertiesPropertiesPtrOutput {
	return o.ApplyT(func(v WebTestProperties) *WebTestPropertiesProperties { return v.Configuration }).(WebTestPropertiesPropertiesPtrOutput)
}

// Purpose/user defined descriptive test for this WebTest.
func (o WebTestPropertiesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebTestProperties) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Is the test actively being monitored.
func (o WebTestPropertiesOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebTestProperties) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Interval in seconds between test runs for this WebTest. Default value is 300.
func (o WebTestPropertiesOutput) Frequency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebTestProperties) *int { return v.Frequency }).(pulumi.IntPtrOutput)
}

// A list of where to physically run the tests from to give global coverage for accessibility of your application.
func (o WebTestPropertiesOutput) Locations() WebTestGeolocationArrayOutput {
	return o.ApplyT(func(v WebTestProperties) []WebTestGeolocation { return v.Locations }).(WebTestGeolocationArrayOutput)
}

// Allow for retries should this WebTest fail.
func (o WebTestPropertiesOutput) RetryEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebTestProperties) *bool { return v.RetryEnabled }).(pulumi.BoolPtrOutput)
}

// Unique ID of this WebTest. This is typically the same value as the Name field.
func (o WebTestPropertiesOutput) SyntheticMonitorId() pulumi.StringOutput {
	return o.ApplyT(func(v WebTestProperties) string { return v.SyntheticMonitorId }).(pulumi.StringOutput)
}

// Seconds until this WebTest will timeout and fail. Default value is 30.
func (o WebTestPropertiesOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebTestProperties) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The kind of web test this is, valid choices are ping and multistep.
func (o WebTestPropertiesOutput) WebTestKind() pulumi.StringOutput {
	return o.ApplyT(func(v WebTestProperties) string { return v.WebTestKind }).(pulumi.StringOutput)
}

// User defined name if this WebTest.
func (o WebTestPropertiesOutput) WebTestName() pulumi.StringOutput {
	return o.ApplyT(func(v WebTestProperties) string { return v.WebTestName }).(pulumi.StringOutput)
}

type WebTestPropertiesPtrOutput struct{ *pulumi.OutputState }

func (WebTestPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebTestProperties)(nil)).Elem()
}

func (o WebTestPropertiesPtrOutput) ToWebTestPropertiesPtrOutput() WebTestPropertiesPtrOutput {
	return o
}

func (o WebTestPropertiesPtrOutput) ToWebTestPropertiesPtrOutputWithContext(ctx context.Context) WebTestPropertiesPtrOutput {
	return o
}

func (o WebTestPropertiesPtrOutput) Elem() WebTestPropertiesOutput {
	return o.ApplyT(func(v *WebTestProperties) WebTestProperties { return *v }).(WebTestPropertiesOutput)
}

// An XML configuration specification for a WebTest.
func (o WebTestPropertiesPtrOutput) Configuration() WebTestPropertiesPropertiesPtrOutput {
	return o.ApplyT(func(v *WebTestProperties) *WebTestPropertiesProperties {
		if v == nil {
			return nil
		}
		return v.Configuration
	}).(WebTestPropertiesPropertiesPtrOutput)
}

// Purpose/user defined descriptive test for this WebTest.
func (o WebTestPropertiesPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebTestProperties) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Is the test actively being monitored.
func (o WebTestPropertiesPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebTestProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Interval in seconds between test runs for this WebTest. Default value is 300.
func (o WebTestPropertiesPtrOutput) Frequency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebTestProperties) *int {
		if v == nil {
			return nil
		}
		return v.Frequency
	}).(pulumi.IntPtrOutput)
}

// A list of where to physically run the tests from to give global coverage for accessibility of your application.
func (o WebTestPropertiesPtrOutput) Locations() WebTestGeolocationArrayOutput {
	return o.ApplyT(func(v *WebTestProperties) []WebTestGeolocation {
		if v == nil {
			return nil
		}
		return v.Locations
	}).(WebTestGeolocationArrayOutput)
}

// Allow for retries should this WebTest fail.
func (o WebTestPropertiesPtrOutput) RetryEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebTestProperties) *bool {
		if v == nil {
			return nil
		}
		return v.RetryEnabled
	}).(pulumi.BoolPtrOutput)
}

// Unique ID of this WebTest. This is typically the same value as the Name field.
func (o WebTestPropertiesPtrOutput) SyntheticMonitorId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebTestProperties) *string {
		if v == nil {
			return nil
		}
		return &v.SyntheticMonitorId
	}).(pulumi.StringPtrOutput)
}

// Seconds until this WebTest will timeout and fail. Default value is 30.
func (o WebTestPropertiesPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebTestProperties) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

// The kind of web test this is, valid choices are ping and multistep.
func (o WebTestPropertiesPtrOutput) WebTestKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebTestProperties) *string {
		if v == nil {
			return nil
		}
		return &v.WebTestKind
	}).(pulumi.StringPtrOutput)
}

// User defined name if this WebTest.
func (o WebTestPropertiesPtrOutput) WebTestName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebTestProperties) *string {
		if v == nil {
			return nil
		}
		return &v.WebTestName
	}).(pulumi.StringPtrOutput)
}

// An XML configuration specification for a WebTest.
type WebTestPropertiesProperties struct {
	// The XML specification of a WebTest to run against an application.
	WebTest *string `pulumi:"WebTest"`
}

// WebTestPropertiesPropertiesInput is an input type that accepts WebTestPropertiesPropertiesArgs and WebTestPropertiesPropertiesOutput values.
// You can construct a concrete instance of `WebTestPropertiesPropertiesInput` via:
//
//          WebTestPropertiesPropertiesArgs{...}
type WebTestPropertiesPropertiesInput interface {
	pulumi.Input

	ToWebTestPropertiesPropertiesOutput() WebTestPropertiesPropertiesOutput
	ToWebTestPropertiesPropertiesOutputWithContext(context.Context) WebTestPropertiesPropertiesOutput
}

// An XML configuration specification for a WebTest.
type WebTestPropertiesPropertiesArgs struct {
	// The XML specification of a WebTest to run against an application.
	WebTest pulumi.StringPtrInput `pulumi:"WebTest"`
}

func (WebTestPropertiesPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTestPropertiesProperties)(nil)).Elem()
}

func (i WebTestPropertiesPropertiesArgs) ToWebTestPropertiesPropertiesOutput() WebTestPropertiesPropertiesOutput {
	return i.ToWebTestPropertiesPropertiesOutputWithContext(context.Background())
}

func (i WebTestPropertiesPropertiesArgs) ToWebTestPropertiesPropertiesOutputWithContext(ctx context.Context) WebTestPropertiesPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTestPropertiesPropertiesOutput)
}

func (i WebTestPropertiesPropertiesArgs) ToWebTestPropertiesPropertiesPtrOutput() WebTestPropertiesPropertiesPtrOutput {
	return i.ToWebTestPropertiesPropertiesPtrOutputWithContext(context.Background())
}

func (i WebTestPropertiesPropertiesArgs) ToWebTestPropertiesPropertiesPtrOutputWithContext(ctx context.Context) WebTestPropertiesPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTestPropertiesPropertiesOutput).ToWebTestPropertiesPropertiesPtrOutputWithContext(ctx)
}

// WebTestPropertiesPropertiesPtrInput is an input type that accepts WebTestPropertiesPropertiesArgs, WebTestPropertiesPropertiesPtr and WebTestPropertiesPropertiesPtrOutput values.
// You can construct a concrete instance of `WebTestPropertiesPropertiesPtrInput` via:
//
//          WebTestPropertiesPropertiesArgs{...}
//
//  or:
//
//          nil
type WebTestPropertiesPropertiesPtrInput interface {
	pulumi.Input

	ToWebTestPropertiesPropertiesPtrOutput() WebTestPropertiesPropertiesPtrOutput
	ToWebTestPropertiesPropertiesPtrOutputWithContext(context.Context) WebTestPropertiesPropertiesPtrOutput
}

type webTestPropertiesPropertiesPtrType WebTestPropertiesPropertiesArgs

func WebTestPropertiesPropertiesPtr(v *WebTestPropertiesPropertiesArgs) WebTestPropertiesPropertiesPtrInput {
	return (*webTestPropertiesPropertiesPtrType)(v)
}

func (*webTestPropertiesPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebTestPropertiesProperties)(nil)).Elem()
}

func (i *webTestPropertiesPropertiesPtrType) ToWebTestPropertiesPropertiesPtrOutput() WebTestPropertiesPropertiesPtrOutput {
	return i.ToWebTestPropertiesPropertiesPtrOutputWithContext(context.Background())
}

func (i *webTestPropertiesPropertiesPtrType) ToWebTestPropertiesPropertiesPtrOutputWithContext(ctx context.Context) WebTestPropertiesPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTestPropertiesPropertiesPtrOutput)
}

// An XML configuration specification for a WebTest.
type WebTestPropertiesPropertiesOutput struct{ *pulumi.OutputState }

func (WebTestPropertiesPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTestPropertiesProperties)(nil)).Elem()
}

func (o WebTestPropertiesPropertiesOutput) ToWebTestPropertiesPropertiesOutput() WebTestPropertiesPropertiesOutput {
	return o
}

func (o WebTestPropertiesPropertiesOutput) ToWebTestPropertiesPropertiesOutputWithContext(ctx context.Context) WebTestPropertiesPropertiesOutput {
	return o
}

func (o WebTestPropertiesPropertiesOutput) ToWebTestPropertiesPropertiesPtrOutput() WebTestPropertiesPropertiesPtrOutput {
	return o.ToWebTestPropertiesPropertiesPtrOutputWithContext(context.Background())
}

func (o WebTestPropertiesPropertiesOutput) ToWebTestPropertiesPropertiesPtrOutputWithContext(ctx context.Context) WebTestPropertiesPropertiesPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesProperties) *WebTestPropertiesProperties {
		return &v
	}).(WebTestPropertiesPropertiesPtrOutput)
}

// The XML specification of a WebTest to run against an application.
func (o WebTestPropertiesPropertiesOutput) WebTest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesProperties) *string { return v.WebTest }).(pulumi.StringPtrOutput)
}

type WebTestPropertiesPropertiesPtrOutput struct{ *pulumi.OutputState }

func (WebTestPropertiesPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebTestPropertiesProperties)(nil)).Elem()
}

func (o WebTestPropertiesPropertiesPtrOutput) ToWebTestPropertiesPropertiesPtrOutput() WebTestPropertiesPropertiesPtrOutput {
	return o
}

func (o WebTestPropertiesPropertiesPtrOutput) ToWebTestPropertiesPropertiesPtrOutputWithContext(ctx context.Context) WebTestPropertiesPropertiesPtrOutput {
	return o
}

func (o WebTestPropertiesPropertiesPtrOutput) Elem() WebTestPropertiesPropertiesOutput {
	return o.ApplyT(func(v *WebTestPropertiesProperties) WebTestPropertiesProperties { return *v }).(WebTestPropertiesPropertiesOutput)
}

// The XML specification of a WebTest to run against an application.
func (o WebTestPropertiesPropertiesPtrOutput) WebTest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesProperties) *string {
		if v == nil {
			return nil
		}
		return v.WebTest
	}).(pulumi.StringPtrOutput)
}

// Metadata describing a web test for an Azure resource.
type WebTestPropertiesResponse struct {
	// An XML configuration specification for a WebTest.
	Configuration *WebTestPropertiesResponseProperties `pulumi:"Configuration"`
	// Purpose/user defined descriptive test for this WebTest.
	Description *string `pulumi:"Description"`
	// Is the test actively being monitored.
	Enabled *bool `pulumi:"Enabled"`
	// Interval in seconds between test runs for this WebTest. Default value is 300.
	Frequency *int `pulumi:"Frequency"`
	// The kind of web test this is, valid choices are ping and multistep.
	Kind string `pulumi:"Kind"`
	// A list of where to physically run the tests from to give global coverage for accessibility of your application.
	Locations []WebTestGeolocationResponse `pulumi:"Locations"`
	// User defined name if this WebTest.
	Name string `pulumi:"Name"`
	// Allow for retries should this WebTest fail.
	RetryEnabled *bool `pulumi:"RetryEnabled"`
	// Unique ID of this WebTest. This is typically the same value as the Name field.
	SyntheticMonitorId string `pulumi:"SyntheticMonitorId"`
	// Seconds until this WebTest will timeout and fail. Default value is 30.
	Timeout *int `pulumi:"Timeout"`
	// Current state of this component, whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Succeeded, Deploying, Canceled, and Failed.
	ProvisioningState string `pulumi:"provisioningState"`
}

// WebTestPropertiesResponseInput is an input type that accepts WebTestPropertiesResponseArgs and WebTestPropertiesResponseOutput values.
// You can construct a concrete instance of `WebTestPropertiesResponseInput` via:
//
//          WebTestPropertiesResponseArgs{...}
type WebTestPropertiesResponseInput interface {
	pulumi.Input

	ToWebTestPropertiesResponseOutput() WebTestPropertiesResponseOutput
	ToWebTestPropertiesResponseOutputWithContext(context.Context) WebTestPropertiesResponseOutput
}

// Metadata describing a web test for an Azure resource.
type WebTestPropertiesResponseArgs struct {
	// An XML configuration specification for a WebTest.
	Configuration WebTestPropertiesResponsePropertiesPtrInput `pulumi:"Configuration"`
	// Purpose/user defined descriptive test for this WebTest.
	Description pulumi.StringPtrInput `pulumi:"Description"`
	// Is the test actively being monitored.
	Enabled pulumi.BoolPtrInput `pulumi:"Enabled"`
	// Interval in seconds between test runs for this WebTest. Default value is 300.
	Frequency pulumi.IntPtrInput `pulumi:"Frequency"`
	// The kind of web test this is, valid choices are ping and multistep.
	Kind pulumi.StringInput `pulumi:"Kind"`
	// A list of where to physically run the tests from to give global coverage for accessibility of your application.
	Locations WebTestGeolocationResponseArrayInput `pulumi:"Locations"`
	// User defined name if this WebTest.
	Name pulumi.StringInput `pulumi:"Name"`
	// Allow for retries should this WebTest fail.
	RetryEnabled pulumi.BoolPtrInput `pulumi:"RetryEnabled"`
	// Unique ID of this WebTest. This is typically the same value as the Name field.
	SyntheticMonitorId pulumi.StringInput `pulumi:"SyntheticMonitorId"`
	// Seconds until this WebTest will timeout and fail. Default value is 30.
	Timeout pulumi.IntPtrInput `pulumi:"Timeout"`
	// Current state of this component, whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Succeeded, Deploying, Canceled, and Failed.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
}

func (WebTestPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTestPropertiesResponse)(nil)).Elem()
}

func (i WebTestPropertiesResponseArgs) ToWebTestPropertiesResponseOutput() WebTestPropertiesResponseOutput {
	return i.ToWebTestPropertiesResponseOutputWithContext(context.Background())
}

func (i WebTestPropertiesResponseArgs) ToWebTestPropertiesResponseOutputWithContext(ctx context.Context) WebTestPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTestPropertiesResponseOutput)
}

func (i WebTestPropertiesResponseArgs) ToWebTestPropertiesResponsePtrOutput() WebTestPropertiesResponsePtrOutput {
	return i.ToWebTestPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i WebTestPropertiesResponseArgs) ToWebTestPropertiesResponsePtrOutputWithContext(ctx context.Context) WebTestPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTestPropertiesResponseOutput).ToWebTestPropertiesResponsePtrOutputWithContext(ctx)
}

// WebTestPropertiesResponsePtrInput is an input type that accepts WebTestPropertiesResponseArgs, WebTestPropertiesResponsePtr and WebTestPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `WebTestPropertiesResponsePtrInput` via:
//
//          WebTestPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type WebTestPropertiesResponsePtrInput interface {
	pulumi.Input

	ToWebTestPropertiesResponsePtrOutput() WebTestPropertiesResponsePtrOutput
	ToWebTestPropertiesResponsePtrOutputWithContext(context.Context) WebTestPropertiesResponsePtrOutput
}

type webTestPropertiesResponsePtrType WebTestPropertiesResponseArgs

func WebTestPropertiesResponsePtr(v *WebTestPropertiesResponseArgs) WebTestPropertiesResponsePtrInput {
	return (*webTestPropertiesResponsePtrType)(v)
}

func (*webTestPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebTestPropertiesResponse)(nil)).Elem()
}

func (i *webTestPropertiesResponsePtrType) ToWebTestPropertiesResponsePtrOutput() WebTestPropertiesResponsePtrOutput {
	return i.ToWebTestPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *webTestPropertiesResponsePtrType) ToWebTestPropertiesResponsePtrOutputWithContext(ctx context.Context) WebTestPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTestPropertiesResponsePtrOutput)
}

// Metadata describing a web test for an Azure resource.
type WebTestPropertiesResponseOutput struct{ *pulumi.OutputState }

func (WebTestPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTestPropertiesResponse)(nil)).Elem()
}

func (o WebTestPropertiesResponseOutput) ToWebTestPropertiesResponseOutput() WebTestPropertiesResponseOutput {
	return o
}

func (o WebTestPropertiesResponseOutput) ToWebTestPropertiesResponseOutputWithContext(ctx context.Context) WebTestPropertiesResponseOutput {
	return o
}

func (o WebTestPropertiesResponseOutput) ToWebTestPropertiesResponsePtrOutput() WebTestPropertiesResponsePtrOutput {
	return o.ToWebTestPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o WebTestPropertiesResponseOutput) ToWebTestPropertiesResponsePtrOutputWithContext(ctx context.Context) WebTestPropertiesResponsePtrOutput {
	return o.ApplyT(func(v WebTestPropertiesResponse) *WebTestPropertiesResponse {
		return &v
	}).(WebTestPropertiesResponsePtrOutput)
}

// An XML configuration specification for a WebTest.
func (o WebTestPropertiesResponseOutput) Configuration() WebTestPropertiesResponsePropertiesPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesResponse) *WebTestPropertiesResponseProperties { return v.Configuration }).(WebTestPropertiesResponsePropertiesPtrOutput)
}

// Purpose/user defined descriptive test for this WebTest.
func (o WebTestPropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Is the test actively being monitored.
func (o WebTestPropertiesResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Interval in seconds between test runs for this WebTest. Default value is 300.
func (o WebTestPropertiesResponseOutput) Frequency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesResponse) *int { return v.Frequency }).(pulumi.IntPtrOutput)
}

// The kind of web test this is, valid choices are ping and multistep.
func (o WebTestPropertiesResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v WebTestPropertiesResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// A list of where to physically run the tests from to give global coverage for accessibility of your application.
func (o WebTestPropertiesResponseOutput) Locations() WebTestGeolocationResponseArrayOutput {
	return o.ApplyT(func(v WebTestPropertiesResponse) []WebTestGeolocationResponse { return v.Locations }).(WebTestGeolocationResponseArrayOutput)
}

// User defined name if this WebTest.
func (o WebTestPropertiesResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebTestPropertiesResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Allow for retries should this WebTest fail.
func (o WebTestPropertiesResponseOutput) RetryEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesResponse) *bool { return v.RetryEnabled }).(pulumi.BoolPtrOutput)
}

// Unique ID of this WebTest. This is typically the same value as the Name field.
func (o WebTestPropertiesResponseOutput) SyntheticMonitorId() pulumi.StringOutput {
	return o.ApplyT(func(v WebTestPropertiesResponse) string { return v.SyntheticMonitorId }).(pulumi.StringOutput)
}

// Seconds until this WebTest will timeout and fail. Default value is 30.
func (o WebTestPropertiesResponseOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesResponse) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// Current state of this component, whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Succeeded, Deploying, Canceled, and Failed.
func (o WebTestPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v WebTestPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type WebTestPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (WebTestPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebTestPropertiesResponse)(nil)).Elem()
}

func (o WebTestPropertiesResponsePtrOutput) ToWebTestPropertiesResponsePtrOutput() WebTestPropertiesResponsePtrOutput {
	return o
}

func (o WebTestPropertiesResponsePtrOutput) ToWebTestPropertiesResponsePtrOutputWithContext(ctx context.Context) WebTestPropertiesResponsePtrOutput {
	return o
}

func (o WebTestPropertiesResponsePtrOutput) Elem() WebTestPropertiesResponseOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponse) WebTestPropertiesResponse { return *v }).(WebTestPropertiesResponseOutput)
}

// An XML configuration specification for a WebTest.
func (o WebTestPropertiesResponsePtrOutput) Configuration() WebTestPropertiesResponsePropertiesPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponse) *WebTestPropertiesResponseProperties {
		if v == nil {
			return nil
		}
		return v.Configuration
	}).(WebTestPropertiesResponsePropertiesPtrOutput)
}

// Purpose/user defined descriptive test for this WebTest.
func (o WebTestPropertiesResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Is the test actively being monitored.
func (o WebTestPropertiesResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Interval in seconds between test runs for this WebTest. Default value is 300.
func (o WebTestPropertiesResponsePtrOutput) Frequency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.Frequency
	}).(pulumi.IntPtrOutput)
}

// The kind of web test this is, valid choices are ping and multistep.
func (o WebTestPropertiesResponsePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// A list of where to physically run the tests from to give global coverage for accessibility of your application.
func (o WebTestPropertiesResponsePtrOutput) Locations() WebTestGeolocationResponseArrayOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponse) []WebTestGeolocationResponse {
		if v == nil {
			return nil
		}
		return v.Locations
	}).(WebTestGeolocationResponseArrayOutput)
}

// User defined name if this WebTest.
func (o WebTestPropertiesResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Allow for retries should this WebTest fail.
func (o WebTestPropertiesResponsePtrOutput) RetryEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.RetryEnabled
	}).(pulumi.BoolPtrOutput)
}

// Unique ID of this WebTest. This is typically the same value as the Name field.
func (o WebTestPropertiesResponsePtrOutput) SyntheticMonitorId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SyntheticMonitorId
	}).(pulumi.StringPtrOutput)
}

// Seconds until this WebTest will timeout and fail. Default value is 30.
func (o WebTestPropertiesResponsePtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

// Current state of this component, whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Succeeded, Deploying, Canceled, and Failed.
func (o WebTestPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// An XML configuration specification for a WebTest.
type WebTestPropertiesResponseProperties struct {
	// The XML specification of a WebTest to run against an application.
	WebTest *string `pulumi:"WebTest"`
}

// WebTestPropertiesResponsePropertiesInput is an input type that accepts WebTestPropertiesResponsePropertiesArgs and WebTestPropertiesResponsePropertiesOutput values.
// You can construct a concrete instance of `WebTestPropertiesResponsePropertiesInput` via:
//
//          WebTestPropertiesResponsePropertiesArgs{...}
type WebTestPropertiesResponsePropertiesInput interface {
	pulumi.Input

	ToWebTestPropertiesResponsePropertiesOutput() WebTestPropertiesResponsePropertiesOutput
	ToWebTestPropertiesResponsePropertiesOutputWithContext(context.Context) WebTestPropertiesResponsePropertiesOutput
}

// An XML configuration specification for a WebTest.
type WebTestPropertiesResponsePropertiesArgs struct {
	// The XML specification of a WebTest to run against an application.
	WebTest pulumi.StringPtrInput `pulumi:"WebTest"`
}

func (WebTestPropertiesResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTestPropertiesResponseProperties)(nil)).Elem()
}

func (i WebTestPropertiesResponsePropertiesArgs) ToWebTestPropertiesResponsePropertiesOutput() WebTestPropertiesResponsePropertiesOutput {
	return i.ToWebTestPropertiesResponsePropertiesOutputWithContext(context.Background())
}

func (i WebTestPropertiesResponsePropertiesArgs) ToWebTestPropertiesResponsePropertiesOutputWithContext(ctx context.Context) WebTestPropertiesResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTestPropertiesResponsePropertiesOutput)
}

func (i WebTestPropertiesResponsePropertiesArgs) ToWebTestPropertiesResponsePropertiesPtrOutput() WebTestPropertiesResponsePropertiesPtrOutput {
	return i.ToWebTestPropertiesResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i WebTestPropertiesResponsePropertiesArgs) ToWebTestPropertiesResponsePropertiesPtrOutputWithContext(ctx context.Context) WebTestPropertiesResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTestPropertiesResponsePropertiesOutput).ToWebTestPropertiesResponsePropertiesPtrOutputWithContext(ctx)
}

// WebTestPropertiesResponsePropertiesPtrInput is an input type that accepts WebTestPropertiesResponsePropertiesArgs, WebTestPropertiesResponsePropertiesPtr and WebTestPropertiesResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `WebTestPropertiesResponsePropertiesPtrInput` via:
//
//          WebTestPropertiesResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type WebTestPropertiesResponsePropertiesPtrInput interface {
	pulumi.Input

	ToWebTestPropertiesResponsePropertiesPtrOutput() WebTestPropertiesResponsePropertiesPtrOutput
	ToWebTestPropertiesResponsePropertiesPtrOutputWithContext(context.Context) WebTestPropertiesResponsePropertiesPtrOutput
}

type webTestPropertiesResponsePropertiesPtrType WebTestPropertiesResponsePropertiesArgs

func WebTestPropertiesResponsePropertiesPtr(v *WebTestPropertiesResponsePropertiesArgs) WebTestPropertiesResponsePropertiesPtrInput {
	return (*webTestPropertiesResponsePropertiesPtrType)(v)
}

func (*webTestPropertiesResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebTestPropertiesResponseProperties)(nil)).Elem()
}

func (i *webTestPropertiesResponsePropertiesPtrType) ToWebTestPropertiesResponsePropertiesPtrOutput() WebTestPropertiesResponsePropertiesPtrOutput {
	return i.ToWebTestPropertiesResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *webTestPropertiesResponsePropertiesPtrType) ToWebTestPropertiesResponsePropertiesPtrOutputWithContext(ctx context.Context) WebTestPropertiesResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTestPropertiesResponsePropertiesPtrOutput)
}

// An XML configuration specification for a WebTest.
type WebTestPropertiesResponsePropertiesOutput struct{ *pulumi.OutputState }

func (WebTestPropertiesResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTestPropertiesResponseProperties)(nil)).Elem()
}

func (o WebTestPropertiesResponsePropertiesOutput) ToWebTestPropertiesResponsePropertiesOutput() WebTestPropertiesResponsePropertiesOutput {
	return o
}

func (o WebTestPropertiesResponsePropertiesOutput) ToWebTestPropertiesResponsePropertiesOutputWithContext(ctx context.Context) WebTestPropertiesResponsePropertiesOutput {
	return o
}

func (o WebTestPropertiesResponsePropertiesOutput) ToWebTestPropertiesResponsePropertiesPtrOutput() WebTestPropertiesResponsePropertiesPtrOutput {
	return o.ToWebTestPropertiesResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o WebTestPropertiesResponsePropertiesOutput) ToWebTestPropertiesResponsePropertiesPtrOutputWithContext(ctx context.Context) WebTestPropertiesResponsePropertiesPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesResponseProperties) *WebTestPropertiesResponseProperties {
		return &v
	}).(WebTestPropertiesResponsePropertiesPtrOutput)
}

// The XML specification of a WebTest to run against an application.
func (o WebTestPropertiesResponsePropertiesOutput) WebTest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesResponseProperties) *string { return v.WebTest }).(pulumi.StringPtrOutput)
}

type WebTestPropertiesResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (WebTestPropertiesResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebTestPropertiesResponseProperties)(nil)).Elem()
}

func (o WebTestPropertiesResponsePropertiesPtrOutput) ToWebTestPropertiesResponsePropertiesPtrOutput() WebTestPropertiesResponsePropertiesPtrOutput {
	return o
}

func (o WebTestPropertiesResponsePropertiesPtrOutput) ToWebTestPropertiesResponsePropertiesPtrOutputWithContext(ctx context.Context) WebTestPropertiesResponsePropertiesPtrOutput {
	return o
}

func (o WebTestPropertiesResponsePropertiesPtrOutput) Elem() WebTestPropertiesResponsePropertiesOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponseProperties) WebTestPropertiesResponseProperties { return *v }).(WebTestPropertiesResponsePropertiesOutput)
}

// The XML specification of a WebTest to run against an application.
func (o WebTestPropertiesResponsePropertiesPtrOutput) WebTest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.WebTest
	}).(pulumi.StringPtrOutput)
}

// An Application Insights workbook definition.
type WorkbookType struct {
	// The kind of workbook. Choices are user and shared.
	Kind *string `pulumi:"kind"`
	// Resource location
	Location *string `pulumi:"location"`
	// Azure resource name
	Name string `pulumi:"name"`
	// Metadata describing a web test for an Azure resource.
	Properties WorkbookPropertiesResponse `pulumi:"properties"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Azure resource type
	Type string `pulumi:"type"`
}

// WorkbookTypeInput is an input type that accepts WorkbookTypeArgs and WorkbookTypeOutput values.
// You can construct a concrete instance of `WorkbookTypeInput` via:
//
//          WorkbookTypeArgs{...}
type WorkbookTypeInput interface {
	pulumi.Input

	ToWorkbookTypeOutput() WorkbookTypeOutput
	ToWorkbookTypeOutputWithContext(context.Context) WorkbookTypeOutput
}

// An Application Insights workbook definition.
type WorkbookTypeArgs struct {
	// The kind of workbook. Choices are user and shared.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource location
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Azure resource name
	Name pulumi.StringInput `pulumi:"name"`
	// Metadata describing a web test for an Azure resource.
	Properties WorkbookPropertiesResponseInput `pulumi:"properties"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Azure resource type
	Type pulumi.StringInput `pulumi:"type"`
}

func (WorkbookTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkbookType)(nil)).Elem()
}

func (i WorkbookTypeArgs) ToWorkbookTypeOutput() WorkbookTypeOutput {
	return i.ToWorkbookTypeOutputWithContext(context.Background())
}

func (i WorkbookTypeArgs) ToWorkbookTypeOutputWithContext(ctx context.Context) WorkbookTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkbookTypeOutput)
}

// An Application Insights workbook definition.
type WorkbookTypeOutput struct{ *pulumi.OutputState }

func (WorkbookTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkbookType)(nil)).Elem()
}

func (o WorkbookTypeOutput) ToWorkbookTypeOutput() WorkbookTypeOutput {
	return o
}

func (o WorkbookTypeOutput) ToWorkbookTypeOutputWithContext(ctx context.Context) WorkbookTypeOutput {
	return o
}

// The kind of workbook. Choices are user and shared.
func (o WorkbookTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkbookType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource location
func (o WorkbookTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkbookType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Azure resource name
func (o WorkbookTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkbookType) string { return v.Name }).(pulumi.StringOutput)
}

// Metadata describing a web test for an Azure resource.
func (o WorkbookTypeOutput) Properties() WorkbookPropertiesResponseOutput {
	return o.ApplyT(func(v WorkbookType) WorkbookPropertiesResponse { return v.Properties }).(WorkbookPropertiesResponseOutput)
}

// Resource tags
func (o WorkbookTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkbookType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Azure resource type
func (o WorkbookTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WorkbookType) string { return v.Type }).(pulumi.StringOutput)
}

// Properties that contain a workbook.
type WorkbookProperties struct {
	// Workbook category, as defined by the user at creation time.
	Category string `pulumi:"category"`
	// The user-defined name of the workbook.
	Name string `pulumi:"name"`
	// Configuration of this particular workbook. Configuration data is a string containing valid JSON
	SerializedData string `pulumi:"serializedData"`
	// Enum indicating if this workbook definition is owned by a specific user or is shared between all users with access to the Application Insights component.
	SharedTypeKind string `pulumi:"sharedTypeKind"`
	// Optional resourceId for a source resource.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// A list of 0 or more tags that are associated with this workbook definition
	Tags []string `pulumi:"tags"`
	// Unique user id of the specific user that owns this workbook.
	UserId string `pulumi:"userId"`
	// This instance's version of the data model. This can change as new features are added that can be marked workbook.
	Version *string `pulumi:"version"`
	// Internally assigned unique id of the workbook definition.
	WorkbookId string `pulumi:"workbookId"`
}

// WorkbookPropertiesInput is an input type that accepts WorkbookPropertiesArgs and WorkbookPropertiesOutput values.
// You can construct a concrete instance of `WorkbookPropertiesInput` via:
//
//          WorkbookPropertiesArgs{...}
type WorkbookPropertiesInput interface {
	pulumi.Input

	ToWorkbookPropertiesOutput() WorkbookPropertiesOutput
	ToWorkbookPropertiesOutputWithContext(context.Context) WorkbookPropertiesOutput
}

// Properties that contain a workbook.
type WorkbookPropertiesArgs struct {
	// Workbook category, as defined by the user at creation time.
	Category pulumi.StringInput `pulumi:"category"`
	// The user-defined name of the workbook.
	Name pulumi.StringInput `pulumi:"name"`
	// Configuration of this particular workbook. Configuration data is a string containing valid JSON
	SerializedData pulumi.StringInput `pulumi:"serializedData"`
	// Enum indicating if this workbook definition is owned by a specific user or is shared between all users with access to the Application Insights component.
	SharedTypeKind pulumi.StringInput `pulumi:"sharedTypeKind"`
	// Optional resourceId for a source resource.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
	// A list of 0 or more tags that are associated with this workbook definition
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// Unique user id of the specific user that owns this workbook.
	UserId pulumi.StringInput `pulumi:"userId"`
	// This instance's version of the data model. This can change as new features are added that can be marked workbook.
	Version pulumi.StringPtrInput `pulumi:"version"`
	// Internally assigned unique id of the workbook definition.
	WorkbookId pulumi.StringInput `pulumi:"workbookId"`
}

func (WorkbookPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkbookProperties)(nil)).Elem()
}

func (i WorkbookPropertiesArgs) ToWorkbookPropertiesOutput() WorkbookPropertiesOutput {
	return i.ToWorkbookPropertiesOutputWithContext(context.Background())
}

func (i WorkbookPropertiesArgs) ToWorkbookPropertiesOutputWithContext(ctx context.Context) WorkbookPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkbookPropertiesOutput)
}

func (i WorkbookPropertiesArgs) ToWorkbookPropertiesPtrOutput() WorkbookPropertiesPtrOutput {
	return i.ToWorkbookPropertiesPtrOutputWithContext(context.Background())
}

func (i WorkbookPropertiesArgs) ToWorkbookPropertiesPtrOutputWithContext(ctx context.Context) WorkbookPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkbookPropertiesOutput).ToWorkbookPropertiesPtrOutputWithContext(ctx)
}

// WorkbookPropertiesPtrInput is an input type that accepts WorkbookPropertiesArgs, WorkbookPropertiesPtr and WorkbookPropertiesPtrOutput values.
// You can construct a concrete instance of `WorkbookPropertiesPtrInput` via:
//
//          WorkbookPropertiesArgs{...}
//
//  or:
//
//          nil
type WorkbookPropertiesPtrInput interface {
	pulumi.Input

	ToWorkbookPropertiesPtrOutput() WorkbookPropertiesPtrOutput
	ToWorkbookPropertiesPtrOutputWithContext(context.Context) WorkbookPropertiesPtrOutput
}

type workbookPropertiesPtrType WorkbookPropertiesArgs

func WorkbookPropertiesPtr(v *WorkbookPropertiesArgs) WorkbookPropertiesPtrInput {
	return (*workbookPropertiesPtrType)(v)
}

func (*workbookPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkbookProperties)(nil)).Elem()
}

func (i *workbookPropertiesPtrType) ToWorkbookPropertiesPtrOutput() WorkbookPropertiesPtrOutput {
	return i.ToWorkbookPropertiesPtrOutputWithContext(context.Background())
}

func (i *workbookPropertiesPtrType) ToWorkbookPropertiesPtrOutputWithContext(ctx context.Context) WorkbookPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkbookPropertiesPtrOutput)
}

// Properties that contain a workbook.
type WorkbookPropertiesOutput struct{ *pulumi.OutputState }

func (WorkbookPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkbookProperties)(nil)).Elem()
}

func (o WorkbookPropertiesOutput) ToWorkbookPropertiesOutput() WorkbookPropertiesOutput {
	return o
}

func (o WorkbookPropertiesOutput) ToWorkbookPropertiesOutputWithContext(ctx context.Context) WorkbookPropertiesOutput {
	return o
}

func (o WorkbookPropertiesOutput) ToWorkbookPropertiesPtrOutput() WorkbookPropertiesPtrOutput {
	return o.ToWorkbookPropertiesPtrOutputWithContext(context.Background())
}

func (o WorkbookPropertiesOutput) ToWorkbookPropertiesPtrOutputWithContext(ctx context.Context) WorkbookPropertiesPtrOutput {
	return o.ApplyT(func(v WorkbookProperties) *WorkbookProperties {
		return &v
	}).(WorkbookPropertiesPtrOutput)
}

// Workbook category, as defined by the user at creation time.
func (o WorkbookPropertiesOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v WorkbookProperties) string { return v.Category }).(pulumi.StringOutput)
}

// The user-defined name of the workbook.
func (o WorkbookPropertiesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkbookProperties) string { return v.Name }).(pulumi.StringOutput)
}

// Configuration of this particular workbook. Configuration data is a string containing valid JSON
func (o WorkbookPropertiesOutput) SerializedData() pulumi.StringOutput {
	return o.ApplyT(func(v WorkbookProperties) string { return v.SerializedData }).(pulumi.StringOutput)
}

// Enum indicating if this workbook definition is owned by a specific user or is shared between all users with access to the Application Insights component.
func (o WorkbookPropertiesOutput) SharedTypeKind() pulumi.StringOutput {
	return o.ApplyT(func(v WorkbookProperties) string { return v.SharedTypeKind }).(pulumi.StringOutput)
}

// Optional resourceId for a source resource.
func (o WorkbookPropertiesOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkbookProperties) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// A list of 0 or more tags that are associated with this workbook definition
func (o WorkbookPropertiesOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkbookProperties) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// Unique user id of the specific user that owns this workbook.
func (o WorkbookPropertiesOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkbookProperties) string { return v.UserId }).(pulumi.StringOutput)
}

// This instance's version of the data model. This can change as new features are added that can be marked workbook.
func (o WorkbookPropertiesOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkbookProperties) *string { return v.Version }).(pulumi.StringPtrOutput)
}

// Internally assigned unique id of the workbook definition.
func (o WorkbookPropertiesOutput) WorkbookId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkbookProperties) string { return v.WorkbookId }).(pulumi.StringOutput)
}

type WorkbookPropertiesPtrOutput struct{ *pulumi.OutputState }

func (WorkbookPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkbookProperties)(nil)).Elem()
}

func (o WorkbookPropertiesPtrOutput) ToWorkbookPropertiesPtrOutput() WorkbookPropertiesPtrOutput {
	return o
}

func (o WorkbookPropertiesPtrOutput) ToWorkbookPropertiesPtrOutputWithContext(ctx context.Context) WorkbookPropertiesPtrOutput {
	return o
}

func (o WorkbookPropertiesPtrOutput) Elem() WorkbookPropertiesOutput {
	return o.ApplyT(func(v *WorkbookProperties) WorkbookProperties { return *v }).(WorkbookPropertiesOutput)
}

// Workbook category, as defined by the user at creation time.
func (o WorkbookPropertiesPtrOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkbookProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Category
	}).(pulumi.StringPtrOutput)
}

// The user-defined name of the workbook.
func (o WorkbookPropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkbookProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Configuration of this particular workbook. Configuration data is a string containing valid JSON
func (o WorkbookPropertiesPtrOutput) SerializedData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkbookProperties) *string {
		if v == nil {
			return nil
		}
		return &v.SerializedData
	}).(pulumi.StringPtrOutput)
}

// Enum indicating if this workbook definition is owned by a specific user or is shared between all users with access to the Application Insights component.
func (o WorkbookPropertiesPtrOutput) SharedTypeKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkbookProperties) *string {
		if v == nil {
			return nil
		}
		return &v.SharedTypeKind
	}).(pulumi.StringPtrOutput)
}

// Optional resourceId for a source resource.
func (o WorkbookPropertiesPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkbookProperties) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// A list of 0 or more tags that are associated with this workbook definition
func (o WorkbookPropertiesPtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkbookProperties) []string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringArrayOutput)
}

// Unique user id of the specific user that owns this workbook.
func (o WorkbookPropertiesPtrOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkbookProperties) *string {
		if v == nil {
			return nil
		}
		return &v.UserId
	}).(pulumi.StringPtrOutput)
}

// This instance's version of the data model. This can change as new features are added that can be marked workbook.
func (o WorkbookPropertiesPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkbookProperties) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Internally assigned unique id of the workbook definition.
func (o WorkbookPropertiesPtrOutput) WorkbookId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkbookProperties) *string {
		if v == nil {
			return nil
		}
		return &v.WorkbookId
	}).(pulumi.StringPtrOutput)
}

// Properties that contain a workbook.
type WorkbookPropertiesResponse struct {
	// Workbook category, as defined by the user at creation time.
	Category string `pulumi:"category"`
	// Enum indicating if this workbook definition is owned by a specific user or is shared between all users with access to the Application Insights component.
	Kind string `pulumi:"kind"`
	// The user-defined name of the workbook.
	Name string `pulumi:"name"`
	// Configuration of this particular workbook. Configuration data is a string containing valid JSON
	SerializedData string `pulumi:"serializedData"`
	// Optional resourceId for a source resource.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// A list of 0 or more tags that are associated with this workbook definition
	Tags []string `pulumi:"tags"`
	// Date and time in UTC of the last modification that was made to this workbook definition.
	TimeModified string `pulumi:"timeModified"`
	// Unique user id of the specific user that owns this workbook.
	UserId string `pulumi:"userId"`
	// This instance's version of the data model. This can change as new features are added that can be marked workbook.
	Version *string `pulumi:"version"`
	// Internally assigned unique id of the workbook definition.
	WorkbookId string `pulumi:"workbookId"`
}

// WorkbookPropertiesResponseInput is an input type that accepts WorkbookPropertiesResponseArgs and WorkbookPropertiesResponseOutput values.
// You can construct a concrete instance of `WorkbookPropertiesResponseInput` via:
//
//          WorkbookPropertiesResponseArgs{...}
type WorkbookPropertiesResponseInput interface {
	pulumi.Input

	ToWorkbookPropertiesResponseOutput() WorkbookPropertiesResponseOutput
	ToWorkbookPropertiesResponseOutputWithContext(context.Context) WorkbookPropertiesResponseOutput
}

// Properties that contain a workbook.
type WorkbookPropertiesResponseArgs struct {
	// Workbook category, as defined by the user at creation time.
	Category pulumi.StringInput `pulumi:"category"`
	// Enum indicating if this workbook definition is owned by a specific user or is shared between all users with access to the Application Insights component.
	Kind pulumi.StringInput `pulumi:"kind"`
	// The user-defined name of the workbook.
	Name pulumi.StringInput `pulumi:"name"`
	// Configuration of this particular workbook. Configuration data is a string containing valid JSON
	SerializedData pulumi.StringInput `pulumi:"serializedData"`
	// Optional resourceId for a source resource.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
	// A list of 0 or more tags that are associated with this workbook definition
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// Date and time in UTC of the last modification that was made to this workbook definition.
	TimeModified pulumi.StringInput `pulumi:"timeModified"`
	// Unique user id of the specific user that owns this workbook.
	UserId pulumi.StringInput `pulumi:"userId"`
	// This instance's version of the data model. This can change as new features are added that can be marked workbook.
	Version pulumi.StringPtrInput `pulumi:"version"`
	// Internally assigned unique id of the workbook definition.
	WorkbookId pulumi.StringInput `pulumi:"workbookId"`
}

func (WorkbookPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkbookPropertiesResponse)(nil)).Elem()
}

func (i WorkbookPropertiesResponseArgs) ToWorkbookPropertiesResponseOutput() WorkbookPropertiesResponseOutput {
	return i.ToWorkbookPropertiesResponseOutputWithContext(context.Background())
}

func (i WorkbookPropertiesResponseArgs) ToWorkbookPropertiesResponseOutputWithContext(ctx context.Context) WorkbookPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkbookPropertiesResponseOutput)
}

func (i WorkbookPropertiesResponseArgs) ToWorkbookPropertiesResponsePtrOutput() WorkbookPropertiesResponsePtrOutput {
	return i.ToWorkbookPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i WorkbookPropertiesResponseArgs) ToWorkbookPropertiesResponsePtrOutputWithContext(ctx context.Context) WorkbookPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkbookPropertiesResponseOutput).ToWorkbookPropertiesResponsePtrOutputWithContext(ctx)
}

// WorkbookPropertiesResponsePtrInput is an input type that accepts WorkbookPropertiesResponseArgs, WorkbookPropertiesResponsePtr and WorkbookPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `WorkbookPropertiesResponsePtrInput` via:
//
//          WorkbookPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type WorkbookPropertiesResponsePtrInput interface {
	pulumi.Input

	ToWorkbookPropertiesResponsePtrOutput() WorkbookPropertiesResponsePtrOutput
	ToWorkbookPropertiesResponsePtrOutputWithContext(context.Context) WorkbookPropertiesResponsePtrOutput
}

type workbookPropertiesResponsePtrType WorkbookPropertiesResponseArgs

func WorkbookPropertiesResponsePtr(v *WorkbookPropertiesResponseArgs) WorkbookPropertiesResponsePtrInput {
	return (*workbookPropertiesResponsePtrType)(v)
}

func (*workbookPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkbookPropertiesResponse)(nil)).Elem()
}

func (i *workbookPropertiesResponsePtrType) ToWorkbookPropertiesResponsePtrOutput() WorkbookPropertiesResponsePtrOutput {
	return i.ToWorkbookPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *workbookPropertiesResponsePtrType) ToWorkbookPropertiesResponsePtrOutputWithContext(ctx context.Context) WorkbookPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkbookPropertiesResponsePtrOutput)
}

// Properties that contain a workbook.
type WorkbookPropertiesResponseOutput struct{ *pulumi.OutputState }

func (WorkbookPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkbookPropertiesResponse)(nil)).Elem()
}

func (o WorkbookPropertiesResponseOutput) ToWorkbookPropertiesResponseOutput() WorkbookPropertiesResponseOutput {
	return o
}

func (o WorkbookPropertiesResponseOutput) ToWorkbookPropertiesResponseOutputWithContext(ctx context.Context) WorkbookPropertiesResponseOutput {
	return o
}

func (o WorkbookPropertiesResponseOutput) ToWorkbookPropertiesResponsePtrOutput() WorkbookPropertiesResponsePtrOutput {
	return o.ToWorkbookPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o WorkbookPropertiesResponseOutput) ToWorkbookPropertiesResponsePtrOutputWithContext(ctx context.Context) WorkbookPropertiesResponsePtrOutput {
	return o.ApplyT(func(v WorkbookPropertiesResponse) *WorkbookPropertiesResponse {
		return &v
	}).(WorkbookPropertiesResponsePtrOutput)
}

// Workbook category, as defined by the user at creation time.
func (o WorkbookPropertiesResponseOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v WorkbookPropertiesResponse) string { return v.Category }).(pulumi.StringOutput)
}

// Enum indicating if this workbook definition is owned by a specific user or is shared between all users with access to the Application Insights component.
func (o WorkbookPropertiesResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v WorkbookPropertiesResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// The user-defined name of the workbook.
func (o WorkbookPropertiesResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkbookPropertiesResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Configuration of this particular workbook. Configuration data is a string containing valid JSON
func (o WorkbookPropertiesResponseOutput) SerializedData() pulumi.StringOutput {
	return o.ApplyT(func(v WorkbookPropertiesResponse) string { return v.SerializedData }).(pulumi.StringOutput)
}

// Optional resourceId for a source resource.
func (o WorkbookPropertiesResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkbookPropertiesResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// A list of 0 or more tags that are associated with this workbook definition
func (o WorkbookPropertiesResponseOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkbookPropertiesResponse) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// Date and time in UTC of the last modification that was made to this workbook definition.
func (o WorkbookPropertiesResponseOutput) TimeModified() pulumi.StringOutput {
	return o.ApplyT(func(v WorkbookPropertiesResponse) string { return v.TimeModified }).(pulumi.StringOutput)
}

// Unique user id of the specific user that owns this workbook.
func (o WorkbookPropertiesResponseOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkbookPropertiesResponse) string { return v.UserId }).(pulumi.StringOutput)
}

// This instance's version of the data model. This can change as new features are added that can be marked workbook.
func (o WorkbookPropertiesResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkbookPropertiesResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

// Internally assigned unique id of the workbook definition.
func (o WorkbookPropertiesResponseOutput) WorkbookId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkbookPropertiesResponse) string { return v.WorkbookId }).(pulumi.StringOutput)
}

type WorkbookPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (WorkbookPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkbookPropertiesResponse)(nil)).Elem()
}

func (o WorkbookPropertiesResponsePtrOutput) ToWorkbookPropertiesResponsePtrOutput() WorkbookPropertiesResponsePtrOutput {
	return o
}

func (o WorkbookPropertiesResponsePtrOutput) ToWorkbookPropertiesResponsePtrOutputWithContext(ctx context.Context) WorkbookPropertiesResponsePtrOutput {
	return o
}

func (o WorkbookPropertiesResponsePtrOutput) Elem() WorkbookPropertiesResponseOutput {
	return o.ApplyT(func(v *WorkbookPropertiesResponse) WorkbookPropertiesResponse { return *v }).(WorkbookPropertiesResponseOutput)
}

// Workbook category, as defined by the user at creation time.
func (o WorkbookPropertiesResponsePtrOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkbookPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Category
	}).(pulumi.StringPtrOutput)
}

// Enum indicating if this workbook definition is owned by a specific user or is shared between all users with access to the Application Insights component.
func (o WorkbookPropertiesResponsePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkbookPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// The user-defined name of the workbook.
func (o WorkbookPropertiesResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkbookPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Configuration of this particular workbook. Configuration data is a string containing valid JSON
func (o WorkbookPropertiesResponsePtrOutput) SerializedData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkbookPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SerializedData
	}).(pulumi.StringPtrOutput)
}

// Optional resourceId for a source resource.
func (o WorkbookPropertiesResponsePtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkbookPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// A list of 0 or more tags that are associated with this workbook definition
func (o WorkbookPropertiesResponsePtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkbookPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringArrayOutput)
}

// Date and time in UTC of the last modification that was made to this workbook definition.
func (o WorkbookPropertiesResponsePtrOutput) TimeModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkbookPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TimeModified
	}).(pulumi.StringPtrOutput)
}

// Unique user id of the specific user that owns this workbook.
func (o WorkbookPropertiesResponsePtrOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkbookPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UserId
	}).(pulumi.StringPtrOutput)
}

// This instance's version of the data model. This can change as new features are added that can be marked workbook.
func (o WorkbookPropertiesResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkbookPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Internally assigned unique id of the workbook definition.
func (o WorkbookPropertiesResponsePtrOutput) WorkbookId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkbookPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.WorkbookId
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AnalyticsItemTypeOutput{})
	pulumi.RegisterOutputType(ApplicationInsightsComponentAnalyticsItemPropertiesOutput{})
	pulumi.RegisterOutputType(ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationInsightsComponentPropertiesOutput{})
	pulumi.RegisterOutputType(ApplicationInsightsComponentPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ApplicationInsightsComponentPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ApplicationInsightsComponentPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ComponentTypeOutput{})
	pulumi.RegisterOutputType(ExportConfigurationTypeOutput{})
	pulumi.RegisterOutputType(FavoriteTypeOutput{})
	pulumi.RegisterOutputType(PrivateLinkScopedResourceOutput{})
	pulumi.RegisterOutputType(PrivateLinkScopedResourceResponseOutput{})
	pulumi.RegisterOutputType(PrivateLinkScopedResourceResponseArrayOutput{})
	pulumi.RegisterOutputType(WebTestTypeOutput{})
	pulumi.RegisterOutputType(WebTestGeolocationOutput{})
	pulumi.RegisterOutputType(WebTestGeolocationArrayOutput{})
	pulumi.RegisterOutputType(WebTestGeolocationResponseOutput{})
	pulumi.RegisterOutputType(WebTestGeolocationResponseArrayOutput{})
	pulumi.RegisterOutputType(WebTestPropertiesOutput{})
	pulumi.RegisterOutputType(WebTestPropertiesPtrOutput{})
	pulumi.RegisterOutputType(WebTestPropertiesPropertiesOutput{})
	pulumi.RegisterOutputType(WebTestPropertiesPropertiesPtrOutput{})
	pulumi.RegisterOutputType(WebTestPropertiesResponseOutput{})
	pulumi.RegisterOutputType(WebTestPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(WebTestPropertiesResponsePropertiesOutput{})
	pulumi.RegisterOutputType(WebTestPropertiesResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(WorkbookTypeOutput{})
	pulumi.RegisterOutputType(WorkbookPropertiesOutput{})
	pulumi.RegisterOutputType(WorkbookPropertiesPtrOutput{})
	pulumi.RegisterOutputType(WorkbookPropertiesResponseOutput{})
	pulumi.RegisterOutputType(WorkbookPropertiesResponsePtrOutput{})
}
