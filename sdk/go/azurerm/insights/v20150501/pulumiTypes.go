// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20150501

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// A set of properties that can be defined in the context of a specific item type. Each type may have its own properties.
type ApplicationInsightsComponentAnalyticsItemProperties struct {
	// A function alias, used when the type of the item is Function
	FunctionAlias *string `pulumi:"functionAlias"`
}

// ApplicationInsightsComponentAnalyticsItemPropertiesInput is an input type that accepts ApplicationInsightsComponentAnalyticsItemPropertiesArgs and ApplicationInsightsComponentAnalyticsItemPropertiesOutput values.
// You can construct a concrete instance of `ApplicationInsightsComponentAnalyticsItemPropertiesInput` via:
//
//          ApplicationInsightsComponentAnalyticsItemPropertiesArgs{...}
type ApplicationInsightsComponentAnalyticsItemPropertiesInput interface {
	pulumi.Input

	ToApplicationInsightsComponentAnalyticsItemPropertiesOutput() ApplicationInsightsComponentAnalyticsItemPropertiesOutput
	ToApplicationInsightsComponentAnalyticsItemPropertiesOutputWithContext(context.Context) ApplicationInsightsComponentAnalyticsItemPropertiesOutput
}

// A set of properties that can be defined in the context of a specific item type. Each type may have its own properties.
type ApplicationInsightsComponentAnalyticsItemPropertiesArgs struct {
	// A function alias, used when the type of the item is Function
	FunctionAlias pulumi.StringPtrInput `pulumi:"functionAlias"`
}

func (ApplicationInsightsComponentAnalyticsItemPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInsightsComponentAnalyticsItemProperties)(nil)).Elem()
}

func (i ApplicationInsightsComponentAnalyticsItemPropertiesArgs) ToApplicationInsightsComponentAnalyticsItemPropertiesOutput() ApplicationInsightsComponentAnalyticsItemPropertiesOutput {
	return i.ToApplicationInsightsComponentAnalyticsItemPropertiesOutputWithContext(context.Background())
}

func (i ApplicationInsightsComponentAnalyticsItemPropertiesArgs) ToApplicationInsightsComponentAnalyticsItemPropertiesOutputWithContext(ctx context.Context) ApplicationInsightsComponentAnalyticsItemPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInsightsComponentAnalyticsItemPropertiesOutput)
}

func (i ApplicationInsightsComponentAnalyticsItemPropertiesArgs) ToApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput() ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput {
	return i.ToApplicationInsightsComponentAnalyticsItemPropertiesPtrOutputWithContext(context.Background())
}

func (i ApplicationInsightsComponentAnalyticsItemPropertiesArgs) ToApplicationInsightsComponentAnalyticsItemPropertiesPtrOutputWithContext(ctx context.Context) ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInsightsComponentAnalyticsItemPropertiesOutput).ToApplicationInsightsComponentAnalyticsItemPropertiesPtrOutputWithContext(ctx)
}

// ApplicationInsightsComponentAnalyticsItemPropertiesPtrInput is an input type that accepts ApplicationInsightsComponentAnalyticsItemPropertiesArgs, ApplicationInsightsComponentAnalyticsItemPropertiesPtr and ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput values.
// You can construct a concrete instance of `ApplicationInsightsComponentAnalyticsItemPropertiesPtrInput` via:
//
//          ApplicationInsightsComponentAnalyticsItemPropertiesArgs{...}
//
//  or:
//
//          nil
type ApplicationInsightsComponentAnalyticsItemPropertiesPtrInput interface {
	pulumi.Input

	ToApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput() ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput
	ToApplicationInsightsComponentAnalyticsItemPropertiesPtrOutputWithContext(context.Context) ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput
}

type applicationInsightsComponentAnalyticsItemPropertiesPtrType ApplicationInsightsComponentAnalyticsItemPropertiesArgs

func ApplicationInsightsComponentAnalyticsItemPropertiesPtr(v *ApplicationInsightsComponentAnalyticsItemPropertiesArgs) ApplicationInsightsComponentAnalyticsItemPropertiesPtrInput {
	return (*applicationInsightsComponentAnalyticsItemPropertiesPtrType)(v)
}

func (*applicationInsightsComponentAnalyticsItemPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationInsightsComponentAnalyticsItemProperties)(nil)).Elem()
}

func (i *applicationInsightsComponentAnalyticsItemPropertiesPtrType) ToApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput() ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput {
	return i.ToApplicationInsightsComponentAnalyticsItemPropertiesPtrOutputWithContext(context.Background())
}

func (i *applicationInsightsComponentAnalyticsItemPropertiesPtrType) ToApplicationInsightsComponentAnalyticsItemPropertiesPtrOutputWithContext(ctx context.Context) ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput)
}

// A set of properties that can be defined in the context of a specific item type. Each type may have its own properties.
type ApplicationInsightsComponentAnalyticsItemPropertiesOutput struct{ *pulumi.OutputState }

func (ApplicationInsightsComponentAnalyticsItemPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInsightsComponentAnalyticsItemProperties)(nil)).Elem()
}

func (o ApplicationInsightsComponentAnalyticsItemPropertiesOutput) ToApplicationInsightsComponentAnalyticsItemPropertiesOutput() ApplicationInsightsComponentAnalyticsItemPropertiesOutput {
	return o
}

func (o ApplicationInsightsComponentAnalyticsItemPropertiesOutput) ToApplicationInsightsComponentAnalyticsItemPropertiesOutputWithContext(ctx context.Context) ApplicationInsightsComponentAnalyticsItemPropertiesOutput {
	return o
}

func (o ApplicationInsightsComponentAnalyticsItemPropertiesOutput) ToApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput() ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput {
	return o.ToApplicationInsightsComponentAnalyticsItemPropertiesPtrOutputWithContext(context.Background())
}

func (o ApplicationInsightsComponentAnalyticsItemPropertiesOutput) ToApplicationInsightsComponentAnalyticsItemPropertiesPtrOutputWithContext(ctx context.Context) ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentAnalyticsItemProperties) *ApplicationInsightsComponentAnalyticsItemProperties {
		return &v
	}).(ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput)
}

// A function alias, used when the type of the item is Function
func (o ApplicationInsightsComponentAnalyticsItemPropertiesOutput) FunctionAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentAnalyticsItemProperties) *string { return v.FunctionAlias }).(pulumi.StringPtrOutput)
}

type ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationInsightsComponentAnalyticsItemProperties)(nil)).Elem()
}

func (o ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput) ToApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput() ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput {
	return o
}

func (o ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput) ToApplicationInsightsComponentAnalyticsItemPropertiesPtrOutputWithContext(ctx context.Context) ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput {
	return o
}

func (o ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput) Elem() ApplicationInsightsComponentAnalyticsItemPropertiesOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentAnalyticsItemProperties) ApplicationInsightsComponentAnalyticsItemProperties {
		return *v
	}).(ApplicationInsightsComponentAnalyticsItemPropertiesOutput)
}

// A function alias, used when the type of the item is Function
func (o ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput) FunctionAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentAnalyticsItemProperties) *string {
		if v == nil {
			return nil
		}
		return v.FunctionAlias
	}).(pulumi.StringPtrOutput)
}

// A set of properties that can be defined in the context of a specific item type. Each type may have its own properties.
type ApplicationInsightsComponentAnalyticsItemPropertiesResponse struct {
	// A function alias, used when the type of the item is Function
	FunctionAlias *string `pulumi:"functionAlias"`
}

// ApplicationInsightsComponentAnalyticsItemPropertiesResponseInput is an input type that accepts ApplicationInsightsComponentAnalyticsItemPropertiesResponseArgs and ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput values.
// You can construct a concrete instance of `ApplicationInsightsComponentAnalyticsItemPropertiesResponseInput` via:
//
//          ApplicationInsightsComponentAnalyticsItemPropertiesResponseArgs{...}
type ApplicationInsightsComponentAnalyticsItemPropertiesResponseInput interface {
	pulumi.Input

	ToApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput() ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput
	ToApplicationInsightsComponentAnalyticsItemPropertiesResponseOutputWithContext(context.Context) ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput
}

// A set of properties that can be defined in the context of a specific item type. Each type may have its own properties.
type ApplicationInsightsComponentAnalyticsItemPropertiesResponseArgs struct {
	// A function alias, used when the type of the item is Function
	FunctionAlias pulumi.StringPtrInput `pulumi:"functionAlias"`
}

func (ApplicationInsightsComponentAnalyticsItemPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInsightsComponentAnalyticsItemPropertiesResponse)(nil)).Elem()
}

func (i ApplicationInsightsComponentAnalyticsItemPropertiesResponseArgs) ToApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput() ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput {
	return i.ToApplicationInsightsComponentAnalyticsItemPropertiesResponseOutputWithContext(context.Background())
}

func (i ApplicationInsightsComponentAnalyticsItemPropertiesResponseArgs) ToApplicationInsightsComponentAnalyticsItemPropertiesResponseOutputWithContext(ctx context.Context) ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput)
}

func (i ApplicationInsightsComponentAnalyticsItemPropertiesResponseArgs) ToApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput() ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput {
	return i.ToApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationInsightsComponentAnalyticsItemPropertiesResponseArgs) ToApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutputWithContext(ctx context.Context) ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput).ToApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutputWithContext(ctx)
}

// ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrInput is an input type that accepts ApplicationInsightsComponentAnalyticsItemPropertiesResponseArgs, ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtr and ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrInput` via:
//
//          ApplicationInsightsComponentAnalyticsItemPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrInput interface {
	pulumi.Input

	ToApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput() ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput
	ToApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutputWithContext(context.Context) ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput
}

type applicationInsightsComponentAnalyticsItemPropertiesResponsePtrType ApplicationInsightsComponentAnalyticsItemPropertiesResponseArgs

func ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtr(v *ApplicationInsightsComponentAnalyticsItemPropertiesResponseArgs) ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrInput {
	return (*applicationInsightsComponentAnalyticsItemPropertiesResponsePtrType)(v)
}

func (*applicationInsightsComponentAnalyticsItemPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationInsightsComponentAnalyticsItemPropertiesResponse)(nil)).Elem()
}

func (i *applicationInsightsComponentAnalyticsItemPropertiesResponsePtrType) ToApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput() ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput {
	return i.ToApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *applicationInsightsComponentAnalyticsItemPropertiesResponsePtrType) ToApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutputWithContext(ctx context.Context) ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput)
}

// A set of properties that can be defined in the context of a specific item type. Each type may have its own properties.
type ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInsightsComponentAnalyticsItemPropertiesResponse)(nil)).Elem()
}

func (o ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput) ToApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput() ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput {
	return o
}

func (o ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput) ToApplicationInsightsComponentAnalyticsItemPropertiesResponseOutputWithContext(ctx context.Context) ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput {
	return o
}

func (o ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput) ToApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput() ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput {
	return o.ToApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput) ToApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutputWithContext(ctx context.Context) ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentAnalyticsItemPropertiesResponse) *ApplicationInsightsComponentAnalyticsItemPropertiesResponse {
		return &v
	}).(ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput)
}

// A function alias, used when the type of the item is Function
func (o ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput) FunctionAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentAnalyticsItemPropertiesResponse) *string { return v.FunctionAlias }).(pulumi.StringPtrOutput)
}

type ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationInsightsComponentAnalyticsItemPropertiesResponse)(nil)).Elem()
}

func (o ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput) ToApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput() ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput {
	return o
}

func (o ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput) ToApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutputWithContext(ctx context.Context) ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput {
	return o
}

func (o ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput) Elem() ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentAnalyticsItemPropertiesResponse) ApplicationInsightsComponentAnalyticsItemPropertiesResponse {
		return *v
	}).(ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput)
}

// A function alias, used when the type of the item is Function
func (o ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput) FunctionAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentAnalyticsItemPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.FunctionAlias
	}).(pulumi.StringPtrOutput)
}

// Properties that define an Application Insights component resource.
type ApplicationInsightsComponentPropertiesResponse struct {
	// Application Insights Unique ID for your Application.
	AppId string `pulumi:"AppId"`
	// The unique ID of your application. This field mirrors the 'Name' field and cannot be changed.
	ApplicationId string `pulumi:"ApplicationId"`
	// Type of application being monitored.
	Application_Type string `pulumi:"Application_Type"`
	// Application Insights component connection string.
	ConnectionString string `pulumi:"ConnectionString"`
	// Creation Date for the Application Insights component, in ISO 8601 format.
	CreationDate string `pulumi:"CreationDate"`
	// Disable IP masking.
	DisableIpMasking *bool `pulumi:"DisableIpMasking"`
	// Used by the Application Insights system to determine what kind of flow this component was created by. This is to be set to 'Bluefield' when creating/updating a component via the REST API.
	Flow_Type *string `pulumi:"Flow_Type"`
	// The unique application ID created when a new application is added to HockeyApp, used for communications with HockeyApp.
	HockeyAppId *string `pulumi:"HockeyAppId"`
	// Token used to authenticate communications with between Application Insights and HockeyApp.
	HockeyAppToken string `pulumi:"HockeyAppToken"`
	// Purge data immediately after 30 days.
	ImmediatePurgeDataOn30Days *bool `pulumi:"ImmediatePurgeDataOn30Days"`
	// Indicates the flow of the ingestion.
	IngestionMode *string `pulumi:"IngestionMode"`
	// Application Insights Instrumentation key. A read-only value that applications can use to identify the destination for all telemetry sent to Azure Application Insights. This value will be supplied upon construction of each new Application Insights component.
	InstrumentationKey string `pulumi:"InstrumentationKey"`
	// List of linked private link scope resources.
	PrivateLinkScopedResources []PrivateLinkScopedResourceResponse `pulumi:"PrivateLinkScopedResources"`
	// Describes what tool created this Application Insights component. Customers using this API should set this to the default 'rest'.
	Request_Source *string `pulumi:"Request_Source"`
	// Retention period in days.
	RetentionInDays *int `pulumi:"RetentionInDays"`
	// Percentage of the data produced by the application being monitored that is being sampled for Application Insights telemetry.
	SamplingPercentage *float64 `pulumi:"SamplingPercentage"`
	// Azure Tenant Id.
	TenantId string `pulumi:"TenantId"`
	// Current state of this component: whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Succeeded, Deploying, Canceled, and Failed.
	ProvisioningState string `pulumi:"provisioningState"`
}

// ApplicationInsightsComponentPropertiesResponseInput is an input type that accepts ApplicationInsightsComponentPropertiesResponseArgs and ApplicationInsightsComponentPropertiesResponseOutput values.
// You can construct a concrete instance of `ApplicationInsightsComponentPropertiesResponseInput` via:
//
//          ApplicationInsightsComponentPropertiesResponseArgs{...}
type ApplicationInsightsComponentPropertiesResponseInput interface {
	pulumi.Input

	ToApplicationInsightsComponentPropertiesResponseOutput() ApplicationInsightsComponentPropertiesResponseOutput
	ToApplicationInsightsComponentPropertiesResponseOutputWithContext(context.Context) ApplicationInsightsComponentPropertiesResponseOutput
}

// Properties that define an Application Insights component resource.
type ApplicationInsightsComponentPropertiesResponseArgs struct {
	// Application Insights Unique ID for your Application.
	AppId pulumi.StringInput `pulumi:"AppId"`
	// The unique ID of your application. This field mirrors the 'Name' field and cannot be changed.
	ApplicationId pulumi.StringInput `pulumi:"ApplicationId"`
	// Type of application being monitored.
	Application_Type pulumi.StringInput `pulumi:"Application_Type"`
	// Application Insights component connection string.
	ConnectionString pulumi.StringInput `pulumi:"ConnectionString"`
	// Creation Date for the Application Insights component, in ISO 8601 format.
	CreationDate pulumi.StringInput `pulumi:"CreationDate"`
	// Disable IP masking.
	DisableIpMasking pulumi.BoolPtrInput `pulumi:"DisableIpMasking"`
	// Used by the Application Insights system to determine what kind of flow this component was created by. This is to be set to 'Bluefield' when creating/updating a component via the REST API.
	Flow_Type pulumi.StringPtrInput `pulumi:"Flow_Type"`
	// The unique application ID created when a new application is added to HockeyApp, used for communications with HockeyApp.
	HockeyAppId pulumi.StringPtrInput `pulumi:"HockeyAppId"`
	// Token used to authenticate communications with between Application Insights and HockeyApp.
	HockeyAppToken pulumi.StringInput `pulumi:"HockeyAppToken"`
	// Purge data immediately after 30 days.
	ImmediatePurgeDataOn30Days pulumi.BoolPtrInput `pulumi:"ImmediatePurgeDataOn30Days"`
	// Indicates the flow of the ingestion.
	IngestionMode pulumi.StringPtrInput `pulumi:"IngestionMode"`
	// Application Insights Instrumentation key. A read-only value that applications can use to identify the destination for all telemetry sent to Azure Application Insights. This value will be supplied upon construction of each new Application Insights component.
	InstrumentationKey pulumi.StringInput `pulumi:"InstrumentationKey"`
	// List of linked private link scope resources.
	PrivateLinkScopedResources PrivateLinkScopedResourceResponseArrayInput `pulumi:"PrivateLinkScopedResources"`
	// Describes what tool created this Application Insights component. Customers using this API should set this to the default 'rest'.
	Request_Source pulumi.StringPtrInput `pulumi:"Request_Source"`
	// Retention period in days.
	RetentionInDays pulumi.IntPtrInput `pulumi:"RetentionInDays"`
	// Percentage of the data produced by the application being monitored that is being sampled for Application Insights telemetry.
	SamplingPercentage pulumi.Float64PtrInput `pulumi:"SamplingPercentage"`
	// Azure Tenant Id.
	TenantId pulumi.StringInput `pulumi:"TenantId"`
	// Current state of this component: whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Succeeded, Deploying, Canceled, and Failed.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
}

func (ApplicationInsightsComponentPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInsightsComponentPropertiesResponse)(nil)).Elem()
}

func (i ApplicationInsightsComponentPropertiesResponseArgs) ToApplicationInsightsComponentPropertiesResponseOutput() ApplicationInsightsComponentPropertiesResponseOutput {
	return i.ToApplicationInsightsComponentPropertiesResponseOutputWithContext(context.Background())
}

func (i ApplicationInsightsComponentPropertiesResponseArgs) ToApplicationInsightsComponentPropertiesResponseOutputWithContext(ctx context.Context) ApplicationInsightsComponentPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInsightsComponentPropertiesResponseOutput)
}

func (i ApplicationInsightsComponentPropertiesResponseArgs) ToApplicationInsightsComponentPropertiesResponsePtrOutput() ApplicationInsightsComponentPropertiesResponsePtrOutput {
	return i.ToApplicationInsightsComponentPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationInsightsComponentPropertiesResponseArgs) ToApplicationInsightsComponentPropertiesResponsePtrOutputWithContext(ctx context.Context) ApplicationInsightsComponentPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInsightsComponentPropertiesResponseOutput).ToApplicationInsightsComponentPropertiesResponsePtrOutputWithContext(ctx)
}

// ApplicationInsightsComponentPropertiesResponsePtrInput is an input type that accepts ApplicationInsightsComponentPropertiesResponseArgs, ApplicationInsightsComponentPropertiesResponsePtr and ApplicationInsightsComponentPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationInsightsComponentPropertiesResponsePtrInput` via:
//
//          ApplicationInsightsComponentPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationInsightsComponentPropertiesResponsePtrInput interface {
	pulumi.Input

	ToApplicationInsightsComponentPropertiesResponsePtrOutput() ApplicationInsightsComponentPropertiesResponsePtrOutput
	ToApplicationInsightsComponentPropertiesResponsePtrOutputWithContext(context.Context) ApplicationInsightsComponentPropertiesResponsePtrOutput
}

type applicationInsightsComponentPropertiesResponsePtrType ApplicationInsightsComponentPropertiesResponseArgs

func ApplicationInsightsComponentPropertiesResponsePtr(v *ApplicationInsightsComponentPropertiesResponseArgs) ApplicationInsightsComponentPropertiesResponsePtrInput {
	return (*applicationInsightsComponentPropertiesResponsePtrType)(v)
}

func (*applicationInsightsComponentPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationInsightsComponentPropertiesResponse)(nil)).Elem()
}

func (i *applicationInsightsComponentPropertiesResponsePtrType) ToApplicationInsightsComponentPropertiesResponsePtrOutput() ApplicationInsightsComponentPropertiesResponsePtrOutput {
	return i.ToApplicationInsightsComponentPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *applicationInsightsComponentPropertiesResponsePtrType) ToApplicationInsightsComponentPropertiesResponsePtrOutputWithContext(ctx context.Context) ApplicationInsightsComponentPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInsightsComponentPropertiesResponsePtrOutput)
}

// Properties that define an Application Insights component resource.
type ApplicationInsightsComponentPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ApplicationInsightsComponentPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInsightsComponentPropertiesResponse)(nil)).Elem()
}

func (o ApplicationInsightsComponentPropertiesResponseOutput) ToApplicationInsightsComponentPropertiesResponseOutput() ApplicationInsightsComponentPropertiesResponseOutput {
	return o
}

func (o ApplicationInsightsComponentPropertiesResponseOutput) ToApplicationInsightsComponentPropertiesResponseOutputWithContext(ctx context.Context) ApplicationInsightsComponentPropertiesResponseOutput {
	return o
}

func (o ApplicationInsightsComponentPropertiesResponseOutput) ToApplicationInsightsComponentPropertiesResponsePtrOutput() ApplicationInsightsComponentPropertiesResponsePtrOutput {
	return o.ToApplicationInsightsComponentPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationInsightsComponentPropertiesResponseOutput) ToApplicationInsightsComponentPropertiesResponsePtrOutputWithContext(ctx context.Context) ApplicationInsightsComponentPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentPropertiesResponse) *ApplicationInsightsComponentPropertiesResponse {
		return &v
	}).(ApplicationInsightsComponentPropertiesResponsePtrOutput)
}

// Application Insights Unique ID for your Application.
func (o ApplicationInsightsComponentPropertiesResponseOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentPropertiesResponse) string { return v.AppId }).(pulumi.StringOutput)
}

// The unique ID of your application. This field mirrors the 'Name' field and cannot be changed.
func (o ApplicationInsightsComponentPropertiesResponseOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentPropertiesResponse) string { return v.ApplicationId }).(pulumi.StringOutput)
}

// Type of application being monitored.
func (o ApplicationInsightsComponentPropertiesResponseOutput) Application_Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentPropertiesResponse) string { return v.Application_Type }).(pulumi.StringOutput)
}

// Application Insights component connection string.
func (o ApplicationInsightsComponentPropertiesResponseOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentPropertiesResponse) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// Creation Date for the Application Insights component, in ISO 8601 format.
func (o ApplicationInsightsComponentPropertiesResponseOutput) CreationDate() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentPropertiesResponse) string { return v.CreationDate }).(pulumi.StringOutput)
}

// Disable IP masking.
func (o ApplicationInsightsComponentPropertiesResponseOutput) DisableIpMasking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentPropertiesResponse) *bool { return v.DisableIpMasking }).(pulumi.BoolPtrOutput)
}

// Used by the Application Insights system to determine what kind of flow this component was created by. This is to be set to 'Bluefield' when creating/updating a component via the REST API.
func (o ApplicationInsightsComponentPropertiesResponseOutput) Flow_Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentPropertiesResponse) *string { return v.Flow_Type }).(pulumi.StringPtrOutput)
}

// The unique application ID created when a new application is added to HockeyApp, used for communications with HockeyApp.
func (o ApplicationInsightsComponentPropertiesResponseOutput) HockeyAppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentPropertiesResponse) *string { return v.HockeyAppId }).(pulumi.StringPtrOutput)
}

// Token used to authenticate communications with between Application Insights and HockeyApp.
func (o ApplicationInsightsComponentPropertiesResponseOutput) HockeyAppToken() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentPropertiesResponse) string { return v.HockeyAppToken }).(pulumi.StringOutput)
}

// Purge data immediately after 30 days.
func (o ApplicationInsightsComponentPropertiesResponseOutput) ImmediatePurgeDataOn30Days() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentPropertiesResponse) *bool { return v.ImmediatePurgeDataOn30Days }).(pulumi.BoolPtrOutput)
}

// Indicates the flow of the ingestion.
func (o ApplicationInsightsComponentPropertiesResponseOutput) IngestionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentPropertiesResponse) *string { return v.IngestionMode }).(pulumi.StringPtrOutput)
}

// Application Insights Instrumentation key. A read-only value that applications can use to identify the destination for all telemetry sent to Azure Application Insights. This value will be supplied upon construction of each new Application Insights component.
func (o ApplicationInsightsComponentPropertiesResponseOutput) InstrumentationKey() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentPropertiesResponse) string { return v.InstrumentationKey }).(pulumi.StringOutput)
}

// List of linked private link scope resources.
func (o ApplicationInsightsComponentPropertiesResponseOutput) PrivateLinkScopedResources() PrivateLinkScopedResourceResponseArrayOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentPropertiesResponse) []PrivateLinkScopedResourceResponse {
		return v.PrivateLinkScopedResources
	}).(PrivateLinkScopedResourceResponseArrayOutput)
}

// Describes what tool created this Application Insights component. Customers using this API should set this to the default 'rest'.
func (o ApplicationInsightsComponentPropertiesResponseOutput) Request_Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentPropertiesResponse) *string { return v.Request_Source }).(pulumi.StringPtrOutput)
}

// Retention period in days.
func (o ApplicationInsightsComponentPropertiesResponseOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentPropertiesResponse) *int { return v.RetentionInDays }).(pulumi.IntPtrOutput)
}

// Percentage of the data produced by the application being monitored that is being sampled for Application Insights telemetry.
func (o ApplicationInsightsComponentPropertiesResponseOutput) SamplingPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentPropertiesResponse) *float64 { return v.SamplingPercentage }).(pulumi.Float64PtrOutput)
}

// Azure Tenant Id.
func (o ApplicationInsightsComponentPropertiesResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentPropertiesResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Current state of this component: whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Succeeded, Deploying, Canceled, and Failed.
func (o ApplicationInsightsComponentPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type ApplicationInsightsComponentPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationInsightsComponentPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationInsightsComponentPropertiesResponse)(nil)).Elem()
}

func (o ApplicationInsightsComponentPropertiesResponsePtrOutput) ToApplicationInsightsComponentPropertiesResponsePtrOutput() ApplicationInsightsComponentPropertiesResponsePtrOutput {
	return o
}

func (o ApplicationInsightsComponentPropertiesResponsePtrOutput) ToApplicationInsightsComponentPropertiesResponsePtrOutputWithContext(ctx context.Context) ApplicationInsightsComponentPropertiesResponsePtrOutput {
	return o
}

func (o ApplicationInsightsComponentPropertiesResponsePtrOutput) Elem() ApplicationInsightsComponentPropertiesResponseOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentPropertiesResponse) ApplicationInsightsComponentPropertiesResponse {
		return *v
	}).(ApplicationInsightsComponentPropertiesResponseOutput)
}

// Application Insights Unique ID for your Application.
func (o ApplicationInsightsComponentPropertiesResponsePtrOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AppId
	}).(pulumi.StringPtrOutput)
}

// The unique ID of your application. This field mirrors the 'Name' field and cannot be changed.
func (o ApplicationInsightsComponentPropertiesResponsePtrOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ApplicationId
	}).(pulumi.StringPtrOutput)
}

// Type of application being monitored.
func (o ApplicationInsightsComponentPropertiesResponsePtrOutput) Application_Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Application_Type
	}).(pulumi.StringPtrOutput)
}

// Application Insights component connection string.
func (o ApplicationInsightsComponentPropertiesResponsePtrOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ConnectionString
	}).(pulumi.StringPtrOutput)
}

// Creation Date for the Application Insights component, in ISO 8601 format.
func (o ApplicationInsightsComponentPropertiesResponsePtrOutput) CreationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreationDate
	}).(pulumi.StringPtrOutput)
}

// Disable IP masking.
func (o ApplicationInsightsComponentPropertiesResponsePtrOutput) DisableIpMasking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.DisableIpMasking
	}).(pulumi.BoolPtrOutput)
}

// Used by the Application Insights system to determine what kind of flow this component was created by. This is to be set to 'Bluefield' when creating/updating a component via the REST API.
func (o ApplicationInsightsComponentPropertiesResponsePtrOutput) Flow_Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Flow_Type
	}).(pulumi.StringPtrOutput)
}

// The unique application ID created when a new application is added to HockeyApp, used for communications with HockeyApp.
func (o ApplicationInsightsComponentPropertiesResponsePtrOutput) HockeyAppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.HockeyAppId
	}).(pulumi.StringPtrOutput)
}

// Token used to authenticate communications with between Application Insights and HockeyApp.
func (o ApplicationInsightsComponentPropertiesResponsePtrOutput) HockeyAppToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.HockeyAppToken
	}).(pulumi.StringPtrOutput)
}

// Purge data immediately after 30 days.
func (o ApplicationInsightsComponentPropertiesResponsePtrOutput) ImmediatePurgeDataOn30Days() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ImmediatePurgeDataOn30Days
	}).(pulumi.BoolPtrOutput)
}

// Indicates the flow of the ingestion.
func (o ApplicationInsightsComponentPropertiesResponsePtrOutput) IngestionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.IngestionMode
	}).(pulumi.StringPtrOutput)
}

// Application Insights Instrumentation key. A read-only value that applications can use to identify the destination for all telemetry sent to Azure Application Insights. This value will be supplied upon construction of each new Application Insights component.
func (o ApplicationInsightsComponentPropertiesResponsePtrOutput) InstrumentationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InstrumentationKey
	}).(pulumi.StringPtrOutput)
}

// List of linked private link scope resources.
func (o ApplicationInsightsComponentPropertiesResponsePtrOutput) PrivateLinkScopedResources() PrivateLinkScopedResourceResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentPropertiesResponse) []PrivateLinkScopedResourceResponse {
		if v == nil {
			return nil
		}
		return v.PrivateLinkScopedResources
	}).(PrivateLinkScopedResourceResponseArrayOutput)
}

// Describes what tool created this Application Insights component. Customers using this API should set this to the default 'rest'.
func (o ApplicationInsightsComponentPropertiesResponsePtrOutput) Request_Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Request_Source
	}).(pulumi.StringPtrOutput)
}

// Retention period in days.
func (o ApplicationInsightsComponentPropertiesResponsePtrOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.RetentionInDays
	}).(pulumi.IntPtrOutput)
}

// Percentage of the data produced by the application being monitored that is being sampled for Application Insights telemetry.
func (o ApplicationInsightsComponentPropertiesResponsePtrOutput) SamplingPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentPropertiesResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.SamplingPercentage
	}).(pulumi.Float64PtrOutput)
}

// Azure Tenant Id.
func (o ApplicationInsightsComponentPropertiesResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Current state of this component: whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Succeeded, Deploying, Canceled, and Failed.
func (o ApplicationInsightsComponentPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The private link scope resource reference.
type PrivateLinkScopedResourceResponse struct {
	// The full resource Id of the private link scope resource.
	ResourceId *string `pulumi:"ResourceId"`
	// The private link scope unique Identifier.
	ScopeId *string `pulumi:"ScopeId"`
}

// PrivateLinkScopedResourceResponseInput is an input type that accepts PrivateLinkScopedResourceResponseArgs and PrivateLinkScopedResourceResponseOutput values.
// You can construct a concrete instance of `PrivateLinkScopedResourceResponseInput` via:
//
//          PrivateLinkScopedResourceResponseArgs{...}
type PrivateLinkScopedResourceResponseInput interface {
	pulumi.Input

	ToPrivateLinkScopedResourceResponseOutput() PrivateLinkScopedResourceResponseOutput
	ToPrivateLinkScopedResourceResponseOutputWithContext(context.Context) PrivateLinkScopedResourceResponseOutput
}

// The private link scope resource reference.
type PrivateLinkScopedResourceResponseArgs struct {
	// The full resource Id of the private link scope resource.
	ResourceId pulumi.StringPtrInput `pulumi:"ResourceId"`
	// The private link scope unique Identifier.
	ScopeId pulumi.StringPtrInput `pulumi:"ScopeId"`
}

func (PrivateLinkScopedResourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkScopedResourceResponse)(nil)).Elem()
}

func (i PrivateLinkScopedResourceResponseArgs) ToPrivateLinkScopedResourceResponseOutput() PrivateLinkScopedResourceResponseOutput {
	return i.ToPrivateLinkScopedResourceResponseOutputWithContext(context.Background())
}

func (i PrivateLinkScopedResourceResponseArgs) ToPrivateLinkScopedResourceResponseOutputWithContext(ctx context.Context) PrivateLinkScopedResourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkScopedResourceResponseOutput)
}

// PrivateLinkScopedResourceResponseArrayInput is an input type that accepts PrivateLinkScopedResourceResponseArray and PrivateLinkScopedResourceResponseArrayOutput values.
// You can construct a concrete instance of `PrivateLinkScopedResourceResponseArrayInput` via:
//
//          PrivateLinkScopedResourceResponseArray{ PrivateLinkScopedResourceResponseArgs{...} }
type PrivateLinkScopedResourceResponseArrayInput interface {
	pulumi.Input

	ToPrivateLinkScopedResourceResponseArrayOutput() PrivateLinkScopedResourceResponseArrayOutput
	ToPrivateLinkScopedResourceResponseArrayOutputWithContext(context.Context) PrivateLinkScopedResourceResponseArrayOutput
}

type PrivateLinkScopedResourceResponseArray []PrivateLinkScopedResourceResponseInput

func (PrivateLinkScopedResourceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateLinkScopedResourceResponse)(nil)).Elem()
}

func (i PrivateLinkScopedResourceResponseArray) ToPrivateLinkScopedResourceResponseArrayOutput() PrivateLinkScopedResourceResponseArrayOutput {
	return i.ToPrivateLinkScopedResourceResponseArrayOutputWithContext(context.Background())
}

func (i PrivateLinkScopedResourceResponseArray) ToPrivateLinkScopedResourceResponseArrayOutputWithContext(ctx context.Context) PrivateLinkScopedResourceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkScopedResourceResponseArrayOutput)
}

// The private link scope resource reference.
type PrivateLinkScopedResourceResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkScopedResourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkScopedResourceResponse)(nil)).Elem()
}

func (o PrivateLinkScopedResourceResponseOutput) ToPrivateLinkScopedResourceResponseOutput() PrivateLinkScopedResourceResponseOutput {
	return o
}

func (o PrivateLinkScopedResourceResponseOutput) ToPrivateLinkScopedResourceResponseOutputWithContext(ctx context.Context) PrivateLinkScopedResourceResponseOutput {
	return o
}

// The full resource Id of the private link scope resource.
func (o PrivateLinkScopedResourceResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkScopedResourceResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// The private link scope unique Identifier.
func (o PrivateLinkScopedResourceResponseOutput) ScopeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkScopedResourceResponse) *string { return v.ScopeId }).(pulumi.StringPtrOutput)
}

type PrivateLinkScopedResourceResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateLinkScopedResourceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateLinkScopedResourceResponse)(nil)).Elem()
}

func (o PrivateLinkScopedResourceResponseArrayOutput) ToPrivateLinkScopedResourceResponseArrayOutput() PrivateLinkScopedResourceResponseArrayOutput {
	return o
}

func (o PrivateLinkScopedResourceResponseArrayOutput) ToPrivateLinkScopedResourceResponseArrayOutputWithContext(ctx context.Context) PrivateLinkScopedResourceResponseArrayOutput {
	return o
}

func (o PrivateLinkScopedResourceResponseArrayOutput) Index(i pulumi.IntInput) PrivateLinkScopedResourceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateLinkScopedResourceResponse {
		return vs[0].([]PrivateLinkScopedResourceResponse)[vs[1].(int)]
	}).(PrivateLinkScopedResourceResponseOutput)
}

// Geo-physical location to run a web test from. You must specify one or more locations for the test to run from.
type WebTestGeolocation struct {
	// Location ID for the webtest to run from.
	Location *string `pulumi:"location"`
}

// WebTestGeolocationInput is an input type that accepts WebTestGeolocationArgs and WebTestGeolocationOutput values.
// You can construct a concrete instance of `WebTestGeolocationInput` via:
//
//          WebTestGeolocationArgs{...}
type WebTestGeolocationInput interface {
	pulumi.Input

	ToWebTestGeolocationOutput() WebTestGeolocationOutput
	ToWebTestGeolocationOutputWithContext(context.Context) WebTestGeolocationOutput
}

// Geo-physical location to run a web test from. You must specify one or more locations for the test to run from.
type WebTestGeolocationArgs struct {
	// Location ID for the webtest to run from.
	Location pulumi.StringPtrInput `pulumi:"location"`
}

func (WebTestGeolocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTestGeolocation)(nil)).Elem()
}

func (i WebTestGeolocationArgs) ToWebTestGeolocationOutput() WebTestGeolocationOutput {
	return i.ToWebTestGeolocationOutputWithContext(context.Background())
}

func (i WebTestGeolocationArgs) ToWebTestGeolocationOutputWithContext(ctx context.Context) WebTestGeolocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTestGeolocationOutput)
}

// WebTestGeolocationArrayInput is an input type that accepts WebTestGeolocationArray and WebTestGeolocationArrayOutput values.
// You can construct a concrete instance of `WebTestGeolocationArrayInput` via:
//
//          WebTestGeolocationArray{ WebTestGeolocationArgs{...} }
type WebTestGeolocationArrayInput interface {
	pulumi.Input

	ToWebTestGeolocationArrayOutput() WebTestGeolocationArrayOutput
	ToWebTestGeolocationArrayOutputWithContext(context.Context) WebTestGeolocationArrayOutput
}

type WebTestGeolocationArray []WebTestGeolocationInput

func (WebTestGeolocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebTestGeolocation)(nil)).Elem()
}

func (i WebTestGeolocationArray) ToWebTestGeolocationArrayOutput() WebTestGeolocationArrayOutput {
	return i.ToWebTestGeolocationArrayOutputWithContext(context.Background())
}

func (i WebTestGeolocationArray) ToWebTestGeolocationArrayOutputWithContext(ctx context.Context) WebTestGeolocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTestGeolocationArrayOutput)
}

// Geo-physical location to run a web test from. You must specify one or more locations for the test to run from.
type WebTestGeolocationOutput struct{ *pulumi.OutputState }

func (WebTestGeolocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTestGeolocation)(nil)).Elem()
}

func (o WebTestGeolocationOutput) ToWebTestGeolocationOutput() WebTestGeolocationOutput {
	return o
}

func (o WebTestGeolocationOutput) ToWebTestGeolocationOutputWithContext(ctx context.Context) WebTestGeolocationOutput {
	return o
}

// Location ID for the webtest to run from.
func (o WebTestGeolocationOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebTestGeolocation) *string { return v.Location }).(pulumi.StringPtrOutput)
}

type WebTestGeolocationArrayOutput struct{ *pulumi.OutputState }

func (WebTestGeolocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebTestGeolocation)(nil)).Elem()
}

func (o WebTestGeolocationArrayOutput) ToWebTestGeolocationArrayOutput() WebTestGeolocationArrayOutput {
	return o
}

func (o WebTestGeolocationArrayOutput) ToWebTestGeolocationArrayOutputWithContext(ctx context.Context) WebTestGeolocationArrayOutput {
	return o
}

func (o WebTestGeolocationArrayOutput) Index(i pulumi.IntInput) WebTestGeolocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebTestGeolocation {
		return vs[0].([]WebTestGeolocation)[vs[1].(int)]
	}).(WebTestGeolocationOutput)
}

// Geo-physical location to run a web test from. You must specify one or more locations for the test to run from.
type WebTestGeolocationResponse struct {
	// Location ID for the webtest to run from.
	Id *string `pulumi:"Id"`
}

// WebTestGeolocationResponseInput is an input type that accepts WebTestGeolocationResponseArgs and WebTestGeolocationResponseOutput values.
// You can construct a concrete instance of `WebTestGeolocationResponseInput` via:
//
//          WebTestGeolocationResponseArgs{...}
type WebTestGeolocationResponseInput interface {
	pulumi.Input

	ToWebTestGeolocationResponseOutput() WebTestGeolocationResponseOutput
	ToWebTestGeolocationResponseOutputWithContext(context.Context) WebTestGeolocationResponseOutput
}

// Geo-physical location to run a web test from. You must specify one or more locations for the test to run from.
type WebTestGeolocationResponseArgs struct {
	// Location ID for the webtest to run from.
	Id pulumi.StringPtrInput `pulumi:"Id"`
}

func (WebTestGeolocationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTestGeolocationResponse)(nil)).Elem()
}

func (i WebTestGeolocationResponseArgs) ToWebTestGeolocationResponseOutput() WebTestGeolocationResponseOutput {
	return i.ToWebTestGeolocationResponseOutputWithContext(context.Background())
}

func (i WebTestGeolocationResponseArgs) ToWebTestGeolocationResponseOutputWithContext(ctx context.Context) WebTestGeolocationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTestGeolocationResponseOutput)
}

// WebTestGeolocationResponseArrayInput is an input type that accepts WebTestGeolocationResponseArray and WebTestGeolocationResponseArrayOutput values.
// You can construct a concrete instance of `WebTestGeolocationResponseArrayInput` via:
//
//          WebTestGeolocationResponseArray{ WebTestGeolocationResponseArgs{...} }
type WebTestGeolocationResponseArrayInput interface {
	pulumi.Input

	ToWebTestGeolocationResponseArrayOutput() WebTestGeolocationResponseArrayOutput
	ToWebTestGeolocationResponseArrayOutputWithContext(context.Context) WebTestGeolocationResponseArrayOutput
}

type WebTestGeolocationResponseArray []WebTestGeolocationResponseInput

func (WebTestGeolocationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebTestGeolocationResponse)(nil)).Elem()
}

func (i WebTestGeolocationResponseArray) ToWebTestGeolocationResponseArrayOutput() WebTestGeolocationResponseArrayOutput {
	return i.ToWebTestGeolocationResponseArrayOutputWithContext(context.Background())
}

func (i WebTestGeolocationResponseArray) ToWebTestGeolocationResponseArrayOutputWithContext(ctx context.Context) WebTestGeolocationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTestGeolocationResponseArrayOutput)
}

// Geo-physical location to run a web test from. You must specify one or more locations for the test to run from.
type WebTestGeolocationResponseOutput struct{ *pulumi.OutputState }

func (WebTestGeolocationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTestGeolocationResponse)(nil)).Elem()
}

func (o WebTestGeolocationResponseOutput) ToWebTestGeolocationResponseOutput() WebTestGeolocationResponseOutput {
	return o
}

func (o WebTestGeolocationResponseOutput) ToWebTestGeolocationResponseOutputWithContext(ctx context.Context) WebTestGeolocationResponseOutput {
	return o
}

// Location ID for the webtest to run from.
func (o WebTestGeolocationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebTestGeolocationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type WebTestGeolocationResponseArrayOutput struct{ *pulumi.OutputState }

func (WebTestGeolocationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebTestGeolocationResponse)(nil)).Elem()
}

func (o WebTestGeolocationResponseArrayOutput) ToWebTestGeolocationResponseArrayOutput() WebTestGeolocationResponseArrayOutput {
	return o
}

func (o WebTestGeolocationResponseArrayOutput) ToWebTestGeolocationResponseArrayOutputWithContext(ctx context.Context) WebTestGeolocationResponseArrayOutput {
	return o
}

func (o WebTestGeolocationResponseArrayOutput) Index(i pulumi.IntInput) WebTestGeolocationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebTestGeolocationResponse {
		return vs[0].([]WebTestGeolocationResponse)[vs[1].(int)]
	}).(WebTestGeolocationResponseOutput)
}

// An XML configuration specification for a WebTest.
type WebTestPropertiesConfiguration struct {
	// The XML specification of a WebTest to run against an application.
	WebTest *string `pulumi:"WebTest"`
}

// WebTestPropertiesConfigurationInput is an input type that accepts WebTestPropertiesConfigurationArgs and WebTestPropertiesConfigurationOutput values.
// You can construct a concrete instance of `WebTestPropertiesConfigurationInput` via:
//
//          WebTestPropertiesConfigurationArgs{...}
type WebTestPropertiesConfigurationInput interface {
	pulumi.Input

	ToWebTestPropertiesConfigurationOutput() WebTestPropertiesConfigurationOutput
	ToWebTestPropertiesConfigurationOutputWithContext(context.Context) WebTestPropertiesConfigurationOutput
}

// An XML configuration specification for a WebTest.
type WebTestPropertiesConfigurationArgs struct {
	// The XML specification of a WebTest to run against an application.
	WebTest pulumi.StringPtrInput `pulumi:"WebTest"`
}

func (WebTestPropertiesConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTestPropertiesConfiguration)(nil)).Elem()
}

func (i WebTestPropertiesConfigurationArgs) ToWebTestPropertiesConfigurationOutput() WebTestPropertiesConfigurationOutput {
	return i.ToWebTestPropertiesConfigurationOutputWithContext(context.Background())
}

func (i WebTestPropertiesConfigurationArgs) ToWebTestPropertiesConfigurationOutputWithContext(ctx context.Context) WebTestPropertiesConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTestPropertiesConfigurationOutput)
}

func (i WebTestPropertiesConfigurationArgs) ToWebTestPropertiesConfigurationPtrOutput() WebTestPropertiesConfigurationPtrOutput {
	return i.ToWebTestPropertiesConfigurationPtrOutputWithContext(context.Background())
}

func (i WebTestPropertiesConfigurationArgs) ToWebTestPropertiesConfigurationPtrOutputWithContext(ctx context.Context) WebTestPropertiesConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTestPropertiesConfigurationOutput).ToWebTestPropertiesConfigurationPtrOutputWithContext(ctx)
}

// WebTestPropertiesConfigurationPtrInput is an input type that accepts WebTestPropertiesConfigurationArgs, WebTestPropertiesConfigurationPtr and WebTestPropertiesConfigurationPtrOutput values.
// You can construct a concrete instance of `WebTestPropertiesConfigurationPtrInput` via:
//
//          WebTestPropertiesConfigurationArgs{...}
//
//  or:
//
//          nil
type WebTestPropertiesConfigurationPtrInput interface {
	pulumi.Input

	ToWebTestPropertiesConfigurationPtrOutput() WebTestPropertiesConfigurationPtrOutput
	ToWebTestPropertiesConfigurationPtrOutputWithContext(context.Context) WebTestPropertiesConfigurationPtrOutput
}

type webTestPropertiesConfigurationPtrType WebTestPropertiesConfigurationArgs

func WebTestPropertiesConfigurationPtr(v *WebTestPropertiesConfigurationArgs) WebTestPropertiesConfigurationPtrInput {
	return (*webTestPropertiesConfigurationPtrType)(v)
}

func (*webTestPropertiesConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebTestPropertiesConfiguration)(nil)).Elem()
}

func (i *webTestPropertiesConfigurationPtrType) ToWebTestPropertiesConfigurationPtrOutput() WebTestPropertiesConfigurationPtrOutput {
	return i.ToWebTestPropertiesConfigurationPtrOutputWithContext(context.Background())
}

func (i *webTestPropertiesConfigurationPtrType) ToWebTestPropertiesConfigurationPtrOutputWithContext(ctx context.Context) WebTestPropertiesConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTestPropertiesConfigurationPtrOutput)
}

// An XML configuration specification for a WebTest.
type WebTestPropertiesConfigurationOutput struct{ *pulumi.OutputState }

func (WebTestPropertiesConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTestPropertiesConfiguration)(nil)).Elem()
}

func (o WebTestPropertiesConfigurationOutput) ToWebTestPropertiesConfigurationOutput() WebTestPropertiesConfigurationOutput {
	return o
}

func (o WebTestPropertiesConfigurationOutput) ToWebTestPropertiesConfigurationOutputWithContext(ctx context.Context) WebTestPropertiesConfigurationOutput {
	return o
}

func (o WebTestPropertiesConfigurationOutput) ToWebTestPropertiesConfigurationPtrOutput() WebTestPropertiesConfigurationPtrOutput {
	return o.ToWebTestPropertiesConfigurationPtrOutputWithContext(context.Background())
}

func (o WebTestPropertiesConfigurationOutput) ToWebTestPropertiesConfigurationPtrOutputWithContext(ctx context.Context) WebTestPropertiesConfigurationPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesConfiguration) *WebTestPropertiesConfiguration {
		return &v
	}).(WebTestPropertiesConfigurationPtrOutput)
}

// The XML specification of a WebTest to run against an application.
func (o WebTestPropertiesConfigurationOutput) WebTest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesConfiguration) *string { return v.WebTest }).(pulumi.StringPtrOutput)
}

type WebTestPropertiesConfigurationPtrOutput struct{ *pulumi.OutputState }

func (WebTestPropertiesConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebTestPropertiesConfiguration)(nil)).Elem()
}

func (o WebTestPropertiesConfigurationPtrOutput) ToWebTestPropertiesConfigurationPtrOutput() WebTestPropertiesConfigurationPtrOutput {
	return o
}

func (o WebTestPropertiesConfigurationPtrOutput) ToWebTestPropertiesConfigurationPtrOutputWithContext(ctx context.Context) WebTestPropertiesConfigurationPtrOutput {
	return o
}

func (o WebTestPropertiesConfigurationPtrOutput) Elem() WebTestPropertiesConfigurationOutput {
	return o.ApplyT(func(v *WebTestPropertiesConfiguration) WebTestPropertiesConfiguration { return *v }).(WebTestPropertiesConfigurationOutput)
}

// The XML specification of a WebTest to run against an application.
func (o WebTestPropertiesConfigurationPtrOutput) WebTest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.WebTest
	}).(pulumi.StringPtrOutput)
}

// Metadata describing a web test for an Azure resource.
type WebTestPropertiesResponse struct {
	// An XML configuration specification for a WebTest.
	Configuration *WebTestPropertiesResponseConfiguration `pulumi:"Configuration"`
	// Purpose/user defined descriptive test for this WebTest.
	Description *string `pulumi:"Description"`
	// Is the test actively being monitored.
	Enabled *bool `pulumi:"Enabled"`
	// Interval in seconds between test runs for this WebTest. Default value is 300.
	Frequency *int `pulumi:"Frequency"`
	// The kind of web test this is, valid choices are ping and multistep.
	Kind string `pulumi:"Kind"`
	// A list of where to physically run the tests from to give global coverage for accessibility of your application.
	Locations []WebTestGeolocationResponse `pulumi:"Locations"`
	// User defined name if this WebTest.
	Name string `pulumi:"Name"`
	// Allow for retries should this WebTest fail.
	RetryEnabled *bool `pulumi:"RetryEnabled"`
	// Unique ID of this WebTest. This is typically the same value as the Name field.
	SyntheticMonitorId string `pulumi:"SyntheticMonitorId"`
	// Seconds until this WebTest will timeout and fail. Default value is 30.
	Timeout *int `pulumi:"Timeout"`
	// Current state of this component, whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Succeeded, Deploying, Canceled, and Failed.
	ProvisioningState string `pulumi:"provisioningState"`
}

// WebTestPropertiesResponseInput is an input type that accepts WebTestPropertiesResponseArgs and WebTestPropertiesResponseOutput values.
// You can construct a concrete instance of `WebTestPropertiesResponseInput` via:
//
//          WebTestPropertiesResponseArgs{...}
type WebTestPropertiesResponseInput interface {
	pulumi.Input

	ToWebTestPropertiesResponseOutput() WebTestPropertiesResponseOutput
	ToWebTestPropertiesResponseOutputWithContext(context.Context) WebTestPropertiesResponseOutput
}

// Metadata describing a web test for an Azure resource.
type WebTestPropertiesResponseArgs struct {
	// An XML configuration specification for a WebTest.
	Configuration WebTestPropertiesResponseConfigurationPtrInput `pulumi:"Configuration"`
	// Purpose/user defined descriptive test for this WebTest.
	Description pulumi.StringPtrInput `pulumi:"Description"`
	// Is the test actively being monitored.
	Enabled pulumi.BoolPtrInput `pulumi:"Enabled"`
	// Interval in seconds between test runs for this WebTest. Default value is 300.
	Frequency pulumi.IntPtrInput `pulumi:"Frequency"`
	// The kind of web test this is, valid choices are ping and multistep.
	Kind pulumi.StringInput `pulumi:"Kind"`
	// A list of where to physically run the tests from to give global coverage for accessibility of your application.
	Locations WebTestGeolocationResponseArrayInput `pulumi:"Locations"`
	// User defined name if this WebTest.
	Name pulumi.StringInput `pulumi:"Name"`
	// Allow for retries should this WebTest fail.
	RetryEnabled pulumi.BoolPtrInput `pulumi:"RetryEnabled"`
	// Unique ID of this WebTest. This is typically the same value as the Name field.
	SyntheticMonitorId pulumi.StringInput `pulumi:"SyntheticMonitorId"`
	// Seconds until this WebTest will timeout and fail. Default value is 30.
	Timeout pulumi.IntPtrInput `pulumi:"Timeout"`
	// Current state of this component, whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Succeeded, Deploying, Canceled, and Failed.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
}

func (WebTestPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTestPropertiesResponse)(nil)).Elem()
}

func (i WebTestPropertiesResponseArgs) ToWebTestPropertiesResponseOutput() WebTestPropertiesResponseOutput {
	return i.ToWebTestPropertiesResponseOutputWithContext(context.Background())
}

func (i WebTestPropertiesResponseArgs) ToWebTestPropertiesResponseOutputWithContext(ctx context.Context) WebTestPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTestPropertiesResponseOutput)
}

func (i WebTestPropertiesResponseArgs) ToWebTestPropertiesResponsePtrOutput() WebTestPropertiesResponsePtrOutput {
	return i.ToWebTestPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i WebTestPropertiesResponseArgs) ToWebTestPropertiesResponsePtrOutputWithContext(ctx context.Context) WebTestPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTestPropertiesResponseOutput).ToWebTestPropertiesResponsePtrOutputWithContext(ctx)
}

// WebTestPropertiesResponsePtrInput is an input type that accepts WebTestPropertiesResponseArgs, WebTestPropertiesResponsePtr and WebTestPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `WebTestPropertiesResponsePtrInput` via:
//
//          WebTestPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type WebTestPropertiesResponsePtrInput interface {
	pulumi.Input

	ToWebTestPropertiesResponsePtrOutput() WebTestPropertiesResponsePtrOutput
	ToWebTestPropertiesResponsePtrOutputWithContext(context.Context) WebTestPropertiesResponsePtrOutput
}

type webTestPropertiesResponsePtrType WebTestPropertiesResponseArgs

func WebTestPropertiesResponsePtr(v *WebTestPropertiesResponseArgs) WebTestPropertiesResponsePtrInput {
	return (*webTestPropertiesResponsePtrType)(v)
}

func (*webTestPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebTestPropertiesResponse)(nil)).Elem()
}

func (i *webTestPropertiesResponsePtrType) ToWebTestPropertiesResponsePtrOutput() WebTestPropertiesResponsePtrOutput {
	return i.ToWebTestPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *webTestPropertiesResponsePtrType) ToWebTestPropertiesResponsePtrOutputWithContext(ctx context.Context) WebTestPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTestPropertiesResponsePtrOutput)
}

// Metadata describing a web test for an Azure resource.
type WebTestPropertiesResponseOutput struct{ *pulumi.OutputState }

func (WebTestPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTestPropertiesResponse)(nil)).Elem()
}

func (o WebTestPropertiesResponseOutput) ToWebTestPropertiesResponseOutput() WebTestPropertiesResponseOutput {
	return o
}

func (o WebTestPropertiesResponseOutput) ToWebTestPropertiesResponseOutputWithContext(ctx context.Context) WebTestPropertiesResponseOutput {
	return o
}

func (o WebTestPropertiesResponseOutput) ToWebTestPropertiesResponsePtrOutput() WebTestPropertiesResponsePtrOutput {
	return o.ToWebTestPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o WebTestPropertiesResponseOutput) ToWebTestPropertiesResponsePtrOutputWithContext(ctx context.Context) WebTestPropertiesResponsePtrOutput {
	return o.ApplyT(func(v WebTestPropertiesResponse) *WebTestPropertiesResponse {
		return &v
	}).(WebTestPropertiesResponsePtrOutput)
}

// An XML configuration specification for a WebTest.
func (o WebTestPropertiesResponseOutput) Configuration() WebTestPropertiesResponseConfigurationPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesResponse) *WebTestPropertiesResponseConfiguration { return v.Configuration }).(WebTestPropertiesResponseConfigurationPtrOutput)
}

// Purpose/user defined descriptive test for this WebTest.
func (o WebTestPropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Is the test actively being monitored.
func (o WebTestPropertiesResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Interval in seconds between test runs for this WebTest. Default value is 300.
func (o WebTestPropertiesResponseOutput) Frequency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesResponse) *int { return v.Frequency }).(pulumi.IntPtrOutput)
}

// The kind of web test this is, valid choices are ping and multistep.
func (o WebTestPropertiesResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v WebTestPropertiesResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// A list of where to physically run the tests from to give global coverage for accessibility of your application.
func (o WebTestPropertiesResponseOutput) Locations() WebTestGeolocationResponseArrayOutput {
	return o.ApplyT(func(v WebTestPropertiesResponse) []WebTestGeolocationResponse { return v.Locations }).(WebTestGeolocationResponseArrayOutput)
}

// User defined name if this WebTest.
func (o WebTestPropertiesResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebTestPropertiesResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Allow for retries should this WebTest fail.
func (o WebTestPropertiesResponseOutput) RetryEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesResponse) *bool { return v.RetryEnabled }).(pulumi.BoolPtrOutput)
}

// Unique ID of this WebTest. This is typically the same value as the Name field.
func (o WebTestPropertiesResponseOutput) SyntheticMonitorId() pulumi.StringOutput {
	return o.ApplyT(func(v WebTestPropertiesResponse) string { return v.SyntheticMonitorId }).(pulumi.StringOutput)
}

// Seconds until this WebTest will timeout and fail. Default value is 30.
func (o WebTestPropertiesResponseOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesResponse) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// Current state of this component, whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Succeeded, Deploying, Canceled, and Failed.
func (o WebTestPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v WebTestPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type WebTestPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (WebTestPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebTestPropertiesResponse)(nil)).Elem()
}

func (o WebTestPropertiesResponsePtrOutput) ToWebTestPropertiesResponsePtrOutput() WebTestPropertiesResponsePtrOutput {
	return o
}

func (o WebTestPropertiesResponsePtrOutput) ToWebTestPropertiesResponsePtrOutputWithContext(ctx context.Context) WebTestPropertiesResponsePtrOutput {
	return o
}

func (o WebTestPropertiesResponsePtrOutput) Elem() WebTestPropertiesResponseOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponse) WebTestPropertiesResponse { return *v }).(WebTestPropertiesResponseOutput)
}

// An XML configuration specification for a WebTest.
func (o WebTestPropertiesResponsePtrOutput) Configuration() WebTestPropertiesResponseConfigurationPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponse) *WebTestPropertiesResponseConfiguration {
		if v == nil {
			return nil
		}
		return v.Configuration
	}).(WebTestPropertiesResponseConfigurationPtrOutput)
}

// Purpose/user defined descriptive test for this WebTest.
func (o WebTestPropertiesResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Is the test actively being monitored.
func (o WebTestPropertiesResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Interval in seconds between test runs for this WebTest. Default value is 300.
func (o WebTestPropertiesResponsePtrOutput) Frequency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.Frequency
	}).(pulumi.IntPtrOutput)
}

// The kind of web test this is, valid choices are ping and multistep.
func (o WebTestPropertiesResponsePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// A list of where to physically run the tests from to give global coverage for accessibility of your application.
func (o WebTestPropertiesResponsePtrOutput) Locations() WebTestGeolocationResponseArrayOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponse) []WebTestGeolocationResponse {
		if v == nil {
			return nil
		}
		return v.Locations
	}).(WebTestGeolocationResponseArrayOutput)
}

// User defined name if this WebTest.
func (o WebTestPropertiesResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Allow for retries should this WebTest fail.
func (o WebTestPropertiesResponsePtrOutput) RetryEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.RetryEnabled
	}).(pulumi.BoolPtrOutput)
}

// Unique ID of this WebTest. This is typically the same value as the Name field.
func (o WebTestPropertiesResponsePtrOutput) SyntheticMonitorId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SyntheticMonitorId
	}).(pulumi.StringPtrOutput)
}

// Seconds until this WebTest will timeout and fail. Default value is 30.
func (o WebTestPropertiesResponsePtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

// Current state of this component, whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Succeeded, Deploying, Canceled, and Failed.
func (o WebTestPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// An XML configuration specification for a WebTest.
type WebTestPropertiesResponseConfiguration struct {
	// The XML specification of a WebTest to run against an application.
	WebTest *string `pulumi:"WebTest"`
}

// WebTestPropertiesResponseConfigurationInput is an input type that accepts WebTestPropertiesResponseConfigurationArgs and WebTestPropertiesResponseConfigurationOutput values.
// You can construct a concrete instance of `WebTestPropertiesResponseConfigurationInput` via:
//
//          WebTestPropertiesResponseConfigurationArgs{...}
type WebTestPropertiesResponseConfigurationInput interface {
	pulumi.Input

	ToWebTestPropertiesResponseConfigurationOutput() WebTestPropertiesResponseConfigurationOutput
	ToWebTestPropertiesResponseConfigurationOutputWithContext(context.Context) WebTestPropertiesResponseConfigurationOutput
}

// An XML configuration specification for a WebTest.
type WebTestPropertiesResponseConfigurationArgs struct {
	// The XML specification of a WebTest to run against an application.
	WebTest pulumi.StringPtrInput `pulumi:"WebTest"`
}

func (WebTestPropertiesResponseConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTestPropertiesResponseConfiguration)(nil)).Elem()
}

func (i WebTestPropertiesResponseConfigurationArgs) ToWebTestPropertiesResponseConfigurationOutput() WebTestPropertiesResponseConfigurationOutput {
	return i.ToWebTestPropertiesResponseConfigurationOutputWithContext(context.Background())
}

func (i WebTestPropertiesResponseConfigurationArgs) ToWebTestPropertiesResponseConfigurationOutputWithContext(ctx context.Context) WebTestPropertiesResponseConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTestPropertiesResponseConfigurationOutput)
}

func (i WebTestPropertiesResponseConfigurationArgs) ToWebTestPropertiesResponseConfigurationPtrOutput() WebTestPropertiesResponseConfigurationPtrOutput {
	return i.ToWebTestPropertiesResponseConfigurationPtrOutputWithContext(context.Background())
}

func (i WebTestPropertiesResponseConfigurationArgs) ToWebTestPropertiesResponseConfigurationPtrOutputWithContext(ctx context.Context) WebTestPropertiesResponseConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTestPropertiesResponseConfigurationOutput).ToWebTestPropertiesResponseConfigurationPtrOutputWithContext(ctx)
}

// WebTestPropertiesResponseConfigurationPtrInput is an input type that accepts WebTestPropertiesResponseConfigurationArgs, WebTestPropertiesResponseConfigurationPtr and WebTestPropertiesResponseConfigurationPtrOutput values.
// You can construct a concrete instance of `WebTestPropertiesResponseConfigurationPtrInput` via:
//
//          WebTestPropertiesResponseConfigurationArgs{...}
//
//  or:
//
//          nil
type WebTestPropertiesResponseConfigurationPtrInput interface {
	pulumi.Input

	ToWebTestPropertiesResponseConfigurationPtrOutput() WebTestPropertiesResponseConfigurationPtrOutput
	ToWebTestPropertiesResponseConfigurationPtrOutputWithContext(context.Context) WebTestPropertiesResponseConfigurationPtrOutput
}

type webTestPropertiesResponseConfigurationPtrType WebTestPropertiesResponseConfigurationArgs

func WebTestPropertiesResponseConfigurationPtr(v *WebTestPropertiesResponseConfigurationArgs) WebTestPropertiesResponseConfigurationPtrInput {
	return (*webTestPropertiesResponseConfigurationPtrType)(v)
}

func (*webTestPropertiesResponseConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebTestPropertiesResponseConfiguration)(nil)).Elem()
}

func (i *webTestPropertiesResponseConfigurationPtrType) ToWebTestPropertiesResponseConfigurationPtrOutput() WebTestPropertiesResponseConfigurationPtrOutput {
	return i.ToWebTestPropertiesResponseConfigurationPtrOutputWithContext(context.Background())
}

func (i *webTestPropertiesResponseConfigurationPtrType) ToWebTestPropertiesResponseConfigurationPtrOutputWithContext(ctx context.Context) WebTestPropertiesResponseConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTestPropertiesResponseConfigurationPtrOutput)
}

// An XML configuration specification for a WebTest.
type WebTestPropertiesResponseConfigurationOutput struct{ *pulumi.OutputState }

func (WebTestPropertiesResponseConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTestPropertiesResponseConfiguration)(nil)).Elem()
}

func (o WebTestPropertiesResponseConfigurationOutput) ToWebTestPropertiesResponseConfigurationOutput() WebTestPropertiesResponseConfigurationOutput {
	return o
}

func (o WebTestPropertiesResponseConfigurationOutput) ToWebTestPropertiesResponseConfigurationOutputWithContext(ctx context.Context) WebTestPropertiesResponseConfigurationOutput {
	return o
}

func (o WebTestPropertiesResponseConfigurationOutput) ToWebTestPropertiesResponseConfigurationPtrOutput() WebTestPropertiesResponseConfigurationPtrOutput {
	return o.ToWebTestPropertiesResponseConfigurationPtrOutputWithContext(context.Background())
}

func (o WebTestPropertiesResponseConfigurationOutput) ToWebTestPropertiesResponseConfigurationPtrOutputWithContext(ctx context.Context) WebTestPropertiesResponseConfigurationPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesResponseConfiguration) *WebTestPropertiesResponseConfiguration {
		return &v
	}).(WebTestPropertiesResponseConfigurationPtrOutput)
}

// The XML specification of a WebTest to run against an application.
func (o WebTestPropertiesResponseConfigurationOutput) WebTest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesResponseConfiguration) *string { return v.WebTest }).(pulumi.StringPtrOutput)
}

type WebTestPropertiesResponseConfigurationPtrOutput struct{ *pulumi.OutputState }

func (WebTestPropertiesResponseConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebTestPropertiesResponseConfiguration)(nil)).Elem()
}

func (o WebTestPropertiesResponseConfigurationPtrOutput) ToWebTestPropertiesResponseConfigurationPtrOutput() WebTestPropertiesResponseConfigurationPtrOutput {
	return o
}

func (o WebTestPropertiesResponseConfigurationPtrOutput) ToWebTestPropertiesResponseConfigurationPtrOutputWithContext(ctx context.Context) WebTestPropertiesResponseConfigurationPtrOutput {
	return o
}

func (o WebTestPropertiesResponseConfigurationPtrOutput) Elem() WebTestPropertiesResponseConfigurationOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponseConfiguration) WebTestPropertiesResponseConfiguration { return *v }).(WebTestPropertiesResponseConfigurationOutput)
}

// The XML specification of a WebTest to run against an application.
func (o WebTestPropertiesResponseConfigurationPtrOutput) WebTest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponseConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.WebTest
	}).(pulumi.StringPtrOutput)
}

// Properties that contain a workbook.
type WorkbookPropertiesResponse struct {
	// Workbook category, as defined by the user at creation time.
	Category string `pulumi:"category"`
	// Enum indicating if this workbook definition is owned by a specific user or is shared between all users with access to the Application Insights component.
	Kind string `pulumi:"kind"`
	// The user-defined name of the workbook.
	Name string `pulumi:"name"`
	// Configuration of this particular workbook. Configuration data is a string containing valid JSON
	SerializedData string `pulumi:"serializedData"`
	// Optional resourceId for a source resource.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// A list of 0 or more tags that are associated with this workbook definition
	Tags []string `pulumi:"tags"`
	// Date and time in UTC of the last modification that was made to this workbook definition.
	TimeModified string `pulumi:"timeModified"`
	// Unique user id of the specific user that owns this workbook.
	UserId string `pulumi:"userId"`
	// This instance's version of the data model. This can change as new features are added that can be marked workbook.
	Version *string `pulumi:"version"`
	// Internally assigned unique id of the workbook definition.
	WorkbookId string `pulumi:"workbookId"`
}

// WorkbookPropertiesResponseInput is an input type that accepts WorkbookPropertiesResponseArgs and WorkbookPropertiesResponseOutput values.
// You can construct a concrete instance of `WorkbookPropertiesResponseInput` via:
//
//          WorkbookPropertiesResponseArgs{...}
type WorkbookPropertiesResponseInput interface {
	pulumi.Input

	ToWorkbookPropertiesResponseOutput() WorkbookPropertiesResponseOutput
	ToWorkbookPropertiesResponseOutputWithContext(context.Context) WorkbookPropertiesResponseOutput
}

// Properties that contain a workbook.
type WorkbookPropertiesResponseArgs struct {
	// Workbook category, as defined by the user at creation time.
	Category pulumi.StringInput `pulumi:"category"`
	// Enum indicating if this workbook definition is owned by a specific user or is shared between all users with access to the Application Insights component.
	Kind pulumi.StringInput `pulumi:"kind"`
	// The user-defined name of the workbook.
	Name pulumi.StringInput `pulumi:"name"`
	// Configuration of this particular workbook. Configuration data is a string containing valid JSON
	SerializedData pulumi.StringInput `pulumi:"serializedData"`
	// Optional resourceId for a source resource.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
	// A list of 0 or more tags that are associated with this workbook definition
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// Date and time in UTC of the last modification that was made to this workbook definition.
	TimeModified pulumi.StringInput `pulumi:"timeModified"`
	// Unique user id of the specific user that owns this workbook.
	UserId pulumi.StringInput `pulumi:"userId"`
	// This instance's version of the data model. This can change as new features are added that can be marked workbook.
	Version pulumi.StringPtrInput `pulumi:"version"`
	// Internally assigned unique id of the workbook definition.
	WorkbookId pulumi.StringInput `pulumi:"workbookId"`
}

func (WorkbookPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkbookPropertiesResponse)(nil)).Elem()
}

func (i WorkbookPropertiesResponseArgs) ToWorkbookPropertiesResponseOutput() WorkbookPropertiesResponseOutput {
	return i.ToWorkbookPropertiesResponseOutputWithContext(context.Background())
}

func (i WorkbookPropertiesResponseArgs) ToWorkbookPropertiesResponseOutputWithContext(ctx context.Context) WorkbookPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkbookPropertiesResponseOutput)
}

func (i WorkbookPropertiesResponseArgs) ToWorkbookPropertiesResponsePtrOutput() WorkbookPropertiesResponsePtrOutput {
	return i.ToWorkbookPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i WorkbookPropertiesResponseArgs) ToWorkbookPropertiesResponsePtrOutputWithContext(ctx context.Context) WorkbookPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkbookPropertiesResponseOutput).ToWorkbookPropertiesResponsePtrOutputWithContext(ctx)
}

// WorkbookPropertiesResponsePtrInput is an input type that accepts WorkbookPropertiesResponseArgs, WorkbookPropertiesResponsePtr and WorkbookPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `WorkbookPropertiesResponsePtrInput` via:
//
//          WorkbookPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type WorkbookPropertiesResponsePtrInput interface {
	pulumi.Input

	ToWorkbookPropertiesResponsePtrOutput() WorkbookPropertiesResponsePtrOutput
	ToWorkbookPropertiesResponsePtrOutputWithContext(context.Context) WorkbookPropertiesResponsePtrOutput
}

type workbookPropertiesResponsePtrType WorkbookPropertiesResponseArgs

func WorkbookPropertiesResponsePtr(v *WorkbookPropertiesResponseArgs) WorkbookPropertiesResponsePtrInput {
	return (*workbookPropertiesResponsePtrType)(v)
}

func (*workbookPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkbookPropertiesResponse)(nil)).Elem()
}

func (i *workbookPropertiesResponsePtrType) ToWorkbookPropertiesResponsePtrOutput() WorkbookPropertiesResponsePtrOutput {
	return i.ToWorkbookPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *workbookPropertiesResponsePtrType) ToWorkbookPropertiesResponsePtrOutputWithContext(ctx context.Context) WorkbookPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkbookPropertiesResponsePtrOutput)
}

// Properties that contain a workbook.
type WorkbookPropertiesResponseOutput struct{ *pulumi.OutputState }

func (WorkbookPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkbookPropertiesResponse)(nil)).Elem()
}

func (o WorkbookPropertiesResponseOutput) ToWorkbookPropertiesResponseOutput() WorkbookPropertiesResponseOutput {
	return o
}

func (o WorkbookPropertiesResponseOutput) ToWorkbookPropertiesResponseOutputWithContext(ctx context.Context) WorkbookPropertiesResponseOutput {
	return o
}

func (o WorkbookPropertiesResponseOutput) ToWorkbookPropertiesResponsePtrOutput() WorkbookPropertiesResponsePtrOutput {
	return o.ToWorkbookPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o WorkbookPropertiesResponseOutput) ToWorkbookPropertiesResponsePtrOutputWithContext(ctx context.Context) WorkbookPropertiesResponsePtrOutput {
	return o.ApplyT(func(v WorkbookPropertiesResponse) *WorkbookPropertiesResponse {
		return &v
	}).(WorkbookPropertiesResponsePtrOutput)
}

// Workbook category, as defined by the user at creation time.
func (o WorkbookPropertiesResponseOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v WorkbookPropertiesResponse) string { return v.Category }).(pulumi.StringOutput)
}

// Enum indicating if this workbook definition is owned by a specific user or is shared between all users with access to the Application Insights component.
func (o WorkbookPropertiesResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v WorkbookPropertiesResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// The user-defined name of the workbook.
func (o WorkbookPropertiesResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkbookPropertiesResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Configuration of this particular workbook. Configuration data is a string containing valid JSON
func (o WorkbookPropertiesResponseOutput) SerializedData() pulumi.StringOutput {
	return o.ApplyT(func(v WorkbookPropertiesResponse) string { return v.SerializedData }).(pulumi.StringOutput)
}

// Optional resourceId for a source resource.
func (o WorkbookPropertiesResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkbookPropertiesResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// A list of 0 or more tags that are associated with this workbook definition
func (o WorkbookPropertiesResponseOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkbookPropertiesResponse) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// Date and time in UTC of the last modification that was made to this workbook definition.
func (o WorkbookPropertiesResponseOutput) TimeModified() pulumi.StringOutput {
	return o.ApplyT(func(v WorkbookPropertiesResponse) string { return v.TimeModified }).(pulumi.StringOutput)
}

// Unique user id of the specific user that owns this workbook.
func (o WorkbookPropertiesResponseOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkbookPropertiesResponse) string { return v.UserId }).(pulumi.StringOutput)
}

// This instance's version of the data model. This can change as new features are added that can be marked workbook.
func (o WorkbookPropertiesResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkbookPropertiesResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

// Internally assigned unique id of the workbook definition.
func (o WorkbookPropertiesResponseOutput) WorkbookId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkbookPropertiesResponse) string { return v.WorkbookId }).(pulumi.StringOutput)
}

type WorkbookPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (WorkbookPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkbookPropertiesResponse)(nil)).Elem()
}

func (o WorkbookPropertiesResponsePtrOutput) ToWorkbookPropertiesResponsePtrOutput() WorkbookPropertiesResponsePtrOutput {
	return o
}

func (o WorkbookPropertiesResponsePtrOutput) ToWorkbookPropertiesResponsePtrOutputWithContext(ctx context.Context) WorkbookPropertiesResponsePtrOutput {
	return o
}

func (o WorkbookPropertiesResponsePtrOutput) Elem() WorkbookPropertiesResponseOutput {
	return o.ApplyT(func(v *WorkbookPropertiesResponse) WorkbookPropertiesResponse { return *v }).(WorkbookPropertiesResponseOutput)
}

// Workbook category, as defined by the user at creation time.
func (o WorkbookPropertiesResponsePtrOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkbookPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Category
	}).(pulumi.StringPtrOutput)
}

// Enum indicating if this workbook definition is owned by a specific user or is shared between all users with access to the Application Insights component.
func (o WorkbookPropertiesResponsePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkbookPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// The user-defined name of the workbook.
func (o WorkbookPropertiesResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkbookPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Configuration of this particular workbook. Configuration data is a string containing valid JSON
func (o WorkbookPropertiesResponsePtrOutput) SerializedData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkbookPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SerializedData
	}).(pulumi.StringPtrOutput)
}

// Optional resourceId for a source resource.
func (o WorkbookPropertiesResponsePtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkbookPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// A list of 0 or more tags that are associated with this workbook definition
func (o WorkbookPropertiesResponsePtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkbookPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringArrayOutput)
}

// Date and time in UTC of the last modification that was made to this workbook definition.
func (o WorkbookPropertiesResponsePtrOutput) TimeModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkbookPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TimeModified
	}).(pulumi.StringPtrOutput)
}

// Unique user id of the specific user that owns this workbook.
func (o WorkbookPropertiesResponsePtrOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkbookPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UserId
	}).(pulumi.StringPtrOutput)
}

// This instance's version of the data model. This can change as new features are added that can be marked workbook.
func (o WorkbookPropertiesResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkbookPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Internally assigned unique id of the workbook definition.
func (o WorkbookPropertiesResponsePtrOutput) WorkbookId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkbookPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.WorkbookId
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ApplicationInsightsComponentAnalyticsItemPropertiesOutput{})
	pulumi.RegisterOutputType(ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ApplicationInsightsComponentAnalyticsItemPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationInsightsComponentPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ApplicationInsightsComponentPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkScopedResourceResponseOutput{})
	pulumi.RegisterOutputType(PrivateLinkScopedResourceResponseArrayOutput{})
	pulumi.RegisterOutputType(WebTestGeolocationOutput{})
	pulumi.RegisterOutputType(WebTestGeolocationArrayOutput{})
	pulumi.RegisterOutputType(WebTestGeolocationResponseOutput{})
	pulumi.RegisterOutputType(WebTestGeolocationResponseArrayOutput{})
	pulumi.RegisterOutputType(WebTestPropertiesConfigurationOutput{})
	pulumi.RegisterOutputType(WebTestPropertiesConfigurationPtrOutput{})
	pulumi.RegisterOutputType(WebTestPropertiesResponseOutput{})
	pulumi.RegisterOutputType(WebTestPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(WebTestPropertiesResponseConfigurationOutput{})
	pulumi.RegisterOutputType(WebTestPropertiesResponseConfigurationPtrOutput{})
	pulumi.RegisterOutputType(WorkbookPropertiesResponseOutput{})
	pulumi.RegisterOutputType(WorkbookPropertiesResponsePtrOutput{})
}
