// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20170401

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// An action group resource.
type ActionGroupType struct {
	// Resource location
	Location string `pulumi:"location"`
	// Azure resource name
	Name string `pulumi:"name"`
	// The action groups properties of the resource.
	Properties ActionGroupResponse `pulumi:"properties"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Azure resource type
	Type string `pulumi:"type"`
}

// ActionGroupTypeInput is an input type that accepts ActionGroupTypeArgs and ActionGroupTypeOutput values.
// You can construct a concrete instance of `ActionGroupTypeInput` via:
//
//          ActionGroupTypeArgs{...}
type ActionGroupTypeInput interface {
	pulumi.Input

	ToActionGroupTypeOutput() ActionGroupTypeOutput
	ToActionGroupTypeOutputWithContext(context.Context) ActionGroupTypeOutput
}

// An action group resource.
type ActionGroupTypeArgs struct {
	// Resource location
	Location pulumi.StringInput `pulumi:"location"`
	// Azure resource name
	Name pulumi.StringInput `pulumi:"name"`
	// The action groups properties of the resource.
	Properties ActionGroupResponseInput `pulumi:"properties"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Azure resource type
	Type pulumi.StringInput `pulumi:"type"`
}

func (ActionGroupTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionGroupType)(nil)).Elem()
}

func (i ActionGroupTypeArgs) ToActionGroupTypeOutput() ActionGroupTypeOutput {
	return i.ToActionGroupTypeOutputWithContext(context.Background())
}

func (i ActionGroupTypeArgs) ToActionGroupTypeOutputWithContext(ctx context.Context) ActionGroupTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionGroupTypeOutput)
}

// An action group resource.
type ActionGroupTypeOutput struct{ *pulumi.OutputState }

func (ActionGroupTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionGroupType)(nil)).Elem()
}

func (o ActionGroupTypeOutput) ToActionGroupTypeOutput() ActionGroupTypeOutput {
	return o
}

func (o ActionGroupTypeOutput) ToActionGroupTypeOutputWithContext(ctx context.Context) ActionGroupTypeOutput {
	return o
}

// Resource location
func (o ActionGroupTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v ActionGroupType) string { return v.Location }).(pulumi.StringOutput)
}

// Azure resource name
func (o ActionGroupTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ActionGroupType) string { return v.Name }).(pulumi.StringOutput)
}

// The action groups properties of the resource.
func (o ActionGroupTypeOutput) Properties() ActionGroupResponseOutput {
	return o.ApplyT(func(v ActionGroupType) ActionGroupResponse { return v.Properties }).(ActionGroupResponseOutput)
}

// Resource tags
func (o ActionGroupTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ActionGroupType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Azure resource type
func (o ActionGroupTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ActionGroupType) string { return v.Type }).(pulumi.StringOutput)
}

// An Azure action group.
type ActionGroupResponse struct {
	// The list of AutomationRunbook receivers that are part of this action group.
	AutomationRunbookReceivers []AutomationRunbookReceiverResponse `pulumi:"automationRunbookReceivers"`
	// The list of AzureAppPush receivers that are part of this action group.
	AzureAppPushReceivers []AzureAppPushReceiverResponse `pulumi:"azureAppPushReceivers"`
	// The list of email receivers that are part of this action group.
	EmailReceivers []EmailReceiverResponse `pulumi:"emailReceivers"`
	// Indicates whether this action group is enabled. If an action group is not enabled, then none of its receivers will receive communications.
	Enabled bool `pulumi:"enabled"`
	// The short name of the action group. This will be used in SMS messages.
	GroupShortName string `pulumi:"groupShortName"`
	// The list of ITSM receivers that are part of this action group.
	ItsmReceivers []ItsmReceiverResponse `pulumi:"itsmReceivers"`
	// The list of SMS receivers that are part of this action group.
	SmsReceivers []SmsReceiverResponse `pulumi:"smsReceivers"`
	// The list of webhook receivers that are part of this action group.
	WebhookReceivers []WebhookReceiverResponse `pulumi:"webhookReceivers"`
}

// ActionGroupResponseInput is an input type that accepts ActionGroupResponseArgs and ActionGroupResponseOutput values.
// You can construct a concrete instance of `ActionGroupResponseInput` via:
//
//          ActionGroupResponseArgs{...}
type ActionGroupResponseInput interface {
	pulumi.Input

	ToActionGroupResponseOutput() ActionGroupResponseOutput
	ToActionGroupResponseOutputWithContext(context.Context) ActionGroupResponseOutput
}

// An Azure action group.
type ActionGroupResponseArgs struct {
	// The list of AutomationRunbook receivers that are part of this action group.
	AutomationRunbookReceivers AutomationRunbookReceiverResponseArrayInput `pulumi:"automationRunbookReceivers"`
	// The list of AzureAppPush receivers that are part of this action group.
	AzureAppPushReceivers AzureAppPushReceiverResponseArrayInput `pulumi:"azureAppPushReceivers"`
	// The list of email receivers that are part of this action group.
	EmailReceivers EmailReceiverResponseArrayInput `pulumi:"emailReceivers"`
	// Indicates whether this action group is enabled. If an action group is not enabled, then none of its receivers will receive communications.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The short name of the action group. This will be used in SMS messages.
	GroupShortName pulumi.StringInput `pulumi:"groupShortName"`
	// The list of ITSM receivers that are part of this action group.
	ItsmReceivers ItsmReceiverResponseArrayInput `pulumi:"itsmReceivers"`
	// The list of SMS receivers that are part of this action group.
	SmsReceivers SmsReceiverResponseArrayInput `pulumi:"smsReceivers"`
	// The list of webhook receivers that are part of this action group.
	WebhookReceivers WebhookReceiverResponseArrayInput `pulumi:"webhookReceivers"`
}

func (ActionGroupResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionGroupResponse)(nil)).Elem()
}

func (i ActionGroupResponseArgs) ToActionGroupResponseOutput() ActionGroupResponseOutput {
	return i.ToActionGroupResponseOutputWithContext(context.Background())
}

func (i ActionGroupResponseArgs) ToActionGroupResponseOutputWithContext(ctx context.Context) ActionGroupResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionGroupResponseOutput)
}

func (i ActionGroupResponseArgs) ToActionGroupResponsePtrOutput() ActionGroupResponsePtrOutput {
	return i.ToActionGroupResponsePtrOutputWithContext(context.Background())
}

func (i ActionGroupResponseArgs) ToActionGroupResponsePtrOutputWithContext(ctx context.Context) ActionGroupResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionGroupResponseOutput).ToActionGroupResponsePtrOutputWithContext(ctx)
}

// ActionGroupResponsePtrInput is an input type that accepts ActionGroupResponseArgs, ActionGroupResponsePtr and ActionGroupResponsePtrOutput values.
// You can construct a concrete instance of `ActionGroupResponsePtrInput` via:
//
//          ActionGroupResponseArgs{...}
//
//  or:
//
//          nil
type ActionGroupResponsePtrInput interface {
	pulumi.Input

	ToActionGroupResponsePtrOutput() ActionGroupResponsePtrOutput
	ToActionGroupResponsePtrOutputWithContext(context.Context) ActionGroupResponsePtrOutput
}

type actionGroupResponsePtrType ActionGroupResponseArgs

func ActionGroupResponsePtr(v *ActionGroupResponseArgs) ActionGroupResponsePtrInput {
	return (*actionGroupResponsePtrType)(v)
}

func (*actionGroupResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionGroupResponse)(nil)).Elem()
}

func (i *actionGroupResponsePtrType) ToActionGroupResponsePtrOutput() ActionGroupResponsePtrOutput {
	return i.ToActionGroupResponsePtrOutputWithContext(context.Background())
}

func (i *actionGroupResponsePtrType) ToActionGroupResponsePtrOutputWithContext(ctx context.Context) ActionGroupResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionGroupResponsePtrOutput)
}

// An Azure action group.
type ActionGroupResponseOutput struct{ *pulumi.OutputState }

func (ActionGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionGroupResponse)(nil)).Elem()
}

func (o ActionGroupResponseOutput) ToActionGroupResponseOutput() ActionGroupResponseOutput {
	return o
}

func (o ActionGroupResponseOutput) ToActionGroupResponseOutputWithContext(ctx context.Context) ActionGroupResponseOutput {
	return o
}

func (o ActionGroupResponseOutput) ToActionGroupResponsePtrOutput() ActionGroupResponsePtrOutput {
	return o.ToActionGroupResponsePtrOutputWithContext(context.Background())
}

func (o ActionGroupResponseOutput) ToActionGroupResponsePtrOutputWithContext(ctx context.Context) ActionGroupResponsePtrOutput {
	return o.ApplyT(func(v ActionGroupResponse) *ActionGroupResponse {
		return &v
	}).(ActionGroupResponsePtrOutput)
}

// The list of AutomationRunbook receivers that are part of this action group.
func (o ActionGroupResponseOutput) AutomationRunbookReceivers() AutomationRunbookReceiverResponseArrayOutput {
	return o.ApplyT(func(v ActionGroupResponse) []AutomationRunbookReceiverResponse { return v.AutomationRunbookReceivers }).(AutomationRunbookReceiverResponseArrayOutput)
}

// The list of AzureAppPush receivers that are part of this action group.
func (o ActionGroupResponseOutput) AzureAppPushReceivers() AzureAppPushReceiverResponseArrayOutput {
	return o.ApplyT(func(v ActionGroupResponse) []AzureAppPushReceiverResponse { return v.AzureAppPushReceivers }).(AzureAppPushReceiverResponseArrayOutput)
}

// The list of email receivers that are part of this action group.
func (o ActionGroupResponseOutput) EmailReceivers() EmailReceiverResponseArrayOutput {
	return o.ApplyT(func(v ActionGroupResponse) []EmailReceiverResponse { return v.EmailReceivers }).(EmailReceiverResponseArrayOutput)
}

// Indicates whether this action group is enabled. If an action group is not enabled, then none of its receivers will receive communications.
func (o ActionGroupResponseOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ActionGroupResponse) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The short name of the action group. This will be used in SMS messages.
func (o ActionGroupResponseOutput) GroupShortName() pulumi.StringOutput {
	return o.ApplyT(func(v ActionGroupResponse) string { return v.GroupShortName }).(pulumi.StringOutput)
}

// The list of ITSM receivers that are part of this action group.
func (o ActionGroupResponseOutput) ItsmReceivers() ItsmReceiverResponseArrayOutput {
	return o.ApplyT(func(v ActionGroupResponse) []ItsmReceiverResponse { return v.ItsmReceivers }).(ItsmReceiverResponseArrayOutput)
}

// The list of SMS receivers that are part of this action group.
func (o ActionGroupResponseOutput) SmsReceivers() SmsReceiverResponseArrayOutput {
	return o.ApplyT(func(v ActionGroupResponse) []SmsReceiverResponse { return v.SmsReceivers }).(SmsReceiverResponseArrayOutput)
}

// The list of webhook receivers that are part of this action group.
func (o ActionGroupResponseOutput) WebhookReceivers() WebhookReceiverResponseArrayOutput {
	return o.ApplyT(func(v ActionGroupResponse) []WebhookReceiverResponse { return v.WebhookReceivers }).(WebhookReceiverResponseArrayOutput)
}

type ActionGroupResponsePtrOutput struct{ *pulumi.OutputState }

func (ActionGroupResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionGroupResponse)(nil)).Elem()
}

func (o ActionGroupResponsePtrOutput) ToActionGroupResponsePtrOutput() ActionGroupResponsePtrOutput {
	return o
}

func (o ActionGroupResponsePtrOutput) ToActionGroupResponsePtrOutputWithContext(ctx context.Context) ActionGroupResponsePtrOutput {
	return o
}

func (o ActionGroupResponsePtrOutput) Elem() ActionGroupResponseOutput {
	return o.ApplyT(func(v *ActionGroupResponse) ActionGroupResponse { return *v }).(ActionGroupResponseOutput)
}

// The list of AutomationRunbook receivers that are part of this action group.
func (o ActionGroupResponsePtrOutput) AutomationRunbookReceivers() AutomationRunbookReceiverResponseArrayOutput {
	return o.ApplyT(func(v *ActionGroupResponse) []AutomationRunbookReceiverResponse {
		if v == nil {
			return nil
		}
		return v.AutomationRunbookReceivers
	}).(AutomationRunbookReceiverResponseArrayOutput)
}

// The list of AzureAppPush receivers that are part of this action group.
func (o ActionGroupResponsePtrOutput) AzureAppPushReceivers() AzureAppPushReceiverResponseArrayOutput {
	return o.ApplyT(func(v *ActionGroupResponse) []AzureAppPushReceiverResponse {
		if v == nil {
			return nil
		}
		return v.AzureAppPushReceivers
	}).(AzureAppPushReceiverResponseArrayOutput)
}

// The list of email receivers that are part of this action group.
func (o ActionGroupResponsePtrOutput) EmailReceivers() EmailReceiverResponseArrayOutput {
	return o.ApplyT(func(v *ActionGroupResponse) []EmailReceiverResponse {
		if v == nil {
			return nil
		}
		return v.EmailReceivers
	}).(EmailReceiverResponseArrayOutput)
}

// Indicates whether this action group is enabled. If an action group is not enabled, then none of its receivers will receive communications.
func (o ActionGroupResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ActionGroupResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The short name of the action group. This will be used in SMS messages.
func (o ActionGroupResponsePtrOutput) GroupShortName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActionGroupResponse) *string {
		if v == nil {
			return nil
		}
		return &v.GroupShortName
	}).(pulumi.StringPtrOutput)
}

// The list of ITSM receivers that are part of this action group.
func (o ActionGroupResponsePtrOutput) ItsmReceivers() ItsmReceiverResponseArrayOutput {
	return o.ApplyT(func(v *ActionGroupResponse) []ItsmReceiverResponse {
		if v == nil {
			return nil
		}
		return v.ItsmReceivers
	}).(ItsmReceiverResponseArrayOutput)
}

// The list of SMS receivers that are part of this action group.
func (o ActionGroupResponsePtrOutput) SmsReceivers() SmsReceiverResponseArrayOutput {
	return o.ApplyT(func(v *ActionGroupResponse) []SmsReceiverResponse {
		if v == nil {
			return nil
		}
		return v.SmsReceivers
	}).(SmsReceiverResponseArrayOutput)
}

// The list of webhook receivers that are part of this action group.
func (o ActionGroupResponsePtrOutput) WebhookReceivers() WebhookReceiverResponseArrayOutput {
	return o.ApplyT(func(v *ActionGroupResponse) []WebhookReceiverResponse {
		if v == nil {
			return nil
		}
		return v.WebhookReceivers
	}).(WebhookReceiverResponseArrayOutput)
}

// An activity log alert resource.
type ActivityLogAlertType struct {
	// Resource location
	Location string `pulumi:"location"`
	// Azure resource name
	Name string `pulumi:"name"`
	// The activity log alert properties of the resource.
	Properties ActivityLogAlertResponse `pulumi:"properties"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Azure resource type
	Type string `pulumi:"type"`
}

// ActivityLogAlertTypeInput is an input type that accepts ActivityLogAlertTypeArgs and ActivityLogAlertTypeOutput values.
// You can construct a concrete instance of `ActivityLogAlertTypeInput` via:
//
//          ActivityLogAlertTypeArgs{...}
type ActivityLogAlertTypeInput interface {
	pulumi.Input

	ToActivityLogAlertTypeOutput() ActivityLogAlertTypeOutput
	ToActivityLogAlertTypeOutputWithContext(context.Context) ActivityLogAlertTypeOutput
}

// An activity log alert resource.
type ActivityLogAlertTypeArgs struct {
	// Resource location
	Location pulumi.StringInput `pulumi:"location"`
	// Azure resource name
	Name pulumi.StringInput `pulumi:"name"`
	// The activity log alert properties of the resource.
	Properties ActivityLogAlertResponseInput `pulumi:"properties"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Azure resource type
	Type pulumi.StringInput `pulumi:"type"`
}

func (ActivityLogAlertTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActivityLogAlertType)(nil)).Elem()
}

func (i ActivityLogAlertTypeArgs) ToActivityLogAlertTypeOutput() ActivityLogAlertTypeOutput {
	return i.ToActivityLogAlertTypeOutputWithContext(context.Background())
}

func (i ActivityLogAlertTypeArgs) ToActivityLogAlertTypeOutputWithContext(ctx context.Context) ActivityLogAlertTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActivityLogAlertTypeOutput)
}

// An activity log alert resource.
type ActivityLogAlertTypeOutput struct{ *pulumi.OutputState }

func (ActivityLogAlertTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActivityLogAlertType)(nil)).Elem()
}

func (o ActivityLogAlertTypeOutput) ToActivityLogAlertTypeOutput() ActivityLogAlertTypeOutput {
	return o
}

func (o ActivityLogAlertTypeOutput) ToActivityLogAlertTypeOutputWithContext(ctx context.Context) ActivityLogAlertTypeOutput {
	return o
}

// Resource location
func (o ActivityLogAlertTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v ActivityLogAlertType) string { return v.Location }).(pulumi.StringOutput)
}

// Azure resource name
func (o ActivityLogAlertTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ActivityLogAlertType) string { return v.Name }).(pulumi.StringOutput)
}

// The activity log alert properties of the resource.
func (o ActivityLogAlertTypeOutput) Properties() ActivityLogAlertResponseOutput {
	return o.ApplyT(func(v ActivityLogAlertType) ActivityLogAlertResponse { return v.Properties }).(ActivityLogAlertResponseOutput)
}

// Resource tags
func (o ActivityLogAlertTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ActivityLogAlertType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Azure resource type
func (o ActivityLogAlertTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ActivityLogAlertType) string { return v.Type }).(pulumi.StringOutput)
}

// A pointer to an Azure Action Group.
type ActivityLogAlertActionGroup struct {
	// The resourceId of the action group. This cannot be null or empty.
	ActionGroupId string `pulumi:"actionGroupId"`
	// the dictionary of custom properties to include with the post operation. These data are appended to the webhook payload.
	WebhookProperties map[string]string `pulumi:"webhookProperties"`
}

// ActivityLogAlertActionGroupInput is an input type that accepts ActivityLogAlertActionGroupArgs and ActivityLogAlertActionGroupOutput values.
// You can construct a concrete instance of `ActivityLogAlertActionGroupInput` via:
//
//          ActivityLogAlertActionGroupArgs{...}
type ActivityLogAlertActionGroupInput interface {
	pulumi.Input

	ToActivityLogAlertActionGroupOutput() ActivityLogAlertActionGroupOutput
	ToActivityLogAlertActionGroupOutputWithContext(context.Context) ActivityLogAlertActionGroupOutput
}

// A pointer to an Azure Action Group.
type ActivityLogAlertActionGroupArgs struct {
	// The resourceId of the action group. This cannot be null or empty.
	ActionGroupId pulumi.StringInput `pulumi:"actionGroupId"`
	// the dictionary of custom properties to include with the post operation. These data are appended to the webhook payload.
	WebhookProperties pulumi.StringMapInput `pulumi:"webhookProperties"`
}

func (ActivityLogAlertActionGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActivityLogAlertActionGroup)(nil)).Elem()
}

func (i ActivityLogAlertActionGroupArgs) ToActivityLogAlertActionGroupOutput() ActivityLogAlertActionGroupOutput {
	return i.ToActivityLogAlertActionGroupOutputWithContext(context.Background())
}

func (i ActivityLogAlertActionGroupArgs) ToActivityLogAlertActionGroupOutputWithContext(ctx context.Context) ActivityLogAlertActionGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActivityLogAlertActionGroupOutput)
}

// ActivityLogAlertActionGroupArrayInput is an input type that accepts ActivityLogAlertActionGroupArray and ActivityLogAlertActionGroupArrayOutput values.
// You can construct a concrete instance of `ActivityLogAlertActionGroupArrayInput` via:
//
//          ActivityLogAlertActionGroupArray{ ActivityLogAlertActionGroupArgs{...} }
type ActivityLogAlertActionGroupArrayInput interface {
	pulumi.Input

	ToActivityLogAlertActionGroupArrayOutput() ActivityLogAlertActionGroupArrayOutput
	ToActivityLogAlertActionGroupArrayOutputWithContext(context.Context) ActivityLogAlertActionGroupArrayOutput
}

type ActivityLogAlertActionGroupArray []ActivityLogAlertActionGroupInput

func (ActivityLogAlertActionGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActivityLogAlertActionGroup)(nil)).Elem()
}

func (i ActivityLogAlertActionGroupArray) ToActivityLogAlertActionGroupArrayOutput() ActivityLogAlertActionGroupArrayOutput {
	return i.ToActivityLogAlertActionGroupArrayOutputWithContext(context.Background())
}

func (i ActivityLogAlertActionGroupArray) ToActivityLogAlertActionGroupArrayOutputWithContext(ctx context.Context) ActivityLogAlertActionGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActivityLogAlertActionGroupArrayOutput)
}

// A pointer to an Azure Action Group.
type ActivityLogAlertActionGroupOutput struct{ *pulumi.OutputState }

func (ActivityLogAlertActionGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActivityLogAlertActionGroup)(nil)).Elem()
}

func (o ActivityLogAlertActionGroupOutput) ToActivityLogAlertActionGroupOutput() ActivityLogAlertActionGroupOutput {
	return o
}

func (o ActivityLogAlertActionGroupOutput) ToActivityLogAlertActionGroupOutputWithContext(ctx context.Context) ActivityLogAlertActionGroupOutput {
	return o
}

// The resourceId of the action group. This cannot be null or empty.
func (o ActivityLogAlertActionGroupOutput) ActionGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v ActivityLogAlertActionGroup) string { return v.ActionGroupId }).(pulumi.StringOutput)
}

// the dictionary of custom properties to include with the post operation. These data are appended to the webhook payload.
func (o ActivityLogAlertActionGroupOutput) WebhookProperties() pulumi.StringMapOutput {
	return o.ApplyT(func(v ActivityLogAlertActionGroup) map[string]string { return v.WebhookProperties }).(pulumi.StringMapOutput)
}

type ActivityLogAlertActionGroupArrayOutput struct{ *pulumi.OutputState }

func (ActivityLogAlertActionGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActivityLogAlertActionGroup)(nil)).Elem()
}

func (o ActivityLogAlertActionGroupArrayOutput) ToActivityLogAlertActionGroupArrayOutput() ActivityLogAlertActionGroupArrayOutput {
	return o
}

func (o ActivityLogAlertActionGroupArrayOutput) ToActivityLogAlertActionGroupArrayOutputWithContext(ctx context.Context) ActivityLogAlertActionGroupArrayOutput {
	return o
}

func (o ActivityLogAlertActionGroupArrayOutput) Index(i pulumi.IntInput) ActivityLogAlertActionGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ActivityLogAlertActionGroup {
		return vs[0].([]ActivityLogAlertActionGroup)[vs[1].(int)]
	}).(ActivityLogAlertActionGroupOutput)
}

// A pointer to an Azure Action Group.
type ActivityLogAlertActionGroupResponse struct {
	// The resourceId of the action group. This cannot be null or empty.
	ActionGroupId string `pulumi:"actionGroupId"`
	// the dictionary of custom properties to include with the post operation. These data are appended to the webhook payload.
	WebhookProperties map[string]string `pulumi:"webhookProperties"`
}

// ActivityLogAlertActionGroupResponseInput is an input type that accepts ActivityLogAlertActionGroupResponseArgs and ActivityLogAlertActionGroupResponseOutput values.
// You can construct a concrete instance of `ActivityLogAlertActionGroupResponseInput` via:
//
//          ActivityLogAlertActionGroupResponseArgs{...}
type ActivityLogAlertActionGroupResponseInput interface {
	pulumi.Input

	ToActivityLogAlertActionGroupResponseOutput() ActivityLogAlertActionGroupResponseOutput
	ToActivityLogAlertActionGroupResponseOutputWithContext(context.Context) ActivityLogAlertActionGroupResponseOutput
}

// A pointer to an Azure Action Group.
type ActivityLogAlertActionGroupResponseArgs struct {
	// The resourceId of the action group. This cannot be null or empty.
	ActionGroupId pulumi.StringInput `pulumi:"actionGroupId"`
	// the dictionary of custom properties to include with the post operation. These data are appended to the webhook payload.
	WebhookProperties pulumi.StringMapInput `pulumi:"webhookProperties"`
}

func (ActivityLogAlertActionGroupResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActivityLogAlertActionGroupResponse)(nil)).Elem()
}

func (i ActivityLogAlertActionGroupResponseArgs) ToActivityLogAlertActionGroupResponseOutput() ActivityLogAlertActionGroupResponseOutput {
	return i.ToActivityLogAlertActionGroupResponseOutputWithContext(context.Background())
}

func (i ActivityLogAlertActionGroupResponseArgs) ToActivityLogAlertActionGroupResponseOutputWithContext(ctx context.Context) ActivityLogAlertActionGroupResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActivityLogAlertActionGroupResponseOutput)
}

// ActivityLogAlertActionGroupResponseArrayInput is an input type that accepts ActivityLogAlertActionGroupResponseArray and ActivityLogAlertActionGroupResponseArrayOutput values.
// You can construct a concrete instance of `ActivityLogAlertActionGroupResponseArrayInput` via:
//
//          ActivityLogAlertActionGroupResponseArray{ ActivityLogAlertActionGroupResponseArgs{...} }
type ActivityLogAlertActionGroupResponseArrayInput interface {
	pulumi.Input

	ToActivityLogAlertActionGroupResponseArrayOutput() ActivityLogAlertActionGroupResponseArrayOutput
	ToActivityLogAlertActionGroupResponseArrayOutputWithContext(context.Context) ActivityLogAlertActionGroupResponseArrayOutput
}

type ActivityLogAlertActionGroupResponseArray []ActivityLogAlertActionGroupResponseInput

func (ActivityLogAlertActionGroupResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActivityLogAlertActionGroupResponse)(nil)).Elem()
}

func (i ActivityLogAlertActionGroupResponseArray) ToActivityLogAlertActionGroupResponseArrayOutput() ActivityLogAlertActionGroupResponseArrayOutput {
	return i.ToActivityLogAlertActionGroupResponseArrayOutputWithContext(context.Background())
}

func (i ActivityLogAlertActionGroupResponseArray) ToActivityLogAlertActionGroupResponseArrayOutputWithContext(ctx context.Context) ActivityLogAlertActionGroupResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActivityLogAlertActionGroupResponseArrayOutput)
}

// A pointer to an Azure Action Group.
type ActivityLogAlertActionGroupResponseOutput struct{ *pulumi.OutputState }

func (ActivityLogAlertActionGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActivityLogAlertActionGroupResponse)(nil)).Elem()
}

func (o ActivityLogAlertActionGroupResponseOutput) ToActivityLogAlertActionGroupResponseOutput() ActivityLogAlertActionGroupResponseOutput {
	return o
}

func (o ActivityLogAlertActionGroupResponseOutput) ToActivityLogAlertActionGroupResponseOutputWithContext(ctx context.Context) ActivityLogAlertActionGroupResponseOutput {
	return o
}

// The resourceId of the action group. This cannot be null or empty.
func (o ActivityLogAlertActionGroupResponseOutput) ActionGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v ActivityLogAlertActionGroupResponse) string { return v.ActionGroupId }).(pulumi.StringOutput)
}

// the dictionary of custom properties to include with the post operation. These data are appended to the webhook payload.
func (o ActivityLogAlertActionGroupResponseOutput) WebhookProperties() pulumi.StringMapOutput {
	return o.ApplyT(func(v ActivityLogAlertActionGroupResponse) map[string]string { return v.WebhookProperties }).(pulumi.StringMapOutput)
}

type ActivityLogAlertActionGroupResponseArrayOutput struct{ *pulumi.OutputState }

func (ActivityLogAlertActionGroupResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActivityLogAlertActionGroupResponse)(nil)).Elem()
}

func (o ActivityLogAlertActionGroupResponseArrayOutput) ToActivityLogAlertActionGroupResponseArrayOutput() ActivityLogAlertActionGroupResponseArrayOutput {
	return o
}

func (o ActivityLogAlertActionGroupResponseArrayOutput) ToActivityLogAlertActionGroupResponseArrayOutputWithContext(ctx context.Context) ActivityLogAlertActionGroupResponseArrayOutput {
	return o
}

func (o ActivityLogAlertActionGroupResponseArrayOutput) Index(i pulumi.IntInput) ActivityLogAlertActionGroupResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ActivityLogAlertActionGroupResponse {
		return vs[0].([]ActivityLogAlertActionGroupResponse)[vs[1].(int)]
	}).(ActivityLogAlertActionGroupResponseOutput)
}

// A list of activity log alert actions.
type ActivityLogAlertActionList struct {
	// The list of activity log alerts.
	ActionGroups []ActivityLogAlertActionGroup `pulumi:"actionGroups"`
}

// ActivityLogAlertActionListInput is an input type that accepts ActivityLogAlertActionListArgs and ActivityLogAlertActionListOutput values.
// You can construct a concrete instance of `ActivityLogAlertActionListInput` via:
//
//          ActivityLogAlertActionListArgs{...}
type ActivityLogAlertActionListInput interface {
	pulumi.Input

	ToActivityLogAlertActionListOutput() ActivityLogAlertActionListOutput
	ToActivityLogAlertActionListOutputWithContext(context.Context) ActivityLogAlertActionListOutput
}

// A list of activity log alert actions.
type ActivityLogAlertActionListArgs struct {
	// The list of activity log alerts.
	ActionGroups ActivityLogAlertActionGroupArrayInput `pulumi:"actionGroups"`
}

func (ActivityLogAlertActionListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActivityLogAlertActionList)(nil)).Elem()
}

func (i ActivityLogAlertActionListArgs) ToActivityLogAlertActionListOutput() ActivityLogAlertActionListOutput {
	return i.ToActivityLogAlertActionListOutputWithContext(context.Background())
}

func (i ActivityLogAlertActionListArgs) ToActivityLogAlertActionListOutputWithContext(ctx context.Context) ActivityLogAlertActionListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActivityLogAlertActionListOutput)
}

func (i ActivityLogAlertActionListArgs) ToActivityLogAlertActionListPtrOutput() ActivityLogAlertActionListPtrOutput {
	return i.ToActivityLogAlertActionListPtrOutputWithContext(context.Background())
}

func (i ActivityLogAlertActionListArgs) ToActivityLogAlertActionListPtrOutputWithContext(ctx context.Context) ActivityLogAlertActionListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActivityLogAlertActionListOutput).ToActivityLogAlertActionListPtrOutputWithContext(ctx)
}

// ActivityLogAlertActionListPtrInput is an input type that accepts ActivityLogAlertActionListArgs, ActivityLogAlertActionListPtr and ActivityLogAlertActionListPtrOutput values.
// You can construct a concrete instance of `ActivityLogAlertActionListPtrInput` via:
//
//          ActivityLogAlertActionListArgs{...}
//
//  or:
//
//          nil
type ActivityLogAlertActionListPtrInput interface {
	pulumi.Input

	ToActivityLogAlertActionListPtrOutput() ActivityLogAlertActionListPtrOutput
	ToActivityLogAlertActionListPtrOutputWithContext(context.Context) ActivityLogAlertActionListPtrOutput
}

type activityLogAlertActionListPtrType ActivityLogAlertActionListArgs

func ActivityLogAlertActionListPtr(v *ActivityLogAlertActionListArgs) ActivityLogAlertActionListPtrInput {
	return (*activityLogAlertActionListPtrType)(v)
}

func (*activityLogAlertActionListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActivityLogAlertActionList)(nil)).Elem()
}

func (i *activityLogAlertActionListPtrType) ToActivityLogAlertActionListPtrOutput() ActivityLogAlertActionListPtrOutput {
	return i.ToActivityLogAlertActionListPtrOutputWithContext(context.Background())
}

func (i *activityLogAlertActionListPtrType) ToActivityLogAlertActionListPtrOutputWithContext(ctx context.Context) ActivityLogAlertActionListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActivityLogAlertActionListPtrOutput)
}

// A list of activity log alert actions.
type ActivityLogAlertActionListOutput struct{ *pulumi.OutputState }

func (ActivityLogAlertActionListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActivityLogAlertActionList)(nil)).Elem()
}

func (o ActivityLogAlertActionListOutput) ToActivityLogAlertActionListOutput() ActivityLogAlertActionListOutput {
	return o
}

func (o ActivityLogAlertActionListOutput) ToActivityLogAlertActionListOutputWithContext(ctx context.Context) ActivityLogAlertActionListOutput {
	return o
}

func (o ActivityLogAlertActionListOutput) ToActivityLogAlertActionListPtrOutput() ActivityLogAlertActionListPtrOutput {
	return o.ToActivityLogAlertActionListPtrOutputWithContext(context.Background())
}

func (o ActivityLogAlertActionListOutput) ToActivityLogAlertActionListPtrOutputWithContext(ctx context.Context) ActivityLogAlertActionListPtrOutput {
	return o.ApplyT(func(v ActivityLogAlertActionList) *ActivityLogAlertActionList {
		return &v
	}).(ActivityLogAlertActionListPtrOutput)
}

// The list of activity log alerts.
func (o ActivityLogAlertActionListOutput) ActionGroups() ActivityLogAlertActionGroupArrayOutput {
	return o.ApplyT(func(v ActivityLogAlertActionList) []ActivityLogAlertActionGroup { return v.ActionGroups }).(ActivityLogAlertActionGroupArrayOutput)
}

type ActivityLogAlertActionListPtrOutput struct{ *pulumi.OutputState }

func (ActivityLogAlertActionListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActivityLogAlertActionList)(nil)).Elem()
}

func (o ActivityLogAlertActionListPtrOutput) ToActivityLogAlertActionListPtrOutput() ActivityLogAlertActionListPtrOutput {
	return o
}

func (o ActivityLogAlertActionListPtrOutput) ToActivityLogAlertActionListPtrOutputWithContext(ctx context.Context) ActivityLogAlertActionListPtrOutput {
	return o
}

func (o ActivityLogAlertActionListPtrOutput) Elem() ActivityLogAlertActionListOutput {
	return o.ApplyT(func(v *ActivityLogAlertActionList) ActivityLogAlertActionList { return *v }).(ActivityLogAlertActionListOutput)
}

// The list of activity log alerts.
func (o ActivityLogAlertActionListPtrOutput) ActionGroups() ActivityLogAlertActionGroupArrayOutput {
	return o.ApplyT(func(v *ActivityLogAlertActionList) []ActivityLogAlertActionGroup {
		if v == nil {
			return nil
		}
		return v.ActionGroups
	}).(ActivityLogAlertActionGroupArrayOutput)
}

// A list of activity log alert actions.
type ActivityLogAlertActionListResponse struct {
	// The list of activity log alerts.
	ActionGroups []ActivityLogAlertActionGroupResponse `pulumi:"actionGroups"`
}

// ActivityLogAlertActionListResponseInput is an input type that accepts ActivityLogAlertActionListResponseArgs and ActivityLogAlertActionListResponseOutput values.
// You can construct a concrete instance of `ActivityLogAlertActionListResponseInput` via:
//
//          ActivityLogAlertActionListResponseArgs{...}
type ActivityLogAlertActionListResponseInput interface {
	pulumi.Input

	ToActivityLogAlertActionListResponseOutput() ActivityLogAlertActionListResponseOutput
	ToActivityLogAlertActionListResponseOutputWithContext(context.Context) ActivityLogAlertActionListResponseOutput
}

// A list of activity log alert actions.
type ActivityLogAlertActionListResponseArgs struct {
	// The list of activity log alerts.
	ActionGroups ActivityLogAlertActionGroupResponseArrayInput `pulumi:"actionGroups"`
}

func (ActivityLogAlertActionListResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActivityLogAlertActionListResponse)(nil)).Elem()
}

func (i ActivityLogAlertActionListResponseArgs) ToActivityLogAlertActionListResponseOutput() ActivityLogAlertActionListResponseOutput {
	return i.ToActivityLogAlertActionListResponseOutputWithContext(context.Background())
}

func (i ActivityLogAlertActionListResponseArgs) ToActivityLogAlertActionListResponseOutputWithContext(ctx context.Context) ActivityLogAlertActionListResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActivityLogAlertActionListResponseOutput)
}

func (i ActivityLogAlertActionListResponseArgs) ToActivityLogAlertActionListResponsePtrOutput() ActivityLogAlertActionListResponsePtrOutput {
	return i.ToActivityLogAlertActionListResponsePtrOutputWithContext(context.Background())
}

func (i ActivityLogAlertActionListResponseArgs) ToActivityLogAlertActionListResponsePtrOutputWithContext(ctx context.Context) ActivityLogAlertActionListResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActivityLogAlertActionListResponseOutput).ToActivityLogAlertActionListResponsePtrOutputWithContext(ctx)
}

// ActivityLogAlertActionListResponsePtrInput is an input type that accepts ActivityLogAlertActionListResponseArgs, ActivityLogAlertActionListResponsePtr and ActivityLogAlertActionListResponsePtrOutput values.
// You can construct a concrete instance of `ActivityLogAlertActionListResponsePtrInput` via:
//
//          ActivityLogAlertActionListResponseArgs{...}
//
//  or:
//
//          nil
type ActivityLogAlertActionListResponsePtrInput interface {
	pulumi.Input

	ToActivityLogAlertActionListResponsePtrOutput() ActivityLogAlertActionListResponsePtrOutput
	ToActivityLogAlertActionListResponsePtrOutputWithContext(context.Context) ActivityLogAlertActionListResponsePtrOutput
}

type activityLogAlertActionListResponsePtrType ActivityLogAlertActionListResponseArgs

func ActivityLogAlertActionListResponsePtr(v *ActivityLogAlertActionListResponseArgs) ActivityLogAlertActionListResponsePtrInput {
	return (*activityLogAlertActionListResponsePtrType)(v)
}

func (*activityLogAlertActionListResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActivityLogAlertActionListResponse)(nil)).Elem()
}

func (i *activityLogAlertActionListResponsePtrType) ToActivityLogAlertActionListResponsePtrOutput() ActivityLogAlertActionListResponsePtrOutput {
	return i.ToActivityLogAlertActionListResponsePtrOutputWithContext(context.Background())
}

func (i *activityLogAlertActionListResponsePtrType) ToActivityLogAlertActionListResponsePtrOutputWithContext(ctx context.Context) ActivityLogAlertActionListResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActivityLogAlertActionListResponsePtrOutput)
}

// A list of activity log alert actions.
type ActivityLogAlertActionListResponseOutput struct{ *pulumi.OutputState }

func (ActivityLogAlertActionListResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActivityLogAlertActionListResponse)(nil)).Elem()
}

func (o ActivityLogAlertActionListResponseOutput) ToActivityLogAlertActionListResponseOutput() ActivityLogAlertActionListResponseOutput {
	return o
}

func (o ActivityLogAlertActionListResponseOutput) ToActivityLogAlertActionListResponseOutputWithContext(ctx context.Context) ActivityLogAlertActionListResponseOutput {
	return o
}

func (o ActivityLogAlertActionListResponseOutput) ToActivityLogAlertActionListResponsePtrOutput() ActivityLogAlertActionListResponsePtrOutput {
	return o.ToActivityLogAlertActionListResponsePtrOutputWithContext(context.Background())
}

func (o ActivityLogAlertActionListResponseOutput) ToActivityLogAlertActionListResponsePtrOutputWithContext(ctx context.Context) ActivityLogAlertActionListResponsePtrOutput {
	return o.ApplyT(func(v ActivityLogAlertActionListResponse) *ActivityLogAlertActionListResponse {
		return &v
	}).(ActivityLogAlertActionListResponsePtrOutput)
}

// The list of activity log alerts.
func (o ActivityLogAlertActionListResponseOutput) ActionGroups() ActivityLogAlertActionGroupResponseArrayOutput {
	return o.ApplyT(func(v ActivityLogAlertActionListResponse) []ActivityLogAlertActionGroupResponse {
		return v.ActionGroups
	}).(ActivityLogAlertActionGroupResponseArrayOutput)
}

type ActivityLogAlertActionListResponsePtrOutput struct{ *pulumi.OutputState }

func (ActivityLogAlertActionListResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActivityLogAlertActionListResponse)(nil)).Elem()
}

func (o ActivityLogAlertActionListResponsePtrOutput) ToActivityLogAlertActionListResponsePtrOutput() ActivityLogAlertActionListResponsePtrOutput {
	return o
}

func (o ActivityLogAlertActionListResponsePtrOutput) ToActivityLogAlertActionListResponsePtrOutputWithContext(ctx context.Context) ActivityLogAlertActionListResponsePtrOutput {
	return o
}

func (o ActivityLogAlertActionListResponsePtrOutput) Elem() ActivityLogAlertActionListResponseOutput {
	return o.ApplyT(func(v *ActivityLogAlertActionListResponse) ActivityLogAlertActionListResponse { return *v }).(ActivityLogAlertActionListResponseOutput)
}

// The list of activity log alerts.
func (o ActivityLogAlertActionListResponsePtrOutput) ActionGroups() ActivityLogAlertActionGroupResponseArrayOutput {
	return o.ApplyT(func(v *ActivityLogAlertActionListResponse) []ActivityLogAlertActionGroupResponse {
		if v == nil {
			return nil
		}
		return v.ActionGroups
	}).(ActivityLogAlertActionGroupResponseArrayOutput)
}

// An Activity Log alert condition that is met when all its member conditions are met.
type ActivityLogAlertAllOfCondition struct {
	// The list of activity log alert conditions.
	AllOf []ActivityLogAlertLeafCondition `pulumi:"allOf"`
}

// ActivityLogAlertAllOfConditionInput is an input type that accepts ActivityLogAlertAllOfConditionArgs and ActivityLogAlertAllOfConditionOutput values.
// You can construct a concrete instance of `ActivityLogAlertAllOfConditionInput` via:
//
//          ActivityLogAlertAllOfConditionArgs{...}
type ActivityLogAlertAllOfConditionInput interface {
	pulumi.Input

	ToActivityLogAlertAllOfConditionOutput() ActivityLogAlertAllOfConditionOutput
	ToActivityLogAlertAllOfConditionOutputWithContext(context.Context) ActivityLogAlertAllOfConditionOutput
}

// An Activity Log alert condition that is met when all its member conditions are met.
type ActivityLogAlertAllOfConditionArgs struct {
	// The list of activity log alert conditions.
	AllOf ActivityLogAlertLeafConditionArrayInput `pulumi:"allOf"`
}

func (ActivityLogAlertAllOfConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActivityLogAlertAllOfCondition)(nil)).Elem()
}

func (i ActivityLogAlertAllOfConditionArgs) ToActivityLogAlertAllOfConditionOutput() ActivityLogAlertAllOfConditionOutput {
	return i.ToActivityLogAlertAllOfConditionOutputWithContext(context.Background())
}

func (i ActivityLogAlertAllOfConditionArgs) ToActivityLogAlertAllOfConditionOutputWithContext(ctx context.Context) ActivityLogAlertAllOfConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActivityLogAlertAllOfConditionOutput)
}

func (i ActivityLogAlertAllOfConditionArgs) ToActivityLogAlertAllOfConditionPtrOutput() ActivityLogAlertAllOfConditionPtrOutput {
	return i.ToActivityLogAlertAllOfConditionPtrOutputWithContext(context.Background())
}

func (i ActivityLogAlertAllOfConditionArgs) ToActivityLogAlertAllOfConditionPtrOutputWithContext(ctx context.Context) ActivityLogAlertAllOfConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActivityLogAlertAllOfConditionOutput).ToActivityLogAlertAllOfConditionPtrOutputWithContext(ctx)
}

// ActivityLogAlertAllOfConditionPtrInput is an input type that accepts ActivityLogAlertAllOfConditionArgs, ActivityLogAlertAllOfConditionPtr and ActivityLogAlertAllOfConditionPtrOutput values.
// You can construct a concrete instance of `ActivityLogAlertAllOfConditionPtrInput` via:
//
//          ActivityLogAlertAllOfConditionArgs{...}
//
//  or:
//
//          nil
type ActivityLogAlertAllOfConditionPtrInput interface {
	pulumi.Input

	ToActivityLogAlertAllOfConditionPtrOutput() ActivityLogAlertAllOfConditionPtrOutput
	ToActivityLogAlertAllOfConditionPtrOutputWithContext(context.Context) ActivityLogAlertAllOfConditionPtrOutput
}

type activityLogAlertAllOfConditionPtrType ActivityLogAlertAllOfConditionArgs

func ActivityLogAlertAllOfConditionPtr(v *ActivityLogAlertAllOfConditionArgs) ActivityLogAlertAllOfConditionPtrInput {
	return (*activityLogAlertAllOfConditionPtrType)(v)
}

func (*activityLogAlertAllOfConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActivityLogAlertAllOfCondition)(nil)).Elem()
}

func (i *activityLogAlertAllOfConditionPtrType) ToActivityLogAlertAllOfConditionPtrOutput() ActivityLogAlertAllOfConditionPtrOutput {
	return i.ToActivityLogAlertAllOfConditionPtrOutputWithContext(context.Background())
}

func (i *activityLogAlertAllOfConditionPtrType) ToActivityLogAlertAllOfConditionPtrOutputWithContext(ctx context.Context) ActivityLogAlertAllOfConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActivityLogAlertAllOfConditionPtrOutput)
}

// An Activity Log alert condition that is met when all its member conditions are met.
type ActivityLogAlertAllOfConditionOutput struct{ *pulumi.OutputState }

func (ActivityLogAlertAllOfConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActivityLogAlertAllOfCondition)(nil)).Elem()
}

func (o ActivityLogAlertAllOfConditionOutput) ToActivityLogAlertAllOfConditionOutput() ActivityLogAlertAllOfConditionOutput {
	return o
}

func (o ActivityLogAlertAllOfConditionOutput) ToActivityLogAlertAllOfConditionOutputWithContext(ctx context.Context) ActivityLogAlertAllOfConditionOutput {
	return o
}

func (o ActivityLogAlertAllOfConditionOutput) ToActivityLogAlertAllOfConditionPtrOutput() ActivityLogAlertAllOfConditionPtrOutput {
	return o.ToActivityLogAlertAllOfConditionPtrOutputWithContext(context.Background())
}

func (o ActivityLogAlertAllOfConditionOutput) ToActivityLogAlertAllOfConditionPtrOutputWithContext(ctx context.Context) ActivityLogAlertAllOfConditionPtrOutput {
	return o.ApplyT(func(v ActivityLogAlertAllOfCondition) *ActivityLogAlertAllOfCondition {
		return &v
	}).(ActivityLogAlertAllOfConditionPtrOutput)
}

// The list of activity log alert conditions.
func (o ActivityLogAlertAllOfConditionOutput) AllOf() ActivityLogAlertLeafConditionArrayOutput {
	return o.ApplyT(func(v ActivityLogAlertAllOfCondition) []ActivityLogAlertLeafCondition { return v.AllOf }).(ActivityLogAlertLeafConditionArrayOutput)
}

type ActivityLogAlertAllOfConditionPtrOutput struct{ *pulumi.OutputState }

func (ActivityLogAlertAllOfConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActivityLogAlertAllOfCondition)(nil)).Elem()
}

func (o ActivityLogAlertAllOfConditionPtrOutput) ToActivityLogAlertAllOfConditionPtrOutput() ActivityLogAlertAllOfConditionPtrOutput {
	return o
}

func (o ActivityLogAlertAllOfConditionPtrOutput) ToActivityLogAlertAllOfConditionPtrOutputWithContext(ctx context.Context) ActivityLogAlertAllOfConditionPtrOutput {
	return o
}

func (o ActivityLogAlertAllOfConditionPtrOutput) Elem() ActivityLogAlertAllOfConditionOutput {
	return o.ApplyT(func(v *ActivityLogAlertAllOfCondition) ActivityLogAlertAllOfCondition { return *v }).(ActivityLogAlertAllOfConditionOutput)
}

// The list of activity log alert conditions.
func (o ActivityLogAlertAllOfConditionPtrOutput) AllOf() ActivityLogAlertLeafConditionArrayOutput {
	return o.ApplyT(func(v *ActivityLogAlertAllOfCondition) []ActivityLogAlertLeafCondition {
		if v == nil {
			return nil
		}
		return v.AllOf
	}).(ActivityLogAlertLeafConditionArrayOutput)
}

// An Activity Log alert condition that is met when all its member conditions are met.
type ActivityLogAlertAllOfConditionResponse struct {
	// The list of activity log alert conditions.
	AllOf []ActivityLogAlertLeafConditionResponse `pulumi:"allOf"`
}

// ActivityLogAlertAllOfConditionResponseInput is an input type that accepts ActivityLogAlertAllOfConditionResponseArgs and ActivityLogAlertAllOfConditionResponseOutput values.
// You can construct a concrete instance of `ActivityLogAlertAllOfConditionResponseInput` via:
//
//          ActivityLogAlertAllOfConditionResponseArgs{...}
type ActivityLogAlertAllOfConditionResponseInput interface {
	pulumi.Input

	ToActivityLogAlertAllOfConditionResponseOutput() ActivityLogAlertAllOfConditionResponseOutput
	ToActivityLogAlertAllOfConditionResponseOutputWithContext(context.Context) ActivityLogAlertAllOfConditionResponseOutput
}

// An Activity Log alert condition that is met when all its member conditions are met.
type ActivityLogAlertAllOfConditionResponseArgs struct {
	// The list of activity log alert conditions.
	AllOf ActivityLogAlertLeafConditionResponseArrayInput `pulumi:"allOf"`
}

func (ActivityLogAlertAllOfConditionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActivityLogAlertAllOfConditionResponse)(nil)).Elem()
}

func (i ActivityLogAlertAllOfConditionResponseArgs) ToActivityLogAlertAllOfConditionResponseOutput() ActivityLogAlertAllOfConditionResponseOutput {
	return i.ToActivityLogAlertAllOfConditionResponseOutputWithContext(context.Background())
}

func (i ActivityLogAlertAllOfConditionResponseArgs) ToActivityLogAlertAllOfConditionResponseOutputWithContext(ctx context.Context) ActivityLogAlertAllOfConditionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActivityLogAlertAllOfConditionResponseOutput)
}

func (i ActivityLogAlertAllOfConditionResponseArgs) ToActivityLogAlertAllOfConditionResponsePtrOutput() ActivityLogAlertAllOfConditionResponsePtrOutput {
	return i.ToActivityLogAlertAllOfConditionResponsePtrOutputWithContext(context.Background())
}

func (i ActivityLogAlertAllOfConditionResponseArgs) ToActivityLogAlertAllOfConditionResponsePtrOutputWithContext(ctx context.Context) ActivityLogAlertAllOfConditionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActivityLogAlertAllOfConditionResponseOutput).ToActivityLogAlertAllOfConditionResponsePtrOutputWithContext(ctx)
}

// ActivityLogAlertAllOfConditionResponsePtrInput is an input type that accepts ActivityLogAlertAllOfConditionResponseArgs, ActivityLogAlertAllOfConditionResponsePtr and ActivityLogAlertAllOfConditionResponsePtrOutput values.
// You can construct a concrete instance of `ActivityLogAlertAllOfConditionResponsePtrInput` via:
//
//          ActivityLogAlertAllOfConditionResponseArgs{...}
//
//  or:
//
//          nil
type ActivityLogAlertAllOfConditionResponsePtrInput interface {
	pulumi.Input

	ToActivityLogAlertAllOfConditionResponsePtrOutput() ActivityLogAlertAllOfConditionResponsePtrOutput
	ToActivityLogAlertAllOfConditionResponsePtrOutputWithContext(context.Context) ActivityLogAlertAllOfConditionResponsePtrOutput
}

type activityLogAlertAllOfConditionResponsePtrType ActivityLogAlertAllOfConditionResponseArgs

func ActivityLogAlertAllOfConditionResponsePtr(v *ActivityLogAlertAllOfConditionResponseArgs) ActivityLogAlertAllOfConditionResponsePtrInput {
	return (*activityLogAlertAllOfConditionResponsePtrType)(v)
}

func (*activityLogAlertAllOfConditionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActivityLogAlertAllOfConditionResponse)(nil)).Elem()
}

func (i *activityLogAlertAllOfConditionResponsePtrType) ToActivityLogAlertAllOfConditionResponsePtrOutput() ActivityLogAlertAllOfConditionResponsePtrOutput {
	return i.ToActivityLogAlertAllOfConditionResponsePtrOutputWithContext(context.Background())
}

func (i *activityLogAlertAllOfConditionResponsePtrType) ToActivityLogAlertAllOfConditionResponsePtrOutputWithContext(ctx context.Context) ActivityLogAlertAllOfConditionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActivityLogAlertAllOfConditionResponsePtrOutput)
}

// An Activity Log alert condition that is met when all its member conditions are met.
type ActivityLogAlertAllOfConditionResponseOutput struct{ *pulumi.OutputState }

func (ActivityLogAlertAllOfConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActivityLogAlertAllOfConditionResponse)(nil)).Elem()
}

func (o ActivityLogAlertAllOfConditionResponseOutput) ToActivityLogAlertAllOfConditionResponseOutput() ActivityLogAlertAllOfConditionResponseOutput {
	return o
}

func (o ActivityLogAlertAllOfConditionResponseOutput) ToActivityLogAlertAllOfConditionResponseOutputWithContext(ctx context.Context) ActivityLogAlertAllOfConditionResponseOutput {
	return o
}

func (o ActivityLogAlertAllOfConditionResponseOutput) ToActivityLogAlertAllOfConditionResponsePtrOutput() ActivityLogAlertAllOfConditionResponsePtrOutput {
	return o.ToActivityLogAlertAllOfConditionResponsePtrOutputWithContext(context.Background())
}

func (o ActivityLogAlertAllOfConditionResponseOutput) ToActivityLogAlertAllOfConditionResponsePtrOutputWithContext(ctx context.Context) ActivityLogAlertAllOfConditionResponsePtrOutput {
	return o.ApplyT(func(v ActivityLogAlertAllOfConditionResponse) *ActivityLogAlertAllOfConditionResponse {
		return &v
	}).(ActivityLogAlertAllOfConditionResponsePtrOutput)
}

// The list of activity log alert conditions.
func (o ActivityLogAlertAllOfConditionResponseOutput) AllOf() ActivityLogAlertLeafConditionResponseArrayOutput {
	return o.ApplyT(func(v ActivityLogAlertAllOfConditionResponse) []ActivityLogAlertLeafConditionResponse { return v.AllOf }).(ActivityLogAlertLeafConditionResponseArrayOutput)
}

type ActivityLogAlertAllOfConditionResponsePtrOutput struct{ *pulumi.OutputState }

func (ActivityLogAlertAllOfConditionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActivityLogAlertAllOfConditionResponse)(nil)).Elem()
}

func (o ActivityLogAlertAllOfConditionResponsePtrOutput) ToActivityLogAlertAllOfConditionResponsePtrOutput() ActivityLogAlertAllOfConditionResponsePtrOutput {
	return o
}

func (o ActivityLogAlertAllOfConditionResponsePtrOutput) ToActivityLogAlertAllOfConditionResponsePtrOutputWithContext(ctx context.Context) ActivityLogAlertAllOfConditionResponsePtrOutput {
	return o
}

func (o ActivityLogAlertAllOfConditionResponsePtrOutput) Elem() ActivityLogAlertAllOfConditionResponseOutput {
	return o.ApplyT(func(v *ActivityLogAlertAllOfConditionResponse) ActivityLogAlertAllOfConditionResponse { return *v }).(ActivityLogAlertAllOfConditionResponseOutput)
}

// The list of activity log alert conditions.
func (o ActivityLogAlertAllOfConditionResponsePtrOutput) AllOf() ActivityLogAlertLeafConditionResponseArrayOutput {
	return o.ApplyT(func(v *ActivityLogAlertAllOfConditionResponse) []ActivityLogAlertLeafConditionResponse {
		if v == nil {
			return nil
		}
		return v.AllOf
	}).(ActivityLogAlertLeafConditionResponseArrayOutput)
}

// An Activity Log alert condition that is met by comparing an activity log field and value.
type ActivityLogAlertLeafCondition struct {
	// The field value will be compared to this value (case-insensitive) to determine if the condition is met.
	Equals string `pulumi:"equals"`
	// The name of the field that this condition will examine. The possible values for this field are (case-insensitive): 'resourceId', 'category', 'caller', 'level', 'operationName', 'resourceGroup', 'resourceProvider', 'status', 'subStatus', 'resourceType', or anything beginning with 'properties.'.
	Field string `pulumi:"field"`
}

// ActivityLogAlertLeafConditionInput is an input type that accepts ActivityLogAlertLeafConditionArgs and ActivityLogAlertLeafConditionOutput values.
// You can construct a concrete instance of `ActivityLogAlertLeafConditionInput` via:
//
//          ActivityLogAlertLeafConditionArgs{...}
type ActivityLogAlertLeafConditionInput interface {
	pulumi.Input

	ToActivityLogAlertLeafConditionOutput() ActivityLogAlertLeafConditionOutput
	ToActivityLogAlertLeafConditionOutputWithContext(context.Context) ActivityLogAlertLeafConditionOutput
}

// An Activity Log alert condition that is met by comparing an activity log field and value.
type ActivityLogAlertLeafConditionArgs struct {
	// The field value will be compared to this value (case-insensitive) to determine if the condition is met.
	Equals pulumi.StringInput `pulumi:"equals"`
	// The name of the field that this condition will examine. The possible values for this field are (case-insensitive): 'resourceId', 'category', 'caller', 'level', 'operationName', 'resourceGroup', 'resourceProvider', 'status', 'subStatus', 'resourceType', or anything beginning with 'properties.'.
	Field pulumi.StringInput `pulumi:"field"`
}

func (ActivityLogAlertLeafConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActivityLogAlertLeafCondition)(nil)).Elem()
}

func (i ActivityLogAlertLeafConditionArgs) ToActivityLogAlertLeafConditionOutput() ActivityLogAlertLeafConditionOutput {
	return i.ToActivityLogAlertLeafConditionOutputWithContext(context.Background())
}

func (i ActivityLogAlertLeafConditionArgs) ToActivityLogAlertLeafConditionOutputWithContext(ctx context.Context) ActivityLogAlertLeafConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActivityLogAlertLeafConditionOutput)
}

// ActivityLogAlertLeafConditionArrayInput is an input type that accepts ActivityLogAlertLeafConditionArray and ActivityLogAlertLeafConditionArrayOutput values.
// You can construct a concrete instance of `ActivityLogAlertLeafConditionArrayInput` via:
//
//          ActivityLogAlertLeafConditionArray{ ActivityLogAlertLeafConditionArgs{...} }
type ActivityLogAlertLeafConditionArrayInput interface {
	pulumi.Input

	ToActivityLogAlertLeafConditionArrayOutput() ActivityLogAlertLeafConditionArrayOutput
	ToActivityLogAlertLeafConditionArrayOutputWithContext(context.Context) ActivityLogAlertLeafConditionArrayOutput
}

type ActivityLogAlertLeafConditionArray []ActivityLogAlertLeafConditionInput

func (ActivityLogAlertLeafConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActivityLogAlertLeafCondition)(nil)).Elem()
}

func (i ActivityLogAlertLeafConditionArray) ToActivityLogAlertLeafConditionArrayOutput() ActivityLogAlertLeafConditionArrayOutput {
	return i.ToActivityLogAlertLeafConditionArrayOutputWithContext(context.Background())
}

func (i ActivityLogAlertLeafConditionArray) ToActivityLogAlertLeafConditionArrayOutputWithContext(ctx context.Context) ActivityLogAlertLeafConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActivityLogAlertLeafConditionArrayOutput)
}

// An Activity Log alert condition that is met by comparing an activity log field and value.
type ActivityLogAlertLeafConditionOutput struct{ *pulumi.OutputState }

func (ActivityLogAlertLeafConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActivityLogAlertLeafCondition)(nil)).Elem()
}

func (o ActivityLogAlertLeafConditionOutput) ToActivityLogAlertLeafConditionOutput() ActivityLogAlertLeafConditionOutput {
	return o
}

func (o ActivityLogAlertLeafConditionOutput) ToActivityLogAlertLeafConditionOutputWithContext(ctx context.Context) ActivityLogAlertLeafConditionOutput {
	return o
}

// The field value will be compared to this value (case-insensitive) to determine if the condition is met.
func (o ActivityLogAlertLeafConditionOutput) Equals() pulumi.StringOutput {
	return o.ApplyT(func(v ActivityLogAlertLeafCondition) string { return v.Equals }).(pulumi.StringOutput)
}

// The name of the field that this condition will examine. The possible values for this field are (case-insensitive): 'resourceId', 'category', 'caller', 'level', 'operationName', 'resourceGroup', 'resourceProvider', 'status', 'subStatus', 'resourceType', or anything beginning with 'properties.'.
func (o ActivityLogAlertLeafConditionOutput) Field() pulumi.StringOutput {
	return o.ApplyT(func(v ActivityLogAlertLeafCondition) string { return v.Field }).(pulumi.StringOutput)
}

type ActivityLogAlertLeafConditionArrayOutput struct{ *pulumi.OutputState }

func (ActivityLogAlertLeafConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActivityLogAlertLeafCondition)(nil)).Elem()
}

func (o ActivityLogAlertLeafConditionArrayOutput) ToActivityLogAlertLeafConditionArrayOutput() ActivityLogAlertLeafConditionArrayOutput {
	return o
}

func (o ActivityLogAlertLeafConditionArrayOutput) ToActivityLogAlertLeafConditionArrayOutputWithContext(ctx context.Context) ActivityLogAlertLeafConditionArrayOutput {
	return o
}

func (o ActivityLogAlertLeafConditionArrayOutput) Index(i pulumi.IntInput) ActivityLogAlertLeafConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ActivityLogAlertLeafCondition {
		return vs[0].([]ActivityLogAlertLeafCondition)[vs[1].(int)]
	}).(ActivityLogAlertLeafConditionOutput)
}

// An Activity Log alert condition that is met by comparing an activity log field and value.
type ActivityLogAlertLeafConditionResponse struct {
	// The field value will be compared to this value (case-insensitive) to determine if the condition is met.
	Equals string `pulumi:"equals"`
	// The name of the field that this condition will examine. The possible values for this field are (case-insensitive): 'resourceId', 'category', 'caller', 'level', 'operationName', 'resourceGroup', 'resourceProvider', 'status', 'subStatus', 'resourceType', or anything beginning with 'properties.'.
	Field string `pulumi:"field"`
}

// ActivityLogAlertLeafConditionResponseInput is an input type that accepts ActivityLogAlertLeafConditionResponseArgs and ActivityLogAlertLeafConditionResponseOutput values.
// You can construct a concrete instance of `ActivityLogAlertLeafConditionResponseInput` via:
//
//          ActivityLogAlertLeafConditionResponseArgs{...}
type ActivityLogAlertLeafConditionResponseInput interface {
	pulumi.Input

	ToActivityLogAlertLeafConditionResponseOutput() ActivityLogAlertLeafConditionResponseOutput
	ToActivityLogAlertLeafConditionResponseOutputWithContext(context.Context) ActivityLogAlertLeafConditionResponseOutput
}

// An Activity Log alert condition that is met by comparing an activity log field and value.
type ActivityLogAlertLeafConditionResponseArgs struct {
	// The field value will be compared to this value (case-insensitive) to determine if the condition is met.
	Equals pulumi.StringInput `pulumi:"equals"`
	// The name of the field that this condition will examine. The possible values for this field are (case-insensitive): 'resourceId', 'category', 'caller', 'level', 'operationName', 'resourceGroup', 'resourceProvider', 'status', 'subStatus', 'resourceType', or anything beginning with 'properties.'.
	Field pulumi.StringInput `pulumi:"field"`
}

func (ActivityLogAlertLeafConditionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActivityLogAlertLeafConditionResponse)(nil)).Elem()
}

func (i ActivityLogAlertLeafConditionResponseArgs) ToActivityLogAlertLeafConditionResponseOutput() ActivityLogAlertLeafConditionResponseOutput {
	return i.ToActivityLogAlertLeafConditionResponseOutputWithContext(context.Background())
}

func (i ActivityLogAlertLeafConditionResponseArgs) ToActivityLogAlertLeafConditionResponseOutputWithContext(ctx context.Context) ActivityLogAlertLeafConditionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActivityLogAlertLeafConditionResponseOutput)
}

// ActivityLogAlertLeafConditionResponseArrayInput is an input type that accepts ActivityLogAlertLeafConditionResponseArray and ActivityLogAlertLeafConditionResponseArrayOutput values.
// You can construct a concrete instance of `ActivityLogAlertLeafConditionResponseArrayInput` via:
//
//          ActivityLogAlertLeafConditionResponseArray{ ActivityLogAlertLeafConditionResponseArgs{...} }
type ActivityLogAlertLeafConditionResponseArrayInput interface {
	pulumi.Input

	ToActivityLogAlertLeafConditionResponseArrayOutput() ActivityLogAlertLeafConditionResponseArrayOutput
	ToActivityLogAlertLeafConditionResponseArrayOutputWithContext(context.Context) ActivityLogAlertLeafConditionResponseArrayOutput
}

type ActivityLogAlertLeafConditionResponseArray []ActivityLogAlertLeafConditionResponseInput

func (ActivityLogAlertLeafConditionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActivityLogAlertLeafConditionResponse)(nil)).Elem()
}

func (i ActivityLogAlertLeafConditionResponseArray) ToActivityLogAlertLeafConditionResponseArrayOutput() ActivityLogAlertLeafConditionResponseArrayOutput {
	return i.ToActivityLogAlertLeafConditionResponseArrayOutputWithContext(context.Background())
}

func (i ActivityLogAlertLeafConditionResponseArray) ToActivityLogAlertLeafConditionResponseArrayOutputWithContext(ctx context.Context) ActivityLogAlertLeafConditionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActivityLogAlertLeafConditionResponseArrayOutput)
}

// An Activity Log alert condition that is met by comparing an activity log field and value.
type ActivityLogAlertLeafConditionResponseOutput struct{ *pulumi.OutputState }

func (ActivityLogAlertLeafConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActivityLogAlertLeafConditionResponse)(nil)).Elem()
}

func (o ActivityLogAlertLeafConditionResponseOutput) ToActivityLogAlertLeafConditionResponseOutput() ActivityLogAlertLeafConditionResponseOutput {
	return o
}

func (o ActivityLogAlertLeafConditionResponseOutput) ToActivityLogAlertLeafConditionResponseOutputWithContext(ctx context.Context) ActivityLogAlertLeafConditionResponseOutput {
	return o
}

// The field value will be compared to this value (case-insensitive) to determine if the condition is met.
func (o ActivityLogAlertLeafConditionResponseOutput) Equals() pulumi.StringOutput {
	return o.ApplyT(func(v ActivityLogAlertLeafConditionResponse) string { return v.Equals }).(pulumi.StringOutput)
}

// The name of the field that this condition will examine. The possible values for this field are (case-insensitive): 'resourceId', 'category', 'caller', 'level', 'operationName', 'resourceGroup', 'resourceProvider', 'status', 'subStatus', 'resourceType', or anything beginning with 'properties.'.
func (o ActivityLogAlertLeafConditionResponseOutput) Field() pulumi.StringOutput {
	return o.ApplyT(func(v ActivityLogAlertLeafConditionResponse) string { return v.Field }).(pulumi.StringOutput)
}

type ActivityLogAlertLeafConditionResponseArrayOutput struct{ *pulumi.OutputState }

func (ActivityLogAlertLeafConditionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActivityLogAlertLeafConditionResponse)(nil)).Elem()
}

func (o ActivityLogAlertLeafConditionResponseArrayOutput) ToActivityLogAlertLeafConditionResponseArrayOutput() ActivityLogAlertLeafConditionResponseArrayOutput {
	return o
}

func (o ActivityLogAlertLeafConditionResponseArrayOutput) ToActivityLogAlertLeafConditionResponseArrayOutputWithContext(ctx context.Context) ActivityLogAlertLeafConditionResponseArrayOutput {
	return o
}

func (o ActivityLogAlertLeafConditionResponseArrayOutput) Index(i pulumi.IntInput) ActivityLogAlertLeafConditionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ActivityLogAlertLeafConditionResponse {
		return vs[0].([]ActivityLogAlertLeafConditionResponse)[vs[1].(int)]
	}).(ActivityLogAlertLeafConditionResponseOutput)
}

// An Azure activity log alert.
type ActivityLogAlertResponse struct {
	// The actions that will activate when the condition is met.
	Actions ActivityLogAlertActionListResponse `pulumi:"actions"`
	// The condition that will cause this alert to activate.
	Condition ActivityLogAlertAllOfConditionResponse `pulumi:"condition"`
	// A description of this activity log alert.
	Description *string `pulumi:"description"`
	// Indicates whether this activity log alert is enabled. If an activity log alert is not enabled, then none of its actions will be activated.
	Enabled *bool `pulumi:"enabled"`
	// A list of resourceIds that will be used as prefixes. The alert will only apply to activityLogs with resourceIds that fall under one of these prefixes. This list must include at least one item.
	Scopes []string `pulumi:"scopes"`
}

// ActivityLogAlertResponseInput is an input type that accepts ActivityLogAlertResponseArgs and ActivityLogAlertResponseOutput values.
// You can construct a concrete instance of `ActivityLogAlertResponseInput` via:
//
//          ActivityLogAlertResponseArgs{...}
type ActivityLogAlertResponseInput interface {
	pulumi.Input

	ToActivityLogAlertResponseOutput() ActivityLogAlertResponseOutput
	ToActivityLogAlertResponseOutputWithContext(context.Context) ActivityLogAlertResponseOutput
}

// An Azure activity log alert.
type ActivityLogAlertResponseArgs struct {
	// The actions that will activate when the condition is met.
	Actions ActivityLogAlertActionListResponseInput `pulumi:"actions"`
	// The condition that will cause this alert to activate.
	Condition ActivityLogAlertAllOfConditionResponseInput `pulumi:"condition"`
	// A description of this activity log alert.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicates whether this activity log alert is enabled. If an activity log alert is not enabled, then none of its actions will be activated.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// A list of resourceIds that will be used as prefixes. The alert will only apply to activityLogs with resourceIds that fall under one of these prefixes. This list must include at least one item.
	Scopes pulumi.StringArrayInput `pulumi:"scopes"`
}

func (ActivityLogAlertResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActivityLogAlertResponse)(nil)).Elem()
}

func (i ActivityLogAlertResponseArgs) ToActivityLogAlertResponseOutput() ActivityLogAlertResponseOutput {
	return i.ToActivityLogAlertResponseOutputWithContext(context.Background())
}

func (i ActivityLogAlertResponseArgs) ToActivityLogAlertResponseOutputWithContext(ctx context.Context) ActivityLogAlertResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActivityLogAlertResponseOutput)
}

func (i ActivityLogAlertResponseArgs) ToActivityLogAlertResponsePtrOutput() ActivityLogAlertResponsePtrOutput {
	return i.ToActivityLogAlertResponsePtrOutputWithContext(context.Background())
}

func (i ActivityLogAlertResponseArgs) ToActivityLogAlertResponsePtrOutputWithContext(ctx context.Context) ActivityLogAlertResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActivityLogAlertResponseOutput).ToActivityLogAlertResponsePtrOutputWithContext(ctx)
}

// ActivityLogAlertResponsePtrInput is an input type that accepts ActivityLogAlertResponseArgs, ActivityLogAlertResponsePtr and ActivityLogAlertResponsePtrOutput values.
// You can construct a concrete instance of `ActivityLogAlertResponsePtrInput` via:
//
//          ActivityLogAlertResponseArgs{...}
//
//  or:
//
//          nil
type ActivityLogAlertResponsePtrInput interface {
	pulumi.Input

	ToActivityLogAlertResponsePtrOutput() ActivityLogAlertResponsePtrOutput
	ToActivityLogAlertResponsePtrOutputWithContext(context.Context) ActivityLogAlertResponsePtrOutput
}

type activityLogAlertResponsePtrType ActivityLogAlertResponseArgs

func ActivityLogAlertResponsePtr(v *ActivityLogAlertResponseArgs) ActivityLogAlertResponsePtrInput {
	return (*activityLogAlertResponsePtrType)(v)
}

func (*activityLogAlertResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActivityLogAlertResponse)(nil)).Elem()
}

func (i *activityLogAlertResponsePtrType) ToActivityLogAlertResponsePtrOutput() ActivityLogAlertResponsePtrOutput {
	return i.ToActivityLogAlertResponsePtrOutputWithContext(context.Background())
}

func (i *activityLogAlertResponsePtrType) ToActivityLogAlertResponsePtrOutputWithContext(ctx context.Context) ActivityLogAlertResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActivityLogAlertResponsePtrOutput)
}

// An Azure activity log alert.
type ActivityLogAlertResponseOutput struct{ *pulumi.OutputState }

func (ActivityLogAlertResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActivityLogAlertResponse)(nil)).Elem()
}

func (o ActivityLogAlertResponseOutput) ToActivityLogAlertResponseOutput() ActivityLogAlertResponseOutput {
	return o
}

func (o ActivityLogAlertResponseOutput) ToActivityLogAlertResponseOutputWithContext(ctx context.Context) ActivityLogAlertResponseOutput {
	return o
}

func (o ActivityLogAlertResponseOutput) ToActivityLogAlertResponsePtrOutput() ActivityLogAlertResponsePtrOutput {
	return o.ToActivityLogAlertResponsePtrOutputWithContext(context.Background())
}

func (o ActivityLogAlertResponseOutput) ToActivityLogAlertResponsePtrOutputWithContext(ctx context.Context) ActivityLogAlertResponsePtrOutput {
	return o.ApplyT(func(v ActivityLogAlertResponse) *ActivityLogAlertResponse {
		return &v
	}).(ActivityLogAlertResponsePtrOutput)
}

// The actions that will activate when the condition is met.
func (o ActivityLogAlertResponseOutput) Actions() ActivityLogAlertActionListResponseOutput {
	return o.ApplyT(func(v ActivityLogAlertResponse) ActivityLogAlertActionListResponse { return v.Actions }).(ActivityLogAlertActionListResponseOutput)
}

// The condition that will cause this alert to activate.
func (o ActivityLogAlertResponseOutput) Condition() ActivityLogAlertAllOfConditionResponseOutput {
	return o.ApplyT(func(v ActivityLogAlertResponse) ActivityLogAlertAllOfConditionResponse { return v.Condition }).(ActivityLogAlertAllOfConditionResponseOutput)
}

// A description of this activity log alert.
func (o ActivityLogAlertResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActivityLogAlertResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates whether this activity log alert is enabled. If an activity log alert is not enabled, then none of its actions will be activated.
func (o ActivityLogAlertResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ActivityLogAlertResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// A list of resourceIds that will be used as prefixes. The alert will only apply to activityLogs with resourceIds that fall under one of these prefixes. This list must include at least one item.
func (o ActivityLogAlertResponseOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ActivityLogAlertResponse) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

type ActivityLogAlertResponsePtrOutput struct{ *pulumi.OutputState }

func (ActivityLogAlertResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActivityLogAlertResponse)(nil)).Elem()
}

func (o ActivityLogAlertResponsePtrOutput) ToActivityLogAlertResponsePtrOutput() ActivityLogAlertResponsePtrOutput {
	return o
}

func (o ActivityLogAlertResponsePtrOutput) ToActivityLogAlertResponsePtrOutputWithContext(ctx context.Context) ActivityLogAlertResponsePtrOutput {
	return o
}

func (o ActivityLogAlertResponsePtrOutput) Elem() ActivityLogAlertResponseOutput {
	return o.ApplyT(func(v *ActivityLogAlertResponse) ActivityLogAlertResponse { return *v }).(ActivityLogAlertResponseOutput)
}

// The actions that will activate when the condition is met.
func (o ActivityLogAlertResponsePtrOutput) Actions() ActivityLogAlertActionListResponsePtrOutput {
	return o.ApplyT(func(v *ActivityLogAlertResponse) *ActivityLogAlertActionListResponse {
		if v == nil {
			return nil
		}
		return &v.Actions
	}).(ActivityLogAlertActionListResponsePtrOutput)
}

// The condition that will cause this alert to activate.
func (o ActivityLogAlertResponsePtrOutput) Condition() ActivityLogAlertAllOfConditionResponsePtrOutput {
	return o.ApplyT(func(v *ActivityLogAlertResponse) *ActivityLogAlertAllOfConditionResponse {
		if v == nil {
			return nil
		}
		return &v.Condition
	}).(ActivityLogAlertAllOfConditionResponsePtrOutput)
}

// A description of this activity log alert.
func (o ActivityLogAlertResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActivityLogAlertResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Indicates whether this activity log alert is enabled. If an activity log alert is not enabled, then none of its actions will be activated.
func (o ActivityLogAlertResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ActivityLogAlertResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// A list of resourceIds that will be used as prefixes. The alert will only apply to activityLogs with resourceIds that fall under one of these prefixes. This list must include at least one item.
func (o ActivityLogAlertResponsePtrOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ActivityLogAlertResponse) []string {
		if v == nil {
			return nil
		}
		return v.Scopes
	}).(pulumi.StringArrayOutput)
}

// The Azure Automation Runbook notification receiver.
type AutomationRunbookReceiver struct {
	// The Azure automation account Id which holds this runbook and authenticate to Azure resource.
	AutomationAccountId string `pulumi:"automationAccountId"`
	// Indicates whether this instance is global runbook.
	IsGlobalRunbook bool `pulumi:"isGlobalRunbook"`
	// Indicates name of the webhook.
	Name *string `pulumi:"name"`
	// The name for this runbook.
	RunbookName string `pulumi:"runbookName"`
	// The URI where webhooks should be sent.
	ServiceUri *string `pulumi:"serviceUri"`
	// The resource id for webhook linked to this runbook.
	WebhookResourceId string `pulumi:"webhookResourceId"`
}

// AutomationRunbookReceiverInput is an input type that accepts AutomationRunbookReceiverArgs and AutomationRunbookReceiverOutput values.
// You can construct a concrete instance of `AutomationRunbookReceiverInput` via:
//
//          AutomationRunbookReceiverArgs{...}
type AutomationRunbookReceiverInput interface {
	pulumi.Input

	ToAutomationRunbookReceiverOutput() AutomationRunbookReceiverOutput
	ToAutomationRunbookReceiverOutputWithContext(context.Context) AutomationRunbookReceiverOutput
}

// The Azure Automation Runbook notification receiver.
type AutomationRunbookReceiverArgs struct {
	// The Azure automation account Id which holds this runbook and authenticate to Azure resource.
	AutomationAccountId pulumi.StringInput `pulumi:"automationAccountId"`
	// Indicates whether this instance is global runbook.
	IsGlobalRunbook pulumi.BoolInput `pulumi:"isGlobalRunbook"`
	// Indicates name of the webhook.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The name for this runbook.
	RunbookName pulumi.StringInput `pulumi:"runbookName"`
	// The URI where webhooks should be sent.
	ServiceUri pulumi.StringPtrInput `pulumi:"serviceUri"`
	// The resource id for webhook linked to this runbook.
	WebhookResourceId pulumi.StringInput `pulumi:"webhookResourceId"`
}

func (AutomationRunbookReceiverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRunbookReceiver)(nil)).Elem()
}

func (i AutomationRunbookReceiverArgs) ToAutomationRunbookReceiverOutput() AutomationRunbookReceiverOutput {
	return i.ToAutomationRunbookReceiverOutputWithContext(context.Background())
}

func (i AutomationRunbookReceiverArgs) ToAutomationRunbookReceiverOutputWithContext(ctx context.Context) AutomationRunbookReceiverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRunbookReceiverOutput)
}

// AutomationRunbookReceiverArrayInput is an input type that accepts AutomationRunbookReceiverArray and AutomationRunbookReceiverArrayOutput values.
// You can construct a concrete instance of `AutomationRunbookReceiverArrayInput` via:
//
//          AutomationRunbookReceiverArray{ AutomationRunbookReceiverArgs{...} }
type AutomationRunbookReceiverArrayInput interface {
	pulumi.Input

	ToAutomationRunbookReceiverArrayOutput() AutomationRunbookReceiverArrayOutput
	ToAutomationRunbookReceiverArrayOutputWithContext(context.Context) AutomationRunbookReceiverArrayOutput
}

type AutomationRunbookReceiverArray []AutomationRunbookReceiverInput

func (AutomationRunbookReceiverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationRunbookReceiver)(nil)).Elem()
}

func (i AutomationRunbookReceiverArray) ToAutomationRunbookReceiverArrayOutput() AutomationRunbookReceiverArrayOutput {
	return i.ToAutomationRunbookReceiverArrayOutputWithContext(context.Background())
}

func (i AutomationRunbookReceiverArray) ToAutomationRunbookReceiverArrayOutputWithContext(ctx context.Context) AutomationRunbookReceiverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRunbookReceiverArrayOutput)
}

// The Azure Automation Runbook notification receiver.
type AutomationRunbookReceiverOutput struct{ *pulumi.OutputState }

func (AutomationRunbookReceiverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRunbookReceiver)(nil)).Elem()
}

func (o AutomationRunbookReceiverOutput) ToAutomationRunbookReceiverOutput() AutomationRunbookReceiverOutput {
	return o
}

func (o AutomationRunbookReceiverOutput) ToAutomationRunbookReceiverOutputWithContext(ctx context.Context) AutomationRunbookReceiverOutput {
	return o
}

// The Azure automation account Id which holds this runbook and authenticate to Azure resource.
func (o AutomationRunbookReceiverOutput) AutomationAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v AutomationRunbookReceiver) string { return v.AutomationAccountId }).(pulumi.StringOutput)
}

// Indicates whether this instance is global runbook.
func (o AutomationRunbookReceiverOutput) IsGlobalRunbook() pulumi.BoolOutput {
	return o.ApplyT(func(v AutomationRunbookReceiver) bool { return v.IsGlobalRunbook }).(pulumi.BoolOutput)
}

// Indicates name of the webhook.
func (o AutomationRunbookReceiverOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationRunbookReceiver) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The name for this runbook.
func (o AutomationRunbookReceiverOutput) RunbookName() pulumi.StringOutput {
	return o.ApplyT(func(v AutomationRunbookReceiver) string { return v.RunbookName }).(pulumi.StringOutput)
}

// The URI where webhooks should be sent.
func (o AutomationRunbookReceiverOutput) ServiceUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationRunbookReceiver) *string { return v.ServiceUri }).(pulumi.StringPtrOutput)
}

// The resource id for webhook linked to this runbook.
func (o AutomationRunbookReceiverOutput) WebhookResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v AutomationRunbookReceiver) string { return v.WebhookResourceId }).(pulumi.StringOutput)
}

type AutomationRunbookReceiverArrayOutput struct{ *pulumi.OutputState }

func (AutomationRunbookReceiverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationRunbookReceiver)(nil)).Elem()
}

func (o AutomationRunbookReceiverArrayOutput) ToAutomationRunbookReceiverArrayOutput() AutomationRunbookReceiverArrayOutput {
	return o
}

func (o AutomationRunbookReceiverArrayOutput) ToAutomationRunbookReceiverArrayOutputWithContext(ctx context.Context) AutomationRunbookReceiverArrayOutput {
	return o
}

func (o AutomationRunbookReceiverArrayOutput) Index(i pulumi.IntInput) AutomationRunbookReceiverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AutomationRunbookReceiver {
		return vs[0].([]AutomationRunbookReceiver)[vs[1].(int)]
	}).(AutomationRunbookReceiverOutput)
}

// The Azure Automation Runbook notification receiver.
type AutomationRunbookReceiverResponse struct {
	// The Azure automation account Id which holds this runbook and authenticate to Azure resource.
	AutomationAccountId string `pulumi:"automationAccountId"`
	// Indicates whether this instance is global runbook.
	IsGlobalRunbook bool `pulumi:"isGlobalRunbook"`
	// Indicates name of the webhook.
	Name *string `pulumi:"name"`
	// The name for this runbook.
	RunbookName string `pulumi:"runbookName"`
	// The URI where webhooks should be sent.
	ServiceUri *string `pulumi:"serviceUri"`
	// The resource id for webhook linked to this runbook.
	WebhookResourceId string `pulumi:"webhookResourceId"`
}

// AutomationRunbookReceiverResponseInput is an input type that accepts AutomationRunbookReceiverResponseArgs and AutomationRunbookReceiverResponseOutput values.
// You can construct a concrete instance of `AutomationRunbookReceiverResponseInput` via:
//
//          AutomationRunbookReceiverResponseArgs{...}
type AutomationRunbookReceiverResponseInput interface {
	pulumi.Input

	ToAutomationRunbookReceiverResponseOutput() AutomationRunbookReceiverResponseOutput
	ToAutomationRunbookReceiverResponseOutputWithContext(context.Context) AutomationRunbookReceiverResponseOutput
}

// The Azure Automation Runbook notification receiver.
type AutomationRunbookReceiverResponseArgs struct {
	// The Azure automation account Id which holds this runbook and authenticate to Azure resource.
	AutomationAccountId pulumi.StringInput `pulumi:"automationAccountId"`
	// Indicates whether this instance is global runbook.
	IsGlobalRunbook pulumi.BoolInput `pulumi:"isGlobalRunbook"`
	// Indicates name of the webhook.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The name for this runbook.
	RunbookName pulumi.StringInput `pulumi:"runbookName"`
	// The URI where webhooks should be sent.
	ServiceUri pulumi.StringPtrInput `pulumi:"serviceUri"`
	// The resource id for webhook linked to this runbook.
	WebhookResourceId pulumi.StringInput `pulumi:"webhookResourceId"`
}

func (AutomationRunbookReceiverResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRunbookReceiverResponse)(nil)).Elem()
}

func (i AutomationRunbookReceiverResponseArgs) ToAutomationRunbookReceiverResponseOutput() AutomationRunbookReceiverResponseOutput {
	return i.ToAutomationRunbookReceiverResponseOutputWithContext(context.Background())
}

func (i AutomationRunbookReceiverResponseArgs) ToAutomationRunbookReceiverResponseOutputWithContext(ctx context.Context) AutomationRunbookReceiverResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRunbookReceiverResponseOutput)
}

// AutomationRunbookReceiverResponseArrayInput is an input type that accepts AutomationRunbookReceiverResponseArray and AutomationRunbookReceiverResponseArrayOutput values.
// You can construct a concrete instance of `AutomationRunbookReceiverResponseArrayInput` via:
//
//          AutomationRunbookReceiverResponseArray{ AutomationRunbookReceiverResponseArgs{...} }
type AutomationRunbookReceiverResponseArrayInput interface {
	pulumi.Input

	ToAutomationRunbookReceiverResponseArrayOutput() AutomationRunbookReceiverResponseArrayOutput
	ToAutomationRunbookReceiverResponseArrayOutputWithContext(context.Context) AutomationRunbookReceiverResponseArrayOutput
}

type AutomationRunbookReceiverResponseArray []AutomationRunbookReceiverResponseInput

func (AutomationRunbookReceiverResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationRunbookReceiverResponse)(nil)).Elem()
}

func (i AutomationRunbookReceiverResponseArray) ToAutomationRunbookReceiverResponseArrayOutput() AutomationRunbookReceiverResponseArrayOutput {
	return i.ToAutomationRunbookReceiverResponseArrayOutputWithContext(context.Background())
}

func (i AutomationRunbookReceiverResponseArray) ToAutomationRunbookReceiverResponseArrayOutputWithContext(ctx context.Context) AutomationRunbookReceiverResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRunbookReceiverResponseArrayOutput)
}

// The Azure Automation Runbook notification receiver.
type AutomationRunbookReceiverResponseOutput struct{ *pulumi.OutputState }

func (AutomationRunbookReceiverResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRunbookReceiverResponse)(nil)).Elem()
}

func (o AutomationRunbookReceiverResponseOutput) ToAutomationRunbookReceiverResponseOutput() AutomationRunbookReceiverResponseOutput {
	return o
}

func (o AutomationRunbookReceiverResponseOutput) ToAutomationRunbookReceiverResponseOutputWithContext(ctx context.Context) AutomationRunbookReceiverResponseOutput {
	return o
}

// The Azure automation account Id which holds this runbook and authenticate to Azure resource.
func (o AutomationRunbookReceiverResponseOutput) AutomationAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v AutomationRunbookReceiverResponse) string { return v.AutomationAccountId }).(pulumi.StringOutput)
}

// Indicates whether this instance is global runbook.
func (o AutomationRunbookReceiverResponseOutput) IsGlobalRunbook() pulumi.BoolOutput {
	return o.ApplyT(func(v AutomationRunbookReceiverResponse) bool { return v.IsGlobalRunbook }).(pulumi.BoolOutput)
}

// Indicates name of the webhook.
func (o AutomationRunbookReceiverResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationRunbookReceiverResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The name for this runbook.
func (o AutomationRunbookReceiverResponseOutput) RunbookName() pulumi.StringOutput {
	return o.ApplyT(func(v AutomationRunbookReceiverResponse) string { return v.RunbookName }).(pulumi.StringOutput)
}

// The URI where webhooks should be sent.
func (o AutomationRunbookReceiverResponseOutput) ServiceUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationRunbookReceiverResponse) *string { return v.ServiceUri }).(pulumi.StringPtrOutput)
}

// The resource id for webhook linked to this runbook.
func (o AutomationRunbookReceiverResponseOutput) WebhookResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v AutomationRunbookReceiverResponse) string { return v.WebhookResourceId }).(pulumi.StringOutput)
}

type AutomationRunbookReceiverResponseArrayOutput struct{ *pulumi.OutputState }

func (AutomationRunbookReceiverResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationRunbookReceiverResponse)(nil)).Elem()
}

func (o AutomationRunbookReceiverResponseArrayOutput) ToAutomationRunbookReceiverResponseArrayOutput() AutomationRunbookReceiverResponseArrayOutput {
	return o
}

func (o AutomationRunbookReceiverResponseArrayOutput) ToAutomationRunbookReceiverResponseArrayOutputWithContext(ctx context.Context) AutomationRunbookReceiverResponseArrayOutput {
	return o
}

func (o AutomationRunbookReceiverResponseArrayOutput) Index(i pulumi.IntInput) AutomationRunbookReceiverResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AutomationRunbookReceiverResponse {
		return vs[0].([]AutomationRunbookReceiverResponse)[vs[1].(int)]
	}).(AutomationRunbookReceiverResponseOutput)
}

// The Azure mobile App push notification receiver.
type AzureAppPushReceiver struct {
	// The email address registered for the Azure mobile app.
	EmailAddress string `pulumi:"emailAddress"`
	// The name of the Azure mobile app push receiver. Names must be unique across all receivers within an action group.
	Name string `pulumi:"name"`
}

// AzureAppPushReceiverInput is an input type that accepts AzureAppPushReceiverArgs and AzureAppPushReceiverOutput values.
// You can construct a concrete instance of `AzureAppPushReceiverInput` via:
//
//          AzureAppPushReceiverArgs{...}
type AzureAppPushReceiverInput interface {
	pulumi.Input

	ToAzureAppPushReceiverOutput() AzureAppPushReceiverOutput
	ToAzureAppPushReceiverOutputWithContext(context.Context) AzureAppPushReceiverOutput
}

// The Azure mobile App push notification receiver.
type AzureAppPushReceiverArgs struct {
	// The email address registered for the Azure mobile app.
	EmailAddress pulumi.StringInput `pulumi:"emailAddress"`
	// The name of the Azure mobile app push receiver. Names must be unique across all receivers within an action group.
	Name pulumi.StringInput `pulumi:"name"`
}

func (AzureAppPushReceiverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureAppPushReceiver)(nil)).Elem()
}

func (i AzureAppPushReceiverArgs) ToAzureAppPushReceiverOutput() AzureAppPushReceiverOutput {
	return i.ToAzureAppPushReceiverOutputWithContext(context.Background())
}

func (i AzureAppPushReceiverArgs) ToAzureAppPushReceiverOutputWithContext(ctx context.Context) AzureAppPushReceiverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureAppPushReceiverOutput)
}

// AzureAppPushReceiverArrayInput is an input type that accepts AzureAppPushReceiverArray and AzureAppPushReceiverArrayOutput values.
// You can construct a concrete instance of `AzureAppPushReceiverArrayInput` via:
//
//          AzureAppPushReceiverArray{ AzureAppPushReceiverArgs{...} }
type AzureAppPushReceiverArrayInput interface {
	pulumi.Input

	ToAzureAppPushReceiverArrayOutput() AzureAppPushReceiverArrayOutput
	ToAzureAppPushReceiverArrayOutputWithContext(context.Context) AzureAppPushReceiverArrayOutput
}

type AzureAppPushReceiverArray []AzureAppPushReceiverInput

func (AzureAppPushReceiverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureAppPushReceiver)(nil)).Elem()
}

func (i AzureAppPushReceiverArray) ToAzureAppPushReceiverArrayOutput() AzureAppPushReceiverArrayOutput {
	return i.ToAzureAppPushReceiverArrayOutputWithContext(context.Background())
}

func (i AzureAppPushReceiverArray) ToAzureAppPushReceiverArrayOutputWithContext(ctx context.Context) AzureAppPushReceiverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureAppPushReceiverArrayOutput)
}

// The Azure mobile App push notification receiver.
type AzureAppPushReceiverOutput struct{ *pulumi.OutputState }

func (AzureAppPushReceiverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureAppPushReceiver)(nil)).Elem()
}

func (o AzureAppPushReceiverOutput) ToAzureAppPushReceiverOutput() AzureAppPushReceiverOutput {
	return o
}

func (o AzureAppPushReceiverOutput) ToAzureAppPushReceiverOutputWithContext(ctx context.Context) AzureAppPushReceiverOutput {
	return o
}

// The email address registered for the Azure mobile app.
func (o AzureAppPushReceiverOutput) EmailAddress() pulumi.StringOutput {
	return o.ApplyT(func(v AzureAppPushReceiver) string { return v.EmailAddress }).(pulumi.StringOutput)
}

// The name of the Azure mobile app push receiver. Names must be unique across all receivers within an action group.
func (o AzureAppPushReceiverOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AzureAppPushReceiver) string { return v.Name }).(pulumi.StringOutput)
}

type AzureAppPushReceiverArrayOutput struct{ *pulumi.OutputState }

func (AzureAppPushReceiverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureAppPushReceiver)(nil)).Elem()
}

func (o AzureAppPushReceiverArrayOutput) ToAzureAppPushReceiverArrayOutput() AzureAppPushReceiverArrayOutput {
	return o
}

func (o AzureAppPushReceiverArrayOutput) ToAzureAppPushReceiverArrayOutputWithContext(ctx context.Context) AzureAppPushReceiverArrayOutput {
	return o
}

func (o AzureAppPushReceiverArrayOutput) Index(i pulumi.IntInput) AzureAppPushReceiverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureAppPushReceiver {
		return vs[0].([]AzureAppPushReceiver)[vs[1].(int)]
	}).(AzureAppPushReceiverOutput)
}

// The Azure mobile App push notification receiver.
type AzureAppPushReceiverResponse struct {
	// The email address registered for the Azure mobile app.
	EmailAddress string `pulumi:"emailAddress"`
	// The name of the Azure mobile app push receiver. Names must be unique across all receivers within an action group.
	Name string `pulumi:"name"`
}

// AzureAppPushReceiverResponseInput is an input type that accepts AzureAppPushReceiverResponseArgs and AzureAppPushReceiverResponseOutput values.
// You can construct a concrete instance of `AzureAppPushReceiverResponseInput` via:
//
//          AzureAppPushReceiverResponseArgs{...}
type AzureAppPushReceiverResponseInput interface {
	pulumi.Input

	ToAzureAppPushReceiverResponseOutput() AzureAppPushReceiverResponseOutput
	ToAzureAppPushReceiverResponseOutputWithContext(context.Context) AzureAppPushReceiverResponseOutput
}

// The Azure mobile App push notification receiver.
type AzureAppPushReceiverResponseArgs struct {
	// The email address registered for the Azure mobile app.
	EmailAddress pulumi.StringInput `pulumi:"emailAddress"`
	// The name of the Azure mobile app push receiver. Names must be unique across all receivers within an action group.
	Name pulumi.StringInput `pulumi:"name"`
}

func (AzureAppPushReceiverResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureAppPushReceiverResponse)(nil)).Elem()
}

func (i AzureAppPushReceiverResponseArgs) ToAzureAppPushReceiverResponseOutput() AzureAppPushReceiverResponseOutput {
	return i.ToAzureAppPushReceiverResponseOutputWithContext(context.Background())
}

func (i AzureAppPushReceiverResponseArgs) ToAzureAppPushReceiverResponseOutputWithContext(ctx context.Context) AzureAppPushReceiverResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureAppPushReceiverResponseOutput)
}

// AzureAppPushReceiverResponseArrayInput is an input type that accepts AzureAppPushReceiverResponseArray and AzureAppPushReceiverResponseArrayOutput values.
// You can construct a concrete instance of `AzureAppPushReceiverResponseArrayInput` via:
//
//          AzureAppPushReceiverResponseArray{ AzureAppPushReceiverResponseArgs{...} }
type AzureAppPushReceiverResponseArrayInput interface {
	pulumi.Input

	ToAzureAppPushReceiverResponseArrayOutput() AzureAppPushReceiverResponseArrayOutput
	ToAzureAppPushReceiverResponseArrayOutputWithContext(context.Context) AzureAppPushReceiverResponseArrayOutput
}

type AzureAppPushReceiverResponseArray []AzureAppPushReceiverResponseInput

func (AzureAppPushReceiverResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureAppPushReceiverResponse)(nil)).Elem()
}

func (i AzureAppPushReceiverResponseArray) ToAzureAppPushReceiverResponseArrayOutput() AzureAppPushReceiverResponseArrayOutput {
	return i.ToAzureAppPushReceiverResponseArrayOutputWithContext(context.Background())
}

func (i AzureAppPushReceiverResponseArray) ToAzureAppPushReceiverResponseArrayOutputWithContext(ctx context.Context) AzureAppPushReceiverResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureAppPushReceiverResponseArrayOutput)
}

// The Azure mobile App push notification receiver.
type AzureAppPushReceiverResponseOutput struct{ *pulumi.OutputState }

func (AzureAppPushReceiverResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureAppPushReceiverResponse)(nil)).Elem()
}

func (o AzureAppPushReceiverResponseOutput) ToAzureAppPushReceiverResponseOutput() AzureAppPushReceiverResponseOutput {
	return o
}

func (o AzureAppPushReceiverResponseOutput) ToAzureAppPushReceiverResponseOutputWithContext(ctx context.Context) AzureAppPushReceiverResponseOutput {
	return o
}

// The email address registered for the Azure mobile app.
func (o AzureAppPushReceiverResponseOutput) EmailAddress() pulumi.StringOutput {
	return o.ApplyT(func(v AzureAppPushReceiverResponse) string { return v.EmailAddress }).(pulumi.StringOutput)
}

// The name of the Azure mobile app push receiver. Names must be unique across all receivers within an action group.
func (o AzureAppPushReceiverResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AzureAppPushReceiverResponse) string { return v.Name }).(pulumi.StringOutput)
}

type AzureAppPushReceiverResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureAppPushReceiverResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureAppPushReceiverResponse)(nil)).Elem()
}

func (o AzureAppPushReceiverResponseArrayOutput) ToAzureAppPushReceiverResponseArrayOutput() AzureAppPushReceiverResponseArrayOutput {
	return o
}

func (o AzureAppPushReceiverResponseArrayOutput) ToAzureAppPushReceiverResponseArrayOutputWithContext(ctx context.Context) AzureAppPushReceiverResponseArrayOutput {
	return o
}

func (o AzureAppPushReceiverResponseArrayOutput) Index(i pulumi.IntInput) AzureAppPushReceiverResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureAppPushReceiverResponse {
		return vs[0].([]AzureAppPushReceiverResponse)[vs[1].(int)]
	}).(AzureAppPushReceiverResponseOutput)
}

// An email receiver.
type EmailReceiver struct {
	// The email address of this receiver.
	EmailAddress string `pulumi:"emailAddress"`
	// The name of the email receiver. Names must be unique across all receivers within an action group.
	Name string `pulumi:"name"`
}

// EmailReceiverInput is an input type that accepts EmailReceiverArgs and EmailReceiverOutput values.
// You can construct a concrete instance of `EmailReceiverInput` via:
//
//          EmailReceiverArgs{...}
type EmailReceiverInput interface {
	pulumi.Input

	ToEmailReceiverOutput() EmailReceiverOutput
	ToEmailReceiverOutputWithContext(context.Context) EmailReceiverOutput
}

// An email receiver.
type EmailReceiverArgs struct {
	// The email address of this receiver.
	EmailAddress pulumi.StringInput `pulumi:"emailAddress"`
	// The name of the email receiver. Names must be unique across all receivers within an action group.
	Name pulumi.StringInput `pulumi:"name"`
}

func (EmailReceiverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailReceiver)(nil)).Elem()
}

func (i EmailReceiverArgs) ToEmailReceiverOutput() EmailReceiverOutput {
	return i.ToEmailReceiverOutputWithContext(context.Background())
}

func (i EmailReceiverArgs) ToEmailReceiverOutputWithContext(ctx context.Context) EmailReceiverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailReceiverOutput)
}

// EmailReceiverArrayInput is an input type that accepts EmailReceiverArray and EmailReceiverArrayOutput values.
// You can construct a concrete instance of `EmailReceiverArrayInput` via:
//
//          EmailReceiverArray{ EmailReceiverArgs{...} }
type EmailReceiverArrayInput interface {
	pulumi.Input

	ToEmailReceiverArrayOutput() EmailReceiverArrayOutput
	ToEmailReceiverArrayOutputWithContext(context.Context) EmailReceiverArrayOutput
}

type EmailReceiverArray []EmailReceiverInput

func (EmailReceiverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EmailReceiver)(nil)).Elem()
}

func (i EmailReceiverArray) ToEmailReceiverArrayOutput() EmailReceiverArrayOutput {
	return i.ToEmailReceiverArrayOutputWithContext(context.Background())
}

func (i EmailReceiverArray) ToEmailReceiverArrayOutputWithContext(ctx context.Context) EmailReceiverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailReceiverArrayOutput)
}

// An email receiver.
type EmailReceiverOutput struct{ *pulumi.OutputState }

func (EmailReceiverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailReceiver)(nil)).Elem()
}

func (o EmailReceiverOutput) ToEmailReceiverOutput() EmailReceiverOutput {
	return o
}

func (o EmailReceiverOutput) ToEmailReceiverOutputWithContext(ctx context.Context) EmailReceiverOutput {
	return o
}

// The email address of this receiver.
func (o EmailReceiverOutput) EmailAddress() pulumi.StringOutput {
	return o.ApplyT(func(v EmailReceiver) string { return v.EmailAddress }).(pulumi.StringOutput)
}

// The name of the email receiver. Names must be unique across all receivers within an action group.
func (o EmailReceiverOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v EmailReceiver) string { return v.Name }).(pulumi.StringOutput)
}

type EmailReceiverArrayOutput struct{ *pulumi.OutputState }

func (EmailReceiverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EmailReceiver)(nil)).Elem()
}

func (o EmailReceiverArrayOutput) ToEmailReceiverArrayOutput() EmailReceiverArrayOutput {
	return o
}

func (o EmailReceiverArrayOutput) ToEmailReceiverArrayOutputWithContext(ctx context.Context) EmailReceiverArrayOutput {
	return o
}

func (o EmailReceiverArrayOutput) Index(i pulumi.IntInput) EmailReceiverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EmailReceiver {
		return vs[0].([]EmailReceiver)[vs[1].(int)]
	}).(EmailReceiverOutput)
}

// An email receiver.
type EmailReceiverResponse struct {
	// The email address of this receiver.
	EmailAddress string `pulumi:"emailAddress"`
	// The name of the email receiver. Names must be unique across all receivers within an action group.
	Name string `pulumi:"name"`
	// The receiver status of the e-mail.
	Status string `pulumi:"status"`
}

// EmailReceiverResponseInput is an input type that accepts EmailReceiverResponseArgs and EmailReceiverResponseOutput values.
// You can construct a concrete instance of `EmailReceiverResponseInput` via:
//
//          EmailReceiverResponseArgs{...}
type EmailReceiverResponseInput interface {
	pulumi.Input

	ToEmailReceiverResponseOutput() EmailReceiverResponseOutput
	ToEmailReceiverResponseOutputWithContext(context.Context) EmailReceiverResponseOutput
}

// An email receiver.
type EmailReceiverResponseArgs struct {
	// The email address of this receiver.
	EmailAddress pulumi.StringInput `pulumi:"emailAddress"`
	// The name of the email receiver. Names must be unique across all receivers within an action group.
	Name pulumi.StringInput `pulumi:"name"`
	// The receiver status of the e-mail.
	Status pulumi.StringInput `pulumi:"status"`
}

func (EmailReceiverResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailReceiverResponse)(nil)).Elem()
}

func (i EmailReceiverResponseArgs) ToEmailReceiverResponseOutput() EmailReceiverResponseOutput {
	return i.ToEmailReceiverResponseOutputWithContext(context.Background())
}

func (i EmailReceiverResponseArgs) ToEmailReceiverResponseOutputWithContext(ctx context.Context) EmailReceiverResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailReceiverResponseOutput)
}

// EmailReceiverResponseArrayInput is an input type that accepts EmailReceiverResponseArray and EmailReceiverResponseArrayOutput values.
// You can construct a concrete instance of `EmailReceiverResponseArrayInput` via:
//
//          EmailReceiverResponseArray{ EmailReceiverResponseArgs{...} }
type EmailReceiverResponseArrayInput interface {
	pulumi.Input

	ToEmailReceiverResponseArrayOutput() EmailReceiverResponseArrayOutput
	ToEmailReceiverResponseArrayOutputWithContext(context.Context) EmailReceiverResponseArrayOutput
}

type EmailReceiverResponseArray []EmailReceiverResponseInput

func (EmailReceiverResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EmailReceiverResponse)(nil)).Elem()
}

func (i EmailReceiverResponseArray) ToEmailReceiverResponseArrayOutput() EmailReceiverResponseArrayOutput {
	return i.ToEmailReceiverResponseArrayOutputWithContext(context.Background())
}

func (i EmailReceiverResponseArray) ToEmailReceiverResponseArrayOutputWithContext(ctx context.Context) EmailReceiverResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailReceiverResponseArrayOutput)
}

// An email receiver.
type EmailReceiverResponseOutput struct{ *pulumi.OutputState }

func (EmailReceiverResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailReceiverResponse)(nil)).Elem()
}

func (o EmailReceiverResponseOutput) ToEmailReceiverResponseOutput() EmailReceiverResponseOutput {
	return o
}

func (o EmailReceiverResponseOutput) ToEmailReceiverResponseOutputWithContext(ctx context.Context) EmailReceiverResponseOutput {
	return o
}

// The email address of this receiver.
func (o EmailReceiverResponseOutput) EmailAddress() pulumi.StringOutput {
	return o.ApplyT(func(v EmailReceiverResponse) string { return v.EmailAddress }).(pulumi.StringOutput)
}

// The name of the email receiver. Names must be unique across all receivers within an action group.
func (o EmailReceiverResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v EmailReceiverResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The receiver status of the e-mail.
func (o EmailReceiverResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v EmailReceiverResponse) string { return v.Status }).(pulumi.StringOutput)
}

type EmailReceiverResponseArrayOutput struct{ *pulumi.OutputState }

func (EmailReceiverResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EmailReceiverResponse)(nil)).Elem()
}

func (o EmailReceiverResponseArrayOutput) ToEmailReceiverResponseArrayOutput() EmailReceiverResponseArrayOutput {
	return o
}

func (o EmailReceiverResponseArrayOutput) ToEmailReceiverResponseArrayOutputWithContext(ctx context.Context) EmailReceiverResponseArrayOutput {
	return o
}

func (o EmailReceiverResponseArrayOutput) Index(i pulumi.IntInput) EmailReceiverResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EmailReceiverResponse {
		return vs[0].([]EmailReceiverResponse)[vs[1].(int)]
	}).(EmailReceiverResponseOutput)
}

// An Itsm receiver.
type ItsmReceiver struct {
	// Unique identification of ITSM connection among multiple defined in above workspace.
	ConnectionId string `pulumi:"connectionId"`
	// The name of the Itsm receiver. Names must be unique across all receivers within an action group.
	Name string `pulumi:"name"`
	// Region in which workspace resides. Supported values:'centralindia','japaneast','southeastasia','australiasoutheast','uksouth','westcentralus','canadacentral','eastus','westeurope'
	Region string `pulumi:"region"`
	// JSON blob for the configurations of the ITSM action. CreateMultipleWorkItems option will be part of this blob as well.
	TicketConfiguration string `pulumi:"ticketConfiguration"`
	// OMS LA instance identifier.
	WorkspaceId string `pulumi:"workspaceId"`
}

// ItsmReceiverInput is an input type that accepts ItsmReceiverArgs and ItsmReceiverOutput values.
// You can construct a concrete instance of `ItsmReceiverInput` via:
//
//          ItsmReceiverArgs{...}
type ItsmReceiverInput interface {
	pulumi.Input

	ToItsmReceiverOutput() ItsmReceiverOutput
	ToItsmReceiverOutputWithContext(context.Context) ItsmReceiverOutput
}

// An Itsm receiver.
type ItsmReceiverArgs struct {
	// Unique identification of ITSM connection among multiple defined in above workspace.
	ConnectionId pulumi.StringInput `pulumi:"connectionId"`
	// The name of the Itsm receiver. Names must be unique across all receivers within an action group.
	Name pulumi.StringInput `pulumi:"name"`
	// Region in which workspace resides. Supported values:'centralindia','japaneast','southeastasia','australiasoutheast','uksouth','westcentralus','canadacentral','eastus','westeurope'
	Region pulumi.StringInput `pulumi:"region"`
	// JSON blob for the configurations of the ITSM action. CreateMultipleWorkItems option will be part of this blob as well.
	TicketConfiguration pulumi.StringInput `pulumi:"ticketConfiguration"`
	// OMS LA instance identifier.
	WorkspaceId pulumi.StringInput `pulumi:"workspaceId"`
}

func (ItsmReceiverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ItsmReceiver)(nil)).Elem()
}

func (i ItsmReceiverArgs) ToItsmReceiverOutput() ItsmReceiverOutput {
	return i.ToItsmReceiverOutputWithContext(context.Background())
}

func (i ItsmReceiverArgs) ToItsmReceiverOutputWithContext(ctx context.Context) ItsmReceiverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ItsmReceiverOutput)
}

// ItsmReceiverArrayInput is an input type that accepts ItsmReceiverArray and ItsmReceiverArrayOutput values.
// You can construct a concrete instance of `ItsmReceiverArrayInput` via:
//
//          ItsmReceiverArray{ ItsmReceiverArgs{...} }
type ItsmReceiverArrayInput interface {
	pulumi.Input

	ToItsmReceiverArrayOutput() ItsmReceiverArrayOutput
	ToItsmReceiverArrayOutputWithContext(context.Context) ItsmReceiverArrayOutput
}

type ItsmReceiverArray []ItsmReceiverInput

func (ItsmReceiverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ItsmReceiver)(nil)).Elem()
}

func (i ItsmReceiverArray) ToItsmReceiverArrayOutput() ItsmReceiverArrayOutput {
	return i.ToItsmReceiverArrayOutputWithContext(context.Background())
}

func (i ItsmReceiverArray) ToItsmReceiverArrayOutputWithContext(ctx context.Context) ItsmReceiverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ItsmReceiverArrayOutput)
}

// An Itsm receiver.
type ItsmReceiverOutput struct{ *pulumi.OutputState }

func (ItsmReceiverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ItsmReceiver)(nil)).Elem()
}

func (o ItsmReceiverOutput) ToItsmReceiverOutput() ItsmReceiverOutput {
	return o
}

func (o ItsmReceiverOutput) ToItsmReceiverOutputWithContext(ctx context.Context) ItsmReceiverOutput {
	return o
}

// Unique identification of ITSM connection among multiple defined in above workspace.
func (o ItsmReceiverOutput) ConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v ItsmReceiver) string { return v.ConnectionId }).(pulumi.StringOutput)
}

// The name of the Itsm receiver. Names must be unique across all receivers within an action group.
func (o ItsmReceiverOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ItsmReceiver) string { return v.Name }).(pulumi.StringOutput)
}

// Region in which workspace resides. Supported values:'centralindia','japaneast','southeastasia','australiasoutheast','uksouth','westcentralus','canadacentral','eastus','westeurope'
func (o ItsmReceiverOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v ItsmReceiver) string { return v.Region }).(pulumi.StringOutput)
}

// JSON blob for the configurations of the ITSM action. CreateMultipleWorkItems option will be part of this blob as well.
func (o ItsmReceiverOutput) TicketConfiguration() pulumi.StringOutput {
	return o.ApplyT(func(v ItsmReceiver) string { return v.TicketConfiguration }).(pulumi.StringOutput)
}

// OMS LA instance identifier.
func (o ItsmReceiverOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v ItsmReceiver) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

type ItsmReceiverArrayOutput struct{ *pulumi.OutputState }

func (ItsmReceiverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ItsmReceiver)(nil)).Elem()
}

func (o ItsmReceiverArrayOutput) ToItsmReceiverArrayOutput() ItsmReceiverArrayOutput {
	return o
}

func (o ItsmReceiverArrayOutput) ToItsmReceiverArrayOutputWithContext(ctx context.Context) ItsmReceiverArrayOutput {
	return o
}

func (o ItsmReceiverArrayOutput) Index(i pulumi.IntInput) ItsmReceiverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ItsmReceiver {
		return vs[0].([]ItsmReceiver)[vs[1].(int)]
	}).(ItsmReceiverOutput)
}

// An Itsm receiver.
type ItsmReceiverResponse struct {
	// Unique identification of ITSM connection among multiple defined in above workspace.
	ConnectionId string `pulumi:"connectionId"`
	// The name of the Itsm receiver. Names must be unique across all receivers within an action group.
	Name string `pulumi:"name"`
	// Region in which workspace resides. Supported values:'centralindia','japaneast','southeastasia','australiasoutheast','uksouth','westcentralus','canadacentral','eastus','westeurope'
	Region string `pulumi:"region"`
	// JSON blob for the configurations of the ITSM action. CreateMultipleWorkItems option will be part of this blob as well.
	TicketConfiguration string `pulumi:"ticketConfiguration"`
	// OMS LA instance identifier.
	WorkspaceId string `pulumi:"workspaceId"`
}

// ItsmReceiverResponseInput is an input type that accepts ItsmReceiverResponseArgs and ItsmReceiverResponseOutput values.
// You can construct a concrete instance of `ItsmReceiverResponseInput` via:
//
//          ItsmReceiverResponseArgs{...}
type ItsmReceiverResponseInput interface {
	pulumi.Input

	ToItsmReceiverResponseOutput() ItsmReceiverResponseOutput
	ToItsmReceiverResponseOutputWithContext(context.Context) ItsmReceiverResponseOutput
}

// An Itsm receiver.
type ItsmReceiverResponseArgs struct {
	// Unique identification of ITSM connection among multiple defined in above workspace.
	ConnectionId pulumi.StringInput `pulumi:"connectionId"`
	// The name of the Itsm receiver. Names must be unique across all receivers within an action group.
	Name pulumi.StringInput `pulumi:"name"`
	// Region in which workspace resides. Supported values:'centralindia','japaneast','southeastasia','australiasoutheast','uksouth','westcentralus','canadacentral','eastus','westeurope'
	Region pulumi.StringInput `pulumi:"region"`
	// JSON blob for the configurations of the ITSM action. CreateMultipleWorkItems option will be part of this blob as well.
	TicketConfiguration pulumi.StringInput `pulumi:"ticketConfiguration"`
	// OMS LA instance identifier.
	WorkspaceId pulumi.StringInput `pulumi:"workspaceId"`
}

func (ItsmReceiverResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ItsmReceiverResponse)(nil)).Elem()
}

func (i ItsmReceiverResponseArgs) ToItsmReceiverResponseOutput() ItsmReceiverResponseOutput {
	return i.ToItsmReceiverResponseOutputWithContext(context.Background())
}

func (i ItsmReceiverResponseArgs) ToItsmReceiverResponseOutputWithContext(ctx context.Context) ItsmReceiverResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ItsmReceiverResponseOutput)
}

// ItsmReceiverResponseArrayInput is an input type that accepts ItsmReceiverResponseArray and ItsmReceiverResponseArrayOutput values.
// You can construct a concrete instance of `ItsmReceiverResponseArrayInput` via:
//
//          ItsmReceiverResponseArray{ ItsmReceiverResponseArgs{...} }
type ItsmReceiverResponseArrayInput interface {
	pulumi.Input

	ToItsmReceiverResponseArrayOutput() ItsmReceiverResponseArrayOutput
	ToItsmReceiverResponseArrayOutputWithContext(context.Context) ItsmReceiverResponseArrayOutput
}

type ItsmReceiverResponseArray []ItsmReceiverResponseInput

func (ItsmReceiverResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ItsmReceiverResponse)(nil)).Elem()
}

func (i ItsmReceiverResponseArray) ToItsmReceiverResponseArrayOutput() ItsmReceiverResponseArrayOutput {
	return i.ToItsmReceiverResponseArrayOutputWithContext(context.Background())
}

func (i ItsmReceiverResponseArray) ToItsmReceiverResponseArrayOutputWithContext(ctx context.Context) ItsmReceiverResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ItsmReceiverResponseArrayOutput)
}

// An Itsm receiver.
type ItsmReceiverResponseOutput struct{ *pulumi.OutputState }

func (ItsmReceiverResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ItsmReceiverResponse)(nil)).Elem()
}

func (o ItsmReceiverResponseOutput) ToItsmReceiverResponseOutput() ItsmReceiverResponseOutput {
	return o
}

func (o ItsmReceiverResponseOutput) ToItsmReceiverResponseOutputWithContext(ctx context.Context) ItsmReceiverResponseOutput {
	return o
}

// Unique identification of ITSM connection among multiple defined in above workspace.
func (o ItsmReceiverResponseOutput) ConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v ItsmReceiverResponse) string { return v.ConnectionId }).(pulumi.StringOutput)
}

// The name of the Itsm receiver. Names must be unique across all receivers within an action group.
func (o ItsmReceiverResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ItsmReceiverResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Region in which workspace resides. Supported values:'centralindia','japaneast','southeastasia','australiasoutheast','uksouth','westcentralus','canadacentral','eastus','westeurope'
func (o ItsmReceiverResponseOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v ItsmReceiverResponse) string { return v.Region }).(pulumi.StringOutput)
}

// JSON blob for the configurations of the ITSM action. CreateMultipleWorkItems option will be part of this blob as well.
func (o ItsmReceiverResponseOutput) TicketConfiguration() pulumi.StringOutput {
	return o.ApplyT(func(v ItsmReceiverResponse) string { return v.TicketConfiguration }).(pulumi.StringOutput)
}

// OMS LA instance identifier.
func (o ItsmReceiverResponseOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v ItsmReceiverResponse) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

type ItsmReceiverResponseArrayOutput struct{ *pulumi.OutputState }

func (ItsmReceiverResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ItsmReceiverResponse)(nil)).Elem()
}

func (o ItsmReceiverResponseArrayOutput) ToItsmReceiverResponseArrayOutput() ItsmReceiverResponseArrayOutput {
	return o
}

func (o ItsmReceiverResponseArrayOutput) ToItsmReceiverResponseArrayOutputWithContext(ctx context.Context) ItsmReceiverResponseArrayOutput {
	return o
}

func (o ItsmReceiverResponseArrayOutput) Index(i pulumi.IntInput) ItsmReceiverResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ItsmReceiverResponse {
		return vs[0].([]ItsmReceiverResponse)[vs[1].(int)]
	}).(ItsmReceiverResponseOutput)
}

// An SMS receiver.
type SmsReceiver struct {
	// The country code of the SMS receiver.
	CountryCode string `pulumi:"countryCode"`
	// The name of the SMS receiver. Names must be unique across all receivers within an action group.
	Name string `pulumi:"name"`
	// The phone number of the SMS receiver.
	PhoneNumber string `pulumi:"phoneNumber"`
}

// SmsReceiverInput is an input type that accepts SmsReceiverArgs and SmsReceiverOutput values.
// You can construct a concrete instance of `SmsReceiverInput` via:
//
//          SmsReceiverArgs{...}
type SmsReceiverInput interface {
	pulumi.Input

	ToSmsReceiverOutput() SmsReceiverOutput
	ToSmsReceiverOutputWithContext(context.Context) SmsReceiverOutput
}

// An SMS receiver.
type SmsReceiverArgs struct {
	// The country code of the SMS receiver.
	CountryCode pulumi.StringInput `pulumi:"countryCode"`
	// The name of the SMS receiver. Names must be unique across all receivers within an action group.
	Name pulumi.StringInput `pulumi:"name"`
	// The phone number of the SMS receiver.
	PhoneNumber pulumi.StringInput `pulumi:"phoneNumber"`
}

func (SmsReceiverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SmsReceiver)(nil)).Elem()
}

func (i SmsReceiverArgs) ToSmsReceiverOutput() SmsReceiverOutput {
	return i.ToSmsReceiverOutputWithContext(context.Background())
}

func (i SmsReceiverArgs) ToSmsReceiverOutputWithContext(ctx context.Context) SmsReceiverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmsReceiverOutput)
}

// SmsReceiverArrayInput is an input type that accepts SmsReceiverArray and SmsReceiverArrayOutput values.
// You can construct a concrete instance of `SmsReceiverArrayInput` via:
//
//          SmsReceiverArray{ SmsReceiverArgs{...} }
type SmsReceiverArrayInput interface {
	pulumi.Input

	ToSmsReceiverArrayOutput() SmsReceiverArrayOutput
	ToSmsReceiverArrayOutputWithContext(context.Context) SmsReceiverArrayOutput
}

type SmsReceiverArray []SmsReceiverInput

func (SmsReceiverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SmsReceiver)(nil)).Elem()
}

func (i SmsReceiverArray) ToSmsReceiverArrayOutput() SmsReceiverArrayOutput {
	return i.ToSmsReceiverArrayOutputWithContext(context.Background())
}

func (i SmsReceiverArray) ToSmsReceiverArrayOutputWithContext(ctx context.Context) SmsReceiverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmsReceiverArrayOutput)
}

// An SMS receiver.
type SmsReceiverOutput struct{ *pulumi.OutputState }

func (SmsReceiverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SmsReceiver)(nil)).Elem()
}

func (o SmsReceiverOutput) ToSmsReceiverOutput() SmsReceiverOutput {
	return o
}

func (o SmsReceiverOutput) ToSmsReceiverOutputWithContext(ctx context.Context) SmsReceiverOutput {
	return o
}

// The country code of the SMS receiver.
func (o SmsReceiverOutput) CountryCode() pulumi.StringOutput {
	return o.ApplyT(func(v SmsReceiver) string { return v.CountryCode }).(pulumi.StringOutput)
}

// The name of the SMS receiver. Names must be unique across all receivers within an action group.
func (o SmsReceiverOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SmsReceiver) string { return v.Name }).(pulumi.StringOutput)
}

// The phone number of the SMS receiver.
func (o SmsReceiverOutput) PhoneNumber() pulumi.StringOutput {
	return o.ApplyT(func(v SmsReceiver) string { return v.PhoneNumber }).(pulumi.StringOutput)
}

type SmsReceiverArrayOutput struct{ *pulumi.OutputState }

func (SmsReceiverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SmsReceiver)(nil)).Elem()
}

func (o SmsReceiverArrayOutput) ToSmsReceiverArrayOutput() SmsReceiverArrayOutput {
	return o
}

func (o SmsReceiverArrayOutput) ToSmsReceiverArrayOutputWithContext(ctx context.Context) SmsReceiverArrayOutput {
	return o
}

func (o SmsReceiverArrayOutput) Index(i pulumi.IntInput) SmsReceiverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SmsReceiver {
		return vs[0].([]SmsReceiver)[vs[1].(int)]
	}).(SmsReceiverOutput)
}

// An SMS receiver.
type SmsReceiverResponse struct {
	// The country code of the SMS receiver.
	CountryCode string `pulumi:"countryCode"`
	// The name of the SMS receiver. Names must be unique across all receivers within an action group.
	Name string `pulumi:"name"`
	// The phone number of the SMS receiver.
	PhoneNumber string `pulumi:"phoneNumber"`
	// The status of the receiver.
	Status string `pulumi:"status"`
}

// SmsReceiverResponseInput is an input type that accepts SmsReceiverResponseArgs and SmsReceiverResponseOutput values.
// You can construct a concrete instance of `SmsReceiverResponseInput` via:
//
//          SmsReceiverResponseArgs{...}
type SmsReceiverResponseInput interface {
	pulumi.Input

	ToSmsReceiverResponseOutput() SmsReceiverResponseOutput
	ToSmsReceiverResponseOutputWithContext(context.Context) SmsReceiverResponseOutput
}

// An SMS receiver.
type SmsReceiverResponseArgs struct {
	// The country code of the SMS receiver.
	CountryCode pulumi.StringInput `pulumi:"countryCode"`
	// The name of the SMS receiver. Names must be unique across all receivers within an action group.
	Name pulumi.StringInput `pulumi:"name"`
	// The phone number of the SMS receiver.
	PhoneNumber pulumi.StringInput `pulumi:"phoneNumber"`
	// The status of the receiver.
	Status pulumi.StringInput `pulumi:"status"`
}

func (SmsReceiverResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SmsReceiverResponse)(nil)).Elem()
}

func (i SmsReceiverResponseArgs) ToSmsReceiverResponseOutput() SmsReceiverResponseOutput {
	return i.ToSmsReceiverResponseOutputWithContext(context.Background())
}

func (i SmsReceiverResponseArgs) ToSmsReceiverResponseOutputWithContext(ctx context.Context) SmsReceiverResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmsReceiverResponseOutput)
}

// SmsReceiverResponseArrayInput is an input type that accepts SmsReceiverResponseArray and SmsReceiverResponseArrayOutput values.
// You can construct a concrete instance of `SmsReceiverResponseArrayInput` via:
//
//          SmsReceiverResponseArray{ SmsReceiverResponseArgs{...} }
type SmsReceiverResponseArrayInput interface {
	pulumi.Input

	ToSmsReceiverResponseArrayOutput() SmsReceiverResponseArrayOutput
	ToSmsReceiverResponseArrayOutputWithContext(context.Context) SmsReceiverResponseArrayOutput
}

type SmsReceiverResponseArray []SmsReceiverResponseInput

func (SmsReceiverResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SmsReceiverResponse)(nil)).Elem()
}

func (i SmsReceiverResponseArray) ToSmsReceiverResponseArrayOutput() SmsReceiverResponseArrayOutput {
	return i.ToSmsReceiverResponseArrayOutputWithContext(context.Background())
}

func (i SmsReceiverResponseArray) ToSmsReceiverResponseArrayOutputWithContext(ctx context.Context) SmsReceiverResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmsReceiverResponseArrayOutput)
}

// An SMS receiver.
type SmsReceiverResponseOutput struct{ *pulumi.OutputState }

func (SmsReceiverResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SmsReceiverResponse)(nil)).Elem()
}

func (o SmsReceiverResponseOutput) ToSmsReceiverResponseOutput() SmsReceiverResponseOutput {
	return o
}

func (o SmsReceiverResponseOutput) ToSmsReceiverResponseOutputWithContext(ctx context.Context) SmsReceiverResponseOutput {
	return o
}

// The country code of the SMS receiver.
func (o SmsReceiverResponseOutput) CountryCode() pulumi.StringOutput {
	return o.ApplyT(func(v SmsReceiverResponse) string { return v.CountryCode }).(pulumi.StringOutput)
}

// The name of the SMS receiver. Names must be unique across all receivers within an action group.
func (o SmsReceiverResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SmsReceiverResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The phone number of the SMS receiver.
func (o SmsReceiverResponseOutput) PhoneNumber() pulumi.StringOutput {
	return o.ApplyT(func(v SmsReceiverResponse) string { return v.PhoneNumber }).(pulumi.StringOutput)
}

// The status of the receiver.
func (o SmsReceiverResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v SmsReceiverResponse) string { return v.Status }).(pulumi.StringOutput)
}

type SmsReceiverResponseArrayOutput struct{ *pulumi.OutputState }

func (SmsReceiverResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SmsReceiverResponse)(nil)).Elem()
}

func (o SmsReceiverResponseArrayOutput) ToSmsReceiverResponseArrayOutput() SmsReceiverResponseArrayOutput {
	return o
}

func (o SmsReceiverResponseArrayOutput) ToSmsReceiverResponseArrayOutputWithContext(ctx context.Context) SmsReceiverResponseArrayOutput {
	return o
}

func (o SmsReceiverResponseArrayOutput) Index(i pulumi.IntInput) SmsReceiverResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SmsReceiverResponse {
		return vs[0].([]SmsReceiverResponse)[vs[1].(int)]
	}).(SmsReceiverResponseOutput)
}

// A webhook receiver.
type WebhookReceiver struct {
	// The name of the webhook receiver. Names must be unique across all receivers within an action group.
	Name string `pulumi:"name"`
	// The URI where webhooks should be sent.
	ServiceUri string `pulumi:"serviceUri"`
}

// WebhookReceiverInput is an input type that accepts WebhookReceiverArgs and WebhookReceiverOutput values.
// You can construct a concrete instance of `WebhookReceiverInput` via:
//
//          WebhookReceiverArgs{...}
type WebhookReceiverInput interface {
	pulumi.Input

	ToWebhookReceiverOutput() WebhookReceiverOutput
	ToWebhookReceiverOutputWithContext(context.Context) WebhookReceiverOutput
}

// A webhook receiver.
type WebhookReceiverArgs struct {
	// The name of the webhook receiver. Names must be unique across all receivers within an action group.
	Name pulumi.StringInput `pulumi:"name"`
	// The URI where webhooks should be sent.
	ServiceUri pulumi.StringInput `pulumi:"serviceUri"`
}

func (WebhookReceiverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookReceiver)(nil)).Elem()
}

func (i WebhookReceiverArgs) ToWebhookReceiverOutput() WebhookReceiverOutput {
	return i.ToWebhookReceiverOutputWithContext(context.Background())
}

func (i WebhookReceiverArgs) ToWebhookReceiverOutputWithContext(ctx context.Context) WebhookReceiverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookReceiverOutput)
}

// WebhookReceiverArrayInput is an input type that accepts WebhookReceiverArray and WebhookReceiverArrayOutput values.
// You can construct a concrete instance of `WebhookReceiverArrayInput` via:
//
//          WebhookReceiverArray{ WebhookReceiverArgs{...} }
type WebhookReceiverArrayInput interface {
	pulumi.Input

	ToWebhookReceiverArrayOutput() WebhookReceiverArrayOutput
	ToWebhookReceiverArrayOutputWithContext(context.Context) WebhookReceiverArrayOutput
}

type WebhookReceiverArray []WebhookReceiverInput

func (WebhookReceiverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebhookReceiver)(nil)).Elem()
}

func (i WebhookReceiverArray) ToWebhookReceiverArrayOutput() WebhookReceiverArrayOutput {
	return i.ToWebhookReceiverArrayOutputWithContext(context.Background())
}

func (i WebhookReceiverArray) ToWebhookReceiverArrayOutputWithContext(ctx context.Context) WebhookReceiverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookReceiverArrayOutput)
}

// A webhook receiver.
type WebhookReceiverOutput struct{ *pulumi.OutputState }

func (WebhookReceiverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookReceiver)(nil)).Elem()
}

func (o WebhookReceiverOutput) ToWebhookReceiverOutput() WebhookReceiverOutput {
	return o
}

func (o WebhookReceiverOutput) ToWebhookReceiverOutputWithContext(ctx context.Context) WebhookReceiverOutput {
	return o
}

// The name of the webhook receiver. Names must be unique across all receivers within an action group.
func (o WebhookReceiverOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookReceiver) string { return v.Name }).(pulumi.StringOutput)
}

// The URI where webhooks should be sent.
func (o WebhookReceiverOutput) ServiceUri() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookReceiver) string { return v.ServiceUri }).(pulumi.StringOutput)
}

type WebhookReceiverArrayOutput struct{ *pulumi.OutputState }

func (WebhookReceiverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebhookReceiver)(nil)).Elem()
}

func (o WebhookReceiverArrayOutput) ToWebhookReceiverArrayOutput() WebhookReceiverArrayOutput {
	return o
}

func (o WebhookReceiverArrayOutput) ToWebhookReceiverArrayOutputWithContext(ctx context.Context) WebhookReceiverArrayOutput {
	return o
}

func (o WebhookReceiverArrayOutput) Index(i pulumi.IntInput) WebhookReceiverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebhookReceiver {
		return vs[0].([]WebhookReceiver)[vs[1].(int)]
	}).(WebhookReceiverOutput)
}

// A webhook receiver.
type WebhookReceiverResponse struct {
	// The name of the webhook receiver. Names must be unique across all receivers within an action group.
	Name string `pulumi:"name"`
	// The URI where webhooks should be sent.
	ServiceUri string `pulumi:"serviceUri"`
}

// WebhookReceiverResponseInput is an input type that accepts WebhookReceiverResponseArgs and WebhookReceiverResponseOutput values.
// You can construct a concrete instance of `WebhookReceiverResponseInput` via:
//
//          WebhookReceiverResponseArgs{...}
type WebhookReceiverResponseInput interface {
	pulumi.Input

	ToWebhookReceiverResponseOutput() WebhookReceiverResponseOutput
	ToWebhookReceiverResponseOutputWithContext(context.Context) WebhookReceiverResponseOutput
}

// A webhook receiver.
type WebhookReceiverResponseArgs struct {
	// The name of the webhook receiver. Names must be unique across all receivers within an action group.
	Name pulumi.StringInput `pulumi:"name"`
	// The URI where webhooks should be sent.
	ServiceUri pulumi.StringInput `pulumi:"serviceUri"`
}

func (WebhookReceiverResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookReceiverResponse)(nil)).Elem()
}

func (i WebhookReceiverResponseArgs) ToWebhookReceiverResponseOutput() WebhookReceiverResponseOutput {
	return i.ToWebhookReceiverResponseOutputWithContext(context.Background())
}

func (i WebhookReceiverResponseArgs) ToWebhookReceiverResponseOutputWithContext(ctx context.Context) WebhookReceiverResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookReceiverResponseOutput)
}

// WebhookReceiverResponseArrayInput is an input type that accepts WebhookReceiverResponseArray and WebhookReceiverResponseArrayOutput values.
// You can construct a concrete instance of `WebhookReceiverResponseArrayInput` via:
//
//          WebhookReceiverResponseArray{ WebhookReceiverResponseArgs{...} }
type WebhookReceiverResponseArrayInput interface {
	pulumi.Input

	ToWebhookReceiverResponseArrayOutput() WebhookReceiverResponseArrayOutput
	ToWebhookReceiverResponseArrayOutputWithContext(context.Context) WebhookReceiverResponseArrayOutput
}

type WebhookReceiverResponseArray []WebhookReceiverResponseInput

func (WebhookReceiverResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebhookReceiverResponse)(nil)).Elem()
}

func (i WebhookReceiverResponseArray) ToWebhookReceiverResponseArrayOutput() WebhookReceiverResponseArrayOutput {
	return i.ToWebhookReceiverResponseArrayOutputWithContext(context.Background())
}

func (i WebhookReceiverResponseArray) ToWebhookReceiverResponseArrayOutputWithContext(ctx context.Context) WebhookReceiverResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookReceiverResponseArrayOutput)
}

// A webhook receiver.
type WebhookReceiverResponseOutput struct{ *pulumi.OutputState }

func (WebhookReceiverResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookReceiverResponse)(nil)).Elem()
}

func (o WebhookReceiverResponseOutput) ToWebhookReceiverResponseOutput() WebhookReceiverResponseOutput {
	return o
}

func (o WebhookReceiverResponseOutput) ToWebhookReceiverResponseOutputWithContext(ctx context.Context) WebhookReceiverResponseOutput {
	return o
}

// The name of the webhook receiver. Names must be unique across all receivers within an action group.
func (o WebhookReceiverResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookReceiverResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The URI where webhooks should be sent.
func (o WebhookReceiverResponseOutput) ServiceUri() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookReceiverResponse) string { return v.ServiceUri }).(pulumi.StringOutput)
}

type WebhookReceiverResponseArrayOutput struct{ *pulumi.OutputState }

func (WebhookReceiverResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebhookReceiverResponse)(nil)).Elem()
}

func (o WebhookReceiverResponseArrayOutput) ToWebhookReceiverResponseArrayOutput() WebhookReceiverResponseArrayOutput {
	return o
}

func (o WebhookReceiverResponseArrayOutput) ToWebhookReceiverResponseArrayOutputWithContext(ctx context.Context) WebhookReceiverResponseArrayOutput {
	return o
}

func (o WebhookReceiverResponseArrayOutput) Index(i pulumi.IntInput) WebhookReceiverResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebhookReceiverResponse {
		return vs[0].([]WebhookReceiverResponse)[vs[1].(int)]
	}).(WebhookReceiverResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(ActionGroupTypeOutput{})
	pulumi.RegisterOutputType(ActionGroupResponseOutput{})
	pulumi.RegisterOutputType(ActionGroupResponsePtrOutput{})
	pulumi.RegisterOutputType(ActivityLogAlertTypeOutput{})
	pulumi.RegisterOutputType(ActivityLogAlertActionGroupOutput{})
	pulumi.RegisterOutputType(ActivityLogAlertActionGroupArrayOutput{})
	pulumi.RegisterOutputType(ActivityLogAlertActionGroupResponseOutput{})
	pulumi.RegisterOutputType(ActivityLogAlertActionGroupResponseArrayOutput{})
	pulumi.RegisterOutputType(ActivityLogAlertActionListOutput{})
	pulumi.RegisterOutputType(ActivityLogAlertActionListPtrOutput{})
	pulumi.RegisterOutputType(ActivityLogAlertActionListResponseOutput{})
	pulumi.RegisterOutputType(ActivityLogAlertActionListResponsePtrOutput{})
	pulumi.RegisterOutputType(ActivityLogAlertAllOfConditionOutput{})
	pulumi.RegisterOutputType(ActivityLogAlertAllOfConditionPtrOutput{})
	pulumi.RegisterOutputType(ActivityLogAlertAllOfConditionResponseOutput{})
	pulumi.RegisterOutputType(ActivityLogAlertAllOfConditionResponsePtrOutput{})
	pulumi.RegisterOutputType(ActivityLogAlertLeafConditionOutput{})
	pulumi.RegisterOutputType(ActivityLogAlertLeafConditionArrayOutput{})
	pulumi.RegisterOutputType(ActivityLogAlertLeafConditionResponseOutput{})
	pulumi.RegisterOutputType(ActivityLogAlertLeafConditionResponseArrayOutput{})
	pulumi.RegisterOutputType(ActivityLogAlertResponseOutput{})
	pulumi.RegisterOutputType(ActivityLogAlertResponsePtrOutput{})
	pulumi.RegisterOutputType(AutomationRunbookReceiverOutput{})
	pulumi.RegisterOutputType(AutomationRunbookReceiverArrayOutput{})
	pulumi.RegisterOutputType(AutomationRunbookReceiverResponseOutput{})
	pulumi.RegisterOutputType(AutomationRunbookReceiverResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureAppPushReceiverOutput{})
	pulumi.RegisterOutputType(AzureAppPushReceiverArrayOutput{})
	pulumi.RegisterOutputType(AzureAppPushReceiverResponseOutput{})
	pulumi.RegisterOutputType(AzureAppPushReceiverResponseArrayOutput{})
	pulumi.RegisterOutputType(EmailReceiverOutput{})
	pulumi.RegisterOutputType(EmailReceiverArrayOutput{})
	pulumi.RegisterOutputType(EmailReceiverResponseOutput{})
	pulumi.RegisterOutputType(EmailReceiverResponseArrayOutput{})
	pulumi.RegisterOutputType(ItsmReceiverOutput{})
	pulumi.RegisterOutputType(ItsmReceiverArrayOutput{})
	pulumi.RegisterOutputType(ItsmReceiverResponseOutput{})
	pulumi.RegisterOutputType(ItsmReceiverResponseArrayOutput{})
	pulumi.RegisterOutputType(SmsReceiverOutput{})
	pulumi.RegisterOutputType(SmsReceiverArrayOutput{})
	pulumi.RegisterOutputType(SmsReceiverResponseOutput{})
	pulumi.RegisterOutputType(SmsReceiverResponseArrayOutput{})
	pulumi.RegisterOutputType(WebhookReceiverOutput{})
	pulumi.RegisterOutputType(WebhookReceiverArrayOutput{})
	pulumi.RegisterOutputType(WebhookReceiverResponseOutput{})
	pulumi.RegisterOutputType(WebhookReceiverResponseArrayOutput{})
}
