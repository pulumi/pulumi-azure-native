
[TestVnetGen - 1]
{
 "config": {
  "variables": {
   "auxiliaryTenantIds": {
    "description": "Any additional Tenant IDs which should be used for authentication.",
    "items": {
     "type": "string"
    },
    "type": "array"
   },
   "clientCertificatePassword": {
    "description": "The password associated with the Client Certificate. For use when authenticating as a Service Principal using a Client Certificate",
    "secret": true,
    "type": "string"
   },
   "clientCertificatePath": {
    "description": "The path to the Client Certificate associated with the Service Principal for use when authenticating as a Service Principal using a Client Certificate.",
    "type": "string"
   },
   "clientId": {
    "description": "The Client ID which should be used.",
    "secret": true,
    "type": "string"
   },
   "clientSecret": {
    "description": "The Client Secret which should be used. For use when authenticating as a Service Principal using a Client Secret.",
    "secret": true,
    "type": "string"
   },
   "disablePulumiPartnerId": {
    "description": "This will disable the Pulumi Partner ID which is used if a custom `partnerId` isn't specified.",
    "type": "boolean"
   },
   "environment": {
    "description": "The Cloud Environment which should be used. Possible values are public, usgovernment, and china. Defaults to public.",
    "type": "string"
   },
   "location": {
    "description": "The location to use. ResourceGroups will consult this property for a default location, if one was not supplied explicitly when defining the resource.",
    "type": "string"
   },
   "metadataHost": {
    "description": "The Hostname of the Azure Metadata Service.",
    "type": "string"
   },
   "msiEndpoint": {
    "description": "The path to a custom endpoint for Managed Service Identity - in most circumstances this should be detected automatically.",
    "type": "string"
   },
   "oidcRequestToken": {
    "description": "Your cloud service or provider's bearer token to exchange for an OIDC ID token.",
    "type": "string"
   },
   "oidcRequestUrl": {
    "description": "The URL to initiate the OIDC token exchange. ",
    "type": "string"
   },
   "oidcToken": {
    "description": "The OIDC token to exchange for an Azure token.",
    "type": "string"
   },
   "oidcTokenFilePath": {
    "description": "The path to a file containing an OIDC token to exchange for an Azure token.",
    "type": "string"
   },
   "partnerId": {
    "description": "A GUID/UUID that is registered with Microsoft to facilitate partner resource usage attribution.",
    "type": "string"
   },
   "subscriptionId": {
    "description": "The Subscription ID which should be used.",
    "type": "string"
   },
   "tenantId": {
    "description": "The Tenant ID which should be used.",
    "type": "string"
   },
   "useMsi": {
    "description": "Allow Managed Service Identity be used for Authentication.",
    "type": "boolean"
   },
   "useOidc": {
    "description": "Allow OpenID Connect (OIDC) to be used for Authentication.",
    "type": "boolean"
   }
  }
 },
 "description": "A native Pulumi package for creating and managing Azure resources.",
 "displayName": "Azure Native",
 "functions": {
  "azure-native:authorization:getClientConfig": {
   "description": "Use this function to access the current configuration of the native Azure provider.",
   "outputs": {
    "description": "Configuration values returned by getClientConfig.",
    "properties": {
     "clientId": {
      "description": "Azure Client ID (Application Object ID).",
      "type": "string"
     },
     "objectId": {
      "description": "Azure Object ID of the current user or service principal.",
      "type": "string"
     },
     "subscriptionId": {
      "description": "Azure Subscription ID",
      "type": "string"
     },
     "tenantId": {
      "description": "Azure Tenant ID",
      "type": "string"
     }
    },
    "required": [
     "clientId",
     "objectId",
     "subscriptionId",
     "tenantId"
    ],
    "type": "object"
   }
  },
  "azure-native:authorization:getClientToken": {
   "description": "Use this function to get an Azure authentication token for the current login context.",
   "inputs": {
    "properties": {
     "endpoint": {
      "description": "Optional authentication endpoint. Defaults to the endpoint of Azure Resource Manager.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "outputs": {
    "description": "Configuration values returned by getClientToken.",
    "properties": {
     "token": {
      "description": "OAuth token for Azure Management API and SDK authentication.",
      "type": "string"
     }
    },
    "required": [
     "token"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getAdminRule": {
   "description": "Gets a network manager security configuration admin rule.",
   "inputs": {
    "properties": {
     "configurationName": {
      "description": "The name of the network manager Security Configuration.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "networkManagerName": {
      "description": "The name of the network manager.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "ruleCollectionName": {
      "description": "The name of the network manager security Configuration rule collection.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "ruleName": {
      "description": "The name of the rule.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "configurationName",
     "networkManagerName",
     "resourceGroupName",
     "ruleCollectionName",
     "ruleName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Network admin rule.",
    "properties": {
     "access": {
      "description": "Indicates the access allowed for this particular rule",
      "type": "string"
     },
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "description": {
      "description": "A description for this rule. Restricted to 140 chars.",
      "type": "string"
     },
     "destinationPortRanges": {
      "description": "The destination port ranges.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "destinations": {
      "description": "The destination address prefixes. CIDR or destination IP ranges.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:AddressPrefixItemResponse",
       "type": "object"
      },
      "type": "array"
     },
     "direction": {
      "description": "Indicates if the traffic matched against the rule in inbound or outbound.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "kind": {
      "const": "Custom",
      "description": "Whether the rule is custom or default.\nExpected value is 'Custom'.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "priority": {
      "description": "The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
      "type": "integer"
     },
     "protocol": {
      "description": "Network protocol this rule applies to.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the resource.",
      "type": "string"
     },
     "resourceGuid": {
      "description": "Unique identifier for this resource.",
      "type": "string"
     },
     "sourcePortRanges": {
      "description": "The source port ranges.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "sources": {
      "description": "The CIDR or source IP ranges.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:AddressPrefixItemResponse",
       "type": "object"
      },
      "type": "array"
     },
     "systemData": {
      "$ref": "#/types/azure-native_network_v20230201:network:SystemDataResponse",
      "description": "The system metadata related to this resource.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     }
    },
    "required": [
     "access",
     "azureApiVersion",
     "direction",
     "etag",
     "id",
     "kind",
     "name",
     "priority",
     "protocol",
     "provisioningState",
     "resourceGuid",
     "systemData",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getAdminRuleCollection": {
   "description": "Gets a network manager security admin configuration rule collection.",
   "inputs": {
    "properties": {
     "configurationName": {
      "description": "The name of the network manager Security Configuration.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "networkManagerName": {
      "description": "The name of the network manager.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "ruleCollectionName": {
      "description": "The name of the network manager security Configuration rule collection.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "configurationName",
     "networkManagerName",
     "resourceGroupName",
     "ruleCollectionName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Defines the admin rule collection.",
    "properties": {
     "appliesToGroups": {
      "description": "Groups for configuration",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:NetworkManagerSecurityGroupItemResponse",
       "type": "object"
      },
      "type": "array"
     },
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "description": {
      "description": "A description of the admin rule collection.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the resource.",
      "type": "string"
     },
     "resourceGuid": {
      "description": "Unique identifier for this resource.",
      "type": "string"
     },
     "systemData": {
      "$ref": "#/types/azure-native_network_v20230201:network:SystemDataResponse",
      "description": "The system metadata related to this resource.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     }
    },
    "required": [
     "appliesToGroups",
     "azureApiVersion",
     "etag",
     "id",
     "name",
     "provisioningState",
     "resourceGuid",
     "systemData",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getApplicationGateway": {
   "description": "Gets the specified application gateway.",
   "inputs": {
    "properties": {
     "applicationGatewayName": {
      "description": "The name of the application gateway.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "applicationGatewayName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Application gateway resource.",
    "properties": {
     "authenticationCertificates": {
      "description": "Authentication certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayAuthenticationCertificateResponse",
       "type": "object"
      },
      "type": "array"
     },
     "autoscaleConfiguration": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayAutoscaleConfigurationResponse",
      "description": "Autoscale Configuration.",
      "type": "object"
     },
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "backendAddressPools": {
      "description": "Backend address pool of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayBackendAddressPoolResponse",
       "type": "object"
      },
      "type": "array"
     },
     "backendHttpSettingsCollection": {
      "description": "Backend http settings of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayBackendHttpSettingsResponse",
       "type": "object"
      },
      "type": "array"
     },
     "backendSettingsCollection": {
      "description": "Backend settings of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayBackendSettingsResponse",
       "type": "object"
      },
      "type": "array"
     },
     "customErrorConfigurations": {
      "description": "Custom error configurations of the application gateway resource.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayCustomErrorResponse",
       "type": "object"
      },
      "type": "array"
     },
     "defaultPredefinedSslPolicy": {
      "description": "The default predefined SSL Policy applied on the application gateway resource.",
      "type": "string"
     },
     "enableFips": {
      "description": "Whether FIPS is enabled on the application gateway resource.",
      "type": "boolean"
     },
     "enableHttp2": {
      "description": "Whether HTTP2 is enabled on the application gateway resource.",
      "type": "boolean"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "firewallPolicy": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "description": "Reference to the FirewallPolicy resource.",
      "type": "object"
     },
     "forceFirewallPolicyAssociation": {
      "description": "If true, associates a firewall policy with an application gateway regardless whether the policy differs from the WAF Config.",
      "type": "boolean"
     },
     "frontendIPConfigurations": {
      "description": "Frontend IP addresses of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayFrontendIPConfigurationResponse",
       "type": "object"
      },
      "type": "array"
     },
     "frontendPorts": {
      "description": "Frontend ports of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayFrontendPortResponse",
       "type": "object"
      },
      "type": "array"
     },
     "gatewayIPConfigurations": {
      "description": "Subnets of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayIPConfigurationResponse",
       "type": "object"
      },
      "type": "array"
     },
     "globalConfiguration": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayGlobalConfigurationResponse",
      "description": "Global Configuration.",
      "type": "object"
     },
     "httpListeners": {
      "description": "Http listeners of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayHttpListenerResponse",
       "type": "object"
      },
      "type": "array"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "identity": {
      "$ref": "#/types/azure-native_network_v20230201:network:ManagedServiceIdentityResponse",
      "description": "The identity of the application gateway, if configured.",
      "type": "object"
     },
     "listeners": {
      "description": "Listeners of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayListenerResponse",
       "type": "object"
      },
      "type": "array"
     },
     "loadDistributionPolicies": {
      "description": "Load distribution policies of the application gateway resource.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayLoadDistributionPolicyResponse",
       "type": "object"
      },
      "type": "array"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "operationalState": {
      "description": "Operational state of the application gateway resource.",
      "type": "string"
     },
     "privateEndpointConnections": {
      "description": "Private Endpoint connections on application gateway.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayPrivateEndpointConnectionResponse",
       "type": "object"
      },
      "type": "array"
     },
     "privateLinkConfigurations": {
      "description": "PrivateLink configurations on application gateway.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayPrivateLinkConfigurationResponse",
       "type": "object"
      },
      "type": "array"
     },
     "probes": {
      "description": "Probes of the application gateway resource.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayProbeResponse",
       "type": "object"
      },
      "type": "array"
     },
     "provisioningState": {
      "description": "The provisioning state of the application gateway resource.",
      "type": "string"
     },
     "redirectConfigurations": {
      "description": "Redirect configurations of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayRedirectConfigurationResponse",
       "type": "object"
      },
      "type": "array"
     },
     "requestRoutingRules": {
      "description": "Request routing rules of the application gateway resource.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayRequestRoutingRuleResponse",
       "type": "object"
      },
      "type": "array"
     },
     "resourceGuid": {
      "description": "The resource GUID property of the application gateway resource.",
      "type": "string"
     },
     "rewriteRuleSets": {
      "description": "Rewrite rules for the application gateway resource.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayRewriteRuleSetResponse",
       "type": "object"
      },
      "type": "array"
     },
     "routingRules": {
      "description": "Routing rules of the application gateway resource.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayRoutingRuleResponse",
       "type": "object"
      },
      "type": "array"
     },
     "sku": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewaySkuResponse",
      "description": "SKU of the application gateway resource.",
      "type": "object"
     },
     "sslCertificates": {
      "description": "SSL certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewaySslCertificateResponse",
       "type": "object"
      },
      "type": "array"
     },
     "sslPolicy": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewaySslPolicyResponse",
      "description": "SSL policy of the application gateway resource.",
      "type": "object"
     },
     "sslProfiles": {
      "description": "SSL profiles of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewaySslProfileResponse",
       "type": "object"
      },
      "type": "array"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Resource tags.",
      "type": "object"
     },
     "trustedClientCertificates": {
      "description": "Trusted client certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayTrustedClientCertificateResponse",
       "type": "object"
      },
      "type": "array"
     },
     "trustedRootCertificates": {
      "description": "Trusted Root certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayTrustedRootCertificateResponse",
       "type": "object"
      },
      "type": "array"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     },
     "urlPathMaps": {
      "description": "URL path map of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayUrlPathMapResponse",
       "type": "object"
      },
      "type": "array"
     },
     "webApplicationFirewallConfiguration": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayWebApplicationFirewallConfigurationResponse",
      "description": "Web application firewall configuration.",
      "type": "object"
     },
     "zones": {
      "description": "A list of availability zones denoting where the resource needs to come from.",
      "items": {
       "type": "string"
      },
      "type": "array"
     }
    },
    "required": [
     "azureApiVersion",
     "defaultPredefinedSslPolicy",
     "etag",
     "name",
     "operationalState",
     "privateEndpointConnections",
     "provisioningState",
     "resourceGuid",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getApplicationGatewayPrivateEndpointConnection": {
   "description": "Gets the specified private endpoint connection on application gateway.",
   "inputs": {
    "properties": {
     "applicationGatewayName": {
      "description": "The name of the application gateway.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "connectionName": {
      "description": "The name of the application gateway private endpoint connection.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "applicationGatewayName",
     "connectionName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Private Endpoint connection on an application gateway.",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "linkIdentifier": {
      "description": "The consumer link id.",
      "type": "string"
     },
     "name": {
      "description": "Name of the private endpoint connection on an application gateway.",
      "type": "string"
     },
     "privateEndpoint": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateEndpointResponse",
      "description": "The resource of private end point.",
      "type": "object"
     },
     "privateLinkServiceConnectionState": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceConnectionStateResponse",
      "description": "A collection of information about the state of the connection between service consumer and provider.",
      "type": "object"
     },
     "provisioningState": {
      "description": "The provisioning state of the application gateway private endpoint connection resource.",
      "type": "string"
     },
     "type": {
      "description": "Type of the resource.",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "linkIdentifier",
     "privateEndpoint",
     "provisioningState",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getApplicationSecurityGroup": {
   "description": "Gets information about the specified application security group.",
   "inputs": {
    "properties": {
     "applicationSecurityGroupName": {
      "description": "The name of the application security group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "applicationSecurityGroupName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "An application security group in a resource group.",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the application security group resource.",
      "type": "string"
     },
     "resourceGuid": {
      "description": "The resource GUID property of the application security group resource. It uniquely identifies a resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.",
      "type": "string"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Resource tags.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "name",
     "provisioningState",
     "resourceGuid",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getAzureFirewall": {
   "description": "Gets the specified Azure Firewall.",
   "inputs": {
    "properties": {
     "azureFirewallName": {
      "description": "The name of the Azure Firewall.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "azureFirewallName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Azure Firewall resource.",
    "properties": {
     "additionalProperties": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "The additional properties used to further config this azure firewall.",
      "type": "object"
     },
     "applicationRuleCollections": {
      "description": "Collection of application rule collections used by Azure Firewall.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallApplicationRuleCollectionResponse",
       "type": "object"
      },
      "type": "array"
     },
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "firewallPolicy": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "description": "The firewallPolicy associated with this azure firewall.",
      "type": "object"
     },
     "hubIPAddresses": {
      "$ref": "#/types/azure-native_network_v20230201:network:HubIPAddressesResponse",
      "description": "IP addresses associated with AzureFirewall.",
      "type": "object"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "ipConfigurations": {
      "description": "IP configuration of the Azure Firewall resource.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallIPConfigurationResponse",
       "type": "object"
      },
      "type": "array"
     },
     "ipGroups": {
      "description": "IpGroups associated with AzureFirewall.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallIpGroupsResponse",
       "type": "object"
      },
      "type": "array"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "managementIpConfiguration": {
      "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallIPConfigurationResponse",
      "description": "IP configuration of the Azure Firewall used for management traffic.",
      "type": "object"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "natRuleCollections": {
      "description": "Collection of NAT rule collections used by Azure Firewall.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallNatRuleCollectionResponse",
       "type": "object"
      },
      "type": "array"
     },
     "networkRuleCollections": {
      "description": "Collection of network rule collections used by Azure Firewall.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallNetworkRuleCollectionResponse",
       "type": "object"
      },
      "type": "array"
     },
     "provisioningState": {
      "description": "The provisioning state of the Azure firewall resource.",
      "type": "string"
     },
     "sku": {
      "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallSkuResponse",
      "description": "The Azure Firewall Resource SKU.",
      "type": "object"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Resource tags.",
      "type": "object"
     },
     "threatIntelMode": {
      "description": "The operation mode for Threat Intelligence.",
      "type": "string"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     },
     "virtualHub": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "description": "The virtualHub to which the firewall belongs.",
      "type": "object"
     },
     "zones": {
      "description": "A list of availability zones denoting where the resource needs to come from.",
      "items": {
       "type": "string"
      },
      "type": "array"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "ipGroups",
     "name",
     "provisioningState",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getBastionHost": {
   "description": "Gets the specified Bastion Host.",
   "inputs": {
    "properties": {
     "bastionHostName": {
      "description": "The name of the Bastion Host.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "bastionHostName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Bastion Host resource.",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "disableCopyPaste": {
      "default": false,
      "description": "Enable/Disable Copy/Paste feature of the Bastion Host resource.",
      "type": "boolean"
     },
     "dnsName": {
      "description": "FQDN for the endpoint on which bastion host is accessible.",
      "type": "string"
     },
     "enableFileCopy": {
      "default": false,
      "description": "Enable/Disable File Copy feature of the Bastion Host resource.",
      "type": "boolean"
     },
     "enableIpConnect": {
      "default": false,
      "description": "Enable/Disable IP Connect feature of the Bastion Host resource.",
      "type": "boolean"
     },
     "enableKerberos": {
      "default": false,
      "description": "Enable/Disable Kerberos feature of the Bastion Host resource.",
      "type": "boolean"
     },
     "enableShareableLink": {
      "default": false,
      "description": "Enable/Disable Shareable Link of the Bastion Host resource.",
      "type": "boolean"
     },
     "enableTunneling": {
      "default": false,
      "description": "Enable/Disable Tunneling feature of the Bastion Host resource.",
      "type": "boolean"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "ipConfigurations": {
      "description": "IP configuration of the Bastion Host resource.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:BastionHostIPConfigurationResponse",
       "type": "object"
      },
      "type": "array"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the bastion host resource.",
      "type": "string"
     },
     "scaleUnits": {
      "description": "The scale units for the Bastion Host resource.",
      "type": "integer"
     },
     "sku": {
      "$ref": "#/types/azure-native_network_v20230201:network:SkuResponse",
      "description": "The sku of this Bastion Host.",
      "type": "object"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Resource tags.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "name",
     "provisioningState",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getConfigurationPolicyGroup": {
   "description": "Retrieves the details of a ConfigurationPolicyGroup.",
   "inputs": {
    "properties": {
     "configurationPolicyGroupName": {
      "description": "The name of the ConfigurationPolicyGroup being retrieved.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The resource group name of the VpnServerConfiguration.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "vpnServerConfigurationName": {
      "description": "The name of the VpnServerConfiguration.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "configurationPolicyGroupName",
     "resourceGroupName",
     "vpnServerConfigurationName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "VpnServerConfigurationPolicyGroup Resource.",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "isDefault": {
      "description": "Shows if this is a Default VpnServerConfigurationPolicyGroup or not.",
      "type": "boolean"
     },
     "name": {
      "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
      "type": "string"
     },
     "p2SConnectionConfigurations": {
      "description": "List of references to P2SConnectionConfigurations.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
       "type": "object"
      },
      "type": "array"
     },
     "policyMembers": {
      "description": "Multiple PolicyMembers for VpnServerConfigurationPolicyGroup.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:VpnServerConfigurationPolicyGroupMemberResponse",
       "type": "object"
      },
      "type": "array"
     },
     "priority": {
      "description": "Priority for VpnServerConfigurationPolicyGroup.",
      "type": "integer"
     },
     "provisioningState": {
      "description": "The provisioning state of the VpnServerConfigurationPolicyGroup resource.",
      "type": "string"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "p2SConnectionConfigurations",
     "provisioningState",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getConnectionMonitor": {
   "description": "Gets a connection monitor by name.",
   "inputs": {
    "properties": {
     "connectionMonitorName": {
      "description": "The name of the connection monitor.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "networkWatcherName": {
      "description": "The name of the Network Watcher resource.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group containing Network Watcher.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "connectionMonitorName",
     "networkWatcherName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Information about the connection monitor.",
    "properties": {
     "autoStart": {
      "default": true,
      "description": "Determines if the connection monitor will start automatically once created.",
      "type": "boolean"
     },
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "connectionMonitorType": {
      "description": "Type of connection monitor.",
      "type": "string"
     },
     "destination": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorDestinationResponse",
      "description": "Describes the destination of connection monitor.",
      "type": "object"
     },
     "endpoints": {
      "description": "List of connection monitor endpoints.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorEndpointResponse",
       "type": "object"
      },
      "type": "array"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "ID of the connection monitor.",
      "type": "string"
     },
     "location": {
      "description": "Connection monitor location.",
      "type": "string"
     },
     "monitoringIntervalInSeconds": {
      "default": 60,
      "description": "Monitoring interval in seconds.",
      "type": "integer"
     },
     "monitoringStatus": {
      "description": "The monitoring status of the connection monitor.",
      "type": "string"
     },
     "name": {
      "description": "Name of the connection monitor.",
      "type": "string"
     },
     "notes": {
      "description": "Optional notes to be associated with the connection monitor.",
      "type": "string"
     },
     "outputs": {
      "description": "List of connection monitor outputs.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorOutputResponse",
       "type": "object"
      },
      "type": "array"
     },
     "provisioningState": {
      "description": "The provisioning state of the connection monitor.",
      "type": "string"
     },
     "source": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorSourceResponse",
      "description": "Describes the source of connection monitor.",
      "type": "object"
     },
     "startTime": {
      "description": "The date and time when the connection monitor was started.",
      "type": "string"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Connection monitor tags.",
      "type": "object"
     },
     "testConfigurations": {
      "description": "List of connection monitor test configurations.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorTestConfigurationResponse",
       "type": "object"
      },
      "type": "array"
     },
     "testGroups": {
      "description": "List of connection monitor test groups.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorTestGroupResponse",
       "type": "object"
      },
      "type": "array"
     },
     "type": {
      "description": "Connection monitor type.",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "connectionMonitorType",
     "etag",
     "id",
     "monitoringStatus",
     "name",
     "provisioningState",
     "startTime",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getConnectivityConfiguration": {
   "description": "Gets a Network Connectivity Configuration, specified by the resource group, network manager name, and connectivity Configuration name",
   "inputs": {
    "properties": {
     "configurationName": {
      "description": "The name of the network manager connectivity configuration.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "networkManagerName": {
      "description": "The name of the network manager.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "configurationName",
     "networkManagerName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "The network manager connectivity configuration resource",
    "properties": {
     "appliesToGroups": {
      "description": "Groups for configuration",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ConnectivityGroupItemResponse",
       "type": "object"
      },
      "type": "array"
     },
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "connectivityTopology": {
      "description": "Connectivity topology type.",
      "type": "string"
     },
     "deleteExistingPeering": {
      "description": "Flag if need to remove current existing peerings.",
      "type": "string"
     },
     "description": {
      "description": "A description of the connectivity configuration.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "hubs": {
      "description": "List of hubItems",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:HubResponse",
       "type": "object"
      },
      "type": "array"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "isGlobal": {
      "description": "Flag if global mesh is supported.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the connectivity configuration resource.",
      "type": "string"
     },
     "resourceGuid": {
      "description": "Unique identifier for this resource.",
      "type": "string"
     },
     "systemData": {
      "$ref": "#/types/azure-native_network_v20230201:network:SystemDataResponse",
      "description": "The system metadata related to this resource.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     }
    },
    "required": [
     "appliesToGroups",
     "azureApiVersion",
     "connectivityTopology",
     "etag",
     "id",
     "name",
     "provisioningState",
     "resourceGuid",
     "systemData",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getCustomIPPrefix": {
   "description": "Gets the specified custom IP prefix in a specified resource group.",
   "inputs": {
    "properties": {
     "customIpPrefixName": {
      "description": "The name of the custom IP prefix.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "expand": {
      "description": "Expands referenced resources.",
      "type": "string"
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "customIpPrefixName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Custom IP prefix resource.",
    "properties": {
     "asn": {
      "description": "The ASN for CIDR advertising. Should be an integer as string.",
      "type": "string"
     },
     "authorizationMessage": {
      "description": "Authorization message for WAN validation.",
      "type": "string"
     },
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "childCustomIpPrefixes": {
      "description": "The list of all Children for IPv6 /48 CustomIpPrefix.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
       "type": "object"
      },
      "type": "array"
     },
     "cidr": {
      "description": "The prefix range in CIDR notation. Should include the start address and the prefix length.",
      "type": "string"
     },
     "commissionedState": {
      "description": "The commissioned state of the Custom IP Prefix.",
      "type": "string"
     },
     "customIpPrefixParent": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "description": "The Parent CustomIpPrefix for IPv6 /64 CustomIpPrefix.",
      "type": "object"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "expressRouteAdvertise": {
      "description": "Whether to do express route advertise.",
      "type": "boolean"
     },
     "extendedLocation": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse",
      "description": "The extended location of the custom IP prefix.",
      "type": "object"
     },
     "failedReason": {
      "description": "The reason why resource is in failed state.",
      "type": "string"
     },
     "geo": {
      "description": "The Geo for CIDR advertising. Should be an Geo code.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "noInternetAdvertise": {
      "description": "Whether to Advertise the range to Internet.",
      "type": "boolean"
     },
     "prefixType": {
      "description": "Type of custom IP prefix. Should be Singular, Parent, or Child.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the custom IP prefix resource.",
      "type": "string"
     },
     "publicIpPrefixes": {
      "description": "The list of all referenced PublicIpPrefixes.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
       "type": "object"
      },
      "type": "array"
     },
     "resourceGuid": {
      "description": "The resource GUID property of the custom IP prefix resource.",
      "type": "string"
     },
     "signedMessage": {
      "description": "Signed message for WAN validation.",
      "type": "string"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Resource tags.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     },
     "zones": {
      "description": "A list of availability zones denoting the IP allocated for the resource needs to come from.",
      "items": {
       "type": "string"
      },
      "type": "array"
     }
    },
    "required": [
     "azureApiVersion",
     "childCustomIpPrefixes",
     "etag",
     "failedReason",
     "name",
     "provisioningState",
     "publicIpPrefixes",
     "resourceGuid",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getDdosCustomPolicy": {
   "description": "Gets information about the specified DDoS custom policy.",
   "inputs": {
    "properties": {
     "ddosCustomPolicyName": {
      "description": "The name of the DDoS custom policy.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "ddosCustomPolicyName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "A DDoS custom policy in a resource group.",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the DDoS custom policy resource.",
      "type": "string"
     },
     "resourceGuid": {
      "description": "The resource GUID property of the DDoS custom policy resource. It uniquely identifies the resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.",
      "type": "string"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Resource tags.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "name",
     "provisioningState",
     "resourceGuid",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getDdosProtectionPlan": {
   "description": "Gets information about the specified DDoS protection plan.",
   "inputs": {
    "properties": {
     "ddosProtectionPlanName": {
      "description": "The name of the DDoS protection plan.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "ddosProtectionPlanName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "A DDoS protection plan in a resource group.",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the DDoS protection plan resource.",
      "type": "string"
     },
     "publicIPAddresses": {
      "description": "The list of public IPs associated with the DDoS protection plan resource. This list is read-only.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
       "type": "object"
      },
      "type": "array"
     },
     "resourceGuid": {
      "description": "The resource GUID property of the DDoS protection plan resource. It uniquely identifies the resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.",
      "type": "string"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Resource tags.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     },
     "virtualNetworks": {
      "description": "The list of virtual networks associated with the DDoS protection plan resource. This list is read-only.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
       "type": "object"
      },
      "type": "array"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "id",
     "name",
     "provisioningState",
     "publicIPAddresses",
     "resourceGuid",
     "type",
     "virtualNetworks"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getDefaultAdminRule": {
   "description": "Gets a network manager security configuration admin rule.",
   "inputs": {
    "properties": {
     "configurationName": {
      "description": "The name of the network manager Security Configuration.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "networkManagerName": {
      "description": "The name of the network manager.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "ruleCollectionName": {
      "description": "The name of the network manager security Configuration rule collection.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "ruleName": {
      "description": "The name of the rule.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "configurationName",
     "networkManagerName",
     "resourceGroupName",
     "ruleCollectionName",
     "ruleName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Network default admin rule.",
    "properties": {
     "access": {
      "description": "Indicates the access allowed for this particular rule",
      "type": "string"
     },
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "description": {
      "description": "A description for this rule. Restricted to 140 chars.",
      "type": "string"
     },
     "destinationPortRanges": {
      "description": "The destination port ranges.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "destinations": {
      "description": "The destination address prefixes. CIDR or destination IP ranges.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:AddressPrefixItemResponse",
       "type": "object"
      },
      "type": "array"
     },
     "direction": {
      "description": "Indicates if the traffic matched against the rule in inbound or outbound.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "flag": {
      "description": "Default rule flag.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "kind": {
      "const": "Default",
      "description": "Whether the rule is custom or default.\nExpected value is 'Default'.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "priority": {
      "description": "The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
      "type": "integer"
     },
     "protocol": {
      "description": "Network protocol this rule applies to.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the resource.",
      "type": "string"
     },
     "resourceGuid": {
      "description": "Unique identifier for this resource.",
      "type": "string"
     },
     "sourcePortRanges": {
      "description": "The source port ranges.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "sources": {
      "description": "The CIDR or source IP ranges.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:AddressPrefixItemResponse",
       "type": "object"
      },
      "type": "array"
     },
     "systemData": {
      "$ref": "#/types/azure-native_network_v20230201:network:SystemDataResponse",
      "description": "The system metadata related to this resource.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     }
    },
    "required": [
     "access",
     "azureApiVersion",
     "description",
     "destinationPortRanges",
     "destinations",
     "direction",
     "etag",
     "id",
     "kind",
     "name",
     "priority",
     "protocol",
     "provisioningState",
     "resourceGuid",
     "sourcePortRanges",
     "sources",
     "systemData",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getDscpConfiguration": {
   "description": "Gets a DSCP Configuration.",
   "inputs": {
    "properties": {
     "dscpConfigurationName": {
      "description": "The name of the resource.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "dscpConfigurationName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Differentiated Services Code Point configuration for any given network interface",
    "properties": {
     "associatedNetworkInterfaces": {
      "description": "Associated Network Interfaces to the DSCP Configuration.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceResponse",
       "type": "object"
      },
      "type": "array"
     },
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "destinationIpRanges": {
      "description": "Destination IP ranges.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:QosIpRangeResponse",
       "type": "object"
      },
      "type": "array"
     },
     "destinationPortRanges": {
      "description": "Destination port ranges.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:QosPortRangeResponse",
       "type": "object"
      },
      "type": "array"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "markings": {
      "description": "List of markings to be used in the configuration.",
      "items": {
       "type": "integer"
      },
      "type": "array"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "protocol": {
      "description": "RNM supported protocol types.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the DSCP Configuration resource.",
      "type": "string"
     },
     "qosCollectionId": {
      "description": "Qos Collection ID generated by RNM.",
      "type": "string"
     },
     "qosDefinitionCollection": {
      "description": "QoS object definitions",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:QosDefinitionResponse",
       "type": "object"
      },
      "type": "array"
     },
     "resourceGuid": {
      "description": "The resource GUID property of the DSCP Configuration resource.",
      "type": "string"
     },
     "sourceIpRanges": {
      "description": "Source IP ranges.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:QosIpRangeResponse",
       "type": "object"
      },
      "type": "array"
     },
     "sourcePortRanges": {
      "description": "Sources port ranges.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:QosPortRangeResponse",
       "type": "object"
      },
      "type": "array"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Resource tags.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     }
    },
    "required": [
     "associatedNetworkInterfaces",
     "azureApiVersion",
     "etag",
     "name",
     "provisioningState",
     "qosCollectionId",
     "resourceGuid",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getExpressRouteCircuit": {
   "description": "Gets information about the specified express route circuit.",
   "inputs": {
    "properties": {
     "circuitName": {
      "description": "The name of express route circuit.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "circuitName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "ExpressRouteCircuit resource.",
    "properties": {
     "allowClassicOperations": {
      "description": "Allow classic operations.",
      "type": "boolean"
     },
     "authorizationKey": {
      "description": "The authorizationKey.",
      "type": "string"
     },
     "authorizationStatus": {
      "description": "The authorization status of the Circuit.",
      "type": "string"
     },
     "authorizations": {
      "description": "The list of authorizations.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitAuthorizationResponse",
       "type": "object"
      },
      "type": "array"
     },
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "bandwidthInGbps": {
      "description": "The bandwidth of the circuit when the circuit is provisioned on an ExpressRoutePort resource.",
      "type": "number"
     },
     "circuitProvisioningState": {
      "description": "The CircuitProvisioningState state of the resource.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "expressRoutePort": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "description": "The reference to the ExpressRoutePort resource when the circuit is provisioned on an ExpressRoutePort resource.",
      "type": "object"
     },
     "gatewayManagerEtag": {
      "description": "The GatewayManager Etag.",
      "type": "string"
     },
     "globalReachEnabled": {
      "description": "Flag denoting global reach status.",
      "type": "boolean"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "peerings": {
      "description": "The list of peerings.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitPeeringResponse",
       "type": "object"
      },
      "type": "array"
     },
     "provisioningState": {
      "description": "The provisioning state of the express route circuit resource.",
      "type": "string"
     },
     "serviceKey": {
      "description": "The ServiceKey.",
      "type": "string"
     },
     "serviceProviderNotes": {
      "description": "The ServiceProviderNotes.",
      "type": "string"
     },
     "serviceProviderProperties": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitServiceProviderPropertiesResponse",
      "description": "The ServiceProviderProperties.",
      "type": "object"
     },
     "serviceProviderProvisioningState": {
      "description": "The ServiceProviderProvisioningState state of the resource.",
      "type": "string"
     },
     "sku": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitSkuResponse",
      "description": "The SKU.",
      "type": "object"
     },
     "stag": {
      "description": "The identifier of the circuit traffic. Outer tag for QinQ encapsulation.",
      "type": "integer"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Resource tags.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     }
    },
    "required": [
     "authorizationStatus",
     "azureApiVersion",
     "etag",
     "name",
     "provisioningState",
     "stag",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getExpressRouteCircuitAuthorization": {
   "description": "Gets the specified authorization from the specified express route circuit.",
   "inputs": {
    "properties": {
     "authorizationName": {
      "description": "The name of the authorization.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "circuitName": {
      "description": "The name of the express route circuit.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "authorizationName",
     "circuitName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Authorization in an ExpressRouteCircuit resource.",
    "properties": {
     "authorizationKey": {
      "description": "The authorization key.",
      "type": "string"
     },
     "authorizationUseStatus": {
      "description": "The authorization use status.",
      "type": "string"
     },
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "name": {
      "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the authorization resource.",
      "type": "string"
     },
     "type": {
      "description": "Type of the resource.",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "provisioningState",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getExpressRouteCircuitConnection": {
   "description": "Gets the specified Express Route Circuit Connection from the specified express route circuit.",
   "inputs": {
    "properties": {
     "circuitName": {
      "description": "The name of the express route circuit.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "connectionName": {
      "description": "The name of the express route circuit connection.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "peeringName": {
      "description": "The name of the peering.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "circuitName",
     "connectionName",
     "peeringName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.",
    "properties": {
     "addressPrefix": {
      "description": "/29 IP address space to carve out Customer addresses for tunnels.",
      "type": "string"
     },
     "authorizationKey": {
      "description": "The authorization key.",
      "type": "string"
     },
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "circuitConnectionStatus": {
      "description": "Express Route Circuit connection state.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "expressRouteCircuitPeering": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "description": "Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection.",
      "type": "object"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "ipv6CircuitConnectionConfig": {
      "$ref": "#/types/azure-native_network_v20230201:network:Ipv6CircuitConnectionConfigResponse",
      "description": "IPv6 Address PrefixProperties of the express route circuit connection.",
      "type": "object"
     },
     "name": {
      "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
      "type": "string"
     },
     "peerExpressRouteCircuitPeering": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "description": "Reference to Express Route Circuit Private Peering Resource of the peered circuit.",
      "type": "object"
     },
     "provisioningState": {
      "description": "The provisioning state of the express route circuit connection resource.",
      "type": "string"
     },
     "type": {
      "description": "Type of the resource.",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "circuitConnectionStatus",
     "etag",
     "provisioningState",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getExpressRouteCircuitPeering": {
   "description": "Gets the specified peering for the express route circuit.",
   "inputs": {
    "properties": {
     "circuitName": {
      "description": "The name of the express route circuit.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "peeringName": {
      "description": "The name of the peering.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "circuitName",
     "peeringName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Peering in an ExpressRouteCircuit resource.",
    "properties": {
     "azureASN": {
      "description": "The Azure ASN.",
      "type": "integer"
     },
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "connections": {
      "description": "The list of circuit connections associated with Azure Private Peering for this circuit.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitConnectionResponse",
       "type": "object"
      },
      "type": "array"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "expressRouteConnection": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteConnectionIdResponse",
      "description": "The ExpressRoute connection.",
      "type": "object"
     },
     "gatewayManagerEtag": {
      "description": "The GatewayManager Etag.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "ipv6PeeringConfig": {
      "$ref": "#/types/azure-native_network_v20230201:network:Ipv6ExpressRouteCircuitPeeringConfigResponse",
      "description": "The IPv6 peering configuration.",
      "type": "object"
     },
     "lastModifiedBy": {
      "description": "Who was the last to modify the peering.",
      "type": "string"
     },
     "microsoftPeeringConfig": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitPeeringConfigResponse",
      "description": "The Microsoft peering configuration.",
      "type": "object"
     },
     "name": {
      "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
      "type": "string"
     },
     "peerASN": {
      "description": "The peer ASN.",
      "type": "number"
     },
     "peeredConnections": {
      "description": "The list of peered circuit connections associated with Azure Private Peering for this circuit.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:PeerExpressRouteCircuitConnectionResponse",
       "type": "object"
      },
      "type": "array"
     },
     "peeringType": {
      "description": "The peering type.",
      "type": "string"
     },
     "primaryAzurePort": {
      "description": "The primary port.",
      "type": "string"
     },
     "primaryPeerAddressPrefix": {
      "description": "The primary address prefix.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the express route circuit peering resource.",
      "type": "string"
     },
     "routeFilter": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "description": "The reference to the RouteFilter resource.",
      "type": "object"
     },
     "secondaryAzurePort": {
      "description": "The secondary port.",
      "type": "string"
     },
     "secondaryPeerAddressPrefix": {
      "description": "The secondary address prefix.",
      "type": "string"
     },
     "sharedKey": {
      "description": "The shared key.",
      "type": "string"
     },
     "state": {
      "description": "The peering state.",
      "type": "string"
     },
     "stats": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitStatsResponse",
      "description": "The peering stats of express route circuit.",
      "type": "object"
     },
     "type": {
      "description": "Type of the resource.",
      "type": "string"
     },
     "vlanId": {
      "description": "The VLAN ID.",
      "type": "integer"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "lastModifiedBy",
     "peeredConnections",
     "provisioningState",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getExpressRouteConnection": {
   "description": "Gets the specified ExpressRouteConnection.",
   "inputs": {
    "properties": {
     "connectionName": {
      "description": "The name of the ExpressRoute connection.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "expressRouteGatewayName": {
      "description": "The name of the ExpressRoute gateway.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "connectionName",
     "expressRouteGatewayName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "ExpressRouteConnection resource.",
    "properties": {
     "authorizationKey": {
      "description": "Authorization key to establish the connection.",
      "type": "string"
     },
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "enableInternetSecurity": {
      "description": "Enable internet security.",
      "type": "boolean"
     },
     "enablePrivateLinkFastPath": {
      "description": "Bypass the ExpressRoute gateway when accessing private-links. ExpressRoute FastPath (expressRouteGatewayBypass) must be enabled.",
      "type": "boolean"
     },
     "expressRouteCircuitPeering": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitPeeringIdResponse",
      "description": "The ExpressRoute circuit peering.",
      "type": "object"
     },
     "expressRouteGatewayBypass": {
      "description": "Enable FastPath to vWan Firewall hub.",
      "type": "boolean"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "name": {
      "description": "The name of the resource.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the express route connection resource.",
      "type": "string"
     },
     "routingConfiguration": {
      "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfigurationResponse",
      "description": "The Routing Configuration indicating the associated and propagated route tables on this connection.",
      "type": "object"
     },
     "routingWeight": {
      "description": "The routing weight associated to the connection.",
      "type": "integer"
     }
    },
    "required": [
     "azureApiVersion",
     "expressRouteCircuitPeering",
     "name",
     "provisioningState"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getExpressRouteCrossConnectionPeering": {
   "description": "Gets the specified peering for the ExpressRouteCrossConnection.",
   "inputs": {
    "properties": {
     "crossConnectionName": {
      "description": "The name of the ExpressRouteCrossConnection.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "peeringName": {
      "description": "The name of the peering.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "crossConnectionName",
     "peeringName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Peering in an ExpressRoute Cross Connection resource.",
    "properties": {
     "azureASN": {
      "description": "The Azure ASN.",
      "type": "integer"
     },
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "gatewayManagerEtag": {
      "description": "The GatewayManager Etag.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "ipv6PeeringConfig": {
      "$ref": "#/types/azure-native_network_v20230201:network:Ipv6ExpressRouteCircuitPeeringConfigResponse",
      "description": "The IPv6 peering configuration.",
      "type": "object"
     },
     "lastModifiedBy": {
      "description": "Who was the last to modify the peering.",
      "type": "string"
     },
     "microsoftPeeringConfig": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitPeeringConfigResponse",
      "description": "The Microsoft peering configuration.",
      "type": "object"
     },
     "name": {
      "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
      "type": "string"
     },
     "peerASN": {
      "description": "The peer ASN.",
      "type": "number"
     },
     "peeringType": {
      "description": "The peering type.",
      "type": "string"
     },
     "primaryAzurePort": {
      "description": "The primary port.",
      "type": "string"
     },
     "primaryPeerAddressPrefix": {
      "description": "The primary address prefix.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the express route cross connection peering resource.",
      "type": "string"
     },
     "secondaryAzurePort": {
      "description": "The secondary port.",
      "type": "string"
     },
     "secondaryPeerAddressPrefix": {
      "description": "The secondary address prefix.",
      "type": "string"
     },
     "sharedKey": {
      "description": "The shared key.",
      "type": "string"
     },
     "state": {
      "description": "The peering state.",
      "type": "string"
     },
     "vlanId": {
      "description": "The VLAN ID.",
      "type": "integer"
     }
    },
    "required": [
     "azureASN",
     "azureApiVersion",
     "etag",
     "lastModifiedBy",
     "primaryAzurePort",
     "provisioningState",
     "secondaryAzurePort"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getExpressRouteGateway": {
   "description": "Fetches the details of a ExpressRoute gateway in a resource group.",
   "inputs": {
    "properties": {
     "expressRouteGatewayName": {
      "description": "The name of the ExpressRoute gateway.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "expressRouteGatewayName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "ExpressRoute gateway resource.",
    "properties": {
     "allowNonVirtualWanTraffic": {
      "description": "Configures this gateway to accept traffic from non Virtual WAN networks.",
      "type": "boolean"
     },
     "autoScaleConfiguration": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteGatewayPropertiesResponseAutoScaleConfiguration",
      "description": "Configuration for auto scaling.",
      "type": "object"
     },
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "expressRouteConnections": {
      "description": "List of ExpressRoute connections to the ExpressRoute gateway.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteConnectionResponse",
       "type": "object"
      },
      "type": "array"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the express route gateway resource.",
      "type": "string"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Resource tags.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     },
     "virtualHub": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualHubIdResponse",
      "description": "The Virtual Hub where the ExpressRoute gateway is or will be deployed.",
      "type": "object"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "name",
     "provisioningState",
     "type",
     "virtualHub"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getExpressRoutePort": {
   "description": "Retrieves the requested ExpressRoutePort resource.",
   "inputs": {
    "properties": {
     "expressRoutePortName": {
      "description": "The name of ExpressRoutePort.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "expressRoutePortName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "ExpressRoutePort resource definition.",
    "properties": {
     "allocationDate": {
      "description": "Date of the physical port allocation to be used in Letter of Authorization.",
      "type": "string"
     },
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "bandwidthInGbps": {
      "description": "Bandwidth of procured ports in Gbps.",
      "type": "integer"
     },
     "billingType": {
      "description": "The billing type of the ExpressRoutePort resource.",
      "type": "string"
     },
     "circuits": {
      "description": "Reference the ExpressRoute circuit(s) that are provisioned on this ExpressRoutePort resource.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
       "type": "object"
      },
      "type": "array"
     },
     "encapsulation": {
      "description": "Encapsulation method on physical ports.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "etherType": {
      "description": "Ether type of the physical port.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "identity": {
      "$ref": "#/types/azure-native_network_v20230201:network:ManagedServiceIdentityResponse",
      "description": "The identity of ExpressRoutePort, if configured.",
      "type": "object"
     },
     "links": {
      "description": "The set of physical links of the ExpressRoutePort resource.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteLinkResponse",
       "type": "object"
      },
      "type": "array"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "mtu": {
      "description": "Maximum transmission unit of the physical port pair(s).",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "peeringLocation": {
      "description": "The name of the peering location that the ExpressRoutePort is mapped to physically.",
      "type": "string"
     },
     "provisionedBandwidthInGbps": {
      "description": "Aggregate Gbps of associated circuit bandwidths.",
      "type": "number"
     },
     "provisioningState": {
      "description": "The provisioning state of the express route port resource.",
      "type": "string"
     },
     "resourceGuid": {
      "description": "The resource GUID property of the express route port resource.",
      "type": "string"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Resource tags.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     }
    },
    "required": [
     "allocationDate",
     "azureApiVersion",
     "circuits",
     "etag",
     "etherType",
     "mtu",
     "name",
     "provisionedBandwidthInGbps",
     "provisioningState",
     "resourceGuid",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getExpressRoutePortAuthorization": {
   "description": "Gets the specified authorization from the specified express route port.",
   "inputs": {
    "properties": {
     "authorizationName": {
      "description": "The name of the authorization.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "expressRoutePortName": {
      "description": "The name of the express route port.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "authorizationName",
     "expressRoutePortName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "ExpressRoutePort Authorization resource definition.",
    "properties": {
     "authorizationKey": {
      "description": "The authorization key.",
      "type": "string"
     },
     "authorizationUseStatus": {
      "description": "The authorization use status.",
      "type": "string"
     },
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "circuitResourceUri": {
      "description": "The reference to the ExpressRoute circuit resource using the authorization.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "name": {
      "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the authorization resource.",
      "type": "string"
     },
     "type": {
      "description": "Type of the resource.",
      "type": "string"
     }
    },
    "required": [
     "authorizationKey",
     "authorizationUseStatus",
     "azureApiVersion",
     "circuitResourceUri",
     "etag",
     "provisioningState",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getFirewallPolicy": {
   "description": "Gets the specified Firewall Policy.",
   "inputs": {
    "properties": {
     "expand": {
      "description": "Expands referenced resources.",
      "type": "string"
     },
     "firewallPolicyName": {
      "description": "The name of the Firewall Policy.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "firewallPolicyName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "FirewallPolicy Resource.",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "basePolicy": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "description": "The parent firewall policy from which rules are inherited.",
      "type": "object"
     },
     "childPolicies": {
      "description": "List of references to Child Firewall Policies.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
       "type": "object"
      },
      "type": "array"
     },
     "dnsSettings": {
      "$ref": "#/types/azure-native_network_v20230201:network:DnsSettingsResponse",
      "description": "DNS Proxy Settings definition.",
      "type": "object"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "explicitProxy": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExplicitProxyResponse",
      "description": "Explicit Proxy Settings definition.",
      "type": "object"
     },
     "firewalls": {
      "description": "List of references to Azure Firewalls that this Firewall Policy is associated with.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
       "type": "object"
      },
      "type": "array"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "identity": {
      "$ref": "#/types/azure-native_network_v20230201:network:ManagedServiceIdentityResponse",
      "description": "The identity of the firewall policy.",
      "type": "object"
     },
     "insights": {
      "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyInsightsResponse",
      "description": "Insights on Firewall Policy.",
      "type": "object"
     },
     "intrusionDetection": {
      "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyIntrusionDetectionResponse",
      "description": "The configuration for Intrusion detection.",
      "type": "object"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the firewall policy resource.",
      "type": "string"
     },
     "ruleCollectionGroups": {
      "description": "List of references to FirewallPolicyRuleCollectionGroups.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
       "type": "object"
      },
      "type": "array"
     },
     "sku": {
      "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicySkuResponse",
      "description": "The Firewall Policy SKU.",
      "type": "object"
     },
     "snat": {
      "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicySNATResponse",
      "description": "The private IP addresses/IP ranges to which traffic will not be SNAT.",
      "type": "object"
     },
     "sql": {
      "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicySQLResponse",
      "description": "SQL Settings definition.",
      "type": "object"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Resource tags.",
      "type": "object"
     },
     "threatIntelMode": {
      "description": "The operation mode for Threat Intelligence.",
      "type": "string"
     },
     "threatIntelWhitelist": {
      "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyThreatIntelWhitelistResponse",
      "description": "ThreatIntel Whitelist for Firewall Policy.",
      "type": "object"
     },
     "transportSecurity": {
      "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyTransportSecurityResponse",
      "description": "TLS Configuration definition.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "childPolicies",
     "etag",
     "firewalls",
     "name",
     "provisioningState",
     "ruleCollectionGroups",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getFirewallPolicyRuleCollectionGroup": {
   "description": "Gets the specified FirewallPolicyRuleCollectionGroup.",
   "inputs": {
    "properties": {
     "firewallPolicyName": {
      "description": "The name of the Firewall Policy.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "ruleCollectionGroupName": {
      "description": "The name of the FirewallPolicyRuleCollectionGroup.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "firewallPolicyName",
     "resourceGroupName",
     "ruleCollectionGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Rule Collection Group resource.",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "name": {
      "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
      "type": "string"
     },
     "priority": {
      "description": "Priority of the Firewall Policy Rule Collection Group resource.",
      "type": "integer"
     },
     "provisioningState": {
      "description": "The provisioning state of the firewall policy rule collection group resource.",
      "type": "string"
     },
     "ruleCollections": {
      "description": "Group of Firewall Policy rule collections.",
      "items": {
       "discriminator": {
        "mapping": {
         "FirewallPolicyFilterRuleCollection": "#/types/azure-native_network_v20230201:network:FirewallPolicyFilterRuleCollectionResponse",
         "FirewallPolicyNatRuleCollection": "#/types/azure-native_network_v20230201:network:FirewallPolicyNatRuleCollectionResponse"
        },
        "propertyName": "ruleCollectionType"
       },
       "oneOf": [
        {
         "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyFilterRuleCollectionResponse",
         "type": "object"
        },
        {
         "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyNatRuleCollectionResponse",
         "type": "object"
        }
       ]
      },
      "type": "array"
     },
     "type": {
      "description": "Rule Group type.",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "provisioningState",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getFlowLog": {
   "description": "Gets a flow log resource by name.",
   "inputs": {
    "properties": {
     "flowLogName": {
      "description": "The name of the flow log resource.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "networkWatcherName": {
      "description": "The name of the network watcher.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "flowLogName",
     "networkWatcherName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "A flow log resource.",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "enabled": {
      "description": "Flag to enable/disable flow logging.",
      "type": "boolean"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "flowAnalyticsConfiguration": {
      "$ref": "#/types/azure-native_network_v20230201:network:TrafficAnalyticsPropertiesResponse",
      "description": "Parameters that define the configuration of traffic analytics.",
      "type": "object"
     },
     "format": {
      "$ref": "#/types/azure-native_network_v20230201:network:FlowLogFormatParametersResponse",
      "description": "Parameters that define the flow log format.",
      "type": "object"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the flow log.",
      "type": "string"
     },
     "retentionPolicy": {
      "$ref": "#/types/azure-native_network_v20230201:network:RetentionPolicyParametersResponse",
      "description": "Parameters that define the retention policy for flow log.",
      "type": "object"
     },
     "storageId": {
      "description": "ID of the storage account which is used to store the flow log.",
      "type": "string"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Resource tags.",
      "type": "object"
     },
     "targetResourceGuid": {
      "description": "Guid of network security group to which flow log will be applied.",
      "type": "string"
     },
     "targetResourceId": {
      "description": "ID of network security group to which flow log will be applied.",
      "type": "string"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "name",
     "provisioningState",
     "storageId",
     "targetResourceGuid",
     "targetResourceId",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getHubRouteTable": {
   "description": "Retrieves the details of a RouteTable.",
   "inputs": {
    "properties": {
     "resourceGroupName": {
      "description": "The resource group name of the VirtualHub.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "routeTableName": {
      "description": "The name of the RouteTable.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "virtualHubName": {
      "description": "The name of the VirtualHub.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "resourceGroupName",
     "routeTableName",
     "virtualHubName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "RouteTable resource in a virtual hub.",
    "properties": {
     "associatedConnections": {
      "description": "List of all connections associated with this route table.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "labels": {
      "description": "List of labels associated with this route table.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "name": {
      "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
      "type": "string"
     },
     "propagatingConnections": {
      "description": "List of all connections that advertise to this route table.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "provisioningState": {
      "description": "The provisioning state of the RouteTable resource.",
      "type": "string"
     },
     "routes": {
      "description": "List of all routes.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:HubRouteResponse",
       "type": "object"
      },
      "type": "array"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     }
    },
    "required": [
     "associatedConnections",
     "azureApiVersion",
     "etag",
     "propagatingConnections",
     "provisioningState",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getHubVirtualNetworkConnection": {
   "description": "Retrieves the details of a HubVirtualNetworkConnection.",
   "inputs": {
    "properties": {
     "connectionName": {
      "description": "The name of the vpn connection.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The resource group name of the VirtualHub.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "virtualHubName": {
      "description": "The name of the VirtualHub.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "connectionName",
     "resourceGroupName",
     "virtualHubName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "HubVirtualNetworkConnection Resource.",
    "properties": {
     "allowHubToRemoteVnetTransit": {
      "description": "Deprecated: VirtualHub to RemoteVnet transit to enabled or not.",
      "type": "boolean"
     },
     "allowRemoteVnetToUseHubVnetGateways": {
      "description": "Deprecated: Allow RemoteVnet to use Virtual Hub's gateways.",
      "type": "boolean"
     },
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "enableInternetSecurity": {
      "description": "Enable internet security.",
      "type": "boolean"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "name": {
      "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the hub virtual network connection resource.",
      "type": "string"
     },
     "remoteVirtualNetwork": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "description": "Reference to the remote virtual network.",
      "type": "object"
     },
     "routingConfiguration": {
      "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfigurationResponse",
      "description": "The Routing Configuration indicating the associated and propagated route tables on this connection.",
      "type": "object"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "provisioningState"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getInboundNatRule": {
   "description": "Gets the specified load balancer inbound NAT rule.",
   "inputs": {
    "properties": {
     "expand": {
      "description": "Expands referenced resources.",
      "type": "string"
     },
     "inboundNatRuleName": {
      "description": "The name of the inbound NAT rule.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "loadBalancerName": {
      "description": "The name of the load balancer.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "inboundNatRuleName",
     "loadBalancerName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Inbound NAT rule of the load balancer.",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "backendAddressPool": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "description": "A reference to backendAddressPool resource.",
      "type": "object"
     },
     "backendIPConfiguration": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceIPConfigurationResponse",
      "description": "A reference to a private IP address defined on a network interface of a VM. Traffic sent to the frontend port of each of the frontend IP configurations is forwarded to the backend IP.",
      "type": "object"
     },
     "backendPort": {
      "description": "The port used for the internal endpoint. Acceptable values range from 1 to 65535.",
      "type": "integer"
     },
     "enableFloatingIP": {
      "description": "Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.",
      "type": "boolean"
     },
     "enableTcpReset": {
      "description": "Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.",
      "type": "boolean"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "frontendIPConfiguration": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "description": "A reference to frontend IP addresses.",
      "type": "object"
     },
     "frontendPort": {
      "description": "The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.",
      "type": "integer"
     },
     "frontendPortRangeEnd": {
      "description": "The port range end for the external endpoint. This property is used together with BackendAddressPool and FrontendPortRangeStart. Individual inbound NAT rule port mappings will be created for each backend address from BackendAddressPool. Acceptable values range from 1 to 65534.",
      "type": "integer"
     },
     "frontendPortRangeStart": {
      "description": "The port range start for the external endpoint. This property is used together with BackendAddressPool and FrontendPortRangeEnd. Individual inbound NAT rule port mappings will be created for each backend address from BackendAddressPool. Acceptable values range from 1 to 65534.",
      "type": "integer"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "idleTimeoutInMinutes": {
      "description": "The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.",
      "type": "integer"
     },
     "name": {
      "description": "The name of the resource that is unique within the set of inbound NAT rules used by the load balancer. This name can be used to access the resource.",
      "type": "string"
     },
     "protocol": {
      "description": "The reference to the transport protocol used by the load balancing rule.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the inbound NAT rule resource.",
      "type": "string"
     },
     "type": {
      "description": "Type of the resource.",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "backendIPConfiguration",
     "etag",
     "provisioningState",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getIpAllocation": {
   "description": "Gets the specified IpAllocation by resource group.",
   "inputs": {
    "properties": {
     "expand": {
      "description": "Expands referenced resources.",
      "type": "string"
     },
     "ipAllocationName": {
      "description": "The name of the IpAllocation.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "ipAllocationName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "IpAllocation resource.",
    "properties": {
     "allocationTags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "IpAllocation tags.",
      "type": "object"
     },
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "ipamAllocationId": {
      "description": "The IPAM allocation ID.",
      "type": "string"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "prefix": {
      "description": "The address prefix for the IpAllocation.",
      "type": "string"
     },
     "prefixLength": {
      "default": 0,
      "description": "The address prefix length for the IpAllocation.",
      "type": "integer"
     },
     "prefixType": {
      "description": "The address prefix Type for the IpAllocation.",
      "type": "string"
     },
     "subnet": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "description": "The Subnet that using the prefix of this IpAllocation resource.",
      "type": "object"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Resource tags.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     },
     "virtualNetwork": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "description": "The VirtualNetwork that using the prefix of this IpAllocation resource.",
      "type": "object"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "name",
     "subnet",
     "type",
     "virtualNetwork"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getIpGroup": {
   "description": "Gets the specified ipGroups.",
   "inputs": {
    "properties": {
     "expand": {
      "description": "Expands resourceIds (of Firewalls/Network Security Groups etc.) back referenced by the IpGroups resource.",
      "type": "string"
     },
     "ipGroupsName": {
      "description": "The name of the ipGroups.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "ipGroupsName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "The IpGroups resource information.",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "firewallPolicies": {
      "description": "List of references to Firewall Policies resources that this IpGroups is associated with.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
       "type": "object"
      },
      "type": "array"
     },
     "firewalls": {
      "description": "List of references to Firewall resources that this IpGroups is associated with.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
       "type": "object"
      },
      "type": "array"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "ipAddresses": {
      "description": "IpAddresses/IpAddressPrefixes in the IpGroups resource.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the IpGroups resource.",
      "type": "string"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Resource tags.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "firewallPolicies",
     "firewalls",
     "name",
     "provisioningState",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getLoadBalancer": {
   "description": "Gets the specified load balancer.",
   "inputs": {
    "properties": {
     "expand": {
      "description": "Expands referenced resources.",
      "type": "string"
     },
     "loadBalancerName": {
      "description": "The name of the load balancer.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "loadBalancerName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "LoadBalancer resource.",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "backendAddressPools": {
      "description": "Collection of backend address pools used by a load balancer.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:BackendAddressPoolResponse",
       "type": "object"
      },
      "type": "array"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "extendedLocation": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse",
      "description": "The extended location of the load balancer.",
      "type": "object"
     },
     "frontendIPConfigurations": {
      "description": "Object representing the frontend IPs to be used for the load balancer.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:FrontendIPConfigurationResponse",
       "type": "object"
      },
      "type": "array"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "inboundNatPools": {
      "description": "Defines an external port range for inbound NAT to a single backend port on NICs associated with a load balancer. Inbound NAT rules are created automatically for each NIC associated with the Load Balancer using an external port from this range. Defining an Inbound NAT pool on your Load Balancer is mutually exclusive with defining inbound NAT rules. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an inbound NAT pool. They have to reference individual inbound NAT rules.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:InboundNatPoolResponse",
       "type": "object"
      },
      "type": "array"
     },
     "inboundNatRules": {
      "description": "Collection of inbound NAT Rules used by a load balancer. Defining inbound NAT rules on your load balancer is mutually exclusive with defining an inbound NAT pool. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an Inbound NAT pool. They have to reference individual inbound NAT rules.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:InboundNatRuleResponse",
       "type": "object"
      },
      "type": "array"
     },
     "loadBalancingRules": {
      "description": "Object collection representing the load balancing rules Gets the provisioning.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:LoadBalancingRuleResponse",
       "type": "object"
      },
      "type": "array"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "outboundRules": {
      "description": "The outbound rules.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:OutboundRuleResponse",
       "type": "object"
      },
      "type": "array"
     },
     "probes": {
      "description": "Collection of probe objects used in the load balancer.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ProbeResponse",
       "type": "object"
      },
      "type": "array"
     },
     "provisioningState": {
      "description": "The provisioning state of the load balancer resource.",
      "type": "string"
     },
     "resourceGuid": {
      "description": "The resource GUID property of the load balancer resource.",
      "type": "string"
     },
     "sku": {
      "$ref": "#/types/azure-native_network_v20230201:network:LoadBalancerSkuResponse",
      "description": "The load balancer SKU.",
      "type": "object"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Resource tags.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "name",
     "provisioningState",
     "resourceGuid",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getLoadBalancerBackendAddressPool": {
   "description": "Gets load balancer backend address pool.",
   "inputs": {
    "properties": {
     "backendAddressPoolName": {
      "description": "The name of the backend address pool.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "loadBalancerName": {
      "description": "The name of the load balancer.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "backendAddressPoolName",
     "loadBalancerName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Pool of backend IP addresses.",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "backendIPConfigurations": {
      "description": "An array of references to IP addresses defined in network interfaces.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceIPConfigurationResponse",
       "type": "object"
      },
      "type": "array"
     },
     "drainPeriodInSeconds": {
      "description": "Amount of seconds Load Balancer waits for before sending RESET to client and backend address.",
      "type": "integer"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "inboundNatRules": {
      "description": "An array of references to inbound NAT rules that use this backend address pool.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
       "type": "object"
      },
      "type": "array"
     },
     "loadBalancerBackendAddresses": {
      "description": "An array of backend addresses.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:LoadBalancerBackendAddressResponse",
       "type": "object"
      },
      "type": "array"
     },
     "loadBalancingRules": {
      "description": "An array of references to load balancing rules that use this backend address pool.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
       "type": "object"
      },
      "type": "array"
     },
     "location": {
      "description": "The location of the backend address pool.",
      "type": "string"
     },
     "name": {
      "description": "The name of the resource that is unique within the set of backend address pools used by the load balancer. This name can be used to access the resource.",
      "type": "string"
     },
     "outboundRule": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "description": "A reference to an outbound rule that uses this backend address pool.",
      "type": "object"
     },
     "outboundRules": {
      "description": "An array of references to outbound rules that use this backend address pool.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
       "type": "object"
      },
      "type": "array"
     },
     "provisioningState": {
      "description": "The provisioning state of the backend address pool resource.",
      "type": "string"
     },
     "tunnelInterfaces": {
      "description": "An array of gateway load balancer tunnel interfaces.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:GatewayLoadBalancerTunnelInterfaceResponse",
       "type": "object"
      },
      "type": "array"
     },
     "type": {
      "description": "Type of the resource.",
      "type": "string"
     },
     "virtualNetwork": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "description": "A reference to a virtual network.",
      "type": "object"
     }
    },
    "required": [
     "azureApiVersion",
     "backendIPConfigurations",
     "etag",
     "inboundNatRules",
     "loadBalancingRules",
     "outboundRule",
     "outboundRules",
     "provisioningState",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getLocalNetworkGateway": {
   "description": "Gets the specified local network gateway in a resource group.",
   "inputs": {
    "properties": {
     "localNetworkGatewayName": {
      "description": "The name of the local network gateway.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "localNetworkGatewayName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "A common class for general resource information.",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "bgpSettings": {
      "$ref": "#/types/azure-native_network_v20230201:network:BgpSettingsResponse",
      "description": "Local network gateway's BGP speaker settings.",
      "type": "object"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "fqdn": {
      "description": "FQDN of local network gateway.",
      "type": "string"
     },
     "gatewayIpAddress": {
      "description": "IP address of local network gateway.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "localNetworkAddressSpace": {
      "$ref": "#/types/azure-native_network_v20230201:network:AddressSpaceResponse",
      "description": "Local network site address space.",
      "type": "object"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the local network gateway resource.",
      "type": "string"
     },
     "resourceGuid": {
      "description": "The resource GUID property of the local network gateway resource.",
      "type": "string"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Resource tags.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "name",
     "provisioningState",
     "resourceGuid",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getManagementGroupNetworkManagerConnection": {
   "description": "Get a specified connection created by this management group.",
   "inputs": {
    "properties": {
     "managementGroupId": {
      "description": "The management group Id which uniquely identify the Microsoft Azure management group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "networkManagerConnectionName": {
      "description": "Name for the network manager connection.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "managementGroupId",
     "networkManagerConnectionName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "The Network Manager Connection resource",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "description": {
      "description": "A description of the network manager connection.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "networkManagerId": {
      "description": "Network Manager Id.",
      "type": "string"
     },
     "systemData": {
      "$ref": "#/types/azure-native_network_v20230201:network:SystemDataResponse",
      "description": "The system metadata related to this resource.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "id",
     "name",
     "systemData",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getNatGateway": {
   "description": "Gets the specified nat gateway in a specified resource group.",
   "inputs": {
    "properties": {
     "expand": {
      "description": "Expands referenced resources.",
      "type": "string"
     },
     "natGatewayName": {
      "description": "The name of the nat gateway.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "natGatewayName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Nat Gateway resource.",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "idleTimeoutInMinutes": {
      "description": "The idle timeout of the nat gateway.",
      "type": "integer"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the NAT gateway resource.",
      "type": "string"
     },
     "publicIpAddresses": {
      "description": "An array of public ip addresses associated with the nat gateway resource.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
       "type": "object"
      },
      "type": "array"
     },
     "publicIpPrefixes": {
      "description": "An array of public ip prefixes associated with the nat gateway resource.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
       "type": "object"
      },
      "type": "array"
     },
     "resourceGuid": {
      "description": "The resource GUID property of the NAT gateway resource.",
      "type": "string"
     },
     "sku": {
      "$ref": "#/types/azure-native_network_v20230201:network:NatGatewaySkuResponse",
      "description": "The nat gateway SKU.",
      "type": "object"
     },
     "subnets": {
      "description": "An array of references to the subnets using this nat gateway resource.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
       "type": "object"
      },
      "type": "array"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Resource tags.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     },
     "zones": {
      "description": "A list of availability zones denoting the zone in which Nat Gateway should be deployed.",
      "items": {
       "type": "string"
      },
      "type": "array"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "name",
     "provisioningState",
     "resourceGuid",
     "subnets",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getNatRule": {
   "description": "Retrieves the details of a nat ruleGet.",
   "inputs": {
    "properties": {
     "gatewayName": {
      "description": "The name of the gateway.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "natRuleName": {
      "description": "The name of the nat rule.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The resource group name of the VpnGateway.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "gatewayName",
     "natRuleName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "VpnGatewayNatRule Resource.",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "egressVpnSiteLinkConnections": {
      "description": "List of egress VpnSiteLinkConnections.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
       "type": "object"
      },
      "type": "array"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "externalMappings": {
      "description": "The private IP address external mapping for NAT.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:VpnNatRuleMappingResponse",
       "type": "object"
      },
      "type": "array"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "ingressVpnSiteLinkConnections": {
      "description": "List of ingress VpnSiteLinkConnections.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
       "type": "object"
      },
      "type": "array"
     },
     "internalMappings": {
      "description": "The private IP address internal mapping for NAT.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:VpnNatRuleMappingResponse",
       "type": "object"
      },
      "type": "array"
     },
     "ipConfigurationId": {
      "description": "The IP Configuration ID this NAT rule applies to.",
      "type": "string"
     },
     "mode": {
      "description": "The Source NAT direction of a VPN NAT.",
      "type": "string"
     },
     "name": {
      "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the NAT Rule resource.",
      "type": "string"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "egressVpnSiteLinkConnections",
     "etag",
     "ingressVpnSiteLinkConnections",
     "provisioningState",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getNetworkGroup": {
   "description": "Gets the specified network group.",
   "inputs": {
    "properties": {
     "networkGroupName": {
      "description": "The name of the network group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "networkManagerName": {
      "description": "The name of the network manager.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "networkGroupName",
     "networkManagerName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "The network group resource",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "description": {
      "description": "A description of the network group.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the scope assignment resource.",
      "type": "string"
     },
     "resourceGuid": {
      "description": "Unique identifier for this resource.",
      "type": "string"
     },
     "systemData": {
      "$ref": "#/types/azure-native_network_v20230201:network:SystemDataResponse",
      "description": "The system metadata related to this resource.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "id",
     "name",
     "provisioningState",
     "resourceGuid",
     "systemData",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getNetworkInterface": {
   "description": "Gets information about the specified network interface.",
   "inputs": {
    "properties": {
     "expand": {
      "description": "Expands referenced resources.",
      "type": "string"
     },
     "networkInterfaceName": {
      "description": "The name of the network interface.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "networkInterfaceName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "A network interface in a resource group.",
    "properties": {
     "auxiliaryMode": {
      "description": "Auxiliary mode of Network Interface resource.",
      "type": "string"
     },
     "auxiliarySku": {
      "description": "Auxiliary sku of Network Interface resource.",
      "type": "string"
     },
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "disableTcpStateTracking": {
      "description": "Indicates whether to disable tcp state tracking.",
      "type": "boolean"
     },
     "dnsSettings": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceDnsSettingsResponse",
      "description": "The DNS settings in network interface.",
      "type": "object"
     },
     "dscpConfiguration": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "description": "A reference to the dscp configuration to which the network interface is linked.",
      "type": "object"
     },
     "enableAcceleratedNetworking": {
      "description": "If the network interface is configured for accelerated networking. Not applicable to VM sizes which require accelerated networking.",
      "type": "boolean"
     },
     "enableIPForwarding": {
      "description": "Indicates whether IP forwarding is enabled on this network interface.",
      "type": "boolean"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "extendedLocation": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse",
      "description": "The extended location of the network interface.",
      "type": "object"
     },
     "hostedWorkloads": {
      "description": "A list of references to linked BareMetal resources.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "ipConfigurations": {
      "description": "A list of IPConfigurations of the network interface.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceIPConfigurationResponse",
       "type": "object"
      },
      "type": "array"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "macAddress": {
      "description": "The MAC address of the network interface.",
      "type": "string"
     },
     "migrationPhase": {
      "description": "Migration phase of Network Interface resource.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "networkSecurityGroup": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkSecurityGroupResponse",
      "description": "The reference to the NetworkSecurityGroup resource.",
      "type": "object"
     },
     "nicType": {
      "description": "Type of Network Interface resource.",
      "type": "string"
     },
     "primary": {
      "description": "Whether this is a primary network interface on a virtual machine.",
      "type": "boolean"
     },
     "privateEndpoint": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateEndpointResponse",
      "description": "A reference to the private endpoint to which the network interface is linked.",
      "type": "object"
     },
     "privateLinkService": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceResponse",
      "description": "Privatelinkservice of the network interface resource.",
      "type": "object"
     },
     "provisioningState": {
      "description": "The provisioning state of the network interface resource.",
      "type": "string"
     },
     "resourceGuid": {
      "description": "The resource GUID property of the network interface resource.",
      "type": "string"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Resource tags.",
      "type": "object"
     },
     "tapConfigurations": {
      "description": "A list of TapConfigurations of the network interface.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceTapConfigurationResponse",
       "type": "object"
      },
      "type": "array"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     },
     "virtualMachine": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "description": "The reference to a virtual machine.",
      "type": "object"
     },
     "vnetEncryptionSupported": {
      "description": "Whether the virtual machine this nic is attached to supports encryption.",
      "type": "boolean"
     },
     "workloadType": {
      "description": "WorkloadType of the NetworkInterface for BareMetal resources",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "dscpConfiguration",
     "etag",
     "hostedWorkloads",
     "macAddress",
     "name",
     "primary",
     "privateEndpoint",
     "provisioningState",
     "resourceGuid",
     "tapConfigurations",
     "type",
     "virtualMachine",
     "vnetEncryptionSupported"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getNetworkInterfaceTapConfiguration": {
   "description": "Get the specified tap configuration on a network interface.",
   "inputs": {
    "properties": {
     "networkInterfaceName": {
      "description": "The name of the network interface.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "tapConfigurationName": {
      "description": "The name of the tap configuration.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "networkInterfaceName",
     "resourceGroupName",
     "tapConfigurationName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Tap configuration in a Network Interface.",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "name": {
      "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the network interface tap configuration resource.",
      "type": "string"
     },
     "type": {
      "description": "Sub Resource type.",
      "type": "string"
     },
     "virtualNetworkTap": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkTapResponse",
      "description": "The reference to the Virtual Network Tap resource.",
      "type": "object"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "provisioningState",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getNetworkManager": {
   "description": "Gets the specified Network Manager.",
   "inputs": {
    "properties": {
     "networkManagerName": {
      "description": "The name of the network manager.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "networkManagerName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "The Managed Network resource",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "description": {
      "description": "A description of the network manager.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "networkManagerScopeAccesses": {
      "description": "Scope Access.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "networkManagerScopes": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkManagerPropertiesResponseNetworkManagerScopes",
      "description": "Scope of Network Manager.",
      "type": "object"
     },
     "provisioningState": {
      "description": "The provisioning state of the network manager resource.",
      "type": "string"
     },
     "resourceGuid": {
      "description": "Unique identifier for this resource.",
      "type": "string"
     },
     "systemData": {
      "$ref": "#/types/azure-native_network_v20230201:network:SystemDataResponse",
      "description": "The system metadata related to this resource.",
      "type": "object"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Resource tags.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "name",
     "networkManagerScopeAccesses",
     "networkManagerScopes",
     "provisioningState",
     "resourceGuid",
     "systemData",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getNetworkProfile": {
   "description": "Gets the specified network profile in a specified resource group.",
   "inputs": {
    "properties": {
     "expand": {
      "description": "Expands referenced resources.",
      "type": "string"
     },
     "networkProfileName": {
      "description": "The name of the public IP prefix.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "networkProfileName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Network profile resource.",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "containerNetworkInterfaceConfigurations": {
      "description": "List of chid container network interface configurations.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ContainerNetworkInterfaceConfigurationResponse",
       "type": "object"
      },
      "type": "array"
     },
     "containerNetworkInterfaces": {
      "description": "List of child container network interfaces.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ContainerNetworkInterfaceResponse",
       "type": "object"
      },
      "type": "array"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the network profile resource.",
      "type": "string"
     },
     "resourceGuid": {
      "description": "The resource GUID property of the network profile resource.",
      "type": "string"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Resource tags.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "containerNetworkInterfaces",
     "etag",
     "name",
     "provisioningState",
     "resourceGuid",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getNetworkSecurityGroup": {
   "description": "Gets the specified network security group.",
   "inputs": {
    "properties": {
     "expand": {
      "description": "Expands referenced resources.",
      "type": "string"
     },
     "networkSecurityGroupName": {
      "description": "The name of the network security group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "networkSecurityGroupName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "NetworkSecurityGroup resource.",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "defaultSecurityRules": {
      "description": "The default security rules of network security group.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:SecurityRuleResponse",
       "type": "object"
      },
      "type": "array"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "flowLogs": {
      "description": "A collection of references to flow log resources.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:FlowLogResponse",
       "type": "object"
      },
      "type": "array"
     },
     "flushConnection": {
      "description": "When enabled, flows created from Network Security Group connections will be re-evaluated when rules are updates. Initial enablement will trigger re-evaluation.",
      "type": "boolean"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "networkInterfaces": {
      "description": "A collection of references to network interfaces.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceResponse",
       "type": "object"
      },
      "type": "array"
     },
     "provisioningState": {
      "description": "The provisioning state of the network security group resource.",
      "type": "string"
     },
     "resourceGuid": {
      "description": "The resource GUID property of the network security group resource.",
      "type": "string"
     },
     "securityRules": {
      "description": "A collection of security rules of the network security group.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:SecurityRuleResponse",
       "type": "object"
      },
      "type": "array"
     },
     "subnets": {
      "description": "A collection of references to subnets.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:SubnetResponse",
       "type": "object"
      },
      "type": "array"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Resource tags.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "defaultSecurityRules",
     "etag",
     "flowLogs",
     "name",
     "networkInterfaces",
     "provisioningState",
     "resourceGuid",
     "subnets",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getNetworkVirtualAppliance": {
   "description": "Gets the specified Network Virtual Appliance.",
   "inputs": {
    "properties": {
     "expand": {
      "description": "Expands referenced resources.",
      "type": "string"
     },
     "networkVirtualApplianceName": {
      "description": "The name of Network Virtual Appliance.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "networkVirtualApplianceName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "NetworkVirtualAppliance Resource.",
    "properties": {
     "additionalNics": {
      "description": "Details required for Additional Network Interface.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:VirtualApplianceAdditionalNicPropertiesResponse",
       "type": "object"
      },
      "type": "array"
     },
     "addressPrefix": {
      "description": "Address Prefix.",
      "type": "string"
     },
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "bootStrapConfigurationBlobs": {
      "description": "BootStrapConfigurationBlobs storage URLs.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "cloudInitConfiguration": {
      "description": "CloudInitConfiguration string in plain text.",
      "type": "string"
     },
     "cloudInitConfigurationBlobs": {
      "description": "CloudInitConfigurationBlob storage URLs.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "delegation": {
      "$ref": "#/types/azure-native_network_v20230201:network:DelegationPropertiesResponse",
      "description": "The delegation for the Virtual Appliance",
      "type": "object"
     },
     "deploymentType": {
      "description": "The deployment type. PartnerManaged for the SaaS NVA",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "identity": {
      "$ref": "#/types/azure-native_network_v20230201:network:ManagedServiceIdentityResponse",
      "description": "The service principal that has read access to cloud-init and config blob.",
      "type": "object"
     },
     "inboundSecurityRules": {
      "description": "List of references to InboundSecurityRules.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
       "type": "object"
      },
      "type": "array"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "nvaSku": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualApplianceSkuPropertiesResponse",
      "description": "Network Virtual Appliance SKU.",
      "type": "object"
     },
     "partnerManagedResource": {
      "$ref": "#/types/azure-native_network_v20230201:network:PartnerManagedResourcePropertiesResponse",
      "description": "The delegation for the Virtual Appliance",
      "type": "object"
     },
     "provisioningState": {
      "description": "The provisioning state of the resource.",
      "type": "string"
     },
     "sshPublicKey": {
      "description": "Public key for SSH login.",
      "type": "string"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Resource tags.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     },
     "virtualApplianceAsn": {
      "description": "VirtualAppliance ASN. Microsoft private, public and IANA reserved ASN are not supported.",
      "type": "number"
     },
     "virtualApplianceConnections": {
      "description": "List of references to VirtualApplianceConnections.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
       "type": "object"
      },
      "type": "array"
     },
     "virtualApplianceNics": {
      "description": "List of Virtual Appliance Network Interfaces.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:VirtualApplianceNicPropertiesResponse",
       "type": "object"
      },
      "type": "array"
     },
     "virtualApplianceSites": {
      "description": "List of references to VirtualApplianceSite.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
       "type": "object"
      },
      "type": "array"
     },
     "virtualHub": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "description": "The Virtual Hub where Network Virtual Appliance is being deployed.",
      "type": "object"
     }
    },
    "required": [
     "addressPrefix",
     "azureApiVersion",
     "deploymentType",
     "etag",
     "inboundSecurityRules",
     "name",
     "provisioningState",
     "type",
     "virtualApplianceConnections",
     "virtualApplianceNics",
     "virtualApplianceSites"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getNetworkVirtualApplianceConnection": {
   "description": "Retrieves the details of specified NVA connection.",
   "inputs": {
    "properties": {
     "connectionName": {
      "description": "The name of the NVA connection.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "networkVirtualApplianceName": {
      "description": "The name of the Network Virtual Appliance.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "connectionName",
     "networkVirtualApplianceName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "NetworkVirtualApplianceConnection resource.",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "name": {
      "description": "The name of the resource.",
      "type": "string"
     },
     "properties": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkVirtualApplianceConnectionPropertiesResponse",
      "description": "Properties of the express route connection.",
      "type": "object"
     }
    },
    "required": [
     "azureApiVersion",
     "properties"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getNetworkWatcher": {
   "description": "Gets the specified network watcher by resource group.",
   "inputs": {
    "properties": {
     "networkWatcherName": {
      "description": "The name of the network watcher.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "networkWatcherName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Network watcher in a resource group.",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the network watcher resource.",
      "type": "string"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Resource tags.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "name",
     "provisioningState",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getP2sVpnGateway": {
   "description": "Retrieves the details of a virtual wan p2s vpn gateway.",
   "inputs": {
    "properties": {
     "gatewayName": {
      "description": "The name of the gateway.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The resource group name of the P2SVpnGateway.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "gatewayName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "P2SVpnGateway Resource.",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "customDnsServers": {
      "description": "List of all customer specified DNS servers IP addresses.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "isRoutingPreferenceInternet": {
      "description": "Enable Routing Preference property for the Public IP Interface of the P2SVpnGateway.",
      "type": "boolean"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "p2SConnectionConfigurations": {
      "description": "List of all p2s connection configurations of the gateway.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:P2SConnectionConfigurationResponse",
       "type": "object"
      },
      "type": "array"
     },
     "provisioningState": {
      "description": "The provisioning state of the P2S VPN gateway resource.",
      "type": "string"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Resource tags.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     },
     "virtualHub": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "description": "The VirtualHub to which the gateway belongs.",
      "type": "object"
     },
     "vpnClientConnectionHealth": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnClientConnectionHealthResponse",
      "description": "All P2S VPN clients' connection health status.",
      "type": "object"
     },
     "vpnGatewayScaleUnit": {
      "description": "The scale unit for this p2s vpn gateway.",
      "type": "integer"
     },
     "vpnServerConfiguration": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "description": "The VpnServerConfiguration to which the p2sVpnGateway is attached to.",
      "type": "object"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "location",
     "name",
     "provisioningState",
     "type",
     "vpnClientConnectionHealth"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getPacketCapture": {
   "description": "Gets a packet capture session by name.",
   "inputs": {
    "properties": {
     "networkWatcherName": {
      "description": "The name of the network watcher.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "packetCaptureName": {
      "description": "The name of the packet capture session.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "networkWatcherName",
     "packetCaptureName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Information about packet capture session.",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "bytesToCapturePerPacket": {
      "default": 0,
      "description": "Number of bytes captured per packet, the remaining bytes are truncated.",
      "type": "number"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "filters": {
      "description": "A list of packet capture filters.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:PacketCaptureFilterResponse",
       "type": "object"
      },
      "type": "array"
     },
     "id": {
      "description": "ID of the packet capture operation.",
      "type": "string"
     },
     "name": {
      "description": "Name of the packet capture session.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the packet capture session.",
      "type": "string"
     },
     "scope": {
      "$ref": "#/types/azure-native_network_v20230201:network:PacketCaptureMachineScopeResponse",
      "description": "A list of AzureVMSS instances which can be included or excluded to run packet capture. If both included and excluded are empty, then the packet capture will run on all instances of AzureVMSS.",
      "type": "object"
     },
     "storageLocation": {
      "$ref": "#/types/azure-native_network_v20230201:network:PacketCaptureStorageLocationResponse",
      "description": "The storage location for a packet capture session.",
      "type": "object"
     },
     "target": {
      "description": "The ID of the targeted resource, only AzureVM and AzureVMSS as target type are currently supported.",
      "type": "string"
     },
     "targetType": {
      "description": "Target type of the resource provided.",
      "type": "string"
     },
     "timeLimitInSeconds": {
      "default": 18000,
      "description": "Maximum duration of the capture session in seconds.",
      "type": "integer"
     },
     "totalBytesPerSession": {
      "default": 1073741824,
      "description": "Maximum size of the capture output.",
      "type": "number"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "id",
     "name",
     "provisioningState",
     "storageLocation",
     "target"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getPrivateDnsZoneGroup": {
   "description": "Gets the private dns zone group resource by specified private dns zone group name.",
   "inputs": {
    "properties": {
     "privateDnsZoneGroupName": {
      "description": "The name of the private dns zone group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "privateEndpointName": {
      "description": "The name of the private endpoint.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "privateDnsZoneGroupName",
     "privateEndpointName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Private dns zone group resource.",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "name": {
      "description": "Name of the resource that is unique within a resource group. This name can be used to access the resource.",
      "type": "string"
     },
     "privateDnsZoneConfigs": {
      "description": "A collection of private dns zone configurations of the private dns zone group.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:PrivateDnsZoneConfigResponse",
       "type": "object"
      },
      "type": "array"
     },
     "provisioningState": {
      "description": "The provisioning state of the private dns zone group resource.",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "provisioningState"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getPrivateEndpoint": {
   "description": "Gets the specified private endpoint by resource group.",
   "inputs": {
    "properties": {
     "expand": {
      "description": "Expands referenced resources.",
      "type": "string"
     },
     "privateEndpointName": {
      "description": "The name of the private endpoint.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "privateEndpointName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Private endpoint resource.",
    "properties": {
     "applicationSecurityGroups": {
      "description": "Application security groups in which the private endpoint IP configuration is included.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ApplicationSecurityGroupResponse",
       "type": "object"
      },
      "type": "array"
     },
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "customDnsConfigs": {
      "description": "An array of custom dns configurations.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:CustomDnsConfigPropertiesFormatResponse",
       "type": "object"
      },
      "type": "array"
     },
     "customNetworkInterfaceName": {
      "description": "The custom name of the network interface attached to the private endpoint.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "extendedLocation": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse",
      "description": "The extended location of the load balancer.",
      "type": "object"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "ipConfigurations": {
      "description": "A list of IP configurations of the private endpoint. This will be used to map to the First Party Service's endpoints.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:PrivateEndpointIPConfigurationResponse",
       "type": "object"
      },
      "type": "array"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "manualPrivateLinkServiceConnections": {
      "description": "A grouping of information about the connection to the remote resource. Used when the network admin does not have access to approve connections to the remote resource.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceConnectionResponse",
       "type": "object"
      },
      "type": "array"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "networkInterfaces": {
      "description": "An array of references to the network interfaces created for this private endpoint.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceResponse",
       "type": "object"
      },
      "type": "array"
     },
     "privateLinkServiceConnections": {
      "description": "A grouping of information about the connection to the remote resource.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceConnectionResponse",
       "type": "object"
      },
      "type": "array"
     },
     "provisioningState": {
      "description": "The provisioning state of the private endpoint resource.",
      "type": "string"
     },
     "subnet": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubnetResponse",
      "description": "The ID of the subnet from which the private IP will be allocated.",
      "type": "object"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Resource tags.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "name",
     "networkInterfaces",
     "provisioningState",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getPrivateLinkService": {
   "description": "Gets the specified private link service by resource group.",
   "inputs": {
    "properties": {
     "expand": {
      "description": "Expands referenced resources.",
      "type": "string"
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "serviceName": {
      "description": "The name of the private link service.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "resourceGroupName",
     "serviceName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Private link service resource.",
    "properties": {
     "alias": {
      "description": "The alias of the private link service.",
      "type": "string"
     },
     "autoApproval": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServicePropertiesResponseAutoApproval",
      "description": "The auto-approval list of the private link service.",
      "type": "object"
     },
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "enableProxyProtocol": {
      "description": "Whether the private link service is enabled for proxy protocol or not.",
      "type": "boolean"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "extendedLocation": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse",
      "description": "The extended location of the load balancer.",
      "type": "object"
     },
     "fqdns": {
      "description": "The list of Fqdn.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "ipConfigurations": {
      "description": "An array of private link service IP configurations.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceIpConfigurationResponse",
       "type": "object"
      },
      "type": "array"
     },
     "loadBalancerFrontendIpConfigurations": {
      "description": "An array of references to the load balancer IP configurations.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:FrontendIPConfigurationResponse",
       "type": "object"
      },
      "type": "array"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "networkInterfaces": {
      "description": "An array of references to the network interfaces created for this private link service.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceResponse",
       "type": "object"
      },
      "type": "array"
     },
     "privateEndpointConnections": {
      "description": "An array of list about connections to the private endpoint.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:PrivateEndpointConnectionResponse",
       "type": "object"
      },
      "type": "array"
     },
     "provisioningState": {
      "description": "The provisioning state of the private link service resource.",
      "type": "string"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Resource tags.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     },
     "visibility": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServicePropertiesResponseVisibility",
      "description": "The visibility list of the private link service.",
      "type": "object"
     }
    },
    "required": [
     "alias",
     "azureApiVersion",
     "etag",
     "name",
     "networkInterfaces",
     "privateEndpointConnections",
     "provisioningState",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getPrivateLinkServicePrivateEndpointConnection": {
   "description": "Get the specific private end point connection by specific private link service in the resource group.",
   "inputs": {
    "properties": {
     "expand": {
      "description": "Expands referenced resources.",
      "type": "string"
     },
     "peConnectionName": {
      "description": "The name of the private end point connection.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "serviceName": {
      "description": "The name of the private link service.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "peConnectionName",
     "resourceGroupName",
     "serviceName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "PrivateEndpointConnection resource.",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "linkIdentifier": {
      "description": "The consumer link id.",
      "type": "string"
     },
     "name": {
      "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
      "type": "string"
     },
     "privateEndpoint": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateEndpointResponse",
      "description": "The resource of private end point.",
      "type": "object"
     },
     "privateEndpointLocation": {
      "description": "The location of the private endpoint.",
      "type": "string"
     },
     "privateLinkServiceConnectionState": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceConnectionStateResponse",
      "description": "A collection of information about the state of the connection between service consumer and provider.",
      "type": "object"
     },
     "provisioningState": {
      "description": "The provisioning state of the private endpoint connection resource.",
      "type": "string"
     },
     "type": {
      "description": "The resource type.",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "linkIdentifier",
     "privateEndpoint",
     "privateEndpointLocation",
     "provisioningState",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getPublicIPAddress": {
   "description": "Gets the specified public IP address in a specified resource group.",
   "inputs": {
    "properties": {
     "expand": {
      "description": "Expands referenced resources.",
      "type": "string"
     },
     "publicIpAddressName": {
      "description": "The name of the public IP address.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "publicIpAddressName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Public IP address resource.",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "ddosSettings": {
      "$ref": "#/types/azure-native_network_v20230201:network:DdosSettingsResponse",
      "description": "The DDoS protection custom policy associated with the public IP address.",
      "type": "object"
     },
     "deleteOption": {
      "description": "Specify what happens to the public IP address when the VM using it is deleted",
      "type": "string"
     },
     "dnsSettings": {
      "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddressDnsSettingsResponse",
      "description": "The FQDN of the DNS record associated with the public IP address.",
      "type": "object"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "extendedLocation": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse",
      "description": "The extended location of the public ip address.",
      "type": "object"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "idleTimeoutInMinutes": {
      "description": "The idle timeout of the public IP address.",
      "type": "integer"
     },
     "ipAddress": {
      "description": "The IP address associated with the public IP address resource.",
      "type": "string"
     },
     "ipConfiguration": {
      "$ref": "#/types/azure-native_network_v20230201:network:IPConfigurationResponse",
      "description": "The IP configuration associated with the public IP address.",
      "type": "object"
     },
     "ipTags": {
      "description": "The list of tags associated with the public IP address.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:IpTagResponse",
       "type": "object"
      },
      "type": "array"
     },
     "linkedPublicIPAddress": {
      "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddressResponse",
      "description": "The linked public IP address of the public IP address resource.",
      "type": "object"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "migrationPhase": {
      "description": "Migration phase of Public IP Address.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "natGateway": {
      "$ref": "#/types/azure-native_network_v20230201:network:NatGatewayResponse",
      "description": "The NatGateway for the Public IP address.",
      "type": "object"
     },
     "provisioningState": {
      "description": "The provisioning state of the public IP address resource.",
      "type": "string"
     },
     "publicIPAddressVersion": {
      "description": "The public IP address version.",
      "type": "string"
     },
     "publicIPAllocationMethod": {
      "description": "The public IP address allocation method.",
      "type": "string"
     },
     "publicIPPrefix": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "description": "The Public IP Prefix this Public IP Address should be allocated from.",
      "type": "object"
     },
     "resourceGuid": {
      "description": "The resource GUID property of the public IP address resource.",
      "type": "string"
     },
     "servicePublicIPAddress": {
      "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddressResponse",
      "description": "The service public IP address of the public IP address resource.",
      "type": "object"
     },
     "sku": {
      "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddressSkuResponse",
      "description": "The public IP address SKU.",
      "type": "object"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Resource tags.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     },
     "zones": {
      "description": "A list of availability zones denoting the IP allocated for the resource needs to come from.",
      "items": {
       "type": "string"
      },
      "type": "array"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "ipConfiguration",
     "name",
     "provisioningState",
     "resourceGuid",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getPublicIPPrefix": {
   "description": "Gets the specified public IP prefix in a specified resource group.",
   "inputs": {
    "properties": {
     "expand": {
      "description": "Expands referenced resources.",
      "type": "string"
     },
     "publicIpPrefixName": {
      "description": "The name of the public IP prefix.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "publicIpPrefixName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Public IP prefix resource.",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "customIPPrefix": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "description": "The customIpPrefix that this prefix is associated with.",
      "type": "object"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "extendedLocation": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse",
      "description": "The extended location of the public ip address.",
      "type": "object"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "ipPrefix": {
      "description": "The allocated Prefix.",
      "type": "string"
     },
     "ipTags": {
      "description": "The list of tags associated with the public IP prefix.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:IpTagResponse",
       "type": "object"
      },
      "type": "array"
     },
     "loadBalancerFrontendIpConfiguration": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "description": "The reference to load balancer frontend IP configuration associated with the public IP prefix.",
      "type": "object"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "natGateway": {
      "$ref": "#/types/azure-native_network_v20230201:network:NatGatewayResponse",
      "description": "NatGateway of Public IP Prefix.",
      "type": "object"
     },
     "prefixLength": {
      "description": "The Length of the Public IP Prefix.",
      "type": "integer"
     },
     "provisioningState": {
      "description": "The provisioning state of the public IP prefix resource.",
      "type": "string"
     },
     "publicIPAddressVersion": {
      "description": "The public IP address version.",
      "type": "string"
     },
     "publicIPAddresses": {
      "description": "The list of all referenced PublicIPAddresses.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ReferencedPublicIpAddressResponse",
       "type": "object"
      },
      "type": "array"
     },
     "resourceGuid": {
      "description": "The resource GUID property of the public IP prefix resource.",
      "type": "string"
     },
     "sku": {
      "$ref": "#/types/azure-native_network_v20230201:network:PublicIPPrefixSkuResponse",
      "description": "The public IP prefix SKU.",
      "type": "object"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Resource tags.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     },
     "zones": {
      "description": "A list of availability zones denoting the IP allocated for the resource needs to come from.",
      "items": {
       "type": "string"
      },
      "type": "array"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "ipPrefix",
     "loadBalancerFrontendIpConfiguration",
     "name",
     "provisioningState",
     "publicIPAddresses",
     "resourceGuid",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getRoute": {
   "description": "Gets the specified route from a route table.",
   "inputs": {
    "properties": {
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "routeName": {
      "description": "The name of the route.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "routeTableName": {
      "description": "The name of the route table.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "resourceGroupName",
     "routeName",
     "routeTableName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Route resource.",
    "properties": {
     "addressPrefix": {
      "description": "The destination CIDR to which the route applies.",
      "type": "string"
     },
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "hasBgpOverride": {
      "description": "A value indicating whether this route overrides overlapping BGP routes regardless of LPM.",
      "type": "boolean"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "name": {
      "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
      "type": "string"
     },
     "nextHopIpAddress": {
      "description": "The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.",
      "type": "string"
     },
     "nextHopType": {
      "description": "The type of Azure hop the packet should be sent to.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the route resource.",
      "type": "string"
     },
     "type": {
      "description": "The type of the resource.",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "nextHopType",
     "provisioningState"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getRouteFilter": {
   "description": "Gets the specified route filter.",
   "inputs": {
    "properties": {
     "expand": {
      "description": "Expands referenced express route bgp peering resources.",
      "type": "string"
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "routeFilterName": {
      "description": "The name of the route filter.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "resourceGroupName",
     "routeFilterName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Route Filter Resource.",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "ipv6Peerings": {
      "description": "A collection of references to express route circuit ipv6 peerings.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitPeeringResponse",
       "type": "object"
      },
      "type": "array"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "peerings": {
      "description": "A collection of references to express route circuit peerings.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitPeeringResponse",
       "type": "object"
      },
      "type": "array"
     },
     "provisioningState": {
      "description": "The provisioning state of the route filter resource.",
      "type": "string"
     },
     "rules": {
      "description": "Collection of RouteFilterRules contained within a route filter.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:RouteFilterRuleResponse",
       "type": "object"
      },
      "type": "array"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Resource tags.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "ipv6Peerings",
     "location",
     "name",
     "peerings",
     "provisioningState",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getRouteFilterRule": {
   "description": "Gets the specified rule from a route filter.",
   "inputs": {
    "properties": {
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "routeFilterName": {
      "description": "The name of the route filter.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "ruleName": {
      "description": "The name of the rule.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "resourceGroupName",
     "routeFilterName",
     "ruleName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Route Filter Rule Resource.",
    "properties": {
     "access": {
      "description": "The access type of the rule.",
      "type": "string"
     },
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "communities": {
      "description": "The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020'].",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "name": {
      "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the route filter rule resource.",
      "type": "string"
     },
     "routeFilterRuleType": {
      "description": "The rule type of the rule.",
      "type": "string"
     }
    },
    "required": [
     "access",
     "azureApiVersion",
     "communities",
     "etag",
     "provisioningState",
     "routeFilterRuleType"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getRouteMap": {
   "description": "Retrieves the details of a RouteMap.",
   "inputs": {
    "properties": {
     "resourceGroupName": {
      "description": "The resource group name of the RouteMap's resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "routeMapName": {
      "description": "The name of the RouteMap.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "virtualHubName": {
      "description": "The name of the VirtualHub containing the RouteMap.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "resourceGroupName",
     "routeMapName",
     "virtualHubName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "The RouteMap child resource of a Virtual hub.",
    "properties": {
     "associatedInboundConnections": {
      "description": "List of connections which have this RoutMap associated for inbound traffic.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "associatedOutboundConnections": {
      "description": "List of connections which have this RoutMap associated for outbound traffic.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "name": {
      "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the RouteMap resource.",
      "type": "string"
     },
     "rules": {
      "description": "List of RouteMap rules to be applied.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:RouteMapRuleResponse",
       "type": "object"
      },
      "type": "array"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "id",
     "name",
     "provisioningState",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getRouteTable": {
   "description": "Gets the specified route table.",
   "inputs": {
    "properties": {
     "expand": {
      "description": "Expands referenced resources.",
      "type": "string"
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "routeTableName": {
      "description": "The name of the route table.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "resourceGroupName",
     "routeTableName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Route table resource.",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "disableBgpRoutePropagation": {
      "description": "Whether to disable the routes learned by BGP on that route table. True means disable.",
      "type": "boolean"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the route table resource.",
      "type": "string"
     },
     "resourceGuid": {
      "description": "The resource GUID property of the route table.",
      "type": "string"
     },
     "routes": {
      "description": "Collection of routes contained within a route table.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:RouteResponse",
       "type": "object"
      },
      "type": "array"
     },
     "subnets": {
      "description": "A collection of references to subnets.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:SubnetResponse",
       "type": "object"
      },
      "type": "array"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Resource tags.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "name",
     "provisioningState",
     "resourceGuid",
     "subnets",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getRoutingIntent": {
   "description": "Retrieves the details of a RoutingIntent.",
   "inputs": {
    "properties": {
     "resourceGroupName": {
      "description": "The resource group name of the RoutingIntent.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "routingIntentName": {
      "description": "The name of the RoutingIntent.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "virtualHubName": {
      "description": "The name of the VirtualHub.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "resourceGroupName",
     "routingIntentName",
     "virtualHubName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "The routing intent child resource of a Virtual hub.",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "name": {
      "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the RoutingIntent resource.",
      "type": "string"
     },
     "routingPolicies": {
      "description": "List of routing policies.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:RoutingPolicyResponse",
       "type": "object"
      },
      "type": "array"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "provisioningState",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getScopeConnection": {
   "description": "Get specified scope connection created by this Network Manager.",
   "inputs": {
    "properties": {
     "networkManagerName": {
      "description": "The name of the network manager.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "scopeConnectionName": {
      "description": "Name for the cross-tenant connection.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "networkManagerName",
     "resourceGroupName",
     "scopeConnectionName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "The Scope Connections resource",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "description": {
      "description": "A description of the scope connection.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "resourceId": {
      "description": "Resource ID.",
      "type": "string"
     },
     "systemData": {
      "$ref": "#/types/azure-native_network_v20230201:network:SystemDataResponse",
      "description": "The system metadata related to this resource.",
      "type": "object"
     },
     "tenantId": {
      "description": "Tenant ID.",
      "type": "string"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "id",
     "name",
     "systemData",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getSecurityAdminConfiguration": {
   "description": "Retrieves a network manager security admin configuration.",
   "inputs": {
    "properties": {
     "configurationName": {
      "description": "The name of the network manager Security Configuration.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "networkManagerName": {
      "description": "The name of the network manager.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "configurationName",
     "networkManagerName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Defines the security admin configuration",
    "properties": {
     "applyOnNetworkIntentPolicyBasedServices": {
      "description": "Enum list of network intent policy based services.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "description": {
      "description": "A description of the security configuration.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the resource.",
      "type": "string"
     },
     "resourceGuid": {
      "description": "Unique identifier for this resource.",
      "type": "string"
     },
     "systemData": {
      "$ref": "#/types/azure-native_network_v20230201:network:SystemDataResponse",
      "description": "The system metadata related to this resource.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "id",
     "name",
     "provisioningState",
     "resourceGuid",
     "systemData",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getSecurityPartnerProvider": {
   "description": "Gets the specified Security Partner Provider.",
   "inputs": {
    "properties": {
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "securityPartnerProviderName": {
      "description": "The name of the Security Partner Provider.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "resourceGroupName",
     "securityPartnerProviderName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Security Partner Provider resource.",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "connectionStatus": {
      "description": "The connection status with the Security Partner Provider.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the Security Partner Provider resource.",
      "type": "string"
     },
     "securityProviderName": {
      "description": "The security provider name.",
      "type": "string"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Resource tags.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     },
     "virtualHub": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "description": "The virtualHub to which the Security Partner Provider belongs.",
      "type": "object"
     }
    },
    "required": [
     "azureApiVersion",
     "connectionStatus",
     "etag",
     "name",
     "provisioningState",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getSecurityRule": {
   "description": "Get the specified network security rule.",
   "inputs": {
    "properties": {
     "networkSecurityGroupName": {
      "description": "The name of the network security group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "securityRuleName": {
      "description": "The name of the security rule.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "networkSecurityGroupName",
     "resourceGroupName",
     "securityRuleName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Network security rule.",
    "properties": {
     "access": {
      "description": "The network traffic is allowed or denied.",
      "type": "string"
     },
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "description": {
      "description": "A description for this rule. Restricted to 140 chars.",
      "type": "string"
     },
     "destinationAddressPrefix": {
      "description": "The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.",
      "type": "string"
     },
     "destinationAddressPrefixes": {
      "description": "The destination address prefixes. CIDR or destination IP ranges.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "destinationApplicationSecurityGroups": {
      "description": "The application security group specified as destination.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ApplicationSecurityGroupResponse",
       "type": "object"
      },
      "type": "array"
     },
     "destinationPortRange": {
      "description": "The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.",
      "type": "string"
     },
     "destinationPortRanges": {
      "description": "The destination port ranges.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "direction": {
      "description": "The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "name": {
      "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
      "type": "string"
     },
     "priority": {
      "description": "The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
      "type": "integer"
     },
     "protocol": {
      "description": "Network protocol this rule applies to.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the security rule resource.",
      "type": "string"
     },
     "sourceAddressPrefix": {
      "description": "The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.",
      "type": "string"
     },
     "sourceAddressPrefixes": {
      "description": "The CIDR or source IP ranges.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "sourceApplicationSecurityGroups": {
      "description": "The application security group specified as source.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ApplicationSecurityGroupResponse",
       "type": "object"
      },
      "type": "array"
     },
     "sourcePortRange": {
      "description": "The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.",
      "type": "string"
     },
     "sourcePortRanges": {
      "description": "The source port ranges.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "type": {
      "description": "The type of the resource.",
      "type": "string"
     }
    },
    "required": [
     "access",
     "azureApiVersion",
     "direction",
     "etag",
     "priority",
     "protocol",
     "provisioningState"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getServiceEndpointPolicy": {
   "description": "Gets the specified service Endpoint Policies in a specified resource group.",
   "inputs": {
    "properties": {
     "expand": {
      "description": "Expands referenced resources.",
      "type": "string"
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "serviceEndpointPolicyName": {
      "description": "The name of the service endpoint policy.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "resourceGroupName",
     "serviceEndpointPolicyName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Service End point policy resource.",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "contextualServiceEndpointPolicies": {
      "description": "A collection of contextual service endpoint policy.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "kind": {
      "description": "Kind of service endpoint policy. This is metadata used for the Azure portal experience.",
      "type": "string"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the service endpoint policy resource.",
      "type": "string"
     },
     "resourceGuid": {
      "description": "The resource GUID property of the service endpoint policy resource.",
      "type": "string"
     },
     "serviceAlias": {
      "description": "The alias indicating if the policy belongs to a service",
      "type": "string"
     },
     "serviceEndpointPolicyDefinitions": {
      "description": "A collection of service endpoint policy definitions of the service endpoint policy.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ServiceEndpointPolicyDefinitionResponse",
       "type": "object"
      },
      "type": "array"
     },
     "subnets": {
      "description": "A collection of references to subnets.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:SubnetResponse",
       "type": "object"
      },
      "type": "array"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Resource tags.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "kind",
     "name",
     "provisioningState",
     "resourceGuid",
     "subnets",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getServiceEndpointPolicyDefinition": {
   "description": "Get the specified service endpoint policy definitions from service endpoint policy.",
   "inputs": {
    "properties": {
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "serviceEndpointPolicyDefinitionName": {
      "description": "The name of the service endpoint policy definition name.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "serviceEndpointPolicyName": {
      "description": "The name of the service endpoint policy name.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "resourceGroupName",
     "serviceEndpointPolicyDefinitionName",
     "serviceEndpointPolicyName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Service Endpoint policy definitions.",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "description": {
      "description": "A description for this rule. Restricted to 140 chars.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "name": {
      "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the service endpoint policy definition resource.",
      "type": "string"
     },
     "service": {
      "description": "Service endpoint name.",
      "type": "string"
     },
     "serviceResources": {
      "description": "A list of service resources.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "type": {
      "description": "The type of the resource.",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "provisioningState"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getStaticMember": {
   "description": "Gets the specified static member.",
   "inputs": {
    "properties": {
     "networkGroupName": {
      "description": "The name of the network group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "networkManagerName": {
      "description": "The name of the network manager.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "staticMemberName": {
      "description": "The name of the static member.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "networkGroupName",
     "networkManagerName",
     "resourceGroupName",
     "staticMemberName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "StaticMember Item.",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the scope assignment resource.",
      "type": "string"
     },
     "region": {
      "description": "Resource region.",
      "type": "string"
     },
     "resourceId": {
      "description": "Resource Id.",
      "type": "string"
     },
     "systemData": {
      "$ref": "#/types/azure-native_network_v20230201:network:SystemDataResponse",
      "description": "The system metadata related to this resource.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "id",
     "name",
     "provisioningState",
     "region",
     "systemData",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getSubnet": {
   "description": "Gets the specified subnet by virtual network and resource group.",
   "inputs": {
    "properties": {
     "expand": {
      "description": "Expands referenced resources.",
      "type": "string"
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "subnetName": {
      "description": "The name of the subnet.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "virtualNetworkName": {
      "description": "The name of the virtual network.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "resourceGroupName",
     "subnetName",
     "virtualNetworkName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Subnet in a virtual network resource.",
    "properties": {
     "addressPrefix": {
      "description": "The address prefix for the subnet.",
      "type": "string"
     },
     "addressPrefixes": {
      "description": "List of address prefixes for the subnet.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "applicationGatewayIPConfigurations": {
      "description": "Application gateway IP configurations of virtual network resource.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayIPConfigurationResponse",
       "type": "object"
      },
      "type": "array"
     },
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "delegations": {
      "description": "An array of references to the delegations on the subnet.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:DelegationResponse",
       "type": "object"
      },
      "type": "array"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "ipAllocations": {
      "description": "Array of IpAllocation which reference this subnet.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
       "type": "object"
      },
      "type": "array"
     },
     "ipConfigurationProfiles": {
      "description": "Array of IP configuration profiles which reference this subnet.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:IPConfigurationProfileResponse",
       "type": "object"
      },
      "type": "array"
     },
     "ipConfigurations": {
      "description": "An array of references to the network interface IP configurations using subnet.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:IPConfigurationResponse",
       "type": "object"
      },
      "type": "array"
     },
     "name": {
      "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
      "type": "string"
     },
     "natGateway": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "description": "Nat gateway associated with this subnet.",
      "type": "object"
     },
     "networkSecurityGroup": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkSecurityGroupResponse",
      "description": "The reference to the NetworkSecurityGroup resource.",
      "type": "object"
     },
     "privateEndpointNetworkPolicies": {
      "default": "Disabled",
      "description": "Enable or Disable apply network policies on private end point in the subnet.",
      "type": "string"
     },
     "privateEndpoints": {
      "description": "An array of references to private endpoints.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:PrivateEndpointResponse",
       "type": "object"
      },
      "type": "array"
     },
     "privateLinkServiceNetworkPolicies": {
      "default": "Enabled",
      "description": "Enable or Disable apply network policies on private link service in the subnet.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the subnet resource.",
      "type": "string"
     },
     "purpose": {
      "description": "A read-only string identifying the intention of use for this subnet based on delegations and other user-defined properties.",
      "type": "string"
     },
     "resourceNavigationLinks": {
      "description": "An array of references to the external resources using subnet.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ResourceNavigationLinkResponse",
       "type": "object"
      },
      "type": "array"
     },
     "routeTable": {
      "$ref": "#/types/azure-native_network_v20230201:network:RouteTableResponse",
      "description": "The reference to the RouteTable resource.",
      "type": "object"
     },
     "serviceAssociationLinks": {
      "description": "An array of references to services injecting into this subnet.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ServiceAssociationLinkResponse",
       "type": "object"
      },
      "type": "array"
     },
     "serviceEndpointPolicies": {
      "description": "An array of service endpoint policies.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ServiceEndpointPolicyResponse",
       "type": "object"
      },
      "type": "array"
     },
     "serviceEndpoints": {
      "description": "An array of service endpoints.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ServiceEndpointPropertiesFormatResponse",
       "type": "object"
      },
      "type": "array"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "ipConfigurationProfiles",
     "ipConfigurations",
     "privateEndpoints",
     "provisioningState",
     "purpose",
     "resourceNavigationLinks",
     "serviceAssociationLinks"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getSubscriptionNetworkManagerConnection": {
   "description": "Get a specified connection created by this subscription.",
   "inputs": {
    "properties": {
     "networkManagerConnectionName": {
      "description": "Name for the network manager connection.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "networkManagerConnectionName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "The Network Manager Connection resource",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "description": {
      "description": "A description of the network manager connection.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "networkManagerId": {
      "description": "Network Manager Id.",
      "type": "string"
     },
     "systemData": {
      "$ref": "#/types/azure-native_network_v20230201:network:SystemDataResponse",
      "description": "The system metadata related to this resource.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "id",
     "name",
     "systemData",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getVirtualApplianceSite": {
   "description": "Gets the specified Virtual Appliance Site.",
   "inputs": {
    "properties": {
     "networkVirtualApplianceName": {
      "description": "The name of the Network Virtual Appliance.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "siteName": {
      "description": "The name of the site.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "networkVirtualApplianceName",
     "resourceGroupName",
     "siteName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Virtual Appliance Site resource.",
    "properties": {
     "addressPrefix": {
      "description": "Address Prefix.",
      "type": "string"
     },
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "name": {
      "description": "Name of the virtual appliance site.",
      "type": "string"
     },
     "o365Policy": {
      "$ref": "#/types/azure-native_network_v20230201:network:Office365PolicyPropertiesResponse",
      "description": "Office 365 Policy.",
      "type": "object"
     },
     "provisioningState": {
      "description": "The provisioning state of the resource.",
      "type": "string"
     },
     "type": {
      "description": "Site type.",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "provisioningState",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getVirtualHub": {
   "description": "Retrieves the details of a VirtualHub.",
   "inputs": {
    "properties": {
     "resourceGroupName": {
      "description": "The resource group name of the VirtualHub.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "virtualHubName": {
      "description": "The name of the VirtualHub.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "resourceGroupName",
     "virtualHubName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "VirtualHub Resource.",
    "properties": {
     "addressPrefix": {
      "description": "Address-prefix for this VirtualHub.",
      "type": "string"
     },
     "allowBranchToBranchTraffic": {
      "description": "Flag to control transit for VirtualRouter hub.",
      "type": "boolean"
     },
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "azureFirewall": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "description": "The azureFirewall associated with this VirtualHub.",
      "type": "object"
     },
     "bgpConnections": {
      "description": "List of references to Bgp Connections.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
       "type": "object"
      },
      "type": "array"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "expressRouteGateway": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "description": "The expressRouteGateway associated with this VirtualHub.",
      "type": "object"
     },
     "hubRoutingPreference": {
      "description": "The hubRoutingPreference of this VirtualHub.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "ipConfigurations": {
      "description": "List of references to IpConfigurations.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
       "type": "object"
      },
      "type": "array"
     },
     "kind": {
      "description": "Kind of service virtual hub. This is metadata used for the Azure portal experience for Route Server.",
      "type": "string"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "p2SVpnGateway": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "description": "The P2SVpnGateway associated with this VirtualHub.",
      "type": "object"
     },
     "preferredRoutingGateway": {
      "description": "The preferred gateway to route on-prem traffic",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the virtual hub resource.",
      "type": "string"
     },
     "routeMaps": {
      "description": "List of references to RouteMaps.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
       "type": "object"
      },
      "type": "array"
     },
     "routeTable": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualHubRouteTableResponse",
      "description": "The routeTable associated with this virtual hub.",
      "type": "object"
     },
     "routingState": {
      "description": "The routing state.",
      "type": "string"
     },
     "securityPartnerProvider": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "description": "The securityPartnerProvider associated with this VirtualHub.",
      "type": "object"
     },
     "securityProviderName": {
      "description": "The Security Provider name.",
      "type": "string"
     },
     "sku": {
      "description": "The sku of this VirtualHub.",
      "type": "string"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Resource tags.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     },
     "virtualHubRouteTableV2s": {
      "description": "List of all virtual hub route table v2s associated with this VirtualHub.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:VirtualHubRouteTableV2Response",
       "type": "object"
      },
      "type": "array"
     },
     "virtualRouterAsn": {
      "description": "VirtualRouter ASN.",
      "type": "number"
     },
     "virtualRouterAutoScaleConfiguration": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualRouterAutoScaleConfigurationResponse",
      "description": "The VirtualHub Router autoscale configuration.",
      "type": "object"
     },
     "virtualRouterIps": {
      "description": "VirtualRouter IPs.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "virtualWan": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "description": "The VirtualWAN to which the VirtualHub belongs.",
      "type": "object"
     },
     "vpnGateway": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "description": "The VpnGateway associated with this VirtualHub.",
      "type": "object"
     }
    },
    "required": [
     "azureApiVersion",
     "bgpConnections",
     "etag",
     "ipConfigurations",
     "kind",
     "location",
     "name",
     "provisioningState",
     "routeMaps",
     "routingState",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getVirtualHubBgpConnection": {
   "description": "Retrieves the details of a Virtual Hub Bgp Connection.",
   "inputs": {
    "properties": {
     "connectionName": {
      "description": "The name of the connection.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The resource group name of the VirtualHub.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "virtualHubName": {
      "description": "The name of the VirtualHub.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "connectionName",
     "resourceGroupName",
     "virtualHubName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Virtual Appliance Site resource.",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "connectionState": {
      "description": "The current state of the VirtualHub to Peer.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "hubVirtualNetworkConnection": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "description": "The reference to the HubVirtualNetworkConnection resource.",
      "type": "object"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "name": {
      "description": "Name of the connection.",
      "type": "string"
     },
     "peerAsn": {
      "description": "Peer ASN.",
      "type": "number"
     },
     "peerIp": {
      "description": "Peer IP.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the resource.",
      "type": "string"
     },
     "type": {
      "description": "Connection type.",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "connectionState",
     "etag",
     "provisioningState",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getVirtualHubIpConfiguration": {
   "description": "Retrieves the details of a Virtual Hub Ip configuration.",
   "inputs": {
    "properties": {
     "ipConfigName": {
      "description": "The name of the ipconfig.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The resource group name of the VirtualHub.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "virtualHubName": {
      "description": "The name of the VirtualHub.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "ipConfigName",
     "resourceGroupName",
     "virtualHubName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "IpConfigurations.",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "name": {
      "description": "Name of the Ip Configuration.",
      "type": "string"
     },
     "privateIPAddress": {
      "description": "The private IP address of the IP configuration.",
      "type": "string"
     },
     "privateIPAllocationMethod": {
      "description": "The private IP address allocation method.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the IP configuration resource.",
      "type": "string"
     },
     "publicIPAddress": {
      "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddressResponse",
      "description": "The reference to the public IP resource.",
      "type": "object"
     },
     "subnet": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubnetResponse",
      "description": "The reference to the subnet resource.",
      "type": "object"
     },
     "type": {
      "description": "Ipconfiguration type.",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "provisioningState",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getVirtualHubRouteTableV2": {
   "description": "Retrieves the details of a VirtualHubRouteTableV2.",
   "inputs": {
    "properties": {
     "resourceGroupName": {
      "description": "The resource group name of the VirtualHubRouteTableV2.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "routeTableName": {
      "description": "The name of the VirtualHubRouteTableV2.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "virtualHubName": {
      "description": "The name of the VirtualHub.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "resourceGroupName",
     "routeTableName",
     "virtualHubName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "VirtualHubRouteTableV2 Resource.",
    "properties": {
     "attachedConnections": {
      "description": "List of all connections attached to this route table v2.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "name": {
      "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the virtual hub route table v2 resource.",
      "type": "string"
     },
     "routes": {
      "description": "List of all routes.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:VirtualHubRouteV2Response",
       "type": "object"
      },
      "type": "array"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "provisioningState"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getVirtualNetwork": {
   "description": "Gets the specified virtual network by resource group.",
   "inputs": {
    "properties": {
     "expand": {
      "description": "Expands referenced resources.",
      "type": "string"
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "virtualNetworkName": {
      "description": "The name of the virtual network.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "resourceGroupName",
     "virtualNetworkName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Virtual Network resource.",
    "properties": {
     "addressSpace": {
      "$ref": "#/types/azure-native_network_v20230201:network:AddressSpaceResponse",
      "description": "The AddressSpace that contains an array of IP address ranges that can be used by subnets.",
      "type": "object"
     },
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "bgpCommunities": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkBgpCommunitiesResponse",
      "description": "Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET.",
      "type": "object"
     },
     "ddosProtectionPlan": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "description": "The DDoS protection plan associated with the virtual network.",
      "type": "object"
     },
     "dhcpOptions": {
      "$ref": "#/types/azure-native_network_v20230201:network:DhcpOptionsResponse",
      "description": "The dhcpOptions that contains an array of DNS servers available to VMs deployed in the virtual network.",
      "type": "object"
     },
     "enableDdosProtection": {
      "default": false,
      "description": "Indicates if DDoS protection is enabled for all the protected resources in the virtual network. It requires a DDoS protection plan associated with the resource.",
      "type": "boolean"
     },
     "enableVmProtection": {
      "default": false,
      "description": "Indicates if VM protection is enabled for all the subnets in the virtual network.",
      "type": "boolean"
     },
     "encryption": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkEncryptionResponse",
      "description": "Indicates if encryption is enabled on virtual network and if VM without encryption is allowed in encrypted VNet.",
      "type": "object"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "extendedLocation": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse",
      "description": "The extended location of the virtual network.",
      "type": "object"
     },
     "flowLogs": {
      "description": "A collection of references to flow log resources.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:FlowLogResponse",
       "type": "object"
      },
      "type": "array"
     },
     "flowTimeoutInMinutes": {
      "description": "The FlowTimeout value (in minutes) for the Virtual Network",
      "type": "integer"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "ipAllocations": {
      "description": "Array of IpAllocation which reference this VNET.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
       "type": "object"
      },
      "type": "array"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the virtual network resource.",
      "type": "string"
     },
     "resourceGuid": {
      "description": "The resourceGuid property of the Virtual Network resource.",
      "type": "string"
     },
     "subnets": {
      "description": "A list of subnets in a Virtual Network.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:SubnetResponse",
       "type": "object"
      },
      "type": "array"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Resource tags.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     },
     "virtualNetworkPeerings": {
      "description": "A list of peerings in a Virtual Network.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkPeeringResponse",
       "type": "object"
      },
      "type": "array"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "flowLogs",
     "name",
     "provisioningState",
     "resourceGuid",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getVirtualNetworkGateway": {
   "description": "Gets the specified virtual network gateway by resource group.",
   "inputs": {
    "properties": {
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "virtualNetworkGatewayName": {
      "description": "The name of the virtual network gateway.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "resourceGroupName",
     "virtualNetworkGatewayName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "A common class for general resource information.",
    "properties": {
     "activeActive": {
      "description": "ActiveActive flag.",
      "type": "boolean"
     },
     "adminState": {
      "description": "Property to indicate if the Express Route Gateway serves traffic when there are multiple Express Route Gateways in the vnet",
      "type": "string"
     },
     "allowRemoteVnetTraffic": {
      "description": "Configure this gateway to accept traffic from other Azure Virtual Networks. This configuration does not support connectivity to Azure Virtual WAN.",
      "type": "boolean"
     },
     "allowVirtualWanTraffic": {
      "description": "Configures this gateway to accept traffic from remote Virtual WAN networks.",
      "type": "boolean"
     },
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "bgpSettings": {
      "$ref": "#/types/azure-native_network_v20230201:network:BgpSettingsResponse",
      "description": "Virtual network gateway's BGP speaker settings.",
      "type": "object"
     },
     "customRoutes": {
      "$ref": "#/types/azure-native_network_v20230201:network:AddressSpaceResponse",
      "description": "The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient.",
      "type": "object"
     },
     "disableIPSecReplayProtection": {
      "description": "disableIPSecReplayProtection flag.",
      "type": "boolean"
     },
     "enableBgp": {
      "description": "Whether BGP is enabled for this virtual network gateway or not.",
      "type": "boolean"
     },
     "enableBgpRouteTranslationForNat": {
      "description": "EnableBgpRouteTranslationForNat flag.",
      "type": "boolean"
     },
     "enableDnsForwarding": {
      "description": "Whether dns forwarding is enabled or not.",
      "type": "boolean"
     },
     "enablePrivateIpAddress": {
      "description": "Whether private IP needs to be enabled on this gateway for connections or not.",
      "type": "boolean"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "extendedLocation": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse",
      "description": "The extended location of type local virtual network gateway.",
      "type": "object"
     },
     "gatewayDefaultSite": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "description": "The reference to the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.",
      "type": "object"
     },
     "gatewayType": {
      "description": "The type of this virtual network gateway.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "inboundDnsForwardingEndpoint": {
      "description": "The IP address allocated by the gateway to which dns requests can be sent.",
      "type": "string"
     },
     "ipConfigurations": {
      "description": "IP configurations for virtual network gateway.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewayIPConfigurationResponse",
       "type": "object"
      },
      "type": "array"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "natRules": {
      "description": "NatRules for virtual network gateway.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewayNatRuleResponse",
       "type": "object"
      },
      "type": "array"
     },
     "provisioningState": {
      "description": "The provisioning state of the virtual network gateway resource.",
      "type": "string"
     },
     "resourceGuid": {
      "description": "The resource GUID property of the virtual network gateway resource.",
      "type": "string"
     },
     "sku": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewaySkuResponse",
      "description": "The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.",
      "type": "object"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Resource tags.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     },
     "vNetExtendedLocationResourceId": {
      "description": "Customer vnet resource id. VirtualNetworkGateway of type local gateway is associated with the customer vnet.",
      "type": "string"
     },
     "virtualNetworkGatewayPolicyGroups": {
      "description": "The reference to the VirtualNetworkGatewayPolicyGroup resource which represents the available VirtualNetworkGatewayPolicyGroup for the gateway.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewayPolicyGroupResponse",
       "type": "object"
      },
      "type": "array"
     },
     "vpnClientConfiguration": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnClientConfigurationResponse",
      "description": "The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations.",
      "type": "object"
     },
     "vpnGatewayGeneration": {
      "description": "The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.",
      "type": "string"
     },
     "vpnType": {
      "description": "The type of this virtual network gateway.",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "inboundDnsForwardingEndpoint",
     "name",
     "provisioningState",
     "resourceGuid",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getVirtualNetworkGatewayConnection": {
   "description": "Gets the specified virtual network gateway connection by resource group.",
   "inputs": {
    "properties": {
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "virtualNetworkGatewayConnectionName": {
      "description": "The name of the virtual network gateway connection.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "resourceGroupName",
     "virtualNetworkGatewayConnectionName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "A common class for general resource information.",
    "properties": {
     "authorizationKey": {
      "description": "The authorizationKey.",
      "type": "string"
     },
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "connectionMode": {
      "description": "The connection mode for this connection.",
      "type": "string"
     },
     "connectionProtocol": {
      "description": "Connection protocol used for this connection.",
      "type": "string"
     },
     "connectionStatus": {
      "description": "Virtual Network Gateway connection status.",
      "type": "string"
     },
     "connectionType": {
      "description": "Gateway connection type.",
      "type": "string"
     },
     "dpdTimeoutSeconds": {
      "description": "The dead peer detection timeout of this connection in seconds.",
      "type": "integer"
     },
     "egressBytesTransferred": {
      "description": "The egress bytes transferred in this connection.",
      "type": "number"
     },
     "egressNatRules": {
      "description": "List of egress NatRules.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
       "type": "object"
      },
      "type": "array"
     },
     "enableBgp": {
      "description": "EnableBgp flag.",
      "type": "boolean"
     },
     "enablePrivateLinkFastPath": {
      "description": "Bypass the ExpressRoute gateway when accessing private-links. ExpressRoute FastPath (expressRouteGatewayBypass) must be enabled.",
      "type": "boolean"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "expressRouteGatewayBypass": {
      "description": "Bypass ExpressRoute Gateway for data forwarding.",
      "type": "boolean"
     },
     "gatewayCustomBgpIpAddresses": {
      "description": "GatewayCustomBgpIpAddresses to be used for virtual network gateway Connection.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:GatewayCustomBgpIpAddressIpConfigurationResponse",
       "type": "object"
      },
      "type": "array"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "ingressBytesTransferred": {
      "description": "The ingress bytes transferred in this connection.",
      "type": "number"
     },
     "ingressNatRules": {
      "description": "List of ingress NatRules.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
       "type": "object"
      },
      "type": "array"
     },
     "ipsecPolicies": {
      "description": "The IPSec Policies to be considered by this connection.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:IpsecPolicyResponse",
       "type": "object"
      },
      "type": "array"
     },
     "localNetworkGateway2": {
      "$ref": "#/types/azure-native_network_v20230201:network:LocalNetworkGatewayResponse",
      "description": "The reference to local network gateway resource.",
      "type": "object"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "peer": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "description": "The reference to peerings resource.",
      "type": "object"
     },
     "provisioningState": {
      "description": "The provisioning state of the virtual network gateway connection resource.",
      "type": "string"
     },
     "resourceGuid": {
      "description": "The resource GUID property of the virtual network gateway connection resource.",
      "type": "string"
     },
     "routingWeight": {
      "description": "The routing weight.",
      "type": "integer"
     },
     "sharedKey": {
      "description": "The IPSec shared key.",
      "type": "string"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Resource tags.",
      "type": "object"
     },
     "trafficSelectorPolicies": {
      "description": "The Traffic Selector Policies to be considered by this connection.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:TrafficSelectorPolicyResponse",
       "type": "object"
      },
      "type": "array"
     },
     "tunnelConnectionStatus": {
      "description": "Collection of all tunnels' connection health status.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:TunnelConnectionHealthResponse",
       "type": "object"
      },
      "type": "array"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     },
     "useLocalAzureIpAddress": {
      "description": "Use private local Azure IP for the connection.",
      "type": "boolean"
     },
     "usePolicyBasedTrafficSelectors": {
      "description": "Enable policy-based traffic selectors.",
      "type": "boolean"
     },
     "virtualNetworkGateway1": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewayResponse",
      "description": "The reference to virtual network gateway resource.",
      "type": "object"
     },
     "virtualNetworkGateway2": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewayResponse",
      "description": "The reference to virtual network gateway resource.",
      "type": "object"
     }
    },
    "required": [
     "azureApiVersion",
     "connectionStatus",
     "connectionType",
     "egressBytesTransferred",
     "etag",
     "ingressBytesTransferred",
     "name",
     "provisioningState",
     "resourceGuid",
     "tunnelConnectionStatus",
     "type",
     "virtualNetworkGateway1"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getVirtualNetworkGatewayNatRule": {
   "description": "Retrieves the details of a nat rule.",
   "inputs": {
    "properties": {
     "natRuleName": {
      "description": "The name of the nat rule.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The resource group name of the Virtual Network Gateway.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "virtualNetworkGatewayName": {
      "description": "The name of the gateway.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "natRuleName",
     "resourceGroupName",
     "virtualNetworkGatewayName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "VirtualNetworkGatewayNatRule Resource.",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "externalMappings": {
      "description": "The private IP address external mapping for NAT.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:VpnNatRuleMappingResponse",
       "type": "object"
      },
      "type": "array"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "internalMappings": {
      "description": "The private IP address internal mapping for NAT.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:VpnNatRuleMappingResponse",
       "type": "object"
      },
      "type": "array"
     },
     "ipConfigurationId": {
      "description": "The IP Configuration ID this NAT rule applies to.",
      "type": "string"
     },
     "mode": {
      "description": "The Source NAT direction of a VPN NAT.",
      "type": "string"
     },
     "name": {
      "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the NAT Rule resource.",
      "type": "string"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "provisioningState",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getVirtualNetworkPeering": {
   "description": "Gets the specified virtual network peering.",
   "inputs": {
    "properties": {
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "virtualNetworkName": {
      "description": "The name of the virtual network.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "virtualNetworkPeeringName": {
      "description": "The name of the virtual network peering.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "resourceGroupName",
     "virtualNetworkName",
     "virtualNetworkPeeringName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Peerings in a virtual network resource.",
    "properties": {
     "allowForwardedTraffic": {
      "description": "Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network.",
      "type": "boolean"
     },
     "allowGatewayTransit": {
      "description": "If gateway links can be used in remote virtual networking to link to this virtual network.",
      "type": "boolean"
     },
     "allowVirtualNetworkAccess": {
      "description": "Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space.",
      "type": "boolean"
     },
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "doNotVerifyRemoteGateways": {
      "description": "If we need to verify the provisioning state of the remote gateway.",
      "type": "boolean"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "name": {
      "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
      "type": "string"
     },
     "peeringState": {
      "description": "The status of the virtual network peering.",
      "type": "string"
     },
     "peeringSyncLevel": {
      "description": "The peering sync status of the virtual network peering.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the virtual network peering resource.",
      "type": "string"
     },
     "remoteAddressSpace": {
      "$ref": "#/types/azure-native_network_v20230201:network:AddressSpaceResponse",
      "description": "The reference to the address space peered with the remote virtual network.",
      "type": "object"
     },
     "remoteBgpCommunities": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkBgpCommunitiesResponse",
      "description": "The reference to the remote virtual network's Bgp Communities.",
      "type": "object"
     },
     "remoteVirtualNetwork": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "description": "The reference to the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).",
      "type": "object"
     },
     "remoteVirtualNetworkAddressSpace": {
      "$ref": "#/types/azure-native_network_v20230201:network:AddressSpaceResponse",
      "description": "The reference to the current address space of the remote virtual network.",
      "type": "object"
     },
     "remoteVirtualNetworkEncryption": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkEncryptionResponse",
      "description": "The reference to the remote virtual network's encryption",
      "type": "object"
     },
     "resourceGuid": {
      "description": "The resourceGuid property of the Virtual Network peering resource.",
      "type": "string"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     },
     "useRemoteGateways": {
      "description": "If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.",
      "type": "boolean"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "provisioningState",
     "remoteVirtualNetworkEncryption",
     "resourceGuid"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getVirtualNetworkTap": {
   "description": "Gets information about the specified virtual network tap.",
   "inputs": {
    "properties": {
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "tapName": {
      "description": "The name of virtual network tap.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "resourceGroupName",
     "tapName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Virtual Network Tap resource.",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "destinationLoadBalancerFrontEndIPConfiguration": {
      "$ref": "#/types/azure-native_network_v20230201:network:FrontendIPConfigurationResponse",
      "description": "The reference to the private IP address on the internal Load Balancer that will receive the tap.",
      "type": "object"
     },
     "destinationNetworkInterfaceIPConfiguration": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceIPConfigurationResponse",
      "description": "The reference to the private IP Address of the collector nic that will receive the tap.",
      "type": "object"
     },
     "destinationPort": {
      "description": "The VXLAN destination port that will receive the tapped traffic.",
      "type": "integer"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "networkInterfaceTapConfigurations": {
      "description": "Specifies the list of resource IDs for the network interface IP configuration that needs to be tapped.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceTapConfigurationResponse",
       "type": "object"
      },
      "type": "array"
     },
     "provisioningState": {
      "description": "The provisioning state of the virtual network tap resource.",
      "type": "string"
     },
     "resourceGuid": {
      "description": "The resource GUID property of the virtual network tap resource.",
      "type": "string"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Resource tags.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "name",
     "networkInterfaceTapConfigurations",
     "provisioningState",
     "resourceGuid",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getVirtualRouter": {
   "description": "Gets the specified Virtual Router.",
   "inputs": {
    "properties": {
     "expand": {
      "description": "Expands referenced resources.",
      "type": "string"
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "virtualRouterName": {
      "description": "The name of the Virtual Router.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "resourceGroupName",
     "virtualRouterName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "VirtualRouter Resource.",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "hostedGateway": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "description": "The Gateway on which VirtualRouter is hosted.",
      "type": "object"
     },
     "hostedSubnet": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "description": "The Subnet on which VirtualRouter is hosted.",
      "type": "object"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "peerings": {
      "description": "List of references to VirtualRouterPeerings.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
       "type": "object"
      },
      "type": "array"
     },
     "provisioningState": {
      "description": "The provisioning state of the resource.",
      "type": "string"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Resource tags.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     },
     "virtualRouterAsn": {
      "description": "VirtualRouter ASN.",
      "type": "number"
     },
     "virtualRouterIps": {
      "description": "VirtualRouter IPs.",
      "items": {
       "type": "string"
      },
      "type": "array"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "name",
     "peerings",
     "provisioningState",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getVirtualRouterPeering": {
   "description": "Gets the specified Virtual Router Peering.",
   "inputs": {
    "properties": {
     "peeringName": {
      "description": "The name of the Virtual Router Peering.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "virtualRouterName": {
      "description": "The name of the Virtual Router.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "peeringName",
     "resourceGroupName",
     "virtualRouterName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Virtual Router Peering resource.",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "name": {
      "description": "Name of the virtual router peering that is unique within a virtual router.",
      "type": "string"
     },
     "peerAsn": {
      "description": "Peer ASN.",
      "type": "number"
     },
     "peerIp": {
      "description": "Peer IP.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the resource.",
      "type": "string"
     },
     "type": {
      "description": "Peering type.",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "provisioningState",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getVirtualWan": {
   "description": "Retrieves the details of a VirtualWAN.",
   "inputs": {
    "properties": {
     "resourceGroupName": {
      "description": "The resource group name of the VirtualWan.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "virtualWANName": {
      "description": "The name of the VirtualWAN being retrieved.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "resourceGroupName",
     "virtualWANName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "VirtualWAN Resource.",
    "properties": {
     "allowBranchToBranchTraffic": {
      "description": "True if branch to branch traffic is allowed.",
      "type": "boolean"
     },
     "allowVnetToVnetTraffic": {
      "description": "True if Vnet to Vnet traffic is allowed.",
      "type": "boolean"
     },
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "disableVpnEncryption": {
      "description": "Vpn encryption to be disabled or not.",
      "type": "boolean"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "office365LocalBreakoutCategory": {
      "description": "The office local breakout category.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the virtual WAN resource.",
      "type": "string"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Resource tags.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     },
     "virtualHubs": {
      "description": "List of VirtualHubs in the VirtualWAN.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
       "type": "object"
      },
      "type": "array"
     },
     "vpnSites": {
      "description": "List of VpnSites in the VirtualWAN.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
       "type": "object"
      },
      "type": "array"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "location",
     "name",
     "office365LocalBreakoutCategory",
     "provisioningState",
     "type",
     "virtualHubs",
     "vpnSites"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getVpnConnection": {
   "description": "Retrieves the details of a vpn connection.",
   "inputs": {
    "properties": {
     "connectionName": {
      "description": "The name of the vpn connection.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "gatewayName": {
      "description": "The name of the gateway.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The resource group name of the VpnGateway.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "connectionName",
     "gatewayName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "VpnConnection Resource.",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "connectionBandwidth": {
      "description": "Expected bandwidth in MBPS.",
      "type": "integer"
     },
     "connectionStatus": {
      "description": "The connection status.",
      "type": "string"
     },
     "dpdTimeoutSeconds": {
      "description": "DPD timeout in seconds for vpn connection.",
      "type": "integer"
     },
     "egressBytesTransferred": {
      "description": "Egress bytes transferred.",
      "type": "number"
     },
     "enableBgp": {
      "description": "EnableBgp flag.",
      "type": "boolean"
     },
     "enableInternetSecurity": {
      "description": "Enable internet security.",
      "type": "boolean"
     },
     "enableRateLimiting": {
      "description": "EnableBgp flag.",
      "type": "boolean"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "ingressBytesTransferred": {
      "description": "Ingress bytes transferred.",
      "type": "number"
     },
     "ipsecPolicies": {
      "description": "The IPSec Policies to be considered by this connection.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:IpsecPolicyResponse",
       "type": "object"
      },
      "type": "array"
     },
     "name": {
      "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
      "type": "string"
     },
     "provisioningState": {
      "description": "The provisioning state of the VPN connection resource.",
      "type": "string"
     },
     "remoteVpnSite": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "description": "Id of the connected vpn site.",
      "type": "object"
     },
     "routingConfiguration": {
      "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfigurationResponse",
      "description": "The Routing Configuration indicating the associated and propagated route tables on this connection.",
      "type": "object"
     },
     "routingWeight": {
      "description": "Routing weight for vpn connection.",
      "type": "integer"
     },
     "sharedKey": {
      "description": "SharedKey for the vpn connection.",
      "type": "string"
     },
     "trafficSelectorPolicies": {
      "description": "The Traffic Selector Policies to be considered by this connection.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:TrafficSelectorPolicyResponse",
       "type": "object"
      },
      "type": "array"
     },
     "useLocalAzureIpAddress": {
      "description": "Use local azure ip to initiate connection.",
      "type": "boolean"
     },
     "usePolicyBasedTrafficSelectors": {
      "description": "Enable policy-based traffic selectors.",
      "type": "boolean"
     },
     "vpnConnectionProtocolType": {
      "description": "Connection protocol used for this connection.",
      "type": "string"
     },
     "vpnLinkConnections": {
      "description": "List of all vpn site link connections to the gateway.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:VpnSiteLinkConnectionResponse",
       "type": "object"
      },
      "type": "array"
     }
    },
    "required": [
     "azureApiVersion",
     "connectionStatus",
     "egressBytesTransferred",
     "etag",
     "ingressBytesTransferred",
     "provisioningState"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getVpnGateway": {
   "description": "Retrieves the details of a virtual wan vpn gateway.",
   "inputs": {
    "properties": {
     "gatewayName": {
      "description": "The name of the gateway.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The resource group name of the VpnGateway.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "gatewayName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "VpnGateway Resource.",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "bgpSettings": {
      "$ref": "#/types/azure-native_network_v20230201:network:BgpSettingsResponse",
      "description": "Local network gateway's BGP speaker settings.",
      "type": "object"
     },
     "connections": {
      "description": "List of all vpn connections to the gateway.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:VpnConnectionResponse",
       "type": "object"
      },
      "type": "array"
     },
     "enableBgpRouteTranslationForNat": {
      "description": "Enable BGP routes translation for NAT on this VpnGateway.",
      "type": "boolean"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "ipConfigurations": {
      "description": "List of all IPs configured on the gateway.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:VpnGatewayIpConfigurationResponse",
       "type": "object"
      },
      "type": "array"
     },
     "isRoutingPreferenceInternet": {
      "description": "Enable Routing Preference property for the Public IP Interface of the VpnGateway.",
      "type": "boolean"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "natRules": {
      "description": "List of all the nat Rules associated with the gateway.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:VpnGatewayNatRuleResponse",
       "type": "object"
      },
      "type": "array"
     },
     "provisioningState": {
      "description": "The provisioning state of the VPN gateway resource.",
      "type": "string"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Resource tags.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     },
     "virtualHub": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "description": "The VirtualHub to which the gateway belongs.",
      "type": "object"
     },
     "vpnGatewayScaleUnit": {
      "description": "The scale unit for this vpn gateway.",
      "type": "integer"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "ipConfigurations",
     "location",
     "name",
     "provisioningState",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getVpnServerConfiguration": {
   "description": "Retrieves the details of a VpnServerConfiguration.",
   "inputs": {
    "properties": {
     "resourceGroupName": {
      "description": "The resource group name of the VpnServerConfiguration.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "vpnServerConfigurationName": {
      "description": "The name of the VpnServerConfiguration being retrieved.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "resourceGroupName",
     "vpnServerConfigurationName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "VpnServerConfiguration Resource.",
    "properties": {
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "properties": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnServerConfigurationPropertiesResponse",
      "description": "Properties of the P2SVpnServer configuration.",
      "type": "object"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Resource tags.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "name",
     "properties",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getVpnSite": {
   "description": "Retrieves the details of a VPN site.",
   "inputs": {
    "properties": {
     "resourceGroupName": {
      "description": "The resource group name of the VpnSite.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "vpnSiteName": {
      "description": "The name of the VpnSite being retrieved.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "resourceGroupName",
     "vpnSiteName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "VpnSite Resource.",
    "properties": {
     "addressSpace": {
      "$ref": "#/types/azure-native_network_v20230201:network:AddressSpaceResponse",
      "description": "The AddressSpace that contains an array of IP address ranges.",
      "type": "object"
     },
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "bgpProperties": {
      "$ref": "#/types/azure-native_network_v20230201:network:BgpSettingsResponse",
      "description": "The set of bgp properties.",
      "type": "object"
     },
     "deviceProperties": {
      "$ref": "#/types/azure-native_network_v20230201:network:DevicePropertiesResponse",
      "description": "The device properties.",
      "type": "object"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "ipAddress": {
      "description": "The ip-address for the vpn-site.",
      "type": "string"
     },
     "isSecuritySite": {
      "description": "IsSecuritySite flag.",
      "type": "boolean"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "o365Policy": {
      "$ref": "#/types/azure-native_network_v20230201:network:O365PolicyPropertiesResponse",
      "description": "Office365 Policy.",
      "type": "object"
     },
     "provisioningState": {
      "description": "The provisioning state of the VPN site resource.",
      "type": "string"
     },
     "siteKey": {
      "description": "The key for vpn-site that can be used for connections.",
      "type": "string"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Resource tags.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     },
     "virtualWan": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "description": "The VirtualWAN to which the vpnSite belongs.",
      "type": "object"
     },
     "vpnSiteLinks": {
      "description": "List of all vpn site links.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:VpnSiteLinkResponse",
       "type": "object"
      },
      "type": "array"
     }
    },
    "required": [
     "azureApiVersion",
     "etag",
     "location",
     "name",
     "provisioningState",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native:network:getWebApplicationFirewallPolicy": {
   "description": "Retrieve protection policy with specified name within a resource group.",
   "inputs": {
    "properties": {
     "policyName": {
      "description": "The name of the policy.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "policyName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Defines web application firewall policy.",
    "properties": {
     "applicationGateways": {
      "description": "A collection of references to application gateways.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayResponse",
       "type": "object"
      },
      "type": "array"
     },
     "azureApiVersion": {
      "description": "The Azure API version of the resource.",
      "type": "string"
     },
     "customRules": {
      "description": "The custom rules inside the policy.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:WebApplicationFirewallCustomRuleResponse",
       "type": "object"
      },
      "type": "array"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "httpListeners": {
      "description": "A collection of references to application gateway http listeners.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
       "type": "object"
      },
      "type": "array"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "managedRules": {
      "$ref": "#/types/azure-native_network_v20230201:network:ManagedRulesDefinitionResponse",
      "description": "Describes the managedRules structure.",
      "type": "object"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "pathBasedRules": {
      "description": "A collection of references to application gateway path rules.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
       "type": "object"
      },
      "type": "array"
     },
     "policySettings": {
      "$ref": "#/types/azure-native_network_v20230201:network:PolicySettingsResponse",
      "description": "The PolicySettings for policy.",
      "type": "object"
     },
     "provisioningState": {
      "description": "The provisioning state of the web application firewall policy resource.",
      "type": "string"
     },
     "resourceState": {
      "description": "Resource status of the policy.",
      "type": "string"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Resource tags.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     }
    },
    "required": [
     "applicationGateways",
     "azureApiVersion",
     "etag",
     "httpListeners",
     "managedRules",
     "name",
     "pathBasedRules",
     "provisioningState",
     "resourceState",
     "type"
    ],
    "type": "object"
   }
  },
  "azure-native_network_v20230201:network:getActiveSessions": {
   "description": "Returns the list of currently active sessions on the Bastion.",
   "inputs": {
    "properties": {
     "bastionHostName": {
      "description": "The name of the Bastion Host.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "bastionHostName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Response for GetActiveSessions.",
    "properties": {
     "nextLink": {
      "description": "The URL to get the next set of results.",
      "type": "string"
     },
     "value": {
      "description": "List of active sessions on the bastion.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:BastionActiveSessionResponse",
       "type": "object"
      },
      "type": "array"
     }
    },
    "type": "object"
   }
  },
  "azure-native_network_v20230201:network:getApplicationGatewayBackendHealthOnDemand": {
   "description": "Gets the backend health for given combination of backend pool and http setting of the specified application gateway in a resource group.",
   "inputs": {
    "properties": {
     "applicationGatewayName": {
      "description": "The name of the application gateway.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "backendAddressPool": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
      "description": "Reference to backend pool of application gateway to which probe request will be sent.",
      "type": "object"
     },
     "backendHttpSettings": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
      "description": "Reference to backend http setting of application gateway to be used for test probe.",
      "type": "object"
     },
     "expand": {
      "description": "Expands BackendAddressPool and BackendHttpSettings referenced in backend health.",
      "type": "string"
     },
     "host": {
      "description": "Host name to send the probe to.",
      "type": "string"
     },
     "match": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayProbeHealthResponseMatch",
      "description": "Criterion for classifying a healthy probe response.",
      "type": "object"
     },
     "path": {
      "description": "Relative path of probe. Valid path starts from '/'. Probe is sent to \u003cProtocol\u003e://\u003chost\u003e:\u003cport\u003e\u003cpath\u003e.",
      "type": "string"
     },
     "pickHostNameFromBackendHttpSettings": {
      "description": "Whether the host header should be picked from the backend http settings. Default value is false.",
      "type": "boolean"
     },
     "protocol": {
      "description": "The protocol used for the probe.",
      "oneOf": [
       {
        "type": "string"
       },
       {
        "$ref": "#/types/azure-native:network:ApplicationGatewayProtocol"
       }
      ]
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "timeout": {
      "description": "The probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.",
      "type": "integer"
     }
    },
    "required": [
     "applicationGatewayName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Result of on demand test probe.",
    "properties": {
     "backendAddressPool": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayBackendAddressPoolResponse",
      "description": "Reference to an ApplicationGatewayBackendAddressPool resource.",
      "type": "object"
     },
     "backendHealthHttpSettings": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayBackendHealthHttpSettingsResponse",
      "description": "Application gateway BackendHealthHttp settings.",
      "type": "object"
     }
    },
    "type": "object"
   }
  },
  "azure-native_network_v20230201:network:getBastionShareableLink": {
   "description": "Return the Bastion Shareable Links for all the VMs specified in the request.",
   "inputs": {
    "properties": {
     "bastionHostName": {
      "description": "The name of the Bastion Host.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "vms": {
      "description": "List of VM references.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:BastionShareableLink",
       "type": "object"
      },
      "type": "array"
     }
    },
    "required": [
     "bastionHostName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Response for all the Bastion Shareable Link endpoints.",
    "properties": {
     "nextLink": {
      "description": "The URL to get the next set of results.",
      "type": "string"
     },
     "value": {
      "description": "List of Bastion Shareable Links for the request.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:BastionShareableLinkResponse",
       "type": "object"
      },
      "type": "array"
     }
    },
    "type": "object"
   }
  },
  "azure-native_network_v20230201:network:getP2sVpnGatewayP2sVpnConnectionHealth": {
   "description": "Gets the connection health of P2S clients of the virtual wan P2SVpnGateway in the specified resource group.",
   "inputs": {
    "properties": {
     "gatewayName": {
      "description": "The name of the P2SVpnGateway.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "gatewayName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "P2SVpnGateway Resource.",
    "properties": {
     "customDnsServers": {
      "description": "List of all customer specified DNS servers IP addresses.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "etag": {
      "description": "A unique read-only string that changes whenever the resource is updated.",
      "type": "string"
     },
     "id": {
      "description": "Resource ID.",
      "type": "string"
     },
     "isRoutingPreferenceInternet": {
      "description": "Enable Routing Preference property for the Public IP Interface of the P2SVpnGateway.",
      "type": "boolean"
     },
     "location": {
      "description": "Resource location.",
      "type": "string"
     },
     "name": {
      "description": "Resource name.",
      "type": "string"
     },
     "p2SConnectionConfigurations": {
      "description": "List of all p2s connection configurations of the gateway.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:P2SConnectionConfigurationResponse",
       "type": "object"
      },
      "type": "array"
     },
     "provisioningState": {
      "description": "The provisioning state of the P2S VPN gateway resource.",
      "type": "string"
     },
     "tags": {
      "additionalProperties": {
       "type": "string"
      },
      "description": "Resource tags.",
      "type": "object"
     },
     "type": {
      "description": "Resource type.",
      "type": "string"
     },
     "virtualHub": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "description": "The VirtualHub to which the gateway belongs.",
      "type": "object"
     },
     "vpnClientConnectionHealth": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnClientConnectionHealthResponse",
      "description": "All P2S VPN clients' connection health status.",
      "type": "object"
     },
     "vpnGatewayScaleUnit": {
      "description": "The scale unit for this p2s vpn gateway.",
      "type": "integer"
     },
     "vpnServerConfiguration": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "description": "The VpnServerConfiguration to which the p2sVpnGateway is attached to.",
      "type": "object"
     }
    },
    "required": [
     "etag",
     "location",
     "name",
     "provisioningState",
     "type",
     "vpnClientConnectionHealth"
    ],
    "type": "object"
   }
  },
  "azure-native_network_v20230201:network:getP2sVpnGatewayP2sVpnConnectionHealthDetailed": {
   "description": "Gets the sas url to get the connection health detail of P2S clients of the virtual wan P2SVpnGateway in the specified resource group.",
   "inputs": {
    "properties": {
     "gatewayName": {
      "description": "The name of the P2SVpnGateway.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "outputBlobSasUrl": {
      "description": "The sas-url to download the P2S Vpn connection health detail.",
      "type": "string"
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "vpnUserNamesFilter": {
      "description": "The list of p2s vpn user names whose p2s vpn connection detailed health to retrieve for.",
      "items": {
       "type": "string"
      },
      "type": "array"
     }
    },
    "required": [
     "gatewayName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "P2S Vpn connection detailed health written to sas url.",
    "properties": {
     "sasUrl": {
      "description": "Returned sas url of the blob to which the p2s vpn connection detailed health will be written.",
      "type": "string"
     }
    },
    "type": "object"
   }
  },
  "azure-native_network_v20230201:network:getVirtualNetworkGatewayAdvertisedRoutes": {
   "description": "This operation retrieves a list of routes the virtual network gateway is advertising to the specified peer.",
   "inputs": {
    "properties": {
     "peer": {
      "description": "The IP address of the peer.",
      "type": "string"
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "virtualNetworkGatewayName": {
      "description": "The name of the virtual network gateway.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "peer",
     "resourceGroupName",
     "virtualNetworkGatewayName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "List of virtual network gateway routes.",
    "properties": {
     "value": {
      "description": "List of gateway routes.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:GatewayRouteResponse",
       "type": "object"
      },
      "type": "array"
     }
    },
    "type": "object"
   }
  },
  "azure-native_network_v20230201:network:getVirtualNetworkGatewayBgpPeerStatus": {
   "description": "The GetBgpPeerStatus operation retrieves the status of all BGP peers.",
   "inputs": {
    "properties": {
     "peer": {
      "description": "The IP address of the peer to retrieve the status of.",
      "type": "string"
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "virtualNetworkGatewayName": {
      "description": "The name of the virtual network gateway.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "resourceGroupName",
     "virtualNetworkGatewayName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Response for list BGP peer status API service call.",
    "properties": {
     "value": {
      "description": "List of BGP peers.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:BgpPeerStatusResponse",
       "type": "object"
      },
      "type": "array"
     }
    },
    "type": "object"
   }
  },
  "azure-native_network_v20230201:network:getVirtualNetworkGatewayConnectionIkeSas": {
   "description": "Lists IKE Security Associations for the virtual network gateway connection in the specified resource group.",
   "inputs": {
    "properties": {
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "virtualNetworkGatewayConnectionName": {
      "description": "The name of the virtual network gateway Connection.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "resourceGroupName",
     "virtualNetworkGatewayConnectionName"
    ],
    "type": "object"
   },
   "outputs": {
    "properties": {
     "value": {
      "type": "string"
     }
    },
    "type": "object"
   }
  },
  "azure-native_network_v20230201:network:getVirtualNetworkGatewayLearnedRoutes": {
   "description": "This operation retrieves a list of routes the virtual network gateway has learned, including routes learned from BGP peers.",
   "inputs": {
    "properties": {
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "virtualNetworkGatewayName": {
      "description": "The name of the virtual network gateway.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "resourceGroupName",
     "virtualNetworkGatewayName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "List of virtual network gateway routes.",
    "properties": {
     "value": {
      "description": "List of gateway routes.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:GatewayRouteResponse",
       "type": "object"
      },
      "type": "array"
     }
    },
    "type": "object"
   }
  },
  "azure-native_network_v20230201:network:getVirtualNetworkGatewayVpnProfilePackageUrl": {
   "description": "Gets pre-generated VPN profile for P2S client of the virtual network gateway in the specified resource group. The profile needs to be generated first using generateVpnProfile.",
   "inputs": {
    "properties": {
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "virtualNetworkGatewayName": {
      "description": "The name of the virtual network gateway.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "resourceGroupName",
     "virtualNetworkGatewayName"
    ],
    "type": "object"
   },
   "outputs": {
    "properties": {
     "value": {
      "type": "string"
     }
    },
    "type": "object"
   }
  },
  "azure-native_network_v20230201:network:getVirtualNetworkGatewayVpnclientConnectionHealth": {
   "description": "Get VPN client connection health detail per P2S client connection of the virtual network gateway in the specified resource group.",
   "inputs": {
    "properties": {
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "virtualNetworkGatewayName": {
      "description": "The name of the virtual network gateway.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "resourceGroupName",
     "virtualNetworkGatewayName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "List of virtual network gateway vpn client connection health.",
    "properties": {
     "value": {
      "description": "List of vpn client connection health.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:VpnClientConnectionHealthDetailResponse",
       "type": "object"
      },
      "type": "array"
     }
    },
    "type": "object"
   }
  },
  "azure-native_network_v20230201:network:getVirtualNetworkGatewayVpnclientIpsecParameters": {
   "description": "The Get VpnclientIpsecParameters operation retrieves information about the vpnclient ipsec policy for P2S client of virtual network gateway in the specified resource group through Network resource provider.",
   "inputs": {
    "properties": {
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "virtualNetworkGatewayName": {
      "description": "The virtual network gateway name.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "resourceGroupName",
     "virtualNetworkGatewayName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "An IPSec parameters for a virtual network gateway P2S connection.",
    "properties": {
     "dhGroup": {
      "description": "The DH Group used in IKE Phase 1 for initial SA.",
      "type": "string"
     },
     "ikeEncryption": {
      "description": "The IKE encryption algorithm (IKE phase 2).",
      "type": "string"
     },
     "ikeIntegrity": {
      "description": "The IKE integrity algorithm (IKE phase 2).",
      "type": "string"
     },
     "ipsecEncryption": {
      "description": "The IPSec encryption algorithm (IKE phase 1).",
      "type": "string"
     },
     "ipsecIntegrity": {
      "description": "The IPSec integrity algorithm (IKE phase 1).",
      "type": "string"
     },
     "pfsGroup": {
      "description": "The Pfs Group used in IKE Phase 2 for new child SA.",
      "type": "string"
     },
     "saDataSizeKilobytes": {
      "description": "The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for P2S client..",
      "type": "integer"
     },
     "saLifeTimeSeconds": {
      "description": "The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for P2S client.",
      "type": "integer"
     }
    },
    "required": [
     "dhGroup",
     "ikeEncryption",
     "ikeIntegrity",
     "ipsecEncryption",
     "ipsecIntegrity",
     "pfsGroup",
     "saDataSizeKilobytes",
     "saLifeTimeSeconds"
    ],
    "type": "object"
   }
  },
  "azure-native_network_v20230201:network:getVpnLinkConnectionIkeSas": {
   "description": "Lists IKE Security Associations for Vpn Site Link Connection in the specified resource group.",
   "inputs": {
    "properties": {
     "connectionName": {
      "description": "The name of the vpn connection.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "gatewayName": {
      "description": "The name of the gateway.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "linkConnectionName": {
      "description": "The name of the vpn link connection.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "connectionName",
     "gatewayName",
     "linkConnectionName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "properties": {
     "value": {
      "type": "string"
     }
    },
    "type": "object"
   }
  },
  "azure-native_network_v20230201:network:listActiveConnectivityConfigurations": {
   "description": "Lists active connectivity configurations in a network manager.",
   "inputs": {
    "properties": {
     "networkManagerName": {
      "description": "The name of the network manager.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "regions": {
      "description": "List of regions.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "skipToken": {
      "description": "When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.",
      "type": "string"
     },
     "top": {
      "description": "An optional query parameter which specifies the maximum number of records to be returned by the server.",
      "type": "integer"
     }
    },
    "required": [
     "networkManagerName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Result of the request to list active connectivity configurations. It contains a list of active connectivity configurations and a skiptoken to get the next set of results.",
    "properties": {
     "skipToken": {
      "description": "When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.",
      "type": "string"
     },
     "value": {
      "description": "Gets a page of active connectivity configurations.",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:ActiveConnectivityConfigurationResponse",
       "type": "object"
      },
      "type": "array"
     }
    },
    "type": "object"
   }
  },
  "azure-native_network_v20230201:network:listActiveSecurityAdminRules": {
   "description": "Lists active security admin rules in a network manager.",
   "inputs": {
    "properties": {
     "networkManagerName": {
      "description": "The name of the network manager.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "regions": {
      "description": "List of regions.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "skipToken": {
      "description": "When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.",
      "type": "string"
     },
     "top": {
      "description": "An optional query parameter which specifies the maximum number of records to be returned by the server.",
      "type": "integer"
     }
    },
    "required": [
     "networkManagerName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Result of the request to list active security admin rules. It contains a list of active security admin rules and a skiptoken to get the next set of results.",
    "properties": {
     "skipToken": {
      "description": "When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.",
      "type": "string"
     },
     "value": {
      "description": "Gets a page of active security admin rules.",
      "items": {
       "discriminator": {
        "mapping": {
         "Custom": "#/types/azure-native_network_v20230201:network:ActiveSecurityAdminRuleResponse",
         "Default": "#/types/azure-native_network_v20230201:network:ActiveDefaultSecurityAdminRuleResponse"
        },
        "propertyName": "kind"
       },
       "oneOf": [
        {
         "$ref": "#/types/azure-native_network_v20230201:network:ActiveDefaultSecurityAdminRuleResponse",
         "type": "object"
        },
        {
         "$ref": "#/types/azure-native_network_v20230201:network:ActiveSecurityAdminRuleResponse",
         "type": "object"
        }
       ]
      },
      "type": "array"
     }
    },
    "type": "object"
   }
  },
  "azure-native_network_v20230201:network:listFirewallPolicyIdpsSignature": {
   "description": "Retrieves the current status of IDPS signatures for the relevant policy",
   "inputs": {
    "properties": {
     "filters": {
      "description": "Contain all filters names and values",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:FilterItems",
       "type": "object"
      },
      "type": "array"
     },
     "firewallPolicyName": {
      "description": "The name of the Firewall Policy.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "orderBy": {
      "$ref": "#/types/azure-native_network_v20230201:network:OrderBy",
      "description": "Column to sort response by",
      "type": "object"
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resultsPerPage": {
      "description": "The number of the results to return in each page",
      "type": "integer"
     },
     "search": {
      "description": "Search term in all columns",
      "type": "string"
     },
     "skip": {
      "description": "The number of records matching the filter to skip",
      "type": "integer"
     }
    },
    "required": [
     "firewallPolicyName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Query result",
    "properties": {
     "matchingRecordsCount": {
      "description": "Number of total records matching the query.",
      "type": "number"
     },
     "signatures": {
      "description": "Array containing the results of the query",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:SingleQueryResultResponse",
       "type": "object"
      },
      "type": "array"
     }
    },
    "type": "object"
   }
  },
  "azure-native_network_v20230201:network:listFirewallPolicyIdpsSignaturesFilterValue": {
   "description": "Retrieves the current filter values for the signatures overrides",
   "inputs": {
    "properties": {
     "filterName": {
      "description": "Describes the name of the column which values will be returned",
      "type": "string"
     },
     "firewallPolicyName": {
      "description": "The name of the Firewall Policy.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "firewallPolicyName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Describes the list of all possible values for a specific filter value",
    "properties": {
     "filterValues": {
      "description": "Describes the possible values",
      "items": {
       "type": "string"
      },
      "type": "array"
     }
    },
    "type": "object"
   }
  },
  "azure-native_network_v20230201:network:listNetworkManagerDeploymentStatus": {
   "description": "Post to List of Network Manager Deployment Status.",
   "inputs": {
    "properties": {
     "deploymentTypes": {
      "description": "List of deployment types.",
      "items": {
       "oneOf": [
        {
         "type": "string"
        },
        {
         "$ref": "#/types/azure-native:network:ConfigurationType"
        }
       ]
      },
      "type": "array"
     },
     "networkManagerName": {
      "description": "The name of the network manager.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "regions": {
      "description": "List of locations.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "skipToken": {
      "description": "Continuation token for pagination, capturing the next page size and offset, as well as the context of the query.",
      "type": "string"
     },
     "top": {
      "description": "An optional query parameter which specifies the maximum number of records to be returned by the server.",
      "type": "integer"
     }
    },
    "required": [
     "networkManagerName",
     "resourceGroupName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "A list of Network Manager Deployment Status",
    "properties": {
     "skipToken": {
      "description": "When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.",
      "type": "string"
     },
     "value": {
      "description": "Gets a page of Network Manager Deployment Status",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:NetworkManagerDeploymentStatusResponse",
       "type": "object"
      },
      "type": "array"
     }
    },
    "type": "object"
   }
  },
  "azure-native_network_v20230201:network:listNetworkManagerEffectiveConnectivityConfigurations": {
   "description": "List all effective connectivity configurations applied on a virtual network.",
   "inputs": {
    "properties": {
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "skipToken": {
      "description": "When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.",
      "type": "string"
     },
     "top": {
      "description": "An optional query parameter which specifies the maximum number of records to be returned by the server.",
      "type": "integer"
     },
     "virtualNetworkName": {
      "description": "The name of the virtual network.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "resourceGroupName",
     "virtualNetworkName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Result of the request to list networkManagerEffectiveConnectivityConfiguration. It contains a list of groups and a skiptoken to get the next set of results.",
    "properties": {
     "skipToken": {
      "description": "When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.",
      "type": "string"
     },
     "value": {
      "description": "Gets a page of NetworkManagerEffectiveConnectivityConfiguration",
      "items": {
       "$ref": "#/types/azure-native_network_v20230201:network:EffectiveConnectivityConfigurationResponse",
       "type": "object"
      },
      "type": "array"
     }
    },
    "type": "object"
   }
  },
  "azure-native_network_v20230201:network:listNetworkManagerEffectiveSecurityAdminRules": {
   "description": "List all effective security admin rules applied on a virtual network.",
   "inputs": {
    "properties": {
     "resourceGroupName": {
      "description": "The name of the resource group.",
      "type": "string",
      "willReplaceOnChanges": true
     },
     "skipToken": {
      "description": "When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.",
      "type": "string"
     },
     "top": {
      "description": "An optional query parameter which specifies the maximum number of records to be returned by the server.",
      "type": "integer"
     },
     "virtualNetworkName": {
      "description": "The name of the virtual network.",
      "type": "string",
      "willReplaceOnChanges": true
     }
    },
    "required": [
     "resourceGroupName",
     "virtualNetworkName"
    ],
    "type": "object"
   },
   "outputs": {
    "description": "Result of the request to list networkManagerEffectiveSecurityAdminRules. It contains a list of groups and a skiptoken to get the next set of results.",
    "properties": {
     "skipToken": {
      "description": "When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.",
      "type": "string"
     },
     "value": {
      "description": "Gets a page of NetworkManagerEffectiveSecurityAdminRules",
      "items": {
       "discriminator": {
        "mapping": {
         "Custom": "#/types/azure-native_network_v20230201:network:EffectiveSecurityAdminRuleResponse",
         "Default": "#/types/azure-native_network_v20230201:network:EffectiveDefaultSecurityAdminRuleResponse"
        },
        "propertyName": "kind"
       },
       "oneOf": [
        {
         "$ref": "#/types/azure-native_network_v20230201:network:EffectiveDefaultSecurityAdminRuleResponse",
         "type": "object"
        },
        {
         "$ref": "#/types/azure-native_network_v20230201:network:EffectiveSecurityAdminRuleResponse",
         "type": "object"
        }
       ]
      },
      "type": "array"
     }
    },
    "type": "object"
   }
  }
 },
 "homepage": "https://pulumi.com",
 "keywords": [
  "pulumi",
  "azure",
  "azure-native",
  "category/cloud",
  "kind/native"
 ],
 "language": {
  "csharp": {
   "namespaces": {
    "azure-native": "AzureNative",
    "network": "Network.V20230201"
   },
   "packageReferences": {
    "Pulumi": "3.*",
    "System.Collections.Immutable": "5.0.0"
   },
   "respectSchemaVersion": true
  },
  "go": {
   "disableInputTypeRegistrations": true,
   "generateResourceContainerTypes": false,
   "importBasePath": "github.com/pulumi/pulumi-azure-native-sdk/v3",
   "importPathPattern": "github.com/pulumi/pulumi-azure-native-sdk/{module}/v3",
   "internalModuleName": "utilities",
   "packageImportAliases": {
    "github.com/pulumi/pulumi-azure-native-sdk/network/v3/v20230201": "network"
   },
   "respectSchemaVersion": true,
   "rootPackageName": "pulumiazurenativesdk"
  },
  "java": {
   "packages": {
    "azure-native": "azurenative",
    "network": "network.v20230201"
   }
  },
  "nodejs": {
   "readme": "The native Azure provider package offers support for all Azure Resource Manager (ARM)\nresources and their properties. Resources are exposed as types from modules based on Azure Resource\nProviders such as 'compute', 'network', 'storage', and 'web', among many others. Using this package\nallows you to programmatically declare instances of any Azure resource and any supported resource\nversion using infrastructure as code, which Pulumi then uses to drive the ARM API.",
   "respectSchemaVersion": true
  },
  "python": {
   "inputTypes": "classes-and-dicts",
   "moduleNameOverrides": {
    "network": "network"
   },
   "pyproject": {
    "enabled": true
   },
   "readme": "The native Azure provider package offers support for all Azure Resource Manager (ARM)\nresources and their properties. Resources are exposed as types from modules based on Azure Resource\nProviders such as 'compute', 'network', 'storage', and 'web', among many others. Using this package\nallows you to programmatically declare instances of any Azure resource and any supported resource\nversion using infrastructure as code, which Pulumi then uses to drive the ARM API.",
   "respectSchemaVersion": true,
   "usesIOClasses": true
  }
 },
 "license": "Apache-2.0",
 "name": "azure-native",
 "provider": {
  "description": "The provider type for the native Azure package.",
  "inputProperties": {
   "auxiliaryTenantIds": {
    "description": "Any additional Tenant IDs which should be used for authentication.",
    "items": {
     "type": "string"
    },
    "type": "array"
   },
   "clientCertificatePassword": {
    "description": "The password associated with the Client Certificate. For use when authenticating as a Service Principal using a Client Certificate",
    "secret": true,
    "type": "string"
   },
   "clientCertificatePath": {
    "description": "The path to the Client Certificate associated with the Service Principal for use when authenticating as a Service Principal using a Client Certificate.",
    "type": "string"
   },
   "clientId": {
    "description": "The Client ID which should be used.",
    "secret": true,
    "type": "string"
   },
   "clientSecret": {
    "description": "The Client Secret which should be used. For use When authenticating as a Service Principal using a Client Secret.",
    "secret": true,
    "type": "string"
   },
   "disablePulumiPartnerId": {
    "description": "This will disable the Pulumi Partner ID which is used if a custom `partnerId` isn't specified.",
    "type": "boolean"
   },
   "environment": {
    "default": "public",
    "description": "The Cloud Environment which should be used. Possible values are public, usgovernment, and china. Defaults to public.",
    "type": "string"
   },
   "location": {
    "description": "The location to use. ResourceGroups will consult this property for a default location, if one was not supplied explicitly when defining the resource.",
    "type": "string"
   },
   "metadataHost": {
    "description": "The Hostname of the Azure Metadata Service.",
    "type": "string"
   },
   "msiEndpoint": {
    "description": "The path to a custom endpoint for Managed Service Identity - in most circumstances this should be detected automatically.",
    "type": "string"
   },
   "oidcRequestToken": {
    "description": "Your cloud service or provider’s bearer token to exchange for an OIDC ID token.",
    "type": "string"
   },
   "oidcRequestUrl": {
    "description": "The URL to initiate the `oidcRequestToken` OIDC token exchange.",
    "type": "string"
   },
   "oidcToken": {
    "description": "The OIDC token to exchange for an Azure token.",
    "type": "string"
   },
   "partnerId": {
    "description": "A GUID/UUID that is registered with Microsoft to facilitate partner resource usage attribution.",
    "type": "string"
   },
   "subscriptionId": {
    "description": "The Subscription ID which should be used.",
    "type": "string"
   },
   "tenantId": {
    "description": "The Tenant ID which should be used.",
    "type": "string"
   },
   "useMsi": {
    "description": "Allow Managed Service Identity to be used for Authentication.",
    "type": "boolean"
   },
   "useOidc": {
    "description": "Allow OpenID Connect (OIDC) to be used for Authentication.",
    "type": "boolean"
   }
  },
  "type": "object"
 },
 "publisher": "Pulumi",
 "repository": "https://github.com/pulumi/pulumi-azure-native",
 "resources": {
  "azure-native:keyvault:AccessPolicy": {
   "description": "Key Vault Access Policy for managing policies on existing vaults.",
   "inputProperties": {
    "policy": {
     "$ref": "#/types/azure-native:keyvault:AccessPolicyEntry",
     "description": "The definition of the access policy."
    },
    "resourceGroupName": {
     "description": "Name of the resource group that contains the vault.",
     "type": "string"
    },
    "vaultName": {
     "description": "Name of the Key Vault.",
     "type": "string"
    }
   },
   "properties": {
    "policy": {
     "$ref": "#/types/azure-native:keyvault:AccessPolicyEntry",
     "description": "The definition of the access policy."
    },
    "resourceGroupName": {
     "description": "Name of the resource group that contains the vault.",
     "type": "string"
    },
    "vaultName": {
     "description": "Name of the Key Vault.",
     "type": "string"
    }
   },
   "requiredInputs": [
    "resourceGroupName",
    "vaultName",
    "policy"
   ],
   "type": "object"
  },
  "azure-native:storage:Blob": {
   "description": "Manages a Blob within a Storage Container. For the supported combinations of properties and features please see [here](https://learn.microsoft.com/en-us/azure/storage/blobs/storage-feature-support-in-storage-accounts).",
   "inputProperties": {
    "accessTier": {
     "$ref": "#/types/azure-native:storage:BlobAccessTier",
     "description": "The access tier of the storage blob. Only supported for standard storage accounts, not premium."
    },
    "accountName": {
     "description": "Specifies the storage account in which to create the storage container.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "blobName": {
     "description": "The name of the storage blob. Must be unique within the storage container the blob is located. If this property is not specified it will be set to the name of the resource.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "containerName": {
     "description": "The name of the storage container in which this blob should be created.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "contentMd5": {
     "description": "The MD5 sum of the blob contents, base64-encoded. Cannot be defined if blob type is Append.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "contentType": {
     "description": "The content type of the storage blob. Defaults to `application/octet-stream`.",
     "type": "string"
    },
    "metadata": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "A map of custom blob metadata.",
     "type": "object"
    },
    "resourceGroupName": {
     "description": "The name of the resource group within the user's subscription.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "source": {
     "$ref": "pulumi.json#/Asset",
     "description": "An asset to copy to the blob contents. This field cannot be specified for Append blobs.",
     "willReplaceOnChanges": true
    },
    "type": {
     "$ref": "#/types/azure-native:storage:BlobType",
     "default": "Block",
     "description": "The type of the storage blob to be created. Defaults to 'Block'.",
     "willReplaceOnChanges": true
    }
   },
   "properties": {
    "accessTier": {
     "$ref": "#/types/azure-native:storage:BlobAccessTier",
     "description": "The access tier of the storage blob. Only supported for standard storage accounts, not premium."
    },
    "contentMd5": {
     "description": "The MD5 sum of the blob contents.",
     "type": "string"
    },
    "contentType": {
     "description": "The content type of the storage blob.",
     "type": "string"
    },
    "metadata": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "A map of custom blob metadata.",
     "type": "object"
    },
    "name": {
     "description": "The name of the storage blob.",
     "type": "string"
    },
    "type": {
     "$ref": "#/types/azure-native:storage:BlobType",
     "description": "The type of the storage blob to be created."
    },
    "url": {
     "description": "The URL of the blob.",
     "type": "string"
    }
   },
   "required": [
    "metadata",
    "name",
    "type",
    "url"
   ],
   "requiredInputs": [
    "resourceGroupName",
    "accountName",
    "containerName"
   ],
   "type": "object"
  },
  "azure-native:storage:BlobContainerLegalHold": {
   "description": ".",
   "inputProperties": {
    "accountName": {
     "description": "Name of the Storage Account.",
     "type": "string"
    },
    "allowProtectedAppendWritesAll": {
     "description": "When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining legal hold protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted.",
     "type": "boolean"
    },
    "containerName": {
     "description": "Name of the Blob Container.",
     "type": "string"
    },
    "resourceGroupName": {
     "description": "Name of the resource group that contains the storage account.",
     "type": "string"
    },
    "tags": {
     "description": "List of legal hold tags. Each tag should be 3 to 23 alphanumeric characters and is normalized to lower case at SRP.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "properties": {
    "accountName": {
     "description": "Name of the Storage Account.",
     "type": "string"
    },
    "allowProtectedAppendWritesAll": {
     "description": "When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining legal hold protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted.",
     "type": "boolean"
    },
    "containerName": {
     "description": "Name of the Blob Container.",
     "type": "string"
    },
    "resourceGroupName": {
     "description": "Name of the resource group that contains the storage account.",
     "type": "string"
    },
    "tags": {
     "description": "List of legal hold tags. Each tag should be 3 to 23 alphanumeric characters and is normalized to lower case at SRP.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "requiredInputs": [
    "resourceGroupName",
    "accountName",
    "containerName",
    "tags"
   ],
   "type": "object"
  },
  "azure-native:storage:StorageAccountStaticWebsite": {
   "description": "Enables the static website feature of a storage account.",
   "inputProperties": {
    "accountName": {
     "description": "The name of the storage account within the specified resource group.",
     "type": "string"
    },
    "error404Document": {
     "description": "The absolute path to a custom webpage that should be used when a request is made which does not correspond to an existing file.",
     "type": "string"
    },
    "indexDocument": {
     "description": "The webpage that Azure Storage serves for requests to the root of a website or any sub-folder. For example, 'index.html'. The value is case-sensitive.",
     "type": "string"
    },
    "resourceGroupName": {
     "description": "The name of the resource group within the user's subscription. The name is case insensitive.",
     "type": "string"
    }
   },
   "properties": {
    "containerName": {
     "description": "The name of the container to upload blobs to.",
     "type": "string"
    },
    "error404Document": {
     "description": "The absolute path to a custom webpage that should be used when a request is made which does not correspond to an existing file.",
     "type": "string"
    },
    "indexDocument": {
     "description": "The webpage that Azure Storage serves for requests to the root of a website or any sub-folder. For example, 'index.html'. The value is case-sensitive.",
     "type": "string"
    }
   },
   "required": [
    "containerName"
   ],
   "requiredInputs": [
    "resourceGroupName",
    "accountName"
   ],
   "type": "object"
  },
  "azure-native:synapse:WorkspaceSqlAadAdmin": {
   "description": "\n\nNote: SQL AAD Admin is configured automatically during workspace creation and assigned to the current user. One can't add more admins with this resource unless you manually delete the current SQL AAD Admin."
  },
  "azure-native_network_v20230201:network:AdminRule": {
   "description": "Network admin rule.",
   "inputProperties": {
    "access": {
     "description": "Indicates the access allowed for this particular rule",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:SecurityConfigurationRuleAccess"
      }
     ]
    },
    "configurationName": {
     "description": "The name of the network manager Security Configuration.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "description": {
     "description": "A description for this rule. Restricted to 140 chars.",
     "type": "string"
    },
    "destinationPortRanges": {
     "description": "The destination port ranges.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "destinations": {
     "description": "The destination address prefixes. CIDR or destination IP ranges.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AddressPrefixItem",
      "type": "object"
     },
     "type": "array"
    },
    "direction": {
     "description": "Indicates if the traffic matched against the rule in inbound or outbound.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:SecurityConfigurationRuleDirection"
      }
     ]
    },
    "kind": {
     "const": "Custom",
     "description": "Whether the rule is custom or default.\nExpected value is 'Custom'.",
     "type": "string"
    },
    "networkManagerName": {
     "description": "The name of the network manager.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "priority": {
     "description": "The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
     "type": "integer"
    },
    "protocol": {
     "description": "Network protocol this rule applies to.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:SecurityConfigurationRuleProtocol"
      }
     ]
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "ruleCollectionName": {
     "description": "The name of the network manager security Configuration rule collection.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "ruleName": {
     "description": "The name of the rule.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "sourcePortRanges": {
     "description": "The source port ranges.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "sources": {
     "description": "The CIDR or source IP ranges.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AddressPrefixItem",
      "type": "object"
     },
     "type": "array"
    }
   },
   "properties": {
    "access": {
     "description": "Indicates the access allowed for this particular rule",
     "type": "string"
    },
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "description": {
     "description": "A description for this rule. Restricted to 140 chars.",
     "type": "string"
    },
    "destinationPortRanges": {
     "description": "The destination port ranges.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "destinations": {
     "description": "The destination address prefixes. CIDR or destination IP ranges.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AddressPrefixItemResponse",
      "type": "object"
     },
     "type": "array"
    },
    "direction": {
     "description": "Indicates if the traffic matched against the rule in inbound or outbound.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "kind": {
     "const": "Custom",
     "description": "Whether the rule is custom or default.\nExpected value is 'Custom'.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "priority": {
     "description": "The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
     "type": "integer"
    },
    "protocol": {
     "description": "Network protocol this rule applies to.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the resource.",
     "type": "string"
    },
    "resourceGuid": {
     "description": "Unique identifier for this resource.",
     "type": "string"
    },
    "sourcePortRanges": {
     "description": "The source port ranges.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "sources": {
     "description": "The CIDR or source IP ranges.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AddressPrefixItemResponse",
      "type": "object"
     },
     "type": "array"
    },
    "systemData": {
     "$ref": "#/types/azure-native_network_v20230201:network:SystemDataResponse",
     "description": "The system metadata related to this resource.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "access",
    "azureApiVersion",
    "direction",
    "etag",
    "kind",
    "name",
    "priority",
    "protocol",
    "provisioningState",
    "resourceGuid",
    "systemData",
    "type"
   ],
   "requiredInputs": [
    "access",
    "configurationName",
    "direction",
    "kind",
    "networkManagerName",
    "priority",
    "protocol",
    "resourceGroupName",
    "ruleCollectionName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:AdminRuleCollection": {
   "description": "Defines the admin rule collection.",
   "inputProperties": {
    "appliesToGroups": {
     "description": "Groups for configuration",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkManagerSecurityGroupItem",
      "type": "object"
     },
     "type": "array"
    },
    "configurationName": {
     "description": "The name of the network manager Security Configuration.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "description": {
     "description": "A description of the admin rule collection.",
     "type": "string"
    },
    "networkManagerName": {
     "description": "The name of the network manager.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "ruleCollectionName": {
     "description": "The name of the network manager security Configuration rule collection.",
     "type": "string",
     "willReplaceOnChanges": true
    }
   },
   "properties": {
    "appliesToGroups": {
     "description": "Groups for configuration",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkManagerSecurityGroupItemResponse",
      "type": "object"
     },
     "type": "array"
    },
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "description": {
     "description": "A description of the admin rule collection.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the resource.",
     "type": "string"
    },
    "resourceGuid": {
     "description": "Unique identifier for this resource.",
     "type": "string"
    },
    "systemData": {
     "$ref": "#/types/azure-native_network_v20230201:network:SystemDataResponse",
     "description": "The system metadata related to this resource.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "appliesToGroups",
    "azureApiVersion",
    "etag",
    "name",
    "provisioningState",
    "resourceGuid",
    "systemData",
    "type"
   ],
   "requiredInputs": [
    "appliesToGroups",
    "configurationName",
    "networkManagerName",
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGateway": {
   "description": "Application gateway resource.",
   "inputProperties": {
    "applicationGatewayName": {
     "description": "The name of the application gateway.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "authenticationCertificates": {
     "description": "Authentication certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayAuthenticationCertificate",
      "type": "object"
     },
     "type": "array"
    },
    "autoscaleConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayAutoscaleConfiguration",
     "description": "Autoscale Configuration.",
     "type": "object"
    },
    "backendAddressPools": {
     "description": "Backend address pool of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayBackendAddressPool",
      "type": "object"
     },
     "type": "array"
    },
    "backendHttpSettingsCollection": {
     "description": "Backend http settings of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayBackendHttpSettings",
      "type": "object"
     },
     "type": "array"
    },
    "backendSettingsCollection": {
     "description": "Backend settings of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayBackendSettings",
      "type": "object"
     },
     "type": "array"
    },
    "customErrorConfigurations": {
     "description": "Custom error configurations of the application gateway resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayCustomError",
      "type": "object"
     },
     "type": "array"
    },
    "enableFips": {
     "description": "Whether FIPS is enabled on the application gateway resource.",
     "type": "boolean"
    },
    "enableHttp2": {
     "description": "Whether HTTP2 is enabled on the application gateway resource.",
     "type": "boolean"
    },
    "firewallPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Reference to the FirewallPolicy resource.",
     "type": "object"
    },
    "forceFirewallPolicyAssociation": {
     "description": "If true, associates a firewall policy with an application gateway regardless whether the policy differs from the WAF Config.",
     "type": "boolean"
    },
    "frontendIPConfigurations": {
     "description": "Frontend IP addresses of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayFrontendIPConfiguration",
      "type": "object"
     },
     "type": "array"
    },
    "frontendPorts": {
     "description": "Frontend ports of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayFrontendPort",
      "type": "object"
     },
     "type": "array"
    },
    "gatewayIPConfigurations": {
     "description": "Subnets of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayIPConfiguration",
      "type": "object"
     },
     "type": "array"
    },
    "globalConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayGlobalConfiguration",
     "description": "Global Configuration.",
     "type": "object"
    },
    "httpListeners": {
     "description": "Http listeners of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayHttpListener",
      "type": "object"
     },
     "type": "array"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "identity": {
     "$ref": "#/types/azure-native_network_v20230201:network:ManagedServiceIdentity",
     "description": "The identity of the application gateway, if configured.",
     "type": "object"
    },
    "listeners": {
     "description": "Listeners of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayListener",
      "type": "object"
     },
     "type": "array"
    },
    "loadDistributionPolicies": {
     "description": "Load distribution policies of the application gateway resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayLoadDistributionPolicy",
      "type": "object"
     },
     "type": "array"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "privateLinkConfigurations": {
     "description": "PrivateLink configurations on application gateway.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayPrivateLinkConfiguration",
      "type": "object"
     },
     "type": "array"
    },
    "probes": {
     "description": "Probes of the application gateway resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayProbe",
      "type": "object"
     },
     "type": "array"
    },
    "redirectConfigurations": {
     "description": "Redirect configurations of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayRedirectConfiguration",
      "type": "object"
     },
     "type": "array"
    },
    "requestRoutingRules": {
     "description": "Request routing rules of the application gateway resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayRequestRoutingRule",
      "type": "object"
     },
     "type": "array"
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "rewriteRuleSets": {
     "description": "Rewrite rules for the application gateway resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayRewriteRuleSet",
      "type": "object"
     },
     "type": "array"
    },
    "routingRules": {
     "description": "Routing rules of the application gateway resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayRoutingRule",
      "type": "object"
     },
     "type": "array"
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewaySku",
     "description": "SKU of the application gateway resource.",
     "type": "object"
    },
    "sslCertificates": {
     "description": "SSL certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewaySslCertificate",
      "type": "object"
     },
     "type": "array"
    },
    "sslPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewaySslPolicy",
     "description": "SSL policy of the application gateway resource.",
     "type": "object"
    },
    "sslProfiles": {
     "description": "SSL profiles of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewaySslProfile",
      "type": "object"
     },
     "type": "array"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "trustedClientCertificates": {
     "description": "Trusted client certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayTrustedClientCertificate",
      "type": "object"
     },
     "type": "array"
    },
    "trustedRootCertificates": {
     "description": "Trusted Root certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayTrustedRootCertificate",
      "type": "object"
     },
     "type": "array"
    },
    "urlPathMaps": {
     "description": "URL path map of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayUrlPathMap",
      "type": "object"
     },
     "type": "array"
    },
    "webApplicationFirewallConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayWebApplicationFirewallConfiguration",
     "description": "Web application firewall configuration.",
     "type": "object"
    },
    "zones": {
     "description": "A list of availability zones denoting where the resource needs to come from.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "properties": {
    "authenticationCertificates": {
     "description": "Authentication certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayAuthenticationCertificateResponse",
      "type": "object"
     },
     "type": "array"
    },
    "autoscaleConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayAutoscaleConfigurationResponse",
     "description": "Autoscale Configuration.",
     "type": "object"
    },
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "backendAddressPools": {
     "description": "Backend address pool of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayBackendAddressPoolResponse",
      "type": "object"
     },
     "type": "array"
    },
    "backendHttpSettingsCollection": {
     "description": "Backend http settings of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayBackendHttpSettingsResponse",
      "type": "object"
     },
     "type": "array"
    },
    "backendSettingsCollection": {
     "description": "Backend settings of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayBackendSettingsResponse",
      "type": "object"
     },
     "type": "array"
    },
    "customErrorConfigurations": {
     "description": "Custom error configurations of the application gateway resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayCustomErrorResponse",
      "type": "object"
     },
     "type": "array"
    },
    "defaultPredefinedSslPolicy": {
     "description": "The default predefined SSL Policy applied on the application gateway resource.",
     "type": "string"
    },
    "enableFips": {
     "description": "Whether FIPS is enabled on the application gateway resource.",
     "type": "boolean"
    },
    "enableHttp2": {
     "description": "Whether HTTP2 is enabled on the application gateway resource.",
     "type": "boolean"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "firewallPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Reference to the FirewallPolicy resource.",
     "type": "object"
    },
    "forceFirewallPolicyAssociation": {
     "description": "If true, associates a firewall policy with an application gateway regardless whether the policy differs from the WAF Config.",
     "type": "boolean"
    },
    "frontendIPConfigurations": {
     "description": "Frontend IP addresses of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayFrontendIPConfigurationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "frontendPorts": {
     "description": "Frontend ports of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayFrontendPortResponse",
      "type": "object"
     },
     "type": "array"
    },
    "gatewayIPConfigurations": {
     "description": "Subnets of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayIPConfigurationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "globalConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayGlobalConfigurationResponse",
     "description": "Global Configuration.",
     "type": "object"
    },
    "httpListeners": {
     "description": "Http listeners of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayHttpListenerResponse",
      "type": "object"
     },
     "type": "array"
    },
    "identity": {
     "$ref": "#/types/azure-native_network_v20230201:network:ManagedServiceIdentityResponse",
     "description": "The identity of the application gateway, if configured.",
     "type": "object"
    },
    "listeners": {
     "description": "Listeners of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayListenerResponse",
      "type": "object"
     },
     "type": "array"
    },
    "loadDistributionPolicies": {
     "description": "Load distribution policies of the application gateway resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayLoadDistributionPolicyResponse",
      "type": "object"
     },
     "type": "array"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "operationalState": {
     "description": "Operational state of the application gateway resource.",
     "type": "string"
    },
    "privateEndpointConnections": {
     "description": "Private Endpoint connections on application gateway.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayPrivateEndpointConnectionResponse",
      "type": "object"
     },
     "type": "array"
    },
    "privateLinkConfigurations": {
     "description": "PrivateLink configurations on application gateway.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayPrivateLinkConfigurationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "probes": {
     "description": "Probes of the application gateway resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayProbeResponse",
      "type": "object"
     },
     "type": "array"
    },
    "provisioningState": {
     "description": "The provisioning state of the application gateway resource.",
     "type": "string"
    },
    "redirectConfigurations": {
     "description": "Redirect configurations of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayRedirectConfigurationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "requestRoutingRules": {
     "description": "Request routing rules of the application gateway resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayRequestRoutingRuleResponse",
      "type": "object"
     },
     "type": "array"
    },
    "resourceGuid": {
     "description": "The resource GUID property of the application gateway resource.",
     "type": "string"
    },
    "rewriteRuleSets": {
     "description": "Rewrite rules for the application gateway resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayRewriteRuleSetResponse",
      "type": "object"
     },
     "type": "array"
    },
    "routingRules": {
     "description": "Routing rules of the application gateway resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayRoutingRuleResponse",
      "type": "object"
     },
     "type": "array"
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewaySkuResponse",
     "description": "SKU of the application gateway resource.",
     "type": "object"
    },
    "sslCertificates": {
     "description": "SSL certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewaySslCertificateResponse",
      "type": "object"
     },
     "type": "array"
    },
    "sslPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewaySslPolicyResponse",
     "description": "SSL policy of the application gateway resource.",
     "type": "object"
    },
    "sslProfiles": {
     "description": "SSL profiles of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewaySslProfileResponse",
      "type": "object"
     },
     "type": "array"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "trustedClientCertificates": {
     "description": "Trusted client certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayTrustedClientCertificateResponse",
      "type": "object"
     },
     "type": "array"
    },
    "trustedRootCertificates": {
     "description": "Trusted Root certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayTrustedRootCertificateResponse",
      "type": "object"
     },
     "type": "array"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    },
    "urlPathMaps": {
     "description": "URL path map of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayUrlPathMapResponse",
      "type": "object"
     },
     "type": "array"
    },
    "webApplicationFirewallConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayWebApplicationFirewallConfigurationResponse",
     "description": "Web application firewall configuration.",
     "type": "object"
    },
    "zones": {
     "description": "A list of availability zones denoting where the resource needs to come from.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "required": [
    "azureApiVersion",
    "defaultPredefinedSslPolicy",
    "etag",
    "name",
    "operationalState",
    "privateEndpointConnections",
    "provisioningState",
    "resourceGuid",
    "type"
   ],
   "requiredInputs": [
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayPrivateEndpointConnection": {
   "description": "Private Endpoint connection on an application gateway.",
   "inputProperties": {
    "applicationGatewayName": {
     "description": "The name of the application gateway.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "connectionName": {
     "description": "The name of the application gateway private endpoint connection.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "Name of the private endpoint connection on an application gateway.",
     "type": "string"
    },
    "privateLinkServiceConnectionState": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceConnectionState",
     "description": "A collection of information about the state of the connection between service consumer and provider.",
     "type": "object"
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "linkIdentifier": {
     "description": "The consumer link id.",
     "type": "string"
    },
    "name": {
     "description": "Name of the private endpoint connection on an application gateway.",
     "type": "string"
    },
    "privateEndpoint": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateEndpointResponse",
     "description": "The resource of private end point.",
     "type": "object"
    },
    "privateLinkServiceConnectionState": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceConnectionStateResponse",
     "description": "A collection of information about the state of the connection between service consumer and provider.",
     "type": "object"
    },
    "provisioningState": {
     "description": "The provisioning state of the application gateway private endpoint connection resource.",
     "type": "string"
    },
    "type": {
     "description": "Type of the resource.",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "linkIdentifier",
    "privateEndpoint",
    "provisioningState",
    "type"
   ],
   "requiredInputs": [
    "applicationGatewayName",
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationSecurityGroup": {
   "description": "An application security group in a resource group.",
   "inputProperties": {
    "applicationSecurityGroupName": {
     "description": "The name of the application security group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the application security group resource.",
     "type": "string"
    },
    "resourceGuid": {
     "description": "The resource GUID property of the application security group resource. It uniquely identifies a resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.",
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "name",
    "provisioningState",
    "resourceGuid",
    "type"
   ],
   "requiredInputs": [
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:AzureFirewall": {
   "description": "Azure Firewall resource.",
   "inputProperties": {
    "additionalProperties": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "The additional properties used to further config this azure firewall.",
     "type": "object"
    },
    "applicationRuleCollections": {
     "description": "Collection of application rule collections used by Azure Firewall.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallApplicationRuleCollection",
      "type": "object"
     },
     "type": "array"
    },
    "azureFirewallName": {
     "description": "The name of the Azure Firewall.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "firewallPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "The firewallPolicy associated with this azure firewall.",
     "type": "object"
    },
    "hubIPAddresses": {
     "$ref": "#/types/azure-native_network_v20230201:network:HubIPAddresses",
     "description": "IP addresses associated with AzureFirewall.",
     "type": "object"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "ipConfigurations": {
     "description": "IP configuration of the Azure Firewall resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallIPConfiguration",
      "type": "object"
     },
     "type": "array"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "managementIpConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallIPConfiguration",
     "description": "IP configuration of the Azure Firewall used for management traffic.",
     "type": "object"
    },
    "natRuleCollections": {
     "description": "Collection of NAT rule collections used by Azure Firewall.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallNatRuleCollection",
      "type": "object"
     },
     "type": "array"
    },
    "networkRuleCollections": {
     "description": "Collection of network rule collections used by Azure Firewall.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallNetworkRuleCollection",
      "type": "object"
     },
     "type": "array"
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallSku",
     "description": "The Azure Firewall Resource SKU.",
     "type": "object"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "threatIntelMode": {
     "description": "The operation mode for Threat Intelligence.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:AzureFirewallThreatIntelMode"
      }
     ]
    },
    "virtualHub": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "The virtualHub to which the firewall belongs.",
     "type": "object"
    },
    "zones": {
     "description": "A list of availability zones denoting where the resource needs to come from.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "properties": {
    "additionalProperties": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "The additional properties used to further config this azure firewall.",
     "type": "object"
    },
    "applicationRuleCollections": {
     "description": "Collection of application rule collections used by Azure Firewall.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallApplicationRuleCollectionResponse",
      "type": "object"
     },
     "type": "array"
    },
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "firewallPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The firewallPolicy associated with this azure firewall.",
     "type": "object"
    },
    "hubIPAddresses": {
     "$ref": "#/types/azure-native_network_v20230201:network:HubIPAddressesResponse",
     "description": "IP addresses associated with AzureFirewall.",
     "type": "object"
    },
    "ipConfigurations": {
     "description": "IP configuration of the Azure Firewall resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallIPConfigurationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "ipGroups": {
     "description": "IpGroups associated with AzureFirewall.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallIpGroupsResponse",
      "type": "object"
     },
     "type": "array"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "managementIpConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallIPConfigurationResponse",
     "description": "IP configuration of the Azure Firewall used for management traffic.",
     "type": "object"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "natRuleCollections": {
     "description": "Collection of NAT rule collections used by Azure Firewall.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallNatRuleCollectionResponse",
      "type": "object"
     },
     "type": "array"
    },
    "networkRuleCollections": {
     "description": "Collection of network rule collections used by Azure Firewall.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallNetworkRuleCollectionResponse",
      "type": "object"
     },
     "type": "array"
    },
    "provisioningState": {
     "description": "The provisioning state of the Azure firewall resource.",
     "type": "string"
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallSkuResponse",
     "description": "The Azure Firewall Resource SKU.",
     "type": "object"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "threatIntelMode": {
     "description": "The operation mode for Threat Intelligence.",
     "type": "string"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    },
    "virtualHub": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The virtualHub to which the firewall belongs.",
     "type": "object"
    },
    "zones": {
     "description": "A list of availability zones denoting where the resource needs to come from.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "ipGroups",
    "name",
    "provisioningState",
    "type"
   ],
   "requiredInputs": [
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:BastionHost": {
   "description": "Bastion Host resource.",
   "inputProperties": {
    "bastionHostName": {
     "description": "The name of the Bastion Host.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "disableCopyPaste": {
     "default": false,
     "description": "Enable/Disable Copy/Paste feature of the Bastion Host resource.",
     "type": "boolean"
    },
    "dnsName": {
     "description": "FQDN for the endpoint on which bastion host is accessible.",
     "type": "string"
    },
    "enableFileCopy": {
     "default": false,
     "description": "Enable/Disable File Copy feature of the Bastion Host resource.",
     "type": "boolean"
    },
    "enableIpConnect": {
     "default": false,
     "description": "Enable/Disable IP Connect feature of the Bastion Host resource.",
     "type": "boolean"
    },
    "enableKerberos": {
     "default": false,
     "description": "Enable/Disable Kerberos feature of the Bastion Host resource.",
     "type": "boolean"
    },
    "enableShareableLink": {
     "default": false,
     "description": "Enable/Disable Shareable Link of the Bastion Host resource.",
     "type": "boolean"
    },
    "enableTunneling": {
     "default": false,
     "description": "Enable/Disable Tunneling feature of the Bastion Host resource.",
     "type": "boolean"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "ipConfigurations": {
     "description": "IP configuration of the Bastion Host resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:BastionHostIPConfiguration",
      "type": "object"
     },
     "type": "array"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "scaleUnits": {
     "description": "The scale units for the Bastion Host resource.",
     "type": "integer"
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:Sku",
     "description": "The sku of this Bastion Host.",
     "type": "object"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "disableCopyPaste": {
     "default": false,
     "description": "Enable/Disable Copy/Paste feature of the Bastion Host resource.",
     "type": "boolean"
    },
    "dnsName": {
     "description": "FQDN for the endpoint on which bastion host is accessible.",
     "type": "string"
    },
    "enableFileCopy": {
     "default": false,
     "description": "Enable/Disable File Copy feature of the Bastion Host resource.",
     "type": "boolean"
    },
    "enableIpConnect": {
     "default": false,
     "description": "Enable/Disable IP Connect feature of the Bastion Host resource.",
     "type": "boolean"
    },
    "enableKerberos": {
     "default": false,
     "description": "Enable/Disable Kerberos feature of the Bastion Host resource.",
     "type": "boolean"
    },
    "enableShareableLink": {
     "default": false,
     "description": "Enable/Disable Shareable Link of the Bastion Host resource.",
     "type": "boolean"
    },
    "enableTunneling": {
     "default": false,
     "description": "Enable/Disable Tunneling feature of the Bastion Host resource.",
     "type": "boolean"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "ipConfigurations": {
     "description": "IP configuration of the Bastion Host resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:BastionHostIPConfigurationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the bastion host resource.",
     "type": "string"
    },
    "scaleUnits": {
     "description": "The scale units for the Bastion Host resource.",
     "type": "integer"
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:SkuResponse",
     "description": "The sku of this Bastion Host.",
     "type": "object"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "name",
    "provisioningState",
    "type"
   ],
   "requiredInputs": [
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ConfigurationPolicyGroup": {
   "description": "VpnServerConfigurationPolicyGroup Resource.",
   "inputProperties": {
    "configurationPolicyGroupName": {
     "description": "The name of the ConfigurationPolicyGroup.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "isDefault": {
     "description": "Shows if this is a Default VpnServerConfigurationPolicyGroup or not.",
     "type": "boolean"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "policyMembers": {
     "description": "Multiple PolicyMembers for VpnServerConfigurationPolicyGroup.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnServerConfigurationPolicyGroupMember",
      "type": "object"
     },
     "type": "array"
    },
    "priority": {
     "description": "Priority for VpnServerConfigurationPolicyGroup.",
     "type": "integer"
    },
    "resourceGroupName": {
     "description": "The resource group name of the ConfigurationPolicyGroup.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "vpnServerConfigurationName": {
     "description": "The name of the VpnServerConfiguration.",
     "type": "string",
     "willReplaceOnChanges": true
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "isDefault": {
     "description": "Shows if this is a Default VpnServerConfigurationPolicyGroup or not.",
     "type": "boolean"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "p2SConnectionConfigurations": {
     "description": "List of references to P2SConnectionConfigurations.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "policyMembers": {
     "description": "Multiple PolicyMembers for VpnServerConfigurationPolicyGroup.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnServerConfigurationPolicyGroupMemberResponse",
      "type": "object"
     },
     "type": "array"
    },
    "priority": {
     "description": "Priority for VpnServerConfigurationPolicyGroup.",
     "type": "integer"
    },
    "provisioningState": {
     "description": "The provisioning state of the VpnServerConfigurationPolicyGroup resource.",
     "type": "string"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "p2SConnectionConfigurations",
    "provisioningState",
    "type"
   ],
   "requiredInputs": [
    "resourceGroupName",
    "vpnServerConfigurationName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ConnectionMonitor": {
   "description": "Information about the connection monitor.",
   "inputProperties": {
    "autoStart": {
     "default": true,
     "description": "Determines if the connection monitor will start automatically once created.",
     "type": "boolean"
    },
    "connectionMonitorName": {
     "description": "The name of the connection monitor.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "destination": {
     "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorDestination",
     "description": "Describes the destination of connection monitor.",
     "type": "object"
    },
    "endpoints": {
     "description": "List of connection monitor endpoints.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorEndpoint",
      "type": "object"
     },
     "type": "array"
    },
    "location": {
     "description": "Connection monitor location.",
     "type": "string"
    },
    "migrate": {
     "description": "Value indicating whether connection monitor V1 should be migrated to V2 format.",
     "type": "string"
    },
    "monitoringIntervalInSeconds": {
     "default": 60,
     "description": "Monitoring interval in seconds.",
     "type": "integer"
    },
    "networkWatcherName": {
     "description": "The name of the Network Watcher resource.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "notes": {
     "description": "Optional notes to be associated with the connection monitor.",
     "type": "string"
    },
    "outputs": {
     "description": "List of connection monitor outputs.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorOutput",
      "type": "object"
     },
     "type": "array"
    },
    "resourceGroupName": {
     "description": "The name of the resource group containing Network Watcher.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "source": {
     "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorSource",
     "description": "Describes the source of connection monitor.",
     "type": "object"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Connection monitor tags.",
     "type": "object"
    },
    "testConfigurations": {
     "description": "List of connection monitor test configurations.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorTestConfiguration",
      "type": "object"
     },
     "type": "array"
    },
    "testGroups": {
     "description": "List of connection monitor test groups.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorTestGroup",
      "type": "object"
     },
     "type": "array"
    }
   },
   "properties": {
    "autoStart": {
     "default": true,
     "description": "Determines if the connection monitor will start automatically once created.",
     "type": "boolean"
    },
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "connectionMonitorType": {
     "description": "Type of connection monitor.",
     "type": "string"
    },
    "destination": {
     "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorDestinationResponse",
     "description": "Describes the destination of connection monitor.",
     "type": "object"
    },
    "endpoints": {
     "description": "List of connection monitor endpoints.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorEndpointResponse",
      "type": "object"
     },
     "type": "array"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "location": {
     "description": "Connection monitor location.",
     "type": "string"
    },
    "monitoringIntervalInSeconds": {
     "default": 60,
     "description": "Monitoring interval in seconds.",
     "type": "integer"
    },
    "monitoringStatus": {
     "description": "The monitoring status of the connection monitor.",
     "type": "string"
    },
    "name": {
     "description": "Name of the connection monitor.",
     "type": "string"
    },
    "notes": {
     "description": "Optional notes to be associated with the connection monitor.",
     "type": "string"
    },
    "outputs": {
     "description": "List of connection monitor outputs.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorOutputResponse",
      "type": "object"
     },
     "type": "array"
    },
    "provisioningState": {
     "description": "The provisioning state of the connection monitor.",
     "type": "string"
    },
    "source": {
     "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorSourceResponse",
     "description": "Describes the source of connection monitor.",
     "type": "object"
    },
    "startTime": {
     "description": "The date and time when the connection monitor was started.",
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Connection monitor tags.",
     "type": "object"
    },
    "testConfigurations": {
     "description": "List of connection monitor test configurations.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorTestConfigurationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "testGroups": {
     "description": "List of connection monitor test groups.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorTestGroupResponse",
      "type": "object"
     },
     "type": "array"
    },
    "type": {
     "description": "Connection monitor type.",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "connectionMonitorType",
    "etag",
    "monitoringStatus",
    "name",
    "provisioningState",
    "startTime",
    "type"
   ],
   "requiredInputs": [
    "networkWatcherName",
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ConnectivityConfiguration": {
   "description": "The network manager connectivity configuration resource",
   "inputProperties": {
    "appliesToGroups": {
     "description": "Groups for configuration",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConnectivityGroupItem",
      "type": "object"
     },
     "type": "array"
    },
    "configurationName": {
     "description": "The name of the network manager connectivity configuration.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "connectivityTopology": {
     "description": "Connectivity topology type.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ConnectivityTopology"
      }
     ]
    },
    "deleteExistingPeering": {
     "description": "Flag if need to remove current existing peerings.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:DeleteExistingPeering"
      }
     ]
    },
    "description": {
     "description": "A description of the connectivity configuration.",
     "type": "string"
    },
    "hubs": {
     "description": "List of hubItems",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:Hub",
      "type": "object"
     },
     "type": "array"
    },
    "isGlobal": {
     "description": "Flag if global mesh is supported.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:IsGlobal"
      }
     ]
    },
    "networkManagerName": {
     "description": "The name of the network manager.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    }
   },
   "properties": {
    "appliesToGroups": {
     "description": "Groups for configuration",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConnectivityGroupItemResponse",
      "type": "object"
     },
     "type": "array"
    },
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "connectivityTopology": {
     "description": "Connectivity topology type.",
     "type": "string"
    },
    "deleteExistingPeering": {
     "description": "Flag if need to remove current existing peerings.",
     "type": "string"
    },
    "description": {
     "description": "A description of the connectivity configuration.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "hubs": {
     "description": "List of hubItems",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:HubResponse",
      "type": "object"
     },
     "type": "array"
    },
    "isGlobal": {
     "description": "Flag if global mesh is supported.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the connectivity configuration resource.",
     "type": "string"
    },
    "resourceGuid": {
     "description": "Unique identifier for this resource.",
     "type": "string"
    },
    "systemData": {
     "$ref": "#/types/azure-native_network_v20230201:network:SystemDataResponse",
     "description": "The system metadata related to this resource.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "appliesToGroups",
    "azureApiVersion",
    "connectivityTopology",
    "etag",
    "name",
    "provisioningState",
    "resourceGuid",
    "systemData",
    "type"
   ],
   "requiredInputs": [
    "appliesToGroups",
    "connectivityTopology",
    "networkManagerName",
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:CustomIPPrefix": {
   "description": "Custom IP prefix resource.",
   "inputProperties": {
    "asn": {
     "description": "The ASN for CIDR advertising. Should be an integer as string.",
     "type": "string"
    },
    "authorizationMessage": {
     "description": "Authorization message for WAN validation.",
     "type": "string"
    },
    "cidr": {
     "description": "The prefix range in CIDR notation. Should include the start address and the prefix length.",
     "type": "string"
    },
    "commissionedState": {
     "description": "The commissioned state of the Custom IP Prefix.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:CommissionedState"
      }
     ]
    },
    "customIpPrefixName": {
     "description": "The name of the custom IP prefix.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "customIpPrefixParent": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "The Parent CustomIpPrefix for IPv6 /64 CustomIpPrefix.",
     "type": "object"
    },
    "expressRouteAdvertise": {
     "description": "Whether to do express route advertise.",
     "type": "boolean"
    },
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocation",
     "description": "The extended location of the custom IP prefix.",
     "type": "object"
    },
    "geo": {
     "description": "The Geo for CIDR advertising. Should be an Geo code.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:Geo"
      }
     ]
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "noInternetAdvertise": {
     "description": "Whether to Advertise the range to Internet.",
     "type": "boolean"
    },
    "prefixType": {
     "description": "Type of custom IP prefix. Should be Singular, Parent, or Child.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:CustomIpPrefixType"
      }
     ]
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "signedMessage": {
     "description": "Signed message for WAN validation.",
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "zones": {
     "description": "A list of availability zones denoting the IP allocated for the resource needs to come from.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "properties": {
    "asn": {
     "description": "The ASN for CIDR advertising. Should be an integer as string.",
     "type": "string"
    },
    "authorizationMessage": {
     "description": "Authorization message for WAN validation.",
     "type": "string"
    },
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "childCustomIpPrefixes": {
     "description": "The list of all Children for IPv6 /48 CustomIpPrefix.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "cidr": {
     "description": "The prefix range in CIDR notation. Should include the start address and the prefix length.",
     "type": "string"
    },
    "commissionedState": {
     "description": "The commissioned state of the Custom IP Prefix.",
     "type": "string"
    },
    "customIpPrefixParent": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The Parent CustomIpPrefix for IPv6 /64 CustomIpPrefix.",
     "type": "object"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "expressRouteAdvertise": {
     "description": "Whether to do express route advertise.",
     "type": "boolean"
    },
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse",
     "description": "The extended location of the custom IP prefix.",
     "type": "object"
    },
    "failedReason": {
     "description": "The reason why resource is in failed state.",
     "type": "string"
    },
    "geo": {
     "description": "The Geo for CIDR advertising. Should be an Geo code.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "noInternetAdvertise": {
     "description": "Whether to Advertise the range to Internet.",
     "type": "boolean"
    },
    "prefixType": {
     "description": "Type of custom IP prefix. Should be Singular, Parent, or Child.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the custom IP prefix resource.",
     "type": "string"
    },
    "publicIpPrefixes": {
     "description": "The list of all referenced PublicIpPrefixes.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "resourceGuid": {
     "description": "The resource GUID property of the custom IP prefix resource.",
     "type": "string"
    },
    "signedMessage": {
     "description": "Signed message for WAN validation.",
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    },
    "zones": {
     "description": "A list of availability zones denoting the IP allocated for the resource needs to come from.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "required": [
    "azureApiVersion",
    "childCustomIpPrefixes",
    "etag",
    "failedReason",
    "name",
    "provisioningState",
    "publicIpPrefixes",
    "resourceGuid",
    "type"
   ],
   "requiredInputs": [
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:DdosCustomPolicy": {
   "description": "A DDoS custom policy in a resource group.",
   "inputProperties": {
    "ddosCustomPolicyName": {
     "description": "The name of the DDoS custom policy.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the DDoS custom policy resource.",
     "type": "string"
    },
    "resourceGuid": {
     "description": "The resource GUID property of the DDoS custom policy resource. It uniquely identifies the resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.",
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "name",
    "provisioningState",
    "resourceGuid",
    "type"
   ],
   "requiredInputs": [
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:DdosProtectionPlan": {
   "description": "A DDoS protection plan in a resource group.",
   "inputProperties": {
    "ddosProtectionPlanName": {
     "description": "The name of the DDoS protection plan.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the DDoS protection plan resource.",
     "type": "string"
    },
    "publicIPAddresses": {
     "description": "The list of public IPs associated with the DDoS protection plan resource. This list is read-only.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "resourceGuid": {
     "description": "The resource GUID property of the DDoS protection plan resource. It uniquely identifies the resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.",
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    },
    "virtualNetworks": {
     "description": "The list of virtual networks associated with the DDoS protection plan resource. This list is read-only.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "name",
    "provisioningState",
    "publicIPAddresses",
    "resourceGuid",
    "type",
    "virtualNetworks"
   ],
   "requiredInputs": [
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:DefaultAdminRule": {
   "description": "Network default admin rule.",
   "inputProperties": {
    "configurationName": {
     "description": "The name of the network manager Security Configuration.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "flag": {
     "description": "Default rule flag.",
     "type": "string"
    },
    "kind": {
     "const": "Default",
     "description": "Whether the rule is custom or default.\nExpected value is 'Default'.",
     "type": "string"
    },
    "networkManagerName": {
     "description": "The name of the network manager.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "ruleCollectionName": {
     "description": "The name of the network manager security Configuration rule collection.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "ruleName": {
     "description": "The name of the rule.",
     "type": "string",
     "willReplaceOnChanges": true
    }
   },
   "properties": {
    "access": {
     "description": "Indicates the access allowed for this particular rule",
     "type": "string"
    },
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "description": {
     "description": "A description for this rule. Restricted to 140 chars.",
     "type": "string"
    },
    "destinationPortRanges": {
     "description": "The destination port ranges.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "destinations": {
     "description": "The destination address prefixes. CIDR or destination IP ranges.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AddressPrefixItemResponse",
      "type": "object"
     },
     "type": "array"
    },
    "direction": {
     "description": "Indicates if the traffic matched against the rule in inbound or outbound.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "flag": {
     "description": "Default rule flag.",
     "type": "string"
    },
    "kind": {
     "const": "Default",
     "description": "Whether the rule is custom or default.\nExpected value is 'Default'.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "priority": {
     "description": "The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
     "type": "integer"
    },
    "protocol": {
     "description": "Network protocol this rule applies to.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the resource.",
     "type": "string"
    },
    "resourceGuid": {
     "description": "Unique identifier for this resource.",
     "type": "string"
    },
    "sourcePortRanges": {
     "description": "The source port ranges.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "sources": {
     "description": "The CIDR or source IP ranges.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AddressPrefixItemResponse",
      "type": "object"
     },
     "type": "array"
    },
    "systemData": {
     "$ref": "#/types/azure-native_network_v20230201:network:SystemDataResponse",
     "description": "The system metadata related to this resource.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "access",
    "azureApiVersion",
    "description",
    "destinationPortRanges",
    "destinations",
    "direction",
    "etag",
    "kind",
    "name",
    "priority",
    "protocol",
    "provisioningState",
    "resourceGuid",
    "sourcePortRanges",
    "sources",
    "systemData",
    "type"
   ],
   "requiredInputs": [
    "configurationName",
    "kind",
    "networkManagerName",
    "resourceGroupName",
    "ruleCollectionName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:DscpConfiguration": {
   "description": "Differentiated Services Code Point configuration for any given network interface",
   "inputProperties": {
    "destinationIpRanges": {
     "description": "Destination IP ranges.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:QosIpRange",
      "type": "object"
     },
     "type": "array"
    },
    "destinationPortRanges": {
     "description": "Destination port ranges.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:QosPortRange",
      "type": "object"
     },
     "type": "array"
    },
    "dscpConfigurationName": {
     "description": "The name of the resource.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "markings": {
     "description": "List of markings to be used in the configuration.",
     "items": {
      "type": "integer"
     },
     "type": "array"
    },
    "protocol": {
     "description": "RNM supported protocol types.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ProtocolType"
      }
     ]
    },
    "qosDefinitionCollection": {
     "description": "QoS object definitions",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:QosDefinition",
      "type": "object"
     },
     "type": "array"
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "sourceIpRanges": {
     "description": "Source IP ranges.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:QosIpRange",
      "type": "object"
     },
     "type": "array"
    },
    "sourcePortRanges": {
     "description": "Sources port ranges.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:QosPortRange",
      "type": "object"
     },
     "type": "array"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    }
   },
   "properties": {
    "associatedNetworkInterfaces": {
     "description": "Associated Network Interfaces to the DSCP Configuration.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "destinationIpRanges": {
     "description": "Destination IP ranges.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:QosIpRangeResponse",
      "type": "object"
     },
     "type": "array"
    },
    "destinationPortRanges": {
     "description": "Destination port ranges.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:QosPortRangeResponse",
      "type": "object"
     },
     "type": "array"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "markings": {
     "description": "List of markings to be used in the configuration.",
     "items": {
      "type": "integer"
     },
     "type": "array"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "protocol": {
     "description": "RNM supported protocol types.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the DSCP Configuration resource.",
     "type": "string"
    },
    "qosCollectionId": {
     "description": "Qos Collection ID generated by RNM.",
     "type": "string"
    },
    "qosDefinitionCollection": {
     "description": "QoS object definitions",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:QosDefinitionResponse",
      "type": "object"
     },
     "type": "array"
    },
    "resourceGuid": {
     "description": "The resource GUID property of the DSCP Configuration resource.",
     "type": "string"
    },
    "sourceIpRanges": {
     "description": "Source IP ranges.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:QosIpRangeResponse",
      "type": "object"
     },
     "type": "array"
    },
    "sourcePortRanges": {
     "description": "Sources port ranges.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:QosPortRangeResponse",
      "type": "object"
     },
     "type": "array"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "associatedNetworkInterfaces",
    "azureApiVersion",
    "etag",
    "name",
    "provisioningState",
    "qosCollectionId",
    "resourceGuid",
    "type"
   ],
   "requiredInputs": [
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExpressRouteCircuit": {
   "description": "ExpressRouteCircuit resource.",
   "inputProperties": {
    "allowClassicOperations": {
     "description": "Allow classic operations.",
     "type": "boolean"
    },
    "authorizationKey": {
     "description": "The authorizationKey.",
     "type": "string"
    },
    "authorizations": {
     "description": "The list of authorizations.\nThese are also available as standalone resources. Do not mix inline and standalone resource as they will conflict with each other, leading to resources deletion.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitAuthorization",
      "type": "object"
     },
     "type": "array"
    },
    "bandwidthInGbps": {
     "description": "The bandwidth of the circuit when the circuit is provisioned on an ExpressRoutePort resource.",
     "type": "number"
    },
    "circuitName": {
     "description": "The name of the circuit.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "circuitProvisioningState": {
     "description": "The CircuitProvisioningState state of the resource.",
     "type": "string"
    },
    "expressRoutePort": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "The reference to the ExpressRoutePort resource when the circuit is provisioned on an ExpressRoutePort resource.",
     "type": "object"
    },
    "gatewayManagerEtag": {
     "description": "The GatewayManager Etag.",
     "type": "string"
    },
    "globalReachEnabled": {
     "description": "Flag denoting global reach status.",
     "type": "boolean"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "peerings": {
     "description": "The list of peerings.\nThese are also available as standalone resources. Do not mix inline and standalone resource as they will conflict with each other, leading to resources deletion.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitPeering",
      "type": "object"
     },
     "type": "array"
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "serviceKey": {
     "description": "The ServiceKey.",
     "type": "string"
    },
    "serviceProviderNotes": {
     "description": "The ServiceProviderNotes.",
     "type": "string"
    },
    "serviceProviderProperties": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitServiceProviderProperties",
     "description": "The ServiceProviderProperties.",
     "type": "object"
    },
    "serviceProviderProvisioningState": {
     "description": "The ServiceProviderProvisioningState state of the resource.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ServiceProviderProvisioningState"
      }
     ]
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitSku",
     "description": "The SKU.",
     "type": "object"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    }
   },
   "properties": {
    "allowClassicOperations": {
     "description": "Allow classic operations.",
     "type": "boolean"
    },
    "authorizationKey": {
     "description": "The authorizationKey.",
     "type": "string"
    },
    "authorizationStatus": {
     "description": "The authorization status of the Circuit.",
     "type": "string"
    },
    "authorizations": {
     "description": "The list of authorizations.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitAuthorizationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "bandwidthInGbps": {
     "description": "The bandwidth of the circuit when the circuit is provisioned on an ExpressRoutePort resource.",
     "type": "number"
    },
    "circuitProvisioningState": {
     "description": "The CircuitProvisioningState state of the resource.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "expressRoutePort": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The reference to the ExpressRoutePort resource when the circuit is provisioned on an ExpressRoutePort resource.",
     "type": "object"
    },
    "gatewayManagerEtag": {
     "description": "The GatewayManager Etag.",
     "type": "string"
    },
    "globalReachEnabled": {
     "description": "Flag denoting global reach status.",
     "type": "boolean"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "peerings": {
     "description": "The list of peerings.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitPeeringResponse",
      "type": "object"
     },
     "type": "array"
    },
    "provisioningState": {
     "description": "The provisioning state of the express route circuit resource.",
     "type": "string"
    },
    "serviceKey": {
     "description": "The ServiceKey.",
     "type": "string"
    },
    "serviceProviderNotes": {
     "description": "The ServiceProviderNotes.",
     "type": "string"
    },
    "serviceProviderProperties": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitServiceProviderPropertiesResponse",
     "description": "The ServiceProviderProperties.",
     "type": "object"
    },
    "serviceProviderProvisioningState": {
     "description": "The ServiceProviderProvisioningState state of the resource.",
     "type": "string"
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitSkuResponse",
     "description": "The SKU.",
     "type": "object"
    },
    "stag": {
     "description": "The identifier of the circuit traffic. Outer tag for QinQ encapsulation.",
     "type": "integer"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "authorizationStatus",
    "azureApiVersion",
    "etag",
    "name",
    "provisioningState",
    "stag",
    "type"
   ],
   "requiredInputs": [
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExpressRouteCircuitAuthorization": {
   "description": "Authorization in an ExpressRouteCircuit resource.",
   "inputProperties": {
    "authorizationKey": {
     "description": "The authorization key.",
     "type": "string"
    },
    "authorizationName": {
     "description": "The name of the authorization.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "authorizationUseStatus": {
     "description": "The authorization use status.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:AuthorizationUseStatus"
      }
     ]
    },
    "circuitName": {
     "description": "The name of the express route circuit.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    }
   },
   "properties": {
    "authorizationKey": {
     "description": "The authorization key.",
     "type": "string"
    },
    "authorizationUseStatus": {
     "description": "The authorization use status.",
     "type": "string"
    },
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the authorization resource.",
     "type": "string"
    },
    "type": {
     "description": "Type of the resource.",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "provisioningState",
    "type"
   ],
   "requiredInputs": [
    "circuitName",
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExpressRouteCircuitConnection": {
   "description": "Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.",
   "inputProperties": {
    "addressPrefix": {
     "description": "/29 IP address space to carve out Customer addresses for tunnels.",
     "type": "string"
    },
    "authorizationKey": {
     "description": "The authorization key.",
     "type": "string"
    },
    "circuitName": {
     "description": "The name of the express route circuit.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "connectionName": {
     "description": "The name of the express route circuit connection.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "expressRouteCircuitPeering": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection.",
     "type": "object"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "ipv6CircuitConnectionConfig": {
     "$ref": "#/types/azure-native_network_v20230201:network:Ipv6CircuitConnectionConfig",
     "description": "IPv6 Address PrefixProperties of the express route circuit connection.",
     "type": "object"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "peerExpressRouteCircuitPeering": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Reference to Express Route Circuit Private Peering Resource of the peered circuit.",
     "type": "object"
    },
    "peeringName": {
     "description": "The name of the peering.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    }
   },
   "properties": {
    "addressPrefix": {
     "description": "/29 IP address space to carve out Customer addresses for tunnels.",
     "type": "string"
    },
    "authorizationKey": {
     "description": "The authorization key.",
     "type": "string"
    },
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "circuitConnectionStatus": {
     "description": "Express Route Circuit connection state.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "expressRouteCircuitPeering": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection.",
     "type": "object"
    },
    "ipv6CircuitConnectionConfig": {
     "$ref": "#/types/azure-native_network_v20230201:network:Ipv6CircuitConnectionConfigResponse",
     "description": "IPv6 Address PrefixProperties of the express route circuit connection.",
     "type": "object"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "peerExpressRouteCircuitPeering": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Reference to Express Route Circuit Private Peering Resource of the peered circuit.",
     "type": "object"
    },
    "provisioningState": {
     "description": "The provisioning state of the express route circuit connection resource.",
     "type": "string"
    },
    "type": {
     "description": "Type of the resource.",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "circuitConnectionStatus",
    "etag",
    "provisioningState",
    "type"
   ],
   "requiredInputs": [
    "circuitName",
    "peeringName",
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExpressRouteCircuitPeering": {
   "description": "Peering in an ExpressRouteCircuit resource.",
   "inputProperties": {
    "azureASN": {
     "description": "The Azure ASN.",
     "type": "integer"
    },
    "circuitName": {
     "description": "The name of the express route circuit.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "connections": {
     "description": "The list of circuit connections associated with Azure Private Peering for this circuit.\nThese are also available as standalone resources. Do not mix inline and standalone resource as they will conflict with each other, leading to resources deletion.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitConnection",
      "type": "object"
     },
     "type": "array"
    },
    "gatewayManagerEtag": {
     "description": "The GatewayManager Etag.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "ipv6PeeringConfig": {
     "$ref": "#/types/azure-native_network_v20230201:network:Ipv6ExpressRouteCircuitPeeringConfig",
     "description": "The IPv6 peering configuration.",
     "type": "object"
    },
    "microsoftPeeringConfig": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitPeeringConfig",
     "description": "The Microsoft peering configuration.",
     "type": "object"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "peerASN": {
     "description": "The peer ASN.",
     "type": "number"
    },
    "peeringName": {
     "description": "The name of the peering.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "peeringType": {
     "description": "The peering type.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ExpressRoutePeeringType"
      }
     ]
    },
    "primaryAzurePort": {
     "description": "The primary port.",
     "type": "string"
    },
    "primaryPeerAddressPrefix": {
     "description": "The primary address prefix.",
     "type": "string"
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "routeFilter": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "The reference to the RouteFilter resource.",
     "type": "object"
    },
    "secondaryAzurePort": {
     "description": "The secondary port.",
     "type": "string"
    },
    "secondaryPeerAddressPrefix": {
     "description": "The secondary address prefix.",
     "type": "string"
    },
    "sharedKey": {
     "description": "The shared key.",
     "type": "string"
    },
    "state": {
     "description": "The peering state.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ExpressRoutePeeringState"
      }
     ]
    },
    "stats": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitStats",
     "description": "The peering stats of express route circuit.",
     "type": "object"
    },
    "vlanId": {
     "description": "The VLAN ID.",
     "type": "integer"
    }
   },
   "properties": {
    "azureASN": {
     "description": "The Azure ASN.",
     "type": "integer"
    },
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "connections": {
     "description": "The list of circuit connections associated with Azure Private Peering for this circuit.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitConnectionResponse",
      "type": "object"
     },
     "type": "array"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "expressRouteConnection": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteConnectionIdResponse",
     "description": "The ExpressRoute connection.",
     "type": "object"
    },
    "gatewayManagerEtag": {
     "description": "The GatewayManager Etag.",
     "type": "string"
    },
    "ipv6PeeringConfig": {
     "$ref": "#/types/azure-native_network_v20230201:network:Ipv6ExpressRouteCircuitPeeringConfigResponse",
     "description": "The IPv6 peering configuration.",
     "type": "object"
    },
    "lastModifiedBy": {
     "description": "Who was the last to modify the peering.",
     "type": "string"
    },
    "microsoftPeeringConfig": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitPeeringConfigResponse",
     "description": "The Microsoft peering configuration.",
     "type": "object"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "peerASN": {
     "description": "The peer ASN.",
     "type": "number"
    },
    "peeredConnections": {
     "description": "The list of peered circuit connections associated with Azure Private Peering for this circuit.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PeerExpressRouteCircuitConnectionResponse",
      "type": "object"
     },
     "type": "array"
    },
    "peeringType": {
     "description": "The peering type.",
     "type": "string"
    },
    "primaryAzurePort": {
     "description": "The primary port.",
     "type": "string"
    },
    "primaryPeerAddressPrefix": {
     "description": "The primary address prefix.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the express route circuit peering resource.",
     "type": "string"
    },
    "routeFilter": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The reference to the RouteFilter resource.",
     "type": "object"
    },
    "secondaryAzurePort": {
     "description": "The secondary port.",
     "type": "string"
    },
    "secondaryPeerAddressPrefix": {
     "description": "The secondary address prefix.",
     "type": "string"
    },
    "sharedKey": {
     "description": "The shared key.",
     "type": "string"
    },
    "state": {
     "description": "The peering state.",
     "type": "string"
    },
    "stats": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitStatsResponse",
     "description": "The peering stats of express route circuit.",
     "type": "object"
    },
    "type": {
     "description": "Type of the resource.",
     "type": "string"
    },
    "vlanId": {
     "description": "The VLAN ID.",
     "type": "integer"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "lastModifiedBy",
    "peeredConnections",
    "provisioningState",
    "type"
   ],
   "requiredInputs": [
    "circuitName",
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExpressRouteConnection": {
   "description": "ExpressRouteConnection resource.",
   "inputProperties": {
    "authorizationKey": {
     "description": "Authorization key to establish the connection.",
     "type": "string"
    },
    "connectionName": {
     "description": "The name of the connection subresource.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "enableInternetSecurity": {
     "description": "Enable internet security.",
     "type": "boolean"
    },
    "enablePrivateLinkFastPath": {
     "description": "Bypass the ExpressRoute gateway when accessing private-links. ExpressRoute FastPath (expressRouteGatewayBypass) must be enabled.",
     "type": "boolean"
    },
    "expressRouteCircuitPeering": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitPeeringId",
     "description": "The ExpressRoute circuit peering.",
     "type": "object"
    },
    "expressRouteGatewayBypass": {
     "description": "Enable FastPath to vWan Firewall hub.",
     "type": "boolean"
    },
    "expressRouteGatewayName": {
     "description": "The name of the ExpressRoute gateway.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource.",
     "type": "string"
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "routingConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfiguration",
     "description": "The Routing Configuration indicating the associated and propagated route tables on this connection.",
     "type": "object"
    },
    "routingWeight": {
     "description": "The routing weight associated to the connection.",
     "type": "integer"
    }
   },
   "properties": {
    "authorizationKey": {
     "description": "Authorization key to establish the connection.",
     "type": "string"
    },
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "enableInternetSecurity": {
     "description": "Enable internet security.",
     "type": "boolean"
    },
    "enablePrivateLinkFastPath": {
     "description": "Bypass the ExpressRoute gateway when accessing private-links. ExpressRoute FastPath (expressRouteGatewayBypass) must be enabled.",
     "type": "boolean"
    },
    "expressRouteCircuitPeering": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitPeeringIdResponse",
     "description": "The ExpressRoute circuit peering.",
     "type": "object"
    },
    "expressRouteGatewayBypass": {
     "description": "Enable FastPath to vWan Firewall hub.",
     "type": "boolean"
    },
    "name": {
     "description": "The name of the resource.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the express route connection resource.",
     "type": "string"
    },
    "routingConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfigurationResponse",
     "description": "The Routing Configuration indicating the associated and propagated route tables on this connection.",
     "type": "object"
    },
    "routingWeight": {
     "description": "The routing weight associated to the connection.",
     "type": "integer"
    }
   },
   "required": [
    "azureApiVersion",
    "expressRouteCircuitPeering",
    "name",
    "provisioningState"
   ],
   "requiredInputs": [
    "expressRouteCircuitPeering",
    "expressRouteGatewayName",
    "name",
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExpressRouteCrossConnectionPeering": {
   "description": "Peering in an ExpressRoute Cross Connection resource.",
   "inputProperties": {
    "crossConnectionName": {
     "description": "The name of the ExpressRouteCrossConnection.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "gatewayManagerEtag": {
     "description": "The GatewayManager Etag.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "ipv6PeeringConfig": {
     "$ref": "#/types/azure-native_network_v20230201:network:Ipv6ExpressRouteCircuitPeeringConfig",
     "description": "The IPv6 peering configuration.",
     "type": "object"
    },
    "microsoftPeeringConfig": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitPeeringConfig",
     "description": "The Microsoft peering configuration.",
     "type": "object"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "peerASN": {
     "description": "The peer ASN.",
     "type": "number"
    },
    "peeringName": {
     "description": "The name of the peering.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "peeringType": {
     "description": "The peering type.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ExpressRoutePeeringType"
      }
     ]
    },
    "primaryPeerAddressPrefix": {
     "description": "The primary address prefix.",
     "type": "string"
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "secondaryPeerAddressPrefix": {
     "description": "The secondary address prefix.",
     "type": "string"
    },
    "sharedKey": {
     "description": "The shared key.",
     "type": "string"
    },
    "state": {
     "description": "The peering state.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ExpressRoutePeeringState"
      }
     ]
    },
    "vlanId": {
     "description": "The VLAN ID.",
     "type": "integer"
    }
   },
   "properties": {
    "azureASN": {
     "description": "The Azure ASN.",
     "type": "integer"
    },
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "gatewayManagerEtag": {
     "description": "The GatewayManager Etag.",
     "type": "string"
    },
    "ipv6PeeringConfig": {
     "$ref": "#/types/azure-native_network_v20230201:network:Ipv6ExpressRouteCircuitPeeringConfigResponse",
     "description": "The IPv6 peering configuration.",
     "type": "object"
    },
    "lastModifiedBy": {
     "description": "Who was the last to modify the peering.",
     "type": "string"
    },
    "microsoftPeeringConfig": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitPeeringConfigResponse",
     "description": "The Microsoft peering configuration.",
     "type": "object"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "peerASN": {
     "description": "The peer ASN.",
     "type": "number"
    },
    "peeringType": {
     "description": "The peering type.",
     "type": "string"
    },
    "primaryAzurePort": {
     "description": "The primary port.",
     "type": "string"
    },
    "primaryPeerAddressPrefix": {
     "description": "The primary address prefix.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the express route cross connection peering resource.",
     "type": "string"
    },
    "secondaryAzurePort": {
     "description": "The secondary port.",
     "type": "string"
    },
    "secondaryPeerAddressPrefix": {
     "description": "The secondary address prefix.",
     "type": "string"
    },
    "sharedKey": {
     "description": "The shared key.",
     "type": "string"
    },
    "state": {
     "description": "The peering state.",
     "type": "string"
    },
    "vlanId": {
     "description": "The VLAN ID.",
     "type": "integer"
    }
   },
   "required": [
    "azureASN",
    "azureApiVersion",
    "etag",
    "lastModifiedBy",
    "primaryAzurePort",
    "provisioningState",
    "secondaryAzurePort"
   ],
   "requiredInputs": [
    "crossConnectionName",
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExpressRouteGateway": {
   "description": "ExpressRoute gateway resource.",
   "inputProperties": {
    "allowNonVirtualWanTraffic": {
     "description": "Configures this gateway to accept traffic from non Virtual WAN networks.",
     "type": "boolean"
    },
    "autoScaleConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteGatewayPropertiesAutoScaleConfiguration",
     "description": "Configuration for auto scaling.",
     "type": "object"
    },
    "expressRouteConnections": {
     "description": "List of ExpressRoute connections to the ExpressRoute gateway.\nThese are also available as standalone resources. Do not mix inline and standalone resource as they will conflict with each other, leading to resources deletion.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteConnection",
      "type": "object"
     },
     "type": "array"
    },
    "expressRouteGatewayName": {
     "description": "The name of the ExpressRoute gateway.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "virtualHub": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualHubId",
     "description": "The Virtual Hub where the ExpressRoute gateway is or will be deployed.",
     "type": "object"
    }
   },
   "properties": {
    "allowNonVirtualWanTraffic": {
     "description": "Configures this gateway to accept traffic from non Virtual WAN networks.",
     "type": "boolean"
    },
    "autoScaleConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteGatewayPropertiesResponseAutoScaleConfiguration",
     "description": "Configuration for auto scaling.",
     "type": "object"
    },
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "expressRouteConnections": {
     "description": "List of ExpressRoute connections to the ExpressRoute gateway.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteConnectionResponse",
      "type": "object"
     },
     "type": "array"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the express route gateway resource.",
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    },
    "virtualHub": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualHubIdResponse",
     "description": "The Virtual Hub where the ExpressRoute gateway is or will be deployed.",
     "type": "object"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "name",
    "provisioningState",
    "type",
    "virtualHub"
   ],
   "requiredInputs": [
    "resourceGroupName",
    "virtualHub"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExpressRoutePort": {
   "description": "ExpressRoutePort resource definition.",
   "inputProperties": {
    "bandwidthInGbps": {
     "description": "Bandwidth of procured ports in Gbps.",
     "type": "integer"
    },
    "billingType": {
     "description": "The billing type of the ExpressRoutePort resource.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ExpressRoutePortsBillingType"
      }
     ]
    },
    "encapsulation": {
     "description": "Encapsulation method on physical ports.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ExpressRoutePortsEncapsulation"
      }
     ]
    },
    "expressRoutePortName": {
     "description": "The name of the ExpressRoutePort resource.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "identity": {
     "$ref": "#/types/azure-native_network_v20230201:network:ManagedServiceIdentity",
     "description": "The identity of ExpressRoutePort, if configured.",
     "type": "object"
    },
    "links": {
     "description": "The set of physical links of the ExpressRoutePort resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteLink",
      "type": "object"
     },
     "type": "array"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "peeringLocation": {
     "description": "The name of the peering location that the ExpressRoutePort is mapped to physically.",
     "type": "string"
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    }
   },
   "properties": {
    "allocationDate": {
     "description": "Date of the physical port allocation to be used in Letter of Authorization.",
     "type": "string"
    },
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "bandwidthInGbps": {
     "description": "Bandwidth of procured ports in Gbps.",
     "type": "integer"
    },
    "billingType": {
     "description": "The billing type of the ExpressRoutePort resource.",
     "type": "string"
    },
    "circuits": {
     "description": "Reference the ExpressRoute circuit(s) that are provisioned on this ExpressRoutePort resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "encapsulation": {
     "description": "Encapsulation method on physical ports.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "etherType": {
     "description": "Ether type of the physical port.",
     "type": "string"
    },
    "identity": {
     "$ref": "#/types/azure-native_network_v20230201:network:ManagedServiceIdentityResponse",
     "description": "The identity of ExpressRoutePort, if configured.",
     "type": "object"
    },
    "links": {
     "description": "The set of physical links of the ExpressRoutePort resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteLinkResponse",
      "type": "object"
     },
     "type": "array"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "mtu": {
     "description": "Maximum transmission unit of the physical port pair(s).",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "peeringLocation": {
     "description": "The name of the peering location that the ExpressRoutePort is mapped to physically.",
     "type": "string"
    },
    "provisionedBandwidthInGbps": {
     "description": "Aggregate Gbps of associated circuit bandwidths.",
     "type": "number"
    },
    "provisioningState": {
     "description": "The provisioning state of the express route port resource.",
     "type": "string"
    },
    "resourceGuid": {
     "description": "The resource GUID property of the express route port resource.",
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "allocationDate",
    "azureApiVersion",
    "circuits",
    "etag",
    "etherType",
    "mtu",
    "name",
    "provisionedBandwidthInGbps",
    "provisioningState",
    "resourceGuid",
    "type"
   ],
   "requiredInputs": [
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExpressRoutePortAuthorization": {
   "description": "ExpressRoutePort Authorization resource definition.",
   "inputProperties": {
    "authorizationName": {
     "description": "The name of the authorization.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "expressRoutePortName": {
     "description": "The name of the express route port.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    }
   },
   "properties": {
    "authorizationKey": {
     "description": "The authorization key.",
     "type": "string"
    },
    "authorizationUseStatus": {
     "description": "The authorization use status.",
     "type": "string"
    },
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "circuitResourceUri": {
     "description": "The reference to the ExpressRoute circuit resource using the authorization.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the authorization resource.",
     "type": "string"
    },
    "type": {
     "description": "Type of the resource.",
     "type": "string"
    }
   },
   "required": [
    "authorizationKey",
    "authorizationUseStatus",
    "azureApiVersion",
    "circuitResourceUri",
    "etag",
    "provisioningState",
    "type"
   ],
   "requiredInputs": [
    "expressRoutePortName",
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:FirewallPolicy": {
   "description": "FirewallPolicy Resource.",
   "inputProperties": {
    "basePolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "The parent firewall policy from which rules are inherited.",
     "type": "object"
    },
    "dnsSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:DnsSettings",
     "description": "DNS Proxy Settings definition.",
     "type": "object"
    },
    "explicitProxy": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExplicitProxy",
     "description": "Explicit Proxy Settings definition.",
     "type": "object"
    },
    "firewallPolicyName": {
     "description": "The name of the Firewall Policy.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "identity": {
     "$ref": "#/types/azure-native_network_v20230201:network:ManagedServiceIdentity",
     "description": "The identity of the firewall policy.",
     "type": "object"
    },
    "insights": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyInsights",
     "description": "Insights on Firewall Policy.",
     "type": "object"
    },
    "intrusionDetection": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyIntrusionDetection",
     "description": "The configuration for Intrusion detection.",
     "type": "object"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicySku",
     "description": "The Firewall Policy SKU.",
     "type": "object"
    },
    "snat": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicySNAT",
     "description": "The private IP addresses/IP ranges to which traffic will not be SNAT.",
     "type": "object"
    },
    "sql": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicySQL",
     "description": "SQL Settings definition.",
     "type": "object"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "threatIntelMode": {
     "description": "The operation mode for Threat Intelligence.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:AzureFirewallThreatIntelMode"
      }
     ]
    },
    "threatIntelWhitelist": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyThreatIntelWhitelist",
     "description": "ThreatIntel Whitelist for Firewall Policy.",
     "type": "object"
    },
    "transportSecurity": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyTransportSecurity",
     "description": "TLS Configuration definition.",
     "type": "object"
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "basePolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The parent firewall policy from which rules are inherited.",
     "type": "object"
    },
    "childPolicies": {
     "description": "List of references to Child Firewall Policies.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "dnsSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:DnsSettingsResponse",
     "description": "DNS Proxy Settings definition.",
     "type": "object"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "explicitProxy": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExplicitProxyResponse",
     "description": "Explicit Proxy Settings definition.",
     "type": "object"
    },
    "firewalls": {
     "description": "List of references to Azure Firewalls that this Firewall Policy is associated with.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "identity": {
     "$ref": "#/types/azure-native_network_v20230201:network:ManagedServiceIdentityResponse",
     "description": "The identity of the firewall policy.",
     "type": "object"
    },
    "insights": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyInsightsResponse",
     "description": "Insights on Firewall Policy.",
     "type": "object"
    },
    "intrusionDetection": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyIntrusionDetectionResponse",
     "description": "The configuration for Intrusion detection.",
     "type": "object"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the firewall policy resource.",
     "type": "string"
    },
    "ruleCollectionGroups": {
     "description": "List of references to FirewallPolicyRuleCollectionGroups.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicySkuResponse",
     "description": "The Firewall Policy SKU.",
     "type": "object"
    },
    "snat": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicySNATResponse",
     "description": "The private IP addresses/IP ranges to which traffic will not be SNAT.",
     "type": "object"
    },
    "sql": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicySQLResponse",
     "description": "SQL Settings definition.",
     "type": "object"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "threatIntelMode": {
     "description": "The operation mode for Threat Intelligence.",
     "type": "string"
    },
    "threatIntelWhitelist": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyThreatIntelWhitelistResponse",
     "description": "ThreatIntel Whitelist for Firewall Policy.",
     "type": "object"
    },
    "transportSecurity": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyTransportSecurityResponse",
     "description": "TLS Configuration definition.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "childPolicies",
    "etag",
    "firewalls",
    "name",
    "provisioningState",
    "ruleCollectionGroups",
    "type"
   ],
   "requiredInputs": [
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:FirewallPolicyRuleCollectionGroup": {
   "description": "Rule Collection Group resource.",
   "inputProperties": {
    "firewallPolicyName": {
     "description": "The name of the Firewall Policy.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "priority": {
     "description": "Priority of the Firewall Policy Rule Collection Group resource.",
     "type": "integer"
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "ruleCollectionGroupName": {
     "description": "The name of the FirewallPolicyRuleCollectionGroup.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "ruleCollections": {
     "description": "Group of Firewall Policy rule collections.",
     "items": {
      "discriminator": {
       "mapping": {
        "FirewallPolicyFilterRuleCollection": "#/types/azure-native_network_v20230201:network:FirewallPolicyFilterRuleCollection",
        "FirewallPolicyNatRuleCollection": "#/types/azure-native_network_v20230201:network:FirewallPolicyNatRuleCollection"
       },
       "propertyName": "ruleCollectionType"
      },
      "oneOf": [
       {
        "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyFilterRuleCollection",
        "type": "object"
       },
       {
        "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyNatRuleCollection",
        "type": "object"
       }
      ]
     },
     "type": "array"
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "priority": {
     "description": "Priority of the Firewall Policy Rule Collection Group resource.",
     "type": "integer"
    },
    "provisioningState": {
     "description": "The provisioning state of the firewall policy rule collection group resource.",
     "type": "string"
    },
    "ruleCollections": {
     "description": "Group of Firewall Policy rule collections.",
     "items": {
      "discriminator": {
       "mapping": {
        "FirewallPolicyFilterRuleCollection": "#/types/azure-native_network_v20230201:network:FirewallPolicyFilterRuleCollectionResponse",
        "FirewallPolicyNatRuleCollection": "#/types/azure-native_network_v20230201:network:FirewallPolicyNatRuleCollectionResponse"
       },
       "propertyName": "ruleCollectionType"
      },
      "oneOf": [
       {
        "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyFilterRuleCollectionResponse",
        "type": "object"
       },
       {
        "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyNatRuleCollectionResponse",
        "type": "object"
       }
      ]
     },
     "type": "array"
    },
    "type": {
     "description": "Rule Group type.",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "provisioningState",
    "type"
   ],
   "requiredInputs": [
    "firewallPolicyName",
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:FlowLog": {
   "description": "A flow log resource.",
   "inputProperties": {
    "enabled": {
     "description": "Flag to enable/disable flow logging.",
     "type": "boolean"
    },
    "flowAnalyticsConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:TrafficAnalyticsProperties",
     "description": "Parameters that define the configuration of traffic analytics.",
     "type": "object"
    },
    "flowLogName": {
     "description": "The name of the flow log.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "format": {
     "$ref": "#/types/azure-native_network_v20230201:network:FlowLogFormatParameters",
     "description": "Parameters that define the flow log format.",
     "type": "object"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "networkWatcherName": {
     "description": "The name of the network watcher.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "retentionPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:RetentionPolicyParameters",
     "description": "Parameters that define the retention policy for flow log.",
     "type": "object"
    },
    "storageId": {
     "description": "ID of the storage account which is used to store the flow log.",
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "targetResourceId": {
     "description": "ID of network security group to which flow log will be applied.",
     "type": "string"
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "enabled": {
     "description": "Flag to enable/disable flow logging.",
     "type": "boolean"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "flowAnalyticsConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:TrafficAnalyticsPropertiesResponse",
     "description": "Parameters that define the configuration of traffic analytics.",
     "type": "object"
    },
    "format": {
     "$ref": "#/types/azure-native_network_v20230201:network:FlowLogFormatParametersResponse",
     "description": "Parameters that define the flow log format.",
     "type": "object"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the flow log.",
     "type": "string"
    },
    "retentionPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:RetentionPolicyParametersResponse",
     "description": "Parameters that define the retention policy for flow log.",
     "type": "object"
    },
    "storageId": {
     "description": "ID of the storage account which is used to store the flow log.",
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "targetResourceGuid": {
     "description": "Guid of network security group to which flow log will be applied.",
     "type": "string"
    },
    "targetResourceId": {
     "description": "ID of network security group to which flow log will be applied.",
     "type": "string"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "name",
    "provisioningState",
    "storageId",
    "targetResourceGuid",
    "targetResourceId",
    "type"
   ],
   "requiredInputs": [
    "networkWatcherName",
    "resourceGroupName",
    "storageId",
    "targetResourceId"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:HubRouteTable": {
   "description": "RouteTable resource in a virtual hub.",
   "inputProperties": {
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "labels": {
     "description": "List of labels associated with this route table.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "resourceGroupName": {
     "description": "The resource group name of the VirtualHub.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "routeTableName": {
     "description": "The name of the RouteTable.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "routes": {
     "description": "List of all routes.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:HubRoute",
      "type": "object"
     },
     "type": "array"
    },
    "virtualHubName": {
     "description": "The name of the VirtualHub.",
     "type": "string",
     "willReplaceOnChanges": true
    }
   },
   "properties": {
    "associatedConnections": {
     "description": "List of all connections associated with this route table.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "labels": {
     "description": "List of labels associated with this route table.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "propagatingConnections": {
     "description": "List of all connections that advertise to this route table.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "provisioningState": {
     "description": "The provisioning state of the RouteTable resource.",
     "type": "string"
    },
    "routes": {
     "description": "List of all routes.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:HubRouteResponse",
      "type": "object"
     },
     "type": "array"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "associatedConnections",
    "azureApiVersion",
    "etag",
    "propagatingConnections",
    "provisioningState",
    "type"
   ],
   "requiredInputs": [
    "resourceGroupName",
    "virtualHubName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:HubVirtualNetworkConnection": {
   "description": "HubVirtualNetworkConnection Resource.",
   "inputProperties": {
    "allowHubToRemoteVnetTransit": {
     "description": "Deprecated: VirtualHub to RemoteVnet transit to enabled or not.",
     "type": "boolean"
    },
    "allowRemoteVnetToUseHubVnetGateways": {
     "description": "Deprecated: Allow RemoteVnet to use Virtual Hub's gateways.",
     "type": "boolean"
    },
    "connectionName": {
     "description": "The name of the HubVirtualNetworkConnection.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "enableInternetSecurity": {
     "description": "Enable internet security.",
     "type": "boolean"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "remoteVirtualNetwork": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Reference to the remote virtual network.",
     "type": "object"
    },
    "resourceGroupName": {
     "description": "The resource group name of the HubVirtualNetworkConnection.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "routingConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfiguration",
     "description": "The Routing Configuration indicating the associated and propagated route tables on this connection.",
     "type": "object"
    },
    "virtualHubName": {
     "description": "The name of the VirtualHub.",
     "type": "string",
     "willReplaceOnChanges": true
    }
   },
   "properties": {
    "allowHubToRemoteVnetTransit": {
     "description": "Deprecated: VirtualHub to RemoteVnet transit to enabled or not.",
     "type": "boolean"
    },
    "allowRemoteVnetToUseHubVnetGateways": {
     "description": "Deprecated: Allow RemoteVnet to use Virtual Hub's gateways.",
     "type": "boolean"
    },
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "enableInternetSecurity": {
     "description": "Enable internet security.",
     "type": "boolean"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the hub virtual network connection resource.",
     "type": "string"
    },
    "remoteVirtualNetwork": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Reference to the remote virtual network.",
     "type": "object"
    },
    "routingConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfigurationResponse",
     "description": "The Routing Configuration indicating the associated and propagated route tables on this connection.",
     "type": "object"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "provisioningState"
   ],
   "requiredInputs": [
    "resourceGroupName",
    "virtualHubName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:InboundNatRule": {
   "description": "Inbound NAT rule of the load balancer.",
   "inputProperties": {
    "backendAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "A reference to backendAddressPool resource.",
     "type": "object"
    },
    "backendPort": {
     "description": "The port used for the internal endpoint. Acceptable values range from 1 to 65535.",
     "type": "integer"
    },
    "enableFloatingIP": {
     "description": "Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.",
     "type": "boolean"
    },
    "enableTcpReset": {
     "description": "Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.",
     "type": "boolean"
    },
    "frontendIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "A reference to frontend IP addresses.",
     "type": "object"
    },
    "frontendPort": {
     "description": "The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.",
     "type": "integer"
    },
    "frontendPortRangeEnd": {
     "description": "The port range end for the external endpoint. This property is used together with BackendAddressPool and FrontendPortRangeStart. Individual inbound NAT rule port mappings will be created for each backend address from BackendAddressPool. Acceptable values range from 1 to 65534.",
     "type": "integer"
    },
    "frontendPortRangeStart": {
     "description": "The port range start for the external endpoint. This property is used together with BackendAddressPool and FrontendPortRangeEnd. Individual inbound NAT rule port mappings will be created for each backend address from BackendAddressPool. Acceptable values range from 1 to 65534.",
     "type": "integer"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "idleTimeoutInMinutes": {
     "description": "The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.",
     "type": "integer"
    },
    "inboundNatRuleName": {
     "description": "The name of the inbound NAT rule.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "loadBalancerName": {
     "description": "The name of the load balancer.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "name": {
     "description": "The name of the resource that is unique within the set of inbound NAT rules used by the load balancer. This name can be used to access the resource.",
     "type": "string"
    },
    "protocol": {
     "description": "The reference to the transport protocol used by the load balancing rule.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:TransportProtocol"
      }
     ]
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "backendAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "A reference to backendAddressPool resource.",
     "type": "object"
    },
    "backendIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceIPConfigurationResponse",
     "description": "A reference to a private IP address defined on a network interface of a VM. Traffic sent to the frontend port of each of the frontend IP configurations is forwarded to the backend IP.",
     "type": "object"
    },
    "backendPort": {
     "description": "The port used for the internal endpoint. Acceptable values range from 1 to 65535.",
     "type": "integer"
    },
    "enableFloatingIP": {
     "description": "Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.",
     "type": "boolean"
    },
    "enableTcpReset": {
     "description": "Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.",
     "type": "boolean"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "frontendIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "A reference to frontend IP addresses.",
     "type": "object"
    },
    "frontendPort": {
     "description": "The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.",
     "type": "integer"
    },
    "frontendPortRangeEnd": {
     "description": "The port range end for the external endpoint. This property is used together with BackendAddressPool and FrontendPortRangeStart. Individual inbound NAT rule port mappings will be created for each backend address from BackendAddressPool. Acceptable values range from 1 to 65534.",
     "type": "integer"
    },
    "frontendPortRangeStart": {
     "description": "The port range start for the external endpoint. This property is used together with BackendAddressPool and FrontendPortRangeEnd. Individual inbound NAT rule port mappings will be created for each backend address from BackendAddressPool. Acceptable values range from 1 to 65534.",
     "type": "integer"
    },
    "idleTimeoutInMinutes": {
     "description": "The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.",
     "type": "integer"
    },
    "name": {
     "description": "The name of the resource that is unique within the set of inbound NAT rules used by the load balancer. This name can be used to access the resource.",
     "type": "string"
    },
    "protocol": {
     "description": "The reference to the transport protocol used by the load balancing rule.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the inbound NAT rule resource.",
     "type": "string"
    },
    "type": {
     "description": "Type of the resource.",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "backendIPConfiguration",
    "etag",
    "provisioningState",
    "type"
   ],
   "requiredInputs": [
    "loadBalancerName",
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:IpAllocation": {
   "description": "IpAllocation resource.",
   "inputProperties": {
    "allocationTags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "IpAllocation tags.",
     "type": "object"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "ipAllocationName": {
     "description": "The name of the IpAllocation.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "ipamAllocationId": {
     "description": "The IPAM allocation ID.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "prefix": {
     "description": "The address prefix for the IpAllocation.",
     "type": "string"
    },
    "prefixLength": {
     "default": 0,
     "description": "The address prefix length for the IpAllocation.",
     "type": "integer"
    },
    "prefixType": {
     "description": "The address prefix Type for the IpAllocation.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:IPVersion"
      }
     ]
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "The type for the IpAllocation.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:IpAllocationType"
      }
     ]
    }
   },
   "properties": {
    "allocationTags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "IpAllocation tags.",
     "type": "object"
    },
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "ipamAllocationId": {
     "description": "The IPAM allocation ID.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "prefix": {
     "description": "The address prefix for the IpAllocation.",
     "type": "string"
    },
    "prefixLength": {
     "default": 0,
     "description": "The address prefix length for the IpAllocation.",
     "type": "integer"
    },
    "prefixType": {
     "description": "The address prefix Type for the IpAllocation.",
     "type": "string"
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The Subnet that using the prefix of this IpAllocation resource.",
     "type": "object"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    },
    "virtualNetwork": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The VirtualNetwork that using the prefix of this IpAllocation resource.",
     "type": "object"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "name",
    "subnet",
    "type",
    "virtualNetwork"
   ],
   "requiredInputs": [
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:IpGroup": {
   "description": "The IpGroups resource information.",
   "inputProperties": {
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "ipAddresses": {
     "description": "IpAddresses/IpAddressPrefixes in the IpGroups resource.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "ipGroupsName": {
     "description": "The name of the ipGroups.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "firewallPolicies": {
     "description": "List of references to Firewall Policies resources that this IpGroups is associated with.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "firewalls": {
     "description": "List of references to Firewall resources that this IpGroups is associated with.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "ipAddresses": {
     "description": "IpAddresses/IpAddressPrefixes in the IpGroups resource.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the IpGroups resource.",
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "firewallPolicies",
    "firewalls",
    "name",
    "provisioningState",
    "type"
   ],
   "requiredInputs": [
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:LoadBalancer": {
   "description": "LoadBalancer resource.",
   "inputProperties": {
    "backendAddressPools": {
     "description": "Collection of backend address pools used by a load balancer.\nThese are also available as standalone resources. Do not mix inline and standalone resource as they will conflict with each other, leading to resources deletion.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:BackendAddressPool",
      "type": "object"
     },
     "type": "array"
    },
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocation",
     "description": "The extended location of the load balancer.",
     "type": "object"
    },
    "frontendIPConfigurations": {
     "description": "Object representing the frontend IPs to be used for the load balancer.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:FrontendIPConfiguration",
      "type": "object"
     },
     "type": "array"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "inboundNatPools": {
     "description": "Defines an external port range for inbound NAT to a single backend port on NICs associated with a load balancer. Inbound NAT rules are created automatically for each NIC associated with the Load Balancer using an external port from this range. Defining an Inbound NAT pool on your Load Balancer is mutually exclusive with defining inbound NAT rules. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an inbound NAT pool. They have to reference individual inbound NAT rules.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:InboundNatPool",
      "type": "object"
     },
     "type": "array"
    },
    "inboundNatRules": {
     "description": "Collection of inbound NAT Rules used by a load balancer. Defining inbound NAT rules on your load balancer is mutually exclusive with defining an inbound NAT pool. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an Inbound NAT pool. They have to reference individual inbound NAT rules.\nThese are also available as standalone resources. Do not mix inline and standalone resource as they will conflict with each other, leading to resources deletion.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:InboundNatRule",
      "type": "object"
     },
     "type": "array"
    },
    "loadBalancerName": {
     "description": "The name of the load balancer.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "loadBalancingRules": {
     "description": "Object collection representing the load balancing rules Gets the provisioning.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:LoadBalancingRule",
      "type": "object"
     },
     "type": "array"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "outboundRules": {
     "description": "The outbound rules.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:OutboundRule",
      "type": "object"
     },
     "type": "array"
    },
    "probes": {
     "description": "Collection of probe objects used in the load balancer.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:Probe",
      "type": "object"
     },
     "type": "array"
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:LoadBalancerSku",
     "description": "The load balancer SKU.",
     "type": "object"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "backendAddressPools": {
     "description": "Collection of backend address pools used by a load balancer.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:BackendAddressPoolResponse",
      "type": "object"
     },
     "type": "array"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse",
     "description": "The extended location of the load balancer.",
     "type": "object"
    },
    "frontendIPConfigurations": {
     "description": "Object representing the frontend IPs to be used for the load balancer.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:FrontendIPConfigurationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "inboundNatPools": {
     "description": "Defines an external port range for inbound NAT to a single backend port on NICs associated with a load balancer. Inbound NAT rules are created automatically for each NIC associated with the Load Balancer using an external port from this range. Defining an Inbound NAT pool on your Load Balancer is mutually exclusive with defining inbound NAT rules. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an inbound NAT pool. They have to reference individual inbound NAT rules.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:InboundNatPoolResponse",
      "type": "object"
     },
     "type": "array"
    },
    "inboundNatRules": {
     "description": "Collection of inbound NAT Rules used by a load balancer. Defining inbound NAT rules on your load balancer is mutually exclusive with defining an inbound NAT pool. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an Inbound NAT pool. They have to reference individual inbound NAT rules.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:InboundNatRuleResponse",
      "type": "object"
     },
     "type": "array"
    },
    "loadBalancingRules": {
     "description": "Object collection representing the load balancing rules Gets the provisioning.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:LoadBalancingRuleResponse",
      "type": "object"
     },
     "type": "array"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "outboundRules": {
     "description": "The outbound rules.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:OutboundRuleResponse",
      "type": "object"
     },
     "type": "array"
    },
    "probes": {
     "description": "Collection of probe objects used in the load balancer.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ProbeResponse",
      "type": "object"
     },
     "type": "array"
    },
    "provisioningState": {
     "description": "The provisioning state of the load balancer resource.",
     "type": "string"
    },
    "resourceGuid": {
     "description": "The resource GUID property of the load balancer resource.",
     "type": "string"
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:LoadBalancerSkuResponse",
     "description": "The load balancer SKU.",
     "type": "object"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "name",
    "provisioningState",
    "resourceGuid",
    "type"
   ],
   "requiredInputs": [
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:LoadBalancerBackendAddressPool": {
   "description": "Pool of backend IP addresses.",
   "inputProperties": {
    "backendAddressPoolName": {
     "description": "The name of the backend address pool.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "drainPeriodInSeconds": {
     "description": "Amount of seconds Load Balancer waits for before sending RESET to client and backend address.",
     "type": "integer"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "loadBalancerBackendAddresses": {
     "description": "An array of backend addresses.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:LoadBalancerBackendAddress",
      "type": "object"
     },
     "type": "array"
    },
    "loadBalancerName": {
     "description": "The name of the load balancer.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "location": {
     "description": "The location of the backend address pool.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within the set of backend address pools used by the load balancer. This name can be used to access the resource.",
     "type": "string"
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "tunnelInterfaces": {
     "description": "An array of gateway load balancer tunnel interfaces.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:GatewayLoadBalancerTunnelInterface",
      "type": "object"
     },
     "type": "array"
    },
    "virtualNetwork": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "A reference to a virtual network.",
     "type": "object"
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "backendIPConfigurations": {
     "description": "An array of references to IP addresses defined in network interfaces.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceIPConfigurationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "drainPeriodInSeconds": {
     "description": "Amount of seconds Load Balancer waits for before sending RESET to client and backend address.",
     "type": "integer"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "inboundNatRules": {
     "description": "An array of references to inbound NAT rules that use this backend address pool.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "loadBalancerBackendAddresses": {
     "description": "An array of backend addresses.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:LoadBalancerBackendAddressResponse",
      "type": "object"
     },
     "type": "array"
    },
    "loadBalancingRules": {
     "description": "An array of references to load balancing rules that use this backend address pool.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "location": {
     "description": "The location of the backend address pool.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within the set of backend address pools used by the load balancer. This name can be used to access the resource.",
     "type": "string"
    },
    "outboundRule": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "A reference to an outbound rule that uses this backend address pool.",
     "type": "object"
    },
    "outboundRules": {
     "description": "An array of references to outbound rules that use this backend address pool.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "provisioningState": {
     "description": "The provisioning state of the backend address pool resource.",
     "type": "string"
    },
    "tunnelInterfaces": {
     "description": "An array of gateway load balancer tunnel interfaces.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:GatewayLoadBalancerTunnelInterfaceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "type": {
     "description": "Type of the resource.",
     "type": "string"
    },
    "virtualNetwork": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "A reference to a virtual network.",
     "type": "object"
    }
   },
   "required": [
    "azureApiVersion",
    "backendIPConfigurations",
    "etag",
    "inboundNatRules",
    "loadBalancingRules",
    "outboundRule",
    "outboundRules",
    "provisioningState",
    "type"
   ],
   "requiredInputs": [
    "loadBalancerName",
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:LocalNetworkGateway": {
   "description": "A common class for general resource information.",
   "inputProperties": {
    "bgpSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:BgpSettings",
     "description": "Local network gateway's BGP speaker settings.",
     "type": "object"
    },
    "fqdn": {
     "description": "FQDN of local network gateway.",
     "type": "string"
    },
    "gatewayIpAddress": {
     "description": "IP address of local network gateway.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "localNetworkAddressSpace": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpace",
     "description": "Local network site address space.",
     "type": "object"
    },
    "localNetworkGatewayName": {
     "description": "The name of the local network gateway.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "bgpSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:BgpSettingsResponse",
     "description": "Local network gateway's BGP speaker settings.",
     "type": "object"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "fqdn": {
     "description": "FQDN of local network gateway.",
     "type": "string"
    },
    "gatewayIpAddress": {
     "description": "IP address of local network gateway.",
     "type": "string"
    },
    "localNetworkAddressSpace": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpaceResponse",
     "description": "Local network site address space.",
     "type": "object"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the local network gateway resource.",
     "type": "string"
    },
    "resourceGuid": {
     "description": "The resource GUID property of the local network gateway resource.",
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "name",
    "provisioningState",
    "resourceGuid",
    "type"
   ],
   "requiredInputs": [
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ManagementGroupNetworkManagerConnection": {
   "description": "The Network Manager Connection resource",
   "inputProperties": {
    "description": {
     "description": "A description of the network manager connection.",
     "type": "string"
    },
    "managementGroupId": {
     "description": "The management group Id which uniquely identify the Microsoft Azure management group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "networkManagerConnectionName": {
     "description": "Name for the network manager connection.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "networkManagerId": {
     "description": "Network Manager Id.",
     "type": "string"
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "description": {
     "description": "A description of the network manager connection.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "networkManagerId": {
     "description": "Network Manager Id.",
     "type": "string"
    },
    "systemData": {
     "$ref": "#/types/azure-native_network_v20230201:network:SystemDataResponse",
     "description": "The system metadata related to this resource.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "name",
    "systemData",
    "type"
   ],
   "requiredInputs": [
    "managementGroupId"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:NatGateway": {
   "description": "Nat Gateway resource.",
   "inputProperties": {
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "idleTimeoutInMinutes": {
     "description": "The idle timeout of the nat gateway.",
     "type": "integer"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "natGatewayName": {
     "description": "The name of the nat gateway.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "publicIpAddresses": {
     "description": "An array of public ip addresses associated with the nat gateway resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
      "type": "object"
     },
     "type": "array"
    },
    "publicIpPrefixes": {
     "description": "An array of public ip prefixes associated with the nat gateway resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
      "type": "object"
     },
     "type": "array"
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:NatGatewaySku",
     "description": "The nat gateway SKU.",
     "type": "object"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "zones": {
     "description": "A list of availability zones denoting the zone in which Nat Gateway should be deployed.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "idleTimeoutInMinutes": {
     "description": "The idle timeout of the nat gateway.",
     "type": "integer"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the NAT gateway resource.",
     "type": "string"
    },
    "publicIpAddresses": {
     "description": "An array of public ip addresses associated with the nat gateway resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "publicIpPrefixes": {
     "description": "An array of public ip prefixes associated with the nat gateway resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "resourceGuid": {
     "description": "The resource GUID property of the NAT gateway resource.",
     "type": "string"
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:NatGatewaySkuResponse",
     "description": "The nat gateway SKU.",
     "type": "object"
    },
    "subnets": {
     "description": "An array of references to the subnets using this nat gateway resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    },
    "zones": {
     "description": "A list of availability zones denoting the zone in which Nat Gateway should be deployed.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "name",
    "provisioningState",
    "resourceGuid",
    "subnets",
    "type"
   ],
   "requiredInputs": [
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:NatRule": {
   "description": "VpnGatewayNatRule Resource.",
   "inputProperties": {
    "externalMappings": {
     "description": "The private IP address external mapping for NAT.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnNatRuleMapping",
      "type": "object"
     },
     "type": "array"
    },
    "gatewayName": {
     "description": "The name of the gateway.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "internalMappings": {
     "description": "The private IP address internal mapping for NAT.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnNatRuleMapping",
      "type": "object"
     },
     "type": "array"
    },
    "ipConfigurationId": {
     "description": "The IP Configuration ID this NAT rule applies to.",
     "type": "string"
    },
    "mode": {
     "description": "The Source NAT direction of a VPN NAT.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:VpnNatRuleMode"
      }
     ]
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "natRuleName": {
     "description": "The name of the nat rule.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "resourceGroupName": {
     "description": "The resource group name of the VpnGateway.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "type": {
     "description": "The type of NAT rule for VPN NAT.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:VpnNatRuleType"
      }
     ]
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "egressVpnSiteLinkConnections": {
     "description": "List of egress VpnSiteLinkConnections.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "externalMappings": {
     "description": "The private IP address external mapping for NAT.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnNatRuleMappingResponse",
      "type": "object"
     },
     "type": "array"
    },
    "ingressVpnSiteLinkConnections": {
     "description": "List of ingress VpnSiteLinkConnections.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "internalMappings": {
     "description": "The private IP address internal mapping for NAT.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnNatRuleMappingResponse",
      "type": "object"
     },
     "type": "array"
    },
    "ipConfigurationId": {
     "description": "The IP Configuration ID this NAT rule applies to.",
     "type": "string"
    },
    "mode": {
     "description": "The Source NAT direction of a VPN NAT.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the NAT Rule resource.",
     "type": "string"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "egressVpnSiteLinkConnections",
    "etag",
    "ingressVpnSiteLinkConnections",
    "provisioningState",
    "type"
   ],
   "requiredInputs": [
    "gatewayName",
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:NetworkGroup": {
   "description": "The network group resource",
   "inputProperties": {
    "description": {
     "description": "A description of the network group.",
     "type": "string"
    },
    "networkGroupName": {
     "description": "The name of the network group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "networkManagerName": {
     "description": "The name of the network manager.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "description": {
     "description": "A description of the network group.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the scope assignment resource.",
     "type": "string"
    },
    "resourceGuid": {
     "description": "Unique identifier for this resource.",
     "type": "string"
    },
    "systemData": {
     "$ref": "#/types/azure-native_network_v20230201:network:SystemDataResponse",
     "description": "The system metadata related to this resource.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "name",
    "provisioningState",
    "resourceGuid",
    "systemData",
    "type"
   ],
   "requiredInputs": [
    "networkManagerName",
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:NetworkInterface": {
   "description": "A network interface in a resource group.",
   "inputProperties": {
    "auxiliaryMode": {
     "description": "Auxiliary mode of Network Interface resource.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:NetworkInterfaceAuxiliaryMode"
      }
     ]
    },
    "auxiliarySku": {
     "description": "Auxiliary sku of Network Interface resource.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:NetworkInterfaceAuxiliarySku"
      }
     ]
    },
    "disableTcpStateTracking": {
     "description": "Indicates whether to disable tcp state tracking.",
     "type": "boolean"
    },
    "dnsSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceDnsSettings",
     "description": "The DNS settings in network interface.",
     "type": "object"
    },
    "enableAcceleratedNetworking": {
     "description": "If the network interface is configured for accelerated networking. Not applicable to VM sizes which require accelerated networking.",
     "type": "boolean"
    },
    "enableIPForwarding": {
     "description": "Indicates whether IP forwarding is enabled on this network interface.",
     "type": "boolean"
    },
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocation",
     "description": "The extended location of the network interface.",
     "type": "object"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "ipConfigurations": {
     "description": "A list of IPConfigurations of the network interface.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceIPConfiguration",
      "type": "object"
     },
     "type": "array"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "migrationPhase": {
     "description": "Migration phase of Network Interface resource.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:NetworkInterfaceMigrationPhase"
      }
     ]
    },
    "networkInterfaceName": {
     "description": "The name of the network interface.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "networkSecurityGroup": {
     "$ref": "#/types/azure-native_network_v20230201:network:NetworkSecurityGroup",
     "description": "The reference to the NetworkSecurityGroup resource.",
     "type": "object"
    },
    "nicType": {
     "description": "Type of Network Interface resource.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:NetworkInterfaceNicType"
      }
     ]
    },
    "privateLinkService": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkService",
     "description": "Privatelinkservice of the network interface resource.",
     "type": "object"
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "workloadType": {
     "description": "WorkloadType of the NetworkInterface for BareMetal resources",
     "type": "string"
    }
   },
   "properties": {
    "auxiliaryMode": {
     "description": "Auxiliary mode of Network Interface resource.",
     "type": "string"
    },
    "auxiliarySku": {
     "description": "Auxiliary sku of Network Interface resource.",
     "type": "string"
    },
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "disableTcpStateTracking": {
     "description": "Indicates whether to disable tcp state tracking.",
     "type": "boolean"
    },
    "dnsSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceDnsSettingsResponse",
     "description": "The DNS settings in network interface.",
     "type": "object"
    },
    "dscpConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "A reference to the dscp configuration to which the network interface is linked.",
     "type": "object"
    },
    "enableAcceleratedNetworking": {
     "description": "If the network interface is configured for accelerated networking. Not applicable to VM sizes which require accelerated networking.",
     "type": "boolean"
    },
    "enableIPForwarding": {
     "description": "Indicates whether IP forwarding is enabled on this network interface.",
     "type": "boolean"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse",
     "description": "The extended location of the network interface.",
     "type": "object"
    },
    "hostedWorkloads": {
     "description": "A list of references to linked BareMetal resources.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "ipConfigurations": {
     "description": "A list of IPConfigurations of the network interface.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceIPConfigurationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "macAddress": {
     "description": "The MAC address of the network interface.",
     "type": "string"
    },
    "migrationPhase": {
     "description": "Migration phase of Network Interface resource.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "networkSecurityGroup": {
     "$ref": "#/types/azure-native_network_v20230201:network:NetworkSecurityGroupResponse",
     "description": "The reference to the NetworkSecurityGroup resource.",
     "type": "object"
    },
    "nicType": {
     "description": "Type of Network Interface resource.",
     "type": "string"
    },
    "primary": {
     "description": "Whether this is a primary network interface on a virtual machine.",
     "type": "boolean"
    },
    "privateEndpoint": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateEndpointResponse",
     "description": "A reference to the private endpoint to which the network interface is linked.",
     "type": "object"
    },
    "privateLinkService": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceResponse",
     "description": "Privatelinkservice of the network interface resource.",
     "type": "object"
    },
    "provisioningState": {
     "description": "The provisioning state of the network interface resource.",
     "type": "string"
    },
    "resourceGuid": {
     "description": "The resource GUID property of the network interface resource.",
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "tapConfigurations": {
     "description": "A list of TapConfigurations of the network interface.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceTapConfigurationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    },
    "virtualMachine": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The reference to a virtual machine.",
     "type": "object"
    },
    "vnetEncryptionSupported": {
     "description": "Whether the virtual machine this nic is attached to supports encryption.",
     "type": "boolean"
    },
    "workloadType": {
     "description": "WorkloadType of the NetworkInterface for BareMetal resources",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "dscpConfiguration",
    "etag",
    "hostedWorkloads",
    "macAddress",
    "name",
    "primary",
    "privateEndpoint",
    "provisioningState",
    "resourceGuid",
    "tapConfigurations",
    "type",
    "virtualMachine",
    "vnetEncryptionSupported"
   ],
   "requiredInputs": [
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:NetworkInterfaceTapConfiguration": {
   "description": "Tap configuration in a Network Interface.",
   "inputProperties": {
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "networkInterfaceName": {
     "description": "The name of the network interface.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "tapConfigurationName": {
     "description": "The name of the tap configuration.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "virtualNetworkTap": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkTap",
     "description": "The reference to the Virtual Network Tap resource.",
     "type": "object"
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the network interface tap configuration resource.",
     "type": "string"
    },
    "type": {
     "description": "Sub Resource type.",
     "type": "string"
    },
    "virtualNetworkTap": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkTapResponse",
     "description": "The reference to the Virtual Network Tap resource.",
     "type": "object"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "provisioningState",
    "type"
   ],
   "requiredInputs": [
    "networkInterfaceName",
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:NetworkManager": {
   "description": "The Managed Network resource",
   "inputProperties": {
    "description": {
     "description": "A description of the network manager.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "networkManagerName": {
     "description": "The name of the network manager.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "networkManagerScopeAccesses": {
     "description": "Scope Access.",
     "items": {
      "oneOf": [
       {
        "type": "string"
       },
       {
        "$ref": "#/types/azure-native:network:ConfigurationType"
       }
      ]
     },
     "type": "array"
    },
    "networkManagerScopes": {
     "$ref": "#/types/azure-native_network_v20230201:network:NetworkManagerPropertiesNetworkManagerScopes",
     "description": "Scope of Network Manager.",
     "type": "object"
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "description": {
     "description": "A description of the network manager.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "networkManagerScopeAccesses": {
     "description": "Scope Access.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "networkManagerScopes": {
     "$ref": "#/types/azure-native_network_v20230201:network:NetworkManagerPropertiesResponseNetworkManagerScopes",
     "description": "Scope of Network Manager.",
     "type": "object"
    },
    "provisioningState": {
     "description": "The provisioning state of the network manager resource.",
     "type": "string"
    },
    "resourceGuid": {
     "description": "Unique identifier for this resource.",
     "type": "string"
    },
    "systemData": {
     "$ref": "#/types/azure-native_network_v20230201:network:SystemDataResponse",
     "description": "The system metadata related to this resource.",
     "type": "object"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "name",
    "networkManagerScopeAccesses",
    "networkManagerScopes",
    "provisioningState",
    "resourceGuid",
    "systemData",
    "type"
   ],
   "requiredInputs": [
    "networkManagerScopeAccesses",
    "networkManagerScopes",
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:NetworkProfile": {
   "description": "Network profile resource.",
   "inputProperties": {
    "containerNetworkInterfaceConfigurations": {
     "description": "List of chid container network interface configurations.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ContainerNetworkInterfaceConfiguration",
      "type": "object"
     },
     "type": "array"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "networkProfileName": {
     "description": "The name of the network profile.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "containerNetworkInterfaceConfigurations": {
     "description": "List of chid container network interface configurations.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ContainerNetworkInterfaceConfigurationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "containerNetworkInterfaces": {
     "description": "List of child container network interfaces.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ContainerNetworkInterfaceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the network profile resource.",
     "type": "string"
    },
    "resourceGuid": {
     "description": "The resource GUID property of the network profile resource.",
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "containerNetworkInterfaces",
    "etag",
    "name",
    "provisioningState",
    "resourceGuid",
    "type"
   ],
   "requiredInputs": [
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:NetworkSecurityGroup": {
   "description": "NetworkSecurityGroup resource.",
   "inputProperties": {
    "flushConnection": {
     "description": "When enabled, flows created from Network Security Group connections will be re-evaluated when rules are updates. Initial enablement will trigger re-evaluation.",
     "type": "boolean"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "networkSecurityGroupName": {
     "description": "The name of the network security group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "securityRules": {
     "description": "A collection of security rules of the network security group.\nThese are also available as standalone resources. Do not mix inline and standalone resource as they will conflict with each other, leading to resources deletion.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SecurityRule",
      "type": "object"
     },
     "type": "array"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "defaultSecurityRules": {
     "description": "The default security rules of network security group.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SecurityRuleResponse",
      "type": "object"
     },
     "type": "array"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "flowLogs": {
     "description": "A collection of references to flow log resources.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:FlowLogResponse",
      "type": "object"
     },
     "type": "array"
    },
    "flushConnection": {
     "description": "When enabled, flows created from Network Security Group connections will be re-evaluated when rules are updates. Initial enablement will trigger re-evaluation.",
     "type": "boolean"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "networkInterfaces": {
     "description": "A collection of references to network interfaces.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "provisioningState": {
     "description": "The provisioning state of the network security group resource.",
     "type": "string"
    },
    "resourceGuid": {
     "description": "The resource GUID property of the network security group resource.",
     "type": "string"
    },
    "securityRules": {
     "description": "A collection of security rules of the network security group.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SecurityRuleResponse",
      "type": "object"
     },
     "type": "array"
    },
    "subnets": {
     "description": "A collection of references to subnets.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubnetResponse",
      "type": "object"
     },
     "type": "array"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "defaultSecurityRules",
    "etag",
    "flowLogs",
    "name",
    "networkInterfaces",
    "provisioningState",
    "resourceGuid",
    "subnets",
    "type"
   ],
   "requiredInputs": [
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:NetworkVirtualAppliance": {
   "description": "NetworkVirtualAppliance Resource.",
   "inputProperties": {
    "additionalNics": {
     "description": "Details required for Additional Network Interface.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualApplianceAdditionalNicProperties",
      "type": "object"
     },
     "type": "array"
    },
    "bootStrapConfigurationBlobs": {
     "description": "BootStrapConfigurationBlobs storage URLs.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "cloudInitConfiguration": {
     "description": "CloudInitConfiguration string in plain text.",
     "type": "string"
    },
    "cloudInitConfigurationBlobs": {
     "description": "CloudInitConfigurationBlob storage URLs.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "delegation": {
     "$ref": "#/types/azure-native_network_v20230201:network:DelegationProperties",
     "description": "The delegation for the Virtual Appliance",
     "type": "object"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "identity": {
     "$ref": "#/types/azure-native_network_v20230201:network:ManagedServiceIdentity",
     "description": "The service principal that has read access to cloud-init and config blob.",
     "type": "object"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "networkVirtualApplianceName": {
     "description": "The name of Network Virtual Appliance.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "nvaSku": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualApplianceSkuProperties",
     "description": "Network Virtual Appliance SKU.",
     "type": "object"
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "sshPublicKey": {
     "description": "Public key for SSH login.",
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "virtualApplianceAsn": {
     "description": "VirtualAppliance ASN. Microsoft private, public and IANA reserved ASN are not supported.",
     "type": "number"
    },
    "virtualHub": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "The Virtual Hub where Network Virtual Appliance is being deployed.",
     "type": "object"
    }
   },
   "properties": {
    "additionalNics": {
     "description": "Details required for Additional Network Interface.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualApplianceAdditionalNicPropertiesResponse",
      "type": "object"
     },
     "type": "array"
    },
    "addressPrefix": {
     "description": "Address Prefix.",
     "type": "string"
    },
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "bootStrapConfigurationBlobs": {
     "description": "BootStrapConfigurationBlobs storage URLs.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "cloudInitConfiguration": {
     "description": "CloudInitConfiguration string in plain text.",
     "type": "string"
    },
    "cloudInitConfigurationBlobs": {
     "description": "CloudInitConfigurationBlob storage URLs.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "delegation": {
     "$ref": "#/types/azure-native_network_v20230201:network:DelegationPropertiesResponse",
     "description": "The delegation for the Virtual Appliance",
     "type": "object"
    },
    "deploymentType": {
     "description": "The deployment type. PartnerManaged for the SaaS NVA",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "identity": {
     "$ref": "#/types/azure-native_network_v20230201:network:ManagedServiceIdentityResponse",
     "description": "The service principal that has read access to cloud-init and config blob.",
     "type": "object"
    },
    "inboundSecurityRules": {
     "description": "List of references to InboundSecurityRules.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "nvaSku": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualApplianceSkuPropertiesResponse",
     "description": "Network Virtual Appliance SKU.",
     "type": "object"
    },
    "partnerManagedResource": {
     "$ref": "#/types/azure-native_network_v20230201:network:PartnerManagedResourcePropertiesResponse",
     "description": "The delegation for the Virtual Appliance",
     "type": "object"
    },
    "provisioningState": {
     "description": "The provisioning state of the resource.",
     "type": "string"
    },
    "sshPublicKey": {
     "description": "Public key for SSH login.",
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    },
    "virtualApplianceAsn": {
     "description": "VirtualAppliance ASN. Microsoft private, public and IANA reserved ASN are not supported.",
     "type": "number"
    },
    "virtualApplianceConnections": {
     "description": "List of references to VirtualApplianceConnections.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "virtualApplianceNics": {
     "description": "List of Virtual Appliance Network Interfaces.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualApplianceNicPropertiesResponse",
      "type": "object"
     },
     "type": "array"
    },
    "virtualApplianceSites": {
     "description": "List of references to VirtualApplianceSite.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "virtualHub": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The Virtual Hub where Network Virtual Appliance is being deployed.",
     "type": "object"
    }
   },
   "required": [
    "addressPrefix",
    "azureApiVersion",
    "deploymentType",
    "etag",
    "inboundSecurityRules",
    "name",
    "provisioningState",
    "type",
    "virtualApplianceConnections",
    "virtualApplianceNics",
    "virtualApplianceSites"
   ],
   "requiredInputs": [
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:NetworkVirtualApplianceConnection": {
   "description": "NetworkVirtualApplianceConnection resource.",
   "inputProperties": {
    "connectionName": {
     "description": "The name of the NVA connection.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource.",
     "type": "string"
    },
    "networkVirtualApplianceName": {
     "description": "The name of the Network Virtual Appliance.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "properties": {
     "$ref": "#/types/azure-native_network_v20230201:network:NetworkVirtualApplianceConnectionProperties",
     "description": "Properties of the express route connection.",
     "type": "object"
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource.",
     "type": "string"
    },
    "properties": {
     "$ref": "#/types/azure-native_network_v20230201:network:NetworkVirtualApplianceConnectionPropertiesResponse",
     "description": "Properties of the express route connection.",
     "type": "object"
    }
   },
   "required": [
    "azureApiVersion",
    "properties"
   ],
   "requiredInputs": [
    "networkVirtualApplianceName",
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:NetworkWatcher": {
   "description": "Network watcher in a resource group.",
   "inputProperties": {
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "networkWatcherName": {
     "description": "The name of the network watcher.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the network watcher resource.",
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "name",
    "provisioningState",
    "type"
   ],
   "requiredInputs": [
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:P2sVpnGateway": {
   "description": "P2SVpnGateway Resource.",
   "inputProperties": {
    "customDnsServers": {
     "description": "List of all customer specified DNS servers IP addresses.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "gatewayName": {
     "description": "The name of the gateway.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "isRoutingPreferenceInternet": {
     "description": "Enable Routing Preference property for the Public IP Interface of the P2SVpnGateway.",
     "type": "boolean"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "p2SConnectionConfigurations": {
     "description": "List of all p2s connection configurations of the gateway.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:P2SConnectionConfiguration",
      "type": "object"
     },
     "type": "array"
    },
    "resourceGroupName": {
     "description": "The resource group name of the P2SVpnGateway.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "virtualHub": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "The VirtualHub to which the gateway belongs.",
     "type": "object"
    },
    "vpnGatewayScaleUnit": {
     "description": "The scale unit for this p2s vpn gateway.",
     "type": "integer"
    },
    "vpnServerConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "The VpnServerConfiguration to which the p2sVpnGateway is attached to.",
     "type": "object"
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "customDnsServers": {
     "description": "List of all customer specified DNS servers IP addresses.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "isRoutingPreferenceInternet": {
     "description": "Enable Routing Preference property for the Public IP Interface of the P2SVpnGateway.",
     "type": "boolean"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "p2SConnectionConfigurations": {
     "description": "List of all p2s connection configurations of the gateway.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:P2SConnectionConfigurationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "provisioningState": {
     "description": "The provisioning state of the P2S VPN gateway resource.",
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    },
    "virtualHub": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The VirtualHub to which the gateway belongs.",
     "type": "object"
    },
    "vpnClientConnectionHealth": {
     "$ref": "#/types/azure-native_network_v20230201:network:VpnClientConnectionHealthResponse",
     "description": "All P2S VPN clients' connection health status.",
     "type": "object"
    },
    "vpnGatewayScaleUnit": {
     "description": "The scale unit for this p2s vpn gateway.",
     "type": "integer"
    },
    "vpnServerConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The VpnServerConfiguration to which the p2sVpnGateway is attached to.",
     "type": "object"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "location",
    "name",
    "provisioningState",
    "type",
    "vpnClientConnectionHealth"
   ],
   "requiredInputs": [
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:PacketCapture": {
   "description": "Information about packet capture session.",
   "inputProperties": {
    "bytesToCapturePerPacket": {
     "default": 0,
     "description": "Number of bytes captured per packet, the remaining bytes are truncated.",
     "type": "number"
    },
    "filters": {
     "description": "A list of packet capture filters.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PacketCaptureFilter",
      "type": "object"
     },
     "type": "array"
    },
    "networkWatcherName": {
     "description": "The name of the network watcher.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "packetCaptureName": {
     "description": "The name of the packet capture session.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "scope": {
     "$ref": "#/types/azure-native_network_v20230201:network:PacketCaptureMachineScope",
     "description": "A list of AzureVMSS instances which can be included or excluded to run packet capture. If both included and excluded are empty, then the packet capture will run on all instances of AzureVMSS.",
     "type": "object"
    },
    "storageLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:PacketCaptureStorageLocation",
     "description": "The storage location for a packet capture session.",
     "type": "object"
    },
    "target": {
     "description": "The ID of the targeted resource, only AzureVM and AzureVMSS as target type are currently supported.",
     "type": "string"
    },
    "targetType": {
     "$ref": "#/types/azure-native:network:PacketCaptureTargetType",
     "description": "Target type of the resource provided."
    },
    "timeLimitInSeconds": {
     "default": 18000,
     "description": "Maximum duration of the capture session in seconds.",
     "type": "integer"
    },
    "totalBytesPerSession": {
     "default": 1073741824,
     "description": "Maximum size of the capture output.",
     "type": "number"
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "bytesToCapturePerPacket": {
     "default": 0,
     "description": "Number of bytes captured per packet, the remaining bytes are truncated.",
     "type": "number"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "filters": {
     "description": "A list of packet capture filters.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PacketCaptureFilterResponse",
      "type": "object"
     },
     "type": "array"
    },
    "name": {
     "description": "Name of the packet capture session.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the packet capture session.",
     "type": "string"
    },
    "scope": {
     "$ref": "#/types/azure-native_network_v20230201:network:PacketCaptureMachineScopeResponse",
     "description": "A list of AzureVMSS instances which can be included or excluded to run packet capture. If both included and excluded are empty, then the packet capture will run on all instances of AzureVMSS.",
     "type": "object"
    },
    "storageLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:PacketCaptureStorageLocationResponse",
     "description": "The storage location for a packet capture session.",
     "type": "object"
    },
    "target": {
     "description": "The ID of the targeted resource, only AzureVM and AzureVMSS as target type are currently supported.",
     "type": "string"
    },
    "targetType": {
     "description": "Target type of the resource provided.",
     "type": "string"
    },
    "timeLimitInSeconds": {
     "default": 18000,
     "description": "Maximum duration of the capture session in seconds.",
     "type": "integer"
    },
    "totalBytesPerSession": {
     "default": 1073741824,
     "description": "Maximum size of the capture output.",
     "type": "number"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "name",
    "provisioningState",
    "storageLocation",
    "target"
   ],
   "requiredInputs": [
    "networkWatcherName",
    "resourceGroupName",
    "storageLocation",
    "target"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:PrivateDnsZoneGroup": {
   "description": "Private dns zone group resource.",
   "inputProperties": {
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "Name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "privateDnsZoneConfigs": {
     "description": "A collection of private dns zone configurations of the private dns zone group.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateDnsZoneConfig",
      "type": "object"
     },
     "type": "array"
    },
    "privateDnsZoneGroupName": {
     "description": "The name of the private dns zone group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "privateEndpointName": {
     "description": "The name of the private endpoint.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "name": {
     "description": "Name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "privateDnsZoneConfigs": {
     "description": "A collection of private dns zone configurations of the private dns zone group.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateDnsZoneConfigResponse",
      "type": "object"
     },
     "type": "array"
    },
    "provisioningState": {
     "description": "The provisioning state of the private dns zone group resource.",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "provisioningState"
   ],
   "requiredInputs": [
    "privateEndpointName",
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:PrivateEndpoint": {
   "description": "Private endpoint resource.",
   "inputProperties": {
    "applicationSecurityGroups": {
     "description": "Application security groups in which the private endpoint IP configuration is included.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationSecurityGroup",
      "type": "object"
     },
     "type": "array"
    },
    "customDnsConfigs": {
     "description": "An array of custom dns configurations.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:CustomDnsConfigPropertiesFormat",
      "type": "object"
     },
     "type": "array"
    },
    "customNetworkInterfaceName": {
     "description": "The custom name of the network interface attached to the private endpoint.",
     "type": "string"
    },
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocation",
     "description": "The extended location of the load balancer.",
     "type": "object"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "ipConfigurations": {
     "description": "A list of IP configurations of the private endpoint. This will be used to map to the First Party Service's endpoints.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateEndpointIPConfiguration",
      "type": "object"
     },
     "type": "array"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "manualPrivateLinkServiceConnections": {
     "description": "A grouping of information about the connection to the remote resource. Used when the network admin does not have access to approve connections to the remote resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceConnection",
      "type": "object"
     },
     "type": "array"
    },
    "privateEndpointName": {
     "description": "The name of the private endpoint.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "privateLinkServiceConnections": {
     "description": "A grouping of information about the connection to the remote resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceConnection",
      "type": "object"
     },
     "type": "array"
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:Subnet",
     "description": "The ID of the subnet from which the private IP will be allocated.",
     "type": "object",
     "willReplaceOnChanges": true
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    }
   },
   "properties": {
    "applicationSecurityGroups": {
     "description": "Application security groups in which the private endpoint IP configuration is included.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationSecurityGroupResponse",
      "type": "object"
     },
     "type": "array"
    },
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "customDnsConfigs": {
     "description": "An array of custom dns configurations.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:CustomDnsConfigPropertiesFormatResponse",
      "type": "object"
     },
     "type": "array"
    },
    "customNetworkInterfaceName": {
     "description": "The custom name of the network interface attached to the private endpoint.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse",
     "description": "The extended location of the load balancer.",
     "type": "object"
    },
    "ipConfigurations": {
     "description": "A list of IP configurations of the private endpoint. This will be used to map to the First Party Service's endpoints.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateEndpointIPConfigurationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "manualPrivateLinkServiceConnections": {
     "description": "A grouping of information about the connection to the remote resource. Used when the network admin does not have access to approve connections to the remote resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceConnectionResponse",
      "type": "object"
     },
     "type": "array"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "networkInterfaces": {
     "description": "An array of references to the network interfaces created for this private endpoint.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "privateLinkServiceConnections": {
     "description": "A grouping of information about the connection to the remote resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceConnectionResponse",
      "type": "object"
     },
     "type": "array"
    },
    "provisioningState": {
     "description": "The provisioning state of the private endpoint resource.",
     "type": "string"
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubnetResponse",
     "description": "The ID of the subnet from which the private IP will be allocated.",
     "type": "object"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "name",
    "networkInterfaces",
    "provisioningState",
    "type"
   ],
   "requiredInputs": [
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:PrivateLinkService": {
   "description": "Private link service resource.",
   "inputProperties": {
    "autoApproval": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServicePropertiesAutoApproval",
     "description": "The auto-approval list of the private link service.",
     "type": "object"
    },
    "enableProxyProtocol": {
     "description": "Whether the private link service is enabled for proxy protocol or not.",
     "type": "boolean"
    },
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocation",
     "description": "The extended location of the load balancer.",
     "type": "object"
    },
    "fqdns": {
     "description": "The list of Fqdn.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "ipConfigurations": {
     "description": "An array of private link service IP configurations.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceIpConfiguration",
      "type": "object"
     },
     "type": "array"
    },
    "loadBalancerFrontendIpConfigurations": {
     "description": "An array of references to the load balancer IP configurations.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:FrontendIPConfiguration",
      "type": "object"
     },
     "type": "array"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "serviceName": {
     "description": "The name of the private link service.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "visibility": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServicePropertiesVisibility",
     "description": "The visibility list of the private link service.",
     "type": "object"
    }
   },
   "properties": {
    "alias": {
     "description": "The alias of the private link service.",
     "type": "string"
    },
    "autoApproval": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServicePropertiesResponseAutoApproval",
     "description": "The auto-approval list of the private link service.",
     "type": "object"
    },
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "enableProxyProtocol": {
     "description": "Whether the private link service is enabled for proxy protocol or not.",
     "type": "boolean"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse",
     "description": "The extended location of the load balancer.",
     "type": "object"
    },
    "fqdns": {
     "description": "The list of Fqdn.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "ipConfigurations": {
     "description": "An array of private link service IP configurations.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceIpConfigurationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "loadBalancerFrontendIpConfigurations": {
     "description": "An array of references to the load balancer IP configurations.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:FrontendIPConfigurationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "networkInterfaces": {
     "description": "An array of references to the network interfaces created for this private link service.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "privateEndpointConnections": {
     "description": "An array of list about connections to the private endpoint.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateEndpointConnectionResponse",
      "type": "object"
     },
     "type": "array"
    },
    "provisioningState": {
     "description": "The provisioning state of the private link service resource.",
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    },
    "visibility": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServicePropertiesResponseVisibility",
     "description": "The visibility list of the private link service.",
     "type": "object"
    }
   },
   "required": [
    "alias",
    "azureApiVersion",
    "etag",
    "name",
    "networkInterfaces",
    "privateEndpointConnections",
    "provisioningState",
    "type"
   ],
   "requiredInputs": [
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:PrivateLinkServicePrivateEndpointConnection": {
   "description": "PrivateEndpointConnection resource.",
   "inputProperties": {
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "peConnectionName": {
     "description": "The name of the private end point connection.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "privateLinkServiceConnectionState": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceConnectionState",
     "description": "A collection of information about the state of the connection between service consumer and provider.",
     "type": "object"
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "serviceName": {
     "description": "The name of the private link service.",
     "type": "string",
     "willReplaceOnChanges": true
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "linkIdentifier": {
     "description": "The consumer link id.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "privateEndpoint": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateEndpointResponse",
     "description": "The resource of private end point.",
     "type": "object"
    },
    "privateEndpointLocation": {
     "description": "The location of the private endpoint.",
     "type": "string"
    },
    "privateLinkServiceConnectionState": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceConnectionStateResponse",
     "description": "A collection of information about the state of the connection between service consumer and provider.",
     "type": "object"
    },
    "provisioningState": {
     "description": "The provisioning state of the private endpoint connection resource.",
     "type": "string"
    },
    "type": {
     "description": "The resource type.",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "linkIdentifier",
    "privateEndpoint",
    "privateEndpointLocation",
    "provisioningState",
    "type"
   ],
   "requiredInputs": [
    "resourceGroupName",
    "serviceName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:PublicIPAddress": {
   "description": "Public IP address resource.",
   "inputProperties": {
    "ddosSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:DdosSettings",
     "description": "The DDoS protection custom policy associated with the public IP address.",
     "type": "object"
    },
    "deleteOption": {
     "description": "Specify what happens to the public IP address when the VM using it is deleted",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:DeleteOptions"
      }
     ]
    },
    "dnsSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddressDnsSettings",
     "description": "The FQDN of the DNS record associated with the public IP address.",
     "type": "object"
    },
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocation",
     "description": "The extended location of the public ip address.",
     "type": "object"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "idleTimeoutInMinutes": {
     "description": "The idle timeout of the public IP address.",
     "type": "integer"
    },
    "ipAddress": {
     "description": "The IP address associated with the public IP address resource.",
     "type": "string"
    },
    "ipTags": {
     "description": "The list of tags associated with the public IP address.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IpTag",
      "type": "object"
     },
     "type": "array"
    },
    "linkedPublicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddress",
     "description": "The linked public IP address of the public IP address resource.",
     "type": "object"
    },
    "location": {
     "description": "Resource location.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "migrationPhase": {
     "description": "Migration phase of Public IP Address.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:PublicIPAddressMigrationPhase"
      }
     ]
    },
    "natGateway": {
     "$ref": "#/types/azure-native_network_v20230201:network:NatGateway",
     "description": "The NatGateway for the Public IP address.",
     "type": "object"
    },
    "publicIPAddressVersion": {
     "description": "The public IP address version.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:IPVersion"
      }
     ],
     "willReplaceOnChanges": true
    },
    "publicIPAllocationMethod": {
     "description": "The public IP address allocation method.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:IPAllocationMethod"
      }
     ]
    },
    "publicIPPrefix": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "The Public IP Prefix this Public IP Address should be allocated from.",
     "type": "object",
     "willReplaceOnChanges": true
    },
    "publicIpAddressName": {
     "description": "The name of the public IP address.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "servicePublicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddress",
     "description": "The service public IP address of the public IP address resource.",
     "type": "object"
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddressSku",
     "description": "The public IP address SKU.",
     "type": "object",
     "willReplaceOnChanges": true
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "zones": {
     "description": "A list of availability zones denoting the IP allocated for the resource needs to come from.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "ddosSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:DdosSettingsResponse",
     "description": "The DDoS protection custom policy associated with the public IP address.",
     "type": "object"
    },
    "deleteOption": {
     "description": "Specify what happens to the public IP address when the VM using it is deleted",
     "type": "string"
    },
    "dnsSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddressDnsSettingsResponse",
     "description": "The FQDN of the DNS record associated with the public IP address.",
     "type": "object"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse",
     "description": "The extended location of the public ip address.",
     "type": "object"
    },
    "idleTimeoutInMinutes": {
     "description": "The idle timeout of the public IP address.",
     "type": "integer"
    },
    "ipAddress": {
     "description": "The IP address associated with the public IP address resource.",
     "type": "string"
    },
    "ipConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:IPConfigurationResponse",
     "description": "The IP configuration associated with the public IP address.",
     "type": "object"
    },
    "ipTags": {
     "description": "The list of tags associated with the public IP address.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IpTagResponse",
      "type": "object"
     },
     "type": "array"
    },
    "linkedPublicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddressResponse",
     "description": "The linked public IP address of the public IP address resource.",
     "type": "object"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "migrationPhase": {
     "description": "Migration phase of Public IP Address.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "natGateway": {
     "$ref": "#/types/azure-native_network_v20230201:network:NatGatewayResponse",
     "description": "The NatGateway for the Public IP address.",
     "type": "object"
    },
    "provisioningState": {
     "description": "The provisioning state of the public IP address resource.",
     "type": "string"
    },
    "publicIPAddressVersion": {
     "description": "The public IP address version.",
     "type": "string"
    },
    "publicIPAllocationMethod": {
     "description": "The public IP address allocation method.",
     "type": "string"
    },
    "publicIPPrefix": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The Public IP Prefix this Public IP Address should be allocated from.",
     "type": "object"
    },
    "resourceGuid": {
     "description": "The resource GUID property of the public IP address resource.",
     "type": "string"
    },
    "servicePublicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddressResponse",
     "description": "The service public IP address of the public IP address resource.",
     "type": "object"
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddressSkuResponse",
     "description": "The public IP address SKU.",
     "type": "object"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    },
    "zones": {
     "description": "A list of availability zones denoting the IP allocated for the resource needs to come from.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "ipConfiguration",
    "name",
    "provisioningState",
    "resourceGuid",
    "type"
   ],
   "requiredInputs": [
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:PublicIPPrefix": {
   "description": "Public IP prefix resource.",
   "inputProperties": {
    "customIPPrefix": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "The customIpPrefix that this prefix is associated with.",
     "type": "object"
    },
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocation",
     "description": "The extended location of the public ip address.",
     "type": "object"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "ipTags": {
     "description": "The list of tags associated with the public IP prefix.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IpTag",
      "type": "object"
     },
     "type": "array"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "natGateway": {
     "$ref": "#/types/azure-native_network_v20230201:network:NatGateway",
     "description": "NatGateway of Public IP Prefix.",
     "type": "object"
    },
    "prefixLength": {
     "description": "The Length of the Public IP Prefix.",
     "type": "integer"
    },
    "publicIPAddressVersion": {
     "description": "The public IP address version.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:IPVersion"
      }
     ]
    },
    "publicIpPrefixName": {
     "description": "The name of the public IP prefix.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPPrefixSku",
     "description": "The public IP prefix SKU.",
     "type": "object"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "zones": {
     "description": "A list of availability zones denoting the IP allocated for the resource needs to come from.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "customIPPrefix": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The customIpPrefix that this prefix is associated with.",
     "type": "object"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse",
     "description": "The extended location of the public ip address.",
     "type": "object"
    },
    "ipPrefix": {
     "description": "The allocated Prefix.",
     "type": "string"
    },
    "ipTags": {
     "description": "The list of tags associated with the public IP prefix.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IpTagResponse",
      "type": "object"
     },
     "type": "array"
    },
    "loadBalancerFrontendIpConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The reference to load balancer frontend IP configuration associated with the public IP prefix.",
     "type": "object"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "natGateway": {
     "$ref": "#/types/azure-native_network_v20230201:network:NatGatewayResponse",
     "description": "NatGateway of Public IP Prefix.",
     "type": "object"
    },
    "prefixLength": {
     "description": "The Length of the Public IP Prefix.",
     "type": "integer"
    },
    "provisioningState": {
     "description": "The provisioning state of the public IP prefix resource.",
     "type": "string"
    },
    "publicIPAddressVersion": {
     "description": "The public IP address version.",
     "type": "string"
    },
    "publicIPAddresses": {
     "description": "The list of all referenced PublicIPAddresses.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ReferencedPublicIpAddressResponse",
      "type": "object"
     },
     "type": "array"
    },
    "resourceGuid": {
     "description": "The resource GUID property of the public IP prefix resource.",
     "type": "string"
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPPrefixSkuResponse",
     "description": "The public IP prefix SKU.",
     "type": "object"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    },
    "zones": {
     "description": "A list of availability zones denoting the IP allocated for the resource needs to come from.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "ipPrefix",
    "loadBalancerFrontendIpConfiguration",
    "name",
    "provisioningState",
    "publicIPAddresses",
    "resourceGuid",
    "type"
   ],
   "requiredInputs": [
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:Route": {
   "description": "Route resource.",
   "inputProperties": {
    "addressPrefix": {
     "description": "The destination CIDR to which the route applies.",
     "type": "string"
    },
    "hasBgpOverride": {
     "description": "A value indicating whether this route overrides overlapping BGP routes regardless of LPM.",
     "type": "boolean"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "nextHopIpAddress": {
     "description": "The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.",
     "type": "string"
    },
    "nextHopType": {
     "description": "The type of Azure hop the packet should be sent to.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:RouteNextHopType"
      }
     ]
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "routeName": {
     "description": "The name of the route.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "routeTableName": {
     "description": "The name of the route table.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "type": {
     "description": "The type of the resource.",
     "type": "string"
    }
   },
   "properties": {
    "addressPrefix": {
     "description": "The destination CIDR to which the route applies.",
     "type": "string"
    },
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "hasBgpOverride": {
     "description": "A value indicating whether this route overrides overlapping BGP routes regardless of LPM.",
     "type": "boolean"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "nextHopIpAddress": {
     "description": "The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.",
     "type": "string"
    },
    "nextHopType": {
     "description": "The type of Azure hop the packet should be sent to.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the route resource.",
     "type": "string"
    },
    "type": {
     "description": "The type of the resource.",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "nextHopType",
    "provisioningState"
   ],
   "requiredInputs": [
    "nextHopType",
    "resourceGroupName",
    "routeTableName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:RouteFilter": {
   "description": "Route Filter Resource.",
   "inputProperties": {
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "routeFilterName": {
     "description": "The name of the route filter.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "rules": {
     "description": "Collection of RouteFilterRules contained within a route filter.\nThese are also available as standalone resources. Do not mix inline and standalone resource as they will conflict with each other, leading to resources deletion.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:RouteFilterRule",
      "type": "object"
     },
     "type": "array"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "ipv6Peerings": {
     "description": "A collection of references to express route circuit ipv6 peerings.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitPeeringResponse",
      "type": "object"
     },
     "type": "array"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "peerings": {
     "description": "A collection of references to express route circuit peerings.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitPeeringResponse",
      "type": "object"
     },
     "type": "array"
    },
    "provisioningState": {
     "description": "The provisioning state of the route filter resource.",
     "type": "string"
    },
    "rules": {
     "description": "Collection of RouteFilterRules contained within a route filter.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:RouteFilterRuleResponse",
      "type": "object"
     },
     "type": "array"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "ipv6Peerings",
    "location",
    "name",
    "peerings",
    "provisioningState",
    "type"
   ],
   "requiredInputs": [
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:RouteFilterRule": {
   "description": "Route Filter Rule Resource.",
   "inputProperties": {
    "access": {
     "description": "The access type of the rule.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:Access"
      }
     ]
    },
    "communities": {
     "description": "The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020'].",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "routeFilterName": {
     "description": "The name of the route filter.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "routeFilterRuleType": {
     "description": "The rule type of the rule.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:RouteFilterRuleType"
      }
     ]
    },
    "ruleName": {
     "description": "The name of the route filter rule.",
     "type": "string",
     "willReplaceOnChanges": true
    }
   },
   "properties": {
    "access": {
     "description": "The access type of the rule.",
     "type": "string"
    },
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "communities": {
     "description": "The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020'].",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the route filter rule resource.",
     "type": "string"
    },
    "routeFilterRuleType": {
     "description": "The rule type of the rule.",
     "type": "string"
    }
   },
   "required": [
    "access",
    "azureApiVersion",
    "communities",
    "etag",
    "provisioningState",
    "routeFilterRuleType"
   ],
   "requiredInputs": [
    "access",
    "communities",
    "resourceGroupName",
    "routeFilterName",
    "routeFilterRuleType"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:RouteMap": {
   "description": "The RouteMap child resource of a Virtual hub.",
   "inputProperties": {
    "associatedInboundConnections": {
     "description": "List of connections which have this RoutMap associated for inbound traffic.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "associatedOutboundConnections": {
     "description": "List of connections which have this RoutMap associated for outbound traffic.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "resourceGroupName": {
     "description": "The resource group name of the RouteMap's resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "routeMapName": {
     "description": "The name of the RouteMap.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "rules": {
     "description": "List of RouteMap rules to be applied.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:RouteMapRule",
      "type": "object"
     },
     "type": "array"
    },
    "virtualHubName": {
     "description": "The name of the VirtualHub containing the RouteMap.",
     "type": "string",
     "willReplaceOnChanges": true
    }
   },
   "properties": {
    "associatedInboundConnections": {
     "description": "List of connections which have this RoutMap associated for inbound traffic.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "associatedOutboundConnections": {
     "description": "List of connections which have this RoutMap associated for outbound traffic.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the RouteMap resource.",
     "type": "string"
    },
    "rules": {
     "description": "List of RouteMap rules to be applied.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:RouteMapRuleResponse",
      "type": "object"
     },
     "type": "array"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "name",
    "provisioningState",
    "type"
   ],
   "requiredInputs": [
    "resourceGroupName",
    "virtualHubName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:RouteTable": {
   "description": "Route table resource.",
   "inputProperties": {
    "disableBgpRoutePropagation": {
     "description": "Whether to disable the routes learned by BGP on that route table. True means disable.",
     "type": "boolean"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "routeTableName": {
     "description": "The name of the route table.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "routes": {
     "description": "Collection of routes contained within a route table.\nThese are also available as standalone resources. Do not mix inline and standalone resource as they will conflict with each other, leading to resources deletion.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:Route",
      "type": "object"
     },
     "type": "array"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "disableBgpRoutePropagation": {
     "description": "Whether to disable the routes learned by BGP on that route table. True means disable.",
     "type": "boolean"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the route table resource.",
     "type": "string"
    },
    "resourceGuid": {
     "description": "The resource GUID property of the route table.",
     "type": "string"
    },
    "routes": {
     "description": "Collection of routes contained within a route table.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:RouteResponse",
      "type": "object"
     },
     "type": "array"
    },
    "subnets": {
     "description": "A collection of references to subnets.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubnetResponse",
      "type": "object"
     },
     "type": "array"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "name",
    "provisioningState",
    "resourceGuid",
    "subnets",
    "type"
   ],
   "requiredInputs": [
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:RoutingIntent": {
   "description": "The routing intent child resource of a Virtual hub.",
   "inputProperties": {
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "resourceGroupName": {
     "description": "The resource group name of the RoutingIntent.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "routingIntentName": {
     "description": "The name of the per VirtualHub singleton Routing Intent resource.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "routingPolicies": {
     "description": "List of routing policies.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:RoutingPolicy",
      "type": "object"
     },
     "type": "array"
    },
    "virtualHubName": {
     "description": "The name of the VirtualHub.",
     "type": "string",
     "willReplaceOnChanges": true
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the RoutingIntent resource.",
     "type": "string"
    },
    "routingPolicies": {
     "description": "List of routing policies.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:RoutingPolicyResponse",
      "type": "object"
     },
     "type": "array"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "provisioningState",
    "type"
   ],
   "requiredInputs": [
    "resourceGroupName",
    "virtualHubName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ScopeConnection": {
   "description": "The Scope Connections resource",
   "inputProperties": {
    "description": {
     "description": "A description of the scope connection.",
     "type": "string"
    },
    "networkManagerName": {
     "description": "The name of the network manager.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "resourceId": {
     "description": "Resource ID.",
     "type": "string"
    },
    "scopeConnectionName": {
     "description": "Name for the cross-tenant connection.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "tenantId": {
     "description": "Tenant ID.",
     "type": "string"
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "description": {
     "description": "A description of the scope connection.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "resourceId": {
     "description": "Resource ID.",
     "type": "string"
    },
    "systemData": {
     "$ref": "#/types/azure-native_network_v20230201:network:SystemDataResponse",
     "description": "The system metadata related to this resource.",
     "type": "object"
    },
    "tenantId": {
     "description": "Tenant ID.",
     "type": "string"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "name",
    "systemData",
    "type"
   ],
   "requiredInputs": [
    "networkManagerName",
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:SecurityAdminConfiguration": {
   "description": "Defines the security admin configuration",
   "inputProperties": {
    "applyOnNetworkIntentPolicyBasedServices": {
     "description": "Enum list of network intent policy based services.",
     "items": {
      "oneOf": [
       {
        "type": "string"
       },
       {
        "$ref": "#/types/azure-native:network:NetworkIntentPolicyBasedService"
       }
      ]
     },
     "type": "array"
    },
    "configurationName": {
     "description": "The name of the network manager Security Configuration.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "description": {
     "description": "A description of the security configuration.",
     "type": "string"
    },
    "networkManagerName": {
     "description": "The name of the network manager.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    }
   },
   "properties": {
    "applyOnNetworkIntentPolicyBasedServices": {
     "description": "Enum list of network intent policy based services.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "description": {
     "description": "A description of the security configuration.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the resource.",
     "type": "string"
    },
    "resourceGuid": {
     "description": "Unique identifier for this resource.",
     "type": "string"
    },
    "systemData": {
     "$ref": "#/types/azure-native_network_v20230201:network:SystemDataResponse",
     "description": "The system metadata related to this resource.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "name",
    "provisioningState",
    "resourceGuid",
    "systemData",
    "type"
   ],
   "requiredInputs": [
    "networkManagerName",
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:SecurityPartnerProvider": {
   "description": "Security Partner Provider resource.",
   "inputProperties": {
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "securityPartnerProviderName": {
     "description": "The name of the Security Partner Provider.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "securityProviderName": {
     "description": "The security provider name.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:SecurityProviderName"
      }
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "virtualHub": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "The virtualHub to which the Security Partner Provider belongs.",
     "type": "object"
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "connectionStatus": {
     "description": "The connection status with the Security Partner Provider.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the Security Partner Provider resource.",
     "type": "string"
    },
    "securityProviderName": {
     "description": "The security provider name.",
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    },
    "virtualHub": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The virtualHub to which the Security Partner Provider belongs.",
     "type": "object"
    }
   },
   "required": [
    "azureApiVersion",
    "connectionStatus",
    "etag",
    "name",
    "provisioningState",
    "type"
   ],
   "requiredInputs": [
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:SecurityRule": {
   "description": "Network security rule.",
   "inputProperties": {
    "access": {
     "description": "The network traffic is allowed or denied.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:SecurityRuleAccess"
      }
     ]
    },
    "description": {
     "description": "A description for this rule. Restricted to 140 chars.",
     "type": "string"
    },
    "destinationAddressPrefix": {
     "description": "The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.",
     "type": "string"
    },
    "destinationAddressPrefixes": {
     "description": "The destination address prefixes. CIDR or destination IP ranges.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "destinationApplicationSecurityGroups": {
     "description": "The application security group specified as destination.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationSecurityGroup",
      "type": "object"
     },
     "type": "array"
    },
    "destinationPortRange": {
     "description": "The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.",
     "type": "string"
    },
    "destinationPortRanges": {
     "description": "The destination port ranges.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "direction": {
     "description": "The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:SecurityRuleDirection"
      }
     ]
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "networkSecurityGroupName": {
     "description": "The name of the network security group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "priority": {
     "description": "The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
     "type": "integer"
    },
    "protocol": {
     "description": "Network protocol this rule applies to.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:SecurityRuleProtocol"
      }
     ]
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "securityRuleName": {
     "description": "The name of the security rule.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "sourceAddressPrefix": {
     "description": "The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.",
     "type": "string"
    },
    "sourceAddressPrefixes": {
     "description": "The CIDR or source IP ranges.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "sourceApplicationSecurityGroups": {
     "description": "The application security group specified as source.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationSecurityGroup",
      "type": "object"
     },
     "type": "array"
    },
    "sourcePortRange": {
     "description": "The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.",
     "type": "string"
    },
    "sourcePortRanges": {
     "description": "The source port ranges.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "type": {
     "description": "The type of the resource.",
     "type": "string"
    }
   },
   "properties": {
    "access": {
     "description": "The network traffic is allowed or denied.",
     "type": "string"
    },
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "description": {
     "description": "A description for this rule. Restricted to 140 chars.",
     "type": "string"
    },
    "destinationAddressPrefix": {
     "description": "The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.",
     "type": "string"
    },
    "destinationAddressPrefixes": {
     "description": "The destination address prefixes. CIDR or destination IP ranges.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "destinationApplicationSecurityGroups": {
     "description": "The application security group specified as destination.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationSecurityGroupResponse",
      "type": "object"
     },
     "type": "array"
    },
    "destinationPortRange": {
     "description": "The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.",
     "type": "string"
    },
    "destinationPortRanges": {
     "description": "The destination port ranges.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "direction": {
     "description": "The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "priority": {
     "description": "The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
     "type": "integer"
    },
    "protocol": {
     "description": "Network protocol this rule applies to.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the security rule resource.",
     "type": "string"
    },
    "sourceAddressPrefix": {
     "description": "The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.",
     "type": "string"
    },
    "sourceAddressPrefixes": {
     "description": "The CIDR or source IP ranges.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "sourceApplicationSecurityGroups": {
     "description": "The application security group specified as source.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationSecurityGroupResponse",
      "type": "object"
     },
     "type": "array"
    },
    "sourcePortRange": {
     "description": "The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.",
     "type": "string"
    },
    "sourcePortRanges": {
     "description": "The source port ranges.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "type": {
     "description": "The type of the resource.",
     "type": "string"
    }
   },
   "required": [
    "access",
    "azureApiVersion",
    "direction",
    "etag",
    "priority",
    "protocol",
    "provisioningState"
   ],
   "requiredInputs": [
    "access",
    "direction",
    "networkSecurityGroupName",
    "priority",
    "protocol",
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ServiceEndpointPolicy": {
   "description": "Service End point policy resource.",
   "inputProperties": {
    "contextualServiceEndpointPolicies": {
     "description": "A collection of contextual service endpoint policy.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "serviceAlias": {
     "description": "The alias indicating if the policy belongs to a service",
     "type": "string"
    },
    "serviceEndpointPolicyDefinitions": {
     "description": "A collection of service endpoint policy definitions of the service endpoint policy.\nThese are also available as standalone resources. Do not mix inline and standalone resource as they will conflict with each other, leading to resources deletion.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ServiceEndpointPolicyDefinition",
      "type": "object"
     },
     "type": "array"
    },
    "serviceEndpointPolicyName": {
     "description": "The name of the service endpoint policy.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "contextualServiceEndpointPolicies": {
     "description": "A collection of contextual service endpoint policy.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "kind": {
     "description": "Kind of service endpoint policy. This is metadata used for the Azure portal experience.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the service endpoint policy resource.",
     "type": "string"
    },
    "resourceGuid": {
     "description": "The resource GUID property of the service endpoint policy resource.",
     "type": "string"
    },
    "serviceAlias": {
     "description": "The alias indicating if the policy belongs to a service",
     "type": "string"
    },
    "serviceEndpointPolicyDefinitions": {
     "description": "A collection of service endpoint policy definitions of the service endpoint policy.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ServiceEndpointPolicyDefinitionResponse",
      "type": "object"
     },
     "type": "array"
    },
    "subnets": {
     "description": "A collection of references to subnets.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubnetResponse",
      "type": "object"
     },
     "type": "array"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "kind",
    "name",
    "provisioningState",
    "resourceGuid",
    "subnets",
    "type"
   ],
   "requiredInputs": [
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ServiceEndpointPolicyDefinition": {
   "description": "Service Endpoint policy definitions.",
   "inputProperties": {
    "description": {
     "description": "A description for this rule. Restricted to 140 chars.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "service": {
     "description": "Service endpoint name.",
     "type": "string"
    },
    "serviceEndpointPolicyDefinitionName": {
     "description": "The name of the service endpoint policy definition name.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "serviceEndpointPolicyName": {
     "description": "The name of the service endpoint policy.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "serviceResources": {
     "description": "A list of service resources.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "type": {
     "description": "The type of the resource.",
     "type": "string"
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "description": {
     "description": "A description for this rule. Restricted to 140 chars.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the service endpoint policy definition resource.",
     "type": "string"
    },
    "service": {
     "description": "Service endpoint name.",
     "type": "string"
    },
    "serviceResources": {
     "description": "A list of service resources.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "type": {
     "description": "The type of the resource.",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "provisioningState"
   ],
   "requiredInputs": [
    "resourceGroupName",
    "serviceEndpointPolicyName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:StaticMember": {
   "description": "StaticMember Item.",
   "inputProperties": {
    "networkGroupName": {
     "description": "The name of the network group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "networkManagerName": {
     "description": "The name of the network manager.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "resourceId": {
     "description": "Resource Id.",
     "type": "string"
    },
    "staticMemberName": {
     "description": "The name of the static member.",
     "type": "string",
     "willReplaceOnChanges": true
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the scope assignment resource.",
     "type": "string"
    },
    "region": {
     "description": "Resource region.",
     "type": "string"
    },
    "resourceId": {
     "description": "Resource Id.",
     "type": "string"
    },
    "systemData": {
     "$ref": "#/types/azure-native_network_v20230201:network:SystemDataResponse",
     "description": "The system metadata related to this resource.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "name",
    "provisioningState",
    "region",
    "systemData",
    "type"
   ],
   "requiredInputs": [
    "networkGroupName",
    "networkManagerName",
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:Subnet": {
   "description": "Subnet in a virtual network resource.",
   "inputProperties": {
    "addressPrefix": {
     "description": "The address prefix for the subnet.",
     "type": "string"
    },
    "addressPrefixes": {
     "description": "List of address prefixes for the subnet.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "applicationGatewayIPConfigurations": {
     "description": "Application gateway IP configurations of virtual network resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayIPConfiguration",
      "type": "object"
     },
     "type": "array"
    },
    "delegations": {
     "description": "An array of references to the delegations on the subnet.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:Delegation",
      "type": "object"
     },
     "type": "array"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "ipAllocations": {
     "description": "Array of IpAllocation which reference this subnet.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
      "type": "object"
     },
     "type": "array"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "natGateway": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Nat gateway associated with this subnet.",
     "type": "object"
    },
    "networkSecurityGroup": {
     "$ref": "#/types/azure-native_network_v20230201:network:NetworkSecurityGroup",
     "description": "The reference to the NetworkSecurityGroup resource.",
     "type": "object"
    },
    "privateEndpointNetworkPolicies": {
     "default": "Disabled",
     "description": "Enable or Disable apply network policies on private end point in the subnet.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:VirtualNetworkPrivateEndpointNetworkPolicies"
      }
     ]
    },
    "privateLinkServiceNetworkPolicies": {
     "default": "Enabled",
     "description": "Enable or Disable apply network policies on private link service in the subnet.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:VirtualNetworkPrivateLinkServiceNetworkPolicies"
      }
     ]
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "routeTable": {
     "$ref": "#/types/azure-native_network_v20230201:network:RouteTable",
     "description": "The reference to the RouteTable resource.",
     "type": "object"
    },
    "serviceEndpointPolicies": {
     "description": "An array of service endpoint policies.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ServiceEndpointPolicy",
      "type": "object"
     },
     "type": "array"
    },
    "serviceEndpoints": {
     "description": "An array of service endpoints.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ServiceEndpointPropertiesFormat",
      "type": "object"
     },
     "type": "array"
    },
    "subnetName": {
     "description": "The name of the subnet.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    },
    "virtualNetworkName": {
     "description": "The name of the virtual network.",
     "type": "string",
     "willReplaceOnChanges": true
    }
   },
   "properties": {
    "addressPrefix": {
     "description": "The address prefix for the subnet.",
     "type": "string"
    },
    "addressPrefixes": {
     "description": "List of address prefixes for the subnet.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "applicationGatewayIPConfigurations": {
     "description": "Application gateway IP configurations of virtual network resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayIPConfigurationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "delegations": {
     "description": "An array of references to the delegations on the subnet.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:DelegationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "ipAllocations": {
     "description": "Array of IpAllocation which reference this subnet.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "ipConfigurationProfiles": {
     "description": "Array of IP configuration profiles which reference this subnet.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IPConfigurationProfileResponse",
      "type": "object"
     },
     "type": "array"
    },
    "ipConfigurations": {
     "description": "An array of references to the network interface IP configurations using subnet.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IPConfigurationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "natGateway": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Nat gateway associated with this subnet.",
     "type": "object"
    },
    "networkSecurityGroup": {
     "$ref": "#/types/azure-native_network_v20230201:network:NetworkSecurityGroupResponse",
     "description": "The reference to the NetworkSecurityGroup resource.",
     "type": "object"
    },
    "privateEndpointNetworkPolicies": {
     "default": "Disabled",
     "description": "Enable or Disable apply network policies on private end point in the subnet.",
     "type": "string"
    },
    "privateEndpoints": {
     "description": "An array of references to private endpoints.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateEndpointResponse",
      "type": "object"
     },
     "type": "array"
    },
    "privateLinkServiceNetworkPolicies": {
     "default": "Enabled",
     "description": "Enable or Disable apply network policies on private link service in the subnet.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the subnet resource.",
     "type": "string"
    },
    "purpose": {
     "description": "A read-only string identifying the intention of use for this subnet based on delegations and other user-defined properties.",
     "type": "string"
    },
    "resourceNavigationLinks": {
     "description": "An array of references to the external resources using subnet.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ResourceNavigationLinkResponse",
      "type": "object"
     },
     "type": "array"
    },
    "routeTable": {
     "$ref": "#/types/azure-native_network_v20230201:network:RouteTableResponse",
     "description": "The reference to the RouteTable resource.",
     "type": "object"
    },
    "serviceAssociationLinks": {
     "description": "An array of references to services injecting into this subnet.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ServiceAssociationLinkResponse",
      "type": "object"
     },
     "type": "array"
    },
    "serviceEndpointPolicies": {
     "description": "An array of service endpoint policies.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ServiceEndpointPolicyResponse",
      "type": "object"
     },
     "type": "array"
    },
    "serviceEndpoints": {
     "description": "An array of service endpoints.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ServiceEndpointPropertiesFormatResponse",
      "type": "object"
     },
     "type": "array"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "ipConfigurationProfiles",
    "ipConfigurations",
    "privateEndpoints",
    "provisioningState",
    "purpose",
    "resourceNavigationLinks",
    "serviceAssociationLinks"
   ],
   "requiredInputs": [
    "resourceGroupName",
    "virtualNetworkName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:SubscriptionNetworkManagerConnection": {
   "description": "The Network Manager Connection resource",
   "inputProperties": {
    "description": {
     "description": "A description of the network manager connection.",
     "type": "string"
    },
    "networkManagerConnectionName": {
     "description": "Name for the network manager connection.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "networkManagerId": {
     "description": "Network Manager Id.",
     "type": "string"
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "description": {
     "description": "A description of the network manager connection.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "networkManagerId": {
     "description": "Network Manager Id.",
     "type": "string"
    },
    "systemData": {
     "$ref": "#/types/azure-native_network_v20230201:network:SystemDataResponse",
     "description": "The system metadata related to this resource.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "name",
    "systemData",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualApplianceSite": {
   "description": "Virtual Appliance Site resource.",
   "inputProperties": {
    "addressPrefix": {
     "description": "Address Prefix.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "Name of the virtual appliance site.",
     "type": "string"
    },
    "networkVirtualApplianceName": {
     "description": "The name of the Network Virtual Appliance.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "o365Policy": {
     "$ref": "#/types/azure-native_network_v20230201:network:Office365PolicyProperties",
     "description": "Office 365 Policy.",
     "type": "object"
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "siteName": {
     "description": "The name of the site.",
     "type": "string",
     "willReplaceOnChanges": true
    }
   },
   "properties": {
    "addressPrefix": {
     "description": "Address Prefix.",
     "type": "string"
    },
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "name": {
     "description": "Name of the virtual appliance site.",
     "type": "string"
    },
    "o365Policy": {
     "$ref": "#/types/azure-native_network_v20230201:network:Office365PolicyPropertiesResponse",
     "description": "Office 365 Policy.",
     "type": "object"
    },
    "provisioningState": {
     "description": "The provisioning state of the resource.",
     "type": "string"
    },
    "type": {
     "description": "Site type.",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "provisioningState",
    "type"
   ],
   "requiredInputs": [
    "networkVirtualApplianceName",
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualHub": {
   "description": "VirtualHub Resource.",
   "inputProperties": {
    "addressPrefix": {
     "description": "Address-prefix for this VirtualHub.",
     "type": "string"
    },
    "allowBranchToBranchTraffic": {
     "description": "Flag to control transit for VirtualRouter hub.",
     "type": "boolean"
    },
    "azureFirewall": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "The azureFirewall associated with this VirtualHub.",
     "type": "object"
    },
    "expressRouteGateway": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "The expressRouteGateway associated with this VirtualHub.",
     "type": "object"
    },
    "hubRoutingPreference": {
     "description": "The hubRoutingPreference of this VirtualHub.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:HubRoutingPreference"
      }
     ]
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "p2SVpnGateway": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "The P2SVpnGateway associated with this VirtualHub.",
     "type": "object"
    },
    "preferredRoutingGateway": {
     "description": "The preferred gateway to route on-prem traffic",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:PreferredRoutingGateway"
      }
     ]
    },
    "resourceGroupName": {
     "description": "The resource group name of the VirtualHub.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "routeTable": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualHubRouteTable",
     "description": "The routeTable associated with this virtual hub.",
     "type": "object"
    },
    "securityPartnerProvider": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "The securityPartnerProvider associated with this VirtualHub.",
     "type": "object"
    },
    "securityProviderName": {
     "description": "The Security Provider name.",
     "type": "string"
    },
    "sku": {
     "description": "The sku of this VirtualHub.",
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "virtualHubName": {
     "description": "The name of the VirtualHub.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "virtualHubRouteTableV2s": {
     "description": "List of all virtual hub route table v2s associated with this VirtualHub.\nThese are also available as standalone resources. Do not mix inline and standalone resource as they will conflict with each other, leading to resources deletion.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualHubRouteTableV2",
      "type": "object"
     },
     "type": "array"
    },
    "virtualRouterAsn": {
     "description": "VirtualRouter ASN.",
     "type": "number"
    },
    "virtualRouterAutoScaleConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualRouterAutoScaleConfiguration",
     "description": "The VirtualHub Router autoscale configuration.",
     "type": "object"
    },
    "virtualRouterIps": {
     "description": "VirtualRouter IPs.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "virtualWan": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "The VirtualWAN to which the VirtualHub belongs.",
     "type": "object"
    },
    "vpnGateway": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "The VpnGateway associated with this VirtualHub.",
     "type": "object"
    }
   },
   "properties": {
    "addressPrefix": {
     "description": "Address-prefix for this VirtualHub.",
     "type": "string"
    },
    "allowBranchToBranchTraffic": {
     "description": "Flag to control transit for VirtualRouter hub.",
     "type": "boolean"
    },
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "azureFirewall": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The azureFirewall associated with this VirtualHub.",
     "type": "object"
    },
    "bgpConnections": {
     "description": "List of references to Bgp Connections.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "expressRouteGateway": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The expressRouteGateway associated with this VirtualHub.",
     "type": "object"
    },
    "hubRoutingPreference": {
     "description": "The hubRoutingPreference of this VirtualHub.",
     "type": "string"
    },
    "ipConfigurations": {
     "description": "List of references to IpConfigurations.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "kind": {
     "description": "Kind of service virtual hub. This is metadata used for the Azure portal experience for Route Server.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "p2SVpnGateway": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The P2SVpnGateway associated with this VirtualHub.",
     "type": "object"
    },
    "preferredRoutingGateway": {
     "description": "The preferred gateway to route on-prem traffic",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the virtual hub resource.",
     "type": "string"
    },
    "routeMaps": {
     "description": "List of references to RouteMaps.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "routeTable": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualHubRouteTableResponse",
     "description": "The routeTable associated with this virtual hub.",
     "type": "object"
    },
    "routingState": {
     "description": "The routing state.",
     "type": "string"
    },
    "securityPartnerProvider": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The securityPartnerProvider associated with this VirtualHub.",
     "type": "object"
    },
    "securityProviderName": {
     "description": "The Security Provider name.",
     "type": "string"
    },
    "sku": {
     "description": "The sku of this VirtualHub.",
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    },
    "virtualHubRouteTableV2s": {
     "description": "List of all virtual hub route table v2s associated with this VirtualHub.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualHubRouteTableV2Response",
      "type": "object"
     },
     "type": "array"
    },
    "virtualRouterAsn": {
     "description": "VirtualRouter ASN.",
     "type": "number"
    },
    "virtualRouterAutoScaleConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualRouterAutoScaleConfigurationResponse",
     "description": "The VirtualHub Router autoscale configuration.",
     "type": "object"
    },
    "virtualRouterIps": {
     "description": "VirtualRouter IPs.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "virtualWan": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The VirtualWAN to which the VirtualHub belongs.",
     "type": "object"
    },
    "vpnGateway": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The VpnGateway associated with this VirtualHub.",
     "type": "object"
    }
   },
   "required": [
    "azureApiVersion",
    "bgpConnections",
    "etag",
    "ipConfigurations",
    "kind",
    "location",
    "name",
    "provisioningState",
    "routeMaps",
    "routingState",
    "type"
   ],
   "requiredInputs": [
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualHubBgpConnection": {
   "description": "Virtual Appliance Site resource.",
   "inputProperties": {
    "connectionName": {
     "description": "The name of the connection.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "hubVirtualNetworkConnection": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "The reference to the HubVirtualNetworkConnection resource.",
     "type": "object"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "Name of the connection.",
     "type": "string"
    },
    "peerAsn": {
     "description": "Peer ASN.",
     "type": "number"
    },
    "peerIp": {
     "description": "Peer IP.",
     "type": "string"
    },
    "resourceGroupName": {
     "description": "The resource group name of the VirtualHub.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "virtualHubName": {
     "description": "The name of the VirtualHub.",
     "type": "string",
     "willReplaceOnChanges": true
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "connectionState": {
     "description": "The current state of the VirtualHub to Peer.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "hubVirtualNetworkConnection": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The reference to the HubVirtualNetworkConnection resource.",
     "type": "object"
    },
    "name": {
     "description": "Name of the connection.",
     "type": "string"
    },
    "peerAsn": {
     "description": "Peer ASN.",
     "type": "number"
    },
    "peerIp": {
     "description": "Peer IP.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the resource.",
     "type": "string"
    },
    "type": {
     "description": "Connection type.",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "connectionState",
    "etag",
    "provisioningState",
    "type"
   ],
   "requiredInputs": [
    "resourceGroupName",
    "virtualHubName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualHubIpConfiguration": {
   "description": "IpConfigurations.",
   "inputProperties": {
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "ipConfigName": {
     "description": "The name of the ipconfig.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "name": {
     "description": "Name of the Ip Configuration.",
     "type": "string"
    },
    "privateIPAddress": {
     "description": "The private IP address of the IP configuration.",
     "type": "string"
    },
    "privateIPAllocationMethod": {
     "description": "The private IP address allocation method.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:IPAllocationMethod"
      }
     ]
    },
    "publicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddress",
     "description": "The reference to the public IP resource.",
     "type": "object"
    },
    "resourceGroupName": {
     "description": "The resource group name of the VirtualHub.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:Subnet",
     "description": "The reference to the subnet resource.",
     "type": "object"
    },
    "virtualHubName": {
     "description": "The name of the VirtualHub.",
     "type": "string",
     "willReplaceOnChanges": true
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "name": {
     "description": "Name of the Ip Configuration.",
     "type": "string"
    },
    "privateIPAddress": {
     "description": "The private IP address of the IP configuration.",
     "type": "string"
    },
    "privateIPAllocationMethod": {
     "description": "The private IP address allocation method.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the IP configuration resource.",
     "type": "string"
    },
    "publicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddressResponse",
     "description": "The reference to the public IP resource.",
     "type": "object"
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubnetResponse",
     "description": "The reference to the subnet resource.",
     "type": "object"
    },
    "type": {
     "description": "Ipconfiguration type.",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "provisioningState",
    "type"
   ],
   "requiredInputs": [
    "resourceGroupName",
    "virtualHubName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualHubRouteTableV2": {
   "description": "VirtualHubRouteTableV2 Resource.",
   "inputProperties": {
    "attachedConnections": {
     "description": "List of all connections attached to this route table v2.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "resourceGroupName": {
     "description": "The resource group name of the VirtualHub.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "routeTableName": {
     "description": "The name of the VirtualHubRouteTableV2.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "routes": {
     "description": "List of all routes.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualHubRouteV2",
      "type": "object"
     },
     "type": "array"
    },
    "virtualHubName": {
     "description": "The name of the VirtualHub.",
     "type": "string",
     "willReplaceOnChanges": true
    }
   },
   "properties": {
    "attachedConnections": {
     "description": "List of all connections attached to this route table v2.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the virtual hub route table v2 resource.",
     "type": "string"
    },
    "routes": {
     "description": "List of all routes.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualHubRouteV2Response",
      "type": "object"
     },
     "type": "array"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "provisioningState"
   ],
   "requiredInputs": [
    "resourceGroupName",
    "virtualHubName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualNetwork": {
   "description": "Virtual Network resource.",
   "inputProperties": {
    "addressSpace": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpace",
     "description": "The AddressSpace that contains an array of IP address ranges that can be used by subnets.",
     "type": "object"
    },
    "bgpCommunities": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkBgpCommunities",
     "description": "Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET.",
     "type": "object"
    },
    "ddosProtectionPlan": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "The DDoS protection plan associated with the virtual network.",
     "type": "object"
    },
    "dhcpOptions": {
     "$ref": "#/types/azure-native_network_v20230201:network:DhcpOptions",
     "description": "The dhcpOptions that contains an array of DNS servers available to VMs deployed in the virtual network.",
     "type": "object"
    },
    "enableDdosProtection": {
     "default": false,
     "description": "Indicates if DDoS protection is enabled for all the protected resources in the virtual network. It requires a DDoS protection plan associated with the resource.",
     "type": "boolean"
    },
    "enableVmProtection": {
     "default": false,
     "description": "Indicates if VM protection is enabled for all the subnets in the virtual network.",
     "type": "boolean"
    },
    "encryption": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkEncryption",
     "description": "Indicates if encryption is enabled on virtual network and if VM without encryption is allowed in encrypted VNet.",
     "type": "object"
    },
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocation",
     "description": "The extended location of the virtual network.",
     "type": "object"
    },
    "flowTimeoutInMinutes": {
     "description": "The FlowTimeout value (in minutes) for the Virtual Network",
     "type": "integer"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "ipAllocations": {
     "description": "Array of IpAllocation which reference this VNET.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
      "type": "object"
     },
     "type": "array"
    },
    "location": {
     "description": "Resource location.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "subnets": {
     "description": "A list of subnets in a Virtual Network.\nThese are also available as standalone resources. Do not mix inline and standalone resource as they will conflict with each other, leading to resources deletion.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:Subnet",
      "type": "object"
     },
     "type": "array"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "virtualNetworkName": {
     "description": "The name of the virtual network.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "virtualNetworkPeerings": {
     "description": "A list of peerings in a Virtual Network.\nThese are also available as standalone resources. Do not mix inline and standalone resource as they will conflict with each other, leading to resources deletion.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkPeering",
      "type": "object"
     },
     "type": "array"
    }
   },
   "properties": {
    "addressSpace": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpaceResponse",
     "description": "The AddressSpace that contains an array of IP address ranges that can be used by subnets.",
     "type": "object"
    },
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "bgpCommunities": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkBgpCommunitiesResponse",
     "description": "Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET.",
     "type": "object"
    },
    "ddosProtectionPlan": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The DDoS protection plan associated with the virtual network.",
     "type": "object"
    },
    "dhcpOptions": {
     "$ref": "#/types/azure-native_network_v20230201:network:DhcpOptionsResponse",
     "description": "The dhcpOptions that contains an array of DNS servers available to VMs deployed in the virtual network.",
     "type": "object"
    },
    "enableDdosProtection": {
     "default": false,
     "description": "Indicates if DDoS protection is enabled for all the protected resources in the virtual network. It requires a DDoS protection plan associated with the resource.",
     "type": "boolean"
    },
    "enableVmProtection": {
     "default": false,
     "description": "Indicates if VM protection is enabled for all the subnets in the virtual network.",
     "type": "boolean"
    },
    "encryption": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkEncryptionResponse",
     "description": "Indicates if encryption is enabled on virtual network and if VM without encryption is allowed in encrypted VNet.",
     "type": "object"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse",
     "description": "The extended location of the virtual network.",
     "type": "object"
    },
    "flowLogs": {
     "description": "A collection of references to flow log resources.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:FlowLogResponse",
      "type": "object"
     },
     "type": "array"
    },
    "flowTimeoutInMinutes": {
     "description": "The FlowTimeout value (in minutes) for the Virtual Network",
     "type": "integer"
    },
    "ipAllocations": {
     "description": "Array of IpAllocation which reference this VNET.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the virtual network resource.",
     "type": "string"
    },
    "resourceGuid": {
     "description": "The resourceGuid property of the Virtual Network resource.",
     "type": "string"
    },
    "subnets": {
     "description": "A list of subnets in a Virtual Network.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubnetResponse",
      "type": "object"
     },
     "type": "array"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    },
    "virtualNetworkPeerings": {
     "description": "A list of peerings in a Virtual Network.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkPeeringResponse",
      "type": "object"
     },
     "type": "array"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "flowLogs",
    "name",
    "provisioningState",
    "resourceGuid",
    "type"
   ],
   "requiredInputs": [
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualNetworkGateway": {
   "description": "A common class for general resource information.",
   "inputProperties": {
    "activeActive": {
     "description": "ActiveActive flag.",
     "type": "boolean"
    },
    "adminState": {
     "description": "Property to indicate if the Express Route Gateway serves traffic when there are multiple Express Route Gateways in the vnet",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:AdminState"
      }
     ]
    },
    "allowRemoteVnetTraffic": {
     "description": "Configure this gateway to accept traffic from other Azure Virtual Networks. This configuration does not support connectivity to Azure Virtual WAN.",
     "type": "boolean"
    },
    "allowVirtualWanTraffic": {
     "description": "Configures this gateway to accept traffic from remote Virtual WAN networks.",
     "type": "boolean"
    },
    "bgpSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:BgpSettings",
     "description": "Virtual network gateway's BGP speaker settings.",
     "type": "object"
    },
    "customRoutes": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpace",
     "description": "The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient.",
     "type": "object"
    },
    "disableIPSecReplayProtection": {
     "description": "disableIPSecReplayProtection flag.",
     "type": "boolean"
    },
    "enableBgp": {
     "description": "Whether BGP is enabled for this virtual network gateway or not.",
     "type": "boolean"
    },
    "enableBgpRouteTranslationForNat": {
     "description": "EnableBgpRouteTranslationForNat flag.",
     "type": "boolean"
    },
    "enableDnsForwarding": {
     "description": "Whether dns forwarding is enabled or not.",
     "type": "boolean"
    },
    "enablePrivateIpAddress": {
     "description": "Whether private IP needs to be enabled on this gateway for connections or not.",
     "type": "boolean"
    },
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocation",
     "description": "The extended location of type local virtual network gateway.",
     "type": "object"
    },
    "gatewayDefaultSite": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "The reference to the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.",
     "type": "object"
    },
    "gatewayType": {
     "description": "The type of this virtual network gateway.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:VirtualNetworkGatewayType"
      }
     ]
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "ipConfigurations": {
     "description": "IP configurations for virtual network gateway.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewayIPConfiguration",
      "type": "object"
     },
     "type": "array"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "natRules": {
     "description": "NatRules for virtual network gateway.\nThese are also available as standalone resources. Do not mix inline and standalone resource as they will conflict with each other, leading to resources deletion.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewayNatRule",
      "type": "object"
     },
     "type": "array"
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewaySku",
     "description": "The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.",
     "type": "object"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "vNetExtendedLocationResourceId": {
     "description": "Customer vnet resource id. VirtualNetworkGateway of type local gateway is associated with the customer vnet.",
     "type": "string"
    },
    "virtualNetworkGatewayName": {
     "description": "The name of the virtual network gateway.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "virtualNetworkGatewayPolicyGroups": {
     "description": "The reference to the VirtualNetworkGatewayPolicyGroup resource which represents the available VirtualNetworkGatewayPolicyGroup for the gateway.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewayPolicyGroup",
      "type": "object"
     },
     "type": "array"
    },
    "vpnClientConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:VpnClientConfiguration",
     "description": "The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations.",
     "type": "object"
    },
    "vpnGatewayGeneration": {
     "description": "The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:VpnGatewayGeneration"
      }
     ]
    },
    "vpnType": {
     "description": "The type of this virtual network gateway.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:VpnType"
      }
     ]
    }
   },
   "properties": {
    "activeActive": {
     "description": "ActiveActive flag.",
     "type": "boolean"
    },
    "adminState": {
     "description": "Property to indicate if the Express Route Gateway serves traffic when there are multiple Express Route Gateways in the vnet",
     "type": "string"
    },
    "allowRemoteVnetTraffic": {
     "description": "Configure this gateway to accept traffic from other Azure Virtual Networks. This configuration does not support connectivity to Azure Virtual WAN.",
     "type": "boolean"
    },
    "allowVirtualWanTraffic": {
     "description": "Configures this gateway to accept traffic from remote Virtual WAN networks.",
     "type": "boolean"
    },
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "bgpSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:BgpSettingsResponse",
     "description": "Virtual network gateway's BGP speaker settings.",
     "type": "object"
    },
    "customRoutes": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpaceResponse",
     "description": "The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient.",
     "type": "object"
    },
    "disableIPSecReplayProtection": {
     "description": "disableIPSecReplayProtection flag.",
     "type": "boolean"
    },
    "enableBgp": {
     "description": "Whether BGP is enabled for this virtual network gateway or not.",
     "type": "boolean"
    },
    "enableBgpRouteTranslationForNat": {
     "description": "EnableBgpRouteTranslationForNat flag.",
     "type": "boolean"
    },
    "enableDnsForwarding": {
     "description": "Whether dns forwarding is enabled or not.",
     "type": "boolean"
    },
    "enablePrivateIpAddress": {
     "description": "Whether private IP needs to be enabled on this gateway for connections or not.",
     "type": "boolean"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse",
     "description": "The extended location of type local virtual network gateway.",
     "type": "object"
    },
    "gatewayDefaultSite": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The reference to the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.",
     "type": "object"
    },
    "gatewayType": {
     "description": "The type of this virtual network gateway.",
     "type": "string"
    },
    "inboundDnsForwardingEndpoint": {
     "description": "The IP address allocated by the gateway to which dns requests can be sent.",
     "type": "string"
    },
    "ipConfigurations": {
     "description": "IP configurations for virtual network gateway.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewayIPConfigurationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "natRules": {
     "description": "NatRules for virtual network gateway.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewayNatRuleResponse",
      "type": "object"
     },
     "type": "array"
    },
    "provisioningState": {
     "description": "The provisioning state of the virtual network gateway resource.",
     "type": "string"
    },
    "resourceGuid": {
     "description": "The resource GUID property of the virtual network gateway resource.",
     "type": "string"
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewaySkuResponse",
     "description": "The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.",
     "type": "object"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    },
    "vNetExtendedLocationResourceId": {
     "description": "Customer vnet resource id. VirtualNetworkGateway of type local gateway is associated with the customer vnet.",
     "type": "string"
    },
    "virtualNetworkGatewayPolicyGroups": {
     "description": "The reference to the VirtualNetworkGatewayPolicyGroup resource which represents the available VirtualNetworkGatewayPolicyGroup for the gateway.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewayPolicyGroupResponse",
      "type": "object"
     },
     "type": "array"
    },
    "vpnClientConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:VpnClientConfigurationResponse",
     "description": "The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations.",
     "type": "object"
    },
    "vpnGatewayGeneration": {
     "description": "The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.",
     "type": "string"
    },
    "vpnType": {
     "description": "The type of this virtual network gateway.",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "inboundDnsForwardingEndpoint",
    "name",
    "provisioningState",
    "resourceGuid",
    "type"
   ],
   "requiredInputs": [
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualNetworkGatewayConnection": {
   "description": "A common class for general resource information.",
   "inputProperties": {
    "authorizationKey": {
     "description": "The authorizationKey.",
     "type": "string"
    },
    "connectionMode": {
     "description": "The connection mode for this connection.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:VirtualNetworkGatewayConnectionMode"
      }
     ]
    },
    "connectionProtocol": {
     "description": "Connection protocol used for this connection.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:VirtualNetworkGatewayConnectionProtocol"
      }
     ]
    },
    "connectionType": {
     "description": "Gateway connection type.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:VirtualNetworkGatewayConnectionType"
      }
     ]
    },
    "dpdTimeoutSeconds": {
     "description": "The dead peer detection timeout of this connection in seconds.",
     "type": "integer"
    },
    "egressNatRules": {
     "description": "List of egress NatRules.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
      "type": "object"
     },
     "type": "array"
    },
    "enableBgp": {
     "description": "EnableBgp flag.",
     "type": "boolean"
    },
    "enablePrivateLinkFastPath": {
     "description": "Bypass the ExpressRoute gateway when accessing private-links. ExpressRoute FastPath (expressRouteGatewayBypass) must be enabled.",
     "type": "boolean"
    },
    "expressRouteGatewayBypass": {
     "description": "Bypass ExpressRoute Gateway for data forwarding.",
     "type": "boolean"
    },
    "gatewayCustomBgpIpAddresses": {
     "description": "GatewayCustomBgpIpAddresses to be used for virtual network gateway Connection.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:GatewayCustomBgpIpAddressIpConfiguration",
      "type": "object"
     },
     "type": "array"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "ingressNatRules": {
     "description": "List of ingress NatRules.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
      "type": "object"
     },
     "type": "array"
    },
    "ipsecPolicies": {
     "description": "The IPSec Policies to be considered by this connection.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IpsecPolicy",
      "type": "object"
     },
     "type": "array"
    },
    "localNetworkGateway2": {
     "$ref": "#/types/azure-native_network_v20230201:network:LocalNetworkGateway",
     "description": "The reference to local network gateway resource.",
     "type": "object"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "peer": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "The reference to peerings resource.",
     "type": "object"
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "routingWeight": {
     "description": "The routing weight.",
     "type": "integer"
    },
    "sharedKey": {
     "description": "The IPSec shared key.",
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "trafficSelectorPolicies": {
     "description": "The Traffic Selector Policies to be considered by this connection.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:TrafficSelectorPolicy",
      "type": "object"
     },
     "type": "array"
    },
    "useLocalAzureIpAddress": {
     "description": "Use private local Azure IP for the connection.",
     "type": "boolean"
    },
    "usePolicyBasedTrafficSelectors": {
     "description": "Enable policy-based traffic selectors.",
     "type": "boolean"
    },
    "virtualNetworkGateway1": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGateway",
     "description": "The reference to virtual network gateway resource.",
     "type": "object"
    },
    "virtualNetworkGateway2": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGateway",
     "description": "The reference to virtual network gateway resource.",
     "type": "object"
    },
    "virtualNetworkGatewayConnectionName": {
     "description": "The name of the virtual network gateway connection.",
     "type": "string",
     "willReplaceOnChanges": true
    }
   },
   "properties": {
    "authorizationKey": {
     "description": "The authorizationKey.",
     "type": "string"
    },
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "connectionMode": {
     "description": "The connection mode for this connection.",
     "type": "string"
    },
    "connectionProtocol": {
     "description": "Connection protocol used for this connection.",
     "type": "string"
    },
    "connectionStatus": {
     "description": "Virtual Network Gateway connection status.",
     "type": "string"
    },
    "connectionType": {
     "description": "Gateway connection type.",
     "type": "string"
    },
    "dpdTimeoutSeconds": {
     "description": "The dead peer detection timeout of this connection in seconds.",
     "type": "integer"
    },
    "egressBytesTransferred": {
     "description": "The egress bytes transferred in this connection.",
     "type": "number"
    },
    "egressNatRules": {
     "description": "List of egress NatRules.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "enableBgp": {
     "description": "EnableBgp flag.",
     "type": "boolean"
    },
    "enablePrivateLinkFastPath": {
     "description": "Bypass the ExpressRoute gateway when accessing private-links. ExpressRoute FastPath (expressRouteGatewayBypass) must be enabled.",
     "type": "boolean"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "expressRouteGatewayBypass": {
     "description": "Bypass ExpressRoute Gateway for data forwarding.",
     "type": "boolean"
    },
    "gatewayCustomBgpIpAddresses": {
     "description": "GatewayCustomBgpIpAddresses to be used for virtual network gateway Connection.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:GatewayCustomBgpIpAddressIpConfigurationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "ingressBytesTransferred": {
     "description": "The ingress bytes transferred in this connection.",
     "type": "number"
    },
    "ingressNatRules": {
     "description": "List of ingress NatRules.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "ipsecPolicies": {
     "description": "The IPSec Policies to be considered by this connection.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IpsecPolicyResponse",
      "type": "object"
     },
     "type": "array"
    },
    "localNetworkGateway2": {
     "$ref": "#/types/azure-native_network_v20230201:network:LocalNetworkGatewayResponse",
     "description": "The reference to local network gateway resource.",
     "type": "object"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "peer": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The reference to peerings resource.",
     "type": "object"
    },
    "provisioningState": {
     "description": "The provisioning state of the virtual network gateway connection resource.",
     "type": "string"
    },
    "resourceGuid": {
     "description": "The resource GUID property of the virtual network gateway connection resource.",
     "type": "string"
    },
    "routingWeight": {
     "description": "The routing weight.",
     "type": "integer"
    },
    "sharedKey": {
     "description": "The IPSec shared key.",
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "trafficSelectorPolicies": {
     "description": "The Traffic Selector Policies to be considered by this connection.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:TrafficSelectorPolicyResponse",
      "type": "object"
     },
     "type": "array"
    },
    "tunnelConnectionStatus": {
     "description": "Collection of all tunnels' connection health status.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:TunnelConnectionHealthResponse",
      "type": "object"
     },
     "type": "array"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    },
    "useLocalAzureIpAddress": {
     "description": "Use private local Azure IP for the connection.",
     "type": "boolean"
    },
    "usePolicyBasedTrafficSelectors": {
     "description": "Enable policy-based traffic selectors.",
     "type": "boolean"
    },
    "virtualNetworkGateway1": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewayResponse",
     "description": "The reference to virtual network gateway resource.",
     "type": "object"
    },
    "virtualNetworkGateway2": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewayResponse",
     "description": "The reference to virtual network gateway resource.",
     "type": "object"
    }
   },
   "required": [
    "azureApiVersion",
    "connectionStatus",
    "connectionType",
    "egressBytesTransferred",
    "etag",
    "ingressBytesTransferred",
    "name",
    "provisioningState",
    "resourceGuid",
    "tunnelConnectionStatus",
    "type",
    "virtualNetworkGateway1"
   ],
   "requiredInputs": [
    "connectionType",
    "resourceGroupName",
    "virtualNetworkGateway1"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualNetworkGatewayNatRule": {
   "description": "VirtualNetworkGatewayNatRule Resource.",
   "inputProperties": {
    "externalMappings": {
     "description": "The private IP address external mapping for NAT.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnNatRuleMapping",
      "type": "object"
     },
     "type": "array"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "internalMappings": {
     "description": "The private IP address internal mapping for NAT.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnNatRuleMapping",
      "type": "object"
     },
     "type": "array"
    },
    "ipConfigurationId": {
     "description": "The IP Configuration ID this NAT rule applies to.",
     "type": "string"
    },
    "mode": {
     "description": "The Source NAT direction of a VPN NAT.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:VpnNatRuleMode"
      }
     ]
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "natRuleName": {
     "description": "The name of the nat rule.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "resourceGroupName": {
     "description": "The resource group name of the Virtual Network Gateway.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "type": {
     "description": "The type of NAT rule for VPN NAT.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:VpnNatRuleType"
      }
     ]
    },
    "virtualNetworkGatewayName": {
     "description": "The name of the gateway.",
     "type": "string",
     "willReplaceOnChanges": true
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "externalMappings": {
     "description": "The private IP address external mapping for NAT.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnNatRuleMappingResponse",
      "type": "object"
     },
     "type": "array"
    },
    "internalMappings": {
     "description": "The private IP address internal mapping for NAT.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnNatRuleMappingResponse",
      "type": "object"
     },
     "type": "array"
    },
    "ipConfigurationId": {
     "description": "The IP Configuration ID this NAT rule applies to.",
     "type": "string"
    },
    "mode": {
     "description": "The Source NAT direction of a VPN NAT.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the NAT Rule resource.",
     "type": "string"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "provisioningState",
    "type"
   ],
   "requiredInputs": [
    "resourceGroupName",
    "virtualNetworkGatewayName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualNetworkPeering": {
   "description": "Peerings in a virtual network resource.",
   "inputProperties": {
    "allowForwardedTraffic": {
     "description": "Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network.",
     "type": "boolean"
    },
    "allowGatewayTransit": {
     "description": "If gateway links can be used in remote virtual networking to link to this virtual network.",
     "type": "boolean"
    },
    "allowVirtualNetworkAccess": {
     "description": "Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space.",
     "type": "boolean"
    },
    "doNotVerifyRemoteGateways": {
     "description": "If we need to verify the provisioning state of the remote gateway.",
     "type": "boolean"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "peeringState": {
     "description": "The status of the virtual network peering.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:VirtualNetworkPeeringState"
      }
     ]
    },
    "peeringSyncLevel": {
     "description": "The peering sync status of the virtual network peering.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:VirtualNetworkPeeringLevel"
      }
     ]
    },
    "remoteAddressSpace": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpace",
     "description": "The reference to the address space peered with the remote virtual network.",
     "type": "object"
    },
    "remoteBgpCommunities": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkBgpCommunities",
     "description": "The reference to the remote virtual network's Bgp Communities.",
     "type": "object"
    },
    "remoteVirtualNetwork": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "The reference to the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).",
     "type": "object"
    },
    "remoteVirtualNetworkAddressSpace": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpace",
     "description": "The reference to the current address space of the remote virtual network.",
     "type": "object"
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "syncRemoteAddressSpace": {
     "description": "Parameter indicates the intention to sync the peering with the current address space on the remote vNet after it's updated.",
     "type": "string"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    },
    "useRemoteGateways": {
     "description": "If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.",
     "type": "boolean"
    },
    "virtualNetworkName": {
     "description": "The name of the virtual network.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "virtualNetworkPeeringName": {
     "description": "The name of the peering.",
     "type": "string",
     "willReplaceOnChanges": true
    }
   },
   "properties": {
    "allowForwardedTraffic": {
     "description": "Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network.",
     "type": "boolean"
    },
    "allowGatewayTransit": {
     "description": "If gateway links can be used in remote virtual networking to link to this virtual network.",
     "type": "boolean"
    },
    "allowVirtualNetworkAccess": {
     "description": "Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space.",
     "type": "boolean"
    },
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "doNotVerifyRemoteGateways": {
     "description": "If we need to verify the provisioning state of the remote gateway.",
     "type": "boolean"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "peeringState": {
     "description": "The status of the virtual network peering.",
     "type": "string"
    },
    "peeringSyncLevel": {
     "description": "The peering sync status of the virtual network peering.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the virtual network peering resource.",
     "type": "string"
    },
    "remoteAddressSpace": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpaceResponse",
     "description": "The reference to the address space peered with the remote virtual network.",
     "type": "object"
    },
    "remoteBgpCommunities": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkBgpCommunitiesResponse",
     "description": "The reference to the remote virtual network's Bgp Communities.",
     "type": "object"
    },
    "remoteVirtualNetwork": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The reference to the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).",
     "type": "object"
    },
    "remoteVirtualNetworkAddressSpace": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpaceResponse",
     "description": "The reference to the current address space of the remote virtual network.",
     "type": "object"
    },
    "remoteVirtualNetworkEncryption": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkEncryptionResponse",
     "description": "The reference to the remote virtual network's encryption",
     "type": "object"
    },
    "resourceGuid": {
     "description": "The resourceGuid property of the Virtual Network peering resource.",
     "type": "string"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    },
    "useRemoteGateways": {
     "description": "If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.",
     "type": "boolean"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "provisioningState",
    "remoteVirtualNetworkEncryption",
    "resourceGuid"
   ],
   "requiredInputs": [
    "resourceGroupName",
    "virtualNetworkName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualNetworkTap": {
   "description": "Virtual Network Tap resource.",
   "inputProperties": {
    "destinationLoadBalancerFrontEndIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:FrontendIPConfiguration",
     "description": "The reference to the private IP address on the internal Load Balancer that will receive the tap.",
     "type": "object"
    },
    "destinationNetworkInterfaceIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceIPConfiguration",
     "description": "The reference to the private IP Address of the collector nic that will receive the tap.",
     "type": "object"
    },
    "destinationPort": {
     "description": "The VXLAN destination port that will receive the tapped traffic.",
     "type": "integer"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "tapName": {
     "description": "The name of the virtual network tap.",
     "type": "string",
     "willReplaceOnChanges": true
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "destinationLoadBalancerFrontEndIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:FrontendIPConfigurationResponse",
     "description": "The reference to the private IP address on the internal Load Balancer that will receive the tap.",
     "type": "object"
    },
    "destinationNetworkInterfaceIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceIPConfigurationResponse",
     "description": "The reference to the private IP Address of the collector nic that will receive the tap.",
     "type": "object"
    },
    "destinationPort": {
     "description": "The VXLAN destination port that will receive the tapped traffic.",
     "type": "integer"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "networkInterfaceTapConfigurations": {
     "description": "Specifies the list of resource IDs for the network interface IP configuration that needs to be tapped.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceTapConfigurationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "provisioningState": {
     "description": "The provisioning state of the virtual network tap resource.",
     "type": "string"
    },
    "resourceGuid": {
     "description": "The resource GUID property of the virtual network tap resource.",
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "name",
    "networkInterfaceTapConfigurations",
    "provisioningState",
    "resourceGuid",
    "type"
   ],
   "requiredInputs": [
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualRouter": {
   "description": "VirtualRouter Resource.",
   "inputProperties": {
    "hostedGateway": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "The Gateway on which VirtualRouter is hosted.",
     "type": "object"
    },
    "hostedSubnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "The Subnet on which VirtualRouter is hosted.",
     "type": "object"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "virtualRouterAsn": {
     "description": "VirtualRouter ASN.",
     "type": "number"
    },
    "virtualRouterIps": {
     "description": "VirtualRouter IPs.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "virtualRouterName": {
     "description": "The name of the Virtual Router.",
     "type": "string",
     "willReplaceOnChanges": true
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "hostedGateway": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The Gateway on which VirtualRouter is hosted.",
     "type": "object"
    },
    "hostedSubnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The Subnet on which VirtualRouter is hosted.",
     "type": "object"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "peerings": {
     "description": "List of references to VirtualRouterPeerings.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "provisioningState": {
     "description": "The provisioning state of the resource.",
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    },
    "virtualRouterAsn": {
     "description": "VirtualRouter ASN.",
     "type": "number"
    },
    "virtualRouterIps": {
     "description": "VirtualRouter IPs.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "name",
    "peerings",
    "provisioningState",
    "type"
   ],
   "requiredInputs": [
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualRouterPeering": {
   "description": "Virtual Router Peering resource.",
   "inputProperties": {
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "Name of the virtual router peering that is unique within a virtual router.",
     "type": "string"
    },
    "peerAsn": {
     "description": "Peer ASN.",
     "type": "number"
    },
    "peerIp": {
     "description": "Peer IP.",
     "type": "string"
    },
    "peeringName": {
     "description": "The name of the Virtual Router Peering.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "virtualRouterName": {
     "description": "The name of the Virtual Router.",
     "type": "string",
     "willReplaceOnChanges": true
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "name": {
     "description": "Name of the virtual router peering that is unique within a virtual router.",
     "type": "string"
    },
    "peerAsn": {
     "description": "Peer ASN.",
     "type": "number"
    },
    "peerIp": {
     "description": "Peer IP.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the resource.",
     "type": "string"
    },
    "type": {
     "description": "Peering type.",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "provisioningState",
    "type"
   ],
   "requiredInputs": [
    "resourceGroupName",
    "virtualRouterName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualWan": {
   "description": "VirtualWAN Resource.",
   "inputProperties": {
    "allowBranchToBranchTraffic": {
     "description": "True if branch to branch traffic is allowed.",
     "type": "boolean"
    },
    "allowVnetToVnetTraffic": {
     "description": "True if Vnet to Vnet traffic is allowed.",
     "type": "boolean"
    },
    "disableVpnEncryption": {
     "description": "Vpn encryption to be disabled or not.",
     "type": "boolean"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "resourceGroupName": {
     "description": "The resource group name of the VirtualWan.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "The type of the VirtualWAN.",
     "type": "string"
    },
    "virtualWANName": {
     "description": "The name of the VirtualWAN being created or updated.",
     "type": "string",
     "willReplaceOnChanges": true
    }
   },
   "properties": {
    "allowBranchToBranchTraffic": {
     "description": "True if branch to branch traffic is allowed.",
     "type": "boolean"
    },
    "allowVnetToVnetTraffic": {
     "description": "True if Vnet to Vnet traffic is allowed.",
     "type": "boolean"
    },
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "disableVpnEncryption": {
     "description": "Vpn encryption to be disabled or not.",
     "type": "boolean"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "office365LocalBreakoutCategory": {
     "description": "The office local breakout category.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the virtual WAN resource.",
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    },
    "virtualHubs": {
     "description": "List of VirtualHubs in the VirtualWAN.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "vpnSites": {
     "description": "List of VpnSites in the VirtualWAN.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "location",
    "name",
    "office365LocalBreakoutCategory",
    "provisioningState",
    "type",
    "virtualHubs",
    "vpnSites"
   ],
   "requiredInputs": [
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VpnConnection": {
   "description": "VpnConnection Resource.",
   "inputProperties": {
    "connectionBandwidth": {
     "description": "Expected bandwidth in MBPS.",
     "type": "integer"
    },
    "connectionName": {
     "description": "The name of the connection.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "dpdTimeoutSeconds": {
     "description": "DPD timeout in seconds for vpn connection.",
     "type": "integer"
    },
    "enableBgp": {
     "description": "EnableBgp flag.",
     "type": "boolean"
    },
    "enableInternetSecurity": {
     "description": "Enable internet security.",
     "type": "boolean"
    },
    "enableRateLimiting": {
     "description": "EnableBgp flag.",
     "type": "boolean"
    },
    "gatewayName": {
     "description": "The name of the gateway.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "ipsecPolicies": {
     "description": "The IPSec Policies to be considered by this connection.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IpsecPolicy",
      "type": "object"
     },
     "type": "array"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "remoteVpnSite": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Id of the connected vpn site.",
     "type": "object"
    },
    "resourceGroupName": {
     "description": "The resource group name of the VpnGateway.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "routingConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfiguration",
     "description": "The Routing Configuration indicating the associated and propagated route tables on this connection.",
     "type": "object"
    },
    "routingWeight": {
     "description": "Routing weight for vpn connection.",
     "type": "integer"
    },
    "sharedKey": {
     "description": "SharedKey for the vpn connection.",
     "type": "string"
    },
    "trafficSelectorPolicies": {
     "description": "The Traffic Selector Policies to be considered by this connection.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:TrafficSelectorPolicy",
      "type": "object"
     },
     "type": "array"
    },
    "useLocalAzureIpAddress": {
     "description": "Use local azure ip to initiate connection.",
     "type": "boolean"
    },
    "usePolicyBasedTrafficSelectors": {
     "description": "Enable policy-based traffic selectors.",
     "type": "boolean"
    },
    "vpnConnectionProtocolType": {
     "description": "Connection protocol used for this connection.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:VirtualNetworkGatewayConnectionProtocol"
      }
     ]
    },
    "vpnLinkConnections": {
     "description": "List of all vpn site link connections to the gateway.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnSiteLinkConnection",
      "type": "object"
     },
     "type": "array"
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "connectionBandwidth": {
     "description": "Expected bandwidth in MBPS.",
     "type": "integer"
    },
    "connectionStatus": {
     "description": "The connection status.",
     "type": "string"
    },
    "dpdTimeoutSeconds": {
     "description": "DPD timeout in seconds for vpn connection.",
     "type": "integer"
    },
    "egressBytesTransferred": {
     "description": "Egress bytes transferred.",
     "type": "number"
    },
    "enableBgp": {
     "description": "EnableBgp flag.",
     "type": "boolean"
    },
    "enableInternetSecurity": {
     "description": "Enable internet security.",
     "type": "boolean"
    },
    "enableRateLimiting": {
     "description": "EnableBgp flag.",
     "type": "boolean"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "ingressBytesTransferred": {
     "description": "Ingress bytes transferred.",
     "type": "number"
    },
    "ipsecPolicies": {
     "description": "The IPSec Policies to be considered by this connection.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IpsecPolicyResponse",
      "type": "object"
     },
     "type": "array"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the VPN connection resource.",
     "type": "string"
    },
    "remoteVpnSite": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Id of the connected vpn site.",
     "type": "object"
    },
    "routingConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfigurationResponse",
     "description": "The Routing Configuration indicating the associated and propagated route tables on this connection.",
     "type": "object"
    },
    "routingWeight": {
     "description": "Routing weight for vpn connection.",
     "type": "integer"
    },
    "sharedKey": {
     "description": "SharedKey for the vpn connection.",
     "type": "string"
    },
    "trafficSelectorPolicies": {
     "description": "The Traffic Selector Policies to be considered by this connection.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:TrafficSelectorPolicyResponse",
      "type": "object"
     },
     "type": "array"
    },
    "useLocalAzureIpAddress": {
     "description": "Use local azure ip to initiate connection.",
     "type": "boolean"
    },
    "usePolicyBasedTrafficSelectors": {
     "description": "Enable policy-based traffic selectors.",
     "type": "boolean"
    },
    "vpnConnectionProtocolType": {
     "description": "Connection protocol used for this connection.",
     "type": "string"
    },
    "vpnLinkConnections": {
     "description": "List of all vpn site link connections to the gateway.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnSiteLinkConnectionResponse",
      "type": "object"
     },
     "type": "array"
    }
   },
   "required": [
    "azureApiVersion",
    "connectionStatus",
    "egressBytesTransferred",
    "etag",
    "ingressBytesTransferred",
    "provisioningState"
   ],
   "requiredInputs": [
    "gatewayName",
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VpnGateway": {
   "description": "VpnGateway Resource.",
   "inputProperties": {
    "bgpSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:BgpSettings",
     "description": "Local network gateway's BGP speaker settings.",
     "type": "object"
    },
    "connections": {
     "description": "List of all vpn connections to the gateway.\nThese are also available as standalone resources. Do not mix inline and standalone resource as they will conflict with each other, leading to resources deletion.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnConnection",
      "type": "object"
     },
     "type": "array"
    },
    "enableBgpRouteTranslationForNat": {
     "description": "Enable BGP routes translation for NAT on this VpnGateway.",
     "type": "boolean"
    },
    "gatewayName": {
     "description": "The name of the gateway.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "isRoutingPreferenceInternet": {
     "description": "Enable Routing Preference property for the Public IP Interface of the VpnGateway.",
     "type": "boolean"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "natRules": {
     "description": "List of all the nat Rules associated with the gateway.\nThese are also available as standalone resources. Do not mix inline and standalone resource as they will conflict with each other, leading to resources deletion.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnGatewayNatRule",
      "type": "object"
     },
     "type": "array"
    },
    "resourceGroupName": {
     "description": "The resource group name of the VpnGateway.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "virtualHub": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "The VirtualHub to which the gateway belongs.",
     "type": "object"
    },
    "vpnGatewayScaleUnit": {
     "description": "The scale unit for this vpn gateway.",
     "type": "integer"
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "bgpSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:BgpSettingsResponse",
     "description": "Local network gateway's BGP speaker settings.",
     "type": "object"
    },
    "connections": {
     "description": "List of all vpn connections to the gateway.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnConnectionResponse",
      "type": "object"
     },
     "type": "array"
    },
    "enableBgpRouteTranslationForNat": {
     "description": "Enable BGP routes translation for NAT on this VpnGateway.",
     "type": "boolean"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "ipConfigurations": {
     "description": "List of all IPs configured on the gateway.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnGatewayIpConfigurationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "isRoutingPreferenceInternet": {
     "description": "Enable Routing Preference property for the Public IP Interface of the VpnGateway.",
     "type": "boolean"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "natRules": {
     "description": "List of all the nat Rules associated with the gateway.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnGatewayNatRuleResponse",
      "type": "object"
     },
     "type": "array"
    },
    "provisioningState": {
     "description": "The provisioning state of the VPN gateway resource.",
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    },
    "virtualHub": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The VirtualHub to which the gateway belongs.",
     "type": "object"
    },
    "vpnGatewayScaleUnit": {
     "description": "The scale unit for this vpn gateway.",
     "type": "integer"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "ipConfigurations",
    "location",
    "name",
    "provisioningState",
    "type"
   ],
   "requiredInputs": [
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VpnServerConfiguration": {
   "description": "VpnServerConfiguration Resource.",
   "inputProperties": {
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "properties": {
     "$ref": "#/types/azure-native_network_v20230201:network:VpnServerConfigurationProperties",
     "description": "Properties of the P2SVpnServer configuration.",
     "type": "object"
    },
    "resourceGroupName": {
     "description": "The resource group name of the VpnServerConfiguration.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "vpnServerConfigurationName": {
     "description": "The name of the VpnServerConfiguration being created or updated.",
     "type": "string",
     "willReplaceOnChanges": true
    }
   },
   "properties": {
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "properties": {
     "$ref": "#/types/azure-native_network_v20230201:network:VpnServerConfigurationPropertiesResponse",
     "description": "Properties of the P2SVpnServer configuration.",
     "type": "object"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "name",
    "properties",
    "type"
   ],
   "requiredInputs": [
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VpnSite": {
   "description": "VpnSite Resource.",
   "inputProperties": {
    "addressSpace": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpace",
     "description": "The AddressSpace that contains an array of IP address ranges.",
     "type": "object"
    },
    "bgpProperties": {
     "$ref": "#/types/azure-native_network_v20230201:network:BgpSettings",
     "description": "The set of bgp properties.",
     "type": "object"
    },
    "deviceProperties": {
     "$ref": "#/types/azure-native_network_v20230201:network:DeviceProperties",
     "description": "The device properties.",
     "type": "object"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "ipAddress": {
     "description": "The ip-address for the vpn-site.",
     "type": "string"
    },
    "isSecuritySite": {
     "description": "IsSecuritySite flag.",
     "type": "boolean"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "o365Policy": {
     "$ref": "#/types/azure-native_network_v20230201:network:O365PolicyProperties",
     "description": "Office365 Policy.",
     "type": "object"
    },
    "resourceGroupName": {
     "description": "The resource group name of the VpnSite.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "siteKey": {
     "description": "The key for vpn-site that can be used for connections.",
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "virtualWan": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "The VirtualWAN to which the vpnSite belongs.",
     "type": "object"
    },
    "vpnSiteLinks": {
     "description": "List of all vpn site links.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnSiteLink",
      "type": "object"
     },
     "type": "array"
    },
    "vpnSiteName": {
     "description": "The name of the VpnSite being created or updated.",
     "type": "string",
     "willReplaceOnChanges": true
    }
   },
   "properties": {
    "addressSpace": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpaceResponse",
     "description": "The AddressSpace that contains an array of IP address ranges.",
     "type": "object"
    },
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "bgpProperties": {
     "$ref": "#/types/azure-native_network_v20230201:network:BgpSettingsResponse",
     "description": "The set of bgp properties.",
     "type": "object"
    },
    "deviceProperties": {
     "$ref": "#/types/azure-native_network_v20230201:network:DevicePropertiesResponse",
     "description": "The device properties.",
     "type": "object"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "ipAddress": {
     "description": "The ip-address for the vpn-site.",
     "type": "string"
    },
    "isSecuritySite": {
     "description": "IsSecuritySite flag.",
     "type": "boolean"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "o365Policy": {
     "$ref": "#/types/azure-native_network_v20230201:network:O365PolicyPropertiesResponse",
     "description": "Office365 Policy.",
     "type": "object"
    },
    "provisioningState": {
     "description": "The provisioning state of the VPN site resource.",
     "type": "string"
    },
    "siteKey": {
     "description": "The key for vpn-site that can be used for connections.",
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    },
    "virtualWan": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The VirtualWAN to which the vpnSite belongs.",
     "type": "object"
    },
    "vpnSiteLinks": {
     "description": "List of all vpn site links.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnSiteLinkResponse",
      "type": "object"
     },
     "type": "array"
    }
   },
   "required": [
    "azureApiVersion",
    "etag",
    "location",
    "name",
    "provisioningState",
    "type"
   ],
   "requiredInputs": [
    "resourceGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:WebApplicationFirewallPolicy": {
   "description": "Defines web application firewall policy.",
   "inputProperties": {
    "customRules": {
     "description": "The custom rules inside the policy.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:WebApplicationFirewallCustomRule",
      "type": "object"
     },
     "type": "array"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "managedRules": {
     "$ref": "#/types/azure-native_network_v20230201:network:ManagedRulesDefinition",
     "description": "Describes the managedRules structure.",
     "type": "object"
    },
    "policyName": {
     "description": "The name of the policy.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "policySettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:PolicySettings",
     "description": "The PolicySettings for policy.",
     "type": "object"
    },
    "resourceGroupName": {
     "description": "The name of the resource group.",
     "type": "string",
     "willReplaceOnChanges": true
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    }
   },
   "properties": {
    "applicationGateways": {
     "description": "A collection of references to application gateways.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayResponse",
      "type": "object"
     },
     "type": "array"
    },
    "azureApiVersion": {
     "description": "The Azure API version of the resource.",
     "type": "string"
    },
    "customRules": {
     "description": "The custom rules inside the policy.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:WebApplicationFirewallCustomRuleResponse",
      "type": "object"
     },
     "type": "array"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "httpListeners": {
     "description": "A collection of references to application gateway http listeners.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "managedRules": {
     "$ref": "#/types/azure-native_network_v20230201:network:ManagedRulesDefinitionResponse",
     "description": "Describes the managedRules structure.",
     "type": "object"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "pathBasedRules": {
     "description": "A collection of references to application gateway path rules.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "policySettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:PolicySettingsResponse",
     "description": "The PolicySettings for policy.",
     "type": "object"
    },
    "provisioningState": {
     "description": "The provisioning state of the web application firewall policy resource.",
     "type": "string"
    },
    "resourceState": {
     "description": "Resource status of the policy.",
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "applicationGateways",
    "azureApiVersion",
    "etag",
    "httpListeners",
    "managedRules",
    "name",
    "pathBasedRules",
    "provisioningState",
    "resourceState",
    "type"
   ],
   "requiredInputs": [
    "managedRules",
    "resourceGroupName"
   ],
   "type": "object"
  }
 },
 "types": {
  "azure-native:network:Access": {
   "description": "The access type of the rule.",
   "enum": [
    {
     "value": "Allow"
    },
    {
     "value": "Deny"
    }
   ],
   "type": "string"
  },
  "azure-native:network:ActionType": {
   "description": "Describes the override action to be applied when rule matches.",
   "enum": [
    {
     "value": "AnomalyScoring"
    },
    {
     "value": "Allow"
    },
    {
     "value": "Block"
    },
    {
     "value": "Log"
    }
   ],
   "type": "string"
  },
  "azure-native:network:AddressPrefixType": {
   "description": "Address prefix type.",
   "enum": [
    {
     "value": "IPPrefix"
    },
    {
     "value": "ServiceTag"
    }
   ],
   "type": "string"
  },
  "azure-native:network:AdminRuleKind": {
   "description": "Whether the rule is custom or default.",
   "enum": [
    {
     "value": "Custom"
    },
    {
     "value": "Default"
    }
   ],
   "type": "string"
  },
  "azure-native:network:AdminState": {
   "description": "Property to indicate if the Express Route Gateway serves traffic when there are multiple Express Route Gateways in the vnet",
   "enum": [
    {
     "value": "Enabled"
    },
    {
     "value": "Disabled"
    }
   ],
   "type": "string"
  },
  "azure-native:network:ApplicationGatewayClientRevocationOptions": {
   "description": "Verify client certificate revocation status.",
   "enum": [
    {
     "value": "None"
    },
    {
     "value": "OCSP"
    }
   ],
   "type": "string"
  },
  "azure-native:network:ApplicationGatewayCookieBasedAffinity": {
   "description": "Cookie based affinity.",
   "enum": [
    {
     "value": "Enabled"
    },
    {
     "value": "Disabled"
    }
   ],
   "type": "string"
  },
  "azure-native:network:ApplicationGatewayCustomErrorStatusCode": {
   "description": "Status code of the application gateway custom error.",
   "enum": [
    {
     "value": "HttpStatus400"
    },
    {
     "value": "HttpStatus403"
    },
    {
     "value": "HttpStatus404"
    },
    {
     "value": "HttpStatus405"
    },
    {
     "value": "HttpStatus408"
    },
    {
     "value": "HttpStatus500"
    },
    {
     "value": "HttpStatus502"
    },
    {
     "value": "HttpStatus503"
    },
    {
     "value": "HttpStatus504"
    }
   ],
   "type": "string"
  },
  "azure-native:network:ApplicationGatewayFirewallMode": {
   "description": "Web application firewall mode.",
   "enum": [
    {
     "value": "Detection"
    },
    {
     "value": "Prevention"
    }
   ],
   "type": "string"
  },
  "azure-native:network:ApplicationGatewayFirewallRateLimitDuration": {
   "description": "Duration over which Rate Limit policy will be applied. Applies only when ruleType is RateLimitRule.",
   "enum": [
    {
     "value": "OneMin"
    },
    {
     "value": "FiveMins"
    }
   ],
   "type": "string"
  },
  "azure-native:network:ApplicationGatewayFirewallUserSessionVariable": {
   "description": "User Session clause variable.",
   "enum": [
    {
     "value": "ClientAddr"
    },
    {
     "value": "GeoLocation"
    },
    {
     "value": "None"
    }
   ],
   "type": "string"
  },
  "azure-native:network:ApplicationGatewayLoadDistributionAlgorithm": {
   "description": "Load Distribution Targets resource of an application gateway.",
   "enum": [
    {
     "value": "RoundRobin"
    },
    {
     "value": "LeastConnections"
    },
    {
     "value": "IpHash"
    }
   ],
   "type": "string"
  },
  "azure-native:network:ApplicationGatewayProtocol": {
   "description": "The protocol used for the probe.",
   "enum": [
    {
     "value": "Http"
    },
    {
     "value": "Https"
    },
    {
     "value": "Tcp"
    },
    {
     "value": "Tls"
    }
   ],
   "type": "string"
  },
  "azure-native:network:ApplicationGatewayRedirectType": {
   "description": "HTTP redirection type.",
   "enum": [
    {
     "value": "Permanent"
    },
    {
     "value": "Found"
    },
    {
     "value": "SeeOther"
    },
    {
     "value": "Temporary"
    }
   ],
   "type": "string"
  },
  "azure-native:network:ApplicationGatewayRequestRoutingRuleType": {
   "description": "Rule type.",
   "enum": [
    {
     "value": "Basic"
    },
    {
     "value": "PathBasedRouting"
    }
   ],
   "type": "string"
  },
  "azure-native:network:ApplicationGatewaySkuName": {
   "description": "Name of an application gateway SKU.",
   "enum": [
    {
     "value": "Standard_Small"
    },
    {
     "value": "Standard_Medium"
    },
    {
     "value": "Standard_Large"
    },
    {
     "value": "WAF_Medium"
    },
    {
     "value": "WAF_Large"
    },
    {
     "value": "Standard_v2"
    },
    {
     "value": "WAF_v2"
    }
   ],
   "type": "string"
  },
  "azure-native:network:ApplicationGatewaySslCipherSuite": {
   "description": "Ssl cipher suites enums.",
   "enum": [
    {
     "value": "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384"
    },
    {
     "value": "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"
    },
    {
     "value": "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA"
    },
    {
     "value": "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA"
    },
    {
     "value": "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384"
    },
    {
     "value": "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256"
    },
    {
     "value": "TLS_DHE_RSA_WITH_AES_256_CBC_SHA"
    },
    {
     "value": "TLS_DHE_RSA_WITH_AES_128_CBC_SHA"
    },
    {
     "value": "TLS_RSA_WITH_AES_256_GCM_SHA384"
    },
    {
     "value": "TLS_RSA_WITH_AES_128_GCM_SHA256"
    },
    {
     "value": "TLS_RSA_WITH_AES_256_CBC_SHA256"
    },
    {
     "value": "TLS_RSA_WITH_AES_128_CBC_SHA256"
    },
    {
     "value": "TLS_RSA_WITH_AES_256_CBC_SHA"
    },
    {
     "value": "TLS_RSA_WITH_AES_128_CBC_SHA"
    },
    {
     "value": "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384"
    },
    {
     "value": "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256"
    },
    {
     "value": "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384"
    },
    {
     "value": "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256"
    },
    {
     "value": "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA"
    },
    {
     "value": "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA"
    },
    {
     "value": "TLS_DHE_DSS_WITH_AES_256_CBC_SHA256"
    },
    {
     "value": "TLS_DHE_DSS_WITH_AES_128_CBC_SHA256"
    },
    {
     "value": "TLS_DHE_DSS_WITH_AES_256_CBC_SHA"
    },
    {
     "value": "TLS_DHE_DSS_WITH_AES_128_CBC_SHA"
    },
    {
     "value": "TLS_RSA_WITH_3DES_EDE_CBC_SHA"
    },
    {
     "value": "TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA"
    },
    {
     "value": "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"
    },
    {
     "value": "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
    }
   ],
   "type": "string"
  },
  "azure-native:network:ApplicationGatewaySslPolicyName": {
   "description": "Name of Ssl predefined policy.",
   "enum": [
    {
     "value": "AppGwSslPolicy20150501"
    },
    {
     "value": "AppGwSslPolicy20170401"
    },
    {
     "value": "AppGwSslPolicy20170401S"
    },
    {
     "value": "AppGwSslPolicy20220101"
    },
    {
     "value": "AppGwSslPolicy20220101S"
    }
   ],
   "type": "string"
  },
  "azure-native:network:ApplicationGatewaySslPolicyType": {
   "description": "Type of Ssl Policy.",
   "enum": [
    {
     "value": "Predefined"
    },
    {
     "value": "Custom"
    },
    {
     "value": "CustomV2"
    }
   ],
   "type": "string"
  },
  "azure-native:network:ApplicationGatewaySslProtocol": {
   "description": "Minimum version of Ssl protocol to be supported on application gateway.",
   "enum": [
    {
     "value": "TLSv1_0"
    },
    {
     "value": "TLSv1_1"
    },
    {
     "value": "TLSv1_2"
    },
    {
     "value": "TLSv1_3"
    }
   ],
   "type": "string"
  },
  "azure-native:network:ApplicationGatewayTier": {
   "description": "Tier of an application gateway.",
   "enum": [
    {
     "value": "Standard"
    },
    {
     "value": "WAF"
    },
    {
     "value": "Standard_v2"
    },
    {
     "value": "WAF_v2"
    }
   ],
   "type": "string"
  },
  "azure-native:network:AuthorizationUseStatus": {
   "description": "The authorization use status.",
   "enum": [
    {
     "value": "Available"
    },
    {
     "value": "InUse"
    }
   ],
   "type": "string"
  },
  "azure-native:network:AutoLearnPrivateRangesMode": {
   "description": "The operation mode for automatically learning private ranges to not be SNAT",
   "enum": [
    {
     "value": "Enabled"
    },
    {
     "value": "Disabled"
    }
   ],
   "type": "string"
  },
  "azure-native:network:AzureFirewallApplicationRuleProtocolType": {
   "description": "Protocol type.",
   "enum": [
    {
     "value": "Http"
    },
    {
     "value": "Https"
    },
    {
     "value": "Mssql"
    }
   ],
   "type": "string"
  },
  "azure-native:network:AzureFirewallNatRCActionType": {
   "description": "The type of action.",
   "enum": [
    {
     "value": "Snat"
    },
    {
     "value": "Dnat"
    }
   ],
   "type": "string"
  },
  "azure-native:network:AzureFirewallNetworkRuleProtocol": {
   "description": "The protocol of a Network Rule resource.",
   "enum": [
    {
     "value": "TCP"
    },
    {
     "value": "UDP"
    },
    {
     "value": "Any"
    },
    {
     "value": "ICMP"
    }
   ],
   "type": "string"
  },
  "azure-native:network:AzureFirewallRCActionType": {
   "description": "The type of action.",
   "enum": [
    {
     "value": "Allow"
    },
    {
     "value": "Deny"
    }
   ],
   "type": "string"
  },
  "azure-native:network:AzureFirewallSkuName": {
   "description": "Name of an Azure Firewall SKU.",
   "enum": [
    {
     "value": "AZFW_VNet"
    },
    {
     "value": "AZFW_Hub"
    }
   ],
   "type": "string"
  },
  "azure-native:network:AzureFirewallSkuTier": {
   "description": "Tier of an Azure Firewall.",
   "enum": [
    {
     "value": "Standard"
    },
    {
     "value": "Premium"
    },
    {
     "value": "Basic"
    }
   ],
   "type": "string"
  },
  "azure-native:network:AzureFirewallThreatIntelMode": {
   "description": "The operation mode for Threat Intelligence.",
   "enum": [
    {
     "value": "Alert"
    },
    {
     "value": "Deny"
    },
    {
     "value": "Off"
    }
   ],
   "type": "string"
  },
  "azure-native:network:BastionHostSkuName": {
   "description": "The name of this Bastion Host.",
   "enum": [
    {
     "value": "Basic"
    },
    {
     "value": "Standard"
    }
   ],
   "type": "string"
  },
  "azure-native:network:CommissionedState": {
   "description": "The commissioned state of the Custom IP Prefix.",
   "enum": [
    {
     "value": "Provisioning"
    },
    {
     "value": "Provisioned"
    },
    {
     "value": "Commissioning"
    },
    {
     "value": "CommissionedNoInternetAdvertise"
    },
    {
     "value": "Commissioned"
    },
    {
     "value": "Decommissioning"
    },
    {
     "value": "Deprovisioning"
    },
    {
     "value": "Deprovisioned"
    }
   ],
   "type": "string"
  },
  "azure-native:network:ConfigurationType": {
   "description": "Configuration Deployment Type.",
   "enum": [
    {
     "value": "SecurityAdmin"
    },
    {
     "value": "Connectivity"
    }
   ],
   "type": "string"
  },
  "azure-native:network:ConnectionMonitorEndpointFilterItemType": {
   "description": "The type of item included in the filter. Currently only 'AgentAddress' is supported.",
   "enum": [
    {
     "value": "AgentAddress"
    }
   ],
   "type": "string"
  },
  "azure-native:network:ConnectionMonitorEndpointFilterType": {
   "description": "The behavior of the endpoint filter. Currently only 'Include' is supported.",
   "enum": [
    {
     "value": "Include"
    }
   ],
   "type": "string"
  },
  "azure-native:network:ConnectionMonitorTestConfigurationProtocol": {
   "description": "The protocol to use in test evaluation.",
   "enum": [
    {
     "value": "Tcp"
    },
    {
     "value": "Http"
    },
    {
     "value": "Icmp"
    }
   ],
   "type": "string"
  },
  "azure-native:network:ConnectivityTopology": {
   "description": "Connectivity topology type.",
   "enum": [
    {
     "value": "HubAndSpoke"
    },
    {
     "value": "Mesh"
    }
   ],
   "type": "string"
  },
  "azure-native:network:CoverageLevel": {
   "description": "Test coverage for the endpoint.",
   "enum": [
    {
     "value": "Default"
    },
    {
     "value": "Low"
    },
    {
     "value": "BelowAverage"
    },
    {
     "value": "Average"
    },
    {
     "value": "AboveAverage"
    },
    {
     "value": "Full"
    }
   ],
   "type": "string"
  },
  "azure-native:network:CustomIpPrefixType": {
   "description": "Type of custom IP prefix. Should be Singular, Parent, or Child.",
   "enum": [
    {
     "value": "Singular"
    },
    {
     "value": "Parent"
    },
    {
     "value": "Child"
    }
   ],
   "type": "string"
  },
  "azure-native:network:DdosSettingsProtectionMode": {
   "description": "The DDoS protection mode of the public IP",
   "enum": [
    {
     "value": "VirtualNetworkInherited"
    },
    {
     "value": "Enabled"
    },
    {
     "value": "Disabled"
    }
   ],
   "type": "string"
  },
  "azure-native:network:DeleteExistingPeering": {
   "description": "Flag if need to remove current existing peerings.",
   "enum": [
    {
     "value": "False"
    },
    {
     "value": "True"
    }
   ],
   "type": "string"
  },
  "azure-native:network:DeleteOptions": {
   "description": "Specify what happens to the public IP address when the VM using it is deleted",
   "enum": [
    {
     "value": "Delete"
    },
    {
     "value": "Detach"
    }
   ],
   "type": "string"
  },
  "azure-native:network:DestinationPortBehavior": {
   "description": "Destination port behavior.",
   "enum": [
    {
     "value": "None"
    },
    {
     "value": "ListenIfAvailable"
    }
   ],
   "type": "string"
  },
  "azure-native:network:DhGroup": {
   "description": "The DH Group used in IKE Phase 1 for initial SA.",
   "enum": [
    {
     "value": "None"
    },
    {
     "value": "DHGroup1"
    },
    {
     "value": "DHGroup2"
    },
    {
     "value": "DHGroup14"
    },
    {
     "value": "DHGroup2048"
    },
    {
     "value": "ECP256"
    },
    {
     "value": "ECP384"
    },
    {
     "value": "DHGroup24"
    }
   ],
   "type": "string"
  },
  "azure-native:network:EndpointType": {
   "description": "The endpoint type.",
   "enum": [
    {
     "value": "AzureVM"
    },
    {
     "value": "AzureVNet"
    },
    {
     "value": "AzureSubnet"
    },
    {
     "value": "ExternalAddress"
    },
    {
     "value": "MMAWorkspaceMachine"
    },
    {
     "value": "MMAWorkspaceNetwork"
    },
    {
     "value": "AzureArcVM"
    },
    {
     "value": "AzureVMSS"
    }
   ],
   "type": "string"
  },
  "azure-native:network:ExpressRouteCircuitPeeringState": {
   "description": "The state of peering.",
   "enum": [
    {
     "value": "Disabled"
    },
    {
     "value": "Enabled"
    }
   ],
   "type": "string"
  },
  "azure-native:network:ExpressRouteCircuitSkuFamily": {
   "description": "The family of the SKU.",
   "enum": [
    {
     "value": "UnlimitedData"
    },
    {
     "value": "MeteredData"
    }
   ],
   "type": "string"
  },
  "azure-native:network:ExpressRouteCircuitSkuTier": {
   "description": "The tier of the SKU.",
   "enum": [
    {
     "value": "Standard"
    },
    {
     "value": "Premium"
    },
    {
     "value": "Basic"
    },
    {
     "value": "Local"
    }
   ],
   "type": "string"
  },
  "azure-native:network:ExpressRouteLinkAdminState": {
   "description": "Administrative state of the physical port.",
   "enum": [
    {
     "value": "Enabled"
    },
    {
     "value": "Disabled"
    }
   ],
   "type": "string"
  },
  "azure-native:network:ExpressRouteLinkMacSecCipher": {
   "description": "Mac security cipher.",
   "enum": [
    {
     "value": "GcmAes256"
    },
    {
     "value": "GcmAes128"
    },
    {
     "value": "GcmAesXpn128"
    },
    {
     "value": "GcmAesXpn256"
    }
   ],
   "type": "string"
  },
  "azure-native:network:ExpressRouteLinkMacSecSciState": {
   "description": "Sci mode enabled/disabled.",
   "enum": [
    {
     "value": "Disabled"
    },
    {
     "value": "Enabled"
    }
   ],
   "type": "string"
  },
  "azure-native:network:ExpressRoutePeeringState": {
   "description": "The peering state.",
   "enum": [
    {
     "value": "Disabled"
    },
    {
     "value": "Enabled"
    }
   ],
   "type": "string"
  },
  "azure-native:network:ExpressRoutePeeringType": {
   "description": "The peering type.",
   "enum": [
    {
     "value": "AzurePublicPeering"
    },
    {
     "value": "AzurePrivatePeering"
    },
    {
     "value": "MicrosoftPeering"
    }
   ],
   "type": "string"
  },
  "azure-native:network:ExpressRoutePortsBillingType": {
   "description": "The billing type of the ExpressRoutePort resource.",
   "enum": [
    {
     "value": "MeteredData"
    },
    {
     "value": "UnlimitedData"
    }
   ],
   "type": "string"
  },
  "azure-native:network:ExpressRoutePortsEncapsulation": {
   "description": "Encapsulation method on physical ports.",
   "enum": [
    {
     "value": "Dot1Q"
    },
    {
     "value": "QinQ"
    }
   ],
   "type": "string"
  },
  "azure-native:network:ExtendedLocationTypes": {
   "description": "The type of the extended location.",
   "enum": [
    {
     "value": "EdgeZone"
    }
   ],
   "type": "string"
  },
  "azure-native:network:FirewallPolicyFilterRuleCollectionActionType": {
   "description": "The type of action.",
   "enum": [
    {
     "value": "Allow"
    },
    {
     "value": "Deny"
    }
   ],
   "type": "string"
  },
  "azure-native:network:FirewallPolicyIDPSQuerySortOrder": {
   "description": "Describes if results should be in ascending/descending order",
   "enum": [
    {
     "value": "Ascending"
    },
    {
     "value": "Descending"
    }
   ],
   "type": "string"
  },
  "azure-native:network:FirewallPolicyIntrusionDetectionProtocol": {
   "description": "The rule bypass protocol.",
   "enum": [
    {
     "value": "TCP"
    },
    {
     "value": "UDP"
    },
    {
     "value": "ICMP"
    },
    {
     "value": "ANY"
    }
   ],
   "type": "string"
  },
  "azure-native:network:FirewallPolicyIntrusionDetectionStateType": {
   "description": "Intrusion detection general state.",
   "enum": [
    {
     "value": "Off"
    },
    {
     "value": "Alert"
    },
    {
     "value": "Deny"
    }
   ],
   "type": "string"
  },
  "azure-native:network:FirewallPolicyNatRuleCollectionActionType": {
   "description": "The type of action.",
   "enum": [
    {
     "value": "DNAT"
    }
   ],
   "type": "string"
  },
  "azure-native:network:FirewallPolicyRuleApplicationProtocolType": {
   "description": "Protocol type.",
   "enum": [
    {
     "value": "Http"
    },
    {
     "value": "Https"
    }
   ],
   "type": "string"
  },
  "azure-native:network:FirewallPolicyRuleCollectionType": {
   "description": "The type of the rule collection.",
   "enum": [
    {
     "value": "FirewallPolicyNatRuleCollection"
    },
    {
     "value": "FirewallPolicyFilterRuleCollection"
    }
   ],
   "type": "string"
  },
  "azure-native:network:FirewallPolicyRuleNetworkProtocol": {
   "description": "The Network protocol of a Rule.",
   "enum": [
    {
     "value": "TCP"
    },
    {
     "value": "UDP"
    },
    {
     "value": "Any"
    },
    {
     "value": "ICMP"
    }
   ],
   "type": "string"
  },
  "azure-native:network:FirewallPolicyRuleType": {
   "description": "Rule Type.",
   "enum": [
    {
     "value": "ApplicationRule"
    },
    {
     "value": "NetworkRule"
    },
    {
     "value": "NatRule"
    }
   ],
   "type": "string"
  },
  "azure-native:network:FirewallPolicySkuTier": {
   "description": "Tier of Firewall Policy.",
   "enum": [
    {
     "value": "Standard"
    },
    {
     "value": "Premium"
    },
    {
     "value": "Basic"
    }
   ],
   "type": "string"
  },
  "azure-native:network:FlowLogFormatType": {
   "description": "The file type of flow log.",
   "enum": [
    {
     "value": "JSON"
    }
   ],
   "type": "string"
  },
  "azure-native:network:GatewayLoadBalancerTunnelInterfaceType": {
   "description": "Traffic type of gateway load balancer tunnel interface.",
   "enum": [
    {
     "value": "None"
    },
    {
     "value": "Internal"
    },
    {
     "value": "External"
    }
   ],
   "type": "string"
  },
  "azure-native:network:GatewayLoadBalancerTunnelProtocol": {
   "description": "Protocol of gateway load balancer tunnel interface.",
   "enum": [
    {
     "value": "None"
    },
    {
     "value": "Native"
    },
    {
     "value": "VXLAN"
    }
   ],
   "type": "string"
  },
  "azure-native:network:Geo": {
   "description": "The Geo for CIDR advertising. Should be an Geo code.",
   "enum": [
    {
     "value": "GLOBAL"
    },
    {
     "value": "AFRI"
    },
    {
     "value": "APAC"
    },
    {
     "value": "EURO"
    },
    {
     "value": "LATAM"
    },
    {
     "value": "NAM"
    },
    {
     "value": "ME"
    },
    {
     "value": "OCEANIA"
    },
    {
     "value": "AQ"
    }
   ],
   "type": "string"
  },
  "azure-native:network:GroupConnectivity": {
   "description": "Group connectivity type.",
   "enum": [
    {
     "value": "None"
    },
    {
     "value": "DirectlyConnected"
    }
   ],
   "type": "string"
  },
  "azure-native:network:HTTPConfigurationMethod": {
   "description": "The HTTP method to use.",
   "enum": [
    {
     "value": "Get"
    },
    {
     "value": "Post"
    }
   ],
   "type": "string"
  },
  "azure-native:network:HubRoutingPreference": {
   "description": "The hubRoutingPreference of this VirtualHub.",
   "enum": [
    {
     "value": "ExpressRoute"
    },
    {
     "value": "VpnGateway"
    },
    {
     "value": "ASPath"
    }
   ],
   "type": "string"
  },
  "azure-native:network:IPAllocationMethod": {
   "description": "The private IP address allocation method.",
   "enum": [
    {
     "value": "Static"
    },
    {
     "value": "Dynamic"
    }
   ],
   "type": "string"
  },
  "azure-native:network:IPVersion": {
   "description": "Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.",
   "enum": [
    {
     "value": "IPv4"
    },
    {
     "value": "IPv6"
    }
   ],
   "type": "string"
  },
  "azure-native:network:IkeEncryption": {
   "description": "The IKE encryption algorithm (IKE phase 2).",
   "enum": [
    {
     "value": "DES"
    },
    {
     "value": "DES3"
    },
    {
     "value": "AES128"
    },
    {
     "value": "AES192"
    },
    {
     "value": "AES256"
    },
    {
     "value": "GCMAES256"
    },
    {
     "value": "GCMAES128"
    }
   ],
   "type": "string"
  },
  "azure-native:network:IkeIntegrity": {
   "description": "The IKE integrity algorithm (IKE phase 2).",
   "enum": [
    {
     "value": "MD5"
    },
    {
     "value": "SHA1"
    },
    {
     "value": "SHA256"
    },
    {
     "value": "SHA384"
    },
    {
     "value": "GCMAES256"
    },
    {
     "value": "GCMAES128"
    }
   ],
   "type": "string"
  },
  "azure-native:network:IpAllocationType": {
   "description": "The type for the IpAllocation.",
   "enum": [
    {
     "value": "Undefined"
    },
    {
     "value": "Hypernet"
    }
   ],
   "type": "string"
  },
  "azure-native:network:IpsecEncryption": {
   "description": "The IPSec encryption algorithm (IKE phase 1).",
   "enum": [
    {
     "value": "None"
    },
    {
     "value": "DES"
    },
    {
     "value": "DES3"
    },
    {
     "value": "AES128"
    },
    {
     "value": "AES192"
    },
    {
     "value": "AES256"
    },
    {
     "value": "GCMAES128"
    },
    {
     "value": "GCMAES192"
    },
    {
     "value": "GCMAES256"
    }
   ],
   "type": "string"
  },
  "azure-native:network:IpsecIntegrity": {
   "description": "The IPSec integrity algorithm (IKE phase 1).",
   "enum": [
    {
     "value": "MD5"
    },
    {
     "value": "SHA1"
    },
    {
     "value": "SHA256"
    },
    {
     "value": "GCMAES128"
    },
    {
     "value": "GCMAES192"
    },
    {
     "value": "GCMAES256"
    }
   ],
   "type": "string"
  },
  "azure-native:network:IsGlobal": {
   "description": "Flag if global mesh is supported.",
   "enum": [
    {
     "value": "False"
    },
    {
     "value": "True"
    }
   ],
   "type": "string"
  },
  "azure-native:network:LoadBalancerBackendAddressAdminState": {
   "description": "A list of administrative states which once set can override health probe so that Load Balancer will always forward new connections to backend, or deny new connections and reset existing connections.",
   "enum": [
    {
     "value": "None"
    },
    {
     "value": "Up"
    },
    {
     "value": "Down"
    }
   ],
   "type": "string"
  },
  "azure-native:network:LoadBalancerOutboundRuleProtocol": {
   "description": "The protocol for the outbound rule in load balancer.",
   "enum": [
    {
     "value": "Tcp"
    },
    {
     "value": "Udp"
    },
    {
     "value": "All"
    }
   ],
   "type": "string"
  },
  "azure-native:network:LoadBalancerSkuName": {
   "description": "Name of a load balancer SKU.",
   "enum": [
    {
     "value": "Basic"
    },
    {
     "value": "Standard"
    },
    {
     "value": "Gateway"
    }
   ],
   "type": "string"
  },
  "azure-native:network:LoadBalancerSkuTier": {
   "description": "Tier of a load balancer SKU.",
   "enum": [
    {
     "value": "Regional"
    },
    {
     "value": "Global"
    }
   ],
   "type": "string"
  },
  "azure-native:network:LoadDistribution": {
   "description": "The load distribution policy for this rule.",
   "enum": [
    {
     "value": "Default"
    },
    {
     "value": "SourceIP"
    },
    {
     "value": "SourceIPProtocol"
    }
   ],
   "type": "string"
  },
  "azure-native:network:ManagedRuleEnabledState": {
   "description": "The state of the managed rule. Defaults to Disabled if not specified.",
   "enum": [
    {
     "value": "Disabled"
    },
    {
     "value": "Enabled"
    }
   ],
   "type": "string"
  },
  "azure-native:network:NatGatewaySkuName": {
   "description": "Name of Nat Gateway SKU.",
   "enum": [
    {
     "value": "Standard"
    }
   ],
   "type": "string"
  },
  "azure-native:network:NetworkIntentPolicyBasedService": {
   "description": "Network intent policy based services.",
   "enum": [
    {
     "value": "None"
    },
    {
     "value": "All"
    },
    {
     "value": "AllowRulesOnly"
    }
   ],
   "type": "string"
  },
  "azure-native:network:NetworkInterfaceAuxiliaryMode": {
   "description": "Auxiliary mode of Network Interface resource.",
   "enum": [
    {
     "value": "None"
    },
    {
     "value": "MaxConnections"
    },
    {
     "value": "Floating"
    },
    {
     "value": "AcceleratedConnections"
    }
   ],
   "type": "string"
  },
  "azure-native:network:NetworkInterfaceAuxiliarySku": {
   "description": "Auxiliary sku of Network Interface resource.",
   "enum": [
    {
     "value": "None"
    },
    {
     "value": "A1"
    },
    {
     "value": "A2"
    },
    {
     "value": "A4"
    },
    {
     "value": "A8"
    }
   ],
   "type": "string"
  },
  "azure-native:network:NetworkInterfaceMigrationPhase": {
   "description": "Migration phase of Network Interface resource.",
   "enum": [
    {
     "value": "None"
    },
    {
     "value": "Prepare"
    },
    {
     "value": "Commit"
    },
    {
     "value": "Abort"
    },
    {
     "value": "Committed"
    }
   ],
   "type": "string"
  },
  "azure-native:network:NetworkInterfaceNicType": {
   "description": "Type of Network Interface resource.",
   "enum": [
    {
     "value": "Standard"
    },
    {
     "value": "Elastic"
    }
   ],
   "type": "string"
  },
  "azure-native:network:NextStep": {
   "description": "Next step after rule is evaluated. Current supported behaviors are 'Continue'(to next rule) and 'Terminate'.",
   "enum": [
    {
     "value": "Unknown"
    },
    {
     "value": "Continue"
    },
    {
     "value": "Terminate"
    }
   ],
   "type": "string"
  },
  "azure-native:network:OutputType": {
   "description": "Connection monitor output destination type. Currently, only \"Workspace\" is supported.",
   "enum": [
    {
     "value": "Workspace"
    }
   ],
   "type": "string"
  },
  "azure-native:network:OwaspCrsExclusionEntryMatchVariable": {
   "description": "The variable to be excluded.",
   "enum": [
    {
     "value": "RequestHeaderNames"
    },
    {
     "value": "RequestCookieNames"
    },
    {
     "value": "RequestArgNames"
    },
    {
     "value": "RequestHeaderKeys"
    },
    {
     "value": "RequestHeaderValues"
    },
    {
     "value": "RequestCookieKeys"
    },
    {
     "value": "RequestCookieValues"
    },
    {
     "value": "RequestArgKeys"
    },
    {
     "value": "RequestArgValues"
    }
   ],
   "type": "string"
  },
  "azure-native:network:OwaspCrsExclusionEntrySelectorMatchOperator": {
   "description": "When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.",
   "enum": [
    {
     "value": "Equals"
    },
    {
     "value": "Contains"
    },
    {
     "value": "StartsWith"
    },
    {
     "value": "EndsWith"
    },
    {
     "value": "EqualsAny"
    }
   ],
   "type": "string"
  },
  "azure-native:network:PacketCaptureTargetType": {
   "description": "Target type of the resource provided.",
   "enum": [
    {
     "value": "AzureVM"
    },
    {
     "value": "AzureVMSS"
    }
   ],
   "type": "string"
  },
  "azure-native:network:PcProtocol": {
   "description": "Protocol to be filtered on.",
   "enum": [
    {
     "value": "TCP"
    },
    {
     "value": "UDP"
    },
    {
     "value": "Any"
    }
   ],
   "type": "string"
  },
  "azure-native:network:PfsGroup": {
   "description": "The Pfs Group used in IKE Phase 2 for new child SA.",
   "enum": [
    {
     "value": "None"
    },
    {
     "value": "PFS1"
    },
    {
     "value": "PFS2"
    },
    {
     "value": "PFS2048"
    },
    {
     "value": "ECP256"
    },
    {
     "value": "ECP384"
    },
    {
     "value": "PFS24"
    },
    {
     "value": "PFS14"
    },
    {
     "value": "PFSMM"
    }
   ],
   "type": "string"
  },
  "azure-native:network:PreferredIPVersion": {
   "description": "The preferred IP version to use in test evaluation. The connection monitor may choose to use a different version depending on other parameters.",
   "enum": [
    {
     "value": "IPv4"
    },
    {
     "value": "IPv6"
    }
   ],
   "type": "string"
  },
  "azure-native:network:PreferredRoutingGateway": {
   "description": "The preferred gateway to route on-prem traffic",
   "enum": [
    {
     "value": "ExpressRoute"
    },
    {
     "value": "VpnGateway"
    },
    {
     "value": "None"
    }
   ],
   "type": "string"
  },
  "azure-native:network:ProbeProtocol": {
   "description": "The protocol of the end point. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' or 'Https' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.",
   "enum": [
    {
     "value": "Http"
    },
    {
     "value": "Tcp"
    },
    {
     "value": "Https"
    }
   ],
   "type": "string"
  },
  "azure-native:network:ProtocolType": {
   "description": "RNM supported protocol types.",
   "enum": [
    {
     "value": "DoNotUse"
    },
    {
     "value": "Icmp"
    },
    {
     "value": "Tcp"
    },
    {
     "value": "Udp"
    },
    {
     "value": "Gre"
    },
    {
     "value": "Esp"
    },
    {
     "value": "Ah"
    },
    {
     "value": "Vxlan"
    },
    {
     "value": "All"
    }
   ],
   "type": "string"
  },
  "azure-native:network:PublicIPAddressMigrationPhase": {
   "description": "Migration phase of Public IP Address.",
   "enum": [
    {
     "value": "None"
    },
    {
     "value": "Prepare"
    },
    {
     "value": "Commit"
    },
    {
     "value": "Abort"
    },
    {
     "value": "Committed"
    }
   ],
   "type": "string"
  },
  "azure-native:network:PublicIPAddressSkuName": {
   "description": "Name of a public IP address SKU.",
   "enum": [
    {
     "value": "Basic"
    },
    {
     "value": "Standard"
    }
   ],
   "type": "string"
  },
  "azure-native:network:PublicIPAddressSkuTier": {
   "description": "Tier of a public IP address SKU.",
   "enum": [
    {
     "value": "Regional"
    },
    {
     "value": "Global"
    }
   ],
   "type": "string"
  },
  "azure-native:network:PublicIPPrefixSkuName": {
   "description": "Name of a public IP prefix SKU.",
   "enum": [
    {
     "value": "Standard"
    }
   ],
   "type": "string"
  },
  "azure-native:network:PublicIPPrefixSkuTier": {
   "description": "Tier of a public IP prefix SKU.",
   "enum": [
    {
     "value": "Regional"
    },
    {
     "value": "Global"
    }
   ],
   "type": "string"
  },
  "azure-native:network:PublicIpAddressDnsSettingsDomainNameLabelScope": {
   "description": "The domain name label scope. If a domain name label and a domain name label scope are specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system with a hashed value includes in FQDN.",
   "enum": [
    {
     "value": "TenantReuse"
    },
    {
     "value": "SubscriptionReuse"
    },
    {
     "value": "ResourceGroupReuse"
    },
    {
     "value": "NoReuse"
    }
   ],
   "type": "string"
  },
  "azure-native:network:ResourceIdentityType": {
   "description": "The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.",
   "enum": [
    {
     "value": "SystemAssigned"
    },
    {
     "value": "UserAssigned"
    },
    {
     "value": "SystemAssigned, UserAssigned"
    },
    {
     "value": "None"
    }
   ],
   "type": "string"
  },
  "azure-native:network:RouteFilterRuleType": {
   "description": "The rule type of the rule.",
   "enum": [
    {
     "value": "Community"
    }
   ],
   "type": "string"
  },
  "azure-native:network:RouteMapActionType": {
   "description": "Type of action to be taken. Supported types are 'Remove', 'Add', 'Replace', and 'Drop.'",
   "enum": [
    {
     "value": "Unknown"
    },
    {
     "value": "Remove"
    },
    {
     "value": "Add"
    },
    {
     "value": "Replace"
    },
    {
     "value": "Drop"
    }
   ],
   "type": "string"
  },
  "azure-native:network:RouteMapMatchCondition": {
   "description": "Match condition to apply RouteMap rules.",
   "enum": [
    {
     "value": "Unknown"
    },
    {
     "value": "Contains"
    },
    {
     "value": "Equals"
    },
    {
     "value": "NotContains"
    },
    {
     "value": "NotEquals"
    }
   ],
   "type": "string"
  },
  "azure-native:network:RouteNextHopType": {
   "description": "The type of Azure hop the packet should be sent to.",
   "enum": [
    {
     "value": "VirtualNetworkGateway"
    },
    {
     "value": "VnetLocal"
    },
    {
     "value": "Internet"
    },
    {
     "value": "VirtualAppliance"
    },
    {
     "value": "None"
    }
   ],
   "type": "string"
  },
  "azure-native:network:ScrubbingRuleEntryMatchOperator": {
   "description": "When matchVariable is a collection, operate on the selector to specify which elements in the collection this rule applies to.",
   "enum": [
    {
     "value": "Equals"
    },
    {
     "value": "EqualsAny"
    }
   ],
   "type": "string"
  },
  "azure-native:network:ScrubbingRuleEntryMatchVariable": {
   "description": "The variable to be scrubbed from the logs.",
   "enum": [
    {
     "value": "RequestHeaderNames"
    },
    {
     "value": "RequestCookieNames"
    },
    {
     "value": "RequestArgNames"
    },
    {
     "value": "RequestPostArgNames"
    },
    {
     "value": "RequestJSONArgNames"
    },
    {
     "value": "RequestIPAddress"
    }
   ],
   "type": "string"
  },
  "azure-native:network:ScrubbingRuleEntryState": {
   "description": "Defines the state of log scrubbing rule. Default value is Enabled.",
   "enum": [
    {
     "value": "Enabled"
    },
    {
     "value": "Disabled"
    }
   ],
   "type": "string"
  },
  "azure-native:network:SecurityConfigurationRuleAccess": {
   "description": "Indicates the access allowed for this particular rule",
   "enum": [
    {
     "value": "Allow"
    },
    {
     "value": "Deny"
    },
    {
     "value": "AlwaysAllow"
    }
   ],
   "type": "string"
  },
  "azure-native:network:SecurityConfigurationRuleDirection": {
   "description": "Indicates if the traffic matched against the rule in inbound or outbound.",
   "enum": [
    {
     "value": "Inbound"
    },
    {
     "value": "Outbound"
    }
   ],
   "type": "string"
  },
  "azure-native:network:SecurityConfigurationRuleProtocol": {
   "description": "Network protocol this rule applies to.",
   "enum": [
    {
     "value": "Tcp"
    },
    {
     "value": "Udp"
    },
    {
     "value": "Icmp"
    },
    {
     "value": "Esp"
    },
    {
     "value": "Any"
    },
    {
     "value": "Ah"
    }
   ],
   "type": "string"
  },
  "azure-native:network:SecurityProviderName": {
   "description": "The security provider name.",
   "enum": [
    {
     "value": "ZScaler"
    },
    {
     "value": "IBoss"
    },
    {
     "value": "Checkpoint"
    }
   ],
   "type": "string"
  },
  "azure-native:network:SecurityRuleAccess": {
   "description": "The network traffic is allowed or denied.",
   "enum": [
    {
     "value": "Allow"
    },
    {
     "value": "Deny"
    }
   ],
   "type": "string"
  },
  "azure-native:network:SecurityRuleDirection": {
   "description": "The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.",
   "enum": [
    {
     "value": "Inbound"
    },
    {
     "value": "Outbound"
    }
   ],
   "type": "string"
  },
  "azure-native:network:SecurityRuleProtocol": {
   "description": "Network protocol this rule applies to.",
   "enum": [
    {
     "value": "Tcp"
    },
    {
     "value": "Udp"
    },
    {
     "value": "Icmp"
    },
    {
     "value": "Esp"
    },
    {
     "value": "*"
    },
    {
     "value": "Ah"
    }
   ],
   "type": "string"
  },
  "azure-native:network:ServiceProviderProvisioningState": {
   "description": "The ServiceProviderProvisioningState state of the resource.",
   "enum": [
    {
     "value": "NotProvisioned"
    },
    {
     "value": "Provisioning"
    },
    {
     "value": "Provisioned"
    },
    {
     "value": "Deprovisioning"
    }
   ],
   "type": "string"
  },
  "azure-native:network:TransportProtocol": {
   "description": "The reference to the transport protocol used by the load balancing rule.",
   "enum": [
    {
     "value": "Udp"
    },
    {
     "value": "Tcp"
    },
    {
     "value": "All"
    }
   ],
   "type": "string"
  },
  "azure-native:network:UseHubGateway": {
   "description": "Flag if need to use hub gateway.",
   "enum": [
    {
     "value": "False"
    },
    {
     "value": "True"
    }
   ],
   "type": "string"
  },
  "azure-native:network:VirtualNetworkEncryptionEnforcement": {
   "description": "If the encrypted VNet allows VM that does not support encryption",
   "enum": [
    {
     "value": "DropUnencrypted"
    },
    {
     "value": "AllowUnencrypted"
    }
   ],
   "type": "string"
  },
  "azure-native:network:VirtualNetworkGatewayConnectionMode": {
   "description": "The connection mode for this connection.",
   "enum": [
    {
     "value": "Default"
    },
    {
     "value": "ResponderOnly"
    },
    {
     "value": "InitiatorOnly"
    }
   ],
   "type": "string"
  },
  "azure-native:network:VirtualNetworkGatewayConnectionProtocol": {
   "description": "Connection protocol used for this connection.",
   "enum": [
    {
     "value": "IKEv2"
    },
    {
     "value": "IKEv1"
    }
   ],
   "type": "string"
  },
  "azure-native:network:VirtualNetworkGatewayConnectionType": {
   "description": "Gateway connection type.",
   "enum": [
    {
     "value": "IPsec"
    },
    {
     "value": "Vnet2Vnet"
    },
    {
     "value": "ExpressRoute"
    },
    {
     "value": "VPNClient"
    }
   ],
   "type": "string"
  },
  "azure-native:network:VirtualNetworkGatewaySkuName": {
   "description": "Gateway SKU name.",
   "enum": [
    {
     "value": "Basic"
    },
    {
     "value": "HighPerformance"
    },
    {
     "value": "Standard"
    },
    {
     "value": "UltraPerformance"
    },
    {
     "value": "VpnGw1"
    },
    {
     "value": "VpnGw2"
    },
    {
     "value": "VpnGw3"
    },
    {
     "value": "VpnGw4"
    },
    {
     "value": "VpnGw5"
    },
    {
     "value": "VpnGw1AZ"
    },
    {
     "value": "VpnGw2AZ"
    },
    {
     "value": "VpnGw3AZ"
    },
    {
     "value": "VpnGw4AZ"
    },
    {
     "value": "VpnGw5AZ"
    },
    {
     "value": "ErGw1AZ"
    },
    {
     "value": "ErGw2AZ"
    },
    {
     "value": "ErGw3AZ"
    }
   ],
   "type": "string"
  },
  "azure-native:network:VirtualNetworkGatewaySkuTier": {
   "description": "Gateway SKU tier.",
   "enum": [
    {
     "value": "Basic"
    },
    {
     "value": "HighPerformance"
    },
    {
     "value": "Standard"
    },
    {
     "value": "UltraPerformance"
    },
    {
     "value": "VpnGw1"
    },
    {
     "value": "VpnGw2"
    },
    {
     "value": "VpnGw3"
    },
    {
     "value": "VpnGw4"
    },
    {
     "value": "VpnGw5"
    },
    {
     "value": "VpnGw1AZ"
    },
    {
     "value": "VpnGw2AZ"
    },
    {
     "value": "VpnGw3AZ"
    },
    {
     "value": "VpnGw4AZ"
    },
    {
     "value": "VpnGw5AZ"
    },
    {
     "value": "ErGw1AZ"
    },
    {
     "value": "ErGw2AZ"
    },
    {
     "value": "ErGw3AZ"
    }
   ],
   "type": "string"
  },
  "azure-native:network:VirtualNetworkGatewayType": {
   "description": "The type of this virtual network gateway.",
   "enum": [
    {
     "value": "Vpn"
    },
    {
     "value": "ExpressRoute"
    },
    {
     "value": "LocalGateway"
    }
   ],
   "type": "string"
  },
  "azure-native:network:VirtualNetworkPeeringLevel": {
   "description": "The peering sync status of the virtual network peering.",
   "enum": [
    {
     "value": "FullyInSync"
    },
    {
     "value": "RemoteNotInSync"
    },
    {
     "value": "LocalNotInSync"
    },
    {
     "value": "LocalAndRemoteNotInSync"
    }
   ],
   "type": "string"
  },
  "azure-native:network:VirtualNetworkPeeringState": {
   "description": "The status of the virtual network peering.",
   "enum": [
    {
     "value": "Initiated"
    },
    {
     "value": "Connected"
    },
    {
     "value": "Disconnected"
    }
   ],
   "type": "string"
  },
  "azure-native:network:VirtualNetworkPrivateEndpointNetworkPolicies": {
   "description": "Enable or Disable apply network policies on private end point in the subnet.",
   "enum": [
    {
     "value": "Enabled"
    },
    {
     "value": "Disabled"
    }
   ],
   "type": "string"
  },
  "azure-native:network:VirtualNetworkPrivateLinkServiceNetworkPolicies": {
   "description": "Enable or Disable apply network policies on private link service in the subnet.",
   "enum": [
    {
     "value": "Enabled"
    },
    {
     "value": "Disabled"
    }
   ],
   "type": "string"
  },
  "azure-native:network:VnetLocalRouteOverrideCriteria": {
   "description": "Parameter determining whether NVA in spoke vnet is bypassed for traffic with destination in spoke.",
   "enum": [
    {
     "value": "Contains"
    },
    {
     "value": "Equal"
    }
   ],
   "type": "string"
  },
  "azure-native:network:VpnAuthenticationType": {
   "description": "VPN authentication types enabled for the VpnServerConfiguration.",
   "enum": [
    {
     "value": "Certificate"
    },
    {
     "value": "Radius"
    },
    {
     "value": "AAD"
    }
   ],
   "type": "string"
  },
  "azure-native:network:VpnClientProtocol": {
   "description": "VPN client protocol enabled for the virtual network gateway.",
   "enum": [
    {
     "value": "IkeV2"
    },
    {
     "value": "SSTP"
    },
    {
     "value": "OpenVPN"
    }
   ],
   "type": "string"
  },
  "azure-native:network:VpnGatewayGeneration": {
   "description": "The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.",
   "enum": [
    {
     "value": "None"
    },
    {
     "value": "Generation1"
    },
    {
     "value": "Generation2"
    }
   ],
   "type": "string"
  },
  "azure-native:network:VpnGatewayTunnelingProtocol": {
   "description": "VPN protocol enabled for the VpnServerConfiguration.",
   "enum": [
    {
     "value": "IkeV2"
    },
    {
     "value": "OpenVPN"
    }
   ],
   "type": "string"
  },
  "azure-native:network:VpnLinkConnectionMode": {
   "description": "Vpn link connection mode.",
   "enum": [
    {
     "value": "Default"
    },
    {
     "value": "ResponderOnly"
    },
    {
     "value": "InitiatorOnly"
    }
   ],
   "type": "string"
  },
  "azure-native:network:VpnNatRuleMode": {
   "description": "The Source NAT direction of a VPN NAT.",
   "enum": [
    {
     "value": "EgressSnat"
    },
    {
     "value": "IngressSnat"
    }
   ],
   "type": "string"
  },
  "azure-native:network:VpnNatRuleType": {
   "description": "The type of NAT rule for VPN NAT.",
   "enum": [
    {
     "value": "Static"
    },
    {
     "value": "Dynamic"
    }
   ],
   "type": "string"
  },
  "azure-native:network:VpnPolicyMemberAttributeType": {
   "description": "The Vpn Policy member attribute type.",
   "enum": [
    {
     "value": "CertificateGroupId"
    },
    {
     "value": "AADGroupId"
    },
    {
     "value": "RadiusAzureGroupId"
    }
   ],
   "type": "string"
  },
  "azure-native:network:VpnType": {
   "description": "The type of this virtual network gateway.",
   "enum": [
    {
     "value": "PolicyBased"
    },
    {
     "value": "RouteBased"
    }
   ],
   "type": "string"
  },
  "azure-native:network:WebApplicationFirewallAction": {
   "description": "Type of Actions.",
   "enum": [
    {
     "value": "Allow"
    },
    {
     "value": "Block"
    },
    {
     "value": "Log"
    }
   ],
   "type": "string"
  },
  "azure-native:network:WebApplicationFirewallEnabledState": {
   "description": "The state of the policy.",
   "enum": [
    {
     "value": "Disabled"
    },
    {
     "value": "Enabled"
    }
   ],
   "type": "string"
  },
  "azure-native:network:WebApplicationFirewallMatchVariable": {
   "description": "Match Variable.",
   "enum": [
    {
     "value": "RemoteAddr"
    },
    {
     "value": "RequestMethod"
    },
    {
     "value": "QueryString"
    },
    {
     "value": "PostArgs"
    },
    {
     "value": "RequestUri"
    },
    {
     "value": "RequestHeaders"
    },
    {
     "value": "RequestBody"
    },
    {
     "value": "RequestCookies"
    }
   ],
   "type": "string"
  },
  "azure-native:network:WebApplicationFirewallMode": {
   "description": "The mode of the policy.",
   "enum": [
    {
     "value": "Prevention"
    },
    {
     "value": "Detection"
    }
   ],
   "type": "string"
  },
  "azure-native:network:WebApplicationFirewallOperator": {
   "description": "The operator to be matched.",
   "enum": [
    {
     "value": "IPMatch"
    },
    {
     "value": "Equal"
    },
    {
     "value": "Contains"
    },
    {
     "value": "LessThan"
    },
    {
     "value": "GreaterThan"
    },
    {
     "value": "LessThanOrEqual"
    },
    {
     "value": "GreaterThanOrEqual"
    },
    {
     "value": "BeginsWith"
    },
    {
     "value": "EndsWith"
    },
    {
     "value": "Regex"
    },
    {
     "value": "GeoMatch"
    },
    {
     "value": "Any"
    }
   ],
   "type": "string"
  },
  "azure-native:network:WebApplicationFirewallRuleType": {
   "description": "The rule type.",
   "enum": [
    {
     "value": "MatchRule"
    },
    {
     "value": "RateLimitRule"
    },
    {
     "value": "Invalid"
    }
   ],
   "type": "string"
  },
  "azure-native:network:WebApplicationFirewallScrubbingState": {
   "description": "State of the log scrubbing config. Default value is Enabled.",
   "enum": [
    {
     "value": "Disabled"
    },
    {
     "value": "Enabled"
    }
   ],
   "type": "string"
  },
  "azure-native:network:WebApplicationFirewallState": {
   "description": "Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.",
   "enum": [
    {
     "value": "Disabled"
    },
    {
     "value": "Enabled"
    }
   ],
   "type": "string"
  },
  "azure-native:network:WebApplicationFirewallTransform": {
   "description": "Transforms applied before matching.",
   "enum": [
    {
     "value": "Uppercase"
    },
    {
     "value": "Lowercase"
    },
    {
     "value": "Trim"
    },
    {
     "value": "UrlDecode"
    },
    {
     "value": "UrlEncode"
    },
    {
     "value": "RemoveNulls"
    },
    {
     "value": "HtmlEntityDecode"
    }
   ],
   "type": "string"
  },
  "azure-native:storage:BlobAccessTier": {
   "description": "The access tier of a storage blob.",
   "enum": [
    {
     "description": "Optimized for storing data that is accessed frequently.",
     "value": "Hot"
    },
    {
     "description": "Optimized for storing data that is infrequently accessed and stored for at least 30 days.",
     "value": "Cool"
    },
    {
     "description": "Optimized for storing data that is rarely accessed and stored for at least 180 days with flexible latency requirements, on the order of hours.",
     "value": "Archive"
    }
   ],
   "type": "string"
  },
  "azure-native:storage:BlobType": {
   "description": "The type of a storage blob to be created.",
   "enum": [
    {
     "description": "Block blobs store text and binary data. Block blobs are made up of blocks of data that can be managed individually.",
     "value": "Block"
    },
    {
     "description": "Append blobs are made up of blocks like block blobs, but are optimized for append operations.",
     "value": "Append"
    }
   ],
   "type": "string"
  },
  "azure-native_network_v20230201:network:AadAuthenticationParameters": {
   "description": "AAD Vpn authentication type related parameters.",
   "properties": {
    "aadAudience": {
     "description": "AAD Vpn authentication parameter AAD audience.",
     "type": "string"
    },
    "aadIssuer": {
     "description": "AAD Vpn authentication parameter AAD issuer.",
     "type": "string"
    },
    "aadTenant": {
     "description": "AAD Vpn authentication parameter AAD tenant.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:AadAuthenticationParametersResponse": {
   "description": "AAD Vpn authentication type related parameters.",
   "properties": {
    "aadAudience": {
     "description": "AAD Vpn authentication parameter AAD audience.",
     "type": "string"
    },
    "aadIssuer": {
     "description": "AAD Vpn authentication parameter AAD issuer.",
     "type": "string"
    },
    "aadTenant": {
     "description": "AAD Vpn authentication parameter AAD tenant.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:Action": {
   "description": "Action to be taken on a route matching a RouteMap criterion.",
   "properties": {
    "parameters": {
     "description": "List of parameters relevant to the action.For instance if type is drop then parameters has list of prefixes to be dropped.If type is add, parameters would have list of ASN numbers to be added",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:Parameter",
      "type": "object"
     },
     "type": "array"
    },
    "type": {
     "description": "Type of action to be taken. Supported types are 'Remove', 'Add', 'Replace', and 'Drop.'",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:RouteMapActionType"
      }
     ]
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ActionResponse": {
   "description": "Action to be taken on a route matching a RouteMap criterion.",
   "properties": {
    "parameters": {
     "description": "List of parameters relevant to the action.For instance if type is drop then parameters has list of prefixes to be dropped.If type is add, parameters would have list of ASN numbers to be added",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ParameterResponse",
      "type": "object"
     },
     "type": "array"
    },
    "type": {
     "description": "Type of action to be taken. Supported types are 'Remove', 'Add', 'Replace', and 'Drop.'",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ActiveConnectivityConfigurationResponse": {
   "description": "Active connectivity configuration.",
   "properties": {
    "appliesToGroups": {
     "description": "Groups for configuration",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConnectivityGroupItemResponse",
      "type": "object"
     },
     "type": "array"
    },
    "commitTime": {
     "description": "Deployment time string.",
     "type": "string"
    },
    "configurationGroups": {
     "description": "Effective configuration groups.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConfigurationGroupResponse",
      "type": "object"
     },
     "type": "array"
    },
    "connectivityTopology": {
     "description": "Connectivity topology type.",
     "type": "string"
    },
    "deleteExistingPeering": {
     "description": "Flag if need to remove current existing peerings.",
     "type": "string"
    },
    "description": {
     "description": "A description of the connectivity configuration.",
     "type": "string"
    },
    "hubs": {
     "description": "List of hubItems",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:HubResponse",
      "type": "object"
     },
     "type": "array"
    },
    "id": {
     "description": "Connectivity configuration ID.",
     "type": "string"
    },
    "isGlobal": {
     "description": "Flag if global mesh is supported.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the connectivity configuration resource.",
     "type": "string"
    },
    "region": {
     "description": "Deployment region.",
     "type": "string"
    },
    "resourceGuid": {
     "description": "Unique identifier for this resource.",
     "type": "string"
    }
   },
   "required": [
    "appliesToGroups",
    "connectivityTopology",
    "provisioningState",
    "resourceGuid"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ActiveDefaultSecurityAdminRuleResponse": {
   "description": "Network default admin rule.",
   "properties": {
    "access": {
     "description": "Indicates the access allowed for this particular rule",
     "type": "string"
    },
    "commitTime": {
     "description": "Deployment time string.",
     "type": "string"
    },
    "configurationDescription": {
     "description": "A description of the security admin configuration.",
     "type": "string"
    },
    "description": {
     "description": "A description for this rule. Restricted to 140 chars.",
     "type": "string"
    },
    "destinationPortRanges": {
     "description": "The destination port ranges.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "destinations": {
     "description": "The destination address prefixes. CIDR or destination IP ranges.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AddressPrefixItemResponse",
      "type": "object"
     },
     "type": "array"
    },
    "direction": {
     "description": "Indicates if the traffic matched against the rule in inbound or outbound.",
     "type": "string"
    },
    "flag": {
     "description": "Default rule flag.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "kind": {
     "const": "Default",
     "description": "Whether the rule is custom or default.\nExpected value is 'Default'.",
     "type": "string"
    },
    "priority": {
     "description": "The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
     "type": "integer"
    },
    "protocol": {
     "description": "Network protocol this rule applies to.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the resource.",
     "type": "string"
    },
    "region": {
     "description": "Deployment region.",
     "type": "string"
    },
    "resourceGuid": {
     "description": "Unique identifier for this resource.",
     "type": "string"
    },
    "ruleCollectionAppliesToGroups": {
     "description": "Groups for rule collection",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkManagerSecurityGroupItemResponse",
      "type": "object"
     },
     "type": "array"
    },
    "ruleCollectionDescription": {
     "description": "A description of the rule collection.",
     "type": "string"
    },
    "ruleGroups": {
     "description": "Effective configuration groups.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConfigurationGroupResponse",
      "type": "object"
     },
     "type": "array"
    },
    "sourcePortRanges": {
     "description": "The source port ranges.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "sources": {
     "description": "The CIDR or source IP ranges.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AddressPrefixItemResponse",
      "type": "object"
     },
     "type": "array"
    }
   },
   "required": [
    "access",
    "description",
    "destinationPortRanges",
    "destinations",
    "direction",
    "kind",
    "priority",
    "protocol",
    "provisioningState",
    "resourceGuid",
    "sourcePortRanges",
    "sources"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ActiveSecurityAdminRuleResponse": {
   "description": "Network admin rule.",
   "properties": {
    "access": {
     "description": "Indicates the access allowed for this particular rule",
     "type": "string"
    },
    "commitTime": {
     "description": "Deployment time string.",
     "type": "string"
    },
    "configurationDescription": {
     "description": "A description of the security admin configuration.",
     "type": "string"
    },
    "description": {
     "description": "A description for this rule. Restricted to 140 chars.",
     "type": "string"
    },
    "destinationPortRanges": {
     "description": "The destination port ranges.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "destinations": {
     "description": "The destination address prefixes. CIDR or destination IP ranges.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AddressPrefixItemResponse",
      "type": "object"
     },
     "type": "array"
    },
    "direction": {
     "description": "Indicates if the traffic matched against the rule in inbound or outbound.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "kind": {
     "const": "Custom",
     "description": "Whether the rule is custom or default.\nExpected value is 'Custom'.",
     "type": "string"
    },
    "priority": {
     "description": "The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
     "type": "integer"
    },
    "protocol": {
     "description": "Network protocol this rule applies to.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the resource.",
     "type": "string"
    },
    "region": {
     "description": "Deployment region.",
     "type": "string"
    },
    "resourceGuid": {
     "description": "Unique identifier for this resource.",
     "type": "string"
    },
    "ruleCollectionAppliesToGroups": {
     "description": "Groups for rule collection",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkManagerSecurityGroupItemResponse",
      "type": "object"
     },
     "type": "array"
    },
    "ruleCollectionDescription": {
     "description": "A description of the rule collection.",
     "type": "string"
    },
    "ruleGroups": {
     "description": "Effective configuration groups.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConfigurationGroupResponse",
      "type": "object"
     },
     "type": "array"
    },
    "sourcePortRanges": {
     "description": "The source port ranges.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "sources": {
     "description": "The CIDR or source IP ranges.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AddressPrefixItemResponse",
      "type": "object"
     },
     "type": "array"
    }
   },
   "required": [
    "access",
    "direction",
    "kind",
    "priority",
    "protocol",
    "provisioningState",
    "resourceGuid"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:AddressPrefixItem": {
   "description": "Address prefix item.",
   "properties": {
    "addressPrefix": {
     "description": "Address prefix.",
     "type": "string"
    },
    "addressPrefixType": {
     "description": "Address prefix type.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:AddressPrefixType"
      }
     ]
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:AddressPrefixItemResponse": {
   "description": "Address prefix item.",
   "properties": {
    "addressPrefix": {
     "description": "Address prefix.",
     "type": "string"
    },
    "addressPrefixType": {
     "description": "Address prefix type.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:AddressSpace": {
   "description": "AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.",
   "properties": {
    "addressPrefixes": {
     "description": "A list of address blocks reserved for this virtual network in CIDR notation.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:AddressSpaceResponse": {
   "description": "AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.",
   "properties": {
    "addressPrefixes": {
     "description": "A list of address blocks reserved for this virtual network in CIDR notation.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayAuthenticationCertificate": {
   "description": "Authentication certificates of an application gateway.",
   "properties": {
    "data": {
     "description": "Certificate public data.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "Name of the authentication certificate that is unique within an Application Gateway.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayAuthenticationCertificateResponse": {
   "description": "Authentication certificates of an application gateway.",
   "properties": {
    "data": {
     "description": "Certificate public data.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "Name of the authentication certificate that is unique within an Application Gateway.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the authentication certificate resource.",
     "type": "string"
    },
    "type": {
     "description": "Type of the resource.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayAutoscaleConfiguration": {
   "description": "Application Gateway autoscale configuration.",
   "properties": {
    "maxCapacity": {
     "description": "Upper bound on number of Application Gateway capacity.",
     "type": "integer"
    },
    "minCapacity": {
     "description": "Lower bound on number of Application Gateway capacity.",
     "type": "integer"
    }
   },
   "required": [
    "minCapacity"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayAutoscaleConfigurationResponse": {
   "description": "Application Gateway autoscale configuration.",
   "properties": {
    "maxCapacity": {
     "description": "Upper bound on number of Application Gateway capacity.",
     "type": "integer"
    },
    "minCapacity": {
     "description": "Lower bound on number of Application Gateway capacity.",
     "type": "integer"
    }
   },
   "required": [
    "minCapacity"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayBackendAddress": {
   "description": "Backend address of an application gateway.",
   "properties": {
    "fqdn": {
     "description": "Fully qualified domain name (FQDN).",
     "type": "string"
    },
    "ipAddress": {
     "description": "IP address.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayBackendAddressPool": {
   "description": "Backend Address Pool of an application gateway.",
   "properties": {
    "backendAddresses": {
     "description": "Backend addresses.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayBackendAddress",
      "type": "object"
     },
     "type": "array"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "Name of the backend address pool that is unique within an Application Gateway.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayBackendAddressPoolResponse": {
   "description": "Backend Address Pool of an application gateway.",
   "properties": {
    "backendAddresses": {
     "description": "Backend addresses.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayBackendAddressResponse",
      "type": "object"
     },
     "type": "array"
    },
    "backendIPConfigurations": {
     "description": "Collection of references to IPs defined in network interfaces.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceIPConfigurationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "Name of the backend address pool that is unique within an Application Gateway.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the backend address pool resource.",
     "type": "string"
    },
    "type": {
     "description": "Type of the resource.",
     "type": "string"
    }
   },
   "required": [
    "backendIPConfigurations",
    "etag",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayBackendAddressResponse": {
   "description": "Backend address of an application gateway.",
   "properties": {
    "fqdn": {
     "description": "Fully qualified domain name (FQDN).",
     "type": "string"
    },
    "ipAddress": {
     "description": "IP address.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayBackendHealthHttpSettingsResponse": {
   "description": "Application gateway BackendHealthHttp settings.",
   "properties": {
    "backendHttpSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayBackendHttpSettingsResponse",
     "description": "Reference to an ApplicationGatewayBackendHttpSettings resource.",
     "type": "object"
    },
    "servers": {
     "description": "List of ApplicationGatewayBackendHealthServer resources.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayBackendHealthServerResponse",
      "type": "object"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayBackendHealthServerResponse": {
   "description": "Application gateway backendhealth http settings.",
   "properties": {
    "address": {
     "description": "IP address or FQDN of backend server.",
     "type": "string"
    },
    "health": {
     "description": "Health of backend server.",
     "type": "string"
    },
    "healthProbeLog": {
     "description": "Health Probe Log.",
     "type": "string"
    },
    "ipConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceIPConfigurationResponse",
     "description": "Reference to IP configuration of backend server.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayBackendHttpSettings": {
   "description": "Backend address pool settings of an application gateway.",
   "properties": {
    "affinityCookieName": {
     "description": "Cookie name to use for the affinity cookie.",
     "type": "string"
    },
    "authenticationCertificates": {
     "description": "Array of references to application gateway authentication certificates.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
      "type": "object"
     },
     "type": "array"
    },
    "connectionDraining": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayConnectionDraining",
     "description": "Connection draining of the backend http settings resource.",
     "type": "object"
    },
    "cookieBasedAffinity": {
     "description": "Cookie based affinity.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ApplicationGatewayCookieBasedAffinity"
      }
     ]
    },
    "hostName": {
     "description": "Host header to be sent to the backend servers.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "Name of the backend http settings that is unique within an Application Gateway.",
     "type": "string"
    },
    "path": {
     "description": "Path which should be used as a prefix for all HTTP requests. Null means no path will be prefixed. Default value is null.",
     "type": "string"
    },
    "pickHostNameFromBackendAddress": {
     "description": "Whether to pick host header should be picked from the host name of the backend server. Default value is false.",
     "type": "boolean"
    },
    "port": {
     "description": "The destination port on the backend.",
     "type": "integer"
    },
    "probe": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Probe resource of an application gateway.",
     "type": "object"
    },
    "probeEnabled": {
     "description": "Whether the probe is enabled. Default value is false.",
     "type": "boolean"
    },
    "protocol": {
     "description": "The protocol used to communicate with the backend.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ApplicationGatewayProtocol"
      }
     ]
    },
    "requestTimeout": {
     "description": "Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.",
     "type": "integer"
    },
    "trustedRootCertificates": {
     "description": "Array of references to application gateway trusted root certificates.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
      "type": "object"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayBackendHttpSettingsResponse": {
   "description": "Backend address pool settings of an application gateway.",
   "properties": {
    "affinityCookieName": {
     "description": "Cookie name to use for the affinity cookie.",
     "type": "string"
    },
    "authenticationCertificates": {
     "description": "Array of references to application gateway authentication certificates.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "connectionDraining": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayConnectionDrainingResponse",
     "description": "Connection draining of the backend http settings resource.",
     "type": "object"
    },
    "cookieBasedAffinity": {
     "description": "Cookie based affinity.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "hostName": {
     "description": "Host header to be sent to the backend servers.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "Name of the backend http settings that is unique within an Application Gateway.",
     "type": "string"
    },
    "path": {
     "description": "Path which should be used as a prefix for all HTTP requests. Null means no path will be prefixed. Default value is null.",
     "type": "string"
    },
    "pickHostNameFromBackendAddress": {
     "description": "Whether to pick host header should be picked from the host name of the backend server. Default value is false.",
     "type": "boolean"
    },
    "port": {
     "description": "The destination port on the backend.",
     "type": "integer"
    },
    "probe": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Probe resource of an application gateway.",
     "type": "object"
    },
    "probeEnabled": {
     "description": "Whether the probe is enabled. Default value is false.",
     "type": "boolean"
    },
    "protocol": {
     "description": "The protocol used to communicate with the backend.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the backend HTTP settings resource.",
     "type": "string"
    },
    "requestTimeout": {
     "description": "Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.",
     "type": "integer"
    },
    "trustedRootCertificates": {
     "description": "Array of references to application gateway trusted root certificates.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "type": {
     "description": "Type of the resource.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayBackendSettings": {
   "description": "Backend address pool settings of an application gateway.",
   "properties": {
    "hostName": {
     "description": "Server name indication to be sent to the backend servers for Tls protocol.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "Name of the backend settings that is unique within an Application Gateway.",
     "type": "string"
    },
    "pickHostNameFromBackendAddress": {
     "description": "Whether to pick server name indication from the host name of the backend server for Tls protocol. Default value is false.",
     "type": "boolean"
    },
    "port": {
     "description": "The destination port on the backend.",
     "type": "integer"
    },
    "probe": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Probe resource of an application gateway.",
     "type": "object"
    },
    "protocol": {
     "description": "The protocol used to communicate with the backend.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ApplicationGatewayProtocol"
      }
     ]
    },
    "timeout": {
     "description": "Connection timeout in seconds. Application Gateway will fail the request if response is not received within ConnectionTimeout. Acceptable values are from 1 second to 86400 seconds.",
     "type": "integer"
    },
    "trustedRootCertificates": {
     "description": "Array of references to application gateway trusted root certificates.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
      "type": "object"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayBackendSettingsResponse": {
   "description": "Backend address pool settings of an application gateway.",
   "properties": {
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "hostName": {
     "description": "Server name indication to be sent to the backend servers for Tls protocol.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "Name of the backend settings that is unique within an Application Gateway.",
     "type": "string"
    },
    "pickHostNameFromBackendAddress": {
     "description": "Whether to pick server name indication from the host name of the backend server for Tls protocol. Default value is false.",
     "type": "boolean"
    },
    "port": {
     "description": "The destination port on the backend.",
     "type": "integer"
    },
    "probe": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Probe resource of an application gateway.",
     "type": "object"
    },
    "protocol": {
     "description": "The protocol used to communicate with the backend.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the backend HTTP settings resource.",
     "type": "string"
    },
    "timeout": {
     "description": "Connection timeout in seconds. Application Gateway will fail the request if response is not received within ConnectionTimeout. Acceptable values are from 1 second to 86400 seconds.",
     "type": "integer"
    },
    "trustedRootCertificates": {
     "description": "Array of references to application gateway trusted root certificates.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "type": {
     "description": "Type of the resource.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayClientAuthConfiguration": {
   "description": "Application gateway client authentication configuration.",
   "properties": {
    "verifyClientCertIssuerDN": {
     "description": "Verify client certificate issuer name on the application gateway.",
     "type": "boolean"
    },
    "verifyClientRevocation": {
     "description": "Verify client certificate revocation status.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ApplicationGatewayClientRevocationOptions"
      }
     ]
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayClientAuthConfigurationResponse": {
   "description": "Application gateway client authentication configuration.",
   "properties": {
    "verifyClientCertIssuerDN": {
     "description": "Verify client certificate issuer name on the application gateway.",
     "type": "boolean"
    },
    "verifyClientRevocation": {
     "description": "Verify client certificate revocation status.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayConnectionDraining": {
   "description": "Connection draining allows open connections to a backend server to be active for a specified time after the backend server got removed from the configuration.",
   "properties": {
    "drainTimeoutInSec": {
     "description": "The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.",
     "type": "integer"
    },
    "enabled": {
     "description": "Whether connection draining is enabled or not.",
     "type": "boolean"
    }
   },
   "required": [
    "drainTimeoutInSec",
    "enabled"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayConnectionDrainingResponse": {
   "description": "Connection draining allows open connections to a backend server to be active for a specified time after the backend server got removed from the configuration.",
   "properties": {
    "drainTimeoutInSec": {
     "description": "The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.",
     "type": "integer"
    },
    "enabled": {
     "description": "Whether connection draining is enabled or not.",
     "type": "boolean"
    }
   },
   "required": [
    "drainTimeoutInSec",
    "enabled"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayCustomError": {
   "description": "Custom error of an application gateway.",
   "properties": {
    "customErrorPageUrl": {
     "description": "Error page URL of the application gateway custom error.",
     "type": "string"
    },
    "statusCode": {
     "description": "Status code of the application gateway custom error.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ApplicationGatewayCustomErrorStatusCode"
      }
     ]
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayCustomErrorResponse": {
   "description": "Custom error of an application gateway.",
   "properties": {
    "customErrorPageUrl": {
     "description": "Error page URL of the application gateway custom error.",
     "type": "string"
    },
    "statusCode": {
     "description": "Status code of the application gateway custom error.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayFirewallDisabledRuleGroup": {
   "description": "Allows to disable rules within a rule group or an entire rule group.",
   "properties": {
    "ruleGroupName": {
     "description": "The name of the rule group that will be disabled.",
     "type": "string"
    },
    "rules": {
     "description": "The list of rules that will be disabled. If null, all rules of the rule group will be disabled.",
     "items": {
      "type": "integer"
     },
     "type": "array"
    }
   },
   "required": [
    "ruleGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayFirewallDisabledRuleGroupResponse": {
   "description": "Allows to disable rules within a rule group or an entire rule group.",
   "properties": {
    "ruleGroupName": {
     "description": "The name of the rule group that will be disabled.",
     "type": "string"
    },
    "rules": {
     "description": "The list of rules that will be disabled. If null, all rules of the rule group will be disabled.",
     "items": {
      "type": "integer"
     },
     "type": "array"
    }
   },
   "required": [
    "ruleGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayFirewallExclusion": {
   "description": "Allow to exclude some variable satisfy the condition for the WAF check.",
   "properties": {
    "matchVariable": {
     "description": "The variable to be excluded.",
     "type": "string"
    },
    "selector": {
     "description": "When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.",
     "type": "string"
    },
    "selectorMatchOperator": {
     "description": "When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.",
     "type": "string"
    }
   },
   "required": [
    "matchVariable",
    "selector",
    "selectorMatchOperator"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayFirewallExclusionResponse": {
   "description": "Allow to exclude some variable satisfy the condition for the WAF check.",
   "properties": {
    "matchVariable": {
     "description": "The variable to be excluded.",
     "type": "string"
    },
    "selector": {
     "description": "When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.",
     "type": "string"
    },
    "selectorMatchOperator": {
     "description": "When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.",
     "type": "string"
    }
   },
   "required": [
    "matchVariable",
    "selector",
    "selectorMatchOperator"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayFrontendIPConfiguration": {
   "description": "Frontend IP configuration of an application gateway.",
   "properties": {
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "Name of the frontend IP configuration that is unique within an Application Gateway.",
     "type": "string"
    },
    "privateIPAddress": {
     "description": "PrivateIPAddress of the network interface IP Configuration.",
     "type": "string"
    },
    "privateIPAllocationMethod": {
     "description": "The private IP address allocation method.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:IPAllocationMethod"
      }
     ]
    },
    "privateLinkConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Reference to the application gateway private link configuration.",
     "type": "object"
    },
    "publicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Reference to the PublicIP resource.",
     "type": "object"
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Reference to the subnet resource.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayFrontendIPConfigurationResponse": {
   "description": "Frontend IP configuration of an application gateway.",
   "properties": {
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "Name of the frontend IP configuration that is unique within an Application Gateway.",
     "type": "string"
    },
    "privateIPAddress": {
     "description": "PrivateIPAddress of the network interface IP Configuration.",
     "type": "string"
    },
    "privateIPAllocationMethod": {
     "description": "The private IP address allocation method.",
     "type": "string"
    },
    "privateLinkConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Reference to the application gateway private link configuration.",
     "type": "object"
    },
    "provisioningState": {
     "description": "The provisioning state of the frontend IP configuration resource.",
     "type": "string"
    },
    "publicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Reference to the PublicIP resource.",
     "type": "object"
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Reference to the subnet resource.",
     "type": "object"
    },
    "type": {
     "description": "Type of the resource.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayFrontendPort": {
   "description": "Frontend port of an application gateway.",
   "properties": {
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "Name of the frontend port that is unique within an Application Gateway.",
     "type": "string"
    },
    "port": {
     "description": "Frontend port.",
     "type": "integer"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayFrontendPortResponse": {
   "description": "Frontend port of an application gateway.",
   "properties": {
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "Name of the frontend port that is unique within an Application Gateway.",
     "type": "string"
    },
    "port": {
     "description": "Frontend port.",
     "type": "integer"
    },
    "provisioningState": {
     "description": "The provisioning state of the frontend port resource.",
     "type": "string"
    },
    "type": {
     "description": "Type of the resource.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayGlobalConfiguration": {
   "description": "Application Gateway global configuration.",
   "properties": {
    "enableRequestBuffering": {
     "description": "Enable request buffering.",
     "type": "boolean"
    },
    "enableResponseBuffering": {
     "description": "Enable response buffering.",
     "type": "boolean"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayGlobalConfigurationResponse": {
   "description": "Application Gateway global configuration.",
   "properties": {
    "enableRequestBuffering": {
     "description": "Enable request buffering.",
     "type": "boolean"
    },
    "enableResponseBuffering": {
     "description": "Enable response buffering.",
     "type": "boolean"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayHeaderConfiguration": {
   "description": "Header configuration of the Actions set in Application Gateway.",
   "properties": {
    "headerName": {
     "description": "Header name of the header configuration.",
     "type": "string"
    },
    "headerValue": {
     "description": "Header value of the header configuration.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayHeaderConfigurationResponse": {
   "description": "Header configuration of the Actions set in Application Gateway.",
   "properties": {
    "headerName": {
     "description": "Header name of the header configuration.",
     "type": "string"
    },
    "headerValue": {
     "description": "Header value of the header configuration.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayHttpListener": {
   "description": "Http listener of an application gateway.",
   "properties": {
    "customErrorConfigurations": {
     "description": "Custom error configurations of the HTTP listener.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayCustomError",
      "type": "object"
     },
     "type": "array"
    },
    "firewallPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Reference to the FirewallPolicy resource.",
     "type": "object"
    },
    "frontendIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Frontend IP configuration resource of an application gateway.",
     "type": "object"
    },
    "frontendPort": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Frontend port resource of an application gateway.",
     "type": "object"
    },
    "hostName": {
     "description": "Host name of HTTP listener.",
     "type": "string"
    },
    "hostNames": {
     "description": "List of Host names for HTTP Listener that allows special wildcard characters as well.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "Name of the HTTP listener that is unique within an Application Gateway.",
     "type": "string"
    },
    "protocol": {
     "description": "Protocol of the HTTP listener.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ApplicationGatewayProtocol"
      }
     ]
    },
    "requireServerNameIndication": {
     "description": "Applicable only if protocol is https. Enables SNI for multi-hosting.",
     "type": "boolean"
    },
    "sslCertificate": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "SSL certificate resource of an application gateway.",
     "type": "object"
    },
    "sslProfile": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "SSL profile resource of the application gateway.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayHttpListenerResponse": {
   "description": "Http listener of an application gateway.",
   "properties": {
    "customErrorConfigurations": {
     "description": "Custom error configurations of the HTTP listener.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayCustomErrorResponse",
      "type": "object"
     },
     "type": "array"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "firewallPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Reference to the FirewallPolicy resource.",
     "type": "object"
    },
    "frontendIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Frontend IP configuration resource of an application gateway.",
     "type": "object"
    },
    "frontendPort": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Frontend port resource of an application gateway.",
     "type": "object"
    },
    "hostName": {
     "description": "Host name of HTTP listener.",
     "type": "string"
    },
    "hostNames": {
     "description": "List of Host names for HTTP Listener that allows special wildcard characters as well.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "Name of the HTTP listener that is unique within an Application Gateway.",
     "type": "string"
    },
    "protocol": {
     "description": "Protocol of the HTTP listener.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the HTTP listener resource.",
     "type": "string"
    },
    "requireServerNameIndication": {
     "description": "Applicable only if protocol is https. Enables SNI for multi-hosting.",
     "type": "boolean"
    },
    "sslCertificate": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "SSL certificate resource of an application gateway.",
     "type": "object"
    },
    "sslProfile": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "SSL profile resource of the application gateway.",
     "type": "object"
    },
    "type": {
     "description": "Type of the resource.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayIPConfiguration": {
   "description": "IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.",
   "properties": {
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "Name of the IP configuration that is unique within an Application Gateway.",
     "type": "string"
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Reference to the subnet resource. A subnet from where application gateway gets its private address.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayIPConfigurationResponse": {
   "description": "IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.",
   "properties": {
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "Name of the IP configuration that is unique within an Application Gateway.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the application gateway IP configuration resource.",
     "type": "string"
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Reference to the subnet resource. A subnet from where application gateway gets its private address.",
     "type": "object"
    },
    "type": {
     "description": "Type of the resource.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayListener": {
   "description": "Listener of an application gateway.",
   "properties": {
    "frontendIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Frontend IP configuration resource of an application gateway.",
     "type": "object"
    },
    "frontendPort": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Frontend port resource of an application gateway.",
     "type": "object"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "Name of the listener that is unique within an Application Gateway.",
     "type": "string"
    },
    "protocol": {
     "description": "Protocol of the listener.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ApplicationGatewayProtocol"
      }
     ]
    },
    "sslCertificate": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "SSL certificate resource of an application gateway.",
     "type": "object"
    },
    "sslProfile": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "SSL profile resource of the application gateway.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayListenerResponse": {
   "description": "Listener of an application gateway.",
   "properties": {
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "frontendIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Frontend IP configuration resource of an application gateway.",
     "type": "object"
    },
    "frontendPort": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Frontend port resource of an application gateway.",
     "type": "object"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "Name of the listener that is unique within an Application Gateway.",
     "type": "string"
    },
    "protocol": {
     "description": "Protocol of the listener.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the listener resource.",
     "type": "string"
    },
    "sslCertificate": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "SSL certificate resource of an application gateway.",
     "type": "object"
    },
    "sslProfile": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "SSL profile resource of the application gateway.",
     "type": "object"
    },
    "type": {
     "description": "Type of the resource.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayLoadDistributionPolicy": {
   "description": "Load Distribution Policy of an application gateway.",
   "properties": {
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "loadDistributionAlgorithm": {
     "description": "Load Distribution Targets resource of an application gateway.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ApplicationGatewayLoadDistributionAlgorithm"
      }
     ]
    },
    "loadDistributionTargets": {
     "description": "Load Distribution Targets resource of an application gateway.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayLoadDistributionTarget",
      "type": "object"
     },
     "type": "array"
    },
    "name": {
     "description": "Name of the load distribution policy that is unique within an Application Gateway.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayLoadDistributionPolicyResponse": {
   "description": "Load Distribution Policy of an application gateway.",
   "properties": {
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "loadDistributionAlgorithm": {
     "description": "Load Distribution Targets resource of an application gateway.",
     "type": "string"
    },
    "loadDistributionTargets": {
     "description": "Load Distribution Targets resource of an application gateway.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayLoadDistributionTargetResponse",
      "type": "object"
     },
     "type": "array"
    },
    "name": {
     "description": "Name of the load distribution policy that is unique within an Application Gateway.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the Load Distribution Policy resource.",
     "type": "string"
    },
    "type": {
     "description": "Type of the resource.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayLoadDistributionTarget": {
   "description": "Load Distribution Target of an application gateway.",
   "properties": {
    "backendAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Backend address pool resource of the application gateway.",
     "type": "object"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "Name of the load distribution policy that is unique within an Application Gateway.",
     "type": "string"
    },
    "weightPerServer": {
     "description": "Weight per server. Range between 1 and 100.",
     "type": "integer"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayLoadDistributionTargetResponse": {
   "description": "Load Distribution Target of an application gateway.",
   "properties": {
    "backendAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Backend address pool resource of the application gateway.",
     "type": "object"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "Name of the load distribution policy that is unique within an Application Gateway.",
     "type": "string"
    },
    "type": {
     "description": "Type of the resource.",
     "type": "string"
    },
    "weightPerServer": {
     "description": "Weight per server. Range between 1 and 100.",
     "type": "integer"
    }
   },
   "required": [
    "etag",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayPathRule": {
   "description": "Path rule of URL path map of an application gateway.",
   "properties": {
    "backendAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Backend address pool resource of URL path map path rule.",
     "type": "object"
    },
    "backendHttpSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Backend http settings resource of URL path map path rule.",
     "type": "object"
    },
    "firewallPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Reference to the FirewallPolicy resource.",
     "type": "object"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "loadDistributionPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Load Distribution Policy resource of URL path map path rule.",
     "type": "object"
    },
    "name": {
     "description": "Name of the path rule that is unique within an Application Gateway.",
     "type": "string"
    },
    "paths": {
     "description": "Path rules of URL path map.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "redirectConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Redirect configuration resource of URL path map path rule.",
     "type": "object"
    },
    "rewriteRuleSet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Rewrite rule set resource of URL path map path rule.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayPathRuleResponse": {
   "description": "Path rule of URL path map of an application gateway.",
   "properties": {
    "backendAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Backend address pool resource of URL path map path rule.",
     "type": "object"
    },
    "backendHttpSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Backend http settings resource of URL path map path rule.",
     "type": "object"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "firewallPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Reference to the FirewallPolicy resource.",
     "type": "object"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "loadDistributionPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Load Distribution Policy resource of URL path map path rule.",
     "type": "object"
    },
    "name": {
     "description": "Name of the path rule that is unique within an Application Gateway.",
     "type": "string"
    },
    "paths": {
     "description": "Path rules of URL path map.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "provisioningState": {
     "description": "The provisioning state of the path rule resource.",
     "type": "string"
    },
    "redirectConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Redirect configuration resource of URL path map path rule.",
     "type": "object"
    },
    "rewriteRuleSet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Rewrite rule set resource of URL path map path rule.",
     "type": "object"
    },
    "type": {
     "description": "Type of the resource.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayPrivateEndpointConnectionResponse": {
   "description": "Private Endpoint connection on an application gateway.",
   "properties": {
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "linkIdentifier": {
     "description": "The consumer link id.",
     "type": "string"
    },
    "name": {
     "description": "Name of the private endpoint connection on an application gateway.",
     "type": "string"
    },
    "privateEndpoint": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateEndpointResponse",
     "description": "The resource of private end point.",
     "type": "object"
    },
    "privateLinkServiceConnectionState": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceConnectionStateResponse",
     "description": "A collection of information about the state of the connection between service consumer and provider.",
     "type": "object"
    },
    "provisioningState": {
     "description": "The provisioning state of the application gateway private endpoint connection resource.",
     "type": "string"
    },
    "type": {
     "description": "Type of the resource.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "linkIdentifier",
    "privateEndpoint",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayPrivateLinkConfiguration": {
   "description": "Private Link Configuration on an application gateway.",
   "properties": {
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "ipConfigurations": {
     "description": "An array of application gateway private link ip configurations.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayPrivateLinkIpConfiguration",
      "type": "object"
     },
     "type": "array"
    },
    "name": {
     "description": "Name of the private link configuration that is unique within an Application Gateway.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayPrivateLinkConfigurationResponse": {
   "description": "Private Link Configuration on an application gateway.",
   "properties": {
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "ipConfigurations": {
     "description": "An array of application gateway private link ip configurations.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayPrivateLinkIpConfigurationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "name": {
     "description": "Name of the private link configuration that is unique within an Application Gateway.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the application gateway private link configuration.",
     "type": "string"
    },
    "type": {
     "description": "Type of the resource.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayPrivateLinkIpConfiguration": {
   "description": "The application gateway private link ip configuration.",
   "properties": {
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of application gateway private link ip configuration.",
     "type": "string"
    },
    "primary": {
     "description": "Whether the ip configuration is primary or not.",
     "type": "boolean"
    },
    "privateIPAddress": {
     "description": "The private IP address of the IP configuration.",
     "type": "string"
    },
    "privateIPAllocationMethod": {
     "description": "The private IP address allocation method.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:IPAllocationMethod"
      }
     ]
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Reference to the subnet resource.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayPrivateLinkIpConfigurationResponse": {
   "description": "The application gateway private link ip configuration.",
   "properties": {
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of application gateway private link ip configuration.",
     "type": "string"
    },
    "primary": {
     "description": "Whether the ip configuration is primary or not.",
     "type": "boolean"
    },
    "privateIPAddress": {
     "description": "The private IP address of the IP configuration.",
     "type": "string"
    },
    "privateIPAllocationMethod": {
     "description": "The private IP address allocation method.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the application gateway private link IP configuration.",
     "type": "string"
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Reference to the subnet resource.",
     "type": "object"
    },
    "type": {
     "description": "The resource type.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayProbe": {
   "description": "Probe of the application gateway.",
   "properties": {
    "host": {
     "description": "Host name to send the probe to.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "interval": {
     "description": "The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.",
     "type": "integer"
    },
    "match": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayProbeHealthResponseMatch",
     "description": "Criterion for classifying a healthy probe response.",
     "type": "object"
    },
    "minServers": {
     "description": "Minimum number of servers that are always marked healthy. Default value is 0.",
     "type": "integer"
    },
    "name": {
     "description": "Name of the probe that is unique within an Application Gateway.",
     "type": "string"
    },
    "path": {
     "description": "Relative path of probe. Valid path starts from '/'. Probe is sent to \u003cProtocol\u003e://\u003chost\u003e:\u003cport\u003e\u003cpath\u003e.",
     "type": "string"
    },
    "pickHostNameFromBackendHttpSettings": {
     "description": "Whether the host header should be picked from the backend http settings. Default value is false.",
     "type": "boolean"
    },
    "pickHostNameFromBackendSettings": {
     "description": "Whether the server name indication should be picked from the backend settings for Tls protocol. Default value is false.",
     "type": "boolean"
    },
    "port": {
     "description": "Custom port which will be used for probing the backend servers. The valid value ranges from 1 to 65535. In case not set, port from http settings will be used. This property is valid for Standard_v2 and WAF_v2 only.",
     "type": "integer"
    },
    "protocol": {
     "description": "The protocol used for the probe.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ApplicationGatewayProtocol"
      }
     ]
    },
    "timeout": {
     "description": "The probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.",
     "type": "integer"
    },
    "unhealthyThreshold": {
     "description": "The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.",
     "type": "integer"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayProbeHealthResponseMatch": {
   "description": "Application gateway probe health response match.",
   "properties": {
    "body": {
     "description": "Body that must be contained in the health response. Default value is empty.",
     "type": "string"
    },
    "statusCodes": {
     "description": "Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayProbeHealthResponseMatchResponse": {
   "description": "Application gateway probe health response match.",
   "properties": {
    "body": {
     "description": "Body that must be contained in the health response. Default value is empty.",
     "type": "string"
    },
    "statusCodes": {
     "description": "Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayProbeResponse": {
   "description": "Probe of the application gateway.",
   "properties": {
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "host": {
     "description": "Host name to send the probe to.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "interval": {
     "description": "The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.",
     "type": "integer"
    },
    "match": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayProbeHealthResponseMatchResponse",
     "description": "Criterion for classifying a healthy probe response.",
     "type": "object"
    },
    "minServers": {
     "description": "Minimum number of servers that are always marked healthy. Default value is 0.",
     "type": "integer"
    },
    "name": {
     "description": "Name of the probe that is unique within an Application Gateway.",
     "type": "string"
    },
    "path": {
     "description": "Relative path of probe. Valid path starts from '/'. Probe is sent to \u003cProtocol\u003e://\u003chost\u003e:\u003cport\u003e\u003cpath\u003e.",
     "type": "string"
    },
    "pickHostNameFromBackendHttpSettings": {
     "description": "Whether the host header should be picked from the backend http settings. Default value is false.",
     "type": "boolean"
    },
    "pickHostNameFromBackendSettings": {
     "description": "Whether the server name indication should be picked from the backend settings for Tls protocol. Default value is false.",
     "type": "boolean"
    },
    "port": {
     "description": "Custom port which will be used for probing the backend servers. The valid value ranges from 1 to 65535. In case not set, port from http settings will be used. This property is valid for Standard_v2 and WAF_v2 only.",
     "type": "integer"
    },
    "protocol": {
     "description": "The protocol used for the probe.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the probe resource.",
     "type": "string"
    },
    "timeout": {
     "description": "The probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.",
     "type": "integer"
    },
    "type": {
     "description": "Type of the resource.",
     "type": "string"
    },
    "unhealthyThreshold": {
     "description": "The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.",
     "type": "integer"
    }
   },
   "required": [
    "etag",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayRedirectConfiguration": {
   "description": "Redirect configuration of an application gateway.",
   "properties": {
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "includePath": {
     "description": "Include path in the redirected url.",
     "type": "boolean"
    },
    "includeQueryString": {
     "description": "Include query string in the redirected url.",
     "type": "boolean"
    },
    "name": {
     "description": "Name of the redirect configuration that is unique within an Application Gateway.",
     "type": "string"
    },
    "pathRules": {
     "description": "Path rules specifying redirect configuration.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
      "type": "object"
     },
     "type": "array"
    },
    "redirectType": {
     "description": "HTTP redirection type.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ApplicationGatewayRedirectType"
      }
     ]
    },
    "requestRoutingRules": {
     "description": "Request routing specifying redirect configuration.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
      "type": "object"
     },
     "type": "array"
    },
    "targetListener": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Reference to a listener to redirect the request to.",
     "type": "object"
    },
    "targetUrl": {
     "description": "Url to redirect the request to.",
     "type": "string"
    },
    "urlPathMaps": {
     "description": "Url path maps specifying default redirect configuration.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
      "type": "object"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayRedirectConfigurationResponse": {
   "description": "Redirect configuration of an application gateway.",
   "properties": {
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "includePath": {
     "description": "Include path in the redirected url.",
     "type": "boolean"
    },
    "includeQueryString": {
     "description": "Include query string in the redirected url.",
     "type": "boolean"
    },
    "name": {
     "description": "Name of the redirect configuration that is unique within an Application Gateway.",
     "type": "string"
    },
    "pathRules": {
     "description": "Path rules specifying redirect configuration.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "redirectType": {
     "description": "HTTP redirection type.",
     "type": "string"
    },
    "requestRoutingRules": {
     "description": "Request routing specifying redirect configuration.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "targetListener": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Reference to a listener to redirect the request to.",
     "type": "object"
    },
    "targetUrl": {
     "description": "Url to redirect the request to.",
     "type": "string"
    },
    "type": {
     "description": "Type of the resource.",
     "type": "string"
    },
    "urlPathMaps": {
     "description": "Url path maps specifying default redirect configuration.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    }
   },
   "required": [
    "etag",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayRequestRoutingRule": {
   "description": "Request routing rule of an application gateway.",
   "properties": {
    "backendAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Backend address pool resource of the application gateway.",
     "type": "object"
    },
    "backendHttpSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Backend http settings resource of the application gateway.",
     "type": "object"
    },
    "httpListener": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Http listener resource of the application gateway.",
     "type": "object"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "loadDistributionPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Load Distribution Policy resource of the application gateway.",
     "type": "object"
    },
    "name": {
     "description": "Name of the request routing rule that is unique within an Application Gateway.",
     "type": "string"
    },
    "priority": {
     "description": "Priority of the request routing rule.",
     "type": "integer"
    },
    "redirectConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Redirect configuration resource of the application gateway.",
     "type": "object"
    },
    "rewriteRuleSet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Rewrite Rule Set resource in Basic rule of the application gateway.",
     "type": "object"
    },
    "ruleType": {
     "description": "Rule type.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ApplicationGatewayRequestRoutingRuleType"
      }
     ]
    },
    "urlPathMap": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "URL path map resource of the application gateway.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayRequestRoutingRuleResponse": {
   "description": "Request routing rule of an application gateway.",
   "properties": {
    "backendAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Backend address pool resource of the application gateway.",
     "type": "object"
    },
    "backendHttpSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Backend http settings resource of the application gateway.",
     "type": "object"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "httpListener": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Http listener resource of the application gateway.",
     "type": "object"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "loadDistributionPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Load Distribution Policy resource of the application gateway.",
     "type": "object"
    },
    "name": {
     "description": "Name of the request routing rule that is unique within an Application Gateway.",
     "type": "string"
    },
    "priority": {
     "description": "Priority of the request routing rule.",
     "type": "integer"
    },
    "provisioningState": {
     "description": "The provisioning state of the request routing rule resource.",
     "type": "string"
    },
    "redirectConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Redirect configuration resource of the application gateway.",
     "type": "object"
    },
    "rewriteRuleSet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Rewrite Rule Set resource in Basic rule of the application gateway.",
     "type": "object"
    },
    "ruleType": {
     "description": "Rule type.",
     "type": "string"
    },
    "type": {
     "description": "Type of the resource.",
     "type": "string"
    },
    "urlPathMap": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "URL path map resource of the application gateway.",
     "type": "object"
    }
   },
   "required": [
    "etag",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayResponse": {
   "description": "Application gateway resource.",
   "properties": {
    "authenticationCertificates": {
     "description": "Authentication certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayAuthenticationCertificateResponse",
      "type": "object"
     },
     "type": "array"
    },
    "autoscaleConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayAutoscaleConfigurationResponse",
     "description": "Autoscale Configuration.",
     "type": "object"
    },
    "backendAddressPools": {
     "description": "Backend address pool of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayBackendAddressPoolResponse",
      "type": "object"
     },
     "type": "array"
    },
    "backendHttpSettingsCollection": {
     "description": "Backend http settings of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayBackendHttpSettingsResponse",
      "type": "object"
     },
     "type": "array"
    },
    "backendSettingsCollection": {
     "description": "Backend settings of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayBackendSettingsResponse",
      "type": "object"
     },
     "type": "array"
    },
    "customErrorConfigurations": {
     "description": "Custom error configurations of the application gateway resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayCustomErrorResponse",
      "type": "object"
     },
     "type": "array"
    },
    "defaultPredefinedSslPolicy": {
     "description": "The default predefined SSL Policy applied on the application gateway resource.",
     "type": "string"
    },
    "enableFips": {
     "description": "Whether FIPS is enabled on the application gateway resource.",
     "type": "boolean"
    },
    "enableHttp2": {
     "description": "Whether HTTP2 is enabled on the application gateway resource.",
     "type": "boolean"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "firewallPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Reference to the FirewallPolicy resource.",
     "type": "object"
    },
    "forceFirewallPolicyAssociation": {
     "description": "If true, associates a firewall policy with an application gateway regardless whether the policy differs from the WAF Config.",
     "type": "boolean"
    },
    "frontendIPConfigurations": {
     "description": "Frontend IP addresses of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayFrontendIPConfigurationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "frontendPorts": {
     "description": "Frontend ports of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayFrontendPortResponse",
      "type": "object"
     },
     "type": "array"
    },
    "gatewayIPConfigurations": {
     "description": "Subnets of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayIPConfigurationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "globalConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayGlobalConfigurationResponse",
     "description": "Global Configuration.",
     "type": "object"
    },
    "httpListeners": {
     "description": "Http listeners of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayHttpListenerResponse",
      "type": "object"
     },
     "type": "array"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "identity": {
     "$ref": "#/types/azure-native_network_v20230201:network:ManagedServiceIdentityResponse",
     "description": "The identity of the application gateway, if configured.",
     "type": "object"
    },
    "listeners": {
     "description": "Listeners of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayListenerResponse",
      "type": "object"
     },
     "type": "array"
    },
    "loadDistributionPolicies": {
     "description": "Load distribution policies of the application gateway resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayLoadDistributionPolicyResponse",
      "type": "object"
     },
     "type": "array"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "operationalState": {
     "description": "Operational state of the application gateway resource.",
     "type": "string"
    },
    "privateEndpointConnections": {
     "description": "Private Endpoint connections on application gateway.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayPrivateEndpointConnectionResponse",
      "type": "object"
     },
     "type": "array"
    },
    "privateLinkConfigurations": {
     "description": "PrivateLink configurations on application gateway.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayPrivateLinkConfigurationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "probes": {
     "description": "Probes of the application gateway resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayProbeResponse",
      "type": "object"
     },
     "type": "array"
    },
    "provisioningState": {
     "description": "The provisioning state of the application gateway resource.",
     "type": "string"
    },
    "redirectConfigurations": {
     "description": "Redirect configurations of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayRedirectConfigurationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "requestRoutingRules": {
     "description": "Request routing rules of the application gateway resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayRequestRoutingRuleResponse",
      "type": "object"
     },
     "type": "array"
    },
    "resourceGuid": {
     "description": "The resource GUID property of the application gateway resource.",
     "type": "string"
    },
    "rewriteRuleSets": {
     "description": "Rewrite rules for the application gateway resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayRewriteRuleSetResponse",
      "type": "object"
     },
     "type": "array"
    },
    "routingRules": {
     "description": "Routing rules of the application gateway resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayRoutingRuleResponse",
      "type": "object"
     },
     "type": "array"
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewaySkuResponse",
     "description": "SKU of the application gateway resource.",
     "type": "object"
    },
    "sslCertificates": {
     "description": "SSL certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewaySslCertificateResponse",
      "type": "object"
     },
     "type": "array"
    },
    "sslPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewaySslPolicyResponse",
     "description": "SSL policy of the application gateway resource.",
     "type": "object"
    },
    "sslProfiles": {
     "description": "SSL profiles of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewaySslProfileResponse",
      "type": "object"
     },
     "type": "array"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "trustedClientCertificates": {
     "description": "Trusted client certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayTrustedClientCertificateResponse",
      "type": "object"
     },
     "type": "array"
    },
    "trustedRootCertificates": {
     "description": "Trusted Root certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayTrustedRootCertificateResponse",
      "type": "object"
     },
     "type": "array"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    },
    "urlPathMaps": {
     "description": "URL path map of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayUrlPathMapResponse",
      "type": "object"
     },
     "type": "array"
    },
    "webApplicationFirewallConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayWebApplicationFirewallConfigurationResponse",
     "description": "Web application firewall configuration.",
     "type": "object"
    },
    "zones": {
     "description": "A list of availability zones denoting where the resource needs to come from.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "required": [
    "defaultPredefinedSslPolicy",
    "etag",
    "name",
    "operationalState",
    "privateEndpointConnections",
    "provisioningState",
    "resourceGuid",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayRewriteRule": {
   "description": "Rewrite rule of an application gateway.",
   "properties": {
    "actionSet": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayRewriteRuleActionSet",
     "description": "Set of actions to be done as part of the rewrite Rule.",
     "type": "object"
    },
    "conditions": {
     "description": "Conditions based on which the action set execution will be evaluated.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayRewriteRuleCondition",
      "type": "object"
     },
     "type": "array"
    },
    "name": {
     "description": "Name of the rewrite rule that is unique within an Application Gateway.",
     "type": "string"
    },
    "ruleSequence": {
     "description": "Rule Sequence of the rewrite rule that determines the order of execution of a particular rule in a RewriteRuleSet.",
     "type": "integer"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayRewriteRuleActionSet": {
   "description": "Set of actions in the Rewrite Rule in Application Gateway.",
   "properties": {
    "requestHeaderConfigurations": {
     "description": "Request Header Actions in the Action Set.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayHeaderConfiguration",
      "type": "object"
     },
     "type": "array"
    },
    "responseHeaderConfigurations": {
     "description": "Response Header Actions in the Action Set.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayHeaderConfiguration",
      "type": "object"
     },
     "type": "array"
    },
    "urlConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayUrlConfiguration",
     "description": "Url Configuration Action in the Action Set.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayRewriteRuleActionSetResponse": {
   "description": "Set of actions in the Rewrite Rule in Application Gateway.",
   "properties": {
    "requestHeaderConfigurations": {
     "description": "Request Header Actions in the Action Set.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayHeaderConfigurationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "responseHeaderConfigurations": {
     "description": "Response Header Actions in the Action Set.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayHeaderConfigurationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "urlConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayUrlConfigurationResponse",
     "description": "Url Configuration Action in the Action Set.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayRewriteRuleCondition": {
   "description": "Set of conditions in the Rewrite Rule in Application Gateway.",
   "properties": {
    "ignoreCase": {
     "description": "Setting this parameter to truth value with force the pattern to do a case in-sensitive comparison.",
     "type": "boolean"
    },
    "negate": {
     "description": "Setting this value as truth will force to check the negation of the condition given by the user.",
     "type": "boolean"
    },
    "pattern": {
     "description": "The pattern, either fixed string or regular expression, that evaluates the truthfulness of the condition.",
     "type": "string"
    },
    "variable": {
     "description": "The condition parameter of the RewriteRuleCondition.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayRewriteRuleConditionResponse": {
   "description": "Set of conditions in the Rewrite Rule in Application Gateway.",
   "properties": {
    "ignoreCase": {
     "description": "Setting this parameter to truth value with force the pattern to do a case in-sensitive comparison.",
     "type": "boolean"
    },
    "negate": {
     "description": "Setting this value as truth will force to check the negation of the condition given by the user.",
     "type": "boolean"
    },
    "pattern": {
     "description": "The pattern, either fixed string or regular expression, that evaluates the truthfulness of the condition.",
     "type": "string"
    },
    "variable": {
     "description": "The condition parameter of the RewriteRuleCondition.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayRewriteRuleResponse": {
   "description": "Rewrite rule of an application gateway.",
   "properties": {
    "actionSet": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayRewriteRuleActionSetResponse",
     "description": "Set of actions to be done as part of the rewrite Rule.",
     "type": "object"
    },
    "conditions": {
     "description": "Conditions based on which the action set execution will be evaluated.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayRewriteRuleConditionResponse",
      "type": "object"
     },
     "type": "array"
    },
    "name": {
     "description": "Name of the rewrite rule that is unique within an Application Gateway.",
     "type": "string"
    },
    "ruleSequence": {
     "description": "Rule Sequence of the rewrite rule that determines the order of execution of a particular rule in a RewriteRuleSet.",
     "type": "integer"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayRewriteRuleSet": {
   "description": "Rewrite rule set of an application gateway.",
   "properties": {
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "Name of the rewrite rule set that is unique within an Application Gateway.",
     "type": "string"
    },
    "rewriteRules": {
     "description": "Rewrite rules in the rewrite rule set.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayRewriteRule",
      "type": "object"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayRewriteRuleSetResponse": {
   "description": "Rewrite rule set of an application gateway.",
   "properties": {
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "Name of the rewrite rule set that is unique within an Application Gateway.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the rewrite rule set resource.",
     "type": "string"
    },
    "rewriteRules": {
     "description": "Rewrite rules in the rewrite rule set.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayRewriteRuleResponse",
      "type": "object"
     },
     "type": "array"
    }
   },
   "required": [
    "etag",
    "provisioningState"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayRoutingRule": {
   "description": "Routing rule of an application gateway.",
   "properties": {
    "backendAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Backend address pool resource of the application gateway.",
     "type": "object"
    },
    "backendSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Backend settings resource of the application gateway.",
     "type": "object"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "listener": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Listener resource of the application gateway.",
     "type": "object"
    },
    "name": {
     "description": "Name of the routing rule that is unique within an Application Gateway.",
     "type": "string"
    },
    "priority": {
     "description": "Priority of the routing rule.",
     "type": "integer"
    },
    "ruleType": {
     "description": "Rule type.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ApplicationGatewayRequestRoutingRuleType"
      }
     ]
    }
   },
   "required": [
    "priority"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayRoutingRuleResponse": {
   "description": "Routing rule of an application gateway.",
   "properties": {
    "backendAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Backend address pool resource of the application gateway.",
     "type": "object"
    },
    "backendSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Backend settings resource of the application gateway.",
     "type": "object"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "listener": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Listener resource of the application gateway.",
     "type": "object"
    },
    "name": {
     "description": "Name of the routing rule that is unique within an Application Gateway.",
     "type": "string"
    },
    "priority": {
     "description": "Priority of the routing rule.",
     "type": "integer"
    },
    "provisioningState": {
     "description": "The provisioning state of the request routing rule resource.",
     "type": "string"
    },
    "ruleType": {
     "description": "Rule type.",
     "type": "string"
    },
    "type": {
     "description": "Type of the resource.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "priority",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewaySku": {
   "description": "SKU of an application gateway.",
   "properties": {
    "capacity": {
     "description": "Capacity (instance count) of an application gateway.",
     "type": "integer"
    },
    "name": {
     "description": "Name of an application gateway SKU.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ApplicationGatewaySkuName"
      }
     ]
    },
    "tier": {
     "description": "Tier of an application gateway.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ApplicationGatewayTier"
      }
     ]
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewaySkuResponse": {
   "description": "SKU of an application gateway.",
   "properties": {
    "capacity": {
     "description": "Capacity (instance count) of an application gateway.",
     "type": "integer"
    },
    "name": {
     "description": "Name of an application gateway SKU.",
     "type": "string"
    },
    "tier": {
     "description": "Tier of an application gateway.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewaySslCertificate": {
   "description": "SSL certificates of an application gateway.",
   "properties": {
    "data": {
     "description": "Base-64 encoded pfx certificate. Only applicable in PUT Request.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "keyVaultSecretId": {
     "description": "Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.",
     "type": "string"
    },
    "name": {
     "description": "Name of the SSL certificate that is unique within an Application Gateway.",
     "type": "string"
    },
    "password": {
     "description": "Password for the pfx file specified in data. Only applicable in PUT request.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewaySslCertificateResponse": {
   "description": "SSL certificates of an application gateway.",
   "properties": {
    "data": {
     "description": "Base-64 encoded pfx certificate. Only applicable in PUT Request.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "keyVaultSecretId": {
     "description": "Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.",
     "type": "string"
    },
    "name": {
     "description": "Name of the SSL certificate that is unique within an Application Gateway.",
     "type": "string"
    },
    "password": {
     "description": "Password for the pfx file specified in data. Only applicable in PUT request.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the SSL certificate resource.",
     "type": "string"
    },
    "publicCertData": {
     "description": "Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request.",
     "type": "string"
    },
    "type": {
     "description": "Type of the resource.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "provisioningState",
    "publicCertData",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewaySslPolicy": {
   "description": "Application Gateway Ssl policy.",
   "properties": {
    "cipherSuites": {
     "description": "Ssl cipher suites to be enabled in the specified order to application gateway.",
     "items": {
      "oneOf": [
       {
        "type": "string"
       },
       {
        "$ref": "#/types/azure-native:network:ApplicationGatewaySslCipherSuite"
       }
      ]
     },
     "type": "array"
    },
    "disabledSslProtocols": {
     "description": "Ssl protocols to be disabled on application gateway.",
     "items": {
      "oneOf": [
       {
        "type": "string"
       },
       {
        "$ref": "#/types/azure-native:network:ApplicationGatewaySslProtocol"
       }
      ]
     },
     "type": "array"
    },
    "minProtocolVersion": {
     "description": "Minimum version of Ssl protocol to be supported on application gateway.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ApplicationGatewaySslProtocol"
      }
     ]
    },
    "policyName": {
     "description": "Name of Ssl predefined policy.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ApplicationGatewaySslPolicyName"
      }
     ]
    },
    "policyType": {
     "description": "Type of Ssl Policy.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ApplicationGatewaySslPolicyType"
      }
     ]
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewaySslPolicyResponse": {
   "description": "Application Gateway Ssl policy.",
   "properties": {
    "cipherSuites": {
     "description": "Ssl cipher suites to be enabled in the specified order to application gateway.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "disabledSslProtocols": {
     "description": "Ssl protocols to be disabled on application gateway.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "minProtocolVersion": {
     "description": "Minimum version of Ssl protocol to be supported on application gateway.",
     "type": "string"
    },
    "policyName": {
     "description": "Name of Ssl predefined policy.",
     "type": "string"
    },
    "policyType": {
     "description": "Type of Ssl Policy.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewaySslProfile": {
   "description": "SSL profile of an application gateway.",
   "properties": {
    "clientAuthConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayClientAuthConfiguration",
     "description": "Client authentication configuration of the application gateway resource.",
     "type": "object"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "Name of the SSL profile that is unique within an Application Gateway.",
     "type": "string"
    },
    "sslPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewaySslPolicy",
     "description": "SSL policy of the application gateway resource.",
     "type": "object"
    },
    "trustedClientCertificates": {
     "description": "Array of references to application gateway trusted client certificates.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
      "type": "object"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewaySslProfileResponse": {
   "description": "SSL profile of an application gateway.",
   "properties": {
    "clientAuthConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayClientAuthConfigurationResponse",
     "description": "Client authentication configuration of the application gateway resource.",
     "type": "object"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "Name of the SSL profile that is unique within an Application Gateway.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the HTTP listener resource.",
     "type": "string"
    },
    "sslPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewaySslPolicyResponse",
     "description": "SSL policy of the application gateway resource.",
     "type": "object"
    },
    "trustedClientCertificates": {
     "description": "Array of references to application gateway trusted client certificates.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "type": {
     "description": "Type of the resource.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayTrustedClientCertificate": {
   "description": "Trusted client certificates of an application gateway.",
   "properties": {
    "data": {
     "description": "Certificate public data.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "Name of the trusted client certificate that is unique within an Application Gateway.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayTrustedClientCertificateResponse": {
   "description": "Trusted client certificates of an application gateway.",
   "properties": {
    "clientCertIssuerDN": {
     "description": "Distinguished name of client certificate issuer.",
     "type": "string"
    },
    "data": {
     "description": "Certificate public data.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "Name of the trusted client certificate that is unique within an Application Gateway.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the trusted client certificate resource.",
     "type": "string"
    },
    "type": {
     "description": "Type of the resource.",
     "type": "string"
    },
    "validatedCertData": {
     "description": "Validated certificate data.",
     "type": "string"
    }
   },
   "required": [
    "clientCertIssuerDN",
    "etag",
    "provisioningState",
    "type",
    "validatedCertData"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayTrustedRootCertificate": {
   "description": "Trusted Root certificates of an application gateway.",
   "properties": {
    "data": {
     "description": "Certificate public data.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "keyVaultSecretId": {
     "description": "Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.",
     "type": "string"
    },
    "name": {
     "description": "Name of the trusted root certificate that is unique within an Application Gateway.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayTrustedRootCertificateResponse": {
   "description": "Trusted Root certificates of an application gateway.",
   "properties": {
    "data": {
     "description": "Certificate public data.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "keyVaultSecretId": {
     "description": "Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.",
     "type": "string"
    },
    "name": {
     "description": "Name of the trusted root certificate that is unique within an Application Gateway.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the trusted root certificate resource.",
     "type": "string"
    },
    "type": {
     "description": "Type of the resource.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayUrlConfiguration": {
   "description": "Url configuration of the Actions set in Application Gateway.",
   "properties": {
    "modifiedPath": {
     "description": "Url path which user has provided for url rewrite. Null means no path will be updated. Default value is null.",
     "type": "string"
    },
    "modifiedQueryString": {
     "description": "Query string which user has provided for url rewrite. Null means no query string will be updated. Default value is null.",
     "type": "string"
    },
    "reroute": {
     "description": "If set as true, it will re-evaluate the url path map provided in path based request routing rules using modified path. Default value is false.",
     "type": "boolean"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayUrlConfigurationResponse": {
   "description": "Url configuration of the Actions set in Application Gateway.",
   "properties": {
    "modifiedPath": {
     "description": "Url path which user has provided for url rewrite. Null means no path will be updated. Default value is null.",
     "type": "string"
    },
    "modifiedQueryString": {
     "description": "Query string which user has provided for url rewrite. Null means no query string will be updated. Default value is null.",
     "type": "string"
    },
    "reroute": {
     "description": "If set as true, it will re-evaluate the url path map provided in path based request routing rules using modified path. Default value is false.",
     "type": "boolean"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayUrlPathMap": {
   "description": "UrlPathMaps give a url path to the backend mapping information for PathBasedRouting.",
   "properties": {
    "defaultBackendAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Default backend address pool resource of URL path map.",
     "type": "object"
    },
    "defaultBackendHttpSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Default backend http settings resource of URL path map.",
     "type": "object"
    },
    "defaultLoadDistributionPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Default Load Distribution Policy resource of URL path map.",
     "type": "object"
    },
    "defaultRedirectConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Default redirect configuration resource of URL path map.",
     "type": "object"
    },
    "defaultRewriteRuleSet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Default Rewrite rule set resource of URL path map.",
     "type": "object"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "Name of the URL path map that is unique within an Application Gateway.",
     "type": "string"
    },
    "pathRules": {
     "description": "Path rule of URL path map resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayPathRule",
      "type": "object"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayUrlPathMapResponse": {
   "description": "UrlPathMaps give a url path to the backend mapping information for PathBasedRouting.",
   "properties": {
    "defaultBackendAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Default backend address pool resource of URL path map.",
     "type": "object"
    },
    "defaultBackendHttpSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Default backend http settings resource of URL path map.",
     "type": "object"
    },
    "defaultLoadDistributionPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Default Load Distribution Policy resource of URL path map.",
     "type": "object"
    },
    "defaultRedirectConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Default redirect configuration resource of URL path map.",
     "type": "object"
    },
    "defaultRewriteRuleSet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Default Rewrite rule set resource of URL path map.",
     "type": "object"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "Name of the URL path map that is unique within an Application Gateway.",
     "type": "string"
    },
    "pathRules": {
     "description": "Path rule of URL path map resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayPathRuleResponse",
      "type": "object"
     },
     "type": "array"
    },
    "provisioningState": {
     "description": "The provisioning state of the URL path map resource.",
     "type": "string"
    },
    "type": {
     "description": "Type of the resource.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayWebApplicationFirewallConfiguration": {
   "description": "Application gateway web application firewall configuration.",
   "properties": {
    "disabledRuleGroups": {
     "description": "The disabled rule groups.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayFirewallDisabledRuleGroup",
      "type": "object"
     },
     "type": "array"
    },
    "enabled": {
     "description": "Whether the web application firewall is enabled or not.",
     "type": "boolean"
    },
    "exclusions": {
     "description": "The exclusion list.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayFirewallExclusion",
      "type": "object"
     },
     "type": "array"
    },
    "fileUploadLimitInMb": {
     "description": "Maximum file upload size in Mb for WAF.",
     "type": "integer"
    },
    "firewallMode": {
     "description": "Web application firewall mode.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ApplicationGatewayFirewallMode"
      }
     ]
    },
    "maxRequestBodySize": {
     "description": "Maximum request body size for WAF.",
     "type": "integer"
    },
    "maxRequestBodySizeInKb": {
     "description": "Maximum request body size in Kb for WAF.",
     "type": "integer"
    },
    "requestBodyCheck": {
     "description": "Whether allow WAF to check request Body.",
     "type": "boolean"
    },
    "ruleSetType": {
     "description": "The type of the web application firewall rule set. Possible values are: 'OWASP'.",
     "type": "string"
    },
    "ruleSetVersion": {
     "description": "The version of the rule set type.",
     "type": "string"
    }
   },
   "required": [
    "enabled",
    "firewallMode",
    "ruleSetType",
    "ruleSetVersion"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationGatewayWebApplicationFirewallConfigurationResponse": {
   "description": "Application gateway web application firewall configuration.",
   "properties": {
    "disabledRuleGroups": {
     "description": "The disabled rule groups.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayFirewallDisabledRuleGroupResponse",
      "type": "object"
     },
     "type": "array"
    },
    "enabled": {
     "description": "Whether the web application firewall is enabled or not.",
     "type": "boolean"
    },
    "exclusions": {
     "description": "The exclusion list.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayFirewallExclusionResponse",
      "type": "object"
     },
     "type": "array"
    },
    "fileUploadLimitInMb": {
     "description": "Maximum file upload size in Mb for WAF.",
     "type": "integer"
    },
    "firewallMode": {
     "description": "Web application firewall mode.",
     "type": "string"
    },
    "maxRequestBodySize": {
     "description": "Maximum request body size for WAF.",
     "type": "integer"
    },
    "maxRequestBodySizeInKb": {
     "description": "Maximum request body size in Kb for WAF.",
     "type": "integer"
    },
    "requestBodyCheck": {
     "description": "Whether allow WAF to check request Body.",
     "type": "boolean"
    },
    "ruleSetType": {
     "description": "The type of the web application firewall rule set. Possible values are: 'OWASP'.",
     "type": "string"
    },
    "ruleSetVersion": {
     "description": "The version of the rule set type.",
     "type": "string"
    }
   },
   "required": [
    "enabled",
    "firewallMode",
    "ruleSetType",
    "ruleSetVersion"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationRule": {
   "description": "Rule of type application.",
   "properties": {
    "description": {
     "description": "Description of the rule.",
     "type": "string"
    },
    "destinationAddresses": {
     "description": "List of destination IP addresses or Service Tags.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "fqdnTags": {
     "description": "List of FQDN Tags for this rule.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "httpHeadersToInsert": {
     "description": "List of HTTP/S headers to insert.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyHttpHeaderToInsert",
      "type": "object"
     },
     "type": "array"
    },
    "name": {
     "description": "Name of the rule.",
     "type": "string"
    },
    "protocols": {
     "description": "Array of Application Protocols.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyRuleApplicationProtocol",
      "type": "object"
     },
     "type": "array"
    },
    "ruleType": {
     "const": "ApplicationRule",
     "description": "Rule Type.\nExpected value is 'ApplicationRule'.",
     "type": "string"
    },
    "sourceAddresses": {
     "description": "List of source IP addresses for this rule.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "sourceIpGroups": {
     "description": "List of source IpGroups for this rule.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "targetFqdns": {
     "description": "List of FQDNs for this rule.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "targetUrls": {
     "description": "List of Urls for this rule condition.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "terminateTLS": {
     "description": "Terminate TLS connections for this rule.",
     "type": "boolean"
    },
    "webCategories": {
     "description": "List of destination azure web categories.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "required": [
    "ruleType"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationRuleResponse": {
   "description": "Rule of type application.",
   "properties": {
    "description": {
     "description": "Description of the rule.",
     "type": "string"
    },
    "destinationAddresses": {
     "description": "List of destination IP addresses or Service Tags.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "fqdnTags": {
     "description": "List of FQDN Tags for this rule.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "httpHeadersToInsert": {
     "description": "List of HTTP/S headers to insert.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyHttpHeaderToInsertResponse",
      "type": "object"
     },
     "type": "array"
    },
    "name": {
     "description": "Name of the rule.",
     "type": "string"
    },
    "protocols": {
     "description": "Array of Application Protocols.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyRuleApplicationProtocolResponse",
      "type": "object"
     },
     "type": "array"
    },
    "ruleType": {
     "const": "ApplicationRule",
     "description": "Rule Type.\nExpected value is 'ApplicationRule'.",
     "type": "string"
    },
    "sourceAddresses": {
     "description": "List of source IP addresses for this rule.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "sourceIpGroups": {
     "description": "List of source IpGroups for this rule.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "targetFqdns": {
     "description": "List of FQDNs for this rule.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "targetUrls": {
     "description": "List of Urls for this rule condition.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "terminateTLS": {
     "description": "Terminate TLS connections for this rule.",
     "type": "boolean"
    },
    "webCategories": {
     "description": "List of destination azure web categories.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "required": [
    "ruleType"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationSecurityGroup": {
   "description": "An application security group in a resource group.",
   "properties": {
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ApplicationSecurityGroupResponse": {
   "description": "An application security group in a resource group.",
   "properties": {
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the application security group resource.",
     "type": "string"
    },
    "resourceGuid": {
     "description": "The resource GUID property of the application security group resource. It uniquely identifies a resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.",
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "name",
    "provisioningState",
    "resourceGuid",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:AzureFirewallApplicationRule": {
   "description": "Properties of an application rule.",
   "properties": {
    "description": {
     "description": "Description of the rule.",
     "type": "string"
    },
    "fqdnTags": {
     "description": "List of FQDN Tags for this rule.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "name": {
     "description": "Name of the application rule.",
     "type": "string"
    },
    "protocols": {
     "description": "Array of ApplicationRuleProtocols.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallApplicationRuleProtocol",
      "type": "object"
     },
     "type": "array"
    },
    "sourceAddresses": {
     "description": "List of source IP addresses for this rule.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "sourceIpGroups": {
     "description": "List of source IpGroups for this rule.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "targetFqdns": {
     "description": "List of FQDNs for this rule.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:AzureFirewallApplicationRuleCollection": {
   "description": "Application rule collection resource.",
   "properties": {
    "action": {
     "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallRCAction",
     "description": "The action type of a rule collection.",
     "type": "object"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.",
     "type": "string"
    },
    "priority": {
     "description": "Priority of the application rule collection resource.",
     "type": "integer"
    },
    "rules": {
     "description": "Collection of rules used by a application rule collection.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallApplicationRule",
      "type": "object"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:AzureFirewallApplicationRuleCollectionResponse": {
   "description": "Application rule collection resource.",
   "properties": {
    "action": {
     "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallRCActionResponse",
     "description": "The action type of a rule collection.",
     "type": "object"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.",
     "type": "string"
    },
    "priority": {
     "description": "Priority of the application rule collection resource.",
     "type": "integer"
    },
    "provisioningState": {
     "description": "The provisioning state of the application rule collection resource.",
     "type": "string"
    },
    "rules": {
     "description": "Collection of rules used by a application rule collection.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallApplicationRuleResponse",
      "type": "object"
     },
     "type": "array"
    }
   },
   "required": [
    "etag",
    "provisioningState"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:AzureFirewallApplicationRuleProtocol": {
   "description": "Properties of the application rule protocol.",
   "properties": {
    "port": {
     "description": "Port number for the protocol, cannot be greater than 64000. This field is optional.",
     "type": "integer"
    },
    "protocolType": {
     "description": "Protocol type.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:AzureFirewallApplicationRuleProtocolType"
      }
     ]
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:AzureFirewallApplicationRuleProtocolResponse": {
   "description": "Properties of the application rule protocol.",
   "properties": {
    "port": {
     "description": "Port number for the protocol, cannot be greater than 64000. This field is optional.",
     "type": "integer"
    },
    "protocolType": {
     "description": "Protocol type.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:AzureFirewallApplicationRuleResponse": {
   "description": "Properties of an application rule.",
   "properties": {
    "description": {
     "description": "Description of the rule.",
     "type": "string"
    },
    "fqdnTags": {
     "description": "List of FQDN Tags for this rule.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "name": {
     "description": "Name of the application rule.",
     "type": "string"
    },
    "protocols": {
     "description": "Array of ApplicationRuleProtocols.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallApplicationRuleProtocolResponse",
      "type": "object"
     },
     "type": "array"
    },
    "sourceAddresses": {
     "description": "List of source IP addresses for this rule.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "sourceIpGroups": {
     "description": "List of source IpGroups for this rule.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "targetFqdns": {
     "description": "List of FQDNs for this rule.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:AzureFirewallIPConfiguration": {
   "description": "IP configuration of an Azure Firewall.",
   "properties": {
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "Name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "publicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Reference to the PublicIP resource. This field is a mandatory input if subnet is not null.",
     "type": "object"
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Reference to the subnet resource. This resource must be named 'AzureFirewallSubnet' or 'AzureFirewallManagementSubnet'.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:AzureFirewallIPConfigurationResponse": {
   "description": "IP configuration of an Azure Firewall.",
   "properties": {
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "Name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "privateIPAddress": {
     "description": "The Firewall Internal Load Balancer IP to be used as the next hop in User Defined Routes.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the Azure firewall IP configuration resource.",
     "type": "string"
    },
    "publicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Reference to the PublicIP resource. This field is a mandatory input if subnet is not null.",
     "type": "object"
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Reference to the subnet resource. This resource must be named 'AzureFirewallSubnet' or 'AzureFirewallManagementSubnet'.",
     "type": "object"
    },
    "type": {
     "description": "Type of the resource.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "privateIPAddress",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:AzureFirewallIpGroupsResponse": {
   "description": "IpGroups associated with azure firewall.",
   "properties": {
    "changeNumber": {
     "description": "The iteration number.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    }
   },
   "required": [
    "changeNumber",
    "id"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:AzureFirewallNatRCAction": {
   "description": "AzureFirewall NAT Rule Collection Action.",
   "properties": {
    "type": {
     "description": "The type of action.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:AzureFirewallNatRCActionType"
      }
     ]
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:AzureFirewallNatRCActionResponse": {
   "description": "AzureFirewall NAT Rule Collection Action.",
   "properties": {
    "type": {
     "description": "The type of action.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:AzureFirewallNatRule": {
   "description": "Properties of a NAT rule.",
   "properties": {
    "description": {
     "description": "Description of the rule.",
     "type": "string"
    },
    "destinationAddresses": {
     "description": "List of destination IP addresses for this rule. Supports IP ranges, prefixes, and service tags.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "destinationPorts": {
     "description": "List of destination ports.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "name": {
     "description": "Name of the NAT rule.",
     "type": "string"
    },
    "protocols": {
     "description": "Array of AzureFirewallNetworkRuleProtocols applicable to this NAT rule.",
     "items": {
      "oneOf": [
       {
        "type": "string"
       },
       {
        "$ref": "#/types/azure-native:network:AzureFirewallNetworkRuleProtocol"
       }
      ]
     },
     "type": "array"
    },
    "sourceAddresses": {
     "description": "List of source IP addresses for this rule.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "sourceIpGroups": {
     "description": "List of source IpGroups for this rule.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "translatedAddress": {
     "description": "The translated address for this NAT rule.",
     "type": "string"
    },
    "translatedFqdn": {
     "description": "The translated FQDN for this NAT rule.",
     "type": "string"
    },
    "translatedPort": {
     "description": "The translated port for this NAT rule.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:AzureFirewallNatRuleCollection": {
   "description": "NAT rule collection resource.",
   "properties": {
    "action": {
     "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallNatRCAction",
     "description": "The action type of a NAT rule collection.",
     "type": "object"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.",
     "type": "string"
    },
    "priority": {
     "description": "Priority of the NAT rule collection resource.",
     "type": "integer"
    },
    "rules": {
     "description": "Collection of rules used by a NAT rule collection.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallNatRule",
      "type": "object"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:AzureFirewallNatRuleCollectionResponse": {
   "description": "NAT rule collection resource.",
   "properties": {
    "action": {
     "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallNatRCActionResponse",
     "description": "The action type of a NAT rule collection.",
     "type": "object"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.",
     "type": "string"
    },
    "priority": {
     "description": "Priority of the NAT rule collection resource.",
     "type": "integer"
    },
    "provisioningState": {
     "description": "The provisioning state of the NAT rule collection resource.",
     "type": "string"
    },
    "rules": {
     "description": "Collection of rules used by a NAT rule collection.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallNatRuleResponse",
      "type": "object"
     },
     "type": "array"
    }
   },
   "required": [
    "etag",
    "provisioningState"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:AzureFirewallNatRuleResponse": {
   "description": "Properties of a NAT rule.",
   "properties": {
    "description": {
     "description": "Description of the rule.",
     "type": "string"
    },
    "destinationAddresses": {
     "description": "List of destination IP addresses for this rule. Supports IP ranges, prefixes, and service tags.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "destinationPorts": {
     "description": "List of destination ports.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "name": {
     "description": "Name of the NAT rule.",
     "type": "string"
    },
    "protocols": {
     "description": "Array of AzureFirewallNetworkRuleProtocols applicable to this NAT rule.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "sourceAddresses": {
     "description": "List of source IP addresses for this rule.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "sourceIpGroups": {
     "description": "List of source IpGroups for this rule.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "translatedAddress": {
     "description": "The translated address for this NAT rule.",
     "type": "string"
    },
    "translatedFqdn": {
     "description": "The translated FQDN for this NAT rule.",
     "type": "string"
    },
    "translatedPort": {
     "description": "The translated port for this NAT rule.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:AzureFirewallNetworkRule": {
   "description": "Properties of the network rule.",
   "properties": {
    "description": {
     "description": "Description of the rule.",
     "type": "string"
    },
    "destinationAddresses": {
     "description": "List of destination IP addresses.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "destinationFqdns": {
     "description": "List of destination FQDNs.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "destinationIpGroups": {
     "description": "List of destination IpGroups for this rule.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "destinationPorts": {
     "description": "List of destination ports.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "name": {
     "description": "Name of the network rule.",
     "type": "string"
    },
    "protocols": {
     "description": "Array of AzureFirewallNetworkRuleProtocols.",
     "items": {
      "oneOf": [
       {
        "type": "string"
       },
       {
        "$ref": "#/types/azure-native:network:AzureFirewallNetworkRuleProtocol"
       }
      ]
     },
     "type": "array"
    },
    "sourceAddresses": {
     "description": "List of source IP addresses for this rule.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "sourceIpGroups": {
     "description": "List of source IpGroups for this rule.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:AzureFirewallNetworkRuleCollection": {
   "description": "Network rule collection resource.",
   "properties": {
    "action": {
     "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallRCAction",
     "description": "The action type of a rule collection.",
     "type": "object"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.",
     "type": "string"
    },
    "priority": {
     "description": "Priority of the network rule collection resource.",
     "type": "integer"
    },
    "rules": {
     "description": "Collection of rules used by a network rule collection.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallNetworkRule",
      "type": "object"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:AzureFirewallNetworkRuleCollectionResponse": {
   "description": "Network rule collection resource.",
   "properties": {
    "action": {
     "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallRCActionResponse",
     "description": "The action type of a rule collection.",
     "type": "object"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.",
     "type": "string"
    },
    "priority": {
     "description": "Priority of the network rule collection resource.",
     "type": "integer"
    },
    "provisioningState": {
     "description": "The provisioning state of the network rule collection resource.",
     "type": "string"
    },
    "rules": {
     "description": "Collection of rules used by a network rule collection.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallNetworkRuleResponse",
      "type": "object"
     },
     "type": "array"
    }
   },
   "required": [
    "etag",
    "provisioningState"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:AzureFirewallNetworkRuleResponse": {
   "description": "Properties of the network rule.",
   "properties": {
    "description": {
     "description": "Description of the rule.",
     "type": "string"
    },
    "destinationAddresses": {
     "description": "List of destination IP addresses.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "destinationFqdns": {
     "description": "List of destination FQDNs.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "destinationIpGroups": {
     "description": "List of destination IpGroups for this rule.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "destinationPorts": {
     "description": "List of destination ports.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "name": {
     "description": "Name of the network rule.",
     "type": "string"
    },
    "protocols": {
     "description": "Array of AzureFirewallNetworkRuleProtocols.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "sourceAddresses": {
     "description": "List of source IP addresses for this rule.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "sourceIpGroups": {
     "description": "List of source IpGroups for this rule.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:AzureFirewallPublicIPAddress": {
   "description": "Public IP Address associated with azure firewall.",
   "properties": {
    "address": {
     "description": "Public IP Address value.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:AzureFirewallPublicIPAddressResponse": {
   "description": "Public IP Address associated with azure firewall.",
   "properties": {
    "address": {
     "description": "Public IP Address value.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:AzureFirewallRCAction": {
   "description": "Properties of the AzureFirewallRCAction.",
   "properties": {
    "type": {
     "description": "The type of action.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:AzureFirewallRCActionType"
      }
     ]
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:AzureFirewallRCActionResponse": {
   "description": "Properties of the AzureFirewallRCAction.",
   "properties": {
    "type": {
     "description": "The type of action.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:AzureFirewallSku": {
   "description": "SKU of an Azure Firewall.",
   "properties": {
    "name": {
     "description": "Name of an Azure Firewall SKU.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:AzureFirewallSkuName"
      }
     ]
    },
    "tier": {
     "description": "Tier of an Azure Firewall.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:AzureFirewallSkuTier"
      }
     ]
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:AzureFirewallSkuResponse": {
   "description": "SKU of an Azure Firewall.",
   "properties": {
    "name": {
     "description": "Name of an Azure Firewall SKU.",
     "type": "string"
    },
    "tier": {
     "description": "Tier of an Azure Firewall.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:BackendAddressPool": {
   "description": "Pool of backend IP addresses.",
   "properties": {
    "drainPeriodInSeconds": {
     "description": "Amount of seconds Load Balancer waits for before sending RESET to client and backend address.",
     "type": "integer"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "loadBalancerBackendAddresses": {
     "description": "An array of backend addresses.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:LoadBalancerBackendAddress",
      "type": "object"
     },
     "type": "array"
    },
    "location": {
     "description": "The location of the backend address pool.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within the set of backend address pools used by the load balancer. This name can be used to access the resource.",
     "type": "string"
    },
    "tunnelInterfaces": {
     "description": "An array of gateway load balancer tunnel interfaces.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:GatewayLoadBalancerTunnelInterface",
      "type": "object"
     },
     "type": "array"
    },
    "virtualNetwork": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "A reference to a virtual network.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:BackendAddressPoolResponse": {
   "description": "Pool of backend IP addresses.",
   "properties": {
    "backendIPConfigurations": {
     "description": "An array of references to IP addresses defined in network interfaces.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceIPConfigurationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "drainPeriodInSeconds": {
     "description": "Amount of seconds Load Balancer waits for before sending RESET to client and backend address.",
     "type": "integer"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "inboundNatRules": {
     "description": "An array of references to inbound NAT rules that use this backend address pool.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "loadBalancerBackendAddresses": {
     "description": "An array of backend addresses.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:LoadBalancerBackendAddressResponse",
      "type": "object"
     },
     "type": "array"
    },
    "loadBalancingRules": {
     "description": "An array of references to load balancing rules that use this backend address pool.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "location": {
     "description": "The location of the backend address pool.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within the set of backend address pools used by the load balancer. This name can be used to access the resource.",
     "type": "string"
    },
    "outboundRule": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "A reference to an outbound rule that uses this backend address pool.",
     "type": "object"
    },
    "outboundRules": {
     "description": "An array of references to outbound rules that use this backend address pool.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "provisioningState": {
     "description": "The provisioning state of the backend address pool resource.",
     "type": "string"
    },
    "tunnelInterfaces": {
     "description": "An array of gateway load balancer tunnel interfaces.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:GatewayLoadBalancerTunnelInterfaceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "type": {
     "description": "Type of the resource.",
     "type": "string"
    },
    "virtualNetwork": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "A reference to a virtual network.",
     "type": "object"
    }
   },
   "required": [
    "backendIPConfigurations",
    "etag",
    "inboundNatRules",
    "loadBalancingRules",
    "outboundRule",
    "outboundRules",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:BastionActiveSessionResponse": {
   "description": "The session detail for a target.",
   "properties": {
    "protocol": {
     "description": "The protocol used to connect to the target.",
     "type": "string"
    },
    "resourceType": {
     "description": "The type of the resource.",
     "type": "string"
    },
    "sessionDurationInMins": {
     "description": "Duration in mins the session has been active.",
     "type": "number"
    },
    "sessionId": {
     "description": "A unique id for the session.",
     "type": "string"
    },
    "startTime": {
     "$ref": "pulumi.json#/Any",
     "description": "The time when the session started."
    },
    "targetHostName": {
     "description": "The host name of the target.",
     "type": "string"
    },
    "targetIpAddress": {
     "description": "The IP Address of the target.",
     "type": "string"
    },
    "targetResourceGroup": {
     "description": "The resource group of the target.",
     "type": "string"
    },
    "targetResourceId": {
     "description": "The resource id of the target.",
     "type": "string"
    },
    "targetSubscriptionId": {
     "description": "The subscription id for the target virtual machine.",
     "type": "string"
    },
    "userName": {
     "description": "The user name who is active on this session.",
     "type": "string"
    }
   },
   "required": [
    "protocol",
    "resourceType",
    "sessionDurationInMins",
    "sessionId",
    "startTime",
    "targetHostName",
    "targetIpAddress",
    "targetResourceGroup",
    "targetResourceId",
    "targetSubscriptionId",
    "userName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:BastionHostIPConfiguration": {
   "description": "IP configuration of an Bastion Host.",
   "properties": {
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "Name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "privateIPAllocationMethod": {
     "description": "Private IP allocation method.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:IPAllocationMethod"
      }
     ]
    },
    "publicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Reference of the PublicIP resource.",
     "type": "object"
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Reference of the subnet resource.",
     "type": "object"
    }
   },
   "required": [
    "publicIPAddress",
    "subnet"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:BastionHostIPConfigurationResponse": {
   "description": "IP configuration of an Bastion Host.",
   "properties": {
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "Name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "privateIPAllocationMethod": {
     "description": "Private IP allocation method.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the bastion host IP configuration resource.",
     "type": "string"
    },
    "publicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Reference of the PublicIP resource.",
     "type": "object"
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Reference of the subnet resource.",
     "type": "object"
    },
    "type": {
     "description": "Ip configuration type.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "provisioningState",
    "publicIPAddress",
    "subnet",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:BastionShareableLink": {
   "description": "Bastion Shareable Link.",
   "properties": {
    "vm": {
     "$ref": "#/types/azure-native_network_v20230201:network:VM",
     "description": "Reference of the virtual machine resource.",
     "type": "object"
    }
   },
   "required": [
    "vm"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:BastionShareableLinkResponse": {
   "description": "Bastion Shareable Link.",
   "properties": {
    "bsl": {
     "description": "The unique Bastion Shareable Link to the virtual machine.",
     "type": "string"
    },
    "createdAt": {
     "description": "The time when the link was created.",
     "type": "string"
    },
    "message": {
     "description": "Optional field indicating the warning or error message related to the vm in case of partial failure.",
     "type": "string"
    },
    "vm": {
     "$ref": "#/types/azure-native_network_v20230201:network:VMResponse",
     "description": "Reference of the virtual machine resource.",
     "type": "object"
    }
   },
   "required": [
    "bsl",
    "createdAt",
    "message",
    "vm"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:BgpPeerStatusResponse": {
   "description": "BGP peer status details.",
   "properties": {
    "asn": {
     "description": "The autonomous system number of the remote BGP peer.",
     "type": "number"
    },
    "connectedDuration": {
     "description": "For how long the peering has been up.",
     "type": "string"
    },
    "localAddress": {
     "description": "The virtual network gateway's local address.",
     "type": "string"
    },
    "messagesReceived": {
     "description": "The number of BGP messages received.",
     "type": "number"
    },
    "messagesSent": {
     "description": "The number of BGP messages sent.",
     "type": "number"
    },
    "neighbor": {
     "description": "The remote BGP peer.",
     "type": "string"
    },
    "routesReceived": {
     "description": "The number of routes learned from this peer.",
     "type": "number"
    },
    "state": {
     "description": "The BGP peer state.",
     "type": "string"
    }
   },
   "required": [
    "asn",
    "connectedDuration",
    "localAddress",
    "messagesReceived",
    "messagesSent",
    "neighbor",
    "routesReceived",
    "state"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:BgpSettings": {
   "description": "BGP settings details.",
   "properties": {
    "asn": {
     "description": "The BGP speaker's ASN.",
     "type": "number"
    },
    "bgpPeeringAddress": {
     "description": "The BGP peering address and BGP identifier of this BGP speaker.",
     "type": "string"
    },
    "bgpPeeringAddresses": {
     "description": "BGP peering address with IP configuration ID for virtual network gateway.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IPConfigurationBgpPeeringAddress",
      "type": "object"
     },
     "type": "array"
    },
    "peerWeight": {
     "description": "The weight added to routes learned from this BGP speaker.",
     "type": "integer"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:BgpSettingsResponse": {
   "description": "BGP settings details.",
   "properties": {
    "asn": {
     "description": "The BGP speaker's ASN.",
     "type": "number"
    },
    "bgpPeeringAddress": {
     "description": "The BGP peering address and BGP identifier of this BGP speaker.",
     "type": "string"
    },
    "bgpPeeringAddresses": {
     "description": "BGP peering address with IP configuration ID for virtual network gateway.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IPConfigurationBgpPeeringAddressResponse",
      "type": "object"
     },
     "type": "array"
    },
    "peerWeight": {
     "description": "The weight added to routes learned from this BGP speaker.",
     "type": "integer"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:BreakOutCategoryPolicies": {
   "description": "Network Virtual Appliance Sku Properties.",
   "properties": {
    "allow": {
     "description": "Flag to control breakout of o365 allow category.",
     "type": "boolean"
    },
    "default": {
     "description": "Flag to control breakout of o365 default category.",
     "type": "boolean"
    },
    "optimize": {
     "description": "Flag to control breakout of o365 optimize category.",
     "type": "boolean"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:BreakOutCategoryPoliciesResponse": {
   "description": "Network Virtual Appliance Sku Properties.",
   "properties": {
    "allow": {
     "description": "Flag to control breakout of o365 allow category.",
     "type": "boolean"
    },
    "default": {
     "description": "Flag to control breakout of o365 default category.",
     "type": "boolean"
    },
    "optimize": {
     "description": "Flag to control breakout of o365 optimize category.",
     "type": "boolean"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ConfigurationGroupResponse": {
   "description": "The network configuration group resource",
   "properties": {
    "description": {
     "description": "A description of the network group.",
     "type": "string"
    },
    "id": {
     "description": "Network group ID.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the scope assignment resource.",
     "type": "string"
    },
    "resourceGuid": {
     "description": "Unique identifier for this resource.",
     "type": "string"
    }
   },
   "required": [
    "provisioningState",
    "resourceGuid"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ConnectionMonitorDestination": {
   "description": "Describes the destination of connection monitor.",
   "properties": {
    "address": {
     "description": "Address of the connection monitor destination (IP or domain name).",
     "type": "string"
    },
    "port": {
     "description": "The destination port used by connection monitor.",
     "type": "integer"
    },
    "resourceId": {
     "description": "The ID of the resource used as the destination by connection monitor.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ConnectionMonitorDestinationResponse": {
   "description": "Describes the destination of connection monitor.",
   "properties": {
    "address": {
     "description": "Address of the connection monitor destination (IP or domain name).",
     "type": "string"
    },
    "port": {
     "description": "The destination port used by connection monitor.",
     "type": "integer"
    },
    "resourceId": {
     "description": "The ID of the resource used as the destination by connection monitor.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ConnectionMonitorEndpoint": {
   "description": "Describes the connection monitor endpoint.",
   "properties": {
    "address": {
     "description": "Address of the connection monitor endpoint (IP or domain name).",
     "type": "string"
    },
    "coverageLevel": {
     "description": "Test coverage for the endpoint.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:CoverageLevel"
      }
     ]
    },
    "filter": {
     "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorEndpointFilter",
     "description": "Filter for sub-items within the endpoint.",
     "type": "object"
    },
    "name": {
     "description": "The name of the connection monitor endpoint.",
     "type": "string"
    },
    "resourceId": {
     "description": "Resource ID of the connection monitor endpoint.",
     "type": "string"
    },
    "scope": {
     "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorEndpointScope",
     "description": "Endpoint scope.",
     "type": "object"
    },
    "type": {
     "description": "The endpoint type.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:EndpointType"
      }
     ]
    }
   },
   "required": [
    "name"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ConnectionMonitorEndpointFilter": {
   "description": "Describes the connection monitor endpoint filter.",
   "properties": {
    "items": {
     "description": "List of items in the filter.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorEndpointFilterItem",
      "type": "object"
     },
     "type": "array"
    },
    "type": {
     "description": "The behavior of the endpoint filter. Currently only 'Include' is supported.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ConnectionMonitorEndpointFilterType"
      }
     ]
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ConnectionMonitorEndpointFilterItem": {
   "description": "Describes the connection monitor endpoint filter item.",
   "properties": {
    "address": {
     "description": "The address of the filter item.",
     "type": "string"
    },
    "type": {
     "description": "The type of item included in the filter. Currently only 'AgentAddress' is supported.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ConnectionMonitorEndpointFilterItemType"
      }
     ]
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ConnectionMonitorEndpointFilterItemResponse": {
   "description": "Describes the connection monitor endpoint filter item.",
   "properties": {
    "address": {
     "description": "The address of the filter item.",
     "type": "string"
    },
    "type": {
     "description": "The type of item included in the filter. Currently only 'AgentAddress' is supported.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ConnectionMonitorEndpointFilterResponse": {
   "description": "Describes the connection monitor endpoint filter.",
   "properties": {
    "items": {
     "description": "List of items in the filter.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorEndpointFilterItemResponse",
      "type": "object"
     },
     "type": "array"
    },
    "type": {
     "description": "The behavior of the endpoint filter. Currently only 'Include' is supported.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ConnectionMonitorEndpointResponse": {
   "description": "Describes the connection monitor endpoint.",
   "properties": {
    "address": {
     "description": "Address of the connection monitor endpoint (IP or domain name).",
     "type": "string"
    },
    "coverageLevel": {
     "description": "Test coverage for the endpoint.",
     "type": "string"
    },
    "filter": {
     "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorEndpointFilterResponse",
     "description": "Filter for sub-items within the endpoint.",
     "type": "object"
    },
    "name": {
     "description": "The name of the connection monitor endpoint.",
     "type": "string"
    },
    "resourceId": {
     "description": "Resource ID of the connection monitor endpoint.",
     "type": "string"
    },
    "scope": {
     "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorEndpointScopeResponse",
     "description": "Endpoint scope.",
     "type": "object"
    },
    "type": {
     "description": "The endpoint type.",
     "type": "string"
    }
   },
   "required": [
    "name"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ConnectionMonitorEndpointScope": {
   "description": "Describes the connection monitor endpoint scope.",
   "properties": {
    "exclude": {
     "description": "List of items which needs to be excluded from the endpoint scope.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorEndpointScopeItem",
      "type": "object"
     },
     "type": "array"
    },
    "include": {
     "description": "List of items which needs to be included to the endpoint scope.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorEndpointScopeItem",
      "type": "object"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ConnectionMonitorEndpointScopeItem": {
   "description": "Describes the connection monitor endpoint scope item.",
   "properties": {
    "address": {
     "description": "The address of the endpoint item. Supported types are IPv4/IPv6 subnet mask or IPv4/IPv6 IP address.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ConnectionMonitorEndpointScopeItemResponse": {
   "description": "Describes the connection monitor endpoint scope item.",
   "properties": {
    "address": {
     "description": "The address of the endpoint item. Supported types are IPv4/IPv6 subnet mask or IPv4/IPv6 IP address.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ConnectionMonitorEndpointScopeResponse": {
   "description": "Describes the connection monitor endpoint scope.",
   "properties": {
    "exclude": {
     "description": "List of items which needs to be excluded from the endpoint scope.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorEndpointScopeItemResponse",
      "type": "object"
     },
     "type": "array"
    },
    "include": {
     "description": "List of items which needs to be included to the endpoint scope.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorEndpointScopeItemResponse",
      "type": "object"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ConnectionMonitorHttpConfiguration": {
   "description": "Describes the HTTP configuration.",
   "properties": {
    "method": {
     "description": "The HTTP method to use.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:HTTPConfigurationMethod"
      }
     ]
    },
    "path": {
     "description": "The path component of the URI. For instance, \"/dir1/dir2\".",
     "type": "string"
    },
    "port": {
     "description": "The port to connect to.",
     "type": "integer"
    },
    "preferHTTPS": {
     "description": "Value indicating whether HTTPS is preferred over HTTP in cases where the choice is not explicit.",
     "type": "boolean"
    },
    "requestHeaders": {
     "description": "The HTTP headers to transmit with the request.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:HTTPHeader",
      "type": "object"
     },
     "type": "array"
    },
    "validStatusCodeRanges": {
     "description": "HTTP status codes to consider successful. For instance, \"2xx,301-304,418\".",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ConnectionMonitorHttpConfigurationResponse": {
   "description": "Describes the HTTP configuration.",
   "properties": {
    "method": {
     "description": "The HTTP method to use.",
     "type": "string"
    },
    "path": {
     "description": "The path component of the URI. For instance, \"/dir1/dir2\".",
     "type": "string"
    },
    "port": {
     "description": "The port to connect to.",
     "type": "integer"
    },
    "preferHTTPS": {
     "description": "Value indicating whether HTTPS is preferred over HTTP in cases where the choice is not explicit.",
     "type": "boolean"
    },
    "requestHeaders": {
     "description": "The HTTP headers to transmit with the request.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:HTTPHeaderResponse",
      "type": "object"
     },
     "type": "array"
    },
    "validStatusCodeRanges": {
     "description": "HTTP status codes to consider successful. For instance, \"2xx,301-304,418\".",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ConnectionMonitorIcmpConfiguration": {
   "description": "Describes the ICMP configuration.",
   "properties": {
    "disableTraceRoute": {
     "description": "Value indicating whether path evaluation with trace route should be disabled.",
     "type": "boolean"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ConnectionMonitorIcmpConfigurationResponse": {
   "description": "Describes the ICMP configuration.",
   "properties": {
    "disableTraceRoute": {
     "description": "Value indicating whether path evaluation with trace route should be disabled.",
     "type": "boolean"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ConnectionMonitorOutput": {
   "description": "Describes a connection monitor output destination.",
   "properties": {
    "type": {
     "description": "Connection monitor output destination type. Currently, only \"Workspace\" is supported.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:OutputType"
      }
     ]
    },
    "workspaceSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorWorkspaceSettings",
     "description": "Describes the settings for producing output into a log analytics workspace.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ConnectionMonitorOutputResponse": {
   "description": "Describes a connection monitor output destination.",
   "properties": {
    "type": {
     "description": "Connection monitor output destination type. Currently, only \"Workspace\" is supported.",
     "type": "string"
    },
    "workspaceSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorWorkspaceSettingsResponse",
     "description": "Describes the settings for producing output into a log analytics workspace.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ConnectionMonitorSource": {
   "description": "Describes the source of connection monitor.",
   "properties": {
    "port": {
     "description": "The source port used by connection monitor.",
     "type": "integer"
    },
    "resourceId": {
     "description": "The ID of the resource used as the source by connection monitor.",
     "type": "string"
    }
   },
   "required": [
    "resourceId"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ConnectionMonitorSourceResponse": {
   "description": "Describes the source of connection monitor.",
   "properties": {
    "port": {
     "description": "The source port used by connection monitor.",
     "type": "integer"
    },
    "resourceId": {
     "description": "The ID of the resource used as the source by connection monitor.",
     "type": "string"
    }
   },
   "required": [
    "resourceId"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ConnectionMonitorSuccessThreshold": {
   "description": "Describes the threshold for declaring a test successful.",
   "properties": {
    "checksFailedPercent": {
     "description": "The maximum percentage of failed checks permitted for a test to evaluate as successful.",
     "type": "integer"
    },
    "roundTripTimeMs": {
     "description": "The maximum round-trip time in milliseconds permitted for a test to evaluate as successful.",
     "type": "number"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ConnectionMonitorSuccessThresholdResponse": {
   "description": "Describes the threshold for declaring a test successful.",
   "properties": {
    "checksFailedPercent": {
     "description": "The maximum percentage of failed checks permitted for a test to evaluate as successful.",
     "type": "integer"
    },
    "roundTripTimeMs": {
     "description": "The maximum round-trip time in milliseconds permitted for a test to evaluate as successful.",
     "type": "number"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ConnectionMonitorTcpConfiguration": {
   "description": "Describes the TCP configuration.",
   "properties": {
    "destinationPortBehavior": {
     "description": "Destination port behavior.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:DestinationPortBehavior"
      }
     ]
    },
    "disableTraceRoute": {
     "description": "Value indicating whether path evaluation with trace route should be disabled.",
     "type": "boolean"
    },
    "port": {
     "description": "The port to connect to.",
     "type": "integer"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ConnectionMonitorTcpConfigurationResponse": {
   "description": "Describes the TCP configuration.",
   "properties": {
    "destinationPortBehavior": {
     "description": "Destination port behavior.",
     "type": "string"
    },
    "disableTraceRoute": {
     "description": "Value indicating whether path evaluation with trace route should be disabled.",
     "type": "boolean"
    },
    "port": {
     "description": "The port to connect to.",
     "type": "integer"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ConnectionMonitorTestConfiguration": {
   "description": "Describes a connection monitor test configuration.",
   "properties": {
    "httpConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorHttpConfiguration",
     "description": "The parameters used to perform test evaluation over HTTP.",
     "type": "object"
    },
    "icmpConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorIcmpConfiguration",
     "description": "The parameters used to perform test evaluation over ICMP.",
     "type": "object"
    },
    "name": {
     "description": "The name of the connection monitor test configuration.",
     "type": "string"
    },
    "preferredIPVersion": {
     "description": "The preferred IP version to use in test evaluation. The connection monitor may choose to use a different version depending on other parameters.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:PreferredIPVersion"
      }
     ]
    },
    "protocol": {
     "description": "The protocol to use in test evaluation.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ConnectionMonitorTestConfigurationProtocol"
      }
     ]
    },
    "successThreshold": {
     "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorSuccessThreshold",
     "description": "The threshold for declaring a test successful.",
     "type": "object"
    },
    "tcpConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorTcpConfiguration",
     "description": "The parameters used to perform test evaluation over TCP.",
     "type": "object"
    },
    "testFrequencySec": {
     "description": "The frequency of test evaluation, in seconds.",
     "type": "integer"
    }
   },
   "required": [
    "name",
    "protocol"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ConnectionMonitorTestConfigurationResponse": {
   "description": "Describes a connection monitor test configuration.",
   "properties": {
    "httpConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorHttpConfigurationResponse",
     "description": "The parameters used to perform test evaluation over HTTP.",
     "type": "object"
    },
    "icmpConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorIcmpConfigurationResponse",
     "description": "The parameters used to perform test evaluation over ICMP.",
     "type": "object"
    },
    "name": {
     "description": "The name of the connection monitor test configuration.",
     "type": "string"
    },
    "preferredIPVersion": {
     "description": "The preferred IP version to use in test evaluation. The connection monitor may choose to use a different version depending on other parameters.",
     "type": "string"
    },
    "protocol": {
     "description": "The protocol to use in test evaluation.",
     "type": "string"
    },
    "successThreshold": {
     "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorSuccessThresholdResponse",
     "description": "The threshold for declaring a test successful.",
     "type": "object"
    },
    "tcpConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorTcpConfigurationResponse",
     "description": "The parameters used to perform test evaluation over TCP.",
     "type": "object"
    },
    "testFrequencySec": {
     "description": "The frequency of test evaluation, in seconds.",
     "type": "integer"
    }
   },
   "required": [
    "name",
    "protocol"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ConnectionMonitorTestGroup": {
   "description": "Describes the connection monitor test group.",
   "properties": {
    "destinations": {
     "description": "List of destination endpoint names.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "disable": {
     "description": "Value indicating whether test group is disabled.",
     "type": "boolean"
    },
    "name": {
     "description": "The name of the connection monitor test group.",
     "type": "string"
    },
    "sources": {
     "description": "List of source endpoint names.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "testConfigurations": {
     "description": "List of test configuration names.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "required": [
    "destinations",
    "name",
    "sources",
    "testConfigurations"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ConnectionMonitorTestGroupResponse": {
   "description": "Describes the connection monitor test group.",
   "properties": {
    "destinations": {
     "description": "List of destination endpoint names.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "disable": {
     "description": "Value indicating whether test group is disabled.",
     "type": "boolean"
    },
    "name": {
     "description": "The name of the connection monitor test group.",
     "type": "string"
    },
    "sources": {
     "description": "List of source endpoint names.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "testConfigurations": {
     "description": "List of test configuration names.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "required": [
    "destinations",
    "name",
    "sources",
    "testConfigurations"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ConnectionMonitorWorkspaceSettings": {
   "description": "Describes the settings for producing output into a log analytics workspace.",
   "properties": {
    "workspaceResourceId": {
     "description": "Log analytics workspace resource ID.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ConnectionMonitorWorkspaceSettingsResponse": {
   "description": "Describes the settings for producing output into a log analytics workspace.",
   "properties": {
    "workspaceResourceId": {
     "description": "Log analytics workspace resource ID.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ConnectivityGroupItem": {
   "description": "Connectivity group item.",
   "properties": {
    "groupConnectivity": {
     "description": "Group connectivity type.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:GroupConnectivity"
      }
     ]
    },
    "isGlobal": {
     "description": "Flag if global is supported.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:IsGlobal"
      }
     ]
    },
    "networkGroupId": {
     "description": "Network group Id.",
     "type": "string"
    },
    "useHubGateway": {
     "description": "Flag if need to use hub gateway.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:UseHubGateway"
      }
     ]
    }
   },
   "required": [
    "groupConnectivity",
    "networkGroupId"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ConnectivityGroupItemResponse": {
   "description": "Connectivity group item.",
   "properties": {
    "groupConnectivity": {
     "description": "Group connectivity type.",
     "type": "string"
    },
    "isGlobal": {
     "description": "Flag if global is supported.",
     "type": "string"
    },
    "networkGroupId": {
     "description": "Network group Id.",
     "type": "string"
    },
    "useHubGateway": {
     "description": "Flag if need to use hub gateway.",
     "type": "string"
    }
   },
   "required": [
    "groupConnectivity",
    "networkGroupId"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ContainerNetworkInterfaceConfiguration": {
   "description": "Container network interface configuration child resource.",
   "properties": {
    "containerNetworkInterfaces": {
     "description": "A list of container network interfaces created from this container network interface configuration.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
      "type": "object"
     },
     "type": "array"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "ipConfigurations": {
     "description": "A list of ip configurations of the container network interface configuration.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IPConfigurationProfile",
      "type": "object"
     },
     "type": "array"
    },
    "name": {
     "description": "The name of the resource. This name can be used to access the resource.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ContainerNetworkInterfaceConfigurationResponse": {
   "description": "Container network interface configuration child resource.",
   "properties": {
    "containerNetworkInterfaces": {
     "description": "A list of container network interfaces created from this container network interface configuration.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "ipConfigurations": {
     "description": "A list of ip configurations of the container network interface configuration.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IPConfigurationProfileResponse",
      "type": "object"
     },
     "type": "array"
    },
    "name": {
     "description": "The name of the resource. This name can be used to access the resource.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the container network interface configuration resource.",
     "type": "string"
    },
    "type": {
     "description": "Sub Resource type.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ContainerNetworkInterfaceIpConfigurationResponse": {
   "description": "The ip configuration for a container network interface.",
   "properties": {
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource. This name can be used to access the resource.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the container network interface IP configuration resource.",
     "type": "string"
    },
    "type": {
     "description": "Sub Resource type.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ContainerNetworkInterfaceResponse": {
   "description": "Container network interface child resource.",
   "properties": {
    "container": {
     "$ref": "#/types/azure-native_network_v20230201:network:ContainerResponse",
     "description": "Reference to the container to which this container network interface is attached.",
     "type": "object"
    },
    "containerNetworkInterfaceConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:ContainerNetworkInterfaceConfigurationResponse",
     "description": "Container network interface configuration from which this container network interface is created.",
     "type": "object"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "ipConfigurations": {
     "description": "Reference to the ip configuration on this container nic.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ContainerNetworkInterfaceIpConfigurationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "name": {
     "description": "The name of the resource. This name can be used to access the resource.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the container network interface resource.",
     "type": "string"
    },
    "type": {
     "description": "Sub Resource type.",
     "type": "string"
    }
   },
   "required": [
    "containerNetworkInterfaceConfiguration",
    "etag",
    "ipConfigurations",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ContainerResponse": {
   "description": "Reference to container resource in remote resource provider.",
   "properties": {
    "id": {
     "description": "Resource ID.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:Criterion": {
   "description": "A matching criteria which matches routes based on route prefix, community, and AS path.",
   "properties": {
    "asPath": {
     "description": "List of AS paths which this criteria matches.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "community": {
     "description": "List of BGP communities which this criteria matches.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "matchCondition": {
     "description": "Match condition to apply RouteMap rules.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:RouteMapMatchCondition"
      }
     ]
    },
    "routePrefix": {
     "description": "List of route prefixes which this criteria matches.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:CriterionResponse": {
   "description": "A matching criteria which matches routes based on route prefix, community, and AS path.",
   "properties": {
    "asPath": {
     "description": "List of AS paths which this criteria matches.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "community": {
     "description": "List of BGP communities which this criteria matches.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "matchCondition": {
     "description": "Match condition to apply RouteMap rules.",
     "type": "string"
    },
    "routePrefix": {
     "description": "List of route prefixes which this criteria matches.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:CrossTenantScopesResponse": {
   "description": "Cross tenant scopes.",
   "properties": {
    "managementGroups": {
     "description": "List of management groups.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "subscriptions": {
     "description": "List of subscriptions.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "tenantId": {
     "description": "Tenant ID.",
     "type": "string"
    }
   },
   "required": [
    "managementGroups",
    "subscriptions",
    "tenantId"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:CustomDnsConfigPropertiesFormat": {
   "description": "Contains custom Dns resolution configuration from customer.",
   "properties": {
    "fqdn": {
     "description": "Fqdn that resolves to private endpoint ip address.",
     "type": "string"
    },
    "ipAddresses": {
     "description": "A list of private ip addresses of the private endpoint.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:CustomDnsConfigPropertiesFormatResponse": {
   "description": "Contains custom Dns resolution configuration from customer.",
   "properties": {
    "fqdn": {
     "description": "Fqdn that resolves to private endpoint ip address.",
     "type": "string"
    },
    "ipAddresses": {
     "description": "A list of private ip addresses of the private endpoint.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:DdosSettings": {
   "description": "Contains the DDoS protection settings of the public IP.",
   "properties": {
    "ddosProtectionPlan": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "The DDoS protection plan associated with the public IP. Can only be set if ProtectionMode is Enabled",
     "type": "object"
    },
    "protectionMode": {
     "description": "The DDoS protection mode of the public IP",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:DdosSettingsProtectionMode"
      }
     ]
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:DdosSettingsResponse": {
   "description": "Contains the DDoS protection settings of the public IP.",
   "properties": {
    "ddosProtectionPlan": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The DDoS protection plan associated with the public IP. Can only be set if ProtectionMode is Enabled",
     "type": "object"
    },
    "protectionMode": {
     "description": "The DDoS protection mode of the public IP",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:Delegation": {
   "description": "Details the service to which the subnet is delegated.",
   "properties": {
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a subnet. This name can be used to access the resource.",
     "type": "string"
    },
    "serviceName": {
     "description": "The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers).",
     "type": "string"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:DelegationProperties": {
   "description": "Properties of the delegation.",
   "properties": {
    "serviceName": {
     "description": "The service name to which the NVA is delegated.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:DelegationPropertiesResponse": {
   "description": "Properties of the delegation.",
   "properties": {
    "provisioningState": {
     "description": "The current provisioning state.",
     "type": "string"
    },
    "serviceName": {
     "description": "The service name to which the NVA is delegated.",
     "type": "string"
    }
   },
   "required": [
    "provisioningState"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:DelegationResponse": {
   "description": "Details the service to which the subnet is delegated.",
   "properties": {
    "actions": {
     "description": "The actions permitted to the service upon delegation.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a subnet. This name can be used to access the resource.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the service delegation resource.",
     "type": "string"
    },
    "serviceName": {
     "description": "The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers).",
     "type": "string"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "actions",
    "etag",
    "provisioningState"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:DeviceProperties": {
   "description": "List of properties of the device.",
   "properties": {
    "deviceModel": {
     "description": "Model of the device.",
     "type": "string"
    },
    "deviceVendor": {
     "description": "Name of the device Vendor.",
     "type": "string"
    },
    "linkSpeedInMbps": {
     "description": "Link speed.",
     "type": "integer"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:DevicePropertiesResponse": {
   "description": "List of properties of the device.",
   "properties": {
    "deviceModel": {
     "description": "Model of the device.",
     "type": "string"
    },
    "deviceVendor": {
     "description": "Name of the device Vendor.",
     "type": "string"
    },
    "linkSpeedInMbps": {
     "description": "Link speed.",
     "type": "integer"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:DhcpOptions": {
   "description": "DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options.",
   "properties": {
    "dnsServers": {
     "description": "The list of DNS servers IP addresses.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:DhcpOptionsResponse": {
   "description": "DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options.",
   "properties": {
    "dnsServers": {
     "description": "The list of DNS servers IP addresses.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:DnsSettings": {
   "description": "DNS Proxy Settings in Firewall Policy.",
   "properties": {
    "enableProxy": {
     "description": "Enable DNS Proxy on Firewalls attached to the Firewall Policy.",
     "type": "boolean"
    },
    "requireProxyForNetworkRules": {
     "description": "FQDNs in Network Rules are supported when set to true.",
     "type": "boolean"
    },
    "servers": {
     "description": "List of Custom DNS Servers.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:DnsSettingsResponse": {
   "description": "DNS Proxy Settings in Firewall Policy.",
   "properties": {
    "enableProxy": {
     "description": "Enable DNS Proxy on Firewalls attached to the Firewall Policy.",
     "type": "boolean"
    },
    "requireProxyForNetworkRules": {
     "description": "FQDNs in Network Rules are supported when set to true.",
     "type": "boolean"
    },
    "servers": {
     "description": "List of Custom DNS Servers.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:EffectiveConnectivityConfigurationResponse": {
   "description": "The network manager effective connectivity configuration",
   "properties": {
    "appliesToGroups": {
     "description": "Groups for configuration",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConnectivityGroupItemResponse",
      "type": "object"
     },
     "type": "array"
    },
    "configurationGroups": {
     "description": "Effective configuration groups.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConfigurationGroupResponse",
      "type": "object"
     },
     "type": "array"
    },
    "connectivityTopology": {
     "description": "Connectivity topology type.",
     "type": "string"
    },
    "deleteExistingPeering": {
     "description": "Flag if need to remove current existing peerings.",
     "type": "string"
    },
    "description": {
     "description": "A description of the connectivity configuration.",
     "type": "string"
    },
    "hubs": {
     "description": "List of hubItems",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:HubResponse",
      "type": "object"
     },
     "type": "array"
    },
    "id": {
     "description": "Connectivity configuration ID.",
     "type": "string"
    },
    "isGlobal": {
     "description": "Flag if global mesh is supported.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the connectivity configuration resource.",
     "type": "string"
    },
    "resourceGuid": {
     "description": "Unique identifier for this resource.",
     "type": "string"
    }
   },
   "required": [
    "appliesToGroups",
    "connectivityTopology",
    "provisioningState",
    "resourceGuid"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:EffectiveDefaultSecurityAdminRuleResponse": {
   "description": "Network default admin rule.",
   "properties": {
    "access": {
     "description": "Indicates the access allowed for this particular rule",
     "type": "string"
    },
    "configurationDescription": {
     "description": "A description of the security admin configuration.",
     "type": "string"
    },
    "description": {
     "description": "A description for this rule. Restricted to 140 chars.",
     "type": "string"
    },
    "destinationPortRanges": {
     "description": "The destination port ranges.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "destinations": {
     "description": "The destination address prefixes. CIDR or destination IP ranges.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AddressPrefixItemResponse",
      "type": "object"
     },
     "type": "array"
    },
    "direction": {
     "description": "Indicates if the traffic matched against the rule in inbound or outbound.",
     "type": "string"
    },
    "flag": {
     "description": "Default rule flag.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "kind": {
     "const": "Default",
     "description": "Whether the rule is custom or default.\nExpected value is 'Default'.",
     "type": "string"
    },
    "priority": {
     "description": "The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
     "type": "integer"
    },
    "protocol": {
     "description": "Network protocol this rule applies to.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the resource.",
     "type": "string"
    },
    "resourceGuid": {
     "description": "Unique identifier for this resource.",
     "type": "string"
    },
    "ruleCollectionAppliesToGroups": {
     "description": "Groups for rule collection",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkManagerSecurityGroupItemResponse",
      "type": "object"
     },
     "type": "array"
    },
    "ruleCollectionDescription": {
     "description": "A description of the rule collection.",
     "type": "string"
    },
    "ruleGroups": {
     "description": "Effective configuration groups.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConfigurationGroupResponse",
      "type": "object"
     },
     "type": "array"
    },
    "sourcePortRanges": {
     "description": "The source port ranges.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "sources": {
     "description": "The CIDR or source IP ranges.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AddressPrefixItemResponse",
      "type": "object"
     },
     "type": "array"
    }
   },
   "required": [
    "access",
    "description",
    "destinationPortRanges",
    "destinations",
    "direction",
    "kind",
    "priority",
    "protocol",
    "provisioningState",
    "resourceGuid",
    "sourcePortRanges",
    "sources"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:EffectiveSecurityAdminRuleResponse": {
   "description": "Network admin rule.",
   "properties": {
    "access": {
     "description": "Indicates the access allowed for this particular rule",
     "type": "string"
    },
    "configurationDescription": {
     "description": "A description of the security admin configuration.",
     "type": "string"
    },
    "description": {
     "description": "A description for this rule. Restricted to 140 chars.",
     "type": "string"
    },
    "destinationPortRanges": {
     "description": "The destination port ranges.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "destinations": {
     "description": "The destination address prefixes. CIDR or destination IP ranges.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AddressPrefixItemResponse",
      "type": "object"
     },
     "type": "array"
    },
    "direction": {
     "description": "Indicates if the traffic matched against the rule in inbound or outbound.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "kind": {
     "const": "Custom",
     "description": "Whether the rule is custom or default.\nExpected value is 'Custom'.",
     "type": "string"
    },
    "priority": {
     "description": "The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
     "type": "integer"
    },
    "protocol": {
     "description": "Network protocol this rule applies to.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the resource.",
     "type": "string"
    },
    "resourceGuid": {
     "description": "Unique identifier for this resource.",
     "type": "string"
    },
    "ruleCollectionAppliesToGroups": {
     "description": "Groups for rule collection",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkManagerSecurityGroupItemResponse",
      "type": "object"
     },
     "type": "array"
    },
    "ruleCollectionDescription": {
     "description": "A description of the rule collection.",
     "type": "string"
    },
    "ruleGroups": {
     "description": "Effective configuration groups.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConfigurationGroupResponse",
      "type": "object"
     },
     "type": "array"
    },
    "sourcePortRanges": {
     "description": "The source port ranges.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "sources": {
     "description": "The CIDR or source IP ranges.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AddressPrefixItemResponse",
      "type": "object"
     },
     "type": "array"
    }
   },
   "required": [
    "access",
    "direction",
    "kind",
    "priority",
    "protocol",
    "provisioningState",
    "resourceGuid"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExclusionManagedRule": {
   "description": "Defines a managed rule to use for exclusion.",
   "properties": {
    "ruleId": {
     "description": "Identifier for the managed rule.",
     "type": "string"
    }
   },
   "required": [
    "ruleId"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExclusionManagedRuleGroup": {
   "description": "Defines a managed rule group to use for exclusion.",
   "properties": {
    "ruleGroupName": {
     "description": "The managed rule group for exclusion.",
     "type": "string"
    },
    "rules": {
     "description": "List of rules that will be excluded. If none specified, all rules in the group will be excluded.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExclusionManagedRule",
      "type": "object"
     },
     "type": "array"
    }
   },
   "required": [
    "ruleGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExclusionManagedRuleGroupResponse": {
   "description": "Defines a managed rule group to use for exclusion.",
   "properties": {
    "ruleGroupName": {
     "description": "The managed rule group for exclusion.",
     "type": "string"
    },
    "rules": {
     "description": "List of rules that will be excluded. If none specified, all rules in the group will be excluded.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExclusionManagedRuleResponse",
      "type": "object"
     },
     "type": "array"
    }
   },
   "required": [
    "ruleGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExclusionManagedRuleResponse": {
   "description": "Defines a managed rule to use for exclusion.",
   "properties": {
    "ruleId": {
     "description": "Identifier for the managed rule.",
     "type": "string"
    }
   },
   "required": [
    "ruleId"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExclusionManagedRuleSet": {
   "description": "Defines a managed rule set for Exclusions.",
   "properties": {
    "ruleGroups": {
     "description": "Defines the rule groups to apply to the rule set.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExclusionManagedRuleGroup",
      "type": "object"
     },
     "type": "array"
    },
    "ruleSetType": {
     "description": "Defines the rule set type to use.",
     "type": "string"
    },
    "ruleSetVersion": {
     "description": "Defines the version of the rule set to use.",
     "type": "string"
    }
   },
   "required": [
    "ruleSetType",
    "ruleSetVersion"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExclusionManagedRuleSetResponse": {
   "description": "Defines a managed rule set for Exclusions.",
   "properties": {
    "ruleGroups": {
     "description": "Defines the rule groups to apply to the rule set.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExclusionManagedRuleGroupResponse",
      "type": "object"
     },
     "type": "array"
    },
    "ruleSetType": {
     "description": "Defines the rule set type to use.",
     "type": "string"
    },
    "ruleSetVersion": {
     "description": "Defines the version of the rule set to use.",
     "type": "string"
    }
   },
   "required": [
    "ruleSetType",
    "ruleSetVersion"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExplicitProxy": {
   "description": "Explicit Proxy Settings in Firewall Policy.",
   "properties": {
    "enableExplicitProxy": {
     "description": "When set to true, explicit proxy mode is enabled.",
     "type": "boolean"
    },
    "enablePacFile": {
     "description": "When set to true, pac file port and url needs to be provided.",
     "type": "boolean"
    },
    "httpPort": {
     "description": "Port number for explicit proxy http protocol, cannot be greater than 64000.",
     "type": "integer"
    },
    "httpsPort": {
     "description": "Port number for explicit proxy https protocol, cannot be greater than 64000.",
     "type": "integer"
    },
    "pacFile": {
     "description": "SAS URL for PAC file.",
     "type": "string"
    },
    "pacFilePort": {
     "description": "Port number for firewall to serve PAC file.",
     "type": "integer"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExplicitProxyResponse": {
   "description": "Explicit Proxy Settings in Firewall Policy.",
   "properties": {
    "enableExplicitProxy": {
     "description": "When set to true, explicit proxy mode is enabled.",
     "type": "boolean"
    },
    "enablePacFile": {
     "description": "When set to true, pac file port and url needs to be provided.",
     "type": "boolean"
    },
    "httpPort": {
     "description": "Port number for explicit proxy http protocol, cannot be greater than 64000.",
     "type": "integer"
    },
    "httpsPort": {
     "description": "Port number for explicit proxy https protocol, cannot be greater than 64000.",
     "type": "integer"
    },
    "pacFile": {
     "description": "SAS URL for PAC file.",
     "type": "string"
    },
    "pacFilePort": {
     "description": "Port number for firewall to serve PAC file.",
     "type": "integer"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExpressRouteCircuitAuthorization": {
   "description": "Authorization in an ExpressRouteCircuit resource.",
   "properties": {
    "authorizationKey": {
     "description": "The authorization key.",
     "type": "string"
    },
    "authorizationUseStatus": {
     "description": "The authorization use status.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:AuthorizationUseStatus"
      }
     ]
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExpressRouteCircuitAuthorizationResponse": {
   "description": "Authorization in an ExpressRouteCircuit resource.",
   "properties": {
    "authorizationKey": {
     "description": "The authorization key.",
     "type": "string"
    },
    "authorizationUseStatus": {
     "description": "The authorization use status.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the authorization resource.",
     "type": "string"
    },
    "type": {
     "description": "Type of the resource.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExpressRouteCircuitConnection": {
   "description": "Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.",
   "properties": {
    "addressPrefix": {
     "description": "/29 IP address space to carve out Customer addresses for tunnels.",
     "type": "string"
    },
    "authorizationKey": {
     "description": "The authorization key.",
     "type": "string"
    },
    "expressRouteCircuitPeering": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection.",
     "type": "object"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "ipv6CircuitConnectionConfig": {
     "$ref": "#/types/azure-native_network_v20230201:network:Ipv6CircuitConnectionConfig",
     "description": "IPv6 Address PrefixProperties of the express route circuit connection.",
     "type": "object"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "peerExpressRouteCircuitPeering": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Reference to Express Route Circuit Private Peering Resource of the peered circuit.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExpressRouteCircuitConnectionResponse": {
   "description": "Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.",
   "properties": {
    "addressPrefix": {
     "description": "/29 IP address space to carve out Customer addresses for tunnels.",
     "type": "string"
    },
    "authorizationKey": {
     "description": "The authorization key.",
     "type": "string"
    },
    "circuitConnectionStatus": {
     "description": "Express Route Circuit connection state.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "expressRouteCircuitPeering": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection.",
     "type": "object"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "ipv6CircuitConnectionConfig": {
     "$ref": "#/types/azure-native_network_v20230201:network:Ipv6CircuitConnectionConfigResponse",
     "description": "IPv6 Address PrefixProperties of the express route circuit connection.",
     "type": "object"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "peerExpressRouteCircuitPeering": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Reference to Express Route Circuit Private Peering Resource of the peered circuit.",
     "type": "object"
    },
    "provisioningState": {
     "description": "The provisioning state of the express route circuit connection resource.",
     "type": "string"
    },
    "type": {
     "description": "Type of the resource.",
     "type": "string"
    }
   },
   "required": [
    "circuitConnectionStatus",
    "etag",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExpressRouteCircuitPeering": {
   "description": "Peering in an ExpressRouteCircuit resource.",
   "properties": {
    "azureASN": {
     "description": "The Azure ASN.",
     "type": "integer"
    },
    "connections": {
     "description": "The list of circuit connections associated with Azure Private Peering for this circuit.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitConnection",
      "type": "object"
     },
     "type": "array"
    },
    "gatewayManagerEtag": {
     "description": "The GatewayManager Etag.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "ipv6PeeringConfig": {
     "$ref": "#/types/azure-native_network_v20230201:network:Ipv6ExpressRouteCircuitPeeringConfig",
     "description": "The IPv6 peering configuration.",
     "type": "object"
    },
    "microsoftPeeringConfig": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitPeeringConfig",
     "description": "The Microsoft peering configuration.",
     "type": "object"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "peerASN": {
     "description": "The peer ASN.",
     "type": "number"
    },
    "peeringType": {
     "description": "The peering type.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ExpressRoutePeeringType"
      }
     ]
    },
    "primaryAzurePort": {
     "description": "The primary port.",
     "type": "string"
    },
    "primaryPeerAddressPrefix": {
     "description": "The primary address prefix.",
     "type": "string"
    },
    "routeFilter": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "The reference to the RouteFilter resource.",
     "type": "object"
    },
    "secondaryAzurePort": {
     "description": "The secondary port.",
     "type": "string"
    },
    "secondaryPeerAddressPrefix": {
     "description": "The secondary address prefix.",
     "type": "string"
    },
    "sharedKey": {
     "description": "The shared key.",
     "type": "string"
    },
    "state": {
     "description": "The peering state.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ExpressRoutePeeringState"
      }
     ]
    },
    "stats": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitStats",
     "description": "The peering stats of express route circuit.",
     "type": "object"
    },
    "vlanId": {
     "description": "The VLAN ID.",
     "type": "integer"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExpressRouteCircuitPeeringConfig": {
   "description": "Specifies the peering configuration.",
   "properties": {
    "advertisedCommunities": {
     "description": "The communities of bgp peering. Specified for microsoft peering.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "advertisedPublicPrefixes": {
     "description": "The reference to AdvertisedPublicPrefixes.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "customerASN": {
     "description": "The CustomerASN of the peering.",
     "type": "integer"
    },
    "legacyMode": {
     "description": "The legacy mode of the peering.",
     "type": "integer"
    },
    "routingRegistryName": {
     "description": "The RoutingRegistryName of the configuration.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExpressRouteCircuitPeeringConfigResponse": {
   "description": "Specifies the peering configuration.",
   "properties": {
    "advertisedCommunities": {
     "description": "The communities of bgp peering. Specified for microsoft peering.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "advertisedPublicPrefixes": {
     "description": "The reference to AdvertisedPublicPrefixes.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "advertisedPublicPrefixesState": {
     "description": "The advertised public prefix state of the Peering resource.",
     "type": "string"
    },
    "customerASN": {
     "description": "The CustomerASN of the peering.",
     "type": "integer"
    },
    "legacyMode": {
     "description": "The legacy mode of the peering.",
     "type": "integer"
    },
    "routingRegistryName": {
     "description": "The RoutingRegistryName of the configuration.",
     "type": "string"
    }
   },
   "required": [
    "advertisedPublicPrefixesState"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExpressRouteCircuitPeeringId": {
   "description": "ExpressRoute circuit peering identifier.",
   "properties": {
    "id": {
     "description": "The ID of the ExpressRoute circuit peering.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExpressRouteCircuitPeeringIdResponse": {
   "description": "ExpressRoute circuit peering identifier.",
   "properties": {
    "id": {
     "description": "The ID of the ExpressRoute circuit peering.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExpressRouteCircuitPeeringResponse": {
   "description": "Peering in an ExpressRouteCircuit resource.",
   "properties": {
    "azureASN": {
     "description": "The Azure ASN.",
     "type": "integer"
    },
    "connections": {
     "description": "The list of circuit connections associated with Azure Private Peering for this circuit.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitConnectionResponse",
      "type": "object"
     },
     "type": "array"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "expressRouteConnection": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteConnectionIdResponse",
     "description": "The ExpressRoute connection.",
     "type": "object"
    },
    "gatewayManagerEtag": {
     "description": "The GatewayManager Etag.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "ipv6PeeringConfig": {
     "$ref": "#/types/azure-native_network_v20230201:network:Ipv6ExpressRouteCircuitPeeringConfigResponse",
     "description": "The IPv6 peering configuration.",
     "type": "object"
    },
    "lastModifiedBy": {
     "description": "Who was the last to modify the peering.",
     "type": "string"
    },
    "microsoftPeeringConfig": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitPeeringConfigResponse",
     "description": "The Microsoft peering configuration.",
     "type": "object"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "peerASN": {
     "description": "The peer ASN.",
     "type": "number"
    },
    "peeredConnections": {
     "description": "The list of peered circuit connections associated with Azure Private Peering for this circuit.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PeerExpressRouteCircuitConnectionResponse",
      "type": "object"
     },
     "type": "array"
    },
    "peeringType": {
     "description": "The peering type.",
     "type": "string"
    },
    "primaryAzurePort": {
     "description": "The primary port.",
     "type": "string"
    },
    "primaryPeerAddressPrefix": {
     "description": "The primary address prefix.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the express route circuit peering resource.",
     "type": "string"
    },
    "routeFilter": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The reference to the RouteFilter resource.",
     "type": "object"
    },
    "secondaryAzurePort": {
     "description": "The secondary port.",
     "type": "string"
    },
    "secondaryPeerAddressPrefix": {
     "description": "The secondary address prefix.",
     "type": "string"
    },
    "sharedKey": {
     "description": "The shared key.",
     "type": "string"
    },
    "state": {
     "description": "The peering state.",
     "type": "string"
    },
    "stats": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitStatsResponse",
     "description": "The peering stats of express route circuit.",
     "type": "object"
    },
    "type": {
     "description": "Type of the resource.",
     "type": "string"
    },
    "vlanId": {
     "description": "The VLAN ID.",
     "type": "integer"
    }
   },
   "required": [
    "etag",
    "lastModifiedBy",
    "peeredConnections",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExpressRouteCircuitServiceProviderProperties": {
   "description": "Contains ServiceProviderProperties in an ExpressRouteCircuit.",
   "properties": {
    "bandwidthInMbps": {
     "description": "The BandwidthInMbps.",
     "type": "integer"
    },
    "peeringLocation": {
     "description": "The peering location.",
     "type": "string"
    },
    "serviceProviderName": {
     "description": "The serviceProviderName.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExpressRouteCircuitServiceProviderPropertiesResponse": {
   "description": "Contains ServiceProviderProperties in an ExpressRouteCircuit.",
   "properties": {
    "bandwidthInMbps": {
     "description": "The BandwidthInMbps.",
     "type": "integer"
    },
    "peeringLocation": {
     "description": "The peering location.",
     "type": "string"
    },
    "serviceProviderName": {
     "description": "The serviceProviderName.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExpressRouteCircuitSku": {
   "description": "Contains SKU in an ExpressRouteCircuit.",
   "properties": {
    "family": {
     "description": "The family of the SKU.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ExpressRouteCircuitSkuFamily"
      }
     ]
    },
    "name": {
     "description": "The name of the SKU.",
     "type": "string"
    },
    "tier": {
     "description": "The tier of the SKU.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ExpressRouteCircuitSkuTier"
      }
     ]
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExpressRouteCircuitSkuResponse": {
   "description": "Contains SKU in an ExpressRouteCircuit.",
   "properties": {
    "family": {
     "description": "The family of the SKU.",
     "type": "string"
    },
    "name": {
     "description": "The name of the SKU.",
     "type": "string"
    },
    "tier": {
     "description": "The tier of the SKU.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExpressRouteCircuitStats": {
   "description": "Contains stats associated with the peering.",
   "properties": {
    "primarybytesIn": {
     "description": "The Primary BytesIn of the peering.",
     "type": "number"
    },
    "primarybytesOut": {
     "description": "The primary BytesOut of the peering.",
     "type": "number"
    },
    "secondarybytesIn": {
     "description": "The secondary BytesIn of the peering.",
     "type": "number"
    },
    "secondarybytesOut": {
     "description": "The secondary BytesOut of the peering.",
     "type": "number"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExpressRouteCircuitStatsResponse": {
   "description": "Contains stats associated with the peering.",
   "properties": {
    "primarybytesIn": {
     "description": "The Primary BytesIn of the peering.",
     "type": "number"
    },
    "primarybytesOut": {
     "description": "The primary BytesOut of the peering.",
     "type": "number"
    },
    "secondarybytesIn": {
     "description": "The secondary BytesIn of the peering.",
     "type": "number"
    },
    "secondarybytesOut": {
     "description": "The secondary BytesOut of the peering.",
     "type": "number"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExpressRouteConnection": {
   "description": "ExpressRouteConnection resource.",
   "properties": {
    "authorizationKey": {
     "description": "Authorization key to establish the connection.",
     "type": "string"
    },
    "enableInternetSecurity": {
     "description": "Enable internet security.",
     "type": "boolean"
    },
    "enablePrivateLinkFastPath": {
     "description": "Bypass the ExpressRoute gateway when accessing private-links. ExpressRoute FastPath (expressRouteGatewayBypass) must be enabled.",
     "type": "boolean"
    },
    "expressRouteCircuitPeering": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitPeeringId",
     "description": "The ExpressRoute circuit peering.",
     "type": "object"
    },
    "expressRouteGatewayBypass": {
     "description": "Enable FastPath to vWan Firewall hub.",
     "type": "boolean"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource.",
     "type": "string"
    },
    "routingConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfiguration",
     "description": "The Routing Configuration indicating the associated and propagated route tables on this connection.",
     "type": "object"
    },
    "routingWeight": {
     "description": "The routing weight associated to the connection.",
     "type": "integer"
    }
   },
   "required": [
    "expressRouteCircuitPeering",
    "name"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExpressRouteConnectionIdResponse": {
   "description": "The ID of the ExpressRouteConnection.",
   "properties": {
    "id": {
     "description": "The ID of the ExpressRouteConnection.",
     "type": "string"
    }
   },
   "required": [
    "id"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExpressRouteConnectionResponse": {
   "description": "ExpressRouteConnection resource.",
   "properties": {
    "authorizationKey": {
     "description": "Authorization key to establish the connection.",
     "type": "string"
    },
    "enableInternetSecurity": {
     "description": "Enable internet security.",
     "type": "boolean"
    },
    "enablePrivateLinkFastPath": {
     "description": "Bypass the ExpressRoute gateway when accessing private-links. ExpressRoute FastPath (expressRouteGatewayBypass) must be enabled.",
     "type": "boolean"
    },
    "expressRouteCircuitPeering": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitPeeringIdResponse",
     "description": "The ExpressRoute circuit peering.",
     "type": "object"
    },
    "expressRouteGatewayBypass": {
     "description": "Enable FastPath to vWan Firewall hub.",
     "type": "boolean"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the express route connection resource.",
     "type": "string"
    },
    "routingConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfigurationResponse",
     "description": "The Routing Configuration indicating the associated and propagated route tables on this connection.",
     "type": "object"
    },
    "routingWeight": {
     "description": "The routing weight associated to the connection.",
     "type": "integer"
    }
   },
   "required": [
    "expressRouteCircuitPeering",
    "name",
    "provisioningState"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExpressRouteGatewayPropertiesAutoScaleConfiguration": {
   "description": "Configuration for auto scaling.",
   "properties": {
    "bounds": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteGatewayPropertiesBounds",
     "description": "Minimum and maximum number of scale units to deploy.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExpressRouteGatewayPropertiesBounds": {
   "description": "Minimum and maximum number of scale units to deploy.",
   "properties": {
    "max": {
     "description": "Maximum number of scale units deployed for ExpressRoute gateway.",
     "type": "integer"
    },
    "min": {
     "description": "Minimum number of scale units deployed for ExpressRoute gateway.",
     "type": "integer"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExpressRouteGatewayPropertiesResponseAutoScaleConfiguration": {
   "description": "Configuration for auto scaling.",
   "properties": {
    "bounds": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteGatewayPropertiesResponseBounds",
     "description": "Minimum and maximum number of scale units to deploy.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExpressRouteGatewayPropertiesResponseBounds": {
   "description": "Minimum and maximum number of scale units to deploy.",
   "properties": {
    "max": {
     "description": "Maximum number of scale units deployed for ExpressRoute gateway.",
     "type": "integer"
    },
    "min": {
     "description": "Minimum number of scale units deployed for ExpressRoute gateway.",
     "type": "integer"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExpressRouteLink": {
   "description": "ExpressRouteLink child resource definition.",
   "properties": {
    "adminState": {
     "description": "Administrative state of the physical port.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ExpressRouteLinkAdminState"
      }
     ]
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "macSecConfig": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteLinkMacSecConfig",
     "description": "MacSec configuration.",
     "type": "object"
    },
    "name": {
     "description": "Name of child port resource that is unique among child port resources of the parent.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExpressRouteLinkMacSecConfig": {
   "description": "ExpressRouteLink Mac Security Configuration.",
   "properties": {
    "cakSecretIdentifier": {
     "description": "Keyvault Secret Identifier URL containing Mac security CAK key.",
     "type": "string"
    },
    "cipher": {
     "description": "Mac security cipher.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ExpressRouteLinkMacSecCipher"
      }
     ]
    },
    "cknSecretIdentifier": {
     "description": "Keyvault Secret Identifier URL containing Mac security CKN key.",
     "type": "string"
    },
    "sciState": {
     "description": "Sci mode enabled/disabled.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ExpressRouteLinkMacSecSciState"
      }
     ]
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExpressRouteLinkMacSecConfigResponse": {
   "description": "ExpressRouteLink Mac Security Configuration.",
   "properties": {
    "cakSecretIdentifier": {
     "description": "Keyvault Secret Identifier URL containing Mac security CAK key.",
     "type": "string"
    },
    "cipher": {
     "description": "Mac security cipher.",
     "type": "string"
    },
    "cknSecretIdentifier": {
     "description": "Keyvault Secret Identifier URL containing Mac security CKN key.",
     "type": "string"
    },
    "sciState": {
     "description": "Sci mode enabled/disabled.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExpressRouteLinkResponse": {
   "description": "ExpressRouteLink child resource definition.",
   "properties": {
    "adminState": {
     "description": "Administrative state of the physical port.",
     "type": "string"
    },
    "coloLocation": {
     "description": "Cololocation for ExpressRoute Hybrid Direct.",
     "type": "string"
    },
    "connectorType": {
     "description": "Physical fiber port type.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "interfaceName": {
     "description": "Name of Azure router interface.",
     "type": "string"
    },
    "macSecConfig": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteLinkMacSecConfigResponse",
     "description": "MacSec configuration.",
     "type": "object"
    },
    "name": {
     "description": "Name of child port resource that is unique among child port resources of the parent.",
     "type": "string"
    },
    "patchPanelId": {
     "description": "Mapping between physical port to patch panel port.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the express route link resource.",
     "type": "string"
    },
    "rackId": {
     "description": "Mapping of physical patch panel to rack.",
     "type": "string"
    },
    "routerName": {
     "description": "Name of Azure router associated with physical port.",
     "type": "string"
    }
   },
   "required": [
    "coloLocation",
    "connectorType",
    "etag",
    "interfaceName",
    "patchPanelId",
    "provisioningState",
    "rackId",
    "routerName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExtendedLocation": {
   "description": "ExtendedLocation complex type.",
   "properties": {
    "name": {
     "description": "The name of the extended location.",
     "type": "string"
    },
    "type": {
     "description": "The type of the extended location.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ExtendedLocationTypes"
      }
     ]
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ExtendedLocationResponse": {
   "description": "ExtendedLocation complex type.",
   "properties": {
    "name": {
     "description": "The name of the extended location.",
     "type": "string"
    },
    "type": {
     "description": "The type of the extended location.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:FilterItems": {
   "description": "Will contain the filter name and values to operate on",
   "properties": {
    "field": {
     "description": "The name of the field we would like to filter",
     "type": "string"
    },
    "values": {
     "description": "List of values to filter the current field by",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:FirewallPolicyCertificateAuthority": {
   "description": "Trusted Root certificates properties for tls.",
   "properties": {
    "keyVaultSecretId": {
     "description": "Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.",
     "type": "string"
    },
    "name": {
     "description": "Name of the CA certificate.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:FirewallPolicyCertificateAuthorityResponse": {
   "description": "Trusted Root certificates properties for tls.",
   "properties": {
    "keyVaultSecretId": {
     "description": "Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.",
     "type": "string"
    },
    "name": {
     "description": "Name of the CA certificate.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:FirewallPolicyFilterRuleCollection": {
   "description": "Firewall Policy Filter Rule Collection.",
   "properties": {
    "action": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyFilterRuleCollectionAction",
     "description": "The action type of a Filter rule collection.",
     "type": "object"
    },
    "name": {
     "description": "The name of the rule collection.",
     "type": "string"
    },
    "priority": {
     "description": "Priority of the Firewall Policy Rule Collection resource.",
     "type": "integer"
    },
    "ruleCollectionType": {
     "const": "FirewallPolicyFilterRuleCollection",
     "description": "The type of the rule collection.\nExpected value is 'FirewallPolicyFilterRuleCollection'.",
     "type": "string"
    },
    "rules": {
     "description": "List of rules included in a rule collection.",
     "items": {
      "discriminator": {
       "mapping": {
        "ApplicationRule": "#/types/azure-native_network_v20230201:network:ApplicationRule",
        "NatRule": "#/types/azure-native_network_v20230201:network:NatRule",
        "NetworkRule": "#/types/azure-native_network_v20230201:network:NetworkRule"
       },
       "propertyName": "ruleType"
      },
      "oneOf": [
       {
        "$ref": "#/types/azure-native_network_v20230201:network:ApplicationRule",
        "type": "object"
       },
       {
        "$ref": "#/types/azure-native_network_v20230201:network:NatRule",
        "type": "object"
       },
       {
        "$ref": "#/types/azure-native_network_v20230201:network:NetworkRule",
        "type": "object"
       }
      ]
     },
     "type": "array"
    }
   },
   "required": [
    "ruleCollectionType"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:FirewallPolicyFilterRuleCollectionAction": {
   "description": "Properties of the FirewallPolicyFilterRuleCollectionAction.",
   "properties": {
    "type": {
     "description": "The type of action.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:FirewallPolicyFilterRuleCollectionActionType"
      }
     ]
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:FirewallPolicyFilterRuleCollectionActionResponse": {
   "description": "Properties of the FirewallPolicyFilterRuleCollectionAction.",
   "properties": {
    "type": {
     "description": "The type of action.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:FirewallPolicyFilterRuleCollectionResponse": {
   "description": "Firewall Policy Filter Rule Collection.",
   "properties": {
    "action": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyFilterRuleCollectionActionResponse",
     "description": "The action type of a Filter rule collection.",
     "type": "object"
    },
    "name": {
     "description": "The name of the rule collection.",
     "type": "string"
    },
    "priority": {
     "description": "Priority of the Firewall Policy Rule Collection resource.",
     "type": "integer"
    },
    "ruleCollectionType": {
     "const": "FirewallPolicyFilterRuleCollection",
     "description": "The type of the rule collection.\nExpected value is 'FirewallPolicyFilterRuleCollection'.",
     "type": "string"
    },
    "rules": {
     "description": "List of rules included in a rule collection.",
     "items": {
      "discriminator": {
       "mapping": {
        "ApplicationRule": "#/types/azure-native_network_v20230201:network:ApplicationRuleResponse",
        "NatRule": "#/types/azure-native_network_v20230201:network:NatRuleResponse",
        "NetworkRule": "#/types/azure-native_network_v20230201:network:NetworkRuleResponse"
       },
       "propertyName": "ruleType"
      },
      "oneOf": [
       {
        "$ref": "#/types/azure-native_network_v20230201:network:ApplicationRuleResponse",
        "type": "object"
       },
       {
        "$ref": "#/types/azure-native_network_v20230201:network:NatRuleResponse",
        "type": "object"
       },
       {
        "$ref": "#/types/azure-native_network_v20230201:network:NetworkRuleResponse",
        "type": "object"
       }
      ]
     },
     "type": "array"
    }
   },
   "required": [
    "ruleCollectionType"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:FirewallPolicyHttpHeaderToInsert": {
   "description": "name and value of HTTP/S header to insert",
   "properties": {
    "headerName": {
     "description": "Contains the name of the header",
     "type": "string"
    },
    "headerValue": {
     "description": "Contains the value of the header",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:FirewallPolicyHttpHeaderToInsertResponse": {
   "description": "name and value of HTTP/S header to insert",
   "properties": {
    "headerName": {
     "description": "Contains the name of the header",
     "type": "string"
    },
    "headerValue": {
     "description": "Contains the value of the header",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:FirewallPolicyInsights": {
   "description": "Firewall Policy Insights.",
   "properties": {
    "isEnabled": {
     "description": "A flag to indicate if the insights are enabled on the policy.",
     "type": "boolean"
    },
    "logAnalyticsResources": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyLogAnalyticsResources",
     "description": "Workspaces needed to configure the Firewall Policy Insights.",
     "type": "object"
    },
    "retentionDays": {
     "description": "Number of days the insights should be enabled on the policy.",
     "type": "integer"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:FirewallPolicyInsightsResponse": {
   "description": "Firewall Policy Insights.",
   "properties": {
    "isEnabled": {
     "description": "A flag to indicate if the insights are enabled on the policy.",
     "type": "boolean"
    },
    "logAnalyticsResources": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyLogAnalyticsResourcesResponse",
     "description": "Workspaces needed to configure the Firewall Policy Insights.",
     "type": "object"
    },
    "retentionDays": {
     "description": "Number of days the insights should be enabled on the policy.",
     "type": "integer"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:FirewallPolicyIntrusionDetection": {
   "description": "Configuration for intrusion detection mode and rules.",
   "properties": {
    "configuration": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyIntrusionDetectionConfiguration",
     "description": "Intrusion detection configuration properties.",
     "type": "object"
    },
    "mode": {
     "description": "Intrusion detection general state.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:FirewallPolicyIntrusionDetectionStateType"
      }
     ]
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:FirewallPolicyIntrusionDetectionBypassTrafficSpecifications": {
   "description": "Intrusion detection bypass traffic specification.",
   "properties": {
    "description": {
     "description": "Description of the bypass traffic rule.",
     "type": "string"
    },
    "destinationAddresses": {
     "description": "List of destination IP addresses or ranges for this rule.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "destinationIpGroups": {
     "description": "List of destination IpGroups for this rule.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "destinationPorts": {
     "description": "List of destination ports or ranges.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "name": {
     "description": "Name of the bypass traffic rule.",
     "type": "string"
    },
    "protocol": {
     "description": "The rule bypass protocol.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:FirewallPolicyIntrusionDetectionProtocol"
      }
     ]
    },
    "sourceAddresses": {
     "description": "List of source IP addresses or ranges for this rule.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "sourceIpGroups": {
     "description": "List of source IpGroups for this rule.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponse": {
   "description": "Intrusion detection bypass traffic specification.",
   "properties": {
    "description": {
     "description": "Description of the bypass traffic rule.",
     "type": "string"
    },
    "destinationAddresses": {
     "description": "List of destination IP addresses or ranges for this rule.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "destinationIpGroups": {
     "description": "List of destination IpGroups for this rule.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "destinationPorts": {
     "description": "List of destination ports or ranges.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "name": {
     "description": "Name of the bypass traffic rule.",
     "type": "string"
    },
    "protocol": {
     "description": "The rule bypass protocol.",
     "type": "string"
    },
    "sourceAddresses": {
     "description": "List of source IP addresses or ranges for this rule.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "sourceIpGroups": {
     "description": "List of source IpGroups for this rule.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:FirewallPolicyIntrusionDetectionConfiguration": {
   "description": "The operation for configuring intrusion detection.",
   "properties": {
    "bypassTrafficSettings": {
     "description": "List of rules for traffic to bypass.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyIntrusionDetectionBypassTrafficSpecifications",
      "type": "object"
     },
     "type": "array"
    },
    "privateRanges": {
     "description": "IDPS Private IP address ranges are used to identify traffic direction (i.e. inbound, outbound, etc.). By default, only ranges defined by IANA RFC 1918 are considered private IP addresses. To modify default ranges, specify your Private IP address ranges with this property",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "signatureOverrides": {
     "description": "List of specific signatures states.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyIntrusionDetectionSignatureSpecification",
      "type": "object"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:FirewallPolicyIntrusionDetectionConfigurationResponse": {
   "description": "The operation for configuring intrusion detection.",
   "properties": {
    "bypassTrafficSettings": {
     "description": "List of rules for traffic to bypass.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponse",
      "type": "object"
     },
     "type": "array"
    },
    "privateRanges": {
     "description": "IDPS Private IP address ranges are used to identify traffic direction (i.e. inbound, outbound, etc.). By default, only ranges defined by IANA RFC 1918 are considered private IP addresses. To modify default ranges, specify your Private IP address ranges with this property",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "signatureOverrides": {
     "description": "List of specific signatures states.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyIntrusionDetectionSignatureSpecificationResponse",
      "type": "object"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:FirewallPolicyIntrusionDetectionResponse": {
   "description": "Configuration for intrusion detection mode and rules.",
   "properties": {
    "configuration": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyIntrusionDetectionConfigurationResponse",
     "description": "Intrusion detection configuration properties.",
     "type": "object"
    },
    "mode": {
     "description": "Intrusion detection general state.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:FirewallPolicyIntrusionDetectionSignatureSpecification": {
   "description": "Intrusion detection signatures specification states.",
   "properties": {
    "id": {
     "description": "Signature id.",
     "type": "string"
    },
    "mode": {
     "description": "The signature state.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:FirewallPolicyIntrusionDetectionStateType"
      }
     ]
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:FirewallPolicyIntrusionDetectionSignatureSpecificationResponse": {
   "description": "Intrusion detection signatures specification states.",
   "properties": {
    "id": {
     "description": "Signature id.",
     "type": "string"
    },
    "mode": {
     "description": "The signature state.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:FirewallPolicyLogAnalyticsResources": {
   "description": "Log Analytics Resources for Firewall Policy Insights.",
   "properties": {
    "defaultWorkspaceId": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "The default workspace Id for Firewall Policy Insights.",
     "type": "object"
    },
    "workspaces": {
     "description": "List of workspaces for Firewall Policy Insights.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyLogAnalyticsWorkspace",
      "type": "object"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:FirewallPolicyLogAnalyticsResourcesResponse": {
   "description": "Log Analytics Resources for Firewall Policy Insights.",
   "properties": {
    "defaultWorkspaceId": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The default workspace Id for Firewall Policy Insights.",
     "type": "object"
    },
    "workspaces": {
     "description": "List of workspaces for Firewall Policy Insights.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyLogAnalyticsWorkspaceResponse",
      "type": "object"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:FirewallPolicyLogAnalyticsWorkspace": {
   "description": "Log Analytics Workspace for Firewall Policy Insights.",
   "properties": {
    "region": {
     "description": "Region to configure the Workspace.",
     "type": "string"
    },
    "workspaceId": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "The workspace Id for Firewall Policy Insights.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:FirewallPolicyLogAnalyticsWorkspaceResponse": {
   "description": "Log Analytics Workspace for Firewall Policy Insights.",
   "properties": {
    "region": {
     "description": "Region to configure the Workspace.",
     "type": "string"
    },
    "workspaceId": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The workspace Id for Firewall Policy Insights.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:FirewallPolicyNatRuleCollection": {
   "description": "Firewall Policy NAT Rule Collection.",
   "properties": {
    "action": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyNatRuleCollectionAction",
     "description": "The action type of a Nat rule collection.",
     "type": "object"
    },
    "name": {
     "description": "The name of the rule collection.",
     "type": "string"
    },
    "priority": {
     "description": "Priority of the Firewall Policy Rule Collection resource.",
     "type": "integer"
    },
    "ruleCollectionType": {
     "const": "FirewallPolicyNatRuleCollection",
     "description": "The type of the rule collection.\nExpected value is 'FirewallPolicyNatRuleCollection'.",
     "type": "string"
    },
    "rules": {
     "description": "List of rules included in a rule collection.",
     "items": {
      "discriminator": {
       "mapping": {
        "ApplicationRule": "#/types/azure-native_network_v20230201:network:ApplicationRule",
        "NatRule": "#/types/azure-native_network_v20230201:network:NatRule",
        "NetworkRule": "#/types/azure-native_network_v20230201:network:NetworkRule"
       },
       "propertyName": "ruleType"
      },
      "oneOf": [
       {
        "$ref": "#/types/azure-native_network_v20230201:network:ApplicationRule",
        "type": "object"
       },
       {
        "$ref": "#/types/azure-native_network_v20230201:network:NatRule",
        "type": "object"
       },
       {
        "$ref": "#/types/azure-native_network_v20230201:network:NetworkRule",
        "type": "object"
       }
      ]
     },
     "type": "array"
    }
   },
   "required": [
    "ruleCollectionType"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:FirewallPolicyNatRuleCollectionAction": {
   "description": "Properties of the FirewallPolicyNatRuleCollectionAction.",
   "properties": {
    "type": {
     "description": "The type of action.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:FirewallPolicyNatRuleCollectionActionType"
      }
     ]
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:FirewallPolicyNatRuleCollectionActionResponse": {
   "description": "Properties of the FirewallPolicyNatRuleCollectionAction.",
   "properties": {
    "type": {
     "description": "The type of action.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:FirewallPolicyNatRuleCollectionResponse": {
   "description": "Firewall Policy NAT Rule Collection.",
   "properties": {
    "action": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyNatRuleCollectionActionResponse",
     "description": "The action type of a Nat rule collection.",
     "type": "object"
    },
    "name": {
     "description": "The name of the rule collection.",
     "type": "string"
    },
    "priority": {
     "description": "Priority of the Firewall Policy Rule Collection resource.",
     "type": "integer"
    },
    "ruleCollectionType": {
     "const": "FirewallPolicyNatRuleCollection",
     "description": "The type of the rule collection.\nExpected value is 'FirewallPolicyNatRuleCollection'.",
     "type": "string"
    },
    "rules": {
     "description": "List of rules included in a rule collection.",
     "items": {
      "discriminator": {
       "mapping": {
        "ApplicationRule": "#/types/azure-native_network_v20230201:network:ApplicationRuleResponse",
        "NatRule": "#/types/azure-native_network_v20230201:network:NatRuleResponse",
        "NetworkRule": "#/types/azure-native_network_v20230201:network:NetworkRuleResponse"
       },
       "propertyName": "ruleType"
      },
      "oneOf": [
       {
        "$ref": "#/types/azure-native_network_v20230201:network:ApplicationRuleResponse",
        "type": "object"
       },
       {
        "$ref": "#/types/azure-native_network_v20230201:network:NatRuleResponse",
        "type": "object"
       },
       {
        "$ref": "#/types/azure-native_network_v20230201:network:NetworkRuleResponse",
        "type": "object"
       }
      ]
     },
     "type": "array"
    }
   },
   "required": [
    "ruleCollectionType"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:FirewallPolicyRuleApplicationProtocol": {
   "description": "Properties of the application rule protocol.",
   "properties": {
    "port": {
     "description": "Port number for the protocol, cannot be greater than 64000.",
     "type": "integer"
    },
    "protocolType": {
     "description": "Protocol type.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:FirewallPolicyRuleApplicationProtocolType"
      }
     ]
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:FirewallPolicyRuleApplicationProtocolResponse": {
   "description": "Properties of the application rule protocol.",
   "properties": {
    "port": {
     "description": "Port number for the protocol, cannot be greater than 64000.",
     "type": "integer"
    },
    "protocolType": {
     "description": "Protocol type.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:FirewallPolicySNAT": {
   "description": "The private IP addresses/IP ranges to which traffic will not be SNAT.",
   "properties": {
    "autoLearnPrivateRanges": {
     "description": "The operation mode for automatically learning private ranges to not be SNAT",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:AutoLearnPrivateRangesMode"
      }
     ]
    },
    "privateRanges": {
     "description": "List of private IP addresses/IP address ranges to not be SNAT.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:FirewallPolicySNATResponse": {
   "description": "The private IP addresses/IP ranges to which traffic will not be SNAT.",
   "properties": {
    "autoLearnPrivateRanges": {
     "description": "The operation mode for automatically learning private ranges to not be SNAT",
     "type": "string"
    },
    "privateRanges": {
     "description": "List of private IP addresses/IP address ranges to not be SNAT.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:FirewallPolicySQL": {
   "description": "SQL Settings in Firewall Policy.",
   "properties": {
    "allowSqlRedirect": {
     "description": "A flag to indicate if SQL Redirect traffic filtering is enabled. Turning on the flag requires no rule using port 11000-11999.",
     "type": "boolean"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:FirewallPolicySQLResponse": {
   "description": "SQL Settings in Firewall Policy.",
   "properties": {
    "allowSqlRedirect": {
     "description": "A flag to indicate if SQL Redirect traffic filtering is enabled. Turning on the flag requires no rule using port 11000-11999.",
     "type": "boolean"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:FirewallPolicySku": {
   "description": "SKU of Firewall policy.",
   "properties": {
    "tier": {
     "description": "Tier of Firewall Policy.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:FirewallPolicySkuTier"
      }
     ]
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:FirewallPolicySkuResponse": {
   "description": "SKU of Firewall policy.",
   "properties": {
    "tier": {
     "description": "Tier of Firewall Policy.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:FirewallPolicyThreatIntelWhitelist": {
   "description": "ThreatIntel Whitelist for Firewall Policy.",
   "properties": {
    "fqdns": {
     "description": "List of FQDNs for the ThreatIntel Whitelist.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "ipAddresses": {
     "description": "List of IP addresses for the ThreatIntel Whitelist.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:FirewallPolicyThreatIntelWhitelistResponse": {
   "description": "ThreatIntel Whitelist for Firewall Policy.",
   "properties": {
    "fqdns": {
     "description": "List of FQDNs for the ThreatIntel Whitelist.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "ipAddresses": {
     "description": "List of IP addresses for the ThreatIntel Whitelist.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:FirewallPolicyTransportSecurity": {
   "description": "Configuration needed to perform TLS termination \u0026 initiation.",
   "properties": {
    "certificateAuthority": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyCertificateAuthority",
     "description": "The CA used for intermediate CA generation.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:FirewallPolicyTransportSecurityResponse": {
   "description": "Configuration needed to perform TLS termination \u0026 initiation.",
   "properties": {
    "certificateAuthority": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyCertificateAuthorityResponse",
     "description": "The CA used for intermediate CA generation.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:FlowLogFormatParameters": {
   "description": "Parameters that define the flow log format.",
   "properties": {
    "type": {
     "description": "The file type of flow log.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:FlowLogFormatType"
      }
     ]
    },
    "version": {
     "default": 0,
     "description": "The version (revision) of the flow log.",
     "type": "integer"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:FlowLogFormatParametersResponse": {
   "description": "Parameters that define the flow log format.",
   "properties": {
    "type": {
     "description": "The file type of flow log.",
     "type": "string"
    },
    "version": {
     "default": 0,
     "description": "The version (revision) of the flow log.",
     "type": "integer"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:FlowLogResponse": {
   "description": "A flow log resource.",
   "properties": {
    "enabled": {
     "description": "Flag to enable/disable flow logging.",
     "type": "boolean"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "flowAnalyticsConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:TrafficAnalyticsPropertiesResponse",
     "description": "Parameters that define the configuration of traffic analytics.",
     "type": "object"
    },
    "format": {
     "$ref": "#/types/azure-native_network_v20230201:network:FlowLogFormatParametersResponse",
     "description": "Parameters that define the flow log format.",
     "type": "object"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the flow log.",
     "type": "string"
    },
    "retentionPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:RetentionPolicyParametersResponse",
     "description": "Parameters that define the retention policy for flow log.",
     "type": "object"
    },
    "storageId": {
     "description": "ID of the storage account which is used to store the flow log.",
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "targetResourceGuid": {
     "description": "Guid of network security group to which flow log will be applied.",
     "type": "string"
    },
    "targetResourceId": {
     "description": "ID of network security group to which flow log will be applied.",
     "type": "string"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "name",
    "provisioningState",
    "storageId",
    "targetResourceGuid",
    "targetResourceId",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:FrontendIPConfiguration": {
   "description": "Frontend IP address of the load balancer.",
   "properties": {
    "gatewayLoadBalancer": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "The reference to gateway load balancer frontend IP.",
     "type": "object"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.",
     "type": "string"
    },
    "privateIPAddress": {
     "description": "The private IP address of the IP configuration.",
     "type": "string"
    },
    "privateIPAddressVersion": {
     "description": "Whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:IPVersion"
      }
     ]
    },
    "privateIPAllocationMethod": {
     "description": "The Private IP allocation method.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:IPAllocationMethod"
      }
     ]
    },
    "publicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddress",
     "description": "The reference to the Public IP resource.",
     "type": "object"
    },
    "publicIPPrefix": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "The reference to the Public IP Prefix resource.",
     "type": "object"
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:Subnet",
     "description": "The reference to the subnet resource.",
     "type": "object"
    },
    "zones": {
     "description": "A list of availability zones denoting the IP allocated for the resource needs to come from.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:FrontendIPConfigurationResponse": {
   "description": "Frontend IP address of the load balancer.",
   "properties": {
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "gatewayLoadBalancer": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The reference to gateway load balancer frontend IP.",
     "type": "object"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "inboundNatPools": {
     "description": "An array of references to inbound pools that use this frontend IP.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "inboundNatRules": {
     "description": "An array of references to inbound rules that use this frontend IP.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "loadBalancingRules": {
     "description": "An array of references to load balancing rules that use this frontend IP.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "name": {
     "description": "The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.",
     "type": "string"
    },
    "outboundRules": {
     "description": "An array of references to outbound rules that use this frontend IP.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "privateIPAddress": {
     "description": "The private IP address of the IP configuration.",
     "type": "string"
    },
    "privateIPAddressVersion": {
     "description": "Whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.",
     "type": "string"
    },
    "privateIPAllocationMethod": {
     "description": "The Private IP allocation method.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the frontend IP configuration resource.",
     "type": "string"
    },
    "publicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddressResponse",
     "description": "The reference to the Public IP resource.",
     "type": "object"
    },
    "publicIPPrefix": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The reference to the Public IP Prefix resource.",
     "type": "object"
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubnetResponse",
     "description": "The reference to the subnet resource.",
     "type": "object"
    },
    "type": {
     "description": "Type of the resource.",
     "type": "string"
    },
    "zones": {
     "description": "A list of availability zones denoting the IP allocated for the resource needs to come from.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "required": [
    "etag",
    "inboundNatPools",
    "inboundNatRules",
    "loadBalancingRules",
    "outboundRules",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:GatewayCustomBgpIpAddressIpConfiguration": {
   "description": "GatewayCustomBgpIpAddressIpConfiguration for a virtual network gateway connection.",
   "properties": {
    "customBgpIpAddress": {
     "description": "The custom BgpPeeringAddress which belongs to IpconfigurationId.",
     "type": "string"
    },
    "ipConfigurationId": {
     "description": "The IpconfigurationId of ipconfiguration which belongs to gateway.",
     "type": "string"
    }
   },
   "required": [
    "customBgpIpAddress",
    "ipConfigurationId"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:GatewayCustomBgpIpAddressIpConfigurationResponse": {
   "description": "GatewayCustomBgpIpAddressIpConfiguration for a virtual network gateway connection.",
   "properties": {
    "customBgpIpAddress": {
     "description": "The custom BgpPeeringAddress which belongs to IpconfigurationId.",
     "type": "string"
    },
    "ipConfigurationId": {
     "description": "The IpconfigurationId of ipconfiguration which belongs to gateway.",
     "type": "string"
    }
   },
   "required": [
    "customBgpIpAddress",
    "ipConfigurationId"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:GatewayLoadBalancerTunnelInterface": {
   "description": "Gateway load balancer tunnel interface of a load balancer backend address pool.",
   "properties": {
    "identifier": {
     "description": "Identifier of gateway load balancer tunnel interface.",
     "type": "integer"
    },
    "port": {
     "description": "Port of gateway load balancer tunnel interface.",
     "type": "integer"
    },
    "protocol": {
     "description": "Protocol of gateway load balancer tunnel interface.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:GatewayLoadBalancerTunnelProtocol"
      }
     ]
    },
    "type": {
     "description": "Traffic type of gateway load balancer tunnel interface.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:GatewayLoadBalancerTunnelInterfaceType"
      }
     ]
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:GatewayLoadBalancerTunnelInterfaceResponse": {
   "description": "Gateway load balancer tunnel interface of a load balancer backend address pool.",
   "properties": {
    "identifier": {
     "description": "Identifier of gateway load balancer tunnel interface.",
     "type": "integer"
    },
    "port": {
     "description": "Port of gateway load balancer tunnel interface.",
     "type": "integer"
    },
    "protocol": {
     "description": "Protocol of gateway load balancer tunnel interface.",
     "type": "string"
    },
    "type": {
     "description": "Traffic type of gateway load balancer tunnel interface.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:GatewayRouteResponse": {
   "description": "Gateway routing details.",
   "properties": {
    "asPath": {
     "description": "The route's AS path sequence.",
     "type": "string"
    },
    "localAddress": {
     "description": "The gateway's local address.",
     "type": "string"
    },
    "network": {
     "description": "The route's network prefix.",
     "type": "string"
    },
    "nextHop": {
     "description": "The route's next hop.",
     "type": "string"
    },
    "origin": {
     "description": "The source this route was learned from.",
     "type": "string"
    },
    "sourcePeer": {
     "description": "The peer this route was learned from.",
     "type": "string"
    },
    "weight": {
     "description": "The route's weight.",
     "type": "integer"
    }
   },
   "required": [
    "asPath",
    "localAddress",
    "network",
    "nextHop",
    "origin",
    "sourcePeer",
    "weight"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:GroupByUserSession": {
   "description": "Define user session identifier group by clauses.",
   "properties": {
    "groupByVariables": {
     "description": "List of group by clause variables.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:GroupByVariable",
      "type": "object"
     },
     "type": "array"
    }
   },
   "required": [
    "groupByVariables"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:GroupByUserSessionResponse": {
   "description": "Define user session identifier group by clauses.",
   "properties": {
    "groupByVariables": {
     "description": "List of group by clause variables.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:GroupByVariableResponse",
      "type": "object"
     },
     "type": "array"
    }
   },
   "required": [
    "groupByVariables"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:GroupByVariable": {
   "description": "Define user session group by clause variables.",
   "properties": {
    "variableName": {
     "description": "User Session clause variable.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ApplicationGatewayFirewallUserSessionVariable"
      }
     ]
    }
   },
   "required": [
    "variableName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:GroupByVariableResponse": {
   "description": "Define user session group by clause variables.",
   "properties": {
    "variableName": {
     "description": "User Session clause variable.",
     "type": "string"
    }
   },
   "required": [
    "variableName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:HTTPHeader": {
   "description": "The HTTP header.",
   "properties": {
    "name": {
     "description": "The name in HTTP header.",
     "type": "string"
    },
    "value": {
     "description": "The value in HTTP header.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:HTTPHeaderResponse": {
   "description": "The HTTP header.",
   "properties": {
    "name": {
     "description": "The name in HTTP header.",
     "type": "string"
    },
    "value": {
     "description": "The value in HTTP header.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:Hub": {
   "description": "Hub Item.",
   "properties": {
    "resourceId": {
     "description": "Resource Id.",
     "type": "string"
    },
    "resourceType": {
     "description": "Resource Type.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:HubIPAddresses": {
   "description": "IP addresses associated with azure firewall.",
   "properties": {
    "privateIPAddress": {
     "description": "Private IP Address associated with azure firewall.",
     "type": "string"
    },
    "publicIPs": {
     "$ref": "#/types/azure-native_network_v20230201:network:HubPublicIPAddresses",
     "description": "Public IP addresses associated with azure firewall.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:HubIPAddressesResponse": {
   "description": "IP addresses associated with azure firewall.",
   "properties": {
    "privateIPAddress": {
     "description": "Private IP Address associated with azure firewall.",
     "type": "string"
    },
    "publicIPs": {
     "$ref": "#/types/azure-native_network_v20230201:network:HubPublicIPAddressesResponse",
     "description": "Public IP addresses associated with azure firewall.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:HubPublicIPAddresses": {
   "description": "Public IP addresses associated with azure firewall.",
   "properties": {
    "addresses": {
     "description": "The list of Public IP addresses associated with azure firewall or IP addresses to be retained.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallPublicIPAddress",
      "type": "object"
     },
     "type": "array"
    },
    "count": {
     "description": "The number of Public IP addresses associated with azure firewall.",
     "type": "integer"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:HubPublicIPAddressesResponse": {
   "description": "Public IP addresses associated with azure firewall.",
   "properties": {
    "addresses": {
     "description": "The list of Public IP addresses associated with azure firewall or IP addresses to be retained.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallPublicIPAddressResponse",
      "type": "object"
     },
     "type": "array"
    },
    "count": {
     "description": "The number of Public IP addresses associated with azure firewall.",
     "type": "integer"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:HubResponse": {
   "description": "Hub Item.",
   "properties": {
    "resourceId": {
     "description": "Resource Id.",
     "type": "string"
    },
    "resourceType": {
     "description": "Resource Type.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:HubRoute": {
   "description": "RouteTable route.",
   "properties": {
    "destinationType": {
     "description": "The type of destinations (eg: CIDR, ResourceId, Service).",
     "type": "string"
    },
    "destinations": {
     "description": "List of all destinations.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "name": {
     "description": "The name of the Route that is unique within a RouteTable. This name can be used to access this route.",
     "type": "string"
    },
    "nextHop": {
     "description": "NextHop resource ID.",
     "type": "string"
    },
    "nextHopType": {
     "description": "The type of next hop (eg: ResourceId).",
     "type": "string"
    }
   },
   "required": [
    "destinationType",
    "destinations",
    "name",
    "nextHop",
    "nextHopType"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:HubRouteResponse": {
   "description": "RouteTable route.",
   "properties": {
    "destinationType": {
     "description": "The type of destinations (eg: CIDR, ResourceId, Service).",
     "type": "string"
    },
    "destinations": {
     "description": "List of all destinations.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "name": {
     "description": "The name of the Route that is unique within a RouteTable. This name can be used to access this route.",
     "type": "string"
    },
    "nextHop": {
     "description": "NextHop resource ID.",
     "type": "string"
    },
    "nextHopType": {
     "description": "The type of next hop (eg: ResourceId).",
     "type": "string"
    }
   },
   "required": [
    "destinationType",
    "destinations",
    "name",
    "nextHop",
    "nextHopType"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:IPConfigurationBgpPeeringAddress": {
   "description": "Properties of IPConfigurationBgpPeeringAddress.",
   "properties": {
    "customBgpIpAddresses": {
     "description": "The list of custom BGP peering addresses which belong to IP configuration.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "ipconfigurationId": {
     "description": "The ID of IP configuration which belongs to gateway.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:IPConfigurationBgpPeeringAddressResponse": {
   "description": "Properties of IPConfigurationBgpPeeringAddress.",
   "properties": {
    "customBgpIpAddresses": {
     "description": "The list of custom BGP peering addresses which belong to IP configuration.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "defaultBgpIpAddresses": {
     "description": "The list of default BGP peering addresses which belong to IP configuration.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "ipconfigurationId": {
     "description": "The ID of IP configuration which belongs to gateway.",
     "type": "string"
    },
    "tunnelIpAddresses": {
     "description": "The list of tunnel public IP addresses which belong to IP configuration.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "required": [
    "defaultBgpIpAddresses",
    "tunnelIpAddresses"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:IPConfigurationProfile": {
   "description": "IP configuration profile child resource.",
   "properties": {
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource. This name can be used to access the resource.",
     "type": "string"
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:Subnet",
     "description": "The reference to the subnet resource to create a container network interface ip configuration.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:IPConfigurationProfileResponse": {
   "description": "IP configuration profile child resource.",
   "properties": {
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource. This name can be used to access the resource.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the IP configuration profile resource.",
     "type": "string"
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubnetResponse",
     "description": "The reference to the subnet resource to create a container network interface ip configuration.",
     "type": "object"
    },
    "type": {
     "description": "Sub Resource type.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:IPConfigurationResponse": {
   "description": "IP configuration.",
   "properties": {
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "privateIPAddress": {
     "description": "The private IP address of the IP configuration.",
     "type": "string"
    },
    "privateIPAllocationMethod": {
     "default": "Dynamic",
     "description": "The private IP address allocation method.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the IP configuration resource.",
     "type": "string"
    },
    "publicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddressResponse",
     "description": "The reference to the public IP resource.",
     "type": "object"
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubnetResponse",
     "description": "The reference to the subnet resource.",
     "type": "object"
    }
   },
   "required": [
    "etag",
    "provisioningState"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:InboundNatPool": {
   "description": "Inbound NAT pool of the load balancer.",
   "properties": {
    "backendPort": {
     "description": "The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.",
     "type": "integer"
    },
    "enableFloatingIP": {
     "description": "Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.",
     "type": "boolean"
    },
    "enableTcpReset": {
     "description": "Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.",
     "type": "boolean"
    },
    "frontendIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "A reference to frontend IP addresses.",
     "type": "object"
    },
    "frontendPortRangeEnd": {
     "description": "The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.",
     "type": "integer"
    },
    "frontendPortRangeStart": {
     "description": "The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.",
     "type": "integer"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "idleTimeoutInMinutes": {
     "description": "The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.",
     "type": "integer"
    },
    "name": {
     "description": "The name of the resource that is unique within the set of inbound NAT pools used by the load balancer. This name can be used to access the resource.",
     "type": "string"
    },
    "protocol": {
     "description": "The reference to the transport protocol used by the inbound NAT pool.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:TransportProtocol"
      }
     ]
    }
   },
   "required": [
    "backendPort",
    "frontendPortRangeEnd",
    "frontendPortRangeStart",
    "protocol"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:InboundNatPoolResponse": {
   "description": "Inbound NAT pool of the load balancer.",
   "properties": {
    "backendPort": {
     "description": "The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.",
     "type": "integer"
    },
    "enableFloatingIP": {
     "description": "Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.",
     "type": "boolean"
    },
    "enableTcpReset": {
     "description": "Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.",
     "type": "boolean"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "frontendIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "A reference to frontend IP addresses.",
     "type": "object"
    },
    "frontendPortRangeEnd": {
     "description": "The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.",
     "type": "integer"
    },
    "frontendPortRangeStart": {
     "description": "The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.",
     "type": "integer"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "idleTimeoutInMinutes": {
     "description": "The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.",
     "type": "integer"
    },
    "name": {
     "description": "The name of the resource that is unique within the set of inbound NAT pools used by the load balancer. This name can be used to access the resource.",
     "type": "string"
    },
    "protocol": {
     "description": "The reference to the transport protocol used by the inbound NAT pool.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the inbound NAT pool resource.",
     "type": "string"
    },
    "type": {
     "description": "Type of the resource.",
     "type": "string"
    }
   },
   "required": [
    "backendPort",
    "etag",
    "frontendPortRangeEnd",
    "frontendPortRangeStart",
    "protocol",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:InboundNatRule": {
   "description": "Inbound NAT rule of the load balancer.",
   "properties": {
    "backendAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "A reference to backendAddressPool resource.",
     "type": "object"
    },
    "backendPort": {
     "description": "The port used for the internal endpoint. Acceptable values range from 1 to 65535.",
     "type": "integer"
    },
    "enableFloatingIP": {
     "description": "Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.",
     "type": "boolean"
    },
    "enableTcpReset": {
     "description": "Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.",
     "type": "boolean"
    },
    "frontendIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "A reference to frontend IP addresses.",
     "type": "object"
    },
    "frontendPort": {
     "description": "The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.",
     "type": "integer"
    },
    "frontendPortRangeEnd": {
     "description": "The port range end for the external endpoint. This property is used together with BackendAddressPool and FrontendPortRangeStart. Individual inbound NAT rule port mappings will be created for each backend address from BackendAddressPool. Acceptable values range from 1 to 65534.",
     "type": "integer"
    },
    "frontendPortRangeStart": {
     "description": "The port range start for the external endpoint. This property is used together with BackendAddressPool and FrontendPortRangeEnd. Individual inbound NAT rule port mappings will be created for each backend address from BackendAddressPool. Acceptable values range from 1 to 65534.",
     "type": "integer"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "idleTimeoutInMinutes": {
     "description": "The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.",
     "type": "integer"
    },
    "name": {
     "description": "The name of the resource that is unique within the set of inbound NAT rules used by the load balancer. This name can be used to access the resource.",
     "type": "string"
    },
    "protocol": {
     "description": "The reference to the transport protocol used by the load balancing rule.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:TransportProtocol"
      }
     ]
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:InboundNatRuleResponse": {
   "description": "Inbound NAT rule of the load balancer.",
   "properties": {
    "backendAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "A reference to backendAddressPool resource.",
     "type": "object"
    },
    "backendIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceIPConfigurationResponse",
     "description": "A reference to a private IP address defined on a network interface of a VM. Traffic sent to the frontend port of each of the frontend IP configurations is forwarded to the backend IP.",
     "type": "object"
    },
    "backendPort": {
     "description": "The port used for the internal endpoint. Acceptable values range from 1 to 65535.",
     "type": "integer"
    },
    "enableFloatingIP": {
     "description": "Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.",
     "type": "boolean"
    },
    "enableTcpReset": {
     "description": "Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.",
     "type": "boolean"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "frontendIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "A reference to frontend IP addresses.",
     "type": "object"
    },
    "frontendPort": {
     "description": "The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.",
     "type": "integer"
    },
    "frontendPortRangeEnd": {
     "description": "The port range end for the external endpoint. This property is used together with BackendAddressPool and FrontendPortRangeStart. Individual inbound NAT rule port mappings will be created for each backend address from BackendAddressPool. Acceptable values range from 1 to 65534.",
     "type": "integer"
    },
    "frontendPortRangeStart": {
     "description": "The port range start for the external endpoint. This property is used together with BackendAddressPool and FrontendPortRangeEnd. Individual inbound NAT rule port mappings will be created for each backend address from BackendAddressPool. Acceptable values range from 1 to 65534.",
     "type": "integer"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "idleTimeoutInMinutes": {
     "description": "The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.",
     "type": "integer"
    },
    "name": {
     "description": "The name of the resource that is unique within the set of inbound NAT rules used by the load balancer. This name can be used to access the resource.",
     "type": "string"
    },
    "protocol": {
     "description": "The reference to the transport protocol used by the load balancing rule.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the inbound NAT rule resource.",
     "type": "string"
    },
    "type": {
     "description": "Type of the resource.",
     "type": "string"
    }
   },
   "required": [
    "backendIPConfiguration",
    "etag",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:IpTag": {
   "description": "Contains the IpTag associated with the object.",
   "properties": {
    "ipTagType": {
     "description": "The IP tag type. Example: FirstPartyUsage.",
     "type": "string"
    },
    "tag": {
     "description": "The value of the IP tag associated with the public IP. Example: SQL.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:IpTagResponse": {
   "description": "Contains the IpTag associated with the object.",
   "properties": {
    "ipTagType": {
     "description": "The IP tag type. Example: FirstPartyUsage.",
     "type": "string"
    },
    "tag": {
     "description": "The value of the IP tag associated with the public IP. Example: SQL.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:IpsecPolicy": {
   "description": "An IPSec Policy configuration for a virtual network gateway connection.",
   "properties": {
    "dhGroup": {
     "description": "The DH Group used in IKE Phase 1 for initial SA.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:DhGroup"
      }
     ]
    },
    "ikeEncryption": {
     "description": "The IKE encryption algorithm (IKE phase 2).",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:IkeEncryption"
      }
     ]
    },
    "ikeIntegrity": {
     "description": "The IKE integrity algorithm (IKE phase 2).",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:IkeIntegrity"
      }
     ]
    },
    "ipsecEncryption": {
     "description": "The IPSec encryption algorithm (IKE phase 1).",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:IpsecEncryption"
      }
     ]
    },
    "ipsecIntegrity": {
     "description": "The IPSec integrity algorithm (IKE phase 1).",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:IpsecIntegrity"
      }
     ]
    },
    "pfsGroup": {
     "description": "The Pfs Group used in IKE Phase 2 for new child SA.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:PfsGroup"
      }
     ]
    },
    "saDataSizeKilobytes": {
     "description": "The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel.",
     "type": "integer"
    },
    "saLifeTimeSeconds": {
     "description": "The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel.",
     "type": "integer"
    }
   },
   "required": [
    "dhGroup",
    "ikeEncryption",
    "ikeIntegrity",
    "ipsecEncryption",
    "ipsecIntegrity",
    "pfsGroup",
    "saDataSizeKilobytes",
    "saLifeTimeSeconds"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:IpsecPolicyResponse": {
   "description": "An IPSec Policy configuration for a virtual network gateway connection.",
   "properties": {
    "dhGroup": {
     "description": "The DH Group used in IKE Phase 1 for initial SA.",
     "type": "string"
    },
    "ikeEncryption": {
     "description": "The IKE encryption algorithm (IKE phase 2).",
     "type": "string"
    },
    "ikeIntegrity": {
     "description": "The IKE integrity algorithm (IKE phase 2).",
     "type": "string"
    },
    "ipsecEncryption": {
     "description": "The IPSec encryption algorithm (IKE phase 1).",
     "type": "string"
    },
    "ipsecIntegrity": {
     "description": "The IPSec integrity algorithm (IKE phase 1).",
     "type": "string"
    },
    "pfsGroup": {
     "description": "The Pfs Group used in IKE Phase 2 for new child SA.",
     "type": "string"
    },
    "saDataSizeKilobytes": {
     "description": "The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel.",
     "type": "integer"
    },
    "saLifeTimeSeconds": {
     "description": "The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel.",
     "type": "integer"
    }
   },
   "required": [
    "dhGroup",
    "ikeEncryption",
    "ikeIntegrity",
    "ipsecEncryption",
    "ipsecIntegrity",
    "pfsGroup",
    "saDataSizeKilobytes",
    "saLifeTimeSeconds"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:Ipv6CircuitConnectionConfig": {
   "description": "IPv6 Circuit Connection properties for global reach.",
   "properties": {
    "addressPrefix": {
     "description": "/125 IP address space to carve out customer addresses for global reach.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:Ipv6CircuitConnectionConfigResponse": {
   "description": "IPv6 Circuit Connection properties for global reach.",
   "properties": {
    "addressPrefix": {
     "description": "/125 IP address space to carve out customer addresses for global reach.",
     "type": "string"
    },
    "circuitConnectionStatus": {
     "description": "Express Route Circuit connection state.",
     "type": "string"
    }
   },
   "required": [
    "circuitConnectionStatus"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:Ipv6ExpressRouteCircuitPeeringConfig": {
   "description": "Contains IPv6 peering config.",
   "properties": {
    "microsoftPeeringConfig": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitPeeringConfig",
     "description": "The Microsoft peering configuration.",
     "type": "object"
    },
    "primaryPeerAddressPrefix": {
     "description": "The primary address prefix.",
     "type": "string"
    },
    "routeFilter": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "The reference to the RouteFilter resource.",
     "type": "object"
    },
    "secondaryPeerAddressPrefix": {
     "description": "The secondary address prefix.",
     "type": "string"
    },
    "state": {
     "description": "The state of peering.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ExpressRouteCircuitPeeringState"
      }
     ]
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:Ipv6ExpressRouteCircuitPeeringConfigResponse": {
   "description": "Contains IPv6 peering config.",
   "properties": {
    "microsoftPeeringConfig": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitPeeringConfigResponse",
     "description": "The Microsoft peering configuration.",
     "type": "object"
    },
    "primaryPeerAddressPrefix": {
     "description": "The primary address prefix.",
     "type": "string"
    },
    "routeFilter": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The reference to the RouteFilter resource.",
     "type": "object"
    },
    "secondaryPeerAddressPrefix": {
     "description": "The secondary address prefix.",
     "type": "string"
    },
    "state": {
     "description": "The state of peering.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:LoadBalancerBackendAddress": {
   "description": "Load balancer backend addresses.",
   "properties": {
    "adminState": {
     "description": "A list of administrative states which once set can override health probe so that Load Balancer will always forward new connections to backend, or deny new connections and reset existing connections.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:LoadBalancerBackendAddressAdminState"
      }
     ]
    },
    "ipAddress": {
     "description": "IP Address belonging to the referenced virtual network.",
     "type": "string"
    },
    "loadBalancerFrontendIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Reference to the frontend ip address configuration defined in regional loadbalancer.",
     "type": "object"
    },
    "name": {
     "description": "Name of the backend address.",
     "type": "string"
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Reference to an existing subnet.",
     "type": "object"
    },
    "virtualNetwork": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Reference to an existing virtual network.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:LoadBalancerBackendAddressResponse": {
   "description": "Load balancer backend addresses.",
   "properties": {
    "adminState": {
     "description": "A list of administrative states which once set can override health probe so that Load Balancer will always forward new connections to backend, or deny new connections and reset existing connections.",
     "type": "string"
    },
    "inboundNatRulesPortMapping": {
     "description": "Collection of inbound NAT rule port mappings.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NatRulePortMappingResponse",
      "type": "object"
     },
     "type": "array"
    },
    "ipAddress": {
     "description": "IP Address belonging to the referenced virtual network.",
     "type": "string"
    },
    "loadBalancerFrontendIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Reference to the frontend ip address configuration defined in regional loadbalancer.",
     "type": "object"
    },
    "name": {
     "description": "Name of the backend address.",
     "type": "string"
    },
    "networkInterfaceIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Reference to IP address defined in network interfaces.",
     "type": "object"
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Reference to an existing subnet.",
     "type": "object"
    },
    "virtualNetwork": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Reference to an existing virtual network.",
     "type": "object"
    }
   },
   "required": [
    "inboundNatRulesPortMapping",
    "networkInterfaceIPConfiguration"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:LoadBalancerSku": {
   "description": "SKU of a load balancer.",
   "properties": {
    "name": {
     "description": "Name of a load balancer SKU.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:LoadBalancerSkuName"
      }
     ]
    },
    "tier": {
     "description": "Tier of a load balancer SKU.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:LoadBalancerSkuTier"
      }
     ]
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:LoadBalancerSkuResponse": {
   "description": "SKU of a load balancer.",
   "properties": {
    "name": {
     "description": "Name of a load balancer SKU.",
     "type": "string"
    },
    "tier": {
     "description": "Tier of a load balancer SKU.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:LoadBalancingRule": {
   "description": "A load balancing rule for a load balancer.",
   "properties": {
    "backendAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.",
     "type": "object"
    },
    "backendAddressPools": {
     "description": "An array of references to pool of DIPs.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
      "type": "object"
     },
     "type": "array"
    },
    "backendPort": {
     "description": "The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note that value 0 enables \"Any Port\".",
     "type": "integer"
    },
    "disableOutboundSnat": {
     "description": "Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule.",
     "type": "boolean"
    },
    "enableFloatingIP": {
     "description": "Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.",
     "type": "boolean"
    },
    "enableTcpReset": {
     "description": "Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.",
     "type": "boolean"
    },
    "frontendIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "A reference to frontend IP addresses.",
     "type": "object"
    },
    "frontendPort": {
     "description": "The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 0 and 65534. Note that value 0 enables \"Any Port\".",
     "type": "integer"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "idleTimeoutInMinutes": {
     "description": "The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.",
     "type": "integer"
    },
    "loadDistribution": {
     "description": "The load distribution policy for this rule.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:LoadDistribution"
      }
     ]
    },
    "name": {
     "description": "The name of the resource that is unique within the set of load balancing rules used by the load balancer. This name can be used to access the resource.",
     "type": "string"
    },
    "probe": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "The reference to the load balancer probe used by the load balancing rule.",
     "type": "object"
    },
    "protocol": {
     "description": "The reference to the transport protocol used by the load balancing rule.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:TransportProtocol"
      }
     ]
    }
   },
   "required": [
    "frontendPort",
    "protocol"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:LoadBalancingRuleResponse": {
   "description": "A load balancing rule for a load balancer.",
   "properties": {
    "backendAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.",
     "type": "object"
    },
    "backendAddressPools": {
     "description": "An array of references to pool of DIPs.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "backendPort": {
     "description": "The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note that value 0 enables \"Any Port\".",
     "type": "integer"
    },
    "disableOutboundSnat": {
     "description": "Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule.",
     "type": "boolean"
    },
    "enableFloatingIP": {
     "description": "Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.",
     "type": "boolean"
    },
    "enableTcpReset": {
     "description": "Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.",
     "type": "boolean"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "frontendIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "A reference to frontend IP addresses.",
     "type": "object"
    },
    "frontendPort": {
     "description": "The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 0 and 65534. Note that value 0 enables \"Any Port\".",
     "type": "integer"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "idleTimeoutInMinutes": {
     "description": "The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.",
     "type": "integer"
    },
    "loadDistribution": {
     "description": "The load distribution policy for this rule.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within the set of load balancing rules used by the load balancer. This name can be used to access the resource.",
     "type": "string"
    },
    "probe": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The reference to the load balancer probe used by the load balancing rule.",
     "type": "object"
    },
    "protocol": {
     "description": "The reference to the transport protocol used by the load balancing rule.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the load balancing rule resource.",
     "type": "string"
    },
    "type": {
     "description": "Type of the resource.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "frontendPort",
    "protocol",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:LocalNetworkGateway": {
   "description": "A common class for general resource information.",
   "properties": {
    "bgpSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:BgpSettings",
     "description": "Local network gateway's BGP speaker settings.",
     "type": "object"
    },
    "fqdn": {
     "description": "FQDN of local network gateway.",
     "type": "string"
    },
    "gatewayIpAddress": {
     "description": "IP address of local network gateway.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "localNetworkAddressSpace": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpace",
     "description": "Local network site address space.",
     "type": "object"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:LocalNetworkGatewayResponse": {
   "description": "A common class for general resource information.",
   "properties": {
    "bgpSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:BgpSettingsResponse",
     "description": "Local network gateway's BGP speaker settings.",
     "type": "object"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "fqdn": {
     "description": "FQDN of local network gateway.",
     "type": "string"
    },
    "gatewayIpAddress": {
     "description": "IP address of local network gateway.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "localNetworkAddressSpace": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpaceResponse",
     "description": "Local network site address space.",
     "type": "object"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the local network gateway resource.",
     "type": "string"
    },
    "resourceGuid": {
     "description": "The resource GUID property of the local network gateway resource.",
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "name",
    "provisioningState",
    "resourceGuid",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ManagedRuleGroupOverride": {
   "description": "Defines a managed rule group override setting.",
   "properties": {
    "ruleGroupName": {
     "description": "The managed rule group to override.",
     "type": "string"
    },
    "rules": {
     "description": "List of rules that will be disabled. If none specified, all rules in the group will be disabled.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ManagedRuleOverride",
      "type": "object"
     },
     "type": "array"
    }
   },
   "required": [
    "ruleGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ManagedRuleGroupOverrideResponse": {
   "description": "Defines a managed rule group override setting.",
   "properties": {
    "ruleGroupName": {
     "description": "The managed rule group to override.",
     "type": "string"
    },
    "rules": {
     "description": "List of rules that will be disabled. If none specified, all rules in the group will be disabled.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ManagedRuleOverrideResponse",
      "type": "object"
     },
     "type": "array"
    }
   },
   "required": [
    "ruleGroupName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ManagedRuleOverride": {
   "description": "Defines a managed rule group override setting.",
   "properties": {
    "action": {
     "description": "Describes the override action to be applied when rule matches.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ActionType"
      }
     ]
    },
    "ruleId": {
     "description": "Identifier for the managed rule.",
     "type": "string"
    },
    "state": {
     "description": "The state of the managed rule. Defaults to Disabled if not specified.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ManagedRuleEnabledState"
      }
     ]
    }
   },
   "required": [
    "ruleId"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ManagedRuleOverrideResponse": {
   "description": "Defines a managed rule group override setting.",
   "properties": {
    "action": {
     "description": "Describes the override action to be applied when rule matches.",
     "type": "string"
    },
    "ruleId": {
     "description": "Identifier for the managed rule.",
     "type": "string"
    },
    "state": {
     "description": "The state of the managed rule. Defaults to Disabled if not specified.",
     "type": "string"
    }
   },
   "required": [
    "ruleId"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ManagedRuleSet": {
   "description": "Defines a managed rule set.",
   "properties": {
    "ruleGroupOverrides": {
     "description": "Defines the rule group overrides to apply to the rule set.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ManagedRuleGroupOverride",
      "type": "object"
     },
     "type": "array"
    },
    "ruleSetType": {
     "description": "Defines the rule set type to use.",
     "type": "string"
    },
    "ruleSetVersion": {
     "description": "Defines the version of the rule set to use.",
     "type": "string"
    }
   },
   "required": [
    "ruleSetType",
    "ruleSetVersion"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ManagedRuleSetResponse": {
   "description": "Defines a managed rule set.",
   "properties": {
    "ruleGroupOverrides": {
     "description": "Defines the rule group overrides to apply to the rule set.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ManagedRuleGroupOverrideResponse",
      "type": "object"
     },
     "type": "array"
    },
    "ruleSetType": {
     "description": "Defines the rule set type to use.",
     "type": "string"
    },
    "ruleSetVersion": {
     "description": "Defines the version of the rule set to use.",
     "type": "string"
    }
   },
   "required": [
    "ruleSetType",
    "ruleSetVersion"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ManagedRulesDefinition": {
   "description": "Allow to exclude some variable satisfy the condition for the WAF check.",
   "properties": {
    "exclusions": {
     "description": "The Exclusions that are applied on the policy.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:OwaspCrsExclusionEntry",
      "type": "object"
     },
     "type": "array"
    },
    "managedRuleSets": {
     "description": "The managed rule sets that are associated with the policy.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ManagedRuleSet",
      "type": "object"
     },
     "type": "array"
    }
   },
   "required": [
    "managedRuleSets"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ManagedRulesDefinitionResponse": {
   "description": "Allow to exclude some variable satisfy the condition for the WAF check.",
   "properties": {
    "exclusions": {
     "description": "The Exclusions that are applied on the policy.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:OwaspCrsExclusionEntryResponse",
      "type": "object"
     },
     "type": "array"
    },
    "managedRuleSets": {
     "description": "The managed rule sets that are associated with the policy.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ManagedRuleSetResponse",
      "type": "object"
     },
     "type": "array"
    }
   },
   "required": [
    "managedRuleSets"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ManagedServiceIdentity": {
   "description": "Identity for the resource.",
   "properties": {
    "type": {
     "$ref": "#/types/azure-native:network:ResourceIdentityType",
     "description": "The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine."
    },
    "userAssignedIdentities": {
     "description": "The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ManagedServiceIdentityResponse": {
   "description": "Identity for the resource.",
   "properties": {
    "principalId": {
     "description": "The principal id of the system assigned identity. This property will only be provided for a system assigned identity.",
     "type": "string"
    },
    "tenantId": {
     "description": "The tenant id of the system assigned identity. This property will only be provided for a system assigned identity.",
     "type": "string"
    },
    "type": {
     "description": "The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.",
     "type": "string"
    },
    "userAssignedIdentities": {
     "additionalProperties": {
      "$ref": "#/types/azure-native_network_v20230201:network:ManagedServiceIdentityResponseUserAssignedIdentities",
      "type": "object"
     },
     "description": "The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
     "type": "object"
    }
   },
   "required": [
    "principalId",
    "tenantId"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ManagedServiceIdentityResponseUserAssignedIdentities": {
   "properties": {
    "clientId": {
     "description": "The client id of user assigned identity.",
     "type": "string"
    },
    "principalId": {
     "description": "The principal id of user assigned identity.",
     "type": "string"
    }
   },
   "required": [
    "clientId",
    "principalId"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:MatchCondition": {
   "description": "Define match conditions.",
   "properties": {
    "matchValues": {
     "description": "Match value.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "matchVariables": {
     "description": "List of match variables.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:MatchVariable",
      "type": "object"
     },
     "type": "array"
    },
    "negationConditon": {
     "description": "Whether this is negate condition or not.",
     "type": "boolean"
    },
    "operator": {
     "description": "The operator to be matched.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:WebApplicationFirewallOperator"
      }
     ]
    },
    "transforms": {
     "description": "List of transforms.",
     "items": {
      "oneOf": [
       {
        "type": "string"
       },
       {
        "$ref": "#/types/azure-native:network:WebApplicationFirewallTransform"
       }
      ]
     },
     "type": "array"
    }
   },
   "required": [
    "matchValues",
    "matchVariables",
    "operator"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:MatchConditionResponse": {
   "description": "Define match conditions.",
   "properties": {
    "matchValues": {
     "description": "Match value.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "matchVariables": {
     "description": "List of match variables.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:MatchVariableResponse",
      "type": "object"
     },
     "type": "array"
    },
    "negationConditon": {
     "description": "Whether this is negate condition or not.",
     "type": "boolean"
    },
    "operator": {
     "description": "The operator to be matched.",
     "type": "string"
    },
    "transforms": {
     "description": "List of transforms.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "required": [
    "matchValues",
    "matchVariables",
    "operator"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:MatchVariable": {
   "description": "Define match variables.",
   "properties": {
    "selector": {
     "description": "The selector of match variable.",
     "type": "string"
    },
    "variableName": {
     "description": "Match Variable.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:WebApplicationFirewallMatchVariable"
      }
     ]
    }
   },
   "required": [
    "variableName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:MatchVariableResponse": {
   "description": "Define match variables.",
   "properties": {
    "selector": {
     "description": "The selector of match variable.",
     "type": "string"
    },
    "variableName": {
     "description": "Match Variable.",
     "type": "string"
    }
   },
   "required": [
    "variableName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:NatGateway": {
   "description": "Nat Gateway resource.",
   "properties": {
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "idleTimeoutInMinutes": {
     "description": "The idle timeout of the nat gateway.",
     "type": "integer"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "publicIpAddresses": {
     "description": "An array of public ip addresses associated with the nat gateway resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
      "type": "object"
     },
     "type": "array"
    },
    "publicIpPrefixes": {
     "description": "An array of public ip prefixes associated with the nat gateway resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
      "type": "object"
     },
     "type": "array"
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:NatGatewaySku",
     "description": "The nat gateway SKU.",
     "type": "object"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "zones": {
     "description": "A list of availability zones denoting the zone in which Nat Gateway should be deployed.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:NatGatewayResponse": {
   "description": "Nat Gateway resource.",
   "properties": {
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "idleTimeoutInMinutes": {
     "description": "The idle timeout of the nat gateway.",
     "type": "integer"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the NAT gateway resource.",
     "type": "string"
    },
    "publicIpAddresses": {
     "description": "An array of public ip addresses associated with the nat gateway resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "publicIpPrefixes": {
     "description": "An array of public ip prefixes associated with the nat gateway resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "resourceGuid": {
     "description": "The resource GUID property of the NAT gateway resource.",
     "type": "string"
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:NatGatewaySkuResponse",
     "description": "The nat gateway SKU.",
     "type": "object"
    },
    "subnets": {
     "description": "An array of references to the subnets using this nat gateway resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    },
    "zones": {
     "description": "A list of availability zones denoting the zone in which Nat Gateway should be deployed.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "required": [
    "etag",
    "name",
    "provisioningState",
    "resourceGuid",
    "subnets",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:NatGatewaySku": {
   "description": "SKU of nat gateway.",
   "properties": {
    "name": {
     "description": "Name of Nat Gateway SKU.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:NatGatewaySkuName"
      }
     ]
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:NatGatewaySkuResponse": {
   "description": "SKU of nat gateway.",
   "properties": {
    "name": {
     "description": "Name of Nat Gateway SKU.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:NatRule": {
   "description": "Rule of type nat.",
   "properties": {
    "description": {
     "description": "Description of the rule.",
     "type": "string"
    },
    "destinationAddresses": {
     "description": "List of destination IP addresses or Service Tags.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "destinationPorts": {
     "description": "List of destination ports.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "ipProtocols": {
     "description": "Array of FirewallPolicyRuleNetworkProtocols.",
     "items": {
      "oneOf": [
       {
        "type": "string"
       },
       {
        "$ref": "#/types/azure-native:network:FirewallPolicyRuleNetworkProtocol"
       }
      ]
     },
     "type": "array"
    },
    "name": {
     "description": "Name of the rule.",
     "type": "string"
    },
    "ruleType": {
     "const": "NatRule",
     "description": "Rule Type.\nExpected value is 'NatRule'.",
     "type": "string"
    },
    "sourceAddresses": {
     "description": "List of source IP addresses for this rule.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "sourceIpGroups": {
     "description": "List of source IpGroups for this rule.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "translatedAddress": {
     "description": "The translated address for this NAT rule.",
     "type": "string"
    },
    "translatedFqdn": {
     "description": "The translated FQDN for this NAT rule.",
     "type": "string"
    },
    "translatedPort": {
     "description": "The translated port for this NAT rule.",
     "type": "string"
    }
   },
   "required": [
    "ruleType"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:NatRulePortMappingResponse": {
   "description": "Individual port mappings for inbound NAT rule created for backend pool.",
   "properties": {
    "backendPort": {
     "description": "Backend port.",
     "type": "integer"
    },
    "frontendPort": {
     "description": "Frontend port.",
     "type": "integer"
    },
    "inboundNatRuleName": {
     "description": "Name of inbound NAT rule.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:NatRuleResponse": {
   "description": "Rule of type nat.",
   "properties": {
    "description": {
     "description": "Description of the rule.",
     "type": "string"
    },
    "destinationAddresses": {
     "description": "List of destination IP addresses or Service Tags.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "destinationPorts": {
     "description": "List of destination ports.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "ipProtocols": {
     "description": "Array of FirewallPolicyRuleNetworkProtocols.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "name": {
     "description": "Name of the rule.",
     "type": "string"
    },
    "ruleType": {
     "const": "NatRule",
     "description": "Rule Type.\nExpected value is 'NatRule'.",
     "type": "string"
    },
    "sourceAddresses": {
     "description": "List of source IP addresses for this rule.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "sourceIpGroups": {
     "description": "List of source IpGroups for this rule.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "translatedAddress": {
     "description": "The translated address for this NAT rule.",
     "type": "string"
    },
    "translatedFqdn": {
     "description": "The translated FQDN for this NAT rule.",
     "type": "string"
    },
    "translatedPort": {
     "description": "The translated port for this NAT rule.",
     "type": "string"
    }
   },
   "required": [
    "ruleType"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:NetworkInterfaceDnsSettings": {
   "description": "DNS settings of a network interface.",
   "properties": {
    "dnsServers": {
     "description": "List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "internalDnsNameLabel": {
     "description": "Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:NetworkInterfaceDnsSettingsResponse": {
   "description": "DNS settings of a network interface.",
   "properties": {
    "appliedDnsServers": {
     "description": "If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "dnsServers": {
     "description": "List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "internalDnsNameLabel": {
     "description": "Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.",
     "type": "string"
    },
    "internalDomainNameSuffix": {
     "description": "Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix.",
     "type": "string"
    },
    "internalFqdn": {
     "description": "Fully qualified DNS name supporting internal communications between VMs in the same virtual network.",
     "type": "string"
    }
   },
   "required": [
    "appliedDnsServers",
    "internalDomainNameSuffix",
    "internalFqdn"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:NetworkInterfaceIPConfiguration": {
   "description": "IPConfiguration in a network interface.",
   "properties": {
    "applicationGatewayBackendAddressPools": {
     "description": "The reference to ApplicationGatewayBackendAddressPool resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayBackendAddressPool",
      "type": "object"
     },
     "type": "array"
    },
    "applicationSecurityGroups": {
     "description": "Application security groups in which the IP configuration is included.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationSecurityGroup",
      "type": "object"
     },
     "type": "array"
    },
    "gatewayLoadBalancer": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "The reference to gateway load balancer frontend IP.",
     "type": "object"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "loadBalancerBackendAddressPools": {
     "description": "The reference to LoadBalancerBackendAddressPool resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:BackendAddressPool",
      "type": "object"
     },
     "type": "array"
    },
    "loadBalancerInboundNatRules": {
     "description": "A list of references of LoadBalancerInboundNatRules.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:InboundNatRule",
      "type": "object"
     },
     "type": "array"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "primary": {
     "description": "Whether this is a primary customer address on the network interface.",
     "type": "boolean"
    },
    "privateIPAddress": {
     "description": "Private IP address of the IP configuration.",
     "type": "string"
    },
    "privateIPAddressVersion": {
     "description": "Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:IPVersion"
      }
     ]
    },
    "privateIPAllocationMethod": {
     "description": "The private IP address allocation method.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:IPAllocationMethod"
      }
     ]
    },
    "publicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddress",
     "description": "Public IP address bound to the IP configuration.",
     "type": "object"
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:Subnet",
     "description": "Subnet bound to the IP configuration.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    },
    "virtualNetworkTaps": {
     "description": "The reference to Virtual Network Taps.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkTap",
      "type": "object"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse": {
   "description": "PrivateLinkConnection properties for the network interface.",
   "properties": {
    "fqdns": {
     "description": "List of FQDNs for current private link connection.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "groupId": {
     "description": "The group ID for current private link connection.",
     "type": "string"
    },
    "requiredMemberName": {
     "description": "The required member name for current private link connection.",
     "type": "string"
    }
   },
   "required": [
    "fqdns",
    "groupId",
    "requiredMemberName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:NetworkInterfaceIPConfigurationResponse": {
   "description": "IPConfiguration in a network interface.",
   "properties": {
    "applicationGatewayBackendAddressPools": {
     "description": "The reference to ApplicationGatewayBackendAddressPool resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayBackendAddressPoolResponse",
      "type": "object"
     },
     "type": "array"
    },
    "applicationSecurityGroups": {
     "description": "Application security groups in which the IP configuration is included.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationSecurityGroupResponse",
      "type": "object"
     },
     "type": "array"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "gatewayLoadBalancer": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The reference to gateway load balancer frontend IP.",
     "type": "object"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "loadBalancerBackendAddressPools": {
     "description": "The reference to LoadBalancerBackendAddressPool resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:BackendAddressPoolResponse",
      "type": "object"
     },
     "type": "array"
    },
    "loadBalancerInboundNatRules": {
     "description": "A list of references of LoadBalancerInboundNatRules.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:InboundNatRuleResponse",
      "type": "object"
     },
     "type": "array"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "primary": {
     "description": "Whether this is a primary customer address on the network interface.",
     "type": "boolean"
    },
    "privateIPAddress": {
     "description": "Private IP address of the IP configuration.",
     "type": "string"
    },
    "privateIPAddressVersion": {
     "description": "Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.",
     "type": "string"
    },
    "privateIPAllocationMethod": {
     "description": "The private IP address allocation method.",
     "type": "string"
    },
    "privateLinkConnectionProperties": {
     "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse",
     "description": "PrivateLinkConnection properties for the network interface.",
     "type": "object"
    },
    "provisioningState": {
     "description": "The provisioning state of the network interface IP configuration.",
     "type": "string"
    },
    "publicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddressResponse",
     "description": "Public IP address bound to the IP configuration.",
     "type": "object"
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubnetResponse",
     "description": "Subnet bound to the IP configuration.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    },
    "virtualNetworkTaps": {
     "description": "The reference to Virtual Network Taps.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkTapResponse",
      "type": "object"
     },
     "type": "array"
    }
   },
   "required": [
    "etag",
    "privateLinkConnectionProperties",
    "provisioningState"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:NetworkInterfaceResponse": {
   "description": "A network interface in a resource group.",
   "properties": {
    "auxiliaryMode": {
     "description": "Auxiliary mode of Network Interface resource.",
     "type": "string"
    },
    "auxiliarySku": {
     "description": "Auxiliary sku of Network Interface resource.",
     "type": "string"
    },
    "disableTcpStateTracking": {
     "description": "Indicates whether to disable tcp state tracking.",
     "type": "boolean"
    },
    "dnsSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceDnsSettingsResponse",
     "description": "The DNS settings in network interface.",
     "type": "object"
    },
    "dscpConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "A reference to the dscp configuration to which the network interface is linked.",
     "type": "object"
    },
    "enableAcceleratedNetworking": {
     "description": "If the network interface is configured for accelerated networking. Not applicable to VM sizes which require accelerated networking.",
     "type": "boolean"
    },
    "enableIPForwarding": {
     "description": "Indicates whether IP forwarding is enabled on this network interface.",
     "type": "boolean"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse",
     "description": "The extended location of the network interface.",
     "type": "object"
    },
    "hostedWorkloads": {
     "description": "A list of references to linked BareMetal resources.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "ipConfigurations": {
     "description": "A list of IPConfigurations of the network interface.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceIPConfigurationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "macAddress": {
     "description": "The MAC address of the network interface.",
     "type": "string"
    },
    "migrationPhase": {
     "description": "Migration phase of Network Interface resource.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "networkSecurityGroup": {
     "$ref": "#/types/azure-native_network_v20230201:network:NetworkSecurityGroupResponse",
     "description": "The reference to the NetworkSecurityGroup resource.",
     "type": "object"
    },
    "nicType": {
     "description": "Type of Network Interface resource.",
     "type": "string"
    },
    "primary": {
     "description": "Whether this is a primary network interface on a virtual machine.",
     "type": "boolean"
    },
    "privateEndpoint": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateEndpointResponse",
     "description": "A reference to the private endpoint to which the network interface is linked.",
     "type": "object"
    },
    "privateLinkService": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceResponse",
     "description": "Privatelinkservice of the network interface resource.",
     "type": "object"
    },
    "provisioningState": {
     "description": "The provisioning state of the network interface resource.",
     "type": "string"
    },
    "resourceGuid": {
     "description": "The resource GUID property of the network interface resource.",
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "tapConfigurations": {
     "description": "A list of TapConfigurations of the network interface.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceTapConfigurationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    },
    "virtualMachine": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The reference to a virtual machine.",
     "type": "object"
    },
    "vnetEncryptionSupported": {
     "description": "Whether the virtual machine this nic is attached to supports encryption.",
     "type": "boolean"
    },
    "workloadType": {
     "description": "WorkloadType of the NetworkInterface for BareMetal resources",
     "type": "string"
    }
   },
   "required": [
    "dscpConfiguration",
    "etag",
    "hostedWorkloads",
    "macAddress",
    "name",
    "primary",
    "privateEndpoint",
    "provisioningState",
    "resourceGuid",
    "tapConfigurations",
    "type",
    "virtualMachine",
    "vnetEncryptionSupported"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:NetworkInterfaceTapConfigurationResponse": {
   "description": "Tap configuration in a Network Interface.",
   "properties": {
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the network interface tap configuration resource.",
     "type": "string"
    },
    "type": {
     "description": "Sub Resource type.",
     "type": "string"
    },
    "virtualNetworkTap": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkTapResponse",
     "description": "The reference to the Virtual Network Tap resource.",
     "type": "object"
    }
   },
   "required": [
    "etag",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:NetworkManagerDeploymentStatusResponse": {
   "description": "Network Manager Deployment Status.",
   "properties": {
    "commitTime": {
     "description": "Commit Time.",
     "type": "string"
    },
    "configurationIds": {
     "description": "List of configuration ids.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "deploymentStatus": {
     "description": "Deployment Status.",
     "type": "string"
    },
    "deploymentType": {
     "description": "Configuration Deployment Type.",
     "type": "string"
    },
    "errorMessage": {
     "description": "Error Message.",
     "type": "string"
    },
    "region": {
     "description": "Region Name.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:NetworkManagerPropertiesNetworkManagerScopes": {
   "description": "Scope of Network Manager.",
   "properties": {
    "managementGroups": {
     "description": "List of management groups.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "subscriptions": {
     "description": "List of subscriptions.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:NetworkManagerPropertiesResponseNetworkManagerScopes": {
   "description": "Scope of Network Manager.",
   "properties": {
    "crossTenantScopes": {
     "description": "List of cross tenant scopes.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:CrossTenantScopesResponse",
      "type": "object"
     },
     "type": "array"
    },
    "managementGroups": {
     "description": "List of management groups.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "subscriptions": {
     "description": "List of subscriptions.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "required": [
    "crossTenantScopes"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:NetworkManagerSecurityGroupItem": {
   "description": "Network manager security group item.",
   "properties": {
    "networkGroupId": {
     "description": "Network manager group Id.",
     "type": "string"
    }
   },
   "required": [
    "networkGroupId"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:NetworkManagerSecurityGroupItemResponse": {
   "description": "Network manager security group item.",
   "properties": {
    "networkGroupId": {
     "description": "Network manager group Id.",
     "type": "string"
    }
   },
   "required": [
    "networkGroupId"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:NetworkRule": {
   "description": "Rule of type network.",
   "properties": {
    "description": {
     "description": "Description of the rule.",
     "type": "string"
    },
    "destinationAddresses": {
     "description": "List of destination IP addresses or Service Tags.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "destinationFqdns": {
     "description": "List of destination FQDNs.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "destinationIpGroups": {
     "description": "List of destination IpGroups for this rule.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "destinationPorts": {
     "description": "List of destination ports.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "ipProtocols": {
     "description": "Array of FirewallPolicyRuleNetworkProtocols.",
     "items": {
      "oneOf": [
       {
        "type": "string"
       },
       {
        "$ref": "#/types/azure-native:network:FirewallPolicyRuleNetworkProtocol"
       }
      ]
     },
     "type": "array"
    },
    "name": {
     "description": "Name of the rule.",
     "type": "string"
    },
    "ruleType": {
     "const": "NetworkRule",
     "description": "Rule Type.\nExpected value is 'NetworkRule'.",
     "type": "string"
    },
    "sourceAddresses": {
     "description": "List of source IP addresses for this rule.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "sourceIpGroups": {
     "description": "List of source IpGroups for this rule.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "required": [
    "ruleType"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:NetworkRuleResponse": {
   "description": "Rule of type network.",
   "properties": {
    "description": {
     "description": "Description of the rule.",
     "type": "string"
    },
    "destinationAddresses": {
     "description": "List of destination IP addresses or Service Tags.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "destinationFqdns": {
     "description": "List of destination FQDNs.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "destinationIpGroups": {
     "description": "List of destination IpGroups for this rule.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "destinationPorts": {
     "description": "List of destination ports.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "ipProtocols": {
     "description": "Array of FirewallPolicyRuleNetworkProtocols.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "name": {
     "description": "Name of the rule.",
     "type": "string"
    },
    "ruleType": {
     "const": "NetworkRule",
     "description": "Rule Type.\nExpected value is 'NetworkRule'.",
     "type": "string"
    },
    "sourceAddresses": {
     "description": "List of source IP addresses for this rule.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "sourceIpGroups": {
     "description": "List of source IpGroups for this rule.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "required": [
    "ruleType"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:NetworkSecurityGroup": {
   "description": "NetworkSecurityGroup resource.",
   "properties": {
    "flushConnection": {
     "description": "When enabled, flows created from Network Security Group connections will be re-evaluated when rules are updates. Initial enablement will trigger re-evaluation.",
     "type": "boolean"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "securityRules": {
     "description": "A collection of security rules of the network security group.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SecurityRule",
      "type": "object"
     },
     "type": "array"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:NetworkSecurityGroupResponse": {
   "description": "NetworkSecurityGroup resource.",
   "properties": {
    "defaultSecurityRules": {
     "description": "The default security rules of network security group.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SecurityRuleResponse",
      "type": "object"
     },
     "type": "array"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "flowLogs": {
     "description": "A collection of references to flow log resources.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:FlowLogResponse",
      "type": "object"
     },
     "type": "array"
    },
    "flushConnection": {
     "description": "When enabled, flows created from Network Security Group connections will be re-evaluated when rules are updates. Initial enablement will trigger re-evaluation.",
     "type": "boolean"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "networkInterfaces": {
     "description": "A collection of references to network interfaces.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "provisioningState": {
     "description": "The provisioning state of the network security group resource.",
     "type": "string"
    },
    "resourceGuid": {
     "description": "The resource GUID property of the network security group resource.",
     "type": "string"
    },
    "securityRules": {
     "description": "A collection of security rules of the network security group.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SecurityRuleResponse",
      "type": "object"
     },
     "type": "array"
    },
    "subnets": {
     "description": "A collection of references to subnets.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubnetResponse",
      "type": "object"
     },
     "type": "array"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "defaultSecurityRules",
    "etag",
    "flowLogs",
    "name",
    "networkInterfaces",
    "provisioningState",
    "resourceGuid",
    "subnets",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:NetworkVirtualApplianceConnectionProperties": {
   "description": "Properties of the NetworkVirtualApplianceConnection subresource.",
   "properties": {
    "asn": {
     "description": "Network Virtual Appliance ASN.",
     "type": "number"
    },
    "bgpPeerAddress": {
     "description": "List of bgpPeerAddresses for the NVA instances",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "enableInternetSecurity": {
     "description": "Enable internet security.",
     "type": "boolean"
    },
    "name": {
     "description": "The name of the resource.",
     "type": "string"
    },
    "routingConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfigurationNfv",
     "description": "The Routing Configuration indicating the associated and propagated route tables on this connection.",
     "type": "object"
    },
    "tunnelIdentifier": {
     "description": "Unique identifier for the connection.",
     "type": "number"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:NetworkVirtualApplianceConnectionPropertiesResponse": {
   "description": "Properties of the NetworkVirtualApplianceConnection subresource.",
   "properties": {
    "asn": {
     "description": "Network Virtual Appliance ASN.",
     "type": "number"
    },
    "bgpPeerAddress": {
     "description": "List of bgpPeerAddresses for the NVA instances",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "enableInternetSecurity": {
     "description": "Enable internet security.",
     "type": "boolean"
    },
    "name": {
     "description": "The name of the resource.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the NetworkVirtualApplianceConnection resource.",
     "type": "string"
    },
    "routingConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfigurationNfvResponse",
     "description": "The Routing Configuration indicating the associated and propagated route tables on this connection.",
     "type": "object"
    },
    "tunnelIdentifier": {
     "description": "Unique identifier for the connection.",
     "type": "number"
    }
   },
   "required": [
    "provisioningState"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:O365BreakOutCategoryPolicies": {
   "description": "Office365 breakout categories.",
   "properties": {
    "allow": {
     "description": "Flag to control allow category.",
     "type": "boolean"
    },
    "default": {
     "description": "Flag to control default category.",
     "type": "boolean"
    },
    "optimize": {
     "description": "Flag to control optimize category.",
     "type": "boolean"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:O365BreakOutCategoryPoliciesResponse": {
   "description": "Office365 breakout categories.",
   "properties": {
    "allow": {
     "description": "Flag to control allow category.",
     "type": "boolean"
    },
    "default": {
     "description": "Flag to control default category.",
     "type": "boolean"
    },
    "optimize": {
     "description": "Flag to control optimize category.",
     "type": "boolean"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:O365PolicyProperties": {
   "description": "The Office365 breakout policy.",
   "properties": {
    "breakOutCategories": {
     "$ref": "#/types/azure-native_network_v20230201:network:O365BreakOutCategoryPolicies",
     "description": "Office365 breakout categories.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:O365PolicyPropertiesResponse": {
   "description": "The Office365 breakout policy.",
   "properties": {
    "breakOutCategories": {
     "$ref": "#/types/azure-native_network_v20230201:network:O365BreakOutCategoryPoliciesResponse",
     "description": "Office365 breakout categories.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:Office365PolicyProperties": {
   "description": "Network Virtual Appliance Sku Properties.",
   "properties": {
    "breakOutCategories": {
     "$ref": "#/types/azure-native_network_v20230201:network:BreakOutCategoryPolicies",
     "description": "Office 365 breakout categories.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:Office365PolicyPropertiesResponse": {
   "description": "Network Virtual Appliance Sku Properties.",
   "properties": {
    "breakOutCategories": {
     "$ref": "#/types/azure-native_network_v20230201:network:BreakOutCategoryPoliciesResponse",
     "description": "Office 365 breakout categories.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:OrderBy": {
   "description": "Describes a column to sort",
   "properties": {
    "field": {
     "description": "Describes the actual column name to sort by",
     "type": "string"
    },
    "order": {
     "description": "Describes if results should be in ascending/descending order",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:FirewallPolicyIDPSQuerySortOrder"
      }
     ]
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:OutboundRule": {
   "description": "Outbound rule of the load balancer.",
   "properties": {
    "allocatedOutboundPorts": {
     "description": "The number of outbound ports to be used for NAT.",
     "type": "integer"
    },
    "backendAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.",
     "type": "object"
    },
    "enableTcpReset": {
     "description": "Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.",
     "type": "boolean"
    },
    "frontendIPConfigurations": {
     "description": "The Frontend IP addresses of the load balancer.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
      "type": "object"
     },
     "type": "array"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "idleTimeoutInMinutes": {
     "description": "The timeout for the TCP idle connection.",
     "type": "integer"
    },
    "name": {
     "description": "The name of the resource that is unique within the set of outbound rules used by the load balancer. This name can be used to access the resource.",
     "type": "string"
    },
    "protocol": {
     "description": "The protocol for the outbound rule in load balancer.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:LoadBalancerOutboundRuleProtocol"
      }
     ]
    }
   },
   "required": [
    "backendAddressPool",
    "frontendIPConfigurations",
    "protocol"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:OutboundRuleResponse": {
   "description": "Outbound rule of the load balancer.",
   "properties": {
    "allocatedOutboundPorts": {
     "description": "The number of outbound ports to be used for NAT.",
     "type": "integer"
    },
    "backendAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.",
     "type": "object"
    },
    "enableTcpReset": {
     "description": "Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.",
     "type": "boolean"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "frontendIPConfigurations": {
     "description": "The Frontend IP addresses of the load balancer.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "idleTimeoutInMinutes": {
     "description": "The timeout for the TCP idle connection.",
     "type": "integer"
    },
    "name": {
     "description": "The name of the resource that is unique within the set of outbound rules used by the load balancer. This name can be used to access the resource.",
     "type": "string"
    },
    "protocol": {
     "description": "The protocol for the outbound rule in load balancer.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the outbound rule resource.",
     "type": "string"
    },
    "type": {
     "description": "Type of the resource.",
     "type": "string"
    }
   },
   "required": [
    "backendAddressPool",
    "etag",
    "frontendIPConfigurations",
    "protocol",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:OwaspCrsExclusionEntry": {
   "description": "Allow to exclude some variable satisfy the condition for the WAF check.",
   "properties": {
    "exclusionManagedRuleSets": {
     "description": "The managed rule sets that are associated with the exclusion.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExclusionManagedRuleSet",
      "type": "object"
     },
     "type": "array"
    },
    "matchVariable": {
     "description": "The variable to be excluded.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:OwaspCrsExclusionEntryMatchVariable"
      }
     ]
    },
    "selector": {
     "description": "When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.",
     "type": "string"
    },
    "selectorMatchOperator": {
     "description": "When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:OwaspCrsExclusionEntrySelectorMatchOperator"
      }
     ]
    }
   },
   "required": [
    "matchVariable",
    "selector",
    "selectorMatchOperator"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:OwaspCrsExclusionEntryResponse": {
   "description": "Allow to exclude some variable satisfy the condition for the WAF check.",
   "properties": {
    "exclusionManagedRuleSets": {
     "description": "The managed rule sets that are associated with the exclusion.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExclusionManagedRuleSetResponse",
      "type": "object"
     },
     "type": "array"
    },
    "matchVariable": {
     "description": "The variable to be excluded.",
     "type": "string"
    },
    "selector": {
     "description": "When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.",
     "type": "string"
    },
    "selectorMatchOperator": {
     "description": "When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.",
     "type": "string"
    }
   },
   "required": [
    "matchVariable",
    "selector",
    "selectorMatchOperator"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:P2SConnectionConfiguration": {
   "description": "P2SConnectionConfiguration Resource.",
   "properties": {
    "enableInternetSecurity": {
     "description": "Flag indicating whether the enable internet security flag is turned on for the P2S Connections or not.",
     "type": "boolean"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "routingConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfiguration",
     "description": "The Routing Configuration indicating the associated and propagated route tables on this connection.",
     "type": "object"
    },
    "vpnClientAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpace",
     "description": "The reference to the address space resource which represents Address space for P2S VpnClient.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:P2SConnectionConfigurationResponse": {
   "description": "P2SConnectionConfiguration Resource.",
   "properties": {
    "configurationPolicyGroupAssociations": {
     "description": "List of Configuration Policy Groups that this P2SConnectionConfiguration is attached to.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "enableInternetSecurity": {
     "description": "Flag indicating whether the enable internet security flag is turned on for the P2S Connections or not.",
     "type": "boolean"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "previousConfigurationPolicyGroupAssociations": {
     "description": "List of previous Configuration Policy Groups that this P2SConnectionConfiguration was attached to.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnServerConfigurationPolicyGroupResponse",
      "type": "object"
     },
     "type": "array"
    },
    "provisioningState": {
     "description": "The provisioning state of the P2SConnectionConfiguration resource.",
     "type": "string"
    },
    "routingConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfigurationResponse",
     "description": "The Routing Configuration indicating the associated and propagated route tables on this connection.",
     "type": "object"
    },
    "vpnClientAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpaceResponse",
     "description": "The reference to the address space resource which represents Address space for P2S VpnClient.",
     "type": "object"
    }
   },
   "required": [
    "configurationPolicyGroupAssociations",
    "etag",
    "previousConfigurationPolicyGroupAssociations",
    "provisioningState"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:P2SVpnGatewayResponse": {
   "description": "P2SVpnGateway Resource.",
   "properties": {
    "customDnsServers": {
     "description": "List of all customer specified DNS servers IP addresses.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "isRoutingPreferenceInternet": {
     "description": "Enable Routing Preference property for the Public IP Interface of the P2SVpnGateway.",
     "type": "boolean"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "p2SConnectionConfigurations": {
     "description": "List of all p2s connection configurations of the gateway.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:P2SConnectionConfigurationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "provisioningState": {
     "description": "The provisioning state of the P2S VPN gateway resource.",
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    },
    "virtualHub": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The VirtualHub to which the gateway belongs.",
     "type": "object"
    },
    "vpnClientConnectionHealth": {
     "$ref": "#/types/azure-native_network_v20230201:network:VpnClientConnectionHealthResponse",
     "description": "All P2S VPN clients' connection health status.",
     "type": "object"
    },
    "vpnGatewayScaleUnit": {
     "description": "The scale unit for this p2s vpn gateway.",
     "type": "integer"
    },
    "vpnServerConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The VpnServerConfiguration to which the p2sVpnGateway is attached to.",
     "type": "object"
    }
   },
   "required": [
    "etag",
    "location",
    "name",
    "provisioningState",
    "type",
    "vpnClientConnectionHealth"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:PacketCaptureFilter": {
   "description": "Filter that is applied to packet capture request. Multiple filters can be applied.",
   "properties": {
    "localIPAddress": {
     "description": "Local IP Address to be filtered on. Notation: \"127.0.0.1\" for single address entry. \"127.0.0.1-127.0.0.255\" for range. \"127.0.0.1;127.0.0.5\"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.",
     "type": "string"
    },
    "localPort": {
     "description": "Local port to be filtered on. Notation: \"80\" for single port entry.\"80-85\" for range. \"80;443;\" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.",
     "type": "string"
    },
    "protocol": {
     "default": "Any",
     "description": "Protocol to be filtered on.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:PcProtocol"
      }
     ]
    },
    "remoteIPAddress": {
     "description": "Local IP Address to be filtered on. Notation: \"127.0.0.1\" for single address entry. \"127.0.0.1-127.0.0.255\" for range. \"127.0.0.1;127.0.0.5;\" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.",
     "type": "string"
    },
    "remotePort": {
     "description": "Remote port to be filtered on. Notation: \"80\" for single port entry.\"80-85\" for range. \"80;443;\" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:PacketCaptureFilterResponse": {
   "description": "Filter that is applied to packet capture request. Multiple filters can be applied.",
   "properties": {
    "localIPAddress": {
     "description": "Local IP Address to be filtered on. Notation: \"127.0.0.1\" for single address entry. \"127.0.0.1-127.0.0.255\" for range. \"127.0.0.1;127.0.0.5\"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.",
     "type": "string"
    },
    "localPort": {
     "description": "Local port to be filtered on. Notation: \"80\" for single port entry.\"80-85\" for range. \"80;443;\" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.",
     "type": "string"
    },
    "protocol": {
     "default": "Any",
     "description": "Protocol to be filtered on.",
     "type": "string"
    },
    "remoteIPAddress": {
     "description": "Local IP Address to be filtered on. Notation: \"127.0.0.1\" for single address entry. \"127.0.0.1-127.0.0.255\" for range. \"127.0.0.1;127.0.0.5;\" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.",
     "type": "string"
    },
    "remotePort": {
     "description": "Remote port to be filtered on. Notation: \"80\" for single port entry.\"80-85\" for range. \"80;443;\" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:PacketCaptureMachineScope": {
   "description": "A list of AzureVMSS instances which can be included or excluded to run packet capture. If both included and excluded are empty, then the packet capture will run on all instances of AzureVMSS.",
   "properties": {
    "exclude": {
     "description": "List of AzureVMSS instances which has to be excluded from the AzureVMSS from running packet capture.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "include": {
     "description": "List of AzureVMSS instances to run packet capture on.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:PacketCaptureMachineScopeResponse": {
   "description": "A list of AzureVMSS instances which can be included or excluded to run packet capture. If both included and excluded are empty, then the packet capture will run on all instances of AzureVMSS.",
   "properties": {
    "exclude": {
     "description": "List of AzureVMSS instances which has to be excluded from the AzureVMSS from running packet capture.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "include": {
     "description": "List of AzureVMSS instances to run packet capture on.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:PacketCaptureStorageLocation": {
   "description": "The storage location for a packet capture session.",
   "properties": {
    "filePath": {
     "description": "A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional.",
     "type": "string"
    },
    "storageId": {
     "description": "The ID of the storage account to save the packet capture session. Required if no local file path is provided.",
     "type": "string"
    },
    "storagePath": {
     "description": "The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:PacketCaptureStorageLocationResponse": {
   "description": "The storage location for a packet capture session.",
   "properties": {
    "filePath": {
     "description": "A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional.",
     "type": "string"
    },
    "storageId": {
     "description": "The ID of the storage account to save the packet capture session. Required if no local file path is provided.",
     "type": "string"
    },
    "storagePath": {
     "description": "The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:Parameter": {
   "description": "Parameters for an Action.",
   "properties": {
    "asPath": {
     "description": "List of AS paths.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "community": {
     "description": "List of BGP communities.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "routePrefix": {
     "description": "List of route prefixes.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ParameterResponse": {
   "description": "Parameters for an Action.",
   "properties": {
    "asPath": {
     "description": "List of AS paths.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "community": {
     "description": "List of BGP communities.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "routePrefix": {
     "description": "List of route prefixes.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:PartnerManagedResourcePropertiesResponse": {
   "description": "Properties of the partner managed resource.",
   "properties": {
    "id": {
     "description": "The partner managed resource id.",
     "type": "string"
    },
    "internalLoadBalancerId": {
     "description": "The partner managed ILB resource id",
     "type": "string"
    },
    "standardLoadBalancerId": {
     "description": "The partner managed SLB resource id",
     "type": "string"
    }
   },
   "required": [
    "id",
    "internalLoadBalancerId",
    "standardLoadBalancerId"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:PeerExpressRouteCircuitConnectionResponse": {
   "description": "Peer Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.",
   "properties": {
    "addressPrefix": {
     "description": "/29 IP address space to carve out Customer addresses for tunnels.",
     "type": "string"
    },
    "authResourceGuid": {
     "description": "The resource guid of the authorization used for the express route circuit connection.",
     "type": "string"
    },
    "circuitConnectionStatus": {
     "description": "Express Route Circuit connection state.",
     "type": "string"
    },
    "connectionName": {
     "description": "The name of the express route circuit connection resource.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "expressRouteCircuitPeering": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Reference to Express Route Circuit Private Peering Resource of the circuit.",
     "type": "object"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "peerExpressRouteCircuitPeering": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Reference to Express Route Circuit Private Peering Resource of the peered circuit.",
     "type": "object"
    },
    "provisioningState": {
     "description": "The provisioning state of the peer express route circuit connection resource.",
     "type": "string"
    },
    "type": {
     "description": "Type of the resource.",
     "type": "string"
    }
   },
   "required": [
    "circuitConnectionStatus",
    "etag",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:PolicySettings": {
   "description": "Defines contents of a web application firewall global configuration.",
   "properties": {
    "customBlockResponseBody": {
     "description": "If the action type is block, customer can override the response body. The body must be specified in base64 encoding.",
     "type": "string"
    },
    "customBlockResponseStatusCode": {
     "description": "If the action type is block, customer can override the response status code.",
     "type": "integer"
    },
    "fileUploadEnforcement": {
     "default": true,
     "description": "Whether allow WAF to enforce file upload limits.",
     "type": "boolean"
    },
    "fileUploadLimitInMb": {
     "description": "Maximum file upload size in Mb for WAF.",
     "type": "integer"
    },
    "logScrubbing": {
     "$ref": "#/types/azure-native_network_v20230201:network:PolicySettingsLogScrubbing",
     "description": "To scrub sensitive log fields",
     "type": "object"
    },
    "maxRequestBodySizeInKb": {
     "description": "Maximum request body size in Kb for WAF.",
     "type": "integer"
    },
    "mode": {
     "description": "The mode of the policy.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:WebApplicationFirewallMode"
      }
     ]
    },
    "requestBodyCheck": {
     "description": "Whether to allow WAF to check request Body.",
     "type": "boolean"
    },
    "requestBodyEnforcement": {
     "default": true,
     "description": "Whether allow WAF to enforce request body limits.",
     "type": "boolean"
    },
    "requestBodyInspectLimitInKB": {
     "description": "Max inspection limit in KB for request body inspection for WAF.",
     "type": "integer"
    },
    "state": {
     "description": "The state of the policy.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:WebApplicationFirewallEnabledState"
      }
     ]
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:PolicySettingsLogScrubbing": {
   "description": "To scrub sensitive log fields",
   "properties": {
    "scrubbingRules": {
     "description": "The rules that are applied to the logs for scrubbing.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:WebApplicationFirewallScrubbingRules",
      "type": "object"
     },
     "type": "array"
    },
    "state": {
     "description": "State of the log scrubbing config. Default value is Enabled.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:WebApplicationFirewallScrubbingState"
      }
     ]
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:PolicySettingsResponse": {
   "description": "Defines contents of a web application firewall global configuration.",
   "properties": {
    "customBlockResponseBody": {
     "description": "If the action type is block, customer can override the response body. The body must be specified in base64 encoding.",
     "type": "string"
    },
    "customBlockResponseStatusCode": {
     "description": "If the action type is block, customer can override the response status code.",
     "type": "integer"
    },
    "fileUploadEnforcement": {
     "default": true,
     "description": "Whether allow WAF to enforce file upload limits.",
     "type": "boolean"
    },
    "fileUploadLimitInMb": {
     "description": "Maximum file upload size in Mb for WAF.",
     "type": "integer"
    },
    "logScrubbing": {
     "$ref": "#/types/azure-native_network_v20230201:network:PolicySettingsResponseLogScrubbing",
     "description": "To scrub sensitive log fields",
     "type": "object"
    },
    "maxRequestBodySizeInKb": {
     "description": "Maximum request body size in Kb for WAF.",
     "type": "integer"
    },
    "mode": {
     "description": "The mode of the policy.",
     "type": "string"
    },
    "requestBodyCheck": {
     "description": "Whether to allow WAF to check request Body.",
     "type": "boolean"
    },
    "requestBodyEnforcement": {
     "default": true,
     "description": "Whether allow WAF to enforce request body limits.",
     "type": "boolean"
    },
    "requestBodyInspectLimitInKB": {
     "description": "Max inspection limit in KB for request body inspection for WAF.",
     "type": "integer"
    },
    "state": {
     "description": "The state of the policy.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:PolicySettingsResponseLogScrubbing": {
   "description": "To scrub sensitive log fields",
   "properties": {
    "scrubbingRules": {
     "description": "The rules that are applied to the logs for scrubbing.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:WebApplicationFirewallScrubbingRulesResponse",
      "type": "object"
     },
     "type": "array"
    },
    "state": {
     "description": "State of the log scrubbing config. Default value is Enabled.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:PrivateDnsZoneConfig": {
   "description": "PrivateDnsZoneConfig resource.",
   "properties": {
    "name": {
     "description": "Name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "privateDnsZoneId": {
     "description": "The resource id of the private dns zone.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:PrivateDnsZoneConfigResponse": {
   "description": "PrivateDnsZoneConfig resource.",
   "properties": {
    "name": {
     "description": "Name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "privateDnsZoneId": {
     "description": "The resource id of the private dns zone.",
     "type": "string"
    },
    "recordSets": {
     "description": "A collection of information regarding a recordSet, holding information to identify private resources.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:RecordSetResponse",
      "type": "object"
     },
     "type": "array"
    }
   },
   "required": [
    "recordSets"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:PrivateEndpointConnectionResponse": {
   "description": "PrivateEndpointConnection resource.",
   "properties": {
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "linkIdentifier": {
     "description": "The consumer link id.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "privateEndpoint": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateEndpointResponse",
     "description": "The resource of private end point.",
     "type": "object"
    },
    "privateEndpointLocation": {
     "description": "The location of the private endpoint.",
     "type": "string"
    },
    "privateLinkServiceConnectionState": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceConnectionStateResponse",
     "description": "A collection of information about the state of the connection between service consumer and provider.",
     "type": "object"
    },
    "provisioningState": {
     "description": "The provisioning state of the private endpoint connection resource.",
     "type": "string"
    },
    "type": {
     "description": "The resource type.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "linkIdentifier",
    "privateEndpoint",
    "privateEndpointLocation",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:PrivateEndpointIPConfiguration": {
   "description": "An IP Configuration of the private endpoint.",
   "properties": {
    "groupId": {
     "description": "The ID of a group obtained from the remote resource that this private endpoint should connect to.",
     "type": "string"
    },
    "memberName": {
     "description": "The member name of a group obtained from the remote resource that this private endpoint should connect to.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group.",
     "type": "string"
    },
    "privateIPAddress": {
     "description": "A private ip address obtained from the private endpoint's subnet.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:PrivateEndpointIPConfigurationResponse": {
   "description": "An IP Configuration of the private endpoint.",
   "properties": {
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "groupId": {
     "description": "The ID of a group obtained from the remote resource that this private endpoint should connect to.",
     "type": "string"
    },
    "memberName": {
     "description": "The member name of a group obtained from the remote resource that this private endpoint should connect to.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group.",
     "type": "string"
    },
    "privateIPAddress": {
     "description": "A private ip address obtained from the private endpoint's subnet.",
     "type": "string"
    },
    "type": {
     "description": "The resource type.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:PrivateEndpointResponse": {
   "description": "Private endpoint resource.",
   "properties": {
    "applicationSecurityGroups": {
     "description": "Application security groups in which the private endpoint IP configuration is included.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationSecurityGroupResponse",
      "type": "object"
     },
     "type": "array"
    },
    "customDnsConfigs": {
     "description": "An array of custom dns configurations.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:CustomDnsConfigPropertiesFormatResponse",
      "type": "object"
     },
     "type": "array"
    },
    "customNetworkInterfaceName": {
     "description": "The custom name of the network interface attached to the private endpoint.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse",
     "description": "The extended location of the load balancer.",
     "type": "object"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "ipConfigurations": {
     "description": "A list of IP configurations of the private endpoint. This will be used to map to the First Party Service's endpoints.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateEndpointIPConfigurationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "manualPrivateLinkServiceConnections": {
     "description": "A grouping of information about the connection to the remote resource. Used when the network admin does not have access to approve connections to the remote resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceConnectionResponse",
      "type": "object"
     },
     "type": "array"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "networkInterfaces": {
     "description": "An array of references to the network interfaces created for this private endpoint.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "privateLinkServiceConnections": {
     "description": "A grouping of information about the connection to the remote resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceConnectionResponse",
      "type": "object"
     },
     "type": "array"
    },
    "provisioningState": {
     "description": "The provisioning state of the private endpoint resource.",
     "type": "string"
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubnetResponse",
     "description": "The ID of the subnet from which the private IP will be allocated.",
     "type": "object"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "name",
    "networkInterfaces",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:PrivateLinkService": {
   "description": "Private link service resource.",
   "properties": {
    "autoApproval": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServicePropertiesAutoApproval",
     "description": "The auto-approval list of the private link service.",
     "type": "object"
    },
    "enableProxyProtocol": {
     "description": "Whether the private link service is enabled for proxy protocol or not.",
     "type": "boolean"
    },
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocation",
     "description": "The extended location of the load balancer.",
     "type": "object"
    },
    "fqdns": {
     "description": "The list of Fqdn.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "ipConfigurations": {
     "description": "An array of private link service IP configurations.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceIpConfiguration",
      "type": "object"
     },
     "type": "array"
    },
    "loadBalancerFrontendIpConfigurations": {
     "description": "An array of references to the load balancer IP configurations.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:FrontendIPConfiguration",
      "type": "object"
     },
     "type": "array"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "visibility": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServicePropertiesVisibility",
     "description": "The visibility list of the private link service.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:PrivateLinkServiceConnection": {
   "description": "PrivateLinkServiceConnection resource.",
   "properties": {
    "groupIds": {
     "description": "The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "privateLinkServiceConnectionState": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceConnectionState",
     "description": "A collection of read-only information about the state of the connection to the remote resource.",
     "type": "object"
    },
    "privateLinkServiceId": {
     "description": "The resource id of private link service.",
     "type": "string"
    },
    "requestMessage": {
     "description": "A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:PrivateLinkServiceConnectionResponse": {
   "description": "PrivateLinkServiceConnection resource.",
   "properties": {
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "groupIds": {
     "description": "The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "privateLinkServiceConnectionState": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceConnectionStateResponse",
     "description": "A collection of read-only information about the state of the connection to the remote resource.",
     "type": "object"
    },
    "privateLinkServiceId": {
     "description": "The resource id of private link service.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the private link service connection resource.",
     "type": "string"
    },
    "requestMessage": {
     "description": "A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars.",
     "type": "string"
    },
    "type": {
     "description": "The resource type.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:PrivateLinkServiceConnectionState": {
   "description": "A collection of information about the state of the connection between service consumer and provider.",
   "properties": {
    "actionsRequired": {
     "description": "A message indicating if changes on the service provider require any updates on the consumer.",
     "type": "string"
    },
    "description": {
     "description": "The reason for approval/rejection of the connection.",
     "type": "string"
    },
    "status": {
     "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:PrivateLinkServiceConnectionStateResponse": {
   "description": "A collection of information about the state of the connection between service consumer and provider.",
   "properties": {
    "actionsRequired": {
     "description": "A message indicating if changes on the service provider require any updates on the consumer.",
     "type": "string"
    },
    "description": {
     "description": "The reason for approval/rejection of the connection.",
     "type": "string"
    },
    "status": {
     "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:PrivateLinkServiceIpConfiguration": {
   "description": "The private link service ip configuration.",
   "properties": {
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of private link service ip configuration.",
     "type": "string"
    },
    "primary": {
     "description": "Whether the ip configuration is primary or not.",
     "type": "boolean"
    },
    "privateIPAddress": {
     "description": "The private IP address of the IP configuration.",
     "type": "string"
    },
    "privateIPAddressVersion": {
     "description": "Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:IPVersion"
      }
     ]
    },
    "privateIPAllocationMethod": {
     "description": "The private IP address allocation method.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:IPAllocationMethod"
      }
     ]
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:Subnet",
     "description": "The reference to the subnet resource.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:PrivateLinkServiceIpConfigurationResponse": {
   "description": "The private link service ip configuration.",
   "properties": {
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of private link service ip configuration.",
     "type": "string"
    },
    "primary": {
     "description": "Whether the ip configuration is primary or not.",
     "type": "boolean"
    },
    "privateIPAddress": {
     "description": "The private IP address of the IP configuration.",
     "type": "string"
    },
    "privateIPAddressVersion": {
     "description": "Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.",
     "type": "string"
    },
    "privateIPAllocationMethod": {
     "description": "The private IP address allocation method.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the private link service IP configuration resource.",
     "type": "string"
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubnetResponse",
     "description": "The reference to the subnet resource.",
     "type": "object"
    },
    "type": {
     "description": "The resource type.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:PrivateLinkServicePropertiesAutoApproval": {
   "description": "The auto-approval list of the private link service.",
   "properties": {
    "subscriptions": {
     "description": "The list of subscriptions.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:PrivateLinkServicePropertiesResponseAutoApproval": {
   "description": "The auto-approval list of the private link service.",
   "properties": {
    "subscriptions": {
     "description": "The list of subscriptions.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:PrivateLinkServicePropertiesResponseVisibility": {
   "description": "The visibility list of the private link service.",
   "properties": {
    "subscriptions": {
     "description": "The list of subscriptions.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:PrivateLinkServicePropertiesVisibility": {
   "description": "The visibility list of the private link service.",
   "properties": {
    "subscriptions": {
     "description": "The list of subscriptions.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:PrivateLinkServiceResponse": {
   "description": "Private link service resource.",
   "properties": {
    "alias": {
     "description": "The alias of the private link service.",
     "type": "string"
    },
    "autoApproval": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServicePropertiesResponseAutoApproval",
     "description": "The auto-approval list of the private link service.",
     "type": "object"
    },
    "enableProxyProtocol": {
     "description": "Whether the private link service is enabled for proxy protocol or not.",
     "type": "boolean"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse",
     "description": "The extended location of the load balancer.",
     "type": "object"
    },
    "fqdns": {
     "description": "The list of Fqdn.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "ipConfigurations": {
     "description": "An array of private link service IP configurations.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceIpConfigurationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "loadBalancerFrontendIpConfigurations": {
     "description": "An array of references to the load balancer IP configurations.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:FrontendIPConfigurationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "networkInterfaces": {
     "description": "An array of references to the network interfaces created for this private link service.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "privateEndpointConnections": {
     "description": "An array of list about connections to the private endpoint.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateEndpointConnectionResponse",
      "type": "object"
     },
     "type": "array"
    },
    "provisioningState": {
     "description": "The provisioning state of the private link service resource.",
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    },
    "visibility": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServicePropertiesResponseVisibility",
     "description": "The visibility list of the private link service.",
     "type": "object"
    }
   },
   "required": [
    "alias",
    "etag",
    "name",
    "networkInterfaces",
    "privateEndpointConnections",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:Probe": {
   "description": "A load balancer probe.",
   "properties": {
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "intervalInSeconds": {
     "description": "The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.",
     "type": "integer"
    },
    "name": {
     "description": "The name of the resource that is unique within the set of probes used by the load balancer. This name can be used to access the resource.",
     "type": "string"
    },
    "numberOfProbes": {
     "description": "The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.",
     "type": "integer"
    },
    "port": {
     "description": "The port for communicating the probe. Possible values range from 1 to 65535, inclusive.",
     "type": "integer"
    },
    "probeThreshold": {
     "description": "The number of consecutive successful or failed probes in order to allow or deny traffic from being delivered to this endpoint. After failing the number of consecutive probes equal to this value, the endpoint will be taken out of rotation and require the same number of successful consecutive probes to be placed back in rotation.",
     "type": "integer"
    },
    "protocol": {
     "description": "The protocol of the end point. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' or 'Https' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ProbeProtocol"
      }
     ]
    },
    "requestPath": {
     "description": "The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.",
     "type": "string"
    }
   },
   "required": [
    "port",
    "protocol"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ProbeResponse": {
   "description": "A load balancer probe.",
   "properties": {
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "intervalInSeconds": {
     "description": "The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.",
     "type": "integer"
    },
    "loadBalancingRules": {
     "description": "The load balancer rules that use this probe.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "name": {
     "description": "The name of the resource that is unique within the set of probes used by the load balancer. This name can be used to access the resource.",
     "type": "string"
    },
    "numberOfProbes": {
     "description": "The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.",
     "type": "integer"
    },
    "port": {
     "description": "The port for communicating the probe. Possible values range from 1 to 65535, inclusive.",
     "type": "integer"
    },
    "probeThreshold": {
     "description": "The number of consecutive successful or failed probes in order to allow or deny traffic from being delivered to this endpoint. After failing the number of consecutive probes equal to this value, the endpoint will be taken out of rotation and require the same number of successful consecutive probes to be placed back in rotation.",
     "type": "integer"
    },
    "protocol": {
     "description": "The protocol of the end point. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' or 'Https' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the probe resource.",
     "type": "string"
    },
    "requestPath": {
     "description": "The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.",
     "type": "string"
    },
    "type": {
     "description": "Type of the resource.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "loadBalancingRules",
    "port",
    "protocol",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:PropagatedRouteTable": {
   "description": "The list of RouteTables to advertise the routes to.",
   "properties": {
    "ids": {
     "description": "The list of resource ids of all the RouteTables.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
      "type": "object"
     },
     "type": "array"
    },
    "labels": {
     "description": "The list of labels.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:PropagatedRouteTableNfv": {
   "description": "Nfv version of the list of RouteTables to advertise the routes to.",
   "properties": {
    "ids": {
     "description": "The list of resource ids of all the RouteTables.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfigurationNfvSubResource",
      "type": "object"
     },
     "type": "array"
    },
    "labels": {
     "description": "The list of labels.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:PropagatedRouteTableNfvResponse": {
   "description": "Nfv version of the list of RouteTables to advertise the routes to.",
   "properties": {
    "ids": {
     "description": "The list of resource ids of all the RouteTables.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfigurationNfvSubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "labels": {
     "description": "The list of labels.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:PropagatedRouteTableResponse": {
   "description": "The list of RouteTables to advertise the routes to.",
   "properties": {
    "ids": {
     "description": "The list of resource ids of all the RouteTables.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "labels": {
     "description": "The list of labels.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:PublicIPAddress": {
   "description": "Public IP address resource.",
   "properties": {
    "ddosSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:DdosSettings",
     "description": "The DDoS protection custom policy associated with the public IP address.",
     "type": "object"
    },
    "deleteOption": {
     "description": "Specify what happens to the public IP address when the VM using it is deleted",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:DeleteOptions"
      }
     ]
    },
    "dnsSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddressDnsSettings",
     "description": "The FQDN of the DNS record associated with the public IP address.",
     "type": "object"
    },
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocation",
     "description": "The extended location of the public ip address.",
     "type": "object"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "idleTimeoutInMinutes": {
     "description": "The idle timeout of the public IP address.",
     "type": "integer"
    },
    "ipAddress": {
     "description": "The IP address associated with the public IP address resource.",
     "type": "string"
    },
    "ipTags": {
     "description": "The list of tags associated with the public IP address.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IpTag",
      "type": "object"
     },
     "type": "array"
    },
    "linkedPublicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddress",
     "description": "The linked public IP address of the public IP address resource.",
     "type": "object"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "migrationPhase": {
     "description": "Migration phase of Public IP Address.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:PublicIPAddressMigrationPhase"
      }
     ]
    },
    "natGateway": {
     "$ref": "#/types/azure-native_network_v20230201:network:NatGateway",
     "description": "The NatGateway for the Public IP address.",
     "type": "object"
    },
    "publicIPAddressVersion": {
     "description": "The public IP address version.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:IPVersion"
      }
     ]
    },
    "publicIPAllocationMethod": {
     "description": "The public IP address allocation method.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:IPAllocationMethod"
      }
     ]
    },
    "publicIPPrefix": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "The Public IP Prefix this Public IP Address should be allocated from.",
     "type": "object"
    },
    "servicePublicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddress",
     "description": "The service public IP address of the public IP address resource.",
     "type": "object"
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddressSku",
     "description": "The public IP address SKU.",
     "type": "object"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "zones": {
     "description": "A list of availability zones denoting the IP allocated for the resource needs to come from.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:PublicIPAddressDnsSettings": {
   "description": "Contains FQDN of the DNS record associated with the public IP address.",
   "properties": {
    "domainNameLabel": {
     "description": "The domain name label. The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.",
     "type": "string"
    },
    "domainNameLabelScope": {
     "$ref": "#/types/azure-native:network:PublicIpAddressDnsSettingsDomainNameLabelScope",
     "description": "The domain name label scope. If a domain name label and a domain name label scope are specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system with a hashed value includes in FQDN."
    },
    "fqdn": {
     "description": "The Fully Qualified Domain Name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.",
     "type": "string"
    },
    "reverseFqdn": {
     "description": "The reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:PublicIPAddressDnsSettingsResponse": {
   "description": "Contains FQDN of the DNS record associated with the public IP address.",
   "properties": {
    "domainNameLabel": {
     "description": "The domain name label. The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.",
     "type": "string"
    },
    "domainNameLabelScope": {
     "description": "The domain name label scope. If a domain name label and a domain name label scope are specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system with a hashed value includes in FQDN.",
     "type": "string"
    },
    "fqdn": {
     "description": "The Fully Qualified Domain Name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.",
     "type": "string"
    },
    "reverseFqdn": {
     "description": "The reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:PublicIPAddressResponse": {
   "description": "Public IP address resource.",
   "properties": {
    "ddosSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:DdosSettingsResponse",
     "description": "The DDoS protection custom policy associated with the public IP address.",
     "type": "object"
    },
    "deleteOption": {
     "description": "Specify what happens to the public IP address when the VM using it is deleted",
     "type": "string"
    },
    "dnsSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddressDnsSettingsResponse",
     "description": "The FQDN of the DNS record associated with the public IP address.",
     "type": "object"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse",
     "description": "The extended location of the public ip address.",
     "type": "object"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "idleTimeoutInMinutes": {
     "description": "The idle timeout of the public IP address.",
     "type": "integer"
    },
    "ipAddress": {
     "description": "The IP address associated with the public IP address resource.",
     "type": "string"
    },
    "ipConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:IPConfigurationResponse",
     "description": "The IP configuration associated with the public IP address.",
     "type": "object"
    },
    "ipTags": {
     "description": "The list of tags associated with the public IP address.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IpTagResponse",
      "type": "object"
     },
     "type": "array"
    },
    "linkedPublicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddressResponse",
     "description": "The linked public IP address of the public IP address resource.",
     "type": "object"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "migrationPhase": {
     "description": "Migration phase of Public IP Address.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "natGateway": {
     "$ref": "#/types/azure-native_network_v20230201:network:NatGatewayResponse",
     "description": "The NatGateway for the Public IP address.",
     "type": "object"
    },
    "provisioningState": {
     "description": "The provisioning state of the public IP address resource.",
     "type": "string"
    },
    "publicIPAddressVersion": {
     "description": "The public IP address version.",
     "type": "string"
    },
    "publicIPAllocationMethod": {
     "description": "The public IP address allocation method.",
     "type": "string"
    },
    "publicIPPrefix": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The Public IP Prefix this Public IP Address should be allocated from.",
     "type": "object"
    },
    "resourceGuid": {
     "description": "The resource GUID property of the public IP address resource.",
     "type": "string"
    },
    "servicePublicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddressResponse",
     "description": "The service public IP address of the public IP address resource.",
     "type": "object"
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddressSkuResponse",
     "description": "The public IP address SKU.",
     "type": "object"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    },
    "zones": {
     "description": "A list of availability zones denoting the IP allocated for the resource needs to come from.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "required": [
    "etag",
    "ipConfiguration",
    "name",
    "provisioningState",
    "resourceGuid",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:PublicIPAddressSku": {
   "description": "SKU of a public IP address.",
   "properties": {
    "name": {
     "description": "Name of a public IP address SKU.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:PublicIPAddressSkuName"
      }
     ]
    },
    "tier": {
     "description": "Tier of a public IP address SKU.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:PublicIPAddressSkuTier"
      }
     ]
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:PublicIPAddressSkuResponse": {
   "description": "SKU of a public IP address.",
   "properties": {
    "name": {
     "description": "Name of a public IP address SKU.",
     "type": "string"
    },
    "tier": {
     "description": "Tier of a public IP address SKU.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:PublicIPPrefixSku": {
   "description": "SKU of a public IP prefix.",
   "properties": {
    "name": {
     "description": "Name of a public IP prefix SKU.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:PublicIPPrefixSkuName"
      }
     ]
    },
    "tier": {
     "description": "Tier of a public IP prefix SKU.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:PublicIPPrefixSkuTier"
      }
     ]
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:PublicIPPrefixSkuResponse": {
   "description": "SKU of a public IP prefix.",
   "properties": {
    "name": {
     "description": "Name of a public IP prefix SKU.",
     "type": "string"
    },
    "tier": {
     "description": "Tier of a public IP prefix SKU.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:QosDefinition": {
   "description": "Quality of Service defines the traffic configuration between endpoints. Mandatory to have one marking.",
   "properties": {
    "destinationIpRanges": {
     "description": "Destination IP ranges.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:QosIpRange",
      "type": "object"
     },
     "type": "array"
    },
    "destinationPortRanges": {
     "description": "Destination port ranges.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:QosPortRange",
      "type": "object"
     },
     "type": "array"
    },
    "markings": {
     "description": "List of markings to be used in the configuration.",
     "items": {
      "type": "integer"
     },
     "type": "array"
    },
    "protocol": {
     "description": "RNM supported protocol types.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ProtocolType"
      }
     ]
    },
    "sourceIpRanges": {
     "description": "Source IP ranges.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:QosIpRange",
      "type": "object"
     },
     "type": "array"
    },
    "sourcePortRanges": {
     "description": "Sources port ranges.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:QosPortRange",
      "type": "object"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:QosDefinitionResponse": {
   "description": "Quality of Service defines the traffic configuration between endpoints. Mandatory to have one marking.",
   "properties": {
    "destinationIpRanges": {
     "description": "Destination IP ranges.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:QosIpRangeResponse",
      "type": "object"
     },
     "type": "array"
    },
    "destinationPortRanges": {
     "description": "Destination port ranges.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:QosPortRangeResponse",
      "type": "object"
     },
     "type": "array"
    },
    "markings": {
     "description": "List of markings to be used in the configuration.",
     "items": {
      "type": "integer"
     },
     "type": "array"
    },
    "protocol": {
     "description": "RNM supported protocol types.",
     "type": "string"
    },
    "sourceIpRanges": {
     "description": "Source IP ranges.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:QosIpRangeResponse",
      "type": "object"
     },
     "type": "array"
    },
    "sourcePortRanges": {
     "description": "Sources port ranges.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:QosPortRangeResponse",
      "type": "object"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:QosIpRange": {
   "description": "Qos Traffic Profiler IP Range properties.",
   "properties": {
    "endIP": {
     "description": "End IP Address.",
     "type": "string"
    },
    "startIP": {
     "description": "Start IP Address.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:QosIpRangeResponse": {
   "description": "Qos Traffic Profiler IP Range properties.",
   "properties": {
    "endIP": {
     "description": "End IP Address.",
     "type": "string"
    },
    "startIP": {
     "description": "Start IP Address.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:QosPortRange": {
   "description": "Qos Traffic Profiler Port range properties.",
   "properties": {
    "end": {
     "description": "Qos Port Range end.",
     "type": "integer"
    },
    "start": {
     "description": "Qos Port Range start.",
     "type": "integer"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:QosPortRangeResponse": {
   "description": "Qos Traffic Profiler Port range properties.",
   "properties": {
    "end": {
     "description": "Qos Port Range end.",
     "type": "integer"
    },
    "start": {
     "description": "Qos Port Range start.",
     "type": "integer"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:RadiusServer": {
   "description": "Radius Server Settings.",
   "properties": {
    "radiusServerAddress": {
     "description": "The address of this radius server.",
     "type": "string"
    },
    "radiusServerScore": {
     "description": "The initial score assigned to this radius server.",
     "type": "number"
    },
    "radiusServerSecret": {
     "description": "The secret used for this radius server.",
     "type": "string"
    }
   },
   "required": [
    "radiusServerAddress"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:RadiusServerResponse": {
   "description": "Radius Server Settings.",
   "properties": {
    "radiusServerAddress": {
     "description": "The address of this radius server.",
     "type": "string"
    },
    "radiusServerScore": {
     "description": "The initial score assigned to this radius server.",
     "type": "number"
    },
    "radiusServerSecret": {
     "description": "The secret used for this radius server.",
     "type": "string"
    }
   },
   "required": [
    "radiusServerAddress"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:RecordSetResponse": {
   "description": "A collective group of information about the record set information.",
   "properties": {
    "fqdn": {
     "description": "Fqdn that resolves to private endpoint ip address.",
     "type": "string"
    },
    "ipAddresses": {
     "description": "The private ip address of the private endpoint.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "provisioningState": {
     "description": "The provisioning state of the recordset.",
     "type": "string"
    },
    "recordSetName": {
     "description": "Recordset name.",
     "type": "string"
    },
    "recordType": {
     "description": "Resource record type.",
     "type": "string"
    },
    "ttl": {
     "description": "Recordset time to live.",
     "type": "integer"
    }
   },
   "required": [
    "provisioningState"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ReferencedPublicIpAddressResponse": {
   "description": "Reference to a public IP address.",
   "properties": {
    "id": {
     "description": "The PublicIPAddress Reference.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ResourceNavigationLinkResponse": {
   "description": "ResourceNavigationLink resource.",
   "properties": {
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "link": {
     "description": "Link to the external resource.",
     "type": "string"
    },
    "linkedResourceType": {
     "description": "Resource type of the linked resource.",
     "type": "string"
    },
    "name": {
     "description": "Name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the resource navigation link resource.",
     "type": "string"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "id",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:RetentionPolicyParameters": {
   "description": "Parameters that define the retention policy for flow log.",
   "properties": {
    "days": {
     "default": 0,
     "description": "Number of days to retain flow log records.",
     "type": "integer"
    },
    "enabled": {
     "default": false,
     "description": "Flag to enable/disable retention.",
     "type": "boolean"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:RetentionPolicyParametersResponse": {
   "description": "Parameters that define the retention policy for flow log.",
   "properties": {
    "days": {
     "default": 0,
     "description": "Number of days to retain flow log records.",
     "type": "integer"
    },
    "enabled": {
     "default": false,
     "description": "Flag to enable/disable retention.",
     "type": "boolean"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:Route": {
   "description": "Route resource.",
   "properties": {
    "addressPrefix": {
     "description": "The destination CIDR to which the route applies.",
     "type": "string"
    },
    "hasBgpOverride": {
     "description": "A value indicating whether this route overrides overlapping BGP routes regardless of LPM.",
     "type": "boolean"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "nextHopIpAddress": {
     "description": "The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.",
     "type": "string"
    },
    "nextHopType": {
     "description": "The type of Azure hop the packet should be sent to.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:RouteNextHopType"
      }
     ]
    },
    "type": {
     "description": "The type of the resource.",
     "type": "string"
    }
   },
   "required": [
    "nextHopType"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:RouteFilterRule": {
   "description": "Route Filter Rule Resource.",
   "properties": {
    "access": {
     "description": "The access type of the rule.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:Access"
      }
     ]
    },
    "communities": {
     "description": "The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020'].",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "routeFilterRuleType": {
     "description": "The rule type of the rule.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:RouteFilterRuleType"
      }
     ]
    }
   },
   "required": [
    "access",
    "communities",
    "routeFilterRuleType"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:RouteFilterRuleResponse": {
   "description": "Route Filter Rule Resource.",
   "properties": {
    "access": {
     "description": "The access type of the rule.",
     "type": "string"
    },
    "communities": {
     "description": "The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020'].",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the route filter rule resource.",
     "type": "string"
    },
    "routeFilterRuleType": {
     "description": "The rule type of the rule.",
     "type": "string"
    }
   },
   "required": [
    "access",
    "communities",
    "etag",
    "provisioningState",
    "routeFilterRuleType"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:RouteMapRule": {
   "description": "A RouteMap Rule.",
   "properties": {
    "actions": {
     "description": "List of actions which will be applied on a match.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:Action",
      "type": "object"
     },
     "type": "array"
    },
    "matchCriteria": {
     "description": "List of matching criterion which will be applied to traffic.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:Criterion",
      "type": "object"
     },
     "type": "array"
    },
    "name": {
     "description": "The unique name for the rule.",
     "type": "string"
    },
    "nextStepIfMatched": {
     "description": "Next step after rule is evaluated. Current supported behaviors are 'Continue'(to next rule) and 'Terminate'.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:NextStep"
      }
     ]
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:RouteMapRuleResponse": {
   "description": "A RouteMap Rule.",
   "properties": {
    "actions": {
     "description": "List of actions which will be applied on a match.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ActionResponse",
      "type": "object"
     },
     "type": "array"
    },
    "matchCriteria": {
     "description": "List of matching criterion which will be applied to traffic.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:CriterionResponse",
      "type": "object"
     },
     "type": "array"
    },
    "name": {
     "description": "The unique name for the rule.",
     "type": "string"
    },
    "nextStepIfMatched": {
     "description": "Next step after rule is evaluated. Current supported behaviors are 'Continue'(to next rule) and 'Terminate'.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:RouteResponse": {
   "description": "Route resource.",
   "properties": {
    "addressPrefix": {
     "description": "The destination CIDR to which the route applies.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "hasBgpOverride": {
     "description": "A value indicating whether this route overrides overlapping BGP routes regardless of LPM.",
     "type": "boolean"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "nextHopIpAddress": {
     "description": "The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.",
     "type": "string"
    },
    "nextHopType": {
     "description": "The type of Azure hop the packet should be sent to.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the route resource.",
     "type": "string"
    },
    "type": {
     "description": "The type of the resource.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "nextHopType",
    "provisioningState"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:RouteTable": {
   "description": "Route table resource.",
   "properties": {
    "disableBgpRoutePropagation": {
     "description": "Whether to disable the routes learned by BGP on that route table. True means disable.",
     "type": "boolean"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "routes": {
     "description": "Collection of routes contained within a route table.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:Route",
      "type": "object"
     },
     "type": "array"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:RouteTableResponse": {
   "description": "Route table resource.",
   "properties": {
    "disableBgpRoutePropagation": {
     "description": "Whether to disable the routes learned by BGP on that route table. True means disable.",
     "type": "boolean"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the route table resource.",
     "type": "string"
    },
    "resourceGuid": {
     "description": "The resource GUID property of the route table.",
     "type": "string"
    },
    "routes": {
     "description": "Collection of routes contained within a route table.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:RouteResponse",
      "type": "object"
     },
     "type": "array"
    },
    "subnets": {
     "description": "A collection of references to subnets.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubnetResponse",
      "type": "object"
     },
     "type": "array"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "name",
    "provisioningState",
    "resourceGuid",
    "subnets",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:RoutingConfiguration": {
   "description": "Routing Configuration indicating the associated and propagated route tables for this connection.",
   "properties": {
    "associatedRouteTable": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "The resource id RouteTable associated with this RoutingConfiguration.",
     "type": "object"
    },
    "inboundRouteMap": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "The resource id of the RouteMap associated with this RoutingConfiguration for inbound learned routes.",
     "type": "object"
    },
    "outboundRouteMap": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "The resource id of theRouteMap associated with this RoutingConfiguration for outbound advertised routes.",
     "type": "object"
    },
    "propagatedRouteTables": {
     "$ref": "#/types/azure-native_network_v20230201:network:PropagatedRouteTable",
     "description": "The list of RouteTables to advertise the routes to.",
     "type": "object"
    },
    "vnetRoutes": {
     "$ref": "#/types/azure-native_network_v20230201:network:VnetRoute",
     "description": "List of routes that control routing from VirtualHub into a virtual network connection.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:RoutingConfigurationNfv": {
   "description": "NFV version of Routing Configuration indicating the associated and propagated route tables for this connection.",
   "properties": {
    "associatedRouteTable": {
     "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfigurationNfvSubResource",
     "description": "The resource id RouteTable associated with this RoutingConfiguration.",
     "type": "object"
    },
    "inboundRouteMap": {
     "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfigurationNfvSubResource",
     "description": "The resource id of the RouteMap associated with this RoutingConfiguration for inbound learned routes.",
     "type": "object"
    },
    "outboundRouteMap": {
     "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfigurationNfvSubResource",
     "description": "The resource id of the RouteMap associated with this RoutingConfiguration for outbound advertised routes.",
     "type": "object"
    },
    "propagatedRouteTables": {
     "$ref": "#/types/azure-native_network_v20230201:network:PropagatedRouteTableNfv",
     "description": "The list of RouteTables to advertise the routes to.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:RoutingConfigurationNfvResponse": {
   "description": "NFV version of Routing Configuration indicating the associated and propagated route tables for this connection.",
   "properties": {
    "associatedRouteTable": {
     "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfigurationNfvSubResourceResponse",
     "description": "The resource id RouteTable associated with this RoutingConfiguration.",
     "type": "object"
    },
    "inboundRouteMap": {
     "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfigurationNfvSubResourceResponse",
     "description": "The resource id of the RouteMap associated with this RoutingConfiguration for inbound learned routes.",
     "type": "object"
    },
    "outboundRouteMap": {
     "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfigurationNfvSubResourceResponse",
     "description": "The resource id of the RouteMap associated with this RoutingConfiguration for outbound advertised routes.",
     "type": "object"
    },
    "propagatedRouteTables": {
     "$ref": "#/types/azure-native_network_v20230201:network:PropagatedRouteTableNfvResponse",
     "description": "The list of RouteTables to advertise the routes to.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:RoutingConfigurationNfvSubResource": {
   "description": "Reference to RouteTableV3 associated with the connection.",
   "properties": {
    "resourceUri": {
     "description": "Resource ID.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:RoutingConfigurationNfvSubResourceResponse": {
   "description": "Reference to RouteTableV3 associated with the connection.",
   "properties": {
    "resourceUri": {
     "description": "Resource ID.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:RoutingConfigurationResponse": {
   "description": "Routing Configuration indicating the associated and propagated route tables for this connection.",
   "properties": {
    "associatedRouteTable": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The resource id RouteTable associated with this RoutingConfiguration.",
     "type": "object"
    },
    "inboundRouteMap": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The resource id of the RouteMap associated with this RoutingConfiguration for inbound learned routes.",
     "type": "object"
    },
    "outboundRouteMap": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The resource id of theRouteMap associated with this RoutingConfiguration for outbound advertised routes.",
     "type": "object"
    },
    "propagatedRouteTables": {
     "$ref": "#/types/azure-native_network_v20230201:network:PropagatedRouteTableResponse",
     "description": "The list of RouteTables to advertise the routes to.",
     "type": "object"
    },
    "vnetRoutes": {
     "$ref": "#/types/azure-native_network_v20230201:network:VnetRouteResponse",
     "description": "List of routes that control routing from VirtualHub into a virtual network connection.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:RoutingPolicy": {
   "description": "The routing policy object used in a RoutingIntent resource.",
   "properties": {
    "destinations": {
     "description": "List of all destinations which this routing policy is applicable to (for example: Internet, PrivateTraffic).",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "name": {
     "description": "The unique name for the routing policy.",
     "type": "string"
    },
    "nextHop": {
     "description": "The next hop resource id on which this routing policy is applicable to.",
     "type": "string"
    }
   },
   "required": [
    "destinations",
    "name",
    "nextHop"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:RoutingPolicyResponse": {
   "description": "The routing policy object used in a RoutingIntent resource.",
   "properties": {
    "destinations": {
     "description": "List of all destinations which this routing policy is applicable to (for example: Internet, PrivateTraffic).",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "name": {
     "description": "The unique name for the routing policy.",
     "type": "string"
    },
    "nextHop": {
     "description": "The next hop resource id on which this routing policy is applicable to.",
     "type": "string"
    }
   },
   "required": [
    "destinations",
    "name",
    "nextHop"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:SecurityRule": {
   "description": "Network security rule.",
   "properties": {
    "access": {
     "description": "The network traffic is allowed or denied.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:SecurityRuleAccess"
      }
     ]
    },
    "description": {
     "description": "A description for this rule. Restricted to 140 chars.",
     "type": "string"
    },
    "destinationAddressPrefix": {
     "description": "The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.",
     "type": "string"
    },
    "destinationAddressPrefixes": {
     "description": "The destination address prefixes. CIDR or destination IP ranges.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "destinationApplicationSecurityGroups": {
     "description": "The application security group specified as destination.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationSecurityGroup",
      "type": "object"
     },
     "type": "array"
    },
    "destinationPortRange": {
     "description": "The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.",
     "type": "string"
    },
    "destinationPortRanges": {
     "description": "The destination port ranges.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "direction": {
     "description": "The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:SecurityRuleDirection"
      }
     ]
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "priority": {
     "description": "The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
     "type": "integer"
    },
    "protocol": {
     "description": "Network protocol this rule applies to.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:SecurityRuleProtocol"
      }
     ]
    },
    "sourceAddressPrefix": {
     "description": "The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.",
     "type": "string"
    },
    "sourceAddressPrefixes": {
     "description": "The CIDR or source IP ranges.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "sourceApplicationSecurityGroups": {
     "description": "The application security group specified as source.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationSecurityGroup",
      "type": "object"
     },
     "type": "array"
    },
    "sourcePortRange": {
     "description": "The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.",
     "type": "string"
    },
    "sourcePortRanges": {
     "description": "The source port ranges.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "type": {
     "description": "The type of the resource.",
     "type": "string"
    }
   },
   "required": [
    "access",
    "direction",
    "priority",
    "protocol"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:SecurityRuleResponse": {
   "description": "Network security rule.",
   "properties": {
    "access": {
     "description": "The network traffic is allowed or denied.",
     "type": "string"
    },
    "description": {
     "description": "A description for this rule. Restricted to 140 chars.",
     "type": "string"
    },
    "destinationAddressPrefix": {
     "description": "The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.",
     "type": "string"
    },
    "destinationAddressPrefixes": {
     "description": "The destination address prefixes. CIDR or destination IP ranges.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "destinationApplicationSecurityGroups": {
     "description": "The application security group specified as destination.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationSecurityGroupResponse",
      "type": "object"
     },
     "type": "array"
    },
    "destinationPortRange": {
     "description": "The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.",
     "type": "string"
    },
    "destinationPortRanges": {
     "description": "The destination port ranges.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "direction": {
     "description": "The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "priority": {
     "description": "The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
     "type": "integer"
    },
    "protocol": {
     "description": "Network protocol this rule applies to.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the security rule resource.",
     "type": "string"
    },
    "sourceAddressPrefix": {
     "description": "The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.",
     "type": "string"
    },
    "sourceAddressPrefixes": {
     "description": "The CIDR or source IP ranges.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "sourceApplicationSecurityGroups": {
     "description": "The application security group specified as source.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationSecurityGroupResponse",
      "type": "object"
     },
     "type": "array"
    },
    "sourcePortRange": {
     "description": "The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.",
     "type": "string"
    },
    "sourcePortRanges": {
     "description": "The source port ranges.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "type": {
     "description": "The type of the resource.",
     "type": "string"
    }
   },
   "required": [
    "access",
    "direction",
    "etag",
    "priority",
    "protocol",
    "provisioningState"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ServiceAssociationLinkResponse": {
   "description": "ServiceAssociationLink resource.",
   "properties": {
    "allowDelete": {
     "description": "If true, the resource can be deleted.",
     "type": "boolean"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "link": {
     "description": "Link to the external resource.",
     "type": "string"
    },
    "linkedResourceType": {
     "description": "Resource type of the linked resource.",
     "type": "string"
    },
    "locations": {
     "description": "A list of locations.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "name": {
     "description": "Name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the service association link resource.",
     "type": "string"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ServiceEndpointPolicy": {
   "description": "Service End point policy resource.",
   "properties": {
    "contextualServiceEndpointPolicies": {
     "description": "A collection of contextual service endpoint policy.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "serviceAlias": {
     "description": "The alias indicating if the policy belongs to a service",
     "type": "string"
    },
    "serviceEndpointPolicyDefinitions": {
     "description": "A collection of service endpoint policy definitions of the service endpoint policy.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ServiceEndpointPolicyDefinition",
      "type": "object"
     },
     "type": "array"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ServiceEndpointPolicyDefinition": {
   "description": "Service Endpoint policy definitions.",
   "properties": {
    "description": {
     "description": "A description for this rule. Restricted to 140 chars.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "service": {
     "description": "Service endpoint name.",
     "type": "string"
    },
    "serviceResources": {
     "description": "A list of service resources.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "type": {
     "description": "The type of the resource.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ServiceEndpointPolicyDefinitionResponse": {
   "description": "Service Endpoint policy definitions.",
   "properties": {
    "description": {
     "description": "A description for this rule. Restricted to 140 chars.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the service endpoint policy definition resource.",
     "type": "string"
    },
    "service": {
     "description": "Service endpoint name.",
     "type": "string"
    },
    "serviceResources": {
     "description": "A list of service resources.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "type": {
     "description": "The type of the resource.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "provisioningState"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ServiceEndpointPolicyResponse": {
   "description": "Service End point policy resource.",
   "properties": {
    "contextualServiceEndpointPolicies": {
     "description": "A collection of contextual service endpoint policy.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "kind": {
     "description": "Kind of service endpoint policy. This is metadata used for the Azure portal experience.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the service endpoint policy resource.",
     "type": "string"
    },
    "resourceGuid": {
     "description": "The resource GUID property of the service endpoint policy resource.",
     "type": "string"
    },
    "serviceAlias": {
     "description": "The alias indicating if the policy belongs to a service",
     "type": "string"
    },
    "serviceEndpointPolicyDefinitions": {
     "description": "A collection of service endpoint policy definitions of the service endpoint policy.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ServiceEndpointPolicyDefinitionResponse",
      "type": "object"
     },
     "type": "array"
    },
    "subnets": {
     "description": "A collection of references to subnets.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubnetResponse",
      "type": "object"
     },
     "type": "array"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "kind",
    "name",
    "provisioningState",
    "resourceGuid",
    "subnets",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:ServiceEndpointPropertiesFormat": {
   "description": "The service endpoint properties.",
   "properties": {
    "locations": {
     "description": "A list of locations.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "service": {
     "description": "The type of the endpoint service.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:ServiceEndpointPropertiesFormatResponse": {
   "description": "The service endpoint properties.",
   "properties": {
    "locations": {
     "description": "A list of locations.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "provisioningState": {
     "description": "The provisioning state of the service endpoint resource.",
     "type": "string"
    },
    "service": {
     "description": "The type of the endpoint service.",
     "type": "string"
    }
   },
   "required": [
    "provisioningState"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:SingleQueryResultResponse": {
   "properties": {
    "description": {
     "description": "Describes what is the signature enforces",
     "type": "string"
    },
    "destinationPorts": {
     "description": "Describes the list of destination ports related to this signature",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "direction": {
     "description": "Describes in which direction signature is being enforced: 0 - Inbound, 1 - OutBound, 2 - Bidirectional",
     "type": "integer"
    },
    "group": {
     "description": "Describes the groups the signature belongs to",
     "type": "string"
    },
    "inheritedFromParentPolicy": {
     "description": "Describes if this override is inherited from base policy or not",
     "type": "boolean"
    },
    "lastUpdated": {
     "description": "Describes the last updated time of the signature (provided from 3rd party vendor)",
     "type": "string"
    },
    "mode": {
     "description": "The current mode enforced, 0 - Disabled, 1 - Alert, 2 -Deny",
     "type": "integer"
    },
    "protocol": {
     "description": "Describes the protocol the signatures is being enforced in",
     "type": "string"
    },
    "severity": {
     "description": "Describes the severity of signature: 1 - Low, 2 - Medium, 3 - High",
     "type": "integer"
    },
    "signatureId": {
     "description": "The ID of the signature",
     "type": "integer"
    },
    "sourcePorts": {
     "description": "Describes the list of source ports related to this signature",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:Sku": {
   "description": "The sku of this Bastion Host.",
   "properties": {
    "name": {
     "default": "Standard",
     "description": "The name of this Bastion Host.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:BastionHostSkuName"
      }
     ]
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:SkuResponse": {
   "description": "The sku of this Bastion Host.",
   "properties": {
    "name": {
     "default": "Standard",
     "description": "The name of this Bastion Host.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:StaticRoute": {
   "description": "List of all Static Routes.",
   "properties": {
    "addressPrefixes": {
     "description": "List of all address prefixes.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "name": {
     "description": "The name of the StaticRoute that is unique within a VnetRoute.",
     "type": "string"
    },
    "nextHopIpAddress": {
     "description": "The ip address of the next hop.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:StaticRouteResponse": {
   "description": "List of all Static Routes.",
   "properties": {
    "addressPrefixes": {
     "description": "List of all address prefixes.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "name": {
     "description": "The name of the StaticRoute that is unique within a VnetRoute.",
     "type": "string"
    },
    "nextHopIpAddress": {
     "description": "The ip address of the next hop.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:StaticRoutesConfig": {
   "description": "Configuration for static routes on this HubVnetConnectionConfiguration for static routes on this HubVnetConnection.",
   "properties": {
    "vnetLocalRouteOverrideCriteria": {
     "description": "Parameter determining whether NVA in spoke vnet is bypassed for traffic with destination in spoke.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:VnetLocalRouteOverrideCriteria"
      }
     ]
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:StaticRoutesConfigResponse": {
   "description": "Configuration for static routes on this HubVnetConnectionConfiguration for static routes on this HubVnetConnection.",
   "properties": {
    "propagateStaticRoutes": {
     "description": "Boolean indicating whether static routes on this connection are automatically propagate to route tables which this connection propagates to.",
     "type": "boolean"
    },
    "vnetLocalRouteOverrideCriteria": {
     "description": "Parameter determining whether NVA in spoke vnet is bypassed for traffic with destination in spoke.",
     "type": "string"
    }
   },
   "required": [
    "propagateStaticRoutes"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:SubResource": {
   "description": "Reference to another subresource.",
   "properties": {
    "id": {
     "description": "Sub-resource ID. Both absolute resource ID and a relative resource ID are accepted.\nAn absolute ID starts with /subscriptions/ and contains the entire ID of the parent resource and the ID of the sub-resource in the end.\nA relative ID replaces the ID of the parent resource with a token '$self', followed by the sub-resource ID itself.\nExample of a relative ID: $self/frontEndConfigurations/my-frontend.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:SubResourceResponse": {
   "description": "Reference to another subresource.",
   "properties": {
    "id": {
     "description": "Resource ID.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:Subnet": {
   "description": "Subnet in a virtual network resource.",
   "properties": {
    "addressPrefix": {
     "description": "The address prefix for the subnet.",
     "type": "string"
    },
    "addressPrefixes": {
     "description": "List of address prefixes for the subnet.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "applicationGatewayIPConfigurations": {
     "description": "Application gateway IP configurations of virtual network resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayIPConfiguration",
      "type": "object"
     },
     "type": "array"
    },
    "delegations": {
     "description": "An array of references to the delegations on the subnet.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:Delegation",
      "type": "object"
     },
     "type": "array"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "ipAllocations": {
     "description": "Array of IpAllocation which reference this subnet.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
      "type": "object"
     },
     "type": "array"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "natGateway": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Nat gateway associated with this subnet.",
     "type": "object"
    },
    "networkSecurityGroup": {
     "$ref": "#/types/azure-native_network_v20230201:network:NetworkSecurityGroup",
     "description": "The reference to the NetworkSecurityGroup resource.",
     "type": "object"
    },
    "privateEndpointNetworkPolicies": {
     "default": "Disabled",
     "description": "Enable or Disable apply network policies on private end point in the subnet.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:VirtualNetworkPrivateEndpointNetworkPolicies"
      }
     ]
    },
    "privateLinkServiceNetworkPolicies": {
     "default": "Enabled",
     "description": "Enable or Disable apply network policies on private link service in the subnet.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:VirtualNetworkPrivateLinkServiceNetworkPolicies"
      }
     ]
    },
    "routeTable": {
     "$ref": "#/types/azure-native_network_v20230201:network:RouteTable",
     "description": "The reference to the RouteTable resource.",
     "type": "object"
    },
    "serviceEndpointPolicies": {
     "description": "An array of service endpoint policies.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ServiceEndpointPolicy",
      "type": "object"
     },
     "type": "array"
    },
    "serviceEndpoints": {
     "description": "An array of service endpoints.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ServiceEndpointPropertiesFormat",
      "type": "object"
     },
     "type": "array"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:SubnetResponse": {
   "description": "Subnet in a virtual network resource.",
   "properties": {
    "addressPrefix": {
     "description": "The address prefix for the subnet.",
     "type": "string"
    },
    "addressPrefixes": {
     "description": "List of address prefixes for the subnet.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "applicationGatewayIPConfigurations": {
     "description": "Application gateway IP configurations of virtual network resource.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayIPConfigurationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "delegations": {
     "description": "An array of references to the delegations on the subnet.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:DelegationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "ipAllocations": {
     "description": "Array of IpAllocation which reference this subnet.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "ipConfigurationProfiles": {
     "description": "Array of IP configuration profiles which reference this subnet.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IPConfigurationProfileResponse",
      "type": "object"
     },
     "type": "array"
    },
    "ipConfigurations": {
     "description": "An array of references to the network interface IP configurations using subnet.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IPConfigurationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "natGateway": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Nat gateway associated with this subnet.",
     "type": "object"
    },
    "networkSecurityGroup": {
     "$ref": "#/types/azure-native_network_v20230201:network:NetworkSecurityGroupResponse",
     "description": "The reference to the NetworkSecurityGroup resource.",
     "type": "object"
    },
    "privateEndpointNetworkPolicies": {
     "default": "Disabled",
     "description": "Enable or Disable apply network policies on private end point in the subnet.",
     "type": "string"
    },
    "privateEndpoints": {
     "description": "An array of references to private endpoints.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateEndpointResponse",
      "type": "object"
     },
     "type": "array"
    },
    "privateLinkServiceNetworkPolicies": {
     "default": "Enabled",
     "description": "Enable or Disable apply network policies on private link service in the subnet.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the subnet resource.",
     "type": "string"
    },
    "purpose": {
     "description": "A read-only string identifying the intention of use for this subnet based on delegations and other user-defined properties.",
     "type": "string"
    },
    "resourceNavigationLinks": {
     "description": "An array of references to the external resources using subnet.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ResourceNavigationLinkResponse",
      "type": "object"
     },
     "type": "array"
    },
    "routeTable": {
     "$ref": "#/types/azure-native_network_v20230201:network:RouteTableResponse",
     "description": "The reference to the RouteTable resource.",
     "type": "object"
    },
    "serviceAssociationLinks": {
     "description": "An array of references to services injecting into this subnet.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ServiceAssociationLinkResponse",
      "type": "object"
     },
     "type": "array"
    },
    "serviceEndpointPolicies": {
     "description": "An array of service endpoint policies.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ServiceEndpointPolicyResponse",
      "type": "object"
     },
     "type": "array"
    },
    "serviceEndpoints": {
     "description": "An array of service endpoints.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ServiceEndpointPropertiesFormatResponse",
      "type": "object"
     },
     "type": "array"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "ipConfigurationProfiles",
    "ipConfigurations",
    "privateEndpoints",
    "provisioningState",
    "purpose",
    "resourceNavigationLinks",
    "serviceAssociationLinks"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:SystemDataResponse": {
   "description": "Metadata pertaining to creation and last modification of the resource.",
   "properties": {
    "createdAt": {
     "description": "The timestamp of resource creation (UTC).",
     "type": "string"
    },
    "createdBy": {
     "description": "The identity that created the resource.",
     "type": "string"
    },
    "createdByType": {
     "description": "The type of identity that created the resource.",
     "type": "string"
    },
    "lastModifiedAt": {
     "description": "The type of identity that last modified the resource.",
     "type": "string"
    },
    "lastModifiedBy": {
     "description": "The identity that last modified the resource.",
     "type": "string"
    },
    "lastModifiedByType": {
     "description": "The type of identity that last modified the resource.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:TrafficAnalyticsConfigurationProperties": {
   "description": "Parameters that define the configuration of traffic analytics.",
   "properties": {
    "enabled": {
     "description": "Flag to enable/disable traffic analytics.",
     "type": "boolean"
    },
    "trafficAnalyticsInterval": {
     "description": "The interval in minutes which would decide how frequently TA service should do flow analytics.",
     "type": "integer"
    },
    "workspaceId": {
     "description": "The resource guid of the attached workspace.",
     "type": "string"
    },
    "workspaceRegion": {
     "description": "The location of the attached workspace.",
     "type": "string"
    },
    "workspaceResourceId": {
     "description": "Resource Id of the attached workspace.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:TrafficAnalyticsConfigurationPropertiesResponse": {
   "description": "Parameters that define the configuration of traffic analytics.",
   "properties": {
    "enabled": {
     "description": "Flag to enable/disable traffic analytics.",
     "type": "boolean"
    },
    "trafficAnalyticsInterval": {
     "description": "The interval in minutes which would decide how frequently TA service should do flow analytics.",
     "type": "integer"
    },
    "workspaceId": {
     "description": "The resource guid of the attached workspace.",
     "type": "string"
    },
    "workspaceRegion": {
     "description": "The location of the attached workspace.",
     "type": "string"
    },
    "workspaceResourceId": {
     "description": "Resource Id of the attached workspace.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:TrafficAnalyticsProperties": {
   "description": "Parameters that define the configuration of traffic analytics.",
   "properties": {
    "networkWatcherFlowAnalyticsConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:TrafficAnalyticsConfigurationProperties",
     "description": "Parameters that define the configuration of traffic analytics.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:TrafficAnalyticsPropertiesResponse": {
   "description": "Parameters that define the configuration of traffic analytics.",
   "properties": {
    "networkWatcherFlowAnalyticsConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:TrafficAnalyticsConfigurationPropertiesResponse",
     "description": "Parameters that define the configuration of traffic analytics.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:TrafficSelectorPolicy": {
   "description": "An traffic selector policy for a virtual network gateway connection.",
   "properties": {
    "localAddressRanges": {
     "description": "A collection of local address spaces in CIDR format.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "remoteAddressRanges": {
     "description": "A collection of remote address spaces in CIDR format.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "required": [
    "localAddressRanges",
    "remoteAddressRanges"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:TrafficSelectorPolicyResponse": {
   "description": "An traffic selector policy for a virtual network gateway connection.",
   "properties": {
    "localAddressRanges": {
     "description": "A collection of local address spaces in CIDR format.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "remoteAddressRanges": {
     "description": "A collection of remote address spaces in CIDR format.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "required": [
    "localAddressRanges",
    "remoteAddressRanges"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:TunnelConnectionHealthResponse": {
   "description": "VirtualNetworkGatewayConnection properties.",
   "properties": {
    "connectionStatus": {
     "description": "Virtual Network Gateway connection status.",
     "type": "string"
    },
    "egressBytesTransferred": {
     "description": "The Egress Bytes Transferred in this connection.",
     "type": "number"
    },
    "ingressBytesTransferred": {
     "description": "The Ingress Bytes Transferred in this connection.",
     "type": "number"
    },
    "lastConnectionEstablishedUtcTime": {
     "description": "The time at which connection was established in Utc format.",
     "type": "string"
    },
    "tunnel": {
     "description": "Tunnel name.",
     "type": "string"
    }
   },
   "required": [
    "connectionStatus",
    "egressBytesTransferred",
    "ingressBytesTransferred",
    "lastConnectionEstablishedUtcTime",
    "tunnel"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VM": {
   "description": "Describes a Virtual Machine.",
   "properties": {
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VMResponse": {
   "description": "Describes a Virtual Machine.",
   "properties": {
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "name",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualApplianceAdditionalNicProperties": {
   "description": "Network Virtual Appliance Additional NIC properties.",
   "properties": {
    "hasPublicIp": {
     "description": "Flag (true or false) for Intent for Public Ip on additional nic",
     "type": "boolean"
    },
    "name": {
     "description": "Name of additional nic",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualApplianceAdditionalNicPropertiesResponse": {
   "description": "Network Virtual Appliance Additional NIC properties.",
   "properties": {
    "hasPublicIp": {
     "description": "Flag (true or false) for Intent for Public Ip on additional nic",
     "type": "boolean"
    },
    "name": {
     "description": "Name of additional nic",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualApplianceNicPropertiesResponse": {
   "description": "Network Virtual Appliance NIC properties.",
   "properties": {
    "instanceName": {
     "description": "Instance on which nic is attached.",
     "type": "string"
    },
    "name": {
     "description": "NIC name.",
     "type": "string"
    },
    "privateIpAddress": {
     "description": "Private IP address.",
     "type": "string"
    },
    "publicIpAddress": {
     "description": "Public IP address.",
     "type": "string"
    }
   },
   "required": [
    "instanceName",
    "name",
    "privateIpAddress",
    "publicIpAddress"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualApplianceSkuProperties": {
   "description": "Network Virtual Appliance Sku Properties.",
   "properties": {
    "bundledScaleUnit": {
     "description": "Virtual Appliance Scale Unit.",
     "type": "string"
    },
    "marketPlaceVersion": {
     "description": "Virtual Appliance Version.",
     "type": "string"
    },
    "vendor": {
     "description": "Virtual Appliance Vendor.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualApplianceSkuPropertiesResponse": {
   "description": "Network Virtual Appliance Sku Properties.",
   "properties": {
    "bundledScaleUnit": {
     "description": "Virtual Appliance Scale Unit.",
     "type": "string"
    },
    "marketPlaceVersion": {
     "description": "Virtual Appliance Version.",
     "type": "string"
    },
    "vendor": {
     "description": "Virtual Appliance Vendor.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualHubId": {
   "description": "Virtual Hub identifier.",
   "properties": {
    "id": {
     "description": "The resource URI for the Virtual Hub where the ExpressRoute gateway is or will be deployed. The Virtual Hub resource and the ExpressRoute gateway resource reside in the same subscription.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualHubIdResponse": {
   "description": "Virtual Hub identifier.",
   "properties": {
    "id": {
     "description": "The resource URI for the Virtual Hub where the ExpressRoute gateway is or will be deployed. The Virtual Hub resource and the ExpressRoute gateway resource reside in the same subscription.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualHubRoute": {
   "description": "VirtualHub route.",
   "properties": {
    "addressPrefixes": {
     "description": "List of all addressPrefixes.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "nextHopIpAddress": {
     "description": "NextHop ip address.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualHubRouteResponse": {
   "description": "VirtualHub route.",
   "properties": {
    "addressPrefixes": {
     "description": "List of all addressPrefixes.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "nextHopIpAddress": {
     "description": "NextHop ip address.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualHubRouteTable": {
   "description": "VirtualHub route table.",
   "properties": {
    "routes": {
     "description": "List of all routes.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualHubRoute",
      "type": "object"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualHubRouteTableResponse": {
   "description": "VirtualHub route table.",
   "properties": {
    "routes": {
     "description": "List of all routes.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualHubRouteResponse",
      "type": "object"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualHubRouteTableV2": {
   "description": "VirtualHubRouteTableV2 Resource.",
   "properties": {
    "attachedConnections": {
     "description": "List of all connections attached to this route table v2.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "routes": {
     "description": "List of all routes.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualHubRouteV2",
      "type": "object"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualHubRouteTableV2Response": {
   "description": "VirtualHubRouteTableV2 Resource.",
   "properties": {
    "attachedConnections": {
     "description": "List of all connections attached to this route table v2.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the virtual hub route table v2 resource.",
     "type": "string"
    },
    "routes": {
     "description": "List of all routes.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualHubRouteV2Response",
      "type": "object"
     },
     "type": "array"
    }
   },
   "required": [
    "etag",
    "provisioningState"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualHubRouteV2": {
   "description": "VirtualHubRouteTableV2 route.",
   "properties": {
    "destinationType": {
     "description": "The type of destinations.",
     "type": "string"
    },
    "destinations": {
     "description": "List of all destinations.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "nextHopType": {
     "description": "The type of next hops.",
     "type": "string"
    },
    "nextHops": {
     "description": "NextHops ip address.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualHubRouteV2Response": {
   "description": "VirtualHubRouteTableV2 route.",
   "properties": {
    "destinationType": {
     "description": "The type of destinations.",
     "type": "string"
    },
    "destinations": {
     "description": "List of all destinations.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "nextHopType": {
     "description": "The type of next hops.",
     "type": "string"
    },
    "nextHops": {
     "description": "NextHops ip address.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualNetworkBgpCommunities": {
   "description": "Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET.",
   "properties": {
    "virtualNetworkCommunity": {
     "description": "The BGP community associated with the virtual network.",
     "type": "string"
    }
   },
   "required": [
    "virtualNetworkCommunity"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualNetworkBgpCommunitiesResponse": {
   "description": "Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET.",
   "properties": {
    "regionalCommunity": {
     "description": "The BGP community associated with the region of the virtual network.",
     "type": "string"
    },
    "virtualNetworkCommunity": {
     "description": "The BGP community associated with the virtual network.",
     "type": "string"
    }
   },
   "required": [
    "regionalCommunity",
    "virtualNetworkCommunity"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualNetworkEncryption": {
   "description": "Indicates if encryption is enabled on virtual network and if VM without encryption is allowed in encrypted VNet.",
   "properties": {
    "enabled": {
     "description": "Indicates if encryption is enabled on the virtual network.",
     "type": "boolean"
    },
    "enforcement": {
     "description": "If the encrypted VNet allows VM that does not support encryption",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:VirtualNetworkEncryptionEnforcement"
      }
     ]
    }
   },
   "required": [
    "enabled"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualNetworkEncryptionResponse": {
   "description": "Indicates if encryption is enabled on virtual network and if VM without encryption is allowed in encrypted VNet.",
   "properties": {
    "enabled": {
     "description": "Indicates if encryption is enabled on the virtual network.",
     "type": "boolean"
    },
    "enforcement": {
     "description": "If the encrypted VNet allows VM that does not support encryption",
     "type": "string"
    }
   },
   "required": [
    "enabled"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualNetworkGateway": {
   "description": "A common class for general resource information.",
   "properties": {
    "activeActive": {
     "description": "ActiveActive flag.",
     "type": "boolean"
    },
    "adminState": {
     "description": "Property to indicate if the Express Route Gateway serves traffic when there are multiple Express Route Gateways in the vnet",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:AdminState"
      }
     ]
    },
    "allowRemoteVnetTraffic": {
     "description": "Configure this gateway to accept traffic from other Azure Virtual Networks. This configuration does not support connectivity to Azure Virtual WAN.",
     "type": "boolean"
    },
    "allowVirtualWanTraffic": {
     "description": "Configures this gateway to accept traffic from remote Virtual WAN networks.",
     "type": "boolean"
    },
    "bgpSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:BgpSettings",
     "description": "Virtual network gateway's BGP speaker settings.",
     "type": "object"
    },
    "customRoutes": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpace",
     "description": "The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient.",
     "type": "object"
    },
    "disableIPSecReplayProtection": {
     "description": "disableIPSecReplayProtection flag.",
     "type": "boolean"
    },
    "enableBgp": {
     "description": "Whether BGP is enabled for this virtual network gateway or not.",
     "type": "boolean"
    },
    "enableBgpRouteTranslationForNat": {
     "description": "EnableBgpRouteTranslationForNat flag.",
     "type": "boolean"
    },
    "enableDnsForwarding": {
     "description": "Whether dns forwarding is enabled or not.",
     "type": "boolean"
    },
    "enablePrivateIpAddress": {
     "description": "Whether private IP needs to be enabled on this gateway for connections or not.",
     "type": "boolean"
    },
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocation",
     "description": "The extended location of type local virtual network gateway.",
     "type": "object"
    },
    "gatewayDefaultSite": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "The reference to the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.",
     "type": "object"
    },
    "gatewayType": {
     "description": "The type of this virtual network gateway.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:VirtualNetworkGatewayType"
      }
     ]
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "ipConfigurations": {
     "description": "IP configurations for virtual network gateway.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewayIPConfiguration",
      "type": "object"
     },
     "type": "array"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "natRules": {
     "description": "NatRules for virtual network gateway.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewayNatRule",
      "type": "object"
     },
     "type": "array"
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewaySku",
     "description": "The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.",
     "type": "object"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "vNetExtendedLocationResourceId": {
     "description": "Customer vnet resource id. VirtualNetworkGateway of type local gateway is associated with the customer vnet.",
     "type": "string"
    },
    "virtualNetworkGatewayPolicyGroups": {
     "description": "The reference to the VirtualNetworkGatewayPolicyGroup resource which represents the available VirtualNetworkGatewayPolicyGroup for the gateway.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewayPolicyGroup",
      "type": "object"
     },
     "type": "array"
    },
    "vpnClientConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:VpnClientConfiguration",
     "description": "The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations.",
     "type": "object"
    },
    "vpnGatewayGeneration": {
     "description": "The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:VpnGatewayGeneration"
      }
     ]
    },
    "vpnType": {
     "description": "The type of this virtual network gateway.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:VpnType"
      }
     ]
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualNetworkGatewayIPConfiguration": {
   "description": "IP configuration for virtual network gateway.",
   "properties": {
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "privateIPAllocationMethod": {
     "description": "The private IP address allocation method.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:IPAllocationMethod"
      }
     ]
    },
    "publicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "The reference to the public IP resource.",
     "type": "object"
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "The reference to the subnet resource.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualNetworkGatewayIPConfigurationResponse": {
   "description": "IP configuration for virtual network gateway.",
   "properties": {
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "privateIPAddress": {
     "description": "Private IP Address for this gateway.",
     "type": "string"
    },
    "privateIPAllocationMethod": {
     "description": "The private IP address allocation method.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the virtual network gateway IP configuration resource.",
     "type": "string"
    },
    "publicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The reference to the public IP resource.",
     "type": "object"
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The reference to the subnet resource.",
     "type": "object"
    }
   },
   "required": [
    "etag",
    "privateIPAddress",
    "provisioningState"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualNetworkGatewayNatRule": {
   "description": "VirtualNetworkGatewayNatRule Resource.",
   "properties": {
    "externalMappings": {
     "description": "The private IP address external mapping for NAT.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnNatRuleMapping",
      "type": "object"
     },
     "type": "array"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "internalMappings": {
     "description": "The private IP address internal mapping for NAT.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnNatRuleMapping",
      "type": "object"
     },
     "type": "array"
    },
    "ipConfigurationId": {
     "description": "The IP Configuration ID this NAT rule applies to.",
     "type": "string"
    },
    "mode": {
     "description": "The Source NAT direction of a VPN NAT.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:VpnNatRuleMode"
      }
     ]
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "type": {
     "description": "The type of NAT rule for VPN NAT.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:VpnNatRuleType"
      }
     ]
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualNetworkGatewayNatRuleResponse": {
   "description": "VirtualNetworkGatewayNatRule Resource.",
   "properties": {
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "externalMappings": {
     "description": "The private IP address external mapping for NAT.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnNatRuleMappingResponse",
      "type": "object"
     },
     "type": "array"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "internalMappings": {
     "description": "The private IP address internal mapping for NAT.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnNatRuleMappingResponse",
      "type": "object"
     },
     "type": "array"
    },
    "ipConfigurationId": {
     "description": "The IP Configuration ID this NAT rule applies to.",
     "type": "string"
    },
    "mode": {
     "description": "The Source NAT direction of a VPN NAT.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the NAT Rule resource.",
     "type": "string"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualNetworkGatewayPolicyGroup": {
   "description": "Parameters for VirtualNetworkGatewayPolicyGroup.",
   "properties": {
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "isDefault": {
     "description": "Shows if this is a Default VirtualNetworkGatewayPolicyGroup or not.",
     "type": "boolean"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "policyMembers": {
     "description": "Multiple PolicyMembers for VirtualNetworkGatewayPolicyGroup.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewayPolicyGroupMember",
      "type": "object"
     },
     "type": "array"
    },
    "priority": {
     "description": "Priority for VirtualNetworkGatewayPolicyGroup.",
     "type": "integer"
    }
   },
   "required": [
    "isDefault",
    "policyMembers",
    "priority"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualNetworkGatewayPolicyGroupMember": {
   "description": "Vpn Client Connection configuration PolicyGroup member",
   "properties": {
    "attributeType": {
     "description": "The Vpn Policy member attribute type.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:VpnPolicyMemberAttributeType"
      }
     ]
    },
    "attributeValue": {
     "description": "The value of Attribute used for this VirtualNetworkGatewayPolicyGroupMember.",
     "type": "string"
    },
    "name": {
     "description": "Name of the VirtualNetworkGatewayPolicyGroupMember.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualNetworkGatewayPolicyGroupMemberResponse": {
   "description": "Vpn Client Connection configuration PolicyGroup member",
   "properties": {
    "attributeType": {
     "description": "The Vpn Policy member attribute type.",
     "type": "string"
    },
    "attributeValue": {
     "description": "The value of Attribute used for this VirtualNetworkGatewayPolicyGroupMember.",
     "type": "string"
    },
    "name": {
     "description": "Name of the VirtualNetworkGatewayPolicyGroupMember.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualNetworkGatewayPolicyGroupResponse": {
   "description": "Parameters for VirtualNetworkGatewayPolicyGroup.",
   "properties": {
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "isDefault": {
     "description": "Shows if this is a Default VirtualNetworkGatewayPolicyGroup or not.",
     "type": "boolean"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "policyMembers": {
     "description": "Multiple PolicyMembers for VirtualNetworkGatewayPolicyGroup.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewayPolicyGroupMemberResponse",
      "type": "object"
     },
     "type": "array"
    },
    "priority": {
     "description": "Priority for VirtualNetworkGatewayPolicyGroup.",
     "type": "integer"
    },
    "provisioningState": {
     "description": "The provisioning state of the VirtualNetworkGatewayPolicyGroup resource.",
     "type": "string"
    },
    "vngClientConnectionConfigurations": {
     "description": "List of references to vngClientConnectionConfigurations.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    }
   },
   "required": [
    "etag",
    "isDefault",
    "policyMembers",
    "priority",
    "provisioningState",
    "vngClientConnectionConfigurations"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualNetworkGatewayResponse": {
   "description": "A common class for general resource information.",
   "properties": {
    "activeActive": {
     "description": "ActiveActive flag.",
     "type": "boolean"
    },
    "adminState": {
     "description": "Property to indicate if the Express Route Gateway serves traffic when there are multiple Express Route Gateways in the vnet",
     "type": "string"
    },
    "allowRemoteVnetTraffic": {
     "description": "Configure this gateway to accept traffic from other Azure Virtual Networks. This configuration does not support connectivity to Azure Virtual WAN.",
     "type": "boolean"
    },
    "allowVirtualWanTraffic": {
     "description": "Configures this gateway to accept traffic from remote Virtual WAN networks.",
     "type": "boolean"
    },
    "bgpSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:BgpSettingsResponse",
     "description": "Virtual network gateway's BGP speaker settings.",
     "type": "object"
    },
    "customRoutes": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpaceResponse",
     "description": "The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient.",
     "type": "object"
    },
    "disableIPSecReplayProtection": {
     "description": "disableIPSecReplayProtection flag.",
     "type": "boolean"
    },
    "enableBgp": {
     "description": "Whether BGP is enabled for this virtual network gateway or not.",
     "type": "boolean"
    },
    "enableBgpRouteTranslationForNat": {
     "description": "EnableBgpRouteTranslationForNat flag.",
     "type": "boolean"
    },
    "enableDnsForwarding": {
     "description": "Whether dns forwarding is enabled or not.",
     "type": "boolean"
    },
    "enablePrivateIpAddress": {
     "description": "Whether private IP needs to be enabled on this gateway for connections or not.",
     "type": "boolean"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse",
     "description": "The extended location of type local virtual network gateway.",
     "type": "object"
    },
    "gatewayDefaultSite": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The reference to the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.",
     "type": "object"
    },
    "gatewayType": {
     "description": "The type of this virtual network gateway.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "inboundDnsForwardingEndpoint": {
     "description": "The IP address allocated by the gateway to which dns requests can be sent.",
     "type": "string"
    },
    "ipConfigurations": {
     "description": "IP configurations for virtual network gateway.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewayIPConfigurationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "natRules": {
     "description": "NatRules for virtual network gateway.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewayNatRuleResponse",
      "type": "object"
     },
     "type": "array"
    },
    "provisioningState": {
     "description": "The provisioning state of the virtual network gateway resource.",
     "type": "string"
    },
    "resourceGuid": {
     "description": "The resource GUID property of the virtual network gateway resource.",
     "type": "string"
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewaySkuResponse",
     "description": "The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.",
     "type": "object"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    },
    "vNetExtendedLocationResourceId": {
     "description": "Customer vnet resource id. VirtualNetworkGateway of type local gateway is associated with the customer vnet.",
     "type": "string"
    },
    "virtualNetworkGatewayPolicyGroups": {
     "description": "The reference to the VirtualNetworkGatewayPolicyGroup resource which represents the available VirtualNetworkGatewayPolicyGroup for the gateway.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewayPolicyGroupResponse",
      "type": "object"
     },
     "type": "array"
    },
    "vpnClientConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:VpnClientConfigurationResponse",
     "description": "The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations.",
     "type": "object"
    },
    "vpnGatewayGeneration": {
     "description": "The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.",
     "type": "string"
    },
    "vpnType": {
     "description": "The type of this virtual network gateway.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "inboundDnsForwardingEndpoint",
    "name",
    "provisioningState",
    "resourceGuid",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualNetworkGatewaySku": {
   "description": "VirtualNetworkGatewaySku details.",
   "properties": {
    "name": {
     "description": "Gateway SKU name.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:VirtualNetworkGatewaySkuName"
      }
     ]
    },
    "tier": {
     "description": "Gateway SKU tier.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:VirtualNetworkGatewaySkuTier"
      }
     ]
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualNetworkGatewaySkuResponse": {
   "description": "VirtualNetworkGatewaySku details.",
   "properties": {
    "capacity": {
     "description": "The capacity.",
     "type": "integer"
    },
    "name": {
     "description": "Gateway SKU name.",
     "type": "string"
    },
    "tier": {
     "description": "Gateway SKU tier.",
     "type": "string"
    }
   },
   "required": [
    "capacity"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualNetworkPeering": {
   "description": "Peerings in a virtual network resource.",
   "properties": {
    "allowForwardedTraffic": {
     "description": "Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network.",
     "type": "boolean"
    },
    "allowGatewayTransit": {
     "description": "If gateway links can be used in remote virtual networking to link to this virtual network.",
     "type": "boolean"
    },
    "allowVirtualNetworkAccess": {
     "description": "Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space.",
     "type": "boolean"
    },
    "doNotVerifyRemoteGateways": {
     "description": "If we need to verify the provisioning state of the remote gateway.",
     "type": "boolean"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "peeringState": {
     "description": "The status of the virtual network peering.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:VirtualNetworkPeeringState"
      }
     ]
    },
    "peeringSyncLevel": {
     "description": "The peering sync status of the virtual network peering.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:VirtualNetworkPeeringLevel"
      }
     ]
    },
    "remoteAddressSpace": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpace",
     "description": "The reference to the address space peered with the remote virtual network.",
     "type": "object"
    },
    "remoteBgpCommunities": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkBgpCommunities",
     "description": "The reference to the remote virtual network's Bgp Communities.",
     "type": "object"
    },
    "remoteVirtualNetwork": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "The reference to the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).",
     "type": "object"
    },
    "remoteVirtualNetworkAddressSpace": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpace",
     "description": "The reference to the current address space of the remote virtual network.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    },
    "useRemoteGateways": {
     "description": "If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.",
     "type": "boolean"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualNetworkPeeringResponse": {
   "description": "Peerings in a virtual network resource.",
   "properties": {
    "allowForwardedTraffic": {
     "description": "Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network.",
     "type": "boolean"
    },
    "allowGatewayTransit": {
     "description": "If gateway links can be used in remote virtual networking to link to this virtual network.",
     "type": "boolean"
    },
    "allowVirtualNetworkAccess": {
     "description": "Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space.",
     "type": "boolean"
    },
    "doNotVerifyRemoteGateways": {
     "description": "If we need to verify the provisioning state of the remote gateway.",
     "type": "boolean"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "peeringState": {
     "description": "The status of the virtual network peering.",
     "type": "string"
    },
    "peeringSyncLevel": {
     "description": "The peering sync status of the virtual network peering.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the virtual network peering resource.",
     "type": "string"
    },
    "remoteAddressSpace": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpaceResponse",
     "description": "The reference to the address space peered with the remote virtual network.",
     "type": "object"
    },
    "remoteBgpCommunities": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkBgpCommunitiesResponse",
     "description": "The reference to the remote virtual network's Bgp Communities.",
     "type": "object"
    },
    "remoteVirtualNetwork": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "The reference to the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).",
     "type": "object"
    },
    "remoteVirtualNetworkAddressSpace": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpaceResponse",
     "description": "The reference to the current address space of the remote virtual network.",
     "type": "object"
    },
    "remoteVirtualNetworkEncryption": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkEncryptionResponse",
     "description": "The reference to the remote virtual network's encryption",
     "type": "object"
    },
    "resourceGuid": {
     "description": "The resourceGuid property of the Virtual Network peering resource.",
     "type": "string"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    },
    "useRemoteGateways": {
     "description": "If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.",
     "type": "boolean"
    }
   },
   "required": [
    "etag",
    "provisioningState",
    "remoteVirtualNetworkEncryption",
    "resourceGuid"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualNetworkTap": {
   "description": "Virtual Network Tap resource.",
   "properties": {
    "destinationLoadBalancerFrontEndIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:FrontendIPConfiguration",
     "description": "The reference to the private IP address on the internal Load Balancer that will receive the tap.",
     "type": "object"
    },
    "destinationNetworkInterfaceIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceIPConfiguration",
     "description": "The reference to the private IP Address of the collector nic that will receive the tap.",
     "type": "object"
    },
    "destinationPort": {
     "description": "The VXLAN destination port that will receive the tapped traffic.",
     "type": "integer"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualNetworkTapResponse": {
   "description": "Virtual Network Tap resource.",
   "properties": {
    "destinationLoadBalancerFrontEndIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:FrontendIPConfigurationResponse",
     "description": "The reference to the private IP address on the internal Load Balancer that will receive the tap.",
     "type": "object"
    },
    "destinationNetworkInterfaceIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceIPConfigurationResponse",
     "description": "The reference to the private IP Address of the collector nic that will receive the tap.",
     "type": "object"
    },
    "destinationPort": {
     "description": "The VXLAN destination port that will receive the tapped traffic.",
     "type": "integer"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "location": {
     "description": "Resource location.",
     "type": "string"
    },
    "name": {
     "description": "Resource name.",
     "type": "string"
    },
    "networkInterfaceTapConfigurations": {
     "description": "Specifies the list of resource IDs for the network interface IP configuration that needs to be tapped.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceTapConfigurationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "provisioningState": {
     "description": "The provisioning state of the virtual network tap resource.",
     "type": "string"
    },
    "resourceGuid": {
     "description": "The resource GUID property of the virtual network tap resource.",
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "Resource tags.",
     "type": "object"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "name",
    "networkInterfaceTapConfigurations",
    "provisioningState",
    "resourceGuid",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualRouterAutoScaleConfiguration": {
   "description": "The VirtualHub Router autoscale configuration.",
   "properties": {
    "minCapacity": {
     "description": "The minimum number of scale units for VirtualHub Router.",
     "type": "integer"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VirtualRouterAutoScaleConfigurationResponse": {
   "description": "The VirtualHub Router autoscale configuration.",
   "properties": {
    "minCapacity": {
     "description": "The minimum number of scale units for VirtualHub Router.",
     "type": "integer"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VnetRoute": {
   "description": "List of routes that control routing from VirtualHub into a virtual network connection.",
   "properties": {
    "staticRoutes": {
     "description": "List of all Static Routes.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:StaticRoute",
      "type": "object"
     },
     "type": "array"
    },
    "staticRoutesConfig": {
     "$ref": "#/types/azure-native_network_v20230201:network:StaticRoutesConfig",
     "description": "Configuration for static routes on this HubVnetConnection.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VnetRouteResponse": {
   "description": "List of routes that control routing from VirtualHub into a virtual network connection.",
   "properties": {
    "bgpConnections": {
     "description": "The list of references to HubBgpConnection objects.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "staticRoutes": {
     "description": "List of all Static Routes.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:StaticRouteResponse",
      "type": "object"
     },
     "type": "array"
    },
    "staticRoutesConfig": {
     "$ref": "#/types/azure-native_network_v20230201:network:StaticRoutesConfigResponse",
     "description": "Configuration for static routes on this HubVnetConnection.",
     "type": "object"
    }
   },
   "required": [
    "bgpConnections"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VngClientConnectionConfiguration": {
   "description": "A vpn client connection configuration for client connection configuration.",
   "properties": {
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "virtualNetworkGatewayPolicyGroups": {
     "description": "List of references to virtualNetworkGatewayPolicyGroups",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
      "type": "object"
     },
     "type": "array"
    },
    "vpnClientAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpace",
     "description": "The reference to the address space resource which represents Address space for P2S VpnClient.",
     "type": "object"
    }
   },
   "required": [
    "virtualNetworkGatewayPolicyGroups",
    "vpnClientAddressPool"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VngClientConnectionConfigurationResponse": {
   "description": "A vpn client connection configuration for client connection configuration.",
   "properties": {
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the VngClientConnectionConfiguration resource.",
     "type": "string"
    },
    "virtualNetworkGatewayPolicyGroups": {
     "description": "List of references to virtualNetworkGatewayPolicyGroups",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "vpnClientAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpaceResponse",
     "description": "The reference to the address space resource which represents Address space for P2S VpnClient.",
     "type": "object"
    }
   },
   "required": [
    "etag",
    "provisioningState",
    "virtualNetworkGatewayPolicyGroups",
    "vpnClientAddressPool"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VpnClientConfiguration": {
   "description": "VpnClientConfiguration for P2S client.",
   "properties": {
    "aadAudience": {
     "description": "The AADAudience property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.",
     "type": "string"
    },
    "aadIssuer": {
     "description": "The AADIssuer property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.",
     "type": "string"
    },
    "aadTenant": {
     "description": "The AADTenant property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.",
     "type": "string"
    },
    "radiusServerAddress": {
     "description": "The radius server address property of the VirtualNetworkGateway resource for vpn client connection.",
     "type": "string"
    },
    "radiusServerSecret": {
     "description": "The radius secret property of the VirtualNetworkGateway resource for vpn client connection.",
     "type": "string"
    },
    "radiusServers": {
     "description": "The radiusServers property for multiple radius server configuration.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:RadiusServer",
      "type": "object"
     },
     "type": "array"
    },
    "vngClientConnectionConfigurations": {
     "description": "per ip address pool connection policy for virtual network gateway P2S client.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VngClientConnectionConfiguration",
      "type": "object"
     },
     "type": "array"
    },
    "vpnAuthenticationTypes": {
     "description": "VPN authentication types for the virtual network gateway..",
     "items": {
      "oneOf": [
       {
        "type": "string"
       },
       {
        "$ref": "#/types/azure-native:network:VpnAuthenticationType"
       }
      ]
     },
     "type": "array"
    },
    "vpnClientAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpace",
     "description": "The reference to the address space resource which represents Address space for P2S VpnClient.",
     "type": "object"
    },
    "vpnClientIpsecPolicies": {
     "description": "VpnClientIpsecPolicies for virtual network gateway P2S client.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IpsecPolicy",
      "type": "object"
     },
     "type": "array"
    },
    "vpnClientProtocols": {
     "description": "VpnClientProtocols for Virtual network gateway.",
     "items": {
      "oneOf": [
       {
        "type": "string"
       },
       {
        "$ref": "#/types/azure-native:network:VpnClientProtocol"
       }
      ]
     },
     "type": "array"
    },
    "vpnClientRevokedCertificates": {
     "description": "VpnClientRevokedCertificate for Virtual network gateway.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnClientRevokedCertificate",
      "type": "object"
     },
     "type": "array"
    },
    "vpnClientRootCertificates": {
     "description": "VpnClientRootCertificate for virtual network gateway.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnClientRootCertificate",
      "type": "object"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VpnClientConfigurationResponse": {
   "description": "VpnClientConfiguration for P2S client.",
   "properties": {
    "aadAudience": {
     "description": "The AADAudience property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.",
     "type": "string"
    },
    "aadIssuer": {
     "description": "The AADIssuer property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.",
     "type": "string"
    },
    "aadTenant": {
     "description": "The AADTenant property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.",
     "type": "string"
    },
    "radiusServerAddress": {
     "description": "The radius server address property of the VirtualNetworkGateway resource for vpn client connection.",
     "type": "string"
    },
    "radiusServerSecret": {
     "description": "The radius secret property of the VirtualNetworkGateway resource for vpn client connection.",
     "type": "string"
    },
    "radiusServers": {
     "description": "The radiusServers property for multiple radius server configuration.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:RadiusServerResponse",
      "type": "object"
     },
     "type": "array"
    },
    "vngClientConnectionConfigurations": {
     "description": "per ip address pool connection policy for virtual network gateway P2S client.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VngClientConnectionConfigurationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "vpnAuthenticationTypes": {
     "description": "VPN authentication types for the virtual network gateway..",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "vpnClientAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpaceResponse",
     "description": "The reference to the address space resource which represents Address space for P2S VpnClient.",
     "type": "object"
    },
    "vpnClientIpsecPolicies": {
     "description": "VpnClientIpsecPolicies for virtual network gateway P2S client.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IpsecPolicyResponse",
      "type": "object"
     },
     "type": "array"
    },
    "vpnClientProtocols": {
     "description": "VpnClientProtocols for Virtual network gateway.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "vpnClientRevokedCertificates": {
     "description": "VpnClientRevokedCertificate for Virtual network gateway.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnClientRevokedCertificateResponse",
      "type": "object"
     },
     "type": "array"
    },
    "vpnClientRootCertificates": {
     "description": "VpnClientRootCertificate for virtual network gateway.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnClientRootCertificateResponse",
      "type": "object"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VpnClientConnectionHealthDetailResponse": {
   "description": "VPN client connection health detail.",
   "properties": {
    "egressBytesTransferred": {
     "description": "The egress bytes per second.",
     "type": "number"
    },
    "egressPacketsTransferred": {
     "description": "The egress packets per second.",
     "type": "number"
    },
    "ingressBytesTransferred": {
     "description": "The ingress bytes per second.",
     "type": "number"
    },
    "ingressPacketsTransferred": {
     "description": "The ingress packets per second.",
     "type": "number"
    },
    "maxBandwidth": {
     "description": "The max band width.",
     "type": "number"
    },
    "maxPacketsPerSecond": {
     "description": "The max packets transferred per second.",
     "type": "number"
    },
    "privateIpAddress": {
     "description": "The assigned private Ip of a connected vpn client.",
     "type": "string"
    },
    "publicIpAddress": {
     "description": "The public Ip of a connected vpn client.",
     "type": "string"
    },
    "vpnConnectionDuration": {
     "description": "The duration time of a connected vpn client.",
     "type": "number"
    },
    "vpnConnectionId": {
     "description": "The vpn client Id.",
     "type": "string"
    },
    "vpnConnectionTime": {
     "description": "The start time of a connected vpn client.",
     "type": "string"
    },
    "vpnUserName": {
     "description": "The user name of a connected vpn client.",
     "type": "string"
    }
   },
   "required": [
    "egressBytesTransferred",
    "egressPacketsTransferred",
    "ingressBytesTransferred",
    "ingressPacketsTransferred",
    "maxBandwidth",
    "maxPacketsPerSecond",
    "privateIpAddress",
    "publicIpAddress",
    "vpnConnectionDuration",
    "vpnConnectionId",
    "vpnConnectionTime",
    "vpnUserName"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VpnClientConnectionHealthResponse": {
   "description": "VpnClientConnectionHealth properties.",
   "properties": {
    "allocatedIpAddresses": {
     "description": "List of allocated ip addresses to the connected p2s vpn clients.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "totalEgressBytesTransferred": {
     "description": "Total of the Egress Bytes Transferred in this connection.",
     "type": "number"
    },
    "totalIngressBytesTransferred": {
     "description": "Total of the Ingress Bytes Transferred in this P2S Vpn connection.",
     "type": "number"
    },
    "vpnClientConnectionsCount": {
     "description": "The total of p2s vpn clients connected at this time to this P2SVpnGateway.",
     "type": "integer"
    }
   },
   "required": [
    "totalEgressBytesTransferred",
    "totalIngressBytesTransferred"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VpnClientRevokedCertificate": {
   "description": "VPN client revoked certificate of virtual network gateway.",
   "properties": {
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "thumbprint": {
     "description": "The revoked VPN client certificate thumbprint.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VpnClientRevokedCertificateResponse": {
   "description": "VPN client revoked certificate of virtual network gateway.",
   "properties": {
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the VPN client revoked certificate resource.",
     "type": "string"
    },
    "thumbprint": {
     "description": "The revoked VPN client certificate thumbprint.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "provisioningState"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VpnClientRootCertificate": {
   "description": "VPN client root certificate of virtual network gateway.",
   "properties": {
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "publicCertData": {
     "description": "The certificate public data.",
     "type": "string"
    }
   },
   "required": [
    "publicCertData"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VpnClientRootCertificateResponse": {
   "description": "VPN client root certificate of virtual network gateway.",
   "properties": {
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the VPN client root certificate resource.",
     "type": "string"
    },
    "publicCertData": {
     "description": "The certificate public data.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "provisioningState",
    "publicCertData"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VpnConnection": {
   "description": "VpnConnection Resource.",
   "properties": {
    "connectionBandwidth": {
     "description": "Expected bandwidth in MBPS.",
     "type": "integer"
    },
    "dpdTimeoutSeconds": {
     "description": "DPD timeout in seconds for vpn connection.",
     "type": "integer"
    },
    "enableBgp": {
     "description": "EnableBgp flag.",
     "type": "boolean"
    },
    "enableInternetSecurity": {
     "description": "Enable internet security.",
     "type": "boolean"
    },
    "enableRateLimiting": {
     "description": "EnableBgp flag.",
     "type": "boolean"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "ipsecPolicies": {
     "description": "The IPSec Policies to be considered by this connection.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IpsecPolicy",
      "type": "object"
     },
     "type": "array"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "remoteVpnSite": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Id of the connected vpn site.",
     "type": "object"
    },
    "routingConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfiguration",
     "description": "The Routing Configuration indicating the associated and propagated route tables on this connection.",
     "type": "object"
    },
    "routingWeight": {
     "description": "Routing weight for vpn connection.",
     "type": "integer"
    },
    "sharedKey": {
     "description": "SharedKey for the vpn connection.",
     "type": "string"
    },
    "trafficSelectorPolicies": {
     "description": "The Traffic Selector Policies to be considered by this connection.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:TrafficSelectorPolicy",
      "type": "object"
     },
     "type": "array"
    },
    "useLocalAzureIpAddress": {
     "description": "Use local azure ip to initiate connection.",
     "type": "boolean"
    },
    "usePolicyBasedTrafficSelectors": {
     "description": "Enable policy-based traffic selectors.",
     "type": "boolean"
    },
    "vpnConnectionProtocolType": {
     "description": "Connection protocol used for this connection.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:VirtualNetworkGatewayConnectionProtocol"
      }
     ]
    },
    "vpnLinkConnections": {
     "description": "List of all vpn site link connections to the gateway.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnSiteLinkConnection",
      "type": "object"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VpnConnectionResponse": {
   "description": "VpnConnection Resource.",
   "properties": {
    "connectionBandwidth": {
     "description": "Expected bandwidth in MBPS.",
     "type": "integer"
    },
    "connectionStatus": {
     "description": "The connection status.",
     "type": "string"
    },
    "dpdTimeoutSeconds": {
     "description": "DPD timeout in seconds for vpn connection.",
     "type": "integer"
    },
    "egressBytesTransferred": {
     "description": "Egress bytes transferred.",
     "type": "number"
    },
    "enableBgp": {
     "description": "EnableBgp flag.",
     "type": "boolean"
    },
    "enableInternetSecurity": {
     "description": "Enable internet security.",
     "type": "boolean"
    },
    "enableRateLimiting": {
     "description": "EnableBgp flag.",
     "type": "boolean"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "ingressBytesTransferred": {
     "description": "Ingress bytes transferred.",
     "type": "number"
    },
    "ipsecPolicies": {
     "description": "The IPSec Policies to be considered by this connection.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IpsecPolicyResponse",
      "type": "object"
     },
     "type": "array"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the VPN connection resource.",
     "type": "string"
    },
    "remoteVpnSite": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Id of the connected vpn site.",
     "type": "object"
    },
    "routingConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfigurationResponse",
     "description": "The Routing Configuration indicating the associated and propagated route tables on this connection.",
     "type": "object"
    },
    "routingWeight": {
     "description": "Routing weight for vpn connection.",
     "type": "integer"
    },
    "sharedKey": {
     "description": "SharedKey for the vpn connection.",
     "type": "string"
    },
    "trafficSelectorPolicies": {
     "description": "The Traffic Selector Policies to be considered by this connection.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:TrafficSelectorPolicyResponse",
      "type": "object"
     },
     "type": "array"
    },
    "useLocalAzureIpAddress": {
     "description": "Use local azure ip to initiate connection.",
     "type": "boolean"
    },
    "usePolicyBasedTrafficSelectors": {
     "description": "Enable policy-based traffic selectors.",
     "type": "boolean"
    },
    "vpnConnectionProtocolType": {
     "description": "Connection protocol used for this connection.",
     "type": "string"
    },
    "vpnLinkConnections": {
     "description": "List of all vpn site link connections to the gateway.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnSiteLinkConnectionResponse",
      "type": "object"
     },
     "type": "array"
    }
   },
   "required": [
    "connectionStatus",
    "egressBytesTransferred",
    "etag",
    "ingressBytesTransferred",
    "provisioningState"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VpnGatewayIpConfigurationResponse": {
   "description": "IP Configuration of a VPN Gateway Resource.",
   "properties": {
    "id": {
     "description": "The identifier of the IP configuration for a VPN Gateway.",
     "type": "string"
    },
    "privateIpAddress": {
     "description": "The private IP address of this IP configuration.",
     "type": "string"
    },
    "publicIpAddress": {
     "description": "The public IP address of this IP configuration.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VpnGatewayNatRule": {
   "description": "VpnGatewayNatRule Resource.",
   "properties": {
    "externalMappings": {
     "description": "The private IP address external mapping for NAT.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnNatRuleMapping",
      "type": "object"
     },
     "type": "array"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "internalMappings": {
     "description": "The private IP address internal mapping for NAT.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnNatRuleMapping",
      "type": "object"
     },
     "type": "array"
    },
    "ipConfigurationId": {
     "description": "The IP Configuration ID this NAT rule applies to.",
     "type": "string"
    },
    "mode": {
     "description": "The Source NAT direction of a VPN NAT.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:VpnNatRuleMode"
      }
     ]
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "type": {
     "description": "The type of NAT rule for VPN NAT.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:VpnNatRuleType"
      }
     ]
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VpnGatewayNatRuleResponse": {
   "description": "VpnGatewayNatRule Resource.",
   "properties": {
    "egressVpnSiteLinkConnections": {
     "description": "List of egress VpnSiteLinkConnections.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "externalMappings": {
     "description": "The private IP address external mapping for NAT.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnNatRuleMappingResponse",
      "type": "object"
     },
     "type": "array"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "ingressVpnSiteLinkConnections": {
     "description": "List of ingress VpnSiteLinkConnections.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "internalMappings": {
     "description": "The private IP address internal mapping for NAT.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnNatRuleMappingResponse",
      "type": "object"
     },
     "type": "array"
    },
    "ipConfigurationId": {
     "description": "The IP Configuration ID this NAT rule applies to.",
     "type": "string"
    },
    "mode": {
     "description": "The Source NAT direction of a VPN NAT.",
     "type": "string"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the NAT Rule resource.",
     "type": "string"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "egressVpnSiteLinkConnections",
    "etag",
    "ingressVpnSiteLinkConnections",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VpnLinkBgpSettings": {
   "description": "BGP settings details for a link.",
   "properties": {
    "asn": {
     "description": "The BGP speaker's ASN.",
     "type": "number"
    },
    "bgpPeeringAddress": {
     "description": "The BGP peering address and BGP identifier of this BGP speaker.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VpnLinkBgpSettingsResponse": {
   "description": "BGP settings details for a link.",
   "properties": {
    "asn": {
     "description": "The BGP speaker's ASN.",
     "type": "number"
    },
    "bgpPeeringAddress": {
     "description": "The BGP peering address and BGP identifier of this BGP speaker.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VpnLinkProviderProperties": {
   "description": "List of properties of a link provider.",
   "properties": {
    "linkProviderName": {
     "description": "Name of the link provider.",
     "type": "string"
    },
    "linkSpeedInMbps": {
     "description": "Link speed.",
     "type": "integer"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VpnLinkProviderPropertiesResponse": {
   "description": "List of properties of a link provider.",
   "properties": {
    "linkProviderName": {
     "description": "Name of the link provider.",
     "type": "string"
    },
    "linkSpeedInMbps": {
     "description": "Link speed.",
     "type": "integer"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VpnNatRuleMapping": {
   "description": "Vpn NatRule mapping.",
   "properties": {
    "addressSpace": {
     "description": "Address space for Vpn NatRule mapping.",
     "type": "string"
    },
    "portRange": {
     "description": "Port range for Vpn NatRule mapping.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VpnNatRuleMappingResponse": {
   "description": "Vpn NatRule mapping.",
   "properties": {
    "addressSpace": {
     "description": "Address space for Vpn NatRule mapping.",
     "type": "string"
    },
    "portRange": {
     "description": "Port range for Vpn NatRule mapping.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VpnServerConfigRadiusClientRootCertificate": {
   "description": "Properties of the Radius client root certificate of VpnServerConfiguration.",
   "properties": {
    "name": {
     "description": "The certificate name.",
     "type": "string"
    },
    "thumbprint": {
     "description": "The Radius client root certificate thumbprint.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VpnServerConfigRadiusClientRootCertificateResponse": {
   "description": "Properties of the Radius client root certificate of VpnServerConfiguration.",
   "properties": {
    "name": {
     "description": "The certificate name.",
     "type": "string"
    },
    "thumbprint": {
     "description": "The Radius client root certificate thumbprint.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VpnServerConfigRadiusServerRootCertificate": {
   "description": "Properties of Radius Server root certificate of VpnServerConfiguration.",
   "properties": {
    "name": {
     "description": "The certificate name.",
     "type": "string"
    },
    "publicCertData": {
     "description": "The certificate public data.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VpnServerConfigRadiusServerRootCertificateResponse": {
   "description": "Properties of Radius Server root certificate of VpnServerConfiguration.",
   "properties": {
    "name": {
     "description": "The certificate name.",
     "type": "string"
    },
    "publicCertData": {
     "description": "The certificate public data.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VpnServerConfigVpnClientRevokedCertificate": {
   "description": "Properties of the revoked VPN client certificate of VpnServerConfiguration.",
   "properties": {
    "name": {
     "description": "The certificate name.",
     "type": "string"
    },
    "thumbprint": {
     "description": "The revoked VPN client certificate thumbprint.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VpnServerConfigVpnClientRevokedCertificateResponse": {
   "description": "Properties of the revoked VPN client certificate of VpnServerConfiguration.",
   "properties": {
    "name": {
     "description": "The certificate name.",
     "type": "string"
    },
    "thumbprint": {
     "description": "The revoked VPN client certificate thumbprint.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VpnServerConfigVpnClientRootCertificate": {
   "description": "Properties of VPN client root certificate of VpnServerConfiguration.",
   "properties": {
    "name": {
     "description": "The certificate name.",
     "type": "string"
    },
    "publicCertData": {
     "description": "The certificate public data.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VpnServerConfigVpnClientRootCertificateResponse": {
   "description": "Properties of VPN client root certificate of VpnServerConfiguration.",
   "properties": {
    "name": {
     "description": "The certificate name.",
     "type": "string"
    },
    "publicCertData": {
     "description": "The certificate public data.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VpnServerConfigurationPolicyGroup": {
   "description": "VpnServerConfigurationPolicyGroup Resource.",
   "properties": {
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "isDefault": {
     "description": "Shows if this is a Default VpnServerConfigurationPolicyGroup or not.",
     "type": "boolean"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "policyMembers": {
     "description": "Multiple PolicyMembers for VpnServerConfigurationPolicyGroup.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnServerConfigurationPolicyGroupMember",
      "type": "object"
     },
     "type": "array"
    },
    "priority": {
     "description": "Priority for VpnServerConfigurationPolicyGroup.",
     "type": "integer"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VpnServerConfigurationPolicyGroupMember": {
   "description": "VpnServerConfiguration PolicyGroup member",
   "properties": {
    "attributeType": {
     "description": "The Vpn Policy member attribute type.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:VpnPolicyMemberAttributeType"
      }
     ]
    },
    "attributeValue": {
     "description": "The value of Attribute used for this VpnServerConfigurationPolicyGroupMember.",
     "type": "string"
    },
    "name": {
     "description": "Name of the VpnServerConfigurationPolicyGroupMember.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VpnServerConfigurationPolicyGroupMemberResponse": {
   "description": "VpnServerConfiguration PolicyGroup member",
   "properties": {
    "attributeType": {
     "description": "The Vpn Policy member attribute type.",
     "type": "string"
    },
    "attributeValue": {
     "description": "The value of Attribute used for this VpnServerConfigurationPolicyGroupMember.",
     "type": "string"
    },
    "name": {
     "description": "Name of the VpnServerConfigurationPolicyGroupMember.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VpnServerConfigurationPolicyGroupResponse": {
   "description": "VpnServerConfigurationPolicyGroup Resource.",
   "properties": {
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "isDefault": {
     "description": "Shows if this is a Default VpnServerConfigurationPolicyGroup or not.",
     "type": "boolean"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "p2SConnectionConfigurations": {
     "description": "List of references to P2SConnectionConfigurations.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "policyMembers": {
     "description": "Multiple PolicyMembers for VpnServerConfigurationPolicyGroup.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnServerConfigurationPolicyGroupMemberResponse",
      "type": "object"
     },
     "type": "array"
    },
    "priority": {
     "description": "Priority for VpnServerConfigurationPolicyGroup.",
     "type": "integer"
    },
    "provisioningState": {
     "description": "The provisioning state of the VpnServerConfigurationPolicyGroup resource.",
     "type": "string"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "p2SConnectionConfigurations",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VpnServerConfigurationProperties": {
   "description": "Parameters for VpnServerConfiguration.",
   "properties": {
    "aadAuthenticationParameters": {
     "$ref": "#/types/azure-native_network_v20230201:network:AadAuthenticationParameters",
     "description": "The set of aad vpn authentication parameters.",
     "type": "object"
    },
    "configurationPolicyGroups": {
     "description": "List of all VpnServerConfigurationPolicyGroups.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnServerConfigurationPolicyGroup",
      "type": "object"
     },
     "type": "array"
    },
    "name": {
     "description": "The name of the VpnServerConfiguration that is unique within a resource group.",
     "type": "string"
    },
    "radiusClientRootCertificates": {
     "description": "Radius client root certificate of VpnServerConfiguration.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnServerConfigRadiusClientRootCertificate",
      "type": "object"
     },
     "type": "array"
    },
    "radiusServerAddress": {
     "description": "The radius server address property of the VpnServerConfiguration resource for point to site client connection.",
     "type": "string"
    },
    "radiusServerRootCertificates": {
     "description": "Radius Server root certificate of VpnServerConfiguration.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnServerConfigRadiusServerRootCertificate",
      "type": "object"
     },
     "type": "array"
    },
    "radiusServerSecret": {
     "description": "The radius secret property of the VpnServerConfiguration resource for point to site client connection.",
     "type": "string"
    },
    "radiusServers": {
     "description": "Multiple Radius Server configuration for VpnServerConfiguration.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:RadiusServer",
      "type": "object"
     },
     "type": "array"
    },
    "vpnAuthenticationTypes": {
     "description": "VPN authentication types for the VpnServerConfiguration.",
     "items": {
      "oneOf": [
       {
        "type": "string"
       },
       {
        "$ref": "#/types/azure-native:network:VpnAuthenticationType"
       }
      ]
     },
     "type": "array"
    },
    "vpnClientIpsecPolicies": {
     "description": "VpnClientIpsecPolicies for VpnServerConfiguration.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IpsecPolicy",
      "type": "object"
     },
     "type": "array"
    },
    "vpnClientRevokedCertificates": {
     "description": "VPN client revoked certificate of VpnServerConfiguration.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnServerConfigVpnClientRevokedCertificate",
      "type": "object"
     },
     "type": "array"
    },
    "vpnClientRootCertificates": {
     "description": "VPN client root certificate of VpnServerConfiguration.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnServerConfigVpnClientRootCertificate",
      "type": "object"
     },
     "type": "array"
    },
    "vpnProtocols": {
     "description": "VPN protocols for the VpnServerConfiguration.",
     "items": {
      "oneOf": [
       {
        "type": "string"
       },
       {
        "$ref": "#/types/azure-native:network:VpnGatewayTunnelingProtocol"
       }
      ]
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VpnServerConfigurationPropertiesResponse": {
   "description": "Parameters for VpnServerConfiguration.",
   "properties": {
    "aadAuthenticationParameters": {
     "$ref": "#/types/azure-native_network_v20230201:network:AadAuthenticationParametersResponse",
     "description": "The set of aad vpn authentication parameters.",
     "type": "object"
    },
    "configurationPolicyGroups": {
     "description": "List of all VpnServerConfigurationPolicyGroups.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnServerConfigurationPolicyGroupResponse",
      "type": "object"
     },
     "type": "array"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "name": {
     "description": "The name of the VpnServerConfiguration that is unique within a resource group.",
     "type": "string"
    },
    "p2SVpnGateways": {
     "description": "List of references to P2SVpnGateways.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:P2SVpnGatewayResponse",
      "type": "object"
     },
     "type": "array"
    },
    "provisioningState": {
     "description": "The provisioning state of the VpnServerConfiguration resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.",
     "type": "string"
    },
    "radiusClientRootCertificates": {
     "description": "Radius client root certificate of VpnServerConfiguration.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnServerConfigRadiusClientRootCertificateResponse",
      "type": "object"
     },
     "type": "array"
    },
    "radiusServerAddress": {
     "description": "The radius server address property of the VpnServerConfiguration resource for point to site client connection.",
     "type": "string"
    },
    "radiusServerRootCertificates": {
     "description": "Radius Server root certificate of VpnServerConfiguration.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnServerConfigRadiusServerRootCertificateResponse",
      "type": "object"
     },
     "type": "array"
    },
    "radiusServerSecret": {
     "description": "The radius secret property of the VpnServerConfiguration resource for point to site client connection.",
     "type": "string"
    },
    "radiusServers": {
     "description": "Multiple Radius Server configuration for VpnServerConfiguration.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:RadiusServerResponse",
      "type": "object"
     },
     "type": "array"
    },
    "vpnAuthenticationTypes": {
     "description": "VPN authentication types for the VpnServerConfiguration.",
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "vpnClientIpsecPolicies": {
     "description": "VpnClientIpsecPolicies for VpnServerConfiguration.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IpsecPolicyResponse",
      "type": "object"
     },
     "type": "array"
    },
    "vpnClientRevokedCertificates": {
     "description": "VPN client revoked certificate of VpnServerConfiguration.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnServerConfigVpnClientRevokedCertificateResponse",
      "type": "object"
     },
     "type": "array"
    },
    "vpnClientRootCertificates": {
     "description": "VPN client root certificate of VpnServerConfiguration.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnServerConfigVpnClientRootCertificateResponse",
      "type": "object"
     },
     "type": "array"
    },
    "vpnProtocols": {
     "description": "VPN protocols for the VpnServerConfiguration.",
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "required": [
    "etag",
    "p2SVpnGateways",
    "provisioningState"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VpnSiteLink": {
   "description": "VpnSiteLink Resource.",
   "properties": {
    "bgpProperties": {
     "$ref": "#/types/azure-native_network_v20230201:network:VpnLinkBgpSettings",
     "description": "The set of bgp properties.",
     "type": "object"
    },
    "fqdn": {
     "description": "FQDN of vpn-site-link.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "ipAddress": {
     "description": "The ip-address for the vpn-site-link.",
     "type": "string"
    },
    "linkProperties": {
     "$ref": "#/types/azure-native_network_v20230201:network:VpnLinkProviderProperties",
     "description": "The link provider properties.",
     "type": "object"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VpnSiteLinkConnection": {
   "description": "VpnSiteLinkConnection Resource.",
   "properties": {
    "connectionBandwidth": {
     "description": "Expected bandwidth in MBPS.",
     "type": "integer"
    },
    "egressNatRules": {
     "description": "List of egress NatRules.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
      "type": "object"
     },
     "type": "array"
    },
    "enableBgp": {
     "description": "EnableBgp flag.",
     "type": "boolean"
    },
    "enableRateLimiting": {
     "description": "EnableBgp flag.",
     "type": "boolean"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "ingressNatRules": {
     "description": "List of ingress NatRules.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
      "type": "object"
     },
     "type": "array"
    },
    "ipsecPolicies": {
     "description": "The IPSec Policies to be considered by this connection.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IpsecPolicy",
      "type": "object"
     },
     "type": "array"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "routingWeight": {
     "description": "Routing weight for vpn connection.",
     "type": "integer"
    },
    "sharedKey": {
     "description": "SharedKey for the vpn connection.",
     "type": "string"
    },
    "useLocalAzureIpAddress": {
     "description": "Use local azure ip to initiate connection.",
     "type": "boolean"
    },
    "usePolicyBasedTrafficSelectors": {
     "description": "Enable policy-based traffic selectors.",
     "type": "boolean"
    },
    "vpnConnectionProtocolType": {
     "description": "Connection protocol used for this connection.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:VirtualNetworkGatewayConnectionProtocol"
      }
     ]
    },
    "vpnGatewayCustomBgpAddresses": {
     "description": "vpnGatewayCustomBgpAddresses used by this connection.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:GatewayCustomBgpIpAddressIpConfiguration",
      "type": "object"
     },
     "type": "array"
    },
    "vpnLinkConnectionMode": {
     "description": "Vpn link connection mode.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:VpnLinkConnectionMode"
      }
     ]
    },
    "vpnSiteLink": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "description": "Id of the connected vpn site link.",
     "type": "object"
    }
   },
   "type": "object"
  },
  "azure-native_network_v20230201:network:VpnSiteLinkConnectionResponse": {
   "description": "VpnSiteLinkConnection Resource.",
   "properties": {
    "connectionBandwidth": {
     "description": "Expected bandwidth in MBPS.",
     "type": "integer"
    },
    "connectionStatus": {
     "description": "The connection status.",
     "type": "string"
    },
    "egressBytesTransferred": {
     "description": "Egress bytes transferred.",
     "type": "number"
    },
    "egressNatRules": {
     "description": "List of egress NatRules.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "enableBgp": {
     "description": "EnableBgp flag.",
     "type": "boolean"
    },
    "enableRateLimiting": {
     "description": "EnableBgp flag.",
     "type": "boolean"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "ingressBytesTransferred": {
     "description": "Ingress bytes transferred.",
     "type": "number"
    },
    "ingressNatRules": {
     "description": "List of ingress NatRules.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     },
     "type": "array"
    },
    "ipsecPolicies": {
     "description": "The IPSec Policies to be considered by this connection.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IpsecPolicyResponse",
      "type": "object"
     },
     "type": "array"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the VPN site link connection resource.",
     "type": "string"
    },
    "routingWeight": {
     "description": "Routing weight for vpn connection.",
     "type": "integer"
    },
    "sharedKey": {
     "description": "SharedKey for the vpn connection.",
     "type": "string"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    },
    "useLocalAzureIpAddress": {
     "description": "Use local azure ip to initiate connection.",
     "type": "boolean"
    },
    "usePolicyBasedTrafficSelectors": {
     "description": "Enable policy-based traffic selectors.",
     "type": "boolean"
    },
    "vpnConnectionProtocolType": {
     "description": "Connection protocol used for this connection.",
     "type": "string"
    },
    "vpnGatewayCustomBgpAddresses": {
     "description": "vpnGatewayCustomBgpAddresses used by this connection.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:GatewayCustomBgpIpAddressIpConfigurationResponse",
      "type": "object"
     },
     "type": "array"
    },
    "vpnLinkConnectionMode": {
     "description": "Vpn link connection mode.",
     "type": "string"
    },
    "vpnSiteLink": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "description": "Id of the connected vpn site link.",
     "type": "object"
    }
   },
   "required": [
    "connectionStatus",
    "egressBytesTransferred",
    "etag",
    "ingressBytesTransferred",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:VpnSiteLinkResponse": {
   "description": "VpnSiteLink Resource.",
   "properties": {
    "bgpProperties": {
     "$ref": "#/types/azure-native_network_v20230201:network:VpnLinkBgpSettingsResponse",
     "description": "The set of bgp properties.",
     "type": "object"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "fqdn": {
     "description": "FQDN of vpn-site-link.",
     "type": "string"
    },
    "id": {
     "description": "Resource ID.",
     "type": "string"
    },
    "ipAddress": {
     "description": "The ip-address for the vpn-site-link.",
     "type": "string"
    },
    "linkProperties": {
     "$ref": "#/types/azure-native_network_v20230201:network:VpnLinkProviderPropertiesResponse",
     "description": "The link provider properties.",
     "type": "object"
    },
    "name": {
     "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
     "type": "string"
    },
    "provisioningState": {
     "description": "The provisioning state of the VPN site link resource.",
     "type": "string"
    },
    "type": {
     "description": "Resource type.",
     "type": "string"
    }
   },
   "required": [
    "etag",
    "provisioningState",
    "type"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:WebApplicationFirewallCustomRule": {
   "description": "Defines contents of a web application rule.",
   "properties": {
    "action": {
     "description": "Type of Actions.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:WebApplicationFirewallAction"
      }
     ]
    },
    "groupByUserSession": {
     "description": "List of user session identifier group by clauses.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:GroupByUserSession",
      "type": "object"
     },
     "type": "array"
    },
    "matchConditions": {
     "description": "List of match conditions.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:MatchCondition",
      "type": "object"
     },
     "type": "array"
    },
    "name": {
     "description": "The name of the resource that is unique within a policy. This name can be used to access the resource.",
     "type": "string"
    },
    "priority": {
     "description": "Priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.",
     "type": "integer"
    },
    "rateLimitDuration": {
     "description": "Duration over which Rate Limit policy will be applied. Applies only when ruleType is RateLimitRule.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ApplicationGatewayFirewallRateLimitDuration"
      }
     ]
    },
    "rateLimitThreshold": {
     "description": "Rate Limit threshold to apply in case ruleType is RateLimitRule. Must be greater than or equal to 1",
     "type": "integer"
    },
    "ruleType": {
     "description": "The rule type.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:WebApplicationFirewallRuleType"
      }
     ]
    },
    "state": {
     "description": "Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:WebApplicationFirewallState"
      }
     ]
    }
   },
   "required": [
    "action",
    "matchConditions",
    "priority",
    "ruleType"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:WebApplicationFirewallCustomRuleResponse": {
   "description": "Defines contents of a web application rule.",
   "properties": {
    "action": {
     "description": "Type of Actions.",
     "type": "string"
    },
    "etag": {
     "description": "A unique read-only string that changes whenever the resource is updated.",
     "type": "string"
    },
    "groupByUserSession": {
     "description": "List of user session identifier group by clauses.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:GroupByUserSessionResponse",
      "type": "object"
     },
     "type": "array"
    },
    "matchConditions": {
     "description": "List of match conditions.",
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:MatchConditionResponse",
      "type": "object"
     },
     "type": "array"
    },
    "name": {
     "description": "The name of the resource that is unique within a policy. This name can be used to access the resource.",
     "type": "string"
    },
    "priority": {
     "description": "Priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.",
     "type": "integer"
    },
    "rateLimitDuration": {
     "description": "Duration over which Rate Limit policy will be applied. Applies only when ruleType is RateLimitRule.",
     "type": "string"
    },
    "rateLimitThreshold": {
     "description": "Rate Limit threshold to apply in case ruleType is RateLimitRule. Must be greater than or equal to 1",
     "type": "integer"
    },
    "ruleType": {
     "description": "The rule type.",
     "type": "string"
    },
    "state": {
     "description": "Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.",
     "type": "string"
    }
   },
   "required": [
    "action",
    "etag",
    "matchConditions",
    "priority",
    "ruleType"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:WebApplicationFirewallScrubbingRules": {
   "description": "Allow certain variables to be scrubbed on WAF logs",
   "properties": {
    "matchVariable": {
     "description": "The variable to be scrubbed from the logs.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ScrubbingRuleEntryMatchVariable"
      }
     ]
    },
    "selector": {
     "description": "When matchVariable is a collection, operator used to specify which elements in the collection this rule applies to.",
     "type": "string"
    },
    "selectorMatchOperator": {
     "description": "When matchVariable is a collection, operate on the selector to specify which elements in the collection this rule applies to.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ScrubbingRuleEntryMatchOperator"
      }
     ]
    },
    "state": {
     "description": "Defines the state of log scrubbing rule. Default value is Enabled.",
     "oneOf": [
      {
       "type": "string"
      },
      {
       "$ref": "#/types/azure-native:network:ScrubbingRuleEntryState"
      }
     ]
    }
   },
   "required": [
    "matchVariable",
    "selectorMatchOperator"
   ],
   "type": "object"
  },
  "azure-native_network_v20230201:network:WebApplicationFirewallScrubbingRulesResponse": {
   "description": "Allow certain variables to be scrubbed on WAF logs",
   "properties": {
    "matchVariable": {
     "description": "The variable to be scrubbed from the logs.",
     "type": "string"
    },
    "selector": {
     "description": "When matchVariable is a collection, operator used to specify which elements in the collection this rule applies to.",
     "type": "string"
    },
    "selectorMatchOperator": {
     "description": "When matchVariable is a collection, operate on the selector to specify which elements in the collection this rule applies to.",
     "type": "string"
    },
    "state": {
     "description": "Defines the state of log scrubbing rule. Default value is Enabled.",
     "type": "string"
    }
   },
   "required": [
    "matchVariable",
    "selectorMatchOperator"
   ],
   "type": "object"
  }
 }
}
---

[TestVnetGen - 2]
{
 "invokes": {
  "azure-native:network:getAdminRule": {
   "GET": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkManagerName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "configurationName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "ruleCollectionName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "ruleName",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/securityAdminConfigurations/{configurationName}/ruleCollections/{ruleCollectionName}/rules/{ruleName}",
   "response": {
    "access": {
     "containers": [
      "properties"
     ]
    },
    "description": {
     "containers": [
      "properties"
     ]
    },
    "destinationPortRanges": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "destinations": {
     "arrayIdentifiers": [
      "addressPrefix"
     ],
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AddressPrefixItemResponse",
      "type": "object"
     }
    },
    "direction": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "kind": {
     "const": "Custom"
    },
    "name": {},
    "priority": {
     "containers": [
      "properties"
     ]
    },
    "protocol": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "sourcePortRanges": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "sources": {
     "arrayIdentifiers": [
      "addressPrefix"
     ],
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AddressPrefixItemResponse",
      "type": "object"
     }
    },
    "systemData": {
     "$ref": "#/types/azure-native_network_v20230201:network:SystemDataResponse"
    },
    "type": {}
   }
  },
  "azure-native:network:getAdminRuleCollection": {
   "GET": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkManagerName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "configurationName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "ruleCollectionName",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/securityAdminConfigurations/{configurationName}/ruleCollections/{ruleCollectionName}",
   "response": {
    "appliesToGroups": {
     "arrayIdentifiers": [
      "networkGroupId"
     ],
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkManagerSecurityGroupItemResponse",
      "type": "object"
     }
    },
    "description": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "systemData": {
     "$ref": "#/types/azure-native_network_v20230201:network:SystemDataResponse"
    },
    "type": {}
   }
  },
  "azure-native:network:getApplicationGateway": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "applicationGatewayName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}",
   "response": {
    "authenticationCertificates": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayAuthenticationCertificateResponse",
      "type": "object"
     }
    },
    "autoscaleConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayAutoscaleConfigurationResponse",
     "containers": [
      "properties"
     ]
    },
    "backendAddressPools": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayBackendAddressPoolResponse",
      "type": "object"
     }
    },
    "backendHttpSettingsCollection": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayBackendHttpSettingsResponse",
      "type": "object"
     }
    },
    "backendSettingsCollection": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayBackendSettingsResponse",
      "type": "object"
     }
    },
    "customErrorConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayCustomErrorResponse",
      "type": "object"
     }
    },
    "defaultPredefinedSslPolicy": {
     "containers": [
      "properties"
     ]
    },
    "enableFips": {
     "containers": [
      "properties"
     ]
    },
    "enableHttp2": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "firewallPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "forceFirewallPolicyAssociation": {
     "containers": [
      "properties"
     ]
    },
    "frontendIPConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayFrontendIPConfigurationResponse",
      "type": "object"
     }
    },
    "frontendPorts": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayFrontendPortResponse",
      "type": "object"
     }
    },
    "gatewayIPConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayIPConfigurationResponse",
      "type": "object"
     }
    },
    "globalConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayGlobalConfigurationResponse",
     "containers": [
      "properties"
     ]
    },
    "httpListeners": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayHttpListenerResponse",
      "type": "object"
     }
    },
    "id": {},
    "identity": {
     "$ref": "#/types/azure-native_network_v20230201:network:ManagedServiceIdentityResponse"
    },
    "listeners": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayListenerResponse",
      "type": "object"
     }
    },
    "loadDistributionPolicies": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayLoadDistributionPolicyResponse",
      "type": "object"
     }
    },
    "location": {},
    "name": {},
    "operationalState": {
     "containers": [
      "properties"
     ]
    },
    "privateEndpointConnections": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayPrivateEndpointConnectionResponse",
      "type": "object"
     }
    },
    "privateLinkConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayPrivateLinkConfigurationResponse",
      "type": "object"
     }
    },
    "probes": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayProbeResponse",
      "type": "object"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "redirectConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayRedirectConfigurationResponse",
      "type": "object"
     }
    },
    "requestRoutingRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayRequestRoutingRuleResponse",
      "type": "object"
     }
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "rewriteRuleSets": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayRewriteRuleSetResponse",
      "type": "object"
     }
    },
    "routingRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayRoutingRuleResponse",
      "type": "object"
     }
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewaySkuResponse",
     "containers": [
      "properties"
     ]
    },
    "sslCertificates": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewaySslCertificateResponse",
      "type": "object"
     }
    },
    "sslPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewaySslPolicyResponse",
     "containers": [
      "properties"
     ]
    },
    "sslProfiles": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewaySslProfileResponse",
      "type": "object"
     }
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "trustedClientCertificates": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayTrustedClientCertificateResponse",
      "type": "object"
     }
    },
    "trustedRootCertificates": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayTrustedRootCertificateResponse",
      "type": "object"
     }
    },
    "type": {},
    "urlPathMaps": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayUrlPathMapResponse",
      "type": "object"
     }
    },
    "webApplicationFirewallConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayWebApplicationFirewallConfigurationResponse",
     "containers": [
      "properties"
     ]
    },
    "zones": {
     "items": {
      "type": "string"
     }
    }
   }
  },
  "azure-native:network:getApplicationGatewayPrivateEndpointConnection": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "applicationGatewayName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "connectionName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/privateEndpointConnections/{connectionName}",
   "response": {
    "etag": {},
    "id": {},
    "linkIdentifier": {
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "privateEndpoint": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateEndpointResponse",
     "containers": [
      "properties"
     ]
    },
    "privateLinkServiceConnectionState": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceConnectionStateResponse",
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native:network:getApplicationSecurityGroup": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "applicationSecurityGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationSecurityGroups/{applicationSecurityGroupName}",
   "response": {
    "etag": {},
    "id": {},
    "location": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native:network:getAzureFirewall": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "azureFirewallName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/azureFirewalls/{azureFirewallName}",
   "response": {
    "additionalProperties": {
     "additionalProperties": {
      "type": "string"
     },
     "containers": [
      "properties"
     ]
    },
    "applicationRuleCollections": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallApplicationRuleCollectionResponse",
      "type": "object"
     }
    },
    "etag": {},
    "firewallPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "hubIPAddresses": {
     "$ref": "#/types/azure-native_network_v20230201:network:HubIPAddressesResponse",
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "ipConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallIPConfigurationResponse",
      "type": "object"
     }
    },
    "ipGroups": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallIpGroupsResponse",
      "type": "object"
     }
    },
    "location": {},
    "managementIpConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallIPConfigurationResponse",
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "natRuleCollections": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallNatRuleCollectionResponse",
      "type": "object"
     }
    },
    "networkRuleCollections": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallNetworkRuleCollectionResponse",
      "type": "object"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallSkuResponse",
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "threatIntelMode": {
     "containers": [
      "properties"
     ]
    },
    "type": {},
    "virtualHub": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "zones": {
     "items": {
      "type": "string"
     }
    }
   }
  },
  "azure-native:network:getBastionHost": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "bastionHostName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/bastionHosts/{bastionHostName}",
   "response": {
    "disableCopyPaste": {
     "containers": [
      "properties"
     ],
     "default": false
    },
    "dnsName": {
     "containers": [
      "properties"
     ]
    },
    "enableFileCopy": {
     "containers": [
      "properties"
     ],
     "default": false
    },
    "enableIpConnect": {
     "containers": [
      "properties"
     ],
     "default": false
    },
    "enableKerberos": {
     "containers": [
      "properties"
     ],
     "default": false
    },
    "enableShareableLink": {
     "containers": [
      "properties"
     ],
     "default": false
    },
    "enableTunneling": {
     "containers": [
      "properties"
     ],
     "default": false
    },
    "etag": {},
    "id": {},
    "ipConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:BastionHostIPConfigurationResponse",
      "type": "object"
     }
    },
    "location": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "scaleUnits": {
     "containers": [
      "properties"
     ]
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:SkuResponse"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native:network:getConfigurationPolicyGroup": {
   "GET": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "vpnServerConfigurationName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "configurationPolicyGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnServerConfigurations/{vpnServerConfigurationName}/configurationPolicyGroups/{configurationPolicyGroupName}",
   "response": {
    "etag": {},
    "id": {},
    "isDefault": {
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "p2SConnectionConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "policyMembers": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnServerConfigurationPolicyGroupMemberResponse",
      "type": "object"
     }
    },
    "priority": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native:network:getConnectionMonitor": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkWatcherName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "connectionMonitorName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors/{connectionMonitorName}",
   "response": {
    "autoStart": {
     "containers": [
      "properties"
     ],
     "default": true
    },
    "connectionMonitorType": {
     "containers": [
      "properties"
     ]
    },
    "destination": {
     "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorDestinationResponse",
     "containers": [
      "properties"
     ]
    },
    "endpoints": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorEndpointResponse",
      "type": "object"
     }
    },
    "etag": {},
    "id": {},
    "location": {},
    "monitoringIntervalInSeconds": {
     "containers": [
      "properties"
     ],
     "default": 60
    },
    "monitoringStatus": {
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "notes": {
     "containers": [
      "properties"
     ]
    },
    "outputs": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorOutputResponse",
      "type": "object"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "source": {
     "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorSourceResponse",
     "containers": [
      "properties"
     ]
    },
    "startTime": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "testConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorTestConfigurationResponse",
      "type": "object"
     }
    },
    "testGroups": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorTestGroupResponse",
      "type": "object"
     }
    },
    "type": {}
   }
  },
  "azure-native:network:getConnectivityConfiguration": {
   "GET": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkManagerName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "configurationName",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/connectivityConfigurations/{configurationName}",
   "response": {
    "appliesToGroups": {
     "arrayIdentifiers": [
      "networkGroupId"
     ],
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConnectivityGroupItemResponse",
      "type": "object"
     }
    },
    "connectivityTopology": {
     "containers": [
      "properties"
     ]
    },
    "deleteExistingPeering": {
     "containers": [
      "properties"
     ]
    },
    "description": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "hubs": {
     "arrayIdentifiers": [
      "resourceId"
     ],
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:HubResponse",
      "type": "object"
     }
    },
    "id": {},
    "isGlobal": {
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "systemData": {
     "$ref": "#/types/azure-native_network_v20230201:network:SystemDataResponse"
    },
    "type": {}
   }
  },
  "azure-native:network:getCustomIPPrefix": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "customIpPrefixName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "query",
     "name": "$expand",
     "value": {
      "sdkName": "expand",
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/customIpPrefixes/{customIpPrefixName}",
   "response": {
    "asn": {
     "containers": [
      "properties"
     ]
    },
    "authorizationMessage": {
     "containers": [
      "properties"
     ]
    },
    "childCustomIpPrefixes": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "cidr": {
     "containers": [
      "properties"
     ]
    },
    "commissionedState": {
     "containers": [
      "properties"
     ]
    },
    "customIpPrefixParent": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "expressRouteAdvertise": {
     "containers": [
      "properties"
     ]
    },
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse"
    },
    "failedReason": {
     "containers": [
      "properties"
     ]
    },
    "geo": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "location": {},
    "name": {},
    "noInternetAdvertise": {
     "containers": [
      "properties"
     ]
    },
    "prefixType": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "publicIpPrefixes": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "signedMessage": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {},
    "zones": {
     "items": {
      "type": "string"
     }
    }
   }
  },
  "azure-native:network:getDdosCustomPolicy": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "ddosCustomPolicyName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ddosCustomPolicies/{ddosCustomPolicyName}",
   "response": {
    "etag": {},
    "id": {},
    "location": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native:network:getDdosProtectionPlan": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "ddosProtectionPlanName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ddosProtectionPlans/{ddosProtectionPlanName}",
   "response": {
    "etag": {},
    "id": {},
    "location": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "publicIPAddresses": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {},
    "virtualNetworks": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    }
   }
  },
  "azure-native:network:getDefaultAdminRule": {
   "GET": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkManagerName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "configurationName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "ruleCollectionName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "ruleName",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/securityAdminConfigurations/{configurationName}/ruleCollections/{ruleCollectionName}/rules/{ruleName}",
   "response": {
    "access": {
     "containers": [
      "properties"
     ]
    },
    "description": {
     "containers": [
      "properties"
     ]
    },
    "destinationPortRanges": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "destinations": {
     "arrayIdentifiers": [
      "addressPrefix"
     ],
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AddressPrefixItemResponse",
      "type": "object"
     }
    },
    "direction": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "flag": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "kind": {
     "const": "Default"
    },
    "name": {},
    "priority": {
     "containers": [
      "properties"
     ]
    },
    "protocol": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "sourcePortRanges": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "sources": {
     "arrayIdentifiers": [
      "addressPrefix"
     ],
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AddressPrefixItemResponse",
      "type": "object"
     }
    },
    "systemData": {
     "$ref": "#/types/azure-native_network_v20230201:network:SystemDataResponse"
    },
    "type": {}
   }
  },
  "azure-native:network:getDscpConfiguration": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "dscpConfigurationName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dscpConfigurations/{dscpConfigurationName}",
   "response": {
    "associatedNetworkInterfaces": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceResponse",
      "type": "object"
     }
    },
    "destinationIpRanges": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:QosIpRangeResponse",
      "type": "object"
     }
    },
    "destinationPortRanges": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:QosPortRangeResponse",
      "type": "object"
     }
    },
    "etag": {},
    "id": {},
    "location": {},
    "markings": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "integer"
     }
    },
    "name": {},
    "protocol": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "qosCollectionId": {
     "containers": [
      "properties"
     ]
    },
    "qosDefinitionCollection": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:QosDefinitionResponse",
      "type": "object"
     }
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "sourceIpRanges": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:QosIpRangeResponse",
      "type": "object"
     }
    },
    "sourcePortRanges": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:QosPortRangeResponse",
      "type": "object"
     }
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native:network:getExpressRouteCircuit": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "circuitName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}",
   "response": {
    "allowClassicOperations": {
     "containers": [
      "properties"
     ]
    },
    "authorizationKey": {
     "containers": [
      "properties"
     ]
    },
    "authorizationStatus": {
     "containers": [
      "properties"
     ]
    },
    "authorizations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitAuthorizationResponse",
      "type": "object"
     }
    },
    "bandwidthInGbps": {
     "containers": [
      "properties"
     ]
    },
    "circuitProvisioningState": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "expressRoutePort": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "gatewayManagerEtag": {
     "containers": [
      "properties"
     ]
    },
    "globalReachEnabled": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "location": {},
    "name": {},
    "peerings": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitPeeringResponse",
      "type": "object"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "serviceKey": {
     "containers": [
      "properties"
     ]
    },
    "serviceProviderNotes": {
     "containers": [
      "properties"
     ]
    },
    "serviceProviderProperties": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitServiceProviderPropertiesResponse",
     "containers": [
      "properties"
     ]
    },
    "serviceProviderProvisioningState": {
     "containers": [
      "properties"
     ]
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitSkuResponse"
    },
    "stag": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native:network:getExpressRouteCircuitAuthorization": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "circuitName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "authorizationName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations/{authorizationName}",
   "response": {
    "authorizationKey": {
     "containers": [
      "properties"
     ]
    },
    "authorizationUseStatus": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native:network:getExpressRouteCircuitConnection": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "circuitName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "peeringName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "connectionName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/connections/{connectionName}",
   "response": {
    "addressPrefix": {
     "containers": [
      "properties"
     ]
    },
    "authorizationKey": {
     "containers": [
      "properties"
     ]
    },
    "circuitConnectionStatus": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "expressRouteCircuitPeering": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "ipv6CircuitConnectionConfig": {
     "$ref": "#/types/azure-native_network_v20230201:network:Ipv6CircuitConnectionConfigResponse",
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "peerExpressRouteCircuitPeering": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native:network:getExpressRouteCircuitPeering": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "circuitName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "peeringName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}",
   "response": {
    "azureASN": {
     "containers": [
      "properties"
     ]
    },
    "connections": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitConnectionResponse",
      "type": "object"
     }
    },
    "etag": {},
    "expressRouteConnection": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteConnectionIdResponse",
     "containers": [
      "properties"
     ]
    },
    "gatewayManagerEtag": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "ipv6PeeringConfig": {
     "$ref": "#/types/azure-native_network_v20230201:network:Ipv6ExpressRouteCircuitPeeringConfigResponse",
     "containers": [
      "properties"
     ]
    },
    "lastModifiedBy": {
     "containers": [
      "properties"
     ]
    },
    "microsoftPeeringConfig": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitPeeringConfigResponse",
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "peerASN": {
     "containers": [
      "properties"
     ]
    },
    "peeredConnections": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PeerExpressRouteCircuitConnectionResponse",
      "type": "object"
     }
    },
    "peeringType": {
     "containers": [
      "properties"
     ]
    },
    "primaryAzurePort": {
     "containers": [
      "properties"
     ]
    },
    "primaryPeerAddressPrefix": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "routeFilter": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "secondaryAzurePort": {
     "containers": [
      "properties"
     ]
    },
    "secondaryPeerAddressPrefix": {
     "containers": [
      "properties"
     ]
    },
    "sharedKey": {
     "containers": [
      "properties"
     ]
    },
    "state": {
     "containers": [
      "properties"
     ]
    },
    "stats": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitStatsResponse",
     "containers": [
      "properties"
     ]
    },
    "type": {},
    "vlanId": {
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native:network:getExpressRouteConnection": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "expressRouteGatewayName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "connectionName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}/expressRouteConnections/{connectionName}",
   "response": {
    "authorizationKey": {
     "containers": [
      "properties"
     ]
    },
    "enableInternetSecurity": {
     "containers": [
      "properties"
     ]
    },
    "enablePrivateLinkFastPath": {
     "containers": [
      "properties"
     ]
    },
    "expressRouteCircuitPeering": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitPeeringIdResponse",
     "containers": [
      "properties"
     ]
    },
    "expressRouteGatewayBypass": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "routingConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfigurationResponse",
     "containers": [
      "properties"
     ]
    },
    "routingWeight": {
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native:network:getExpressRouteCrossConnectionPeering": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "crossConnectionName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "peeringName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCrossConnections/{crossConnectionName}/peerings/{peeringName}",
   "response": {
    "azureASN": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "gatewayManagerEtag": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "ipv6PeeringConfig": {
     "$ref": "#/types/azure-native_network_v20230201:network:Ipv6ExpressRouteCircuitPeeringConfigResponse",
     "containers": [
      "properties"
     ]
    },
    "lastModifiedBy": {
     "containers": [
      "properties"
     ]
    },
    "microsoftPeeringConfig": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitPeeringConfigResponse",
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "peerASN": {
     "containers": [
      "properties"
     ]
    },
    "peeringType": {
     "containers": [
      "properties"
     ]
    },
    "primaryAzurePort": {
     "containers": [
      "properties"
     ]
    },
    "primaryPeerAddressPrefix": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "secondaryAzurePort": {
     "containers": [
      "properties"
     ]
    },
    "secondaryPeerAddressPrefix": {
     "containers": [
      "properties"
     ]
    },
    "sharedKey": {
     "containers": [
      "properties"
     ]
    },
    "state": {
     "containers": [
      "properties"
     ]
    },
    "vlanId": {
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native:network:getExpressRouteGateway": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "expressRouteGatewayName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}",
   "response": {
    "allowNonVirtualWanTraffic": {
     "containers": [
      "properties"
     ]
    },
    "autoScaleConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteGatewayPropertiesResponseAutoScaleConfiguration",
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "expressRouteConnections": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteConnectionResponse",
      "type": "object"
     }
    },
    "id": {},
    "location": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {},
    "virtualHub": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualHubIdResponse",
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native:network:getExpressRoutePort": {
   "GET": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "expressRoutePortName",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ExpressRoutePorts/{expressRoutePortName}",
   "response": {
    "allocationDate": {
     "containers": [
      "properties"
     ]
    },
    "bandwidthInGbps": {
     "containers": [
      "properties"
     ]
    },
    "billingType": {
     "containers": [
      "properties"
     ]
    },
    "circuits": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "encapsulation": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "etherType": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "identity": {
     "$ref": "#/types/azure-native_network_v20230201:network:ManagedServiceIdentityResponse"
    },
    "links": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteLinkResponse",
      "type": "object"
     }
    },
    "location": {},
    "mtu": {
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "peeringLocation": {
     "containers": [
      "properties"
     ]
    },
    "provisionedBandwidthInGbps": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native:network:getExpressRoutePortAuthorization": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "expressRoutePortName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "authorizationName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRoutePorts/{expressRoutePortName}/authorizations/{authorizationName}",
   "response": {
    "authorizationKey": {
     "containers": [
      "properties"
     ]
    },
    "authorizationUseStatus": {
     "containers": [
      "properties"
     ]
    },
    "circuitResourceUri": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native:network:getFirewallPolicy": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "firewallPolicyName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "query",
     "name": "$expand",
     "value": {
      "sdkName": "expand",
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}",
   "response": {
    "basePolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "childPolicies": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "dnsSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:DnsSettingsResponse",
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "explicitProxy": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExplicitProxyResponse",
     "containers": [
      "properties"
     ]
    },
    "firewalls": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "id": {},
    "identity": {
     "$ref": "#/types/azure-native_network_v20230201:network:ManagedServiceIdentityResponse"
    },
    "insights": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyInsightsResponse",
     "containers": [
      "properties"
     ]
    },
    "intrusionDetection": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyIntrusionDetectionResponse",
     "containers": [
      "properties"
     ]
    },
    "location": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "ruleCollectionGroups": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicySkuResponse",
     "containers": [
      "properties"
     ]
    },
    "snat": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicySNATResponse",
     "containers": [
      "properties"
     ]
    },
    "sql": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicySQLResponse",
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "threatIntelMode": {
     "containers": [
      "properties"
     ]
    },
    "threatIntelWhitelist": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyThreatIntelWhitelistResponse",
     "containers": [
      "properties"
     ]
    },
    "transportSecurity": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyTransportSecurityResponse",
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native:network:getFirewallPolicyRuleCollectionGroup": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "firewallPolicyName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "ruleCollectionGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/ruleCollectionGroups/{ruleCollectionGroupName}",
   "response": {
    "etag": {},
    "id": {},
    "name": {},
    "priority": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "ruleCollections": {
     "containers": [
      "properties"
     ],
     "items": {
      "oneOf": [
       "#/types/azure-native_network_v20230201:network:FirewallPolicyFilterRuleCollectionResponse",
       "#/types/azure-native_network_v20230201:network:FirewallPolicyNatRuleCollectionResponse"
      ]
     }
    },
    "type": {}
   }
  },
  "azure-native:network:getFlowLog": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkWatcherName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "flowLogName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/flowLogs/{flowLogName}",
   "response": {
    "enabled": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "flowAnalyticsConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:TrafficAnalyticsPropertiesResponse",
     "containers": [
      "properties"
     ]
    },
    "format": {
     "$ref": "#/types/azure-native_network_v20230201:network:FlowLogFormatParametersResponse",
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "location": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "retentionPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:RetentionPolicyParametersResponse",
     "containers": [
      "properties"
     ]
    },
    "storageId": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "targetResourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "targetResourceId": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native:network:getHubRouteTable": {
   "GET": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "virtualHubName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "routeTableName",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/hubRouteTables/{routeTableName}",
   "response": {
    "associatedConnections": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "etag": {},
    "id": {},
    "labels": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "name": {},
    "propagatingConnections": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "routes": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:HubRouteResponse",
      "type": "object"
     }
    },
    "type": {}
   }
  },
  "azure-native:network:getHubVirtualNetworkConnection": {
   "GET": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "virtualHubName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "connectionName",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/hubVirtualNetworkConnections/{connectionName}",
   "response": {
    "allowHubToRemoteVnetTransit": {
     "containers": [
      "properties"
     ]
    },
    "allowRemoteVnetToUseHubVnetGateways": {
     "containers": [
      "properties"
     ]
    },
    "enableInternetSecurity": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "remoteVirtualNetwork": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "routingConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfigurationResponse",
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native:network:getInboundNatRule": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "loadBalancerName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "inboundNatRuleName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "query",
     "name": "$expand",
     "value": {
      "sdkName": "expand",
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/inboundNatRules/{inboundNatRuleName}",
   "response": {
    "backendAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "backendIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceIPConfigurationResponse",
     "containers": [
      "properties"
     ]
    },
    "backendPort": {
     "containers": [
      "properties"
     ]
    },
    "enableFloatingIP": {
     "containers": [
      "properties"
     ]
    },
    "enableTcpReset": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "frontendIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "frontendPort": {
     "containers": [
      "properties"
     ]
    },
    "frontendPortRangeEnd": {
     "containers": [
      "properties"
     ]
    },
    "frontendPortRangeStart": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "idleTimeoutInMinutes": {
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "protocol": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native:network:getIpAllocation": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "ipAllocationName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "query",
     "name": "$expand",
     "value": {
      "sdkName": "expand",
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/IpAllocations/{ipAllocationName}",
   "response": {
    "allocationTags": {
     "additionalProperties": {
      "type": "string"
     },
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "ipamAllocationId": {
     "containers": [
      "properties"
     ]
    },
    "location": {},
    "name": {},
    "prefix": {
     "containers": [
      "properties"
     ]
    },
    "prefixLength": {
     "containers": [
      "properties"
     ],
     "default": 0
    },
    "prefixType": {
     "containers": [
      "properties"
     ]
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {},
    "virtualNetwork": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native:network:getIpGroup": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "ipGroupsName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "query",
     "name": "$expand",
     "value": {
      "sdkName": "expand",
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ipGroups/{ipGroupsName}",
   "response": {
    "etag": {},
    "firewallPolicies": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "firewalls": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "id": {},
    "ipAddresses": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "location": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native:network:getLoadBalancer": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "loadBalancerName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "query",
     "name": "$expand",
     "value": {
      "sdkName": "expand",
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}",
   "response": {
    "backendAddressPools": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:BackendAddressPoolResponse",
      "type": "object"
     }
    },
    "etag": {},
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse"
    },
    "frontendIPConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:FrontendIPConfigurationResponse",
      "type": "object"
     }
    },
    "id": {},
    "inboundNatPools": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:InboundNatPoolResponse",
      "type": "object"
     }
    },
    "inboundNatRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:InboundNatRuleResponse",
      "type": "object"
     }
    },
    "loadBalancingRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:LoadBalancingRuleResponse",
      "type": "object"
     }
    },
    "location": {},
    "name": {},
    "outboundRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:OutboundRuleResponse",
      "type": "object"
     }
    },
    "probes": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ProbeResponse",
      "type": "object"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:LoadBalancerSkuResponse"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native:network:getLoadBalancerBackendAddressPool": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "loadBalancerName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "backendAddressPoolName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/backendAddressPools/{backendAddressPoolName}",
   "response": {
    "backendIPConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceIPConfigurationResponse",
      "type": "object"
     }
    },
    "drainPeriodInSeconds": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "inboundNatRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "loadBalancerBackendAddresses": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:LoadBalancerBackendAddressResponse",
      "type": "object"
     }
    },
    "loadBalancingRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "location": {
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "outboundRule": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "outboundRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "tunnelInterfaces": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:GatewayLoadBalancerTunnelInterfaceResponse",
      "type": "object"
     }
    },
    "type": {},
    "virtualNetwork": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native:network:getLocalNetworkGateway": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "localNetworkGatewayName",
     "required": true,
     "value": {
      "minLength": 1,
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}",
   "response": {
    "bgpSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:BgpSettingsResponse",
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "fqdn": {
     "containers": [
      "properties"
     ]
    },
    "gatewayIpAddress": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "localNetworkAddressSpace": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpaceResponse",
     "containers": [
      "properties"
     ]
    },
    "location": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native:network:getManagementGroupNetworkManagerConnection": {
   "GET": [
    {
     "location": "path",
     "name": "managementGroupId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkManagerConnectionName",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Network/networkManagerConnections/{networkManagerConnectionName}",
   "response": {
    "description": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "name": {},
    "networkManagerId": {
     "containers": [
      "properties"
     ]
    },
    "systemData": {
     "$ref": "#/types/azure-native_network_v20230201:network:SystemDataResponse"
    },
    "type": {}
   }
  },
  "azure-native:network:getNatGateway": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "natGatewayName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "query",
     "name": "$expand",
     "value": {
      "sdkName": "expand",
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/natGateways/{natGatewayName}",
   "response": {
    "etag": {},
    "id": {},
    "idleTimeoutInMinutes": {
     "containers": [
      "properties"
     ]
    },
    "location": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "publicIpAddresses": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "publicIpPrefixes": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:NatGatewaySkuResponse"
    },
    "subnets": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {},
    "zones": {
     "items": {
      "type": "string"
     }
    }
   }
  },
  "azure-native:network:getNatRule": {
   "GET": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "gatewayName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "natRuleName",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/natRules/{natRuleName}",
   "response": {
    "egressVpnSiteLinkConnections": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "etag": {},
    "externalMappings": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnNatRuleMappingResponse",
      "type": "object"
     }
    },
    "id": {},
    "ingressVpnSiteLinkConnections": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "internalMappings": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnNatRuleMappingResponse",
      "type": "object"
     }
    },
    "ipConfigurationId": {
     "containers": [
      "properties"
     ]
    },
    "mode": {
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native:network:getNetworkGroup": {
   "GET": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkManagerName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/networkGroups/{networkGroupName}",
   "response": {
    "description": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "systemData": {
     "$ref": "#/types/azure-native_network_v20230201:network:SystemDataResponse"
    },
    "type": {}
   }
  },
  "azure-native:network:getNetworkInterface": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkInterfaceName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "query",
     "name": "$expand",
     "value": {
      "sdkName": "expand",
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}",
   "response": {
    "auxiliaryMode": {
     "containers": [
      "properties"
     ]
    },
    "auxiliarySku": {
     "containers": [
      "properties"
     ]
    },
    "disableTcpStateTracking": {
     "containers": [
      "properties"
     ]
    },
    "dnsSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceDnsSettingsResponse",
     "containers": [
      "properties"
     ]
    },
    "dscpConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "enableAcceleratedNetworking": {
     "containers": [
      "properties"
     ]
    },
    "enableIPForwarding": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse"
    },
    "hostedWorkloads": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "id": {},
    "ipConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceIPConfigurationResponse",
      "type": "object"
     }
    },
    "location": {},
    "macAddress": {
     "containers": [
      "properties"
     ]
    },
    "migrationPhase": {
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "networkSecurityGroup": {
     "$ref": "#/types/azure-native_network_v20230201:network:NetworkSecurityGroupResponse",
     "containers": [
      "properties"
     ]
    },
    "nicType": {
     "containers": [
      "properties"
     ]
    },
    "primary": {
     "containers": [
      "properties"
     ]
    },
    "privateEndpoint": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateEndpointResponse",
     "containers": [
      "properties"
     ]
    },
    "privateLinkService": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceResponse",
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "tapConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceTapConfigurationResponse",
      "type": "object"
     }
    },
    "type": {},
    "virtualMachine": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "vnetEncryptionSupported": {
     "containers": [
      "properties"
     ]
    },
    "workloadType": {
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native:network:getNetworkInterfaceTapConfiguration": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkInterfaceName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "tapConfigurationName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/tapConfigurations/{tapConfigurationName}",
   "response": {
    "etag": {},
    "id": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {},
    "virtualNetworkTap": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkTapResponse",
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native:network:getNetworkManager": {
   "GET": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkManagerName",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}",
   "response": {
    "description": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "location": {},
    "name": {},
    "networkManagerScopeAccesses": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "networkManagerScopes": {
     "$ref": "#/types/azure-native_network_v20230201:network:NetworkManagerPropertiesResponseNetworkManagerScopes",
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "systemData": {
     "$ref": "#/types/azure-native_network_v20230201:network:SystemDataResponse"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native:network:getNetworkProfile": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkProfileName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "query",
     "name": "$expand",
     "value": {
      "sdkName": "expand",
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkProfiles/{networkProfileName}",
   "response": {
    "containerNetworkInterfaceConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ContainerNetworkInterfaceConfigurationResponse",
      "type": "object"
     }
    },
    "containerNetworkInterfaces": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ContainerNetworkInterfaceResponse",
      "type": "object"
     }
    },
    "etag": {},
    "id": {},
    "location": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native:network:getNetworkSecurityGroup": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkSecurityGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "query",
     "name": "$expand",
     "value": {
      "sdkName": "expand",
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}",
   "response": {
    "defaultSecurityRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SecurityRuleResponse",
      "type": "object"
     }
    },
    "etag": {},
    "flowLogs": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:FlowLogResponse",
      "type": "object"
     }
    },
    "flushConnection": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "location": {},
    "name": {},
    "networkInterfaces": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceResponse",
      "type": "object"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "securityRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SecurityRuleResponse",
      "type": "object"
     }
    },
    "subnets": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubnetResponse",
      "type": "object"
     }
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native:network:getNetworkVirtualAppliance": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkVirtualApplianceName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "query",
     "name": "$expand",
     "value": {
      "sdkName": "expand",
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}",
   "response": {
    "additionalNics": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualApplianceAdditionalNicPropertiesResponse",
      "type": "object"
     }
    },
    "addressPrefix": {
     "containers": [
      "properties"
     ]
    },
    "bootStrapConfigurationBlobs": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "cloudInitConfiguration": {
     "containers": [
      "properties"
     ]
    },
    "cloudInitConfigurationBlobs": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "delegation": {
     "$ref": "#/types/azure-native_network_v20230201:network:DelegationPropertiesResponse",
     "containers": [
      "properties"
     ]
    },
    "deploymentType": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "identity": {
     "$ref": "#/types/azure-native_network_v20230201:network:ManagedServiceIdentityResponse"
    },
    "inboundSecurityRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "location": {},
    "name": {},
    "nvaSku": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualApplianceSkuPropertiesResponse",
     "containers": [
      "properties"
     ]
    },
    "partnerManagedResource": {
     "$ref": "#/types/azure-native_network_v20230201:network:PartnerManagedResourcePropertiesResponse",
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "sshPublicKey": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {},
    "virtualApplianceAsn": {
     "containers": [
      "properties"
     ]
    },
    "virtualApplianceConnections": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "virtualApplianceNics": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualApplianceNicPropertiesResponse",
      "type": "object"
     }
    },
    "virtualApplianceSites": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "virtualHub": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native:network:getNetworkVirtualApplianceConnection": {
   "GET": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkVirtualApplianceName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "connectionName",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}/networkVirtualApplianceConnections/{connectionName}",
   "response": {
    "id": {},
    "name": {},
    "properties": {
     "$ref": "#/types/azure-native_network_v20230201:network:NetworkVirtualApplianceConnectionPropertiesResponse"
    }
   }
  },
  "azure-native:network:getNetworkWatcher": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkWatcherName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}",
   "response": {
    "etag": {},
    "id": {},
    "location": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native:network:getP2sVpnGateway": {
   "GET": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "gatewayName",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/p2svpnGateways/{gatewayName}",
   "response": {
    "customDnsServers": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "etag": {},
    "id": {},
    "isRoutingPreferenceInternet": {
     "containers": [
      "properties"
     ]
    },
    "location": {},
    "name": {},
    "p2SConnectionConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:P2SConnectionConfigurationResponse",
      "type": "object"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {},
    "virtualHub": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "vpnClientConnectionHealth": {
     "$ref": "#/types/azure-native_network_v20230201:network:VpnClientConnectionHealthResponse",
     "containers": [
      "properties"
     ]
    },
    "vpnGatewayScaleUnit": {
     "containers": [
      "properties"
     ]
    },
    "vpnServerConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native:network:getPacketCapture": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkWatcherName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "packetCaptureName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}",
   "response": {
    "bytesToCapturePerPacket": {
     "containers": [
      "properties"
     ],
     "default": 0
    },
    "etag": {},
    "filters": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PacketCaptureFilterResponse",
      "type": "object"
     }
    },
    "id": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "scope": {
     "$ref": "#/types/azure-native_network_v20230201:network:PacketCaptureMachineScopeResponse",
     "containers": [
      "properties"
     ]
    },
    "storageLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:PacketCaptureStorageLocationResponse",
     "containers": [
      "properties"
     ]
    },
    "target": {
     "containers": [
      "properties"
     ]
    },
    "targetType": {
     "containers": [
      "properties"
     ]
    },
    "timeLimitInSeconds": {
     "containers": [
      "properties"
     ],
     "default": 18000
    },
    "totalBytesPerSession": {
     "containers": [
      "properties"
     ],
     "default": 1073741824
    }
   }
  },
  "azure-native:network:getPrivateDnsZoneGroup": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "privateEndpointName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "privateDnsZoneGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateEndpoints/{privateEndpointName}/privateDnsZoneGroups/{privateDnsZoneGroupName}",
   "response": {
    "etag": {},
    "id": {},
    "name": {},
    "privateDnsZoneConfigs": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateDnsZoneConfigResponse",
      "type": "object"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native:network:getPrivateEndpoint": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "privateEndpointName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "query",
     "name": "$expand",
     "value": {
      "sdkName": "expand",
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateEndpoints/{privateEndpointName}",
   "response": {
    "applicationSecurityGroups": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationSecurityGroupResponse",
      "type": "object"
     }
    },
    "customDnsConfigs": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:CustomDnsConfigPropertiesFormatResponse",
      "type": "object"
     }
    },
    "customNetworkInterfaceName": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse"
    },
    "id": {},
    "ipConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateEndpointIPConfigurationResponse",
      "type": "object"
     }
    },
    "location": {},
    "manualPrivateLinkServiceConnections": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceConnectionResponse",
      "type": "object"
     }
    },
    "name": {},
    "networkInterfaces": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceResponse",
      "type": "object"
     }
    },
    "privateLinkServiceConnections": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceConnectionResponse",
      "type": "object"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubnetResponse",
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native:network:getPrivateLinkService": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "serviceName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "query",
     "name": "$expand",
     "value": {
      "sdkName": "expand",
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateLinkServices/{serviceName}",
   "response": {
    "alias": {
     "containers": [
      "properties"
     ]
    },
    "autoApproval": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServicePropertiesResponseAutoApproval",
     "containers": [
      "properties"
     ]
    },
    "enableProxyProtocol": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse"
    },
    "fqdns": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "id": {},
    "ipConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceIpConfigurationResponse",
      "type": "object"
     }
    },
    "loadBalancerFrontendIpConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:FrontendIPConfigurationResponse",
      "type": "object"
     }
    },
    "location": {},
    "name": {},
    "networkInterfaces": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceResponse",
      "type": "object"
     }
    },
    "privateEndpointConnections": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateEndpointConnectionResponse",
      "type": "object"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {},
    "visibility": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServicePropertiesResponseVisibility",
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native:network:getPrivateLinkServicePrivateEndpointConnection": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "serviceName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "peConnectionName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "query",
     "name": "$expand",
     "value": {
      "sdkName": "expand",
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateLinkServices/{serviceName}/privateEndpointConnections/{peConnectionName}",
   "response": {
    "etag": {},
    "id": {},
    "linkIdentifier": {
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "privateEndpoint": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateEndpointResponse",
     "containers": [
      "properties"
     ]
    },
    "privateEndpointLocation": {
     "containers": [
      "properties"
     ]
    },
    "privateLinkServiceConnectionState": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceConnectionStateResponse",
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native:network:getPublicIPAddress": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "publicIpAddressName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "query",
     "name": "$expand",
     "value": {
      "sdkName": "expand",
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}",
   "response": {
    "ddosSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:DdosSettingsResponse",
     "containers": [
      "properties"
     ]
    },
    "deleteOption": {
     "containers": [
      "properties"
     ]
    },
    "dnsSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddressDnsSettingsResponse",
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse"
    },
    "id": {},
    "idleTimeoutInMinutes": {
     "containers": [
      "properties"
     ]
    },
    "ipAddress": {
     "containers": [
      "properties"
     ]
    },
    "ipConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:IPConfigurationResponse",
     "containers": [
      "properties"
     ]
    },
    "ipTags": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IpTagResponse",
      "type": "object"
     }
    },
    "linkedPublicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddressResponse",
     "containers": [
      "properties"
     ]
    },
    "location": {},
    "migrationPhase": {
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "natGateway": {
     "$ref": "#/types/azure-native_network_v20230201:network:NatGatewayResponse",
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "publicIPAddressVersion": {
     "containers": [
      "properties"
     ]
    },
    "publicIPAllocationMethod": {
     "containers": [
      "properties"
     ]
    },
    "publicIPPrefix": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "servicePublicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddressResponse",
     "containers": [
      "properties"
     ]
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddressSkuResponse"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {},
    "zones": {
     "items": {
      "type": "string"
     }
    }
   }
  },
  "azure-native:network:getPublicIPPrefix": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "publicIpPrefixName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "query",
     "name": "$expand",
     "value": {
      "sdkName": "expand",
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIpPrefixName}",
   "response": {
    "customIPPrefix": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse"
    },
    "id": {},
    "ipPrefix": {
     "containers": [
      "properties"
     ]
    },
    "ipTags": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IpTagResponse",
      "type": "object"
     }
    },
    "loadBalancerFrontendIpConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "location": {},
    "name": {},
    "natGateway": {
     "$ref": "#/types/azure-native_network_v20230201:network:NatGatewayResponse",
     "containers": [
      "properties"
     ]
    },
    "prefixLength": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "publicIPAddressVersion": {
     "containers": [
      "properties"
     ]
    },
    "publicIPAddresses": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ReferencedPublicIpAddressResponse",
      "type": "object"
     }
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPPrefixSkuResponse"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {},
    "zones": {
     "items": {
      "type": "string"
     }
    }
   }
  },
  "azure-native:network:getRoute": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "routeTableName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "routeName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}",
   "response": {
    "addressPrefix": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "hasBgpOverride": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "name": {},
    "nextHopIpAddress": {
     "containers": [
      "properties"
     ]
    },
    "nextHopType": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native:network:getRouteFilter": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "routeFilterName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "query",
     "name": "$expand",
     "value": {
      "sdkName": "expand",
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}",
   "response": {
    "etag": {},
    "id": {},
    "ipv6Peerings": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitPeeringResponse",
      "type": "object"
     }
    },
    "location": {},
    "name": {},
    "peerings": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitPeeringResponse",
      "type": "object"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "rules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:RouteFilterRuleResponse",
      "type": "object"
     }
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native:network:getRouteFilterRule": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "routeFilterName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "ruleName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}",
   "response": {
    "access": {
     "containers": [
      "properties"
     ]
    },
    "communities": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "etag": {},
    "id": {},
    "location": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "routeFilterRuleType": {
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native:network:getRouteMap": {
   "GET": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "virtualHubName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "routeMapName",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routeMaps/{routeMapName}",
   "response": {
    "associatedInboundConnections": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "associatedOutboundConnections": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "etag": {},
    "id": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "rules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:RouteMapRuleResponse",
      "type": "object"
     }
    },
    "type": {}
   }
  },
  "azure-native:network:getRouteTable": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "routeTableName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "query",
     "name": "$expand",
     "value": {
      "sdkName": "expand",
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}",
   "response": {
    "disableBgpRoutePropagation": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "location": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "routes": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:RouteResponse",
      "type": "object"
     }
    },
    "subnets": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubnetResponse",
      "type": "object"
     }
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native:network:getRoutingIntent": {
   "GET": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "virtualHubName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "routingIntentName",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routingIntent/{routingIntentName}",
   "response": {
    "etag": {},
    "id": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "routingPolicies": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:RoutingPolicyResponse",
      "type": "object"
     }
    },
    "type": {}
   }
  },
  "azure-native:network:getScopeConnection": {
   "GET": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkManagerName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "scopeConnectionName",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/scopeConnections/{scopeConnectionName}",
   "response": {
    "description": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "name": {},
    "resourceId": {
     "containers": [
      "properties"
     ]
    },
    "systemData": {
     "$ref": "#/types/azure-native_network_v20230201:network:SystemDataResponse"
    },
    "tenantId": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native:network:getSecurityAdminConfiguration": {
   "GET": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkManagerName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "configurationName",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/securityAdminConfigurations/{configurationName}",
   "response": {
    "applyOnNetworkIntentPolicyBasedServices": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "description": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "systemData": {
     "$ref": "#/types/azure-native_network_v20230201:network:SystemDataResponse"
    },
    "type": {}
   }
  },
  "azure-native:network:getSecurityPartnerProvider": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "securityPartnerProviderName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/securityPartnerProviders/{securityPartnerProviderName}",
   "response": {
    "connectionStatus": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "location": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "securityProviderName": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {},
    "virtualHub": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native:network:getSecurityRule": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkSecurityGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "securityRuleName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}/securityRules/{securityRuleName}",
   "response": {
    "access": {
     "containers": [
      "properties"
     ]
    },
    "description": {
     "containers": [
      "properties"
     ]
    },
    "destinationAddressPrefix": {
     "containers": [
      "properties"
     ]
    },
    "destinationAddressPrefixes": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "destinationApplicationSecurityGroups": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationSecurityGroupResponse",
      "type": "object"
     }
    },
    "destinationPortRange": {
     "containers": [
      "properties"
     ]
    },
    "destinationPortRanges": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "direction": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "name": {},
    "priority": {
     "containers": [
      "properties"
     ]
    },
    "protocol": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "sourceAddressPrefix": {
     "containers": [
      "properties"
     ]
    },
    "sourceAddressPrefixes": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "sourceApplicationSecurityGroups": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationSecurityGroupResponse",
      "type": "object"
     }
    },
    "sourcePortRange": {
     "containers": [
      "properties"
     ]
    },
    "sourcePortRanges": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native:network:getServiceEndpointPolicy": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "serviceEndpointPolicyName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "query",
     "name": "$expand",
     "value": {
      "sdkName": "expand",
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies/{serviceEndpointPolicyName}",
   "response": {
    "contextualServiceEndpointPolicies": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "etag": {},
    "id": {},
    "kind": {},
    "location": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "serviceAlias": {
     "containers": [
      "properties"
     ]
    },
    "serviceEndpointPolicyDefinitions": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ServiceEndpointPolicyDefinitionResponse",
      "type": "object"
     }
    },
    "subnets": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubnetResponse",
      "type": "object"
     }
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native:network:getServiceEndpointPolicyDefinition": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "serviceEndpointPolicyName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "serviceEndpointPolicyDefinitionName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies/{serviceEndpointPolicyName}/serviceEndpointPolicyDefinitions/{serviceEndpointPolicyDefinitionName}",
   "response": {
    "description": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "service": {
     "containers": [
      "properties"
     ]
    },
    "serviceResources": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native:network:getStaticMember": {
   "GET": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkManagerName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "staticMemberName",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/networkGroups/{networkGroupName}/staticMembers/{staticMemberName}",
   "response": {
    "etag": {},
    "id": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "region": {
     "containers": [
      "properties"
     ]
    },
    "resourceId": {
     "containers": [
      "properties"
     ]
    },
    "systemData": {
     "$ref": "#/types/azure-native_network_v20230201:network:SystemDataResponse"
    },
    "type": {}
   }
  },
  "azure-native:network:getSubnet": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "virtualNetworkName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subnetName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "query",
     "name": "$expand",
     "value": {
      "sdkName": "expand",
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}",
   "response": {
    "addressPrefix": {
     "containers": [
      "properties"
     ]
    },
    "addressPrefixes": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "applicationGatewayIPConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayIPConfigurationResponse",
      "type": "object"
     }
    },
    "delegations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:DelegationResponse",
      "type": "object"
     }
    },
    "etag": {},
    "id": {},
    "ipAllocations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "ipConfigurationProfiles": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IPConfigurationProfileResponse",
      "type": "object"
     }
    },
    "ipConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IPConfigurationResponse",
      "type": "object"
     }
    },
    "name": {},
    "natGateway": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "networkSecurityGroup": {
     "$ref": "#/types/azure-native_network_v20230201:network:NetworkSecurityGroupResponse",
     "containers": [
      "properties"
     ]
    },
    "privateEndpointNetworkPolicies": {
     "containers": [
      "properties"
     ],
     "default": "Disabled"
    },
    "privateEndpoints": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateEndpointResponse",
      "type": "object"
     }
    },
    "privateLinkServiceNetworkPolicies": {
     "containers": [
      "properties"
     ],
     "default": "Enabled"
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "purpose": {
     "containers": [
      "properties"
     ]
    },
    "resourceNavigationLinks": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ResourceNavigationLinkResponse",
      "type": "object"
     }
    },
    "routeTable": {
     "$ref": "#/types/azure-native_network_v20230201:network:RouteTableResponse",
     "containers": [
      "properties"
     ]
    },
    "serviceAssociationLinks": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ServiceAssociationLinkResponse",
      "type": "object"
     }
    },
    "serviceEndpointPolicies": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ServiceEndpointPolicyResponse",
      "type": "object"
     }
    },
    "serviceEndpoints": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ServiceEndpointPropertiesFormatResponse",
      "type": "object"
     }
    },
    "type": {}
   }
  },
  "azure-native:network:getSubscriptionNetworkManagerConnection": {
   "GET": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkManagerConnectionName",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkManagerConnections/{networkManagerConnectionName}",
   "response": {
    "description": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "name": {},
    "networkManagerId": {
     "containers": [
      "properties"
     ]
    },
    "systemData": {
     "$ref": "#/types/azure-native_network_v20230201:network:SystemDataResponse"
    },
    "type": {}
   }
  },
  "azure-native:network:getVirtualApplianceSite": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkVirtualApplianceName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "siteName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}/virtualApplianceSites/{siteName}",
   "response": {
    "addressPrefix": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "name": {},
    "o365Policy": {
     "$ref": "#/types/azure-native_network_v20230201:network:Office365PolicyPropertiesResponse",
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native:network:getVirtualHub": {
   "GET": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "virtualHubName",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}",
   "response": {
    "addressPrefix": {
     "containers": [
      "properties"
     ]
    },
    "allowBranchToBranchTraffic": {
     "containers": [
      "properties"
     ]
    },
    "azureFirewall": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "bgpConnections": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "etag": {},
    "expressRouteGateway": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "hubRoutingPreference": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "ipConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "kind": {},
    "location": {},
    "name": {},
    "p2SVpnGateway": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "preferredRoutingGateway": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "routeMaps": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "routeTable": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualHubRouteTableResponse",
     "containers": [
      "properties"
     ]
    },
    "routingState": {
     "containers": [
      "properties"
     ]
    },
    "securityPartnerProvider": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "securityProviderName": {
     "containers": [
      "properties"
     ]
    },
    "sku": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {},
    "virtualHubRouteTableV2s": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualHubRouteTableV2Response",
      "type": "object"
     }
    },
    "virtualRouterAsn": {
     "containers": [
      "properties"
     ]
    },
    "virtualRouterAutoScaleConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualRouterAutoScaleConfigurationResponse",
     "containers": [
      "properties"
     ]
    },
    "virtualRouterIps": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "virtualWan": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "vpnGateway": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native:network:getVirtualHubBgpConnection": {
   "GET": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "virtualHubName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "connectionName",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/bgpConnections/{connectionName}",
   "response": {
    "connectionState": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "hubVirtualNetworkConnection": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "name": {},
    "peerAsn": {
     "containers": [
      "properties"
     ]
    },
    "peerIp": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native:network:getVirtualHubIpConfiguration": {
   "GET": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "virtualHubName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "ipConfigName",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/ipConfigurations/{ipConfigName}",
   "response": {
    "etag": {},
    "id": {},
    "name": {},
    "privateIPAddress": {
     "containers": [
      "properties"
     ]
    },
    "privateIPAllocationMethod": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "publicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddressResponse",
     "containers": [
      "properties"
     ]
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubnetResponse",
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native:network:getVirtualHubRouteTableV2": {
   "GET": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "virtualHubName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "routeTableName",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routeTables/{routeTableName}",
   "response": {
    "attachedConnections": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "etag": {},
    "id": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "routes": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualHubRouteV2Response",
      "type": "object"
     }
    }
   }
  },
  "azure-native:network:getVirtualNetwork": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "virtualNetworkName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "query",
     "name": "$expand",
     "value": {
      "sdkName": "expand",
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}",
   "response": {
    "addressSpace": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpaceResponse",
     "containers": [
      "properties"
     ]
    },
    "bgpCommunities": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkBgpCommunitiesResponse",
     "containers": [
      "properties"
     ]
    },
    "ddosProtectionPlan": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "dhcpOptions": {
     "$ref": "#/types/azure-native_network_v20230201:network:DhcpOptionsResponse",
     "containers": [
      "properties"
     ]
    },
    "enableDdosProtection": {
     "containers": [
      "properties"
     ],
     "default": false
    },
    "enableVmProtection": {
     "containers": [
      "properties"
     ],
     "default": false
    },
    "encryption": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkEncryptionResponse",
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse"
    },
    "flowLogs": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:FlowLogResponse",
      "type": "object"
     }
    },
    "flowTimeoutInMinutes": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "ipAllocations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "location": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "subnets": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubnetResponse",
      "type": "object"
     }
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {},
    "virtualNetworkPeerings": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkPeeringResponse",
      "type": "object"
     }
    }
   }
  },
  "azure-native:network:getVirtualNetworkGateway": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "virtualNetworkGatewayName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}",
   "response": {
    "activeActive": {
     "containers": [
      "properties"
     ]
    },
    "adminState": {
     "containers": [
      "properties"
     ]
    },
    "allowRemoteVnetTraffic": {
     "containers": [
      "properties"
     ]
    },
    "allowVirtualWanTraffic": {
     "containers": [
      "properties"
     ]
    },
    "bgpSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:BgpSettingsResponse",
     "containers": [
      "properties"
     ]
    },
    "customRoutes": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpaceResponse",
     "containers": [
      "properties"
     ]
    },
    "disableIPSecReplayProtection": {
     "containers": [
      "properties"
     ]
    },
    "enableBgp": {
     "containers": [
      "properties"
     ]
    },
    "enableBgpRouteTranslationForNat": {
     "containers": [
      "properties"
     ]
    },
    "enableDnsForwarding": {
     "containers": [
      "properties"
     ]
    },
    "enablePrivateIpAddress": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse"
    },
    "gatewayDefaultSite": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "gatewayType": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "inboundDnsForwardingEndpoint": {
     "containers": [
      "properties"
     ]
    },
    "ipConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewayIPConfigurationResponse",
      "type": "object"
     }
    },
    "location": {},
    "name": {},
    "natRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewayNatRuleResponse",
      "type": "object"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewaySkuResponse",
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {},
    "vNetExtendedLocationResourceId": {
     "containers": [
      "properties"
     ]
    },
    "virtualNetworkGatewayPolicyGroups": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewayPolicyGroupResponse",
      "type": "object"
     }
    },
    "vpnClientConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:VpnClientConfigurationResponse",
     "containers": [
      "properties"
     ]
    },
    "vpnGatewayGeneration": {
     "containers": [
      "properties"
     ]
    },
    "vpnType": {
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native:network:getVirtualNetworkGatewayConnection": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "virtualNetworkGatewayConnectionName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}",
   "response": {
    "authorizationKey": {
     "containers": [
      "properties"
     ]
    },
    "connectionMode": {
     "containers": [
      "properties"
     ]
    },
    "connectionProtocol": {
     "containers": [
      "properties"
     ]
    },
    "connectionStatus": {
     "containers": [
      "properties"
     ]
    },
    "connectionType": {
     "containers": [
      "properties"
     ]
    },
    "dpdTimeoutSeconds": {
     "containers": [
      "properties"
     ]
    },
    "egressBytesTransferred": {
     "containers": [
      "properties"
     ]
    },
    "egressNatRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "enableBgp": {
     "containers": [
      "properties"
     ]
    },
    "enablePrivateLinkFastPath": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "expressRouteGatewayBypass": {
     "containers": [
      "properties"
     ]
    },
    "gatewayCustomBgpIpAddresses": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:GatewayCustomBgpIpAddressIpConfigurationResponse",
      "type": "object"
     }
    },
    "id": {},
    "ingressBytesTransferred": {
     "containers": [
      "properties"
     ]
    },
    "ingressNatRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "ipsecPolicies": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IpsecPolicyResponse",
      "type": "object"
     }
    },
    "localNetworkGateway2": {
     "$ref": "#/types/azure-native_network_v20230201:network:LocalNetworkGatewayResponse",
     "containers": [
      "properties"
     ]
    },
    "location": {},
    "name": {},
    "peer": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "routingWeight": {
     "containers": [
      "properties"
     ]
    },
    "sharedKey": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "trafficSelectorPolicies": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:TrafficSelectorPolicyResponse",
      "type": "object"
     }
    },
    "tunnelConnectionStatus": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:TunnelConnectionHealthResponse",
      "type": "object"
     }
    },
    "type": {},
    "useLocalAzureIpAddress": {
     "containers": [
      "properties"
     ]
    },
    "usePolicyBasedTrafficSelectors": {
     "containers": [
      "properties"
     ]
    },
    "virtualNetworkGateway1": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewayResponse",
     "containers": [
      "properties"
     ]
    },
    "virtualNetworkGateway2": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewayResponse",
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native:network:getVirtualNetworkGatewayNatRule": {
   "GET": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "virtualNetworkGatewayName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "natRuleName",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/natRules/{natRuleName}",
   "response": {
    "etag": {},
    "externalMappings": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnNatRuleMappingResponse",
      "type": "object"
     }
    },
    "id": {},
    "internalMappings": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnNatRuleMappingResponse",
      "type": "object"
     }
    },
    "ipConfigurationId": {
     "containers": [
      "properties"
     ]
    },
    "mode": {
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native:network:getVirtualNetworkPeering": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "virtualNetworkName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "virtualNetworkPeeringName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/virtualNetworkPeerings/{virtualNetworkPeeringName}",
   "response": {
    "allowForwardedTraffic": {
     "containers": [
      "properties"
     ]
    },
    "allowGatewayTransit": {
     "containers": [
      "properties"
     ]
    },
    "allowVirtualNetworkAccess": {
     "containers": [
      "properties"
     ]
    },
    "doNotVerifyRemoteGateways": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "name": {},
    "peeringState": {
     "containers": [
      "properties"
     ]
    },
    "peeringSyncLevel": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "remoteAddressSpace": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpaceResponse",
     "containers": [
      "properties"
     ]
    },
    "remoteBgpCommunities": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkBgpCommunitiesResponse",
     "containers": [
      "properties"
     ]
    },
    "remoteVirtualNetwork": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "remoteVirtualNetworkAddressSpace": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpaceResponse",
     "containers": [
      "properties"
     ]
    },
    "remoteVirtualNetworkEncryption": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkEncryptionResponse",
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "type": {},
    "useRemoteGateways": {
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native:network:getVirtualNetworkTap": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "tapName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkTaps/{tapName}",
   "response": {
    "destinationLoadBalancerFrontEndIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:FrontendIPConfigurationResponse",
     "containers": [
      "properties"
     ]
    },
    "destinationNetworkInterfaceIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceIPConfigurationResponse",
     "containers": [
      "properties"
     ]
    },
    "destinationPort": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "location": {},
    "name": {},
    "networkInterfaceTapConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceTapConfigurationResponse",
      "type": "object"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native:network:getVirtualRouter": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "virtualRouterName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "query",
     "name": "$expand",
     "value": {
      "sdkName": "expand",
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualRouters/{virtualRouterName}",
   "response": {
    "etag": {},
    "hostedGateway": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "hostedSubnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "location": {},
    "name": {},
    "peerings": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {},
    "virtualRouterAsn": {
     "containers": [
      "properties"
     ]
    },
    "virtualRouterIps": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    }
   }
  },
  "azure-native:network:getVirtualRouterPeering": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "virtualRouterName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "peeringName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualRouters/{virtualRouterName}/peerings/{peeringName}",
   "response": {
    "etag": {},
    "id": {},
    "name": {},
    "peerAsn": {
     "containers": [
      "properties"
     ]
    },
    "peerIp": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native:network:getVirtualWan": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "VirtualWANName",
     "required": true,
     "value": {
      "sdkName": "virtualWANName",
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{VirtualWANName}",
   "response": {
    "allowBranchToBranchTraffic": {
     "containers": [
      "properties"
     ]
    },
    "allowVnetToVnetTraffic": {
     "containers": [
      "properties"
     ]
    },
    "disableVpnEncryption": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "location": {},
    "name": {},
    "office365LocalBreakoutCategory": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {},
    "virtualHubs": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "vpnSites": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    }
   }
  },
  "azure-native:network:getVpnConnection": {
   "GET": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "gatewayName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "connectionName",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/vpnConnections/{connectionName}",
   "response": {
    "connectionBandwidth": {
     "containers": [
      "properties"
     ]
    },
    "connectionStatus": {
     "containers": [
      "properties"
     ]
    },
    "dpdTimeoutSeconds": {
     "containers": [
      "properties"
     ]
    },
    "egressBytesTransferred": {
     "containers": [
      "properties"
     ]
    },
    "enableBgp": {
     "containers": [
      "properties"
     ]
    },
    "enableInternetSecurity": {
     "containers": [
      "properties"
     ]
    },
    "enableRateLimiting": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "ingressBytesTransferred": {
     "containers": [
      "properties"
     ]
    },
    "ipsecPolicies": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IpsecPolicyResponse",
      "type": "object"
     }
    },
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "remoteVpnSite": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "routingConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfigurationResponse",
     "containers": [
      "properties"
     ]
    },
    "routingWeight": {
     "containers": [
      "properties"
     ]
    },
    "sharedKey": {
     "containers": [
      "properties"
     ]
    },
    "trafficSelectorPolicies": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:TrafficSelectorPolicyResponse",
      "type": "object"
     }
    },
    "useLocalAzureIpAddress": {
     "containers": [
      "properties"
     ]
    },
    "usePolicyBasedTrafficSelectors": {
     "containers": [
      "properties"
     ]
    },
    "vpnConnectionProtocolType": {
     "containers": [
      "properties"
     ]
    },
    "vpnLinkConnections": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnSiteLinkConnectionResponse",
      "type": "object"
     }
    }
   }
  },
  "azure-native:network:getVpnGateway": {
   "GET": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "gatewayName",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}",
   "response": {
    "bgpSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:BgpSettingsResponse",
     "containers": [
      "properties"
     ]
    },
    "connections": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnConnectionResponse",
      "type": "object"
     }
    },
    "enableBgpRouteTranslationForNat": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "ipConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnGatewayIpConfigurationResponse",
      "type": "object"
     }
    },
    "isRoutingPreferenceInternet": {
     "containers": [
      "properties"
     ]
    },
    "location": {},
    "name": {},
    "natRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnGatewayNatRuleResponse",
      "type": "object"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {},
    "virtualHub": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "vpnGatewayScaleUnit": {
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native:network:getVpnServerConfiguration": {
   "GET": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "vpnServerConfigurationName",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnServerConfigurations/{vpnServerConfigurationName}",
   "response": {
    "etag": {},
    "id": {},
    "location": {},
    "name": {},
    "properties": {
     "$ref": "#/types/azure-native_network_v20230201:network:VpnServerConfigurationPropertiesResponse"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native:network:getVpnSite": {
   "GET": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "vpnSiteName",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnSites/{vpnSiteName}",
   "response": {
    "addressSpace": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpaceResponse",
     "containers": [
      "properties"
     ]
    },
    "bgpProperties": {
     "$ref": "#/types/azure-native_network_v20230201:network:BgpSettingsResponse",
     "containers": [
      "properties"
     ]
    },
    "deviceProperties": {
     "$ref": "#/types/azure-native_network_v20230201:network:DevicePropertiesResponse",
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "ipAddress": {
     "containers": [
      "properties"
     ]
    },
    "isSecuritySite": {
     "containers": [
      "properties"
     ]
    },
    "location": {},
    "name": {},
    "o365Policy": {
     "$ref": "#/types/azure-native_network_v20230201:network:O365PolicyPropertiesResponse",
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "siteKey": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {},
    "virtualWan": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "vpnSiteLinks": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnSiteLinkResponse",
      "type": "object"
     }
    }
   }
  },
  "azure-native:network:getWebApplicationFirewallPolicy": {
   "GET": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "policyName",
     "required": true,
     "value": {
      "maxLength": 128,
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "POST": null,
   "apiVersion": "2023-02-01",
   "isResourceGetter": true,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies/{policyName}",
   "response": {
    "applicationGateways": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayResponse",
      "type": "object"
     }
    },
    "customRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:WebApplicationFirewallCustomRuleResponse",
      "type": "object"
     }
    },
    "etag": {},
    "httpListeners": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "id": {},
    "location": {},
    "managedRules": {
     "$ref": "#/types/azure-native_network_v20230201:network:ManagedRulesDefinitionResponse",
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "pathBasedRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "policySettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:PolicySettingsResponse",
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceState": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:getActiveSessions": {
   "GET": null,
   "POST": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "bastionHostName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "isResourceGetter": false,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/bastionHosts/{bastionHostName}/getActiveSessions",
   "response": {
    "nextLink": {},
    "value": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:BastionActiveSessionResponse",
      "type": "object"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:getApplicationGatewayBackendHealthOnDemand": {
   "GET": null,
   "POST": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "applicationGatewayName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "query",
     "name": "$expand",
     "value": {
      "sdkName": "expand",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "backendAddressPool": {
        "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
        "type": "object"
       },
       "backendHttpSettings": {
        "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
        "type": "object"
       },
       "host": {
        "type": "string"
       },
       "match": {
        "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayProbeHealthResponseMatch",
        "type": "object"
       },
       "path": {
        "type": "string"
       },
       "pickHostNameFromBackendHttpSettings": {
        "type": "boolean"
       },
       "protocol": {
        "type": "string"
       },
       "timeout": {
        "type": "integer"
       }
      }
     },
     "location": "body",
     "name": "probeRequest",
     "required": true,
     "value": {}
    }
   ],
   "apiVersion": "2023-02-01",
   "isResourceGetter": false,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/getBackendHealthOnDemand",
   "response": {
    "backendAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayBackendAddressPoolResponse"
    },
    "backendHealthHttpSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayBackendHealthHttpSettingsResponse"
    }
   }
  },
  "azure-native_network_v20230201:network:getBastionShareableLink": {
   "GET": null,
   "POST": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "bastionHostName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "vms": {
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:BastionShareableLink",
         "type": "object"
        },
        "type": "array"
       }
      }
     },
     "location": "body",
     "name": "bslRequest",
     "required": true,
     "value": {}
    }
   ],
   "apiVersion": "2023-02-01",
   "isResourceGetter": false,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/bastionHosts/{bastionHostName}/getShareableLinks",
   "response": {
    "nextLink": {},
    "value": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:BastionShareableLinkResponse",
      "type": "object"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:getP2sVpnGatewayP2sVpnConnectionHealth": {
   "GET": null,
   "POST": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "gatewayName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "isResourceGetter": false,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/p2svpnGateways/{gatewayName}/getP2sVpnConnectionHealth",
   "response": {
    "customDnsServers": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "etag": {},
    "id": {},
    "isRoutingPreferenceInternet": {
     "containers": [
      "properties"
     ]
    },
    "location": {},
    "name": {},
    "p2SConnectionConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:P2SConnectionConfigurationResponse",
      "type": "object"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {},
    "virtualHub": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "vpnClientConnectionHealth": {
     "$ref": "#/types/azure-native_network_v20230201:network:VpnClientConnectionHealthResponse",
     "containers": [
      "properties"
     ]
    },
    "vpnGatewayScaleUnit": {
     "containers": [
      "properties"
     ]
    },
    "vpnServerConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native_network_v20230201:network:getP2sVpnGatewayP2sVpnConnectionHealthDetailed": {
   "GET": null,
   "POST": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "gatewayName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "outputBlobSasUrl": {
        "type": "string"
       },
       "vpnUserNamesFilter": {
        "items": {
         "type": "string"
        },
        "type": "array"
       }
      }
     },
     "location": "body",
     "name": "request",
     "required": true,
     "value": {}
    }
   ],
   "apiVersion": "2023-02-01",
   "isResourceGetter": false,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/p2svpnGateways/{gatewayName}/getP2sVpnConnectionHealthDetailed",
   "response": {
    "sasUrl": {}
   }
  },
  "azure-native_network_v20230201:network:getVirtualNetworkGatewayAdvertisedRoutes": {
   "GET": null,
   "POST": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "virtualNetworkGatewayName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "query",
     "name": "peer",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "isResourceGetter": false,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getAdvertisedRoutes",
   "response": {
    "value": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:GatewayRouteResponse",
      "type": "object"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:getVirtualNetworkGatewayBgpPeerStatus": {
   "GET": null,
   "POST": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "virtualNetworkGatewayName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "query",
     "name": "peer",
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "isResourceGetter": false,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getBgpPeerStatus",
   "response": {
    "value": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:BgpPeerStatusResponse",
      "type": "object"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:getVirtualNetworkGatewayConnectionIkeSas": {
   "GET": null,
   "POST": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "virtualNetworkGatewayConnectionName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "isResourceGetter": false,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/getikesas",
   "response": {
    "value": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:getVirtualNetworkGatewayLearnedRoutes": {
   "GET": null,
   "POST": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "virtualNetworkGatewayName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "isResourceGetter": false,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getLearnedRoutes",
   "response": {
    "value": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:GatewayRouteResponse",
      "type": "object"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:getVirtualNetworkGatewayVpnProfilePackageUrl": {
   "GET": null,
   "POST": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "virtualNetworkGatewayName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "isResourceGetter": false,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getvpnprofilepackageurl",
   "response": {
    "value": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:getVirtualNetworkGatewayVpnclientConnectionHealth": {
   "GET": null,
   "POST": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "virtualNetworkGatewayName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "isResourceGetter": false,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getVpnClientConnectionHealth",
   "response": {
    "value": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnClientConnectionHealthDetailResponse",
      "type": "object"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:getVirtualNetworkGatewayVpnclientIpsecParameters": {
   "GET": null,
   "POST": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "virtualNetworkGatewayName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "isResourceGetter": false,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getvpnclientipsecparameters",
   "response": {
    "dhGroup": {},
    "ikeEncryption": {},
    "ikeIntegrity": {},
    "ipsecEncryption": {},
    "ipsecIntegrity": {},
    "pfsGroup": {},
    "saDataSizeKilobytes": {},
    "saLifeTimeSeconds": {}
   }
  },
  "azure-native_network_v20230201:network:getVpnLinkConnectionIkeSas": {
   "GET": null,
   "POST": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "gatewayName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "connectionName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "linkConnectionName",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "isResourceGetter": false,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/vpnConnections/{connectionName}/vpnLinkConnections/{linkConnectionName}/getikesas",
   "response": {
    "value": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:listActiveConnectivityConfigurations": {
   "GET": null,
   "POST": [
    {
     "body": {
      "properties": {
       "regions": {
        "items": {
         "type": "string"
        },
        "type": "array"
       },
       "skipToken": {
        "type": "string"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkManagerName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "query",
     "name": "$top",
     "value": {
      "sdkName": "top",
      "type": "integer"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "isResourceGetter": false,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/listActiveConnectivityConfigurations",
   "response": {
    "skipToken": {},
    "value": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ActiveConnectivityConfigurationResponse",
      "type": "object"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:listActiveSecurityAdminRules": {
   "GET": null,
   "POST": [
    {
     "body": {
      "properties": {
       "regions": {
        "items": {
         "type": "string"
        },
        "type": "array"
       },
       "skipToken": {
        "type": "string"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkManagerName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "query",
     "name": "$top",
     "value": {
      "sdkName": "top",
      "type": "integer"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "isResourceGetter": false,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/listActiveSecurityAdminRules",
   "response": {
    "skipToken": {},
    "value": {
     "items": {
      "oneOf": [
       "#/types/azure-native_network_v20230201:network:ActiveDefaultSecurityAdminRuleResponse",
       "#/types/azure-native_network_v20230201:network:ActiveSecurityAdminRuleResponse"
      ]
     }
    }
   }
  },
  "azure-native_network_v20230201:network:listFirewallPolicyIdpsSignature": {
   "GET": null,
   "POST": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "firewallPolicyName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "filters": {
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:FilterItems",
         "type": "object"
        },
        "type": "array"
       },
       "orderBy": {
        "$ref": "#/types/azure-native_network_v20230201:network:OrderBy",
        "type": "object"
       },
       "resultsPerPage": {
        "maximum": 1000,
        "minimum": 1,
        "type": "integer"
       },
       "search": {
        "type": "string"
       },
       "skip": {
        "type": "integer"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    }
   ],
   "apiVersion": "2023-02-01",
   "isResourceGetter": false,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/listIdpsSignatures",
   "response": {
    "matchingRecordsCount": {},
    "signatures": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SingleQueryResultResponse",
      "type": "object"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:listFirewallPolicyIdpsSignaturesFilterValue": {
   "GET": null,
   "POST": [
    {
     "body": {
      "properties": {
       "filterName": {
        "type": "string"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "firewallPolicyName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "isResourceGetter": false,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/listIdpsFilterOptions",
   "response": {
    "filterValues": {
     "items": {
      "type": "string"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:listNetworkManagerDeploymentStatus": {
   "GET": null,
   "POST": [
    {
     "body": {
      "properties": {
       "deploymentTypes": {
        "items": {
         "type": "string"
        },
        "type": "array"
       },
       "regions": {
        "items": {
         "type": "string"
        },
        "type": "array"
       },
       "skipToken": {
        "type": "string"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkManagerName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "query",
     "name": "$top",
     "value": {
      "sdkName": "top",
      "type": "integer"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "isResourceGetter": false,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/listDeploymentStatus",
   "response": {
    "skipToken": {},
    "value": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkManagerDeploymentStatusResponse",
      "type": "object"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:listNetworkManagerEffectiveConnectivityConfigurations": {
   "GET": null,
   "POST": [
    {
     "body": {
      "properties": {
       "skipToken": {
        "type": "string"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "virtualNetworkName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "query",
     "name": "$top",
     "value": {
      "sdkName": "top",
      "type": "integer"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "isResourceGetter": false,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/listNetworkManagerEffectiveConnectivityConfigurations",
   "response": {
    "skipToken": {},
    "value": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:EffectiveConnectivityConfigurationResponse",
      "type": "object"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:listNetworkManagerEffectiveSecurityAdminRules": {
   "GET": null,
   "POST": [
    {
     "body": {
      "properties": {
       "skipToken": {
        "type": "string"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "virtualNetworkName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "query",
     "name": "$top",
     "value": {
      "sdkName": "top",
      "type": "integer"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "isResourceGetter": false,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/listNetworkManagerEffectiveSecurityAdminRules",
   "response": {
    "skipToken": {},
    "value": {
     "items": {
      "oneOf": [
       "#/types/azure-native_network_v20230201:network:EffectiveDefaultSecurityAdminRuleResponse",
       "#/types/azure-native_network_v20230201:network:EffectiveSecurityAdminRuleResponse"
      ]
     }
    }
   }
  }
 },
 "resources": {
  "azure-native:keyvault:AccessPolicy": {
   "PUT": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "vaultName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "policy.objectId",
     "value": {
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "policy": {
        "type": "#/types/azure-native:keyvault:AccessPolicyEntry"
       }
      },
      "required": [
       "resourceGroupName",
       "vaultName",
       "policy"
      ]
     },
     "location": "body",
     "name": "properties",
     "value": null
    }
   ],
   "apiVersion": "",
   "defaultBody": null,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/accessPolicy/{policy.objectId}",
   "response": null
  },
  "azure-native:storage:Blob": {
   "PUT": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "accountName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "containerName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "blobName",
     "required": true,
     "value": {
      "autoname": "copy",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "accessTier": {
        "type": "string"
       },
       "contentMd5": {
        "forceNew": true,
        "type": "string"
       },
       "contentType": {
        "type": "string"
       },
       "metadata": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       },
       "source": {
        "$ref": "pulumi.json#/Asset",
        "forceNew": true
       },
       "type": {
        "forceNew": true,
        "type": "string"
       }
      },
      "required": [
       "resourceGroupName",
       "accountName",
       "containerName",
       "blobName",
       "type"
      ]
     },
     "location": "body",
     "name": "properties",
     "value": null
    }
   ],
   "apiVersion": "",
   "defaultBody": null,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/blobs/{blobName}",
   "response": null
  },
  "azure-native:storage:BlobContainerLegalHold": {
   "PUT": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "accountName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "containerName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "allowProtectedAppendWritesAll": {
        "type": "boolean"
       },
       "tags": {
        "items": {
         "type": "string"
        },
        "type": "array"
       }
      },
      "required": [
       "resourceGroupName",
       "accountName",
       "containerName",
       "tags"
      ]
     },
     "location": "body",
     "name": "properties",
     "value": null
    }
   ],
   "apiVersion": "",
   "defaultBody": null,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/legalHold",
   "response": null
  },
  "azure-native:storage:StorageAccountStaticWebsite": {
   "PUT": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "accountName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "error404Document": {
        "type": "string"
       },
       "indexDocument": {
        "type": "string"
       }
      }
     },
     "location": "body",
     "name": "properties",
     "value": null
    }
   ],
   "apiVersion": "",
   "defaultBody": null,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/staticWebsite",
   "response": null
  },
  "azure-native_network_v20230201:network:AdminRule": {
   "PUT": [
    {
     "body": {
      "properties": {
       "access": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "description": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "destinationPortRanges": {
        "containers": [
         "properties"
        ],
        "items": {
         "type": "string"
        },
        "type": "array"
       },
       "destinations": {
        "arrayIdentifiers": [
         "addressPrefix"
        ],
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:AddressPrefixItem",
         "type": "object"
        },
        "type": "array"
       },
       "direction": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "kind": {
        "const": "Custom",
        "type": "string"
       },
       "priority": {
        "containers": [
         "properties"
        ],
        "maximum": 4096,
        "minimum": 1,
        "type": "integer"
       },
       "protocol": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "sourcePortRanges": {
        "containers": [
         "properties"
        ],
        "items": {
         "type": "string"
        },
        "type": "array"
       },
       "sources": {
        "arrayIdentifiers": [
         "addressPrefix"
        ],
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:AddressPrefixItem",
         "type": "object"
        },
        "type": "array"
       }
      },
      "required": [
       "access",
       "direction",
       "kind",
       "priority",
       "protocol"
      ]
     },
     "location": "body",
     "name": "adminRule",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkManagerName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "configurationName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "ruleCollectionName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "ruleName",
     "required": true,
     "value": {
      "autoname": "copy",
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/securityAdminConfigurations/{configurationName}/ruleCollections/{ruleCollectionName}/rules/{ruleName}",
   "response": {
    "access": {
     "containers": [
      "properties"
     ]
    },
    "description": {
     "containers": [
      "properties"
     ]
    },
    "destinationPortRanges": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "destinations": {
     "arrayIdentifiers": [
      "addressPrefix"
     ],
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AddressPrefixItemResponse",
      "type": "object"
     }
    },
    "direction": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "kind": {
     "const": "Custom"
    },
    "name": {},
    "priority": {
     "containers": [
      "properties"
     ]
    },
    "protocol": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "sourcePortRanges": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "sources": {
     "arrayIdentifiers": [
      "addressPrefix"
     ],
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AddressPrefixItemResponse",
      "type": "object"
     }
    },
    "systemData": {
     "$ref": "#/types/azure-native_network_v20230201:network:SystemDataResponse"
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:AdminRuleCollection": {
   "PUT": [
    {
     "body": {
      "properties": {
       "appliesToGroups": {
        "arrayIdentifiers": [
         "networkGroupId"
        ],
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:NetworkManagerSecurityGroupItem",
         "type": "object"
        },
        "type": "array"
       },
       "description": {
        "containers": [
         "properties"
        ],
        "type": "string"
       }
      },
      "required": [
       "appliesToGroups"
      ]
     },
     "location": "body",
     "name": "ruleCollection",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkManagerName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "configurationName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "ruleCollectionName",
     "required": true,
     "value": {
      "autoname": "copy",
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/securityAdminConfigurations/{configurationName}/ruleCollections/{ruleCollectionName}",
   "response": {
    "appliesToGroups": {
     "arrayIdentifiers": [
      "networkGroupId"
     ],
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkManagerSecurityGroupItemResponse",
      "type": "object"
     }
    },
    "description": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "systemData": {
     "$ref": "#/types/azure-native_network_v20230201:network:SystemDataResponse"
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:ApplicationGateway": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "applicationGatewayName",
     "required": true,
     "value": {
      "autoname": "random",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "authenticationCertificates": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayAuthenticationCertificate",
         "type": "object"
        },
        "type": "array"
       },
       "autoscaleConfiguration": {
        "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayAutoscaleConfiguration",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "backendAddressPools": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayBackendAddressPool",
         "type": "object"
        },
        "type": "array"
       },
       "backendHttpSettingsCollection": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayBackendHttpSettings",
         "type": "object"
        },
        "type": "array"
       },
       "backendSettingsCollection": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayBackendSettings",
         "type": "object"
        },
        "type": "array"
       },
       "customErrorConfigurations": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayCustomError",
         "type": "object"
        },
        "type": "array"
       },
       "enableFips": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "enableHttp2": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "firewallPolicy": {
        "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "forceFirewallPolicyAssociation": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "frontendIPConfigurations": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayFrontendIPConfiguration",
         "type": "object"
        },
        "type": "array"
       },
       "frontendPorts": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayFrontendPort",
         "type": "object"
        },
        "type": "array"
       },
       "gatewayIPConfigurations": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayIPConfiguration",
         "type": "object"
        },
        "type": "array"
       },
       "globalConfiguration": {
        "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayGlobalConfiguration",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "httpListeners": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayHttpListener",
         "type": "object"
        },
        "type": "array"
       },
       "id": {
        "type": "string"
       },
       "identity": {
        "$ref": "#/types/azure-native_network_v20230201:network:ManagedServiceIdentity",
        "type": "object"
       },
       "listeners": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayListener",
         "type": "object"
        },
        "type": "array"
       },
       "loadDistributionPolicies": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayLoadDistributionPolicy",
         "type": "object"
        },
        "type": "array"
       },
       "location": {
        "type": "string"
       },
       "privateLinkConfigurations": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayPrivateLinkConfiguration",
         "type": "object"
        },
        "type": "array"
       },
       "probes": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayProbe",
         "type": "object"
        },
        "type": "array"
       },
       "redirectConfigurations": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayRedirectConfiguration",
         "type": "object"
        },
        "type": "array"
       },
       "requestRoutingRules": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayRequestRoutingRule",
         "type": "object"
        },
        "type": "array"
       },
       "rewriteRuleSets": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayRewriteRuleSet",
         "type": "object"
        },
        "type": "array"
       },
       "routingRules": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayRoutingRule",
         "type": "object"
        },
        "type": "array"
       },
       "sku": {
        "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewaySku",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "sslCertificates": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewaySslCertificate",
         "type": "object"
        },
        "type": "array"
       },
       "sslPolicy": {
        "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewaySslPolicy",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "sslProfiles": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewaySslProfile",
         "type": "object"
        },
        "type": "array"
       },
       "tags": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       },
       "trustedClientCertificates": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayTrustedClientCertificate",
         "type": "object"
        },
        "type": "array"
       },
       "trustedRootCertificates": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayTrustedRootCertificate",
         "type": "object"
        },
        "type": "array"
       },
       "urlPathMaps": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayUrlPathMap",
         "type": "object"
        },
        "type": "array"
       },
       "webApplicationFirewallConfiguration": {
        "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayWebApplicationFirewallConfiguration",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "zones": {
        "items": {
         "type": "string"
        },
        "type": "array"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "authenticationCertificates": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayAuthenticationCertificateResponse",
      "type": "object"
     }
    },
    "autoscaleConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayAutoscaleConfigurationResponse",
     "containers": [
      "properties"
     ]
    },
    "backendAddressPools": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayBackendAddressPoolResponse",
      "type": "object"
     }
    },
    "backendHttpSettingsCollection": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayBackendHttpSettingsResponse",
      "type": "object"
     }
    },
    "backendSettingsCollection": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayBackendSettingsResponse",
      "type": "object"
     }
    },
    "customErrorConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayCustomErrorResponse",
      "type": "object"
     }
    },
    "defaultPredefinedSslPolicy": {
     "containers": [
      "properties"
     ]
    },
    "enableFips": {
     "containers": [
      "properties"
     ]
    },
    "enableHttp2": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "firewallPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "forceFirewallPolicyAssociation": {
     "containers": [
      "properties"
     ]
    },
    "frontendIPConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayFrontendIPConfigurationResponse",
      "type": "object"
     }
    },
    "frontendPorts": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayFrontendPortResponse",
      "type": "object"
     }
    },
    "gatewayIPConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayIPConfigurationResponse",
      "type": "object"
     }
    },
    "globalConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayGlobalConfigurationResponse",
     "containers": [
      "properties"
     ]
    },
    "httpListeners": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayHttpListenerResponse",
      "type": "object"
     }
    },
    "id": {},
    "identity": {
     "$ref": "#/types/azure-native_network_v20230201:network:ManagedServiceIdentityResponse"
    },
    "listeners": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayListenerResponse",
      "type": "object"
     }
    },
    "loadDistributionPolicies": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayLoadDistributionPolicyResponse",
      "type": "object"
     }
    },
    "location": {},
    "name": {},
    "operationalState": {
     "containers": [
      "properties"
     ]
    },
    "privateEndpointConnections": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayPrivateEndpointConnectionResponse",
      "type": "object"
     }
    },
    "privateLinkConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayPrivateLinkConfigurationResponse",
      "type": "object"
     }
    },
    "probes": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayProbeResponse",
      "type": "object"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "redirectConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayRedirectConfigurationResponse",
      "type": "object"
     }
    },
    "requestRoutingRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayRequestRoutingRuleResponse",
      "type": "object"
     }
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "rewriteRuleSets": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayRewriteRuleSetResponse",
      "type": "object"
     }
    },
    "routingRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayRoutingRuleResponse",
      "type": "object"
     }
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewaySkuResponse",
     "containers": [
      "properties"
     ]
    },
    "sslCertificates": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewaySslCertificateResponse",
      "type": "object"
     }
    },
    "sslPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewaySslPolicyResponse",
     "containers": [
      "properties"
     ]
    },
    "sslProfiles": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewaySslProfileResponse",
      "type": "object"
     }
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "trustedClientCertificates": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayTrustedClientCertificateResponse",
      "type": "object"
     }
    },
    "trustedRootCertificates": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayTrustedRootCertificateResponse",
      "type": "object"
     }
    },
    "type": {},
    "urlPathMaps": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayUrlPathMapResponse",
      "type": "object"
     }
    },
    "webApplicationFirewallConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayWebApplicationFirewallConfigurationResponse",
     "containers": [
      "properties"
     ]
    },
    "zones": {
     "items": {
      "type": "string"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayPrivateEndpointConnection": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "applicationGatewayName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "connectionName",
     "required": true,
     "value": {
      "autoname": "copy",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "id": {
        "type": "string"
       },
       "name": {
        "type": "string"
       },
       "privateLinkServiceConnectionState": {
        "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceConnectionState",
        "containers": [
         "properties"
        ],
        "type": "object"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/privateEndpointConnections/{connectionName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "etag": {},
    "id": {},
    "linkIdentifier": {
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "privateEndpoint": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateEndpointResponse",
     "containers": [
      "properties"
     ]
    },
    "privateLinkServiceConnectionState": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceConnectionStateResponse",
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:ApplicationSecurityGroup": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "applicationSecurityGroupName",
     "required": true,
     "value": {
      "autoname": "random",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "id": {
        "type": "string"
       },
       "location": {
        "type": "string"
       },
       "tags": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationSecurityGroups/{applicationSecurityGroupName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "etag": {},
    "id": {},
    "location": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:AzureFirewall": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "azureFirewallName",
     "required": true,
     "value": {
      "autoname": "random",
      "maxLength": 56,
      "minLength": 1,
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "additionalProperties": {
        "additionalProperties": {
         "type": "string"
        },
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "applicationRuleCollections": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallApplicationRuleCollection",
         "type": "object"
        },
        "type": "array"
       },
       "firewallPolicy": {
        "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "hubIPAddresses": {
        "$ref": "#/types/azure-native_network_v20230201:network:HubIPAddresses",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "id": {
        "type": "string"
       },
       "ipConfigurations": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallIPConfiguration",
         "type": "object"
        },
        "type": "array"
       },
       "location": {
        "type": "string"
       },
       "managementIpConfiguration": {
        "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallIPConfiguration",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "natRuleCollections": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallNatRuleCollection",
         "type": "object"
        },
        "type": "array"
       },
       "networkRuleCollections": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallNetworkRuleCollection",
         "type": "object"
        },
        "type": "array"
       },
       "sku": {
        "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallSku",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "tags": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       },
       "threatIntelMode": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "virtualHub": {
        "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "zones": {
        "items": {
         "type": "string"
        },
        "type": "array"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/azureFirewalls/{azureFirewallName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "additionalProperties": {
     "additionalProperties": {
      "type": "string"
     },
     "containers": [
      "properties"
     ]
    },
    "applicationRuleCollections": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallApplicationRuleCollectionResponse",
      "type": "object"
     }
    },
    "etag": {},
    "firewallPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "hubIPAddresses": {
     "$ref": "#/types/azure-native_network_v20230201:network:HubIPAddressesResponse",
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "ipConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallIPConfigurationResponse",
      "type": "object"
     }
    },
    "ipGroups": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallIpGroupsResponse",
      "type": "object"
     }
    },
    "location": {},
    "managementIpConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallIPConfigurationResponse",
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "natRuleCollections": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallNatRuleCollectionResponse",
      "type": "object"
     }
    },
    "networkRuleCollections": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallNetworkRuleCollectionResponse",
      "type": "object"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallSkuResponse",
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "threatIntelMode": {
     "containers": [
      "properties"
     ]
    },
    "type": {},
    "virtualHub": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "zones": {
     "items": {
      "type": "string"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:BastionHost": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "bastionHostName",
     "required": true,
     "value": {
      "autoname": "random",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "disableCopyPaste": {
        "containers": [
         "properties"
        ],
        "default": false,
        "type": "boolean"
       },
       "dnsName": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "enableFileCopy": {
        "containers": [
         "properties"
        ],
        "default": false,
        "type": "boolean"
       },
       "enableIpConnect": {
        "containers": [
         "properties"
        ],
        "default": false,
        "type": "boolean"
       },
       "enableKerberos": {
        "containers": [
         "properties"
        ],
        "default": false,
        "type": "boolean"
       },
       "enableShareableLink": {
        "containers": [
         "properties"
        ],
        "default": false,
        "type": "boolean"
       },
       "enableTunneling": {
        "containers": [
         "properties"
        ],
        "default": false,
        "type": "boolean"
       },
       "id": {
        "type": "string"
       },
       "ipConfigurations": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:BastionHostIPConfiguration",
         "type": "object"
        },
        "type": "array"
       },
       "location": {
        "type": "string"
       },
       "scaleUnits": {
        "containers": [
         "properties"
        ],
        "maximum": 50,
        "minimum": 2,
        "type": "integer"
       },
       "sku": {
        "$ref": "#/types/azure-native_network_v20230201:network:Sku",
        "type": "object"
       },
       "tags": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/bastionHosts/{bastionHostName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "disableCopyPaste": {
     "containers": [
      "properties"
     ],
     "default": false
    },
    "dnsName": {
     "containers": [
      "properties"
     ]
    },
    "enableFileCopy": {
     "containers": [
      "properties"
     ],
     "default": false
    },
    "enableIpConnect": {
     "containers": [
      "properties"
     ],
     "default": false
    },
    "enableKerberos": {
     "containers": [
      "properties"
     ],
     "default": false
    },
    "enableShareableLink": {
     "containers": [
      "properties"
     ],
     "default": false
    },
    "enableTunneling": {
     "containers": [
      "properties"
     ],
     "default": false
    },
    "etag": {},
    "id": {},
    "ipConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:BastionHostIPConfigurationResponse",
      "type": "object"
     }
    },
    "location": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "scaleUnits": {
     "containers": [
      "properties"
     ]
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:SkuResponse"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:ConfigurationPolicyGroup": {
   "PUT": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "vpnServerConfigurationName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "configurationPolicyGroupName",
     "required": true,
     "value": {
      "autoname": "copy",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "id": {
        "type": "string"
       },
       "isDefault": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "name": {
        "type": "string"
       },
       "policyMembers": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:VpnServerConfigurationPolicyGroupMember",
         "type": "object"
        },
        "type": "array"
       },
       "priority": {
        "containers": [
         "properties"
        ],
        "type": "integer"
       }
      }
     },
     "location": "body",
     "name": "VpnServerConfigurationPolicyGroupParameters",
     "required": true,
     "value": {}
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnServerConfigurations/{vpnServerConfigurationName}/configurationPolicyGroups/{configurationPolicyGroupName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "etag": {},
    "id": {},
    "isDefault": {
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "p2SConnectionConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "policyMembers": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnServerConfigurationPolicyGroupMemberResponse",
      "type": "object"
     }
    },
    "priority": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:ConnectionMonitor": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkWatcherName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "connectionMonitorName",
     "required": true,
     "value": {
      "autoname": "copy",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "autoStart": {
        "containers": [
         "properties"
        ],
        "default": true,
        "type": "boolean"
       },
       "destination": {
        "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorDestination",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "endpoints": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorEndpoint",
         "type": "object"
        },
        "type": "array"
       },
       "location": {
        "type": "string"
       },
       "monitoringIntervalInSeconds": {
        "containers": [
         "properties"
        ],
        "default": 60,
        "maximum": 1800,
        "minimum": 30,
        "type": "integer"
       },
       "notes": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "outputs": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorOutput",
         "type": "object"
        },
        "type": "array"
       },
       "source": {
        "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorSource",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "tags": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       },
       "testConfigurations": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorTestConfiguration",
         "type": "object"
        },
        "type": "array"
       },
       "testGroups": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorTestGroup",
         "type": "object"
        },
        "type": "array"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "query",
     "name": "migrate",
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors/{connectionMonitorName}",
   "putAsyncStyle": "azure-async-operation",
   "requiredContainers": [
    [
     "properties"
    ]
   ],
   "response": {
    "autoStart": {
     "containers": [
      "properties"
     ],
     "default": true
    },
    "connectionMonitorType": {
     "containers": [
      "properties"
     ]
    },
    "destination": {
     "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorDestinationResponse",
     "containers": [
      "properties"
     ]
    },
    "endpoints": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorEndpointResponse",
      "type": "object"
     }
    },
    "etag": {},
    "id": {},
    "location": {},
    "monitoringIntervalInSeconds": {
     "containers": [
      "properties"
     ],
     "default": 60
    },
    "monitoringStatus": {
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "notes": {
     "containers": [
      "properties"
     ]
    },
    "outputs": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorOutputResponse",
      "type": "object"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "source": {
     "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorSourceResponse",
     "containers": [
      "properties"
     ]
    },
    "startTime": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "testConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorTestConfigurationResponse",
      "type": "object"
     }
    },
    "testGroups": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorTestGroupResponse",
      "type": "object"
     }
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:ConnectivityConfiguration": {
   "PUT": [
    {
     "body": {
      "properties": {
       "appliesToGroups": {
        "arrayIdentifiers": [
         "networkGroupId"
        ],
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:ConnectivityGroupItem",
         "type": "object"
        },
        "type": "array"
       },
       "connectivityTopology": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "deleteExistingPeering": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "description": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "hubs": {
        "arrayIdentifiers": [
         "resourceId"
        ],
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:Hub",
         "type": "object"
        },
        "type": "array"
       },
       "isGlobal": {
        "containers": [
         "properties"
        ],
        "type": "string"
       }
      },
      "required": [
       "appliesToGroups",
       "connectivityTopology"
      ]
     },
     "location": "body",
     "name": "connectivityConfiguration",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkManagerName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "configurationName",
     "required": true,
     "value": {
      "autoname": "copy",
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/connectivityConfigurations/{configurationName}",
   "response": {
    "appliesToGroups": {
     "arrayIdentifiers": [
      "networkGroupId"
     ],
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConnectivityGroupItemResponse",
      "type": "object"
     }
    },
    "connectivityTopology": {
     "containers": [
      "properties"
     ]
    },
    "deleteExistingPeering": {
     "containers": [
      "properties"
     ]
    },
    "description": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "hubs": {
     "arrayIdentifiers": [
      "resourceId"
     ],
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:HubResponse",
      "type": "object"
     }
    },
    "id": {},
    "isGlobal": {
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "systemData": {
     "$ref": "#/types/azure-native_network_v20230201:network:SystemDataResponse"
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:CustomIPPrefix": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "customIpPrefixName",
     "required": true,
     "value": {
      "autoname": "random",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "asn": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "authorizationMessage": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "cidr": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "commissionedState": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "customIpPrefixParent": {
        "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "expressRouteAdvertise": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "extendedLocation": {
        "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocation",
        "type": "object"
       },
       "geo": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "id": {
        "type": "string"
       },
       "location": {
        "type": "string"
       },
       "noInternetAdvertise": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "prefixType": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "signedMessage": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "tags": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       },
       "zones": {
        "items": {
         "type": "string"
        },
        "type": "array"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/customIpPrefixes/{customIpPrefixName}",
   "putAsyncStyle": "location",
   "response": {
    "asn": {
     "containers": [
      "properties"
     ]
    },
    "authorizationMessage": {
     "containers": [
      "properties"
     ]
    },
    "childCustomIpPrefixes": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "cidr": {
     "containers": [
      "properties"
     ]
    },
    "commissionedState": {
     "containers": [
      "properties"
     ]
    },
    "customIpPrefixParent": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "expressRouteAdvertise": {
     "containers": [
      "properties"
     ]
    },
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse"
    },
    "failedReason": {
     "containers": [
      "properties"
     ]
    },
    "geo": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "location": {},
    "name": {},
    "noInternetAdvertise": {
     "containers": [
      "properties"
     ]
    },
    "prefixType": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "publicIpPrefixes": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "signedMessage": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {},
    "zones": {
     "items": {
      "type": "string"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:DdosCustomPolicy": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "ddosCustomPolicyName",
     "required": true,
     "value": {
      "autoname": "random",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "id": {
        "type": "string"
       },
       "location": {
        "type": "string"
       },
       "tags": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ddosCustomPolicies/{ddosCustomPolicyName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "etag": {},
    "id": {},
    "location": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:DdosProtectionPlan": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "ddosProtectionPlanName",
     "required": true,
     "value": {
      "autoname": "random",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "location": {
        "type": "string"
       },
       "tags": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ddosProtectionPlans/{ddosProtectionPlanName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "etag": {},
    "id": {},
    "location": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "publicIPAddresses": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {},
    "virtualNetworks": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:DefaultAdminRule": {
   "PUT": [
    {
     "body": {
      "properties": {
       "flag": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "kind": {
        "const": "Default",
        "type": "string"
       }
      },
      "required": [
       "kind"
      ]
     },
     "location": "body",
     "name": "adminRule",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkManagerName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "configurationName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "ruleCollectionName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "ruleName",
     "required": true,
     "value": {
      "autoname": "copy",
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/securityAdminConfigurations/{configurationName}/ruleCollections/{ruleCollectionName}/rules/{ruleName}",
   "response": {
    "access": {
     "containers": [
      "properties"
     ]
    },
    "description": {
     "containers": [
      "properties"
     ]
    },
    "destinationPortRanges": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "destinations": {
     "arrayIdentifiers": [
      "addressPrefix"
     ],
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AddressPrefixItemResponse",
      "type": "object"
     }
    },
    "direction": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "flag": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "kind": {
     "const": "Default"
    },
    "name": {},
    "priority": {
     "containers": [
      "properties"
     ]
    },
    "protocol": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "sourcePortRanges": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "sources": {
     "arrayIdentifiers": [
      "addressPrefix"
     ],
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AddressPrefixItemResponse",
      "type": "object"
     }
    },
    "systemData": {
     "$ref": "#/types/azure-native_network_v20230201:network:SystemDataResponse"
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:DscpConfiguration": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "dscpConfigurationName",
     "required": true,
     "value": {
      "autoname": "random",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "destinationIpRanges": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:QosIpRange",
         "type": "object"
        },
        "type": "array"
       },
       "destinationPortRanges": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:QosPortRange",
         "type": "object"
        },
        "type": "array"
       },
       "id": {
        "type": "string"
       },
       "location": {
        "type": "string"
       },
       "markings": {
        "containers": [
         "properties"
        ],
        "items": {
         "type": "integer"
        },
        "type": "array"
       },
       "protocol": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "qosDefinitionCollection": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:QosDefinition",
         "type": "object"
        },
        "type": "array"
       },
       "sourceIpRanges": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:QosIpRange",
         "type": "object"
        },
        "type": "array"
       },
       "sourcePortRanges": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:QosPortRange",
         "type": "object"
        },
        "type": "array"
       },
       "tags": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dscpConfigurations/{dscpConfigurationName}",
   "putAsyncStyle": "location",
   "response": {
    "associatedNetworkInterfaces": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceResponse",
      "type": "object"
     }
    },
    "destinationIpRanges": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:QosIpRangeResponse",
      "type": "object"
     }
    },
    "destinationPortRanges": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:QosPortRangeResponse",
      "type": "object"
     }
    },
    "etag": {},
    "id": {},
    "location": {},
    "markings": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "integer"
     }
    },
    "name": {},
    "protocol": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "qosCollectionId": {
     "containers": [
      "properties"
     ]
    },
    "qosDefinitionCollection": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:QosDefinitionResponse",
      "type": "object"
     }
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "sourceIpRanges": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:QosIpRangeResponse",
      "type": "object"
     }
    },
    "sourcePortRanges": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:QosPortRangeResponse",
      "type": "object"
     }
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:ExpressRouteCircuit": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "circuitName",
     "required": true,
     "value": {
      "autoname": "random",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "allowClassicOperations": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "authorizationKey": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "authorizations": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitAuthorization",
         "type": "object"
        },
        "maintainSubResourceIfUnset": true,
        "type": "array"
       },
       "bandwidthInGbps": {
        "containers": [
         "properties"
        ],
        "type": "number"
       },
       "circuitProvisioningState": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "expressRoutePort": {
        "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "gatewayManagerEtag": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "globalReachEnabled": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "id": {
        "type": "string"
       },
       "location": {
        "type": "string"
       },
       "peerings": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitPeering",
         "type": "object"
        },
        "maintainSubResourceIfUnset": true,
        "type": "array"
       },
       "serviceKey": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "serviceProviderNotes": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "serviceProviderProperties": {
        "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitServiceProviderProperties",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "serviceProviderProvisioningState": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "sku": {
        "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitSku",
        "type": "object"
       },
       "tags": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "allowClassicOperations": {
     "containers": [
      "properties"
     ]
    },
    "authorizationKey": {
     "containers": [
      "properties"
     ]
    },
    "authorizationStatus": {
     "containers": [
      "properties"
     ]
    },
    "authorizations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitAuthorizationResponse",
      "type": "object"
     }
    },
    "bandwidthInGbps": {
     "containers": [
      "properties"
     ]
    },
    "circuitProvisioningState": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "expressRoutePort": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "gatewayManagerEtag": {
     "containers": [
      "properties"
     ]
    },
    "globalReachEnabled": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "location": {},
    "name": {},
    "peerings": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitPeeringResponse",
      "type": "object"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "serviceKey": {
     "containers": [
      "properties"
     ]
    },
    "serviceProviderNotes": {
     "containers": [
      "properties"
     ]
    },
    "serviceProviderProperties": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitServiceProviderPropertiesResponse",
     "containers": [
      "properties"
     ]
    },
    "serviceProviderProvisioningState": {
     "containers": [
      "properties"
     ]
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitSkuResponse"
    },
    "stag": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:ExpressRouteCircuitAuthorization": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "circuitName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "authorizationName",
     "required": true,
     "value": {
      "autoname": "copy",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "authorizationKey": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "authorizationUseStatus": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "id": {
        "type": "string"
       },
       "name": {
        "type": "string"
       }
      }
     },
     "location": "body",
     "name": "authorizationParameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations/{authorizationName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "authorizationKey": {
     "containers": [
      "properties"
     ]
    },
    "authorizationUseStatus": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:ExpressRouteCircuitConnection": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "circuitName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "peeringName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "connectionName",
     "required": true,
     "value": {
      "autoname": "copy",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "addressPrefix": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "authorizationKey": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "expressRouteCircuitPeering": {
        "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "id": {
        "type": "string"
       },
       "ipv6CircuitConnectionConfig": {
        "$ref": "#/types/azure-native_network_v20230201:network:Ipv6CircuitConnectionConfig",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "name": {
        "type": "string"
       },
       "peerExpressRouteCircuitPeering": {
        "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
        "containers": [
         "properties"
        ],
        "type": "object"
       }
      }
     },
     "location": "body",
     "name": "expressRouteCircuitConnectionParameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/connections/{connectionName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "addressPrefix": {
     "containers": [
      "properties"
     ]
    },
    "authorizationKey": {
     "containers": [
      "properties"
     ]
    },
    "circuitConnectionStatus": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "expressRouteCircuitPeering": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "ipv6CircuitConnectionConfig": {
     "$ref": "#/types/azure-native_network_v20230201:network:Ipv6CircuitConnectionConfigResponse",
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "peerExpressRouteCircuitPeering": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:ExpressRouteCircuitPeering": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "circuitName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "peeringName",
     "required": true,
     "value": {
      "autoname": "copy",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "azureASN": {
        "containers": [
         "properties"
        ],
        "type": "integer"
       },
       "connections": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitConnection",
         "type": "object"
        },
        "maintainSubResourceIfUnset": true,
        "type": "array"
       },
       "gatewayManagerEtag": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "id": {
        "type": "string"
       },
       "ipv6PeeringConfig": {
        "$ref": "#/types/azure-native_network_v20230201:network:Ipv6ExpressRouteCircuitPeeringConfig",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "microsoftPeeringConfig": {
        "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitPeeringConfig",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "name": {
        "type": "string"
       },
       "peerASN": {
        "containers": [
         "properties"
        ],
        "maximum": 4294967295,
        "minimum": 1,
        "type": "number"
       },
       "peeringType": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "primaryAzurePort": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "primaryPeerAddressPrefix": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "routeFilter": {
        "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "secondaryAzurePort": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "secondaryPeerAddressPrefix": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "sharedKey": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "state": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "stats": {
        "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitStats",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "vlanId": {
        "containers": [
         "properties"
        ],
        "type": "integer"
       }
      }
     },
     "location": "body",
     "name": "peeringParameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "azureASN": {
     "containers": [
      "properties"
     ]
    },
    "connections": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitConnectionResponse",
      "type": "object"
     }
    },
    "etag": {},
    "expressRouteConnection": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteConnectionIdResponse",
     "containers": [
      "properties"
     ]
    },
    "gatewayManagerEtag": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "ipv6PeeringConfig": {
     "$ref": "#/types/azure-native_network_v20230201:network:Ipv6ExpressRouteCircuitPeeringConfigResponse",
     "containers": [
      "properties"
     ]
    },
    "lastModifiedBy": {
     "containers": [
      "properties"
     ]
    },
    "microsoftPeeringConfig": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitPeeringConfigResponse",
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "peerASN": {
     "containers": [
      "properties"
     ]
    },
    "peeredConnections": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PeerExpressRouteCircuitConnectionResponse",
      "type": "object"
     }
    },
    "peeringType": {
     "containers": [
      "properties"
     ]
    },
    "primaryAzurePort": {
     "containers": [
      "properties"
     ]
    },
    "primaryPeerAddressPrefix": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "routeFilter": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "secondaryAzurePort": {
     "containers": [
      "properties"
     ]
    },
    "secondaryPeerAddressPrefix": {
     "containers": [
      "properties"
     ]
    },
    "sharedKey": {
     "containers": [
      "properties"
     ]
    },
    "state": {
     "containers": [
      "properties"
     ]
    },
    "stats": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitStatsResponse",
     "containers": [
      "properties"
     ]
    },
    "type": {},
    "vlanId": {
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native_network_v20230201:network:ExpressRouteConnection": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "expressRouteGatewayName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "connectionName",
     "required": true,
     "value": {
      "autoname": "copy",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "authorizationKey": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "enableInternetSecurity": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "enablePrivateLinkFastPath": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "expressRouteCircuitPeering": {
        "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitPeeringId",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "expressRouteGatewayBypass": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "id": {
        "type": "string"
       },
       "name": {
        "type": "string"
       },
       "routingConfiguration": {
        "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfiguration",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "routingWeight": {
        "containers": [
         "properties"
        ],
        "type": "integer"
       }
      },
      "required": [
       "expressRouteCircuitPeering",
       "name"
      ]
     },
     "location": "body",
     "name": "putExpressRouteConnectionParameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}/expressRouteConnections/{connectionName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "authorizationKey": {
     "containers": [
      "properties"
     ]
    },
    "enableInternetSecurity": {
     "containers": [
      "properties"
     ]
    },
    "enablePrivateLinkFastPath": {
     "containers": [
      "properties"
     ]
    },
    "expressRouteCircuitPeering": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitPeeringIdResponse",
     "containers": [
      "properties"
     ]
    },
    "expressRouteGatewayBypass": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "routingConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfigurationResponse",
     "containers": [
      "properties"
     ]
    },
    "routingWeight": {
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native_network_v20230201:network:ExpressRouteCrossConnectionPeering": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "crossConnectionName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "peeringName",
     "required": true,
     "value": {
      "autoname": "copy",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "gatewayManagerEtag": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "id": {
        "type": "string"
       },
       "ipv6PeeringConfig": {
        "$ref": "#/types/azure-native_network_v20230201:network:Ipv6ExpressRouteCircuitPeeringConfig",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "microsoftPeeringConfig": {
        "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitPeeringConfig",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "name": {
        "type": "string"
       },
       "peerASN": {
        "containers": [
         "properties"
        ],
        "maximum": 4294967295,
        "minimum": 1,
        "type": "number"
       },
       "peeringType": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "primaryPeerAddressPrefix": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "secondaryPeerAddressPrefix": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "sharedKey": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "state": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "vlanId": {
        "containers": [
         "properties"
        ],
        "type": "integer"
       }
      }
     },
     "location": "body",
     "name": "peeringParameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCrossConnections/{crossConnectionName}/peerings/{peeringName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "azureASN": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "gatewayManagerEtag": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "ipv6PeeringConfig": {
     "$ref": "#/types/azure-native_network_v20230201:network:Ipv6ExpressRouteCircuitPeeringConfigResponse",
     "containers": [
      "properties"
     ]
    },
    "lastModifiedBy": {
     "containers": [
      "properties"
     ]
    },
    "microsoftPeeringConfig": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitPeeringConfigResponse",
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "peerASN": {
     "containers": [
      "properties"
     ]
    },
    "peeringType": {
     "containers": [
      "properties"
     ]
    },
    "primaryAzurePort": {
     "containers": [
      "properties"
     ]
    },
    "primaryPeerAddressPrefix": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "secondaryAzurePort": {
     "containers": [
      "properties"
     ]
    },
    "secondaryPeerAddressPrefix": {
     "containers": [
      "properties"
     ]
    },
    "sharedKey": {
     "containers": [
      "properties"
     ]
    },
    "state": {
     "containers": [
      "properties"
     ]
    },
    "vlanId": {
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native_network_v20230201:network:ExpressRouteGateway": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "expressRouteGatewayName",
     "required": true,
     "value": {
      "autoname": "random",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "allowNonVirtualWanTraffic": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "autoScaleConfiguration": {
        "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteGatewayPropertiesAutoScaleConfiguration",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "expressRouteConnections": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteConnection",
         "type": "object"
        },
        "maintainSubResourceIfUnset": true,
        "type": "array"
       },
       "id": {
        "type": "string"
       },
       "location": {
        "type": "string"
       },
       "tags": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       },
       "virtualHub": {
        "$ref": "#/types/azure-native_network_v20230201:network:VirtualHubId",
        "containers": [
         "properties"
        ],
        "type": "object"
       }
      },
      "required": [
       "virtualHub"
      ]
     },
     "location": "body",
     "name": "putExpressRouteGatewayParameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "allowNonVirtualWanTraffic": {
     "containers": [
      "properties"
     ]
    },
    "autoScaleConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteGatewayPropertiesResponseAutoScaleConfiguration",
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "expressRouteConnections": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteConnectionResponse",
      "type": "object"
     }
    },
    "id": {},
    "location": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {},
    "virtualHub": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualHubIdResponse",
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native_network_v20230201:network:ExpressRoutePort": {
   "PUT": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "expressRoutePortName",
     "required": true,
     "value": {
      "autoname": "random",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "bandwidthInGbps": {
        "containers": [
         "properties"
        ],
        "type": "integer"
       },
       "billingType": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "encapsulation": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "id": {
        "type": "string"
       },
       "identity": {
        "$ref": "#/types/azure-native_network_v20230201:network:ManagedServiceIdentity",
        "type": "object"
       },
       "links": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteLink",
         "type": "object"
        },
        "type": "array"
       },
       "location": {
        "type": "string"
       },
       "peeringLocation": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "tags": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ExpressRoutePorts/{expressRoutePortName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "allocationDate": {
     "containers": [
      "properties"
     ]
    },
    "bandwidthInGbps": {
     "containers": [
      "properties"
     ]
    },
    "billingType": {
     "containers": [
      "properties"
     ]
    },
    "circuits": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "encapsulation": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "etherType": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "identity": {
     "$ref": "#/types/azure-native_network_v20230201:network:ManagedServiceIdentityResponse"
    },
    "links": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteLinkResponse",
      "type": "object"
     }
    },
    "location": {},
    "mtu": {
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "peeringLocation": {
     "containers": [
      "properties"
     ]
    },
    "provisionedBandwidthInGbps": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:ExpressRoutePortAuthorization": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "expressRoutePortName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "authorizationName",
     "required": true,
     "value": {
      "autoname": "copy",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "id": {
        "type": "string"
       },
       "name": {
        "type": "string"
       }
      }
     },
     "location": "body",
     "name": "authorizationParameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRoutePorts/{expressRoutePortName}/authorizations/{authorizationName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "authorizationKey": {
     "containers": [
      "properties"
     ]
    },
    "authorizationUseStatus": {
     "containers": [
      "properties"
     ]
    },
    "circuitResourceUri": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:FirewallPolicy": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "firewallPolicyName",
     "required": true,
     "value": {
      "autoname": "random",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "basePolicy": {
        "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "dnsSettings": {
        "$ref": "#/types/azure-native_network_v20230201:network:DnsSettings",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "explicitProxy": {
        "$ref": "#/types/azure-native_network_v20230201:network:ExplicitProxy",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "id": {
        "type": "string"
       },
       "identity": {
        "$ref": "#/types/azure-native_network_v20230201:network:ManagedServiceIdentity",
        "type": "object"
       },
       "insights": {
        "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyInsights",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "intrusionDetection": {
        "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyIntrusionDetection",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "location": {
        "type": "string"
       },
       "sku": {
        "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicySku",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "snat": {
        "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicySNAT",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "sql": {
        "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicySQL",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "tags": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       },
       "threatIntelMode": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "threatIntelWhitelist": {
        "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyThreatIntelWhitelist",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "transportSecurity": {
        "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyTransportSecurity",
        "containers": [
         "properties"
        ],
        "type": "object"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "basePolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "childPolicies": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "dnsSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:DnsSettingsResponse",
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "explicitProxy": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExplicitProxyResponse",
     "containers": [
      "properties"
     ]
    },
    "firewalls": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "id": {},
    "identity": {
     "$ref": "#/types/azure-native_network_v20230201:network:ManagedServiceIdentityResponse"
    },
    "insights": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyInsightsResponse",
     "containers": [
      "properties"
     ]
    },
    "intrusionDetection": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyIntrusionDetectionResponse",
     "containers": [
      "properties"
     ]
    },
    "location": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "ruleCollectionGroups": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicySkuResponse",
     "containers": [
      "properties"
     ]
    },
    "snat": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicySNATResponse",
     "containers": [
      "properties"
     ]
    },
    "sql": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicySQLResponse",
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "threatIntelMode": {
     "containers": [
      "properties"
     ]
    },
    "threatIntelWhitelist": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyThreatIntelWhitelistResponse",
     "containers": [
      "properties"
     ]
    },
    "transportSecurity": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyTransportSecurityResponse",
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:FirewallPolicyRuleCollectionGroup": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "firewallPolicyName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "ruleCollectionGroupName",
     "required": true,
     "value": {
      "autoname": "copy",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "id": {
        "type": "string"
       },
       "name": {
        "type": "string"
       },
       "priority": {
        "containers": [
         "properties"
        ],
        "maximum": 65000,
        "minimum": 100,
        "type": "integer"
       },
       "ruleCollections": {
        "containers": [
         "properties"
        ],
        "items": {
         "oneOf": [
          "#/types/azure-native_network_v20230201:network:FirewallPolicyFilterRuleCollection",
          "#/types/azure-native_network_v20230201:network:FirewallPolicyNatRuleCollection"
         ]
        },
        "type": "array"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/ruleCollectionGroups/{ruleCollectionGroupName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "etag": {},
    "id": {},
    "name": {},
    "priority": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "ruleCollections": {
     "containers": [
      "properties"
     ],
     "items": {
      "oneOf": [
       "#/types/azure-native_network_v20230201:network:FirewallPolicyFilterRuleCollectionResponse",
       "#/types/azure-native_network_v20230201:network:FirewallPolicyNatRuleCollectionResponse"
      ]
     }
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:FlowLog": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkWatcherName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "flowLogName",
     "required": true,
     "value": {
      "autoname": "copy",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "enabled": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "flowAnalyticsConfiguration": {
        "$ref": "#/types/azure-native_network_v20230201:network:TrafficAnalyticsProperties",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "format": {
        "$ref": "#/types/azure-native_network_v20230201:network:FlowLogFormatParameters",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "id": {
        "type": "string"
       },
       "location": {
        "type": "string"
       },
       "retentionPolicy": {
        "$ref": "#/types/azure-native_network_v20230201:network:RetentionPolicyParameters",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "storageId": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "tags": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       },
       "targetResourceId": {
        "containers": [
         "properties"
        ],
        "type": "string"
       }
      },
      "required": [
       "storageId",
       "targetResourceId"
      ]
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/flowLogs/{flowLogName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "enabled": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "flowAnalyticsConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:TrafficAnalyticsPropertiesResponse",
     "containers": [
      "properties"
     ]
    },
    "format": {
     "$ref": "#/types/azure-native_network_v20230201:network:FlowLogFormatParametersResponse",
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "location": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "retentionPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:RetentionPolicyParametersResponse",
     "containers": [
      "properties"
     ]
    },
    "storageId": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "targetResourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "targetResourceId": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:HubRouteTable": {
   "PUT": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "virtualHubName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "routeTableName",
     "required": true,
     "value": {
      "autoname": "copy",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "id": {
        "type": "string"
       },
       "labels": {
        "containers": [
         "properties"
        ],
        "items": {
         "type": "string"
        },
        "type": "array"
       },
       "name": {
        "type": "string"
       },
       "routes": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:HubRoute",
         "type": "object"
        },
        "type": "array"
       }
      }
     },
     "location": "body",
     "name": "routeTableParameters",
     "required": true,
     "value": {}
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/hubRouteTables/{routeTableName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "associatedConnections": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "etag": {},
    "id": {},
    "labels": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "name": {},
    "propagatingConnections": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "routes": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:HubRouteResponse",
      "type": "object"
     }
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:HubVirtualNetworkConnection": {
   "PUT": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "virtualHubName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "connectionName",
     "required": true,
     "value": {
      "autoname": "copy",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "allowHubToRemoteVnetTransit": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "allowRemoteVnetToUseHubVnetGateways": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "enableInternetSecurity": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "id": {
        "type": "string"
       },
       "name": {
        "type": "string"
       },
       "remoteVirtualNetwork": {
        "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "routingConfiguration": {
        "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfiguration",
        "containers": [
         "properties"
        ],
        "type": "object"
       }
      }
     },
     "location": "body",
     "name": "hubVirtualNetworkConnectionParameters",
     "required": true,
     "value": {}
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/hubVirtualNetworkConnections/{connectionName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "allowHubToRemoteVnetTransit": {
     "containers": [
      "properties"
     ]
    },
    "allowRemoteVnetToUseHubVnetGateways": {
     "containers": [
      "properties"
     ]
    },
    "enableInternetSecurity": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "remoteVirtualNetwork": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "routingConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfigurationResponse",
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native_network_v20230201:network:InboundNatRule": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "loadBalancerName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "inboundNatRuleName",
     "required": true,
     "value": {
      "autoname": "copy",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "backendAddressPool": {
        "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "backendPort": {
        "containers": [
         "properties"
        ],
        "type": "integer"
       },
       "enableFloatingIP": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "enableTcpReset": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "frontendIPConfiguration": {
        "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "frontendPort": {
        "containers": [
         "properties"
        ],
        "type": "integer"
       },
       "frontendPortRangeEnd": {
        "containers": [
         "properties"
        ],
        "type": "integer"
       },
       "frontendPortRangeStart": {
        "containers": [
         "properties"
        ],
        "type": "integer"
       },
       "id": {
        "type": "string"
       },
       "idleTimeoutInMinutes": {
        "containers": [
         "properties"
        ],
        "type": "integer"
       },
       "name": {
        "type": "string"
       },
       "protocol": {
        "containers": [
         "properties"
        ],
        "type": "string"
       }
      }
     },
     "location": "body",
     "name": "inboundNatRuleParameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/inboundNatRules/{inboundNatRuleName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "backendAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "backendIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceIPConfigurationResponse",
     "containers": [
      "properties"
     ]
    },
    "backendPort": {
     "containers": [
      "properties"
     ]
    },
    "enableFloatingIP": {
     "containers": [
      "properties"
     ]
    },
    "enableTcpReset": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "frontendIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "frontendPort": {
     "containers": [
      "properties"
     ]
    },
    "frontendPortRangeEnd": {
     "containers": [
      "properties"
     ]
    },
    "frontendPortRangeStart": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "idleTimeoutInMinutes": {
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "protocol": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:IpAllocation": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "ipAllocationName",
     "required": true,
     "value": {
      "autoname": "random",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "allocationTags": {
        "additionalProperties": {
         "type": "string"
        },
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "id": {
        "type": "string"
       },
       "ipamAllocationId": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "location": {
        "type": "string"
       },
       "prefix": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "prefixLength": {
        "containers": [
         "properties"
        ],
        "default": 0,
        "type": "integer"
       },
       "prefixType": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "tags": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       },
       "type": {
        "containers": [
         "properties"
        ],
        "type": "string"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/IpAllocations/{ipAllocationName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "allocationTags": {
     "additionalProperties": {
      "type": "string"
     },
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "ipamAllocationId": {
     "containers": [
      "properties"
     ]
    },
    "location": {},
    "name": {},
    "prefix": {
     "containers": [
      "properties"
     ]
    },
    "prefixLength": {
     "containers": [
      "properties"
     ],
     "default": 0
    },
    "prefixType": {
     "containers": [
      "properties"
     ]
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {},
    "virtualNetwork": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native_network_v20230201:network:IpGroup": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "ipGroupsName",
     "required": true,
     "value": {
      "autoname": "random",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "id": {
        "type": "string"
       },
       "ipAddresses": {
        "containers": [
         "properties"
        ],
        "items": {
         "type": "string"
        },
        "type": "array"
       },
       "location": {
        "type": "string"
       },
       "tags": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ipGroups/{ipGroupsName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "etag": {},
    "firewallPolicies": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "firewalls": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "id": {},
    "ipAddresses": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "location": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:LoadBalancer": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "loadBalancerName",
     "required": true,
     "value": {
      "autoname": "random",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "backendAddressPools": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:BackendAddressPool",
         "type": "object"
        },
        "maintainSubResourceIfUnset": true,
        "type": "array"
       },
       "extendedLocation": {
        "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocation",
        "type": "object"
       },
       "frontendIPConfigurations": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:FrontendIPConfiguration",
         "type": "object"
        },
        "type": "array"
       },
       "id": {
        "type": "string"
       },
       "inboundNatPools": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:InboundNatPool",
         "type": "object"
        },
        "type": "array"
       },
       "inboundNatRules": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:InboundNatRule",
         "type": "object"
        },
        "maintainSubResourceIfUnset": true,
        "type": "array"
       },
       "loadBalancingRules": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:LoadBalancingRule",
         "type": "object"
        },
        "type": "array"
       },
       "location": {
        "type": "string"
       },
       "outboundRules": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:OutboundRule",
         "type": "object"
        },
        "type": "array"
       },
       "probes": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:Probe",
         "type": "object"
        },
        "type": "array"
       },
       "sku": {
        "$ref": "#/types/azure-native_network_v20230201:network:LoadBalancerSku",
        "type": "object"
       },
       "tags": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "backendAddressPools": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:BackendAddressPoolResponse",
      "type": "object"
     }
    },
    "etag": {},
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse"
    },
    "frontendIPConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:FrontendIPConfigurationResponse",
      "type": "object"
     }
    },
    "id": {},
    "inboundNatPools": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:InboundNatPoolResponse",
      "type": "object"
     }
    },
    "inboundNatRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:InboundNatRuleResponse",
      "type": "object"
     }
    },
    "loadBalancingRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:LoadBalancingRuleResponse",
      "type": "object"
     }
    },
    "location": {},
    "name": {},
    "outboundRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:OutboundRuleResponse",
      "type": "object"
     }
    },
    "probes": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ProbeResponse",
      "type": "object"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:LoadBalancerSkuResponse"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:LoadBalancerBackendAddressPool": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "loadBalancerName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "backendAddressPoolName",
     "required": true,
     "value": {
      "autoname": "copy",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "drainPeriodInSeconds": {
        "containers": [
         "properties"
        ],
        "type": "integer"
       },
       "id": {
        "type": "string"
       },
       "loadBalancerBackendAddresses": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:LoadBalancerBackendAddress",
         "type": "object"
        },
        "type": "array"
       },
       "location": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "name": {
        "type": "string"
       },
       "tunnelInterfaces": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:GatewayLoadBalancerTunnelInterface",
         "type": "object"
        },
        "type": "array"
       },
       "virtualNetwork": {
        "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
        "containers": [
         "properties"
        ],
        "type": "object"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "autoLocationDisabled": true,
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/backendAddressPools/{backendAddressPoolName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "backendIPConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceIPConfigurationResponse",
      "type": "object"
     }
    },
    "drainPeriodInSeconds": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "inboundNatRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "loadBalancerBackendAddresses": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:LoadBalancerBackendAddressResponse",
      "type": "object"
     }
    },
    "loadBalancingRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "location": {
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "outboundRule": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "outboundRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "tunnelInterfaces": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:GatewayLoadBalancerTunnelInterfaceResponse",
      "type": "object"
     }
    },
    "type": {},
    "virtualNetwork": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native_network_v20230201:network:LocalNetworkGateway": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "localNetworkGatewayName",
     "required": true,
     "value": {
      "autoname": "random",
      "minLength": 1,
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "bgpSettings": {
        "$ref": "#/types/azure-native_network_v20230201:network:BgpSettings",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "fqdn": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "gatewayIpAddress": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "id": {
        "type": "string"
       },
       "localNetworkAddressSpace": {
        "$ref": "#/types/azure-native_network_v20230201:network:AddressSpace",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "location": {
        "type": "string"
       },
       "tags": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}",
   "putAsyncStyle": "azure-async-operation",
   "requiredContainers": [
    [
     "properties"
    ]
   ],
   "response": {
    "bgpSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:BgpSettingsResponse",
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "fqdn": {
     "containers": [
      "properties"
     ]
    },
    "gatewayIpAddress": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "localNetworkAddressSpace": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpaceResponse",
     "containers": [
      "properties"
     ]
    },
    "location": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:ManagementGroupNetworkManagerConnection": {
   "PUT": [
    {
     "body": {
      "properties": {
       "description": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "networkManagerId": {
        "containers": [
         "properties"
        ],
        "type": "string"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "managementGroupId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkManagerConnectionName",
     "required": true,
     "value": {
      "autoname": "random",
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "path": "/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Network/networkManagerConnections/{networkManagerConnectionName}",
   "response": {
    "description": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "name": {},
    "networkManagerId": {
     "containers": [
      "properties"
     ]
    },
    "systemData": {
     "$ref": "#/types/azure-native_network_v20230201:network:SystemDataResponse"
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:NatGateway": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "natGatewayName",
     "required": true,
     "value": {
      "autoname": "random",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "id": {
        "type": "string"
       },
       "idleTimeoutInMinutes": {
        "containers": [
         "properties"
        ],
        "type": "integer"
       },
       "location": {
        "type": "string"
       },
       "publicIpAddresses": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
         "type": "object"
        },
        "type": "array"
       },
       "publicIpPrefixes": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
         "type": "object"
        },
        "type": "array"
       },
       "sku": {
        "$ref": "#/types/azure-native_network_v20230201:network:NatGatewaySku",
        "type": "object"
       },
       "tags": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       },
       "zones": {
        "items": {
         "type": "string"
        },
        "type": "array"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/natGateways/{natGatewayName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "etag": {},
    "id": {},
    "idleTimeoutInMinutes": {
     "containers": [
      "properties"
     ]
    },
    "location": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "publicIpAddresses": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "publicIpPrefixes": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:NatGatewaySkuResponse"
    },
    "subnets": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {},
    "zones": {
     "items": {
      "type": "string"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:NatRule": {
   "PUT": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "gatewayName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "natRuleName",
     "required": true,
     "value": {
      "autoname": "copy",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "externalMappings": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:VpnNatRuleMapping",
         "type": "object"
        },
        "type": "array"
       },
       "id": {
        "type": "string"
       },
       "internalMappings": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:VpnNatRuleMapping",
         "type": "object"
        },
        "type": "array"
       },
       "ipConfigurationId": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "mode": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "name": {
        "type": "string"
       },
       "type": {
        "containers": [
         "properties"
        ],
        "type": "string"
       }
      }
     },
     "location": "body",
     "name": "NatRuleParameters",
     "required": true,
     "value": {}
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/natRules/{natRuleName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "egressVpnSiteLinkConnections": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "etag": {},
    "externalMappings": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnNatRuleMappingResponse",
      "type": "object"
     }
    },
    "id": {},
    "ingressVpnSiteLinkConnections": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "internalMappings": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnNatRuleMappingResponse",
      "type": "object"
     }
    },
    "ipConfigurationId": {
     "containers": [
      "properties"
     ]
    },
    "mode": {
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:NetworkGroup": {
   "PUT": [
    {
     "body": {
      "properties": {
       "description": {
        "containers": [
         "properties"
        ],
        "type": "string"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkManagerName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkGroupName",
     "required": true,
     "value": {
      "autoname": "copy",
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/networkGroups/{networkGroupName}",
   "response": {
    "description": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "systemData": {
     "$ref": "#/types/azure-native_network_v20230201:network:SystemDataResponse"
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:NetworkInterface": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkInterfaceName",
     "required": true,
     "value": {
      "autoname": "random",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "auxiliaryMode": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "auxiliarySku": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "disableTcpStateTracking": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "dnsSettings": {
        "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceDnsSettings",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "enableAcceleratedNetworking": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "enableIPForwarding": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "extendedLocation": {
        "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocation",
        "type": "object"
       },
       "id": {
        "type": "string"
       },
       "ipConfigurations": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceIPConfiguration",
         "type": "object"
        },
        "type": "array"
       },
       "location": {
        "type": "string"
       },
       "migrationPhase": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "networkSecurityGroup": {
        "$ref": "#/types/azure-native_network_v20230201:network:NetworkSecurityGroup",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "nicType": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "privateLinkService": {
        "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkService",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "tags": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       },
       "workloadType": {
        "containers": [
         "properties"
        ],
        "type": "string"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "auxiliaryMode": {
     "containers": [
      "properties"
     ]
    },
    "auxiliarySku": {
     "containers": [
      "properties"
     ]
    },
    "disableTcpStateTracking": {
     "containers": [
      "properties"
     ]
    },
    "dnsSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceDnsSettingsResponse",
     "containers": [
      "properties"
     ]
    },
    "dscpConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "enableAcceleratedNetworking": {
     "containers": [
      "properties"
     ]
    },
    "enableIPForwarding": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse"
    },
    "hostedWorkloads": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "id": {},
    "ipConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceIPConfigurationResponse",
      "type": "object"
     }
    },
    "location": {},
    "macAddress": {
     "containers": [
      "properties"
     ]
    },
    "migrationPhase": {
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "networkSecurityGroup": {
     "$ref": "#/types/azure-native_network_v20230201:network:NetworkSecurityGroupResponse",
     "containers": [
      "properties"
     ]
    },
    "nicType": {
     "containers": [
      "properties"
     ]
    },
    "primary": {
     "containers": [
      "properties"
     ]
    },
    "privateEndpoint": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateEndpointResponse",
     "containers": [
      "properties"
     ]
    },
    "privateLinkService": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceResponse",
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "tapConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceTapConfigurationResponse",
      "type": "object"
     }
    },
    "type": {},
    "virtualMachine": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "vnetEncryptionSupported": {
     "containers": [
      "properties"
     ]
    },
    "workloadType": {
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native_network_v20230201:network:NetworkInterfaceTapConfiguration": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkInterfaceName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "tapConfigurationName",
     "required": true,
     "value": {
      "autoname": "copy",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "id": {
        "type": "string"
       },
       "name": {
        "type": "string"
       },
       "virtualNetworkTap": {
        "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkTap",
        "containers": [
         "properties"
        ],
        "type": "object"
       }
      }
     },
     "location": "body",
     "name": "tapConfigurationParameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/tapConfigurations/{tapConfigurationName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "etag": {},
    "id": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {},
    "virtualNetworkTap": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkTapResponse",
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native_network_v20230201:network:NetworkManager": {
   "PUT": [
    {
     "body": {
      "properties": {
       "description": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "id": {
        "type": "string"
       },
       "location": {
        "type": "string"
       },
       "networkManagerScopeAccesses": {
        "containers": [
         "properties"
        ],
        "items": {
         "type": "string"
        },
        "type": "array"
       },
       "networkManagerScopes": {
        "$ref": "#/types/azure-native_network_v20230201:network:NetworkManagerPropertiesNetworkManagerScopes",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "tags": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       }
      },
      "required": [
       "networkManagerScopeAccesses",
       "networkManagerScopes"
      ]
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkManagerName",
     "required": true,
     "value": {
      "autoname": "random",
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}",
   "response": {
    "description": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "location": {},
    "name": {},
    "networkManagerScopeAccesses": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "networkManagerScopes": {
     "$ref": "#/types/azure-native_network_v20230201:network:NetworkManagerPropertiesResponseNetworkManagerScopes",
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "systemData": {
     "$ref": "#/types/azure-native_network_v20230201:network:SystemDataResponse"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:NetworkProfile": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkProfileName",
     "required": true,
     "value": {
      "autoname": "random",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "containerNetworkInterfaceConfigurations": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:ContainerNetworkInterfaceConfiguration",
         "type": "object"
        },
        "type": "array"
       },
       "id": {
        "type": "string"
       },
       "location": {
        "type": "string"
       },
       "tags": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkProfiles/{networkProfileName}",
   "response": {
    "containerNetworkInterfaceConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ContainerNetworkInterfaceConfigurationResponse",
      "type": "object"
     }
    },
    "containerNetworkInterfaces": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ContainerNetworkInterfaceResponse",
      "type": "object"
     }
    },
    "etag": {},
    "id": {},
    "location": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:NetworkSecurityGroup": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkSecurityGroupName",
     "required": true,
     "value": {
      "autoname": "random",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "flushConnection": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "id": {
        "type": "string"
       },
       "location": {
        "type": "string"
       },
       "securityRules": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:SecurityRule",
         "type": "object"
        },
        "maintainSubResourceIfUnset": true,
        "type": "array"
       },
       "tags": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "defaultSecurityRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SecurityRuleResponse",
      "type": "object"
     }
    },
    "etag": {},
    "flowLogs": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:FlowLogResponse",
      "type": "object"
     }
    },
    "flushConnection": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "location": {},
    "name": {},
    "networkInterfaces": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceResponse",
      "type": "object"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "securityRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SecurityRuleResponse",
      "type": "object"
     }
    },
    "subnets": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubnetResponse",
      "type": "object"
     }
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:NetworkVirtualAppliance": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkVirtualApplianceName",
     "required": true,
     "value": {
      "autoname": "random",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "additionalNics": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:VirtualApplianceAdditionalNicProperties",
         "type": "object"
        },
        "type": "array"
       },
       "bootStrapConfigurationBlobs": {
        "containers": [
         "properties"
        ],
        "items": {
         "type": "string"
        },
        "type": "array"
       },
       "cloudInitConfiguration": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "cloudInitConfigurationBlobs": {
        "containers": [
         "properties"
        ],
        "items": {
         "type": "string"
        },
        "type": "array"
       },
       "delegation": {
        "$ref": "#/types/azure-native_network_v20230201:network:DelegationProperties",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "id": {
        "type": "string"
       },
       "identity": {
        "$ref": "#/types/azure-native_network_v20230201:network:ManagedServiceIdentity",
        "type": "object"
       },
       "location": {
        "type": "string"
       },
       "nvaSku": {
        "$ref": "#/types/azure-native_network_v20230201:network:VirtualApplianceSkuProperties",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "sshPublicKey": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "tags": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       },
       "virtualApplianceAsn": {
        "containers": [
         "properties"
        ],
        "maximum": 4294967295,
        "minimum": 0,
        "type": "number"
       },
       "virtualHub": {
        "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
        "containers": [
         "properties"
        ],
        "type": "object"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "additionalNics": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualApplianceAdditionalNicPropertiesResponse",
      "type": "object"
     }
    },
    "addressPrefix": {
     "containers": [
      "properties"
     ]
    },
    "bootStrapConfigurationBlobs": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "cloudInitConfiguration": {
     "containers": [
      "properties"
     ]
    },
    "cloudInitConfigurationBlobs": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "delegation": {
     "$ref": "#/types/azure-native_network_v20230201:network:DelegationPropertiesResponse",
     "containers": [
      "properties"
     ]
    },
    "deploymentType": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "identity": {
     "$ref": "#/types/azure-native_network_v20230201:network:ManagedServiceIdentityResponse"
    },
    "inboundSecurityRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "location": {},
    "name": {},
    "nvaSku": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualApplianceSkuPropertiesResponse",
     "containers": [
      "properties"
     ]
    },
    "partnerManagedResource": {
     "$ref": "#/types/azure-native_network_v20230201:network:PartnerManagedResourcePropertiesResponse",
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "sshPublicKey": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {},
    "virtualApplianceAsn": {
     "containers": [
      "properties"
     ]
    },
    "virtualApplianceConnections": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "virtualApplianceNics": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualApplianceNicPropertiesResponse",
      "type": "object"
     }
    },
    "virtualApplianceSites": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "virtualHub": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native_network_v20230201:network:NetworkVirtualApplianceConnection": {
   "PUT": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkVirtualApplianceName",
     "required": true,
     "value": {
      "pattern": "^[A-Za-z0-9_]+",
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "connectionName",
     "required": true,
     "value": {
      "autoname": "copy",
      "pattern": "^[A-Za-z0-9_]+",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "id": {
        "type": "string"
       },
       "name": {
        "type": "string"
       },
       "properties": {
        "$ref": "#/types/azure-native_network_v20230201:network:NetworkVirtualApplianceConnectionProperties",
        "type": "object"
       }
      }
     },
     "location": "body",
     "name": "NetworkVirtualApplianceConnectionParameters",
     "required": true,
     "value": {}
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}/networkVirtualApplianceConnections/{connectionName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "id": {},
    "name": {},
    "properties": {
     "$ref": "#/types/azure-native_network_v20230201:network:NetworkVirtualApplianceConnectionPropertiesResponse"
    }
   }
  },
  "azure-native_network_v20230201:network:NetworkWatcher": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkWatcherName",
     "required": true,
     "value": {
      "autoname": "random",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "id": {
        "type": "string"
       },
       "location": {
        "type": "string"
       },
       "tags": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}",
   "response": {
    "etag": {},
    "id": {},
    "location": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:P2sVpnGateway": {
   "PUT": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "gatewayName",
     "required": true,
     "value": {
      "autoname": "random",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "customDnsServers": {
        "containers": [
         "properties"
        ],
        "items": {
         "type": "string"
        },
        "type": "array"
       },
       "id": {
        "type": "string"
       },
       "isRoutingPreferenceInternet": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "location": {
        "type": "string"
       },
       "p2SConnectionConfigurations": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:P2SConnectionConfiguration",
         "type": "object"
        },
        "type": "array"
       },
       "tags": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       },
       "virtualHub": {
        "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "vpnGatewayScaleUnit": {
        "containers": [
         "properties"
        ],
        "type": "integer"
       },
       "vpnServerConfiguration": {
        "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
        "containers": [
         "properties"
        ],
        "type": "object"
       }
      },
      "required": [
       "location"
      ]
     },
     "location": "body",
     "name": "p2SVpnGatewayParameters",
     "required": true,
     "value": {}
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/p2svpnGateways/{gatewayName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "customDnsServers": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "etag": {},
    "id": {},
    "isRoutingPreferenceInternet": {
     "containers": [
      "properties"
     ]
    },
    "location": {},
    "name": {},
    "p2SConnectionConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:P2SConnectionConfigurationResponse",
      "type": "object"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {},
    "virtualHub": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "vpnClientConnectionHealth": {
     "$ref": "#/types/azure-native_network_v20230201:network:VpnClientConnectionHealthResponse",
     "containers": [
      "properties"
     ]
    },
    "vpnGatewayScaleUnit": {
     "containers": [
      "properties"
     ]
    },
    "vpnServerConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native_network_v20230201:network:PacketCapture": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkWatcherName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "packetCaptureName",
     "required": true,
     "value": {
      "autoname": "copy",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "bytesToCapturePerPacket": {
        "containers": [
         "properties"
        ],
        "default": 0,
        "maximum": 4294967295,
        "minimum": 0,
        "type": "number"
       },
       "filters": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:PacketCaptureFilter",
         "type": "object"
        },
        "type": "array"
       },
       "scope": {
        "$ref": "#/types/azure-native_network_v20230201:network:PacketCaptureMachineScope",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "storageLocation": {
        "$ref": "#/types/azure-native_network_v20230201:network:PacketCaptureStorageLocation",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "target": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "targetType": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "timeLimitInSeconds": {
        "containers": [
         "properties"
        ],
        "default": 18000,
        "maximum": 18000,
        "minimum": 0,
        "type": "integer"
       },
       "totalBytesPerSession": {
        "containers": [
         "properties"
        ],
        "default": 1073741824,
        "maximum": 4294967295,
        "minimum": 0,
        "type": "number"
       }
      },
      "required": [
       "storageLocation",
       "target"
      ]
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}",
   "putAsyncStyle": "azure-async-operation",
   "requiredContainers": [
    [
     "properties"
    ]
   ],
   "response": {
    "bytesToCapturePerPacket": {
     "containers": [
      "properties"
     ],
     "default": 0
    },
    "etag": {},
    "filters": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PacketCaptureFilterResponse",
      "type": "object"
     }
    },
    "id": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "scope": {
     "$ref": "#/types/azure-native_network_v20230201:network:PacketCaptureMachineScopeResponse",
     "containers": [
      "properties"
     ]
    },
    "storageLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:PacketCaptureStorageLocationResponse",
     "containers": [
      "properties"
     ]
    },
    "target": {
     "containers": [
      "properties"
     ]
    },
    "targetType": {
     "containers": [
      "properties"
     ]
    },
    "timeLimitInSeconds": {
     "containers": [
      "properties"
     ],
     "default": 18000
    },
    "totalBytesPerSession": {
     "containers": [
      "properties"
     ],
     "default": 1073741824
    }
   }
  },
  "azure-native_network_v20230201:network:PrivateDnsZoneGroup": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "privateEndpointName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "privateDnsZoneGroupName",
     "required": true,
     "value": {
      "autoname": "copy",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "id": {
        "type": "string"
       },
       "name": {
        "type": "string"
       },
       "privateDnsZoneConfigs": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:PrivateDnsZoneConfig",
         "type": "object"
        },
        "type": "array"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateEndpoints/{privateEndpointName}/privateDnsZoneGroups/{privateDnsZoneGroupName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "etag": {},
    "id": {},
    "name": {},
    "privateDnsZoneConfigs": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateDnsZoneConfigResponse",
      "type": "object"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native_network_v20230201:network:PrivateEndpoint": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "privateEndpointName",
     "required": true,
     "value": {
      "autoname": "random",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "applicationSecurityGroups": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:ApplicationSecurityGroup",
         "type": "object"
        },
        "type": "array"
       },
       "customDnsConfigs": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:CustomDnsConfigPropertiesFormat",
         "type": "object"
        },
        "type": "array"
       },
       "customNetworkInterfaceName": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "extendedLocation": {
        "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocation",
        "type": "object"
       },
       "id": {
        "type": "string"
       },
       "ipConfigurations": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:PrivateEndpointIPConfiguration",
         "type": "object"
        },
        "type": "array"
       },
       "location": {
        "type": "string"
       },
       "manualPrivateLinkServiceConnections": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceConnection",
         "type": "object"
        },
        "type": "array"
       },
       "privateLinkServiceConnections": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceConnection",
         "type": "object"
        },
        "type": "array"
       },
       "subnet": {
        "$ref": "#/types/azure-native_network_v20230201:network:Subnet",
        "containers": [
         "properties"
        ],
        "forceNew": true,
        "type": "object"
       },
       "tags": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateEndpoints/{privateEndpointName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "applicationSecurityGroups": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationSecurityGroupResponse",
      "type": "object"
     }
    },
    "customDnsConfigs": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:CustomDnsConfigPropertiesFormatResponse",
      "type": "object"
     }
    },
    "customNetworkInterfaceName": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse"
    },
    "id": {},
    "ipConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateEndpointIPConfigurationResponse",
      "type": "object"
     }
    },
    "location": {},
    "manualPrivateLinkServiceConnections": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceConnectionResponse",
      "type": "object"
     }
    },
    "name": {},
    "networkInterfaces": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceResponse",
      "type": "object"
     }
    },
    "privateLinkServiceConnections": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceConnectionResponse",
      "type": "object"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubnetResponse",
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:PrivateLinkService": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "serviceName",
     "required": true,
     "value": {
      "autoname": "random",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "autoApproval": {
        "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServicePropertiesAutoApproval",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "enableProxyProtocol": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "extendedLocation": {
        "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocation",
        "type": "object"
       },
       "fqdns": {
        "containers": [
         "properties"
        ],
        "items": {
         "type": "string"
        },
        "type": "array"
       },
       "id": {
        "type": "string"
       },
       "ipConfigurations": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceIpConfiguration",
         "type": "object"
        },
        "type": "array"
       },
       "loadBalancerFrontendIpConfigurations": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:FrontendIPConfiguration",
         "type": "object"
        },
        "type": "array"
       },
       "location": {
        "type": "string"
       },
       "tags": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       },
       "visibility": {
        "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServicePropertiesVisibility",
        "containers": [
         "properties"
        ],
        "type": "object"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateLinkServices/{serviceName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "alias": {
     "containers": [
      "properties"
     ]
    },
    "autoApproval": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServicePropertiesResponseAutoApproval",
     "containers": [
      "properties"
     ]
    },
    "enableProxyProtocol": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse"
    },
    "fqdns": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "id": {},
    "ipConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceIpConfigurationResponse",
      "type": "object"
     }
    },
    "loadBalancerFrontendIpConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:FrontendIPConfigurationResponse",
      "type": "object"
     }
    },
    "location": {},
    "name": {},
    "networkInterfaces": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceResponse",
      "type": "object"
     }
    },
    "privateEndpointConnections": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateEndpointConnectionResponse",
      "type": "object"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {},
    "visibility": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServicePropertiesResponseVisibility",
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native_network_v20230201:network:PrivateLinkServicePrivateEndpointConnection": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "serviceName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "peConnectionName",
     "required": true,
     "value": {
      "autoname": "copy",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "id": {
        "type": "string"
       },
       "name": {
        "type": "string"
       },
       "privateLinkServiceConnectionState": {
        "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceConnectionState",
        "containers": [
         "properties"
        ],
        "type": "object"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateLinkServices/{serviceName}/privateEndpointConnections/{peConnectionName}",
   "response": {
    "etag": {},
    "id": {},
    "linkIdentifier": {
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "privateEndpoint": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateEndpointResponse",
     "containers": [
      "properties"
     ]
    },
    "privateEndpointLocation": {
     "containers": [
      "properties"
     ]
    },
    "privateLinkServiceConnectionState": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceConnectionStateResponse",
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:PublicIPAddress": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "publicIpAddressName",
     "required": true,
     "value": {
      "autoname": "random",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "ddosSettings": {
        "$ref": "#/types/azure-native_network_v20230201:network:DdosSettings",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "deleteOption": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "dnsSettings": {
        "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddressDnsSettings",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "extendedLocation": {
        "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocation",
        "type": "object"
       },
       "id": {
        "type": "string"
       },
       "idleTimeoutInMinutes": {
        "containers": [
         "properties"
        ],
        "type": "integer"
       },
       "ipAddress": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "ipTags": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:IpTag",
         "type": "object"
        },
        "type": "array"
       },
       "linkedPublicIPAddress": {
        "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddress",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "location": {
        "forceNew": true,
        "type": "string"
       },
       "migrationPhase": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "natGateway": {
        "$ref": "#/types/azure-native_network_v20230201:network:NatGateway",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "publicIPAddressVersion": {
        "containers": [
         "properties"
        ],
        "forceNew": true,
        "type": "string"
       },
       "publicIPAllocationMethod": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "publicIPPrefix": {
        "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
        "containers": [
         "properties"
        ],
        "forceNew": true,
        "type": "object"
       },
       "servicePublicIPAddress": {
        "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddress",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "sku": {
        "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddressSku",
        "forceNew": true,
        "type": "object"
       },
       "tags": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       },
       "zones": {
        "items": {
         "type": "string"
        },
        "type": "array"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "ddosSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:DdosSettingsResponse",
     "containers": [
      "properties"
     ]
    },
    "deleteOption": {
     "containers": [
      "properties"
     ]
    },
    "dnsSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddressDnsSettingsResponse",
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse"
    },
    "id": {},
    "idleTimeoutInMinutes": {
     "containers": [
      "properties"
     ]
    },
    "ipAddress": {
     "containers": [
      "properties"
     ]
    },
    "ipConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:IPConfigurationResponse",
     "containers": [
      "properties"
     ]
    },
    "ipTags": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IpTagResponse",
      "type": "object"
     }
    },
    "linkedPublicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddressResponse",
     "containers": [
      "properties"
     ]
    },
    "location": {},
    "migrationPhase": {
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "natGateway": {
     "$ref": "#/types/azure-native_network_v20230201:network:NatGatewayResponse",
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "publicIPAddressVersion": {
     "containers": [
      "properties"
     ]
    },
    "publicIPAllocationMethod": {
     "containers": [
      "properties"
     ]
    },
    "publicIPPrefix": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "servicePublicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddressResponse",
     "containers": [
      "properties"
     ]
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddressSkuResponse"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {},
    "zones": {
     "items": {
      "type": "string"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:PublicIPPrefix": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "publicIpPrefixName",
     "required": true,
     "value": {
      "autoname": "random",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "customIPPrefix": {
        "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "extendedLocation": {
        "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocation",
        "type": "object"
       },
       "id": {
        "type": "string"
       },
       "ipTags": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:IpTag",
         "type": "object"
        },
        "type": "array"
       },
       "location": {
        "type": "string"
       },
       "natGateway": {
        "$ref": "#/types/azure-native_network_v20230201:network:NatGateway",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "prefixLength": {
        "containers": [
         "properties"
        ],
        "type": "integer"
       },
       "publicIPAddressVersion": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "sku": {
        "$ref": "#/types/azure-native_network_v20230201:network:PublicIPPrefixSku",
        "type": "object"
       },
       "tags": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       },
       "zones": {
        "items": {
         "type": "string"
        },
        "type": "array"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIpPrefixName}",
   "putAsyncStyle": "location",
   "response": {
    "customIPPrefix": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse"
    },
    "id": {},
    "ipPrefix": {
     "containers": [
      "properties"
     ]
    },
    "ipTags": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IpTagResponse",
      "type": "object"
     }
    },
    "loadBalancerFrontendIpConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "location": {},
    "name": {},
    "natGateway": {
     "$ref": "#/types/azure-native_network_v20230201:network:NatGatewayResponse",
     "containers": [
      "properties"
     ]
    },
    "prefixLength": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "publicIPAddressVersion": {
     "containers": [
      "properties"
     ]
    },
    "publicIPAddresses": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ReferencedPublicIpAddressResponse",
      "type": "object"
     }
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPPrefixSkuResponse"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {},
    "zones": {
     "items": {
      "type": "string"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:Route": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "routeTableName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "routeName",
     "required": true,
     "value": {
      "autoname": "copy",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "addressPrefix": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "hasBgpOverride": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "id": {
        "type": "string"
       },
       "name": {
        "type": "string"
       },
       "nextHopIpAddress": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "nextHopType": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "type": {
        "type": "string"
       }
      },
      "required": [
       "nextHopType"
      ]
     },
     "location": "body",
     "name": "routeParameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "addressPrefix": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "hasBgpOverride": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "name": {},
    "nextHopIpAddress": {
     "containers": [
      "properties"
     ]
    },
    "nextHopType": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:RouteFilter": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "routeFilterName",
     "required": true,
     "value": {
      "autoname": "random",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "id": {
        "type": "string"
       },
       "location": {
        "type": "string"
       },
       "rules": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:RouteFilterRule",
         "type": "object"
        },
        "maintainSubResourceIfUnset": true,
        "type": "array"
       },
       "tags": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       }
      },
      "required": [
       "location"
      ]
     },
     "location": "body",
     "name": "routeFilterParameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "etag": {},
    "id": {},
    "ipv6Peerings": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitPeeringResponse",
      "type": "object"
     }
    },
    "location": {},
    "name": {},
    "peerings": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitPeeringResponse",
      "type": "object"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "rules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:RouteFilterRuleResponse",
      "type": "object"
     }
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:RouteFilterRule": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "routeFilterName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "ruleName",
     "required": true,
     "value": {
      "autoname": "copy",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "access": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "communities": {
        "containers": [
         "properties"
        ],
        "items": {
         "type": "string"
        },
        "type": "array"
       },
       "id": {
        "type": "string"
       },
       "location": {
        "type": "string"
       },
       "name": {
        "type": "string"
       },
       "routeFilterRuleType": {
        "containers": [
         "properties"
        ],
        "type": "string"
       }
      },
      "required": [
       "access",
       "communities",
       "routeFilterRuleType"
      ]
     },
     "location": "body",
     "name": "routeFilterRuleParameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "access": {
     "containers": [
      "properties"
     ]
    },
    "communities": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "etag": {},
    "id": {},
    "location": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "routeFilterRuleType": {
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native_network_v20230201:network:RouteMap": {
   "PUT": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "virtualHubName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "routeMapName",
     "required": true,
     "value": {
      "autoname": "copy",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "associatedInboundConnections": {
        "containers": [
         "properties"
        ],
        "items": {
         "type": "string"
        },
        "type": "array"
       },
       "associatedOutboundConnections": {
        "containers": [
         "properties"
        ],
        "items": {
         "type": "string"
        },
        "type": "array"
       },
       "id": {
        "type": "string"
       },
       "rules": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:RouteMapRule",
         "type": "object"
        },
        "type": "array"
       }
      }
     },
     "location": "body",
     "name": "routeMapParameters",
     "required": true,
     "value": {}
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routeMaps/{routeMapName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "associatedInboundConnections": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "associatedOutboundConnections": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "etag": {},
    "id": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "rules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:RouteMapRuleResponse",
      "type": "object"
     }
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:RouteTable": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "routeTableName",
     "required": true,
     "value": {
      "autoname": "random",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "disableBgpRoutePropagation": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "id": {
        "type": "string"
       },
       "location": {
        "type": "string"
       },
       "routes": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:Route",
         "type": "object"
        },
        "maintainSubResourceIfUnset": true,
        "type": "array"
       },
       "tags": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "disableBgpRoutePropagation": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "location": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "routes": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:RouteResponse",
      "type": "object"
     }
    },
    "subnets": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubnetResponse",
      "type": "object"
     }
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:RoutingIntent": {
   "PUT": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "virtualHubName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "routingIntentName",
     "required": true,
     "value": {
      "autoname": "copy",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "id": {
        "type": "string"
       },
       "name": {
        "type": "string"
       },
       "routingPolicies": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:RoutingPolicy",
         "type": "object"
        },
        "type": "array"
       }
      }
     },
     "location": "body",
     "name": "routingIntentParameters",
     "required": true,
     "value": {}
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routingIntent/{routingIntentName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "etag": {},
    "id": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "routingPolicies": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:RoutingPolicyResponse",
      "type": "object"
     }
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:ScopeConnection": {
   "PUT": [
    {
     "body": {
      "properties": {
       "description": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "resourceId": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "tenantId": {
        "containers": [
         "properties"
        ],
        "type": "string"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkManagerName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "scopeConnectionName",
     "required": true,
     "value": {
      "autoname": "copy",
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/scopeConnections/{scopeConnectionName}",
   "response": {
    "description": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "name": {},
    "resourceId": {
     "containers": [
      "properties"
     ]
    },
    "systemData": {
     "$ref": "#/types/azure-native_network_v20230201:network:SystemDataResponse"
    },
    "tenantId": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:SecurityAdminConfiguration": {
   "PUT": [
    {
     "body": {
      "properties": {
       "applyOnNetworkIntentPolicyBasedServices": {
        "containers": [
         "properties"
        ],
        "items": {
         "type": "string"
        },
        "type": "array"
       },
       "description": {
        "containers": [
         "properties"
        ],
        "type": "string"
       }
      }
     },
     "location": "body",
     "name": "securityAdminConfiguration",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkManagerName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "configurationName",
     "required": true,
     "value": {
      "autoname": "copy",
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/securityAdminConfigurations/{configurationName}",
   "response": {
    "applyOnNetworkIntentPolicyBasedServices": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "description": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "systemData": {
     "$ref": "#/types/azure-native_network_v20230201:network:SystemDataResponse"
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:SecurityPartnerProvider": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "securityPartnerProviderName",
     "required": true,
     "value": {
      "autoname": "random",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "id": {
        "type": "string"
       },
       "location": {
        "type": "string"
       },
       "securityProviderName": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "tags": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       },
       "virtualHub": {
        "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
        "containers": [
         "properties"
        ],
        "type": "object"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/securityPartnerProviders/{securityPartnerProviderName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "connectionStatus": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "location": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "securityProviderName": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {},
    "virtualHub": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native_network_v20230201:network:SecurityRule": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkSecurityGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "securityRuleName",
     "required": true,
     "value": {
      "autoname": "copy",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "access": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "description": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "destinationAddressPrefix": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "destinationAddressPrefixes": {
        "containers": [
         "properties"
        ],
        "items": {
         "type": "string"
        },
        "type": "array"
       },
       "destinationApplicationSecurityGroups": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:ApplicationSecurityGroup",
         "type": "object"
        },
        "type": "array"
       },
       "destinationPortRange": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "destinationPortRanges": {
        "containers": [
         "properties"
        ],
        "items": {
         "type": "string"
        },
        "type": "array"
       },
       "direction": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "id": {
        "type": "string"
       },
       "name": {
        "type": "string"
       },
       "priority": {
        "containers": [
         "properties"
        ],
        "type": "integer"
       },
       "protocol": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "sourceAddressPrefix": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "sourceAddressPrefixes": {
        "containers": [
         "properties"
        ],
        "items": {
         "type": "string"
        },
        "type": "array"
       },
       "sourceApplicationSecurityGroups": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:ApplicationSecurityGroup",
         "type": "object"
        },
        "type": "array"
       },
       "sourcePortRange": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "sourcePortRanges": {
        "containers": [
         "properties"
        ],
        "items": {
         "type": "string"
        },
        "type": "array"
       },
       "type": {
        "type": "string"
       }
      },
      "required": [
       "access",
       "direction",
       "priority",
       "protocol"
      ]
     },
     "location": "body",
     "name": "securityRuleParameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}/securityRules/{securityRuleName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "access": {
     "containers": [
      "properties"
     ]
    },
    "description": {
     "containers": [
      "properties"
     ]
    },
    "destinationAddressPrefix": {
     "containers": [
      "properties"
     ]
    },
    "destinationAddressPrefixes": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "destinationApplicationSecurityGroups": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationSecurityGroupResponse",
      "type": "object"
     }
    },
    "destinationPortRange": {
     "containers": [
      "properties"
     ]
    },
    "destinationPortRanges": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "direction": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "name": {},
    "priority": {
     "containers": [
      "properties"
     ]
    },
    "protocol": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "sourceAddressPrefix": {
     "containers": [
      "properties"
     ]
    },
    "sourceAddressPrefixes": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "sourceApplicationSecurityGroups": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationSecurityGroupResponse",
      "type": "object"
     }
    },
    "sourcePortRange": {
     "containers": [
      "properties"
     ]
    },
    "sourcePortRanges": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:ServiceEndpointPolicy": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "serviceEndpointPolicyName",
     "required": true,
     "value": {
      "autoname": "random",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "contextualServiceEndpointPolicies": {
        "containers": [
         "properties"
        ],
        "items": {
         "type": "string"
        },
        "type": "array"
       },
       "id": {
        "type": "string"
       },
       "location": {
        "type": "string"
       },
       "serviceAlias": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "serviceEndpointPolicyDefinitions": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:ServiceEndpointPolicyDefinition",
         "type": "object"
        },
        "maintainSubResourceIfUnset": true,
        "type": "array"
       },
       "tags": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies/{serviceEndpointPolicyName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "contextualServiceEndpointPolicies": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "etag": {},
    "id": {},
    "kind": {},
    "location": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "serviceAlias": {
     "containers": [
      "properties"
     ]
    },
    "serviceEndpointPolicyDefinitions": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ServiceEndpointPolicyDefinitionResponse",
      "type": "object"
     }
    },
    "subnets": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubnetResponse",
      "type": "object"
     }
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:ServiceEndpointPolicyDefinition": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "serviceEndpointPolicyName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "serviceEndpointPolicyDefinitionName",
     "required": true,
     "value": {
      "autoname": "copy",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "description": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "id": {
        "type": "string"
       },
       "name": {
        "type": "string"
       },
       "service": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "serviceResources": {
        "containers": [
         "properties"
        ],
        "items": {
         "type": "string"
        },
        "type": "array"
       },
       "type": {
        "type": "string"
       }
      }
     },
     "location": "body",
     "name": "ServiceEndpointPolicyDefinitions",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies/{serviceEndpointPolicyName}/serviceEndpointPolicyDefinitions/{serviceEndpointPolicyDefinitionName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "description": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "service": {
     "containers": [
      "properties"
     ]
    },
    "serviceResources": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:StaticMember": {
   "PUT": [
    {
     "body": {
      "properties": {
       "resourceId": {
        "containers": [
         "properties"
        ],
        "type": "string"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkManagerName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "staticMemberName",
     "required": true,
     "value": {
      "autoname": "copy",
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/networkGroups/{networkGroupName}/staticMembers/{staticMemberName}",
   "response": {
    "etag": {},
    "id": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "region": {
     "containers": [
      "properties"
     ]
    },
    "resourceId": {
     "containers": [
      "properties"
     ]
    },
    "systemData": {
     "$ref": "#/types/azure-native_network_v20230201:network:SystemDataResponse"
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:Subnet": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "virtualNetworkName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subnetName",
     "required": true,
     "value": {
      "autoname": "copy",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "addressPrefix": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "addressPrefixes": {
        "containers": [
         "properties"
        ],
        "items": {
         "type": "string"
        },
        "type": "array"
       },
       "applicationGatewayIPConfigurations": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayIPConfiguration",
         "type": "object"
        },
        "type": "array"
       },
       "delegations": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:Delegation",
         "type": "object"
        },
        "type": "array"
       },
       "id": {
        "type": "string"
       },
       "ipAllocations": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
         "type": "object"
        },
        "type": "array"
       },
       "name": {
        "type": "string"
       },
       "natGateway": {
        "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "networkSecurityGroup": {
        "$ref": "#/types/azure-native_network_v20230201:network:NetworkSecurityGroup",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "privateEndpointNetworkPolicies": {
        "containers": [
         "properties"
        ],
        "default": "Disabled",
        "type": "string"
       },
       "privateLinkServiceNetworkPolicies": {
        "containers": [
         "properties"
        ],
        "default": "Enabled",
        "type": "string"
       },
       "routeTable": {
        "$ref": "#/types/azure-native_network_v20230201:network:RouteTable",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "serviceEndpointPolicies": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:ServiceEndpointPolicy",
         "type": "object"
        },
        "type": "array"
       },
       "serviceEndpoints": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:ServiceEndpointPropertiesFormat",
         "type": "object"
        },
        "type": "array"
       },
       "type": {
        "type": "string"
       }
      }
     },
     "location": "body",
     "name": "subnetParameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "addressPrefix": {
     "containers": [
      "properties"
     ]
    },
    "addressPrefixes": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "applicationGatewayIPConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayIPConfigurationResponse",
      "type": "object"
     }
    },
    "delegations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:DelegationResponse",
      "type": "object"
     }
    },
    "etag": {},
    "id": {},
    "ipAllocations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "ipConfigurationProfiles": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IPConfigurationProfileResponse",
      "type": "object"
     }
    },
    "ipConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IPConfigurationResponse",
      "type": "object"
     }
    },
    "name": {},
    "natGateway": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "networkSecurityGroup": {
     "$ref": "#/types/azure-native_network_v20230201:network:NetworkSecurityGroupResponse",
     "containers": [
      "properties"
     ]
    },
    "privateEndpointNetworkPolicies": {
     "containers": [
      "properties"
     ],
     "default": "Disabled"
    },
    "privateEndpoints": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateEndpointResponse",
      "type": "object"
     }
    },
    "privateLinkServiceNetworkPolicies": {
     "containers": [
      "properties"
     ],
     "default": "Enabled"
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "purpose": {
     "containers": [
      "properties"
     ]
    },
    "resourceNavigationLinks": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ResourceNavigationLinkResponse",
      "type": "object"
     }
    },
    "routeTable": {
     "$ref": "#/types/azure-native_network_v20230201:network:RouteTableResponse",
     "containers": [
      "properties"
     ]
    },
    "serviceAssociationLinks": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ServiceAssociationLinkResponse",
      "type": "object"
     }
    },
    "serviceEndpointPolicies": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ServiceEndpointPolicyResponse",
      "type": "object"
     }
    },
    "serviceEndpoints": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ServiceEndpointPropertiesFormatResponse",
      "type": "object"
     }
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:SubscriptionNetworkManagerConnection": {
   "PUT": [
    {
     "body": {
      "properties": {
       "description": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "networkManagerId": {
        "containers": [
         "properties"
        ],
        "type": "string"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkManagerConnectionName",
     "required": true,
     "value": {
      "autoname": "random",
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkManagerConnections/{networkManagerConnectionName}",
   "response": {
    "description": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "name": {},
    "networkManagerId": {
     "containers": [
      "properties"
     ]
    },
    "systemData": {
     "$ref": "#/types/azure-native_network_v20230201:network:SystemDataResponse"
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:VirtualApplianceSite": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "networkVirtualApplianceName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "siteName",
     "required": true,
     "value": {
      "autoname": "copy",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "addressPrefix": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "id": {
        "type": "string"
       },
       "name": {
        "type": "string"
       },
       "o365Policy": {
        "$ref": "#/types/azure-native_network_v20230201:network:Office365PolicyProperties",
        "containers": [
         "properties"
        ],
        "type": "object"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}/virtualApplianceSites/{siteName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "addressPrefix": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "name": {},
    "o365Policy": {
     "$ref": "#/types/azure-native_network_v20230201:network:Office365PolicyPropertiesResponse",
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:VirtualHub": {
   "PUT": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "virtualHubName",
     "required": true,
     "value": {
      "autoname": "random",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "addressPrefix": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "allowBranchToBranchTraffic": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "azureFirewall": {
        "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "expressRouteGateway": {
        "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "hubRoutingPreference": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "id": {
        "type": "string"
       },
       "location": {
        "type": "string"
       },
       "p2SVpnGateway": {
        "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "preferredRoutingGateway": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "routeTable": {
        "$ref": "#/types/azure-native_network_v20230201:network:VirtualHubRouteTable",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "securityPartnerProvider": {
        "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "securityProviderName": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "sku": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "tags": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       },
       "virtualHubRouteTableV2s": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:VirtualHubRouteTableV2",
         "type": "object"
        },
        "maintainSubResourceIfUnset": true,
        "type": "array"
       },
       "virtualRouterAsn": {
        "containers": [
         "properties"
        ],
        "maximum": 4294967295,
        "minimum": 0,
        "type": "number"
       },
       "virtualRouterAutoScaleConfiguration": {
        "$ref": "#/types/azure-native_network_v20230201:network:VirtualRouterAutoScaleConfiguration",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "virtualRouterIps": {
        "containers": [
         "properties"
        ],
        "items": {
         "type": "string"
        },
        "type": "array"
       },
       "virtualWan": {
        "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "vpnGateway": {
        "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
        "containers": [
         "properties"
        ],
        "type": "object"
       }
      },
      "required": [
       "location"
      ]
     },
     "location": "body",
     "name": "virtualHubParameters",
     "required": true,
     "value": {}
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "addressPrefix": {
     "containers": [
      "properties"
     ]
    },
    "allowBranchToBranchTraffic": {
     "containers": [
      "properties"
     ]
    },
    "azureFirewall": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "bgpConnections": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "etag": {},
    "expressRouteGateway": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "hubRoutingPreference": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "ipConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "kind": {},
    "location": {},
    "name": {},
    "p2SVpnGateway": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "preferredRoutingGateway": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "routeMaps": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "routeTable": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualHubRouteTableResponse",
     "containers": [
      "properties"
     ]
    },
    "routingState": {
     "containers": [
      "properties"
     ]
    },
    "securityPartnerProvider": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "securityProviderName": {
     "containers": [
      "properties"
     ]
    },
    "sku": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {},
    "virtualHubRouteTableV2s": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualHubRouteTableV2Response",
      "type": "object"
     }
    },
    "virtualRouterAsn": {
     "containers": [
      "properties"
     ]
    },
    "virtualRouterAutoScaleConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualRouterAutoScaleConfigurationResponse",
     "containers": [
      "properties"
     ]
    },
    "virtualRouterIps": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "virtualWan": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "vpnGateway": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native_network_v20230201:network:VirtualHubBgpConnection": {
   "PUT": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "virtualHubName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "connectionName",
     "required": true,
     "value": {
      "autoname": "copy",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "hubVirtualNetworkConnection": {
        "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "id": {
        "type": "string"
       },
       "name": {
        "type": "string"
       },
       "peerAsn": {
        "containers": [
         "properties"
        ],
        "maximum": 4294967295,
        "minimum": 0,
        "type": "number"
       },
       "peerIp": {
        "containers": [
         "properties"
        ],
        "type": "string"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/bgpConnections/{connectionName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "connectionState": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "hubVirtualNetworkConnection": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "name": {},
    "peerAsn": {
     "containers": [
      "properties"
     ]
    },
    "peerIp": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:VirtualHubIpConfiguration": {
   "PUT": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "virtualHubName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "ipConfigName",
     "required": true,
     "value": {
      "autoname": "copy",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "id": {
        "type": "string"
       },
       "name": {
        "type": "string"
       },
       "privateIPAddress": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "privateIPAllocationMethod": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "publicIPAddress": {
        "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddress",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "subnet": {
        "$ref": "#/types/azure-native_network_v20230201:network:Subnet",
        "containers": [
         "properties"
        ],
        "type": "object"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/ipConfigurations/{ipConfigName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "etag": {},
    "id": {},
    "name": {},
    "privateIPAddress": {
     "containers": [
      "properties"
     ]
    },
    "privateIPAllocationMethod": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "publicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddressResponse",
     "containers": [
      "properties"
     ]
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubnetResponse",
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:VirtualHubRouteTableV2": {
   "PUT": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "virtualHubName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "routeTableName",
     "required": true,
     "value": {
      "autoname": "copy",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "attachedConnections": {
        "containers": [
         "properties"
        ],
        "items": {
         "type": "string"
        },
        "type": "array"
       },
       "id": {
        "type": "string"
       },
       "name": {
        "type": "string"
       },
       "routes": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:VirtualHubRouteV2",
         "type": "object"
        },
        "type": "array"
       }
      }
     },
     "location": "body",
     "name": "virtualHubRouteTableV2Parameters",
     "required": true,
     "value": {}
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routeTables/{routeTableName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "attachedConnections": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "etag": {},
    "id": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "routes": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualHubRouteV2Response",
      "type": "object"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:VirtualNetwork": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "virtualNetworkName",
     "required": true,
     "value": {
      "autoname": "random",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "addressSpace": {
        "$ref": "#/types/azure-native_network_v20230201:network:AddressSpace",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "bgpCommunities": {
        "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkBgpCommunities",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "ddosProtectionPlan": {
        "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "dhcpOptions": {
        "$ref": "#/types/azure-native_network_v20230201:network:DhcpOptions",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "enableDdosProtection": {
        "containers": [
         "properties"
        ],
        "default": false,
        "type": "boolean"
       },
       "enableVmProtection": {
        "containers": [
         "properties"
        ],
        "default": false,
        "type": "boolean"
       },
       "encryption": {
        "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkEncryption",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "extendedLocation": {
        "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocation",
        "type": "object"
       },
       "flowTimeoutInMinutes": {
        "containers": [
         "properties"
        ],
        "type": "integer"
       },
       "id": {
        "type": "string"
       },
       "ipAllocations": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
         "type": "object"
        },
        "type": "array"
       },
       "location": {
        "forceNew": true,
        "type": "string"
       },
       "subnets": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:Subnet",
         "type": "object"
        },
        "maintainSubResourceIfUnset": true,
        "type": "array"
       },
       "tags": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       },
       "virtualNetworkPeerings": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkPeering",
         "type": "object"
        },
        "maintainSubResourceIfUnset": true,
        "type": "array"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "addressSpace": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpaceResponse",
     "containers": [
      "properties"
     ]
    },
    "bgpCommunities": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkBgpCommunitiesResponse",
     "containers": [
      "properties"
     ]
    },
    "ddosProtectionPlan": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "dhcpOptions": {
     "$ref": "#/types/azure-native_network_v20230201:network:DhcpOptionsResponse",
     "containers": [
      "properties"
     ]
    },
    "enableDdosProtection": {
     "containers": [
      "properties"
     ],
     "default": false
    },
    "enableVmProtection": {
     "containers": [
      "properties"
     ],
     "default": false
    },
    "encryption": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkEncryptionResponse",
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse"
    },
    "flowLogs": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:FlowLogResponse",
      "type": "object"
     }
    },
    "flowTimeoutInMinutes": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "ipAllocations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "location": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "subnets": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubnetResponse",
      "type": "object"
     }
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {},
    "virtualNetworkPeerings": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkPeeringResponse",
      "type": "object"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:VirtualNetworkGateway": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "virtualNetworkGatewayName",
     "required": true,
     "value": {
      "autoname": "random",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "activeActive": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "adminState": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "allowRemoteVnetTraffic": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "allowVirtualWanTraffic": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "bgpSettings": {
        "$ref": "#/types/azure-native_network_v20230201:network:BgpSettings",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "customRoutes": {
        "$ref": "#/types/azure-native_network_v20230201:network:AddressSpace",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "disableIPSecReplayProtection": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "enableBgp": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "enableBgpRouteTranslationForNat": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "enableDnsForwarding": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "enablePrivateIpAddress": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "extendedLocation": {
        "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocation",
        "type": "object"
       },
       "gatewayDefaultSite": {
        "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "gatewayType": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "id": {
        "type": "string"
       },
       "ipConfigurations": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewayIPConfiguration",
         "type": "object"
        },
        "type": "array"
       },
       "location": {
        "type": "string"
       },
       "natRules": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewayNatRule",
         "type": "object"
        },
        "maintainSubResourceIfUnset": true,
        "type": "array"
       },
       "sku": {
        "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewaySku",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "tags": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       },
       "vNetExtendedLocationResourceId": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "virtualNetworkGatewayPolicyGroups": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewayPolicyGroup",
         "type": "object"
        },
        "type": "array"
       },
       "vpnClientConfiguration": {
        "$ref": "#/types/azure-native_network_v20230201:network:VpnClientConfiguration",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "vpnGatewayGeneration": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "vpnType": {
        "containers": [
         "properties"
        ],
        "type": "string"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}",
   "putAsyncStyle": "azure-async-operation",
   "requiredContainers": [
    [
     "properties"
    ]
   ],
   "response": {
    "activeActive": {
     "containers": [
      "properties"
     ]
    },
    "adminState": {
     "containers": [
      "properties"
     ]
    },
    "allowRemoteVnetTraffic": {
     "containers": [
      "properties"
     ]
    },
    "allowVirtualWanTraffic": {
     "containers": [
      "properties"
     ]
    },
    "bgpSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:BgpSettingsResponse",
     "containers": [
      "properties"
     ]
    },
    "customRoutes": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpaceResponse",
     "containers": [
      "properties"
     ]
    },
    "disableIPSecReplayProtection": {
     "containers": [
      "properties"
     ]
    },
    "enableBgp": {
     "containers": [
      "properties"
     ]
    },
    "enableBgpRouteTranslationForNat": {
     "containers": [
      "properties"
     ]
    },
    "enableDnsForwarding": {
     "containers": [
      "properties"
     ]
    },
    "enablePrivateIpAddress": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse"
    },
    "gatewayDefaultSite": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "gatewayType": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "inboundDnsForwardingEndpoint": {
     "containers": [
      "properties"
     ]
    },
    "ipConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewayIPConfigurationResponse",
      "type": "object"
     }
    },
    "location": {},
    "name": {},
    "natRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewayNatRuleResponse",
      "type": "object"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewaySkuResponse",
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {},
    "vNetExtendedLocationResourceId": {
     "containers": [
      "properties"
     ]
    },
    "virtualNetworkGatewayPolicyGroups": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewayPolicyGroupResponse",
      "type": "object"
     }
    },
    "vpnClientConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:VpnClientConfigurationResponse",
     "containers": [
      "properties"
     ]
    },
    "vpnGatewayGeneration": {
     "containers": [
      "properties"
     ]
    },
    "vpnType": {
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native_network_v20230201:network:VirtualNetworkGatewayConnection": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "virtualNetworkGatewayConnectionName",
     "required": true,
     "value": {
      "autoname": "random",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "authorizationKey": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "connectionMode": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "connectionProtocol": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "connectionType": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "dpdTimeoutSeconds": {
        "containers": [
         "properties"
        ],
        "type": "integer"
       },
       "egressNatRules": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
         "type": "object"
        },
        "type": "array"
       },
       "enableBgp": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "enablePrivateLinkFastPath": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "expressRouteGatewayBypass": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "gatewayCustomBgpIpAddresses": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:GatewayCustomBgpIpAddressIpConfiguration",
         "type": "object"
        },
        "type": "array"
       },
       "id": {
        "type": "string"
       },
       "ingressNatRules": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
         "type": "object"
        },
        "type": "array"
       },
       "ipsecPolicies": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:IpsecPolicy",
         "type": "object"
        },
        "type": "array"
       },
       "localNetworkGateway2": {
        "$ref": "#/types/azure-native_network_v20230201:network:LocalNetworkGateway",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "location": {
        "type": "string"
       },
       "peer": {
        "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "routingWeight": {
        "containers": [
         "properties"
        ],
        "type": "integer"
       },
       "sharedKey": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "tags": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       },
       "trafficSelectorPolicies": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:TrafficSelectorPolicy",
         "type": "object"
        },
        "type": "array"
       },
       "useLocalAzureIpAddress": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "usePolicyBasedTrafficSelectors": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "virtualNetworkGateway1": {
        "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGateway",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "virtualNetworkGateway2": {
        "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGateway",
        "containers": [
         "properties"
        ],
        "type": "object"
       }
      },
      "required": [
       "connectionType",
       "virtualNetworkGateway1"
      ]
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}",
   "putAsyncStyle": "azure-async-operation",
   "requiredContainers": [
    [
     "properties"
    ]
   ],
   "response": {
    "authorizationKey": {
     "containers": [
      "properties"
     ]
    },
    "connectionMode": {
     "containers": [
      "properties"
     ]
    },
    "connectionProtocol": {
     "containers": [
      "properties"
     ]
    },
    "connectionStatus": {
     "containers": [
      "properties"
     ]
    },
    "connectionType": {
     "containers": [
      "properties"
     ]
    },
    "dpdTimeoutSeconds": {
     "containers": [
      "properties"
     ]
    },
    "egressBytesTransferred": {
     "containers": [
      "properties"
     ]
    },
    "egressNatRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "enableBgp": {
     "containers": [
      "properties"
     ]
    },
    "enablePrivateLinkFastPath": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "expressRouteGatewayBypass": {
     "containers": [
      "properties"
     ]
    },
    "gatewayCustomBgpIpAddresses": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:GatewayCustomBgpIpAddressIpConfigurationResponse",
      "type": "object"
     }
    },
    "id": {},
    "ingressBytesTransferred": {
     "containers": [
      "properties"
     ]
    },
    "ingressNatRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "ipsecPolicies": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IpsecPolicyResponse",
      "type": "object"
     }
    },
    "localNetworkGateway2": {
     "$ref": "#/types/azure-native_network_v20230201:network:LocalNetworkGatewayResponse",
     "containers": [
      "properties"
     ]
    },
    "location": {},
    "name": {},
    "peer": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "routingWeight": {
     "containers": [
      "properties"
     ]
    },
    "sharedKey": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "trafficSelectorPolicies": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:TrafficSelectorPolicyResponse",
      "type": "object"
     }
    },
    "tunnelConnectionStatus": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:TunnelConnectionHealthResponse",
      "type": "object"
     }
    },
    "type": {},
    "useLocalAzureIpAddress": {
     "containers": [
      "properties"
     ]
    },
    "usePolicyBasedTrafficSelectors": {
     "containers": [
      "properties"
     ]
    },
    "virtualNetworkGateway1": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewayResponse",
     "containers": [
      "properties"
     ]
    },
    "virtualNetworkGateway2": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewayResponse",
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native_network_v20230201:network:VirtualNetworkGatewayNatRule": {
   "PUT": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "virtualNetworkGatewayName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "natRuleName",
     "required": true,
     "value": {
      "autoname": "copy",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "externalMappings": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:VpnNatRuleMapping",
         "type": "object"
        },
        "type": "array"
       },
       "id": {
        "type": "string"
       },
       "internalMappings": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:VpnNatRuleMapping",
         "type": "object"
        },
        "type": "array"
       },
       "ipConfigurationId": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "mode": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "name": {
        "type": "string"
       },
       "type": {
        "containers": [
         "properties"
        ],
        "type": "string"
       }
      }
     },
     "location": "body",
     "name": "NatRuleParameters",
     "required": true,
     "value": {}
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/natRules/{natRuleName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "etag": {},
    "externalMappings": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnNatRuleMappingResponse",
      "type": "object"
     }
    },
    "id": {},
    "internalMappings": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnNatRuleMappingResponse",
      "type": "object"
     }
    },
    "ipConfigurationId": {
     "containers": [
      "properties"
     ]
    },
    "mode": {
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:VirtualNetworkPeering": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "virtualNetworkName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "virtualNetworkPeeringName",
     "required": true,
     "value": {
      "autoname": "copy",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "allowForwardedTraffic": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "allowGatewayTransit": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "allowVirtualNetworkAccess": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "doNotVerifyRemoteGateways": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "id": {
        "type": "string"
       },
       "name": {
        "type": "string"
       },
       "peeringState": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "peeringSyncLevel": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "remoteAddressSpace": {
        "$ref": "#/types/azure-native_network_v20230201:network:AddressSpace",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "remoteBgpCommunities": {
        "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkBgpCommunities",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "remoteVirtualNetwork": {
        "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "remoteVirtualNetworkAddressSpace": {
        "$ref": "#/types/azure-native_network_v20230201:network:AddressSpace",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "type": {
        "type": "string"
       },
       "useRemoteGateways": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       }
      }
     },
     "location": "body",
     "name": "VirtualNetworkPeeringParameters",
     "required": true,
     "value": {}
    },
    {
     "location": "query",
     "name": "syncRemoteAddressSpace",
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/virtualNetworkPeerings/{virtualNetworkPeeringName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "allowForwardedTraffic": {
     "containers": [
      "properties"
     ]
    },
    "allowGatewayTransit": {
     "containers": [
      "properties"
     ]
    },
    "allowVirtualNetworkAccess": {
     "containers": [
      "properties"
     ]
    },
    "doNotVerifyRemoteGateways": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "name": {},
    "peeringState": {
     "containers": [
      "properties"
     ]
    },
    "peeringSyncLevel": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "remoteAddressSpace": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpaceResponse",
     "containers": [
      "properties"
     ]
    },
    "remoteBgpCommunities": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkBgpCommunitiesResponse",
     "containers": [
      "properties"
     ]
    },
    "remoteVirtualNetwork": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "remoteVirtualNetworkAddressSpace": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpaceResponse",
     "containers": [
      "properties"
     ]
    },
    "remoteVirtualNetworkEncryption": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkEncryptionResponse",
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "type": {},
    "useRemoteGateways": {
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native_network_v20230201:network:VirtualNetworkTap": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "tapName",
     "required": true,
     "value": {
      "autoname": "random",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "destinationLoadBalancerFrontEndIPConfiguration": {
        "$ref": "#/types/azure-native_network_v20230201:network:FrontendIPConfiguration",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "destinationNetworkInterfaceIPConfiguration": {
        "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceIPConfiguration",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "destinationPort": {
        "containers": [
         "properties"
        ],
        "type": "integer"
       },
       "id": {
        "type": "string"
       },
       "location": {
        "type": "string"
       },
       "tags": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkTaps/{tapName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "destinationLoadBalancerFrontEndIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:FrontendIPConfigurationResponse",
     "containers": [
      "properties"
     ]
    },
    "destinationNetworkInterfaceIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceIPConfigurationResponse",
     "containers": [
      "properties"
     ]
    },
    "destinationPort": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "location": {},
    "name": {},
    "networkInterfaceTapConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceTapConfigurationResponse",
      "type": "object"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:VirtualRouter": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "virtualRouterName",
     "required": true,
     "value": {
      "autoname": "random",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "hostedGateway": {
        "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "hostedSubnet": {
        "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "id": {
        "type": "string"
       },
       "location": {
        "type": "string"
       },
       "tags": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       },
       "virtualRouterAsn": {
        "containers": [
         "properties"
        ],
        "maximum": 4294967295,
        "minimum": 0,
        "type": "number"
       },
       "virtualRouterIps": {
        "containers": [
         "properties"
        ],
        "items": {
         "type": "string"
        },
        "type": "array"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualRouters/{virtualRouterName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "etag": {},
    "hostedGateway": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "hostedSubnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "location": {},
    "name": {},
    "peerings": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {},
    "virtualRouterAsn": {
     "containers": [
      "properties"
     ]
    },
    "virtualRouterIps": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:VirtualRouterPeering": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "virtualRouterName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "peeringName",
     "required": true,
     "value": {
      "autoname": "copy",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "id": {
        "type": "string"
       },
       "name": {
        "type": "string"
       },
       "peerAsn": {
        "containers": [
         "properties"
        ],
        "maximum": 4294967295,
        "minimum": 0,
        "type": "number"
       },
       "peerIp": {
        "containers": [
         "properties"
        ],
        "type": "string"
       }
      }
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualRouters/{virtualRouterName}/peerings/{peeringName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "etag": {},
    "id": {},
    "name": {},
    "peerAsn": {
     "containers": [
      "properties"
     ]
    },
    "peerIp": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:VirtualWan": {
   "PUT": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "VirtualWANName",
     "required": true,
     "value": {
      "autoname": "random",
      "sdkName": "virtualWANName",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "allowBranchToBranchTraffic": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "allowVnetToVnetTraffic": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "disableVpnEncryption": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "id": {
        "type": "string"
       },
       "location": {
        "type": "string"
       },
       "tags": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       },
       "type": {
        "containers": [
         "properties"
        ],
        "type": "string"
       }
      },
      "required": [
       "location"
      ]
     },
     "location": "body",
     "name": "WANParameters",
     "required": true,
     "value": {}
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{VirtualWANName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "allowBranchToBranchTraffic": {
     "containers": [
      "properties"
     ]
    },
    "allowVnetToVnetTraffic": {
     "containers": [
      "properties"
     ]
    },
    "disableVpnEncryption": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "location": {},
    "name": {},
    "office365LocalBreakoutCategory": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {},
    "virtualHubs": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "vpnSites": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:VpnConnection": {
   "PUT": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "gatewayName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "connectionName",
     "required": true,
     "value": {
      "autoname": "copy",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "connectionBandwidth": {
        "containers": [
         "properties"
        ],
        "type": "integer"
       },
       "dpdTimeoutSeconds": {
        "containers": [
         "properties"
        ],
        "type": "integer"
       },
       "enableBgp": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "enableInternetSecurity": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "enableRateLimiting": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "id": {
        "type": "string"
       },
       "ipsecPolicies": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:IpsecPolicy",
         "type": "object"
        },
        "type": "array"
       },
       "name": {
        "type": "string"
       },
       "remoteVpnSite": {
        "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "routingConfiguration": {
        "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfiguration",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "routingWeight": {
        "containers": [
         "properties"
        ],
        "type": "integer"
       },
       "sharedKey": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "trafficSelectorPolicies": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:TrafficSelectorPolicy",
         "type": "object"
        },
        "type": "array"
       },
       "useLocalAzureIpAddress": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "usePolicyBasedTrafficSelectors": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "vpnConnectionProtocolType": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "vpnLinkConnections": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:VpnSiteLinkConnection",
         "type": "object"
        },
        "type": "array"
       }
      }
     },
     "location": "body",
     "name": "VpnConnectionParameters",
     "required": true,
     "value": {}
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/vpnConnections/{connectionName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "connectionBandwidth": {
     "containers": [
      "properties"
     ]
    },
    "connectionStatus": {
     "containers": [
      "properties"
     ]
    },
    "dpdTimeoutSeconds": {
     "containers": [
      "properties"
     ]
    },
    "egressBytesTransferred": {
     "containers": [
      "properties"
     ]
    },
    "enableBgp": {
     "containers": [
      "properties"
     ]
    },
    "enableInternetSecurity": {
     "containers": [
      "properties"
     ]
    },
    "enableRateLimiting": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "ingressBytesTransferred": {
     "containers": [
      "properties"
     ]
    },
    "ipsecPolicies": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IpsecPolicyResponse",
      "type": "object"
     }
    },
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "remoteVpnSite": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "routingConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfigurationResponse",
     "containers": [
      "properties"
     ]
    },
    "routingWeight": {
     "containers": [
      "properties"
     ]
    },
    "sharedKey": {
     "containers": [
      "properties"
     ]
    },
    "trafficSelectorPolicies": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:TrafficSelectorPolicyResponse",
      "type": "object"
     }
    },
    "useLocalAzureIpAddress": {
     "containers": [
      "properties"
     ]
    },
    "usePolicyBasedTrafficSelectors": {
     "containers": [
      "properties"
     ]
    },
    "vpnConnectionProtocolType": {
     "containers": [
      "properties"
     ]
    },
    "vpnLinkConnections": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnSiteLinkConnectionResponse",
      "type": "object"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:VpnGateway": {
   "PUT": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "gatewayName",
     "required": true,
     "value": {
      "autoname": "random",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "bgpSettings": {
        "$ref": "#/types/azure-native_network_v20230201:network:BgpSettings",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "connections": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:VpnConnection",
         "type": "object"
        },
        "maintainSubResourceIfUnset": true,
        "type": "array"
       },
       "enableBgpRouteTranslationForNat": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "id": {
        "type": "string"
       },
       "isRoutingPreferenceInternet": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "location": {
        "type": "string"
       },
       "natRules": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:VpnGatewayNatRule",
         "type": "object"
        },
        "maintainSubResourceIfUnset": true,
        "type": "array"
       },
       "tags": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       },
       "virtualHub": {
        "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "vpnGatewayScaleUnit": {
        "containers": [
         "properties"
        ],
        "type": "integer"
       }
      },
      "required": [
       "location"
      ]
     },
     "location": "body",
     "name": "vpnGatewayParameters",
     "required": true,
     "value": {}
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "bgpSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:BgpSettingsResponse",
     "containers": [
      "properties"
     ]
    },
    "connections": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnConnectionResponse",
      "type": "object"
     }
    },
    "enableBgpRouteTranslationForNat": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "ipConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnGatewayIpConfigurationResponse",
      "type": "object"
     }
    },
    "isRoutingPreferenceInternet": {
     "containers": [
      "properties"
     ]
    },
    "location": {},
    "name": {},
    "natRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnGatewayNatRuleResponse",
      "type": "object"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {},
    "virtualHub": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "vpnGatewayScaleUnit": {
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native_network_v20230201:network:VpnServerConfiguration": {
   "PUT": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "vpnServerConfigurationName",
     "required": true,
     "value": {
      "autoname": "random",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "id": {
        "type": "string"
       },
       "location": {
        "type": "string"
       },
       "name": {
        "type": "string"
       },
       "properties": {
        "$ref": "#/types/azure-native_network_v20230201:network:VpnServerConfigurationProperties",
        "type": "object"
       },
       "tags": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       }
      }
     },
     "location": "body",
     "name": "VpnServerConfigurationParameters",
     "required": true,
     "value": {}
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnServerConfigurations/{vpnServerConfigurationName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "etag": {},
    "id": {},
    "location": {},
    "name": {},
    "properties": {
     "$ref": "#/types/azure-native_network_v20230201:network:VpnServerConfigurationPropertiesResponse"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:VpnSite": {
   "PUT": [
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "vpnSiteName",
     "required": true,
     "value": {
      "autoname": "random",
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "addressSpace": {
        "$ref": "#/types/azure-native_network_v20230201:network:AddressSpace",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "bgpProperties": {
        "$ref": "#/types/azure-native_network_v20230201:network:BgpSettings",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "deviceProperties": {
        "$ref": "#/types/azure-native_network_v20230201:network:DeviceProperties",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "id": {
        "type": "string"
       },
       "ipAddress": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "isSecuritySite": {
        "containers": [
         "properties"
        ],
        "type": "boolean"
       },
       "location": {
        "type": "string"
       },
       "o365Policy": {
        "$ref": "#/types/azure-native_network_v20230201:network:O365PolicyProperties",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "siteKey": {
        "containers": [
         "properties"
        ],
        "type": "string"
       },
       "tags": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       },
       "virtualWan": {
        "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "vpnSiteLinks": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:VpnSiteLink",
         "type": "object"
        },
        "type": "array"
       }
      },
      "required": [
       "location"
      ]
     },
     "location": "body",
     "name": "VpnSiteParameters",
     "required": true,
     "value": {}
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnSites/{vpnSiteName}",
   "putAsyncStyle": "azure-async-operation",
   "response": {
    "addressSpace": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpaceResponse",
     "containers": [
      "properties"
     ]
    },
    "bgpProperties": {
     "$ref": "#/types/azure-native_network_v20230201:network:BgpSettingsResponse",
     "containers": [
      "properties"
     ]
    },
    "deviceProperties": {
     "$ref": "#/types/azure-native_network_v20230201:network:DevicePropertiesResponse",
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "ipAddress": {
     "containers": [
      "properties"
     ]
    },
    "isSecuritySite": {
     "containers": [
      "properties"
     ]
    },
    "location": {},
    "name": {},
    "o365Policy": {
     "$ref": "#/types/azure-native_network_v20230201:network:O365PolicyPropertiesResponse",
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "siteKey": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {},
    "virtualWan": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "vpnSiteLinks": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnSiteLinkResponse",
      "type": "object"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:WebApplicationFirewallPolicy": {
   "PUT": [
    {
     "location": "path",
     "name": "resourceGroupName",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "policyName",
     "required": true,
     "value": {
      "autoname": "random",
      "maxLength": 128,
      "type": "string"
     }
    },
    {
     "location": "path",
     "name": "subscriptionId",
     "required": true,
     "value": {
      "type": "string"
     }
    },
    {
     "body": {
      "properties": {
       "customRules": {
        "containers": [
         "properties"
        ],
        "items": {
         "$ref": "#/types/azure-native_network_v20230201:network:WebApplicationFirewallCustomRule",
         "type": "object"
        },
        "type": "array"
       },
       "id": {
        "type": "string"
       },
       "location": {
        "type": "string"
       },
       "managedRules": {
        "$ref": "#/types/azure-native_network_v20230201:network:ManagedRulesDefinition",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "policySettings": {
        "$ref": "#/types/azure-native_network_v20230201:network:PolicySettings",
        "containers": [
         "properties"
        ],
        "type": "object"
       },
       "tags": {
        "additionalProperties": {
         "type": "string"
        },
        "type": "object"
       }
      },
      "required": [
       "managedRules"
      ]
     },
     "location": "body",
     "name": "parameters",
     "required": true,
     "value": {}
    }
   ],
   "apiVersion": "2023-02-01",
   "defaultBody": null,
   "deleteAsyncStyle": "location",
   "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies/{policyName}",
   "response": {
    "applicationGateways": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayResponse",
      "type": "object"
     }
    },
    "customRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:WebApplicationFirewallCustomRuleResponse",
      "type": "object"
     }
    },
    "etag": {},
    "httpListeners": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "id": {},
    "location": {},
    "managedRules": {
     "$ref": "#/types/azure-native_network_v20230201:network:ManagedRulesDefinitionResponse",
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "pathBasedRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "policySettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:PolicySettingsResponse",
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceState": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  }
 },
 "types": {
  "azure-native_network_v20230201:network:AadAuthenticationParameters": {
   "properties": {
    "aadAudience": {
     "type": "string"
    },
    "aadIssuer": {
     "type": "string"
    },
    "aadTenant": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:AadAuthenticationParametersResponse": {
   "properties": {
    "aadAudience": {},
    "aadIssuer": {},
    "aadTenant": {}
   }
  },
  "azure-native_network_v20230201:network:Action": {
   "properties": {
    "parameters": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:Parameter",
      "type": "object"
     },
     "type": "array"
    },
    "type": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:ActionResponse": {
   "properties": {
    "parameters": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ParameterResponse",
      "type": "object"
     }
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:ActiveConnectivityConfigurationResponse": {
   "properties": {
    "appliesToGroups": {
     "arrayIdentifiers": [
      "networkGroupId"
     ],
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConnectivityGroupItemResponse",
      "type": "object"
     }
    },
    "commitTime": {},
    "configurationGroups": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConfigurationGroupResponse",
      "type": "object"
     }
    },
    "connectivityTopology": {
     "containers": [
      "properties"
     ]
    },
    "deleteExistingPeering": {
     "containers": [
      "properties"
     ]
    },
    "description": {
     "containers": [
      "properties"
     ]
    },
    "hubs": {
     "arrayIdentifiers": [
      "resourceId"
     ],
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:HubResponse",
      "type": "object"
     }
    },
    "id": {},
    "isGlobal": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "region": {},
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    }
   },
   "required": [
    "appliesToGroups",
    "connectivityTopology"
   ]
  },
  "azure-native_network_v20230201:network:ActiveDefaultSecurityAdminRuleResponse": {
   "properties": {
    "access": {
     "containers": [
      "properties"
     ]
    },
    "commitTime": {},
    "configurationDescription": {},
    "description": {
     "containers": [
      "properties"
     ]
    },
    "destinationPortRanges": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "destinations": {
     "arrayIdentifiers": [
      "addressPrefix"
     ],
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AddressPrefixItemResponse",
      "type": "object"
     }
    },
    "direction": {
     "containers": [
      "properties"
     ]
    },
    "flag": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "kind": {
     "const": "Default"
    },
    "priority": {
     "containers": [
      "properties"
     ]
    },
    "protocol": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "region": {},
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "ruleCollectionAppliesToGroups": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkManagerSecurityGroupItemResponse",
      "type": "object"
     }
    },
    "ruleCollectionDescription": {},
    "ruleGroups": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConfigurationGroupResponse",
      "type": "object"
     }
    },
    "sourcePortRanges": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "sources": {
     "arrayIdentifiers": [
      "addressPrefix"
     ],
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AddressPrefixItemResponse",
      "type": "object"
     }
    }
   },
   "required": [
    "kind"
   ]
  },
  "azure-native_network_v20230201:network:ActiveSecurityAdminRuleResponse": {
   "properties": {
    "access": {
     "containers": [
      "properties"
     ]
    },
    "commitTime": {},
    "configurationDescription": {},
    "description": {
     "containers": [
      "properties"
     ]
    },
    "destinationPortRanges": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "destinations": {
     "arrayIdentifiers": [
      "addressPrefix"
     ],
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AddressPrefixItemResponse",
      "type": "object"
     }
    },
    "direction": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "kind": {
     "const": "Custom"
    },
    "priority": {
     "containers": [
      "properties"
     ]
    },
    "protocol": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "region": {},
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "ruleCollectionAppliesToGroups": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkManagerSecurityGroupItemResponse",
      "type": "object"
     }
    },
    "ruleCollectionDescription": {},
    "ruleGroups": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConfigurationGroupResponse",
      "type": "object"
     }
    },
    "sourcePortRanges": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "sources": {
     "arrayIdentifiers": [
      "addressPrefix"
     ],
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AddressPrefixItemResponse",
      "type": "object"
     }
    }
   },
   "required": [
    "access",
    "direction",
    "kind",
    "priority",
    "protocol"
   ]
  },
  "azure-native_network_v20230201:network:AddressPrefixItem": {
   "properties": {
    "addressPrefix": {
     "type": "string"
    },
    "addressPrefixType": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:AddressPrefixItemResponse": {
   "properties": {
    "addressPrefix": {},
    "addressPrefixType": {}
   }
  },
  "azure-native_network_v20230201:network:AddressSpace": {
   "properties": {
    "addressPrefixes": {
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   }
  },
  "azure-native_network_v20230201:network:AddressSpaceResponse": {
   "properties": {
    "addressPrefixes": {
     "items": {
      "type": "string"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayAuthenticationCertificate": {
   "properties": {
    "data": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "id": {
     "type": "string"
    },
    "name": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayAuthenticationCertificateResponse": {
   "properties": {
    "data": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayAutoscaleConfiguration": {
   "properties": {
    "maxCapacity": {
     "minimum": 2,
     "type": "integer"
    },
    "minCapacity": {
     "minimum": 0,
     "type": "integer"
    }
   },
   "required": [
    "minCapacity"
   ]
  },
  "azure-native_network_v20230201:network:ApplicationGatewayAutoscaleConfigurationResponse": {
   "properties": {
    "maxCapacity": {},
    "minCapacity": {}
   },
   "required": [
    "minCapacity"
   ]
  },
  "azure-native_network_v20230201:network:ApplicationGatewayBackendAddress": {
   "properties": {
    "fqdn": {
     "type": "string"
    },
    "ipAddress": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayBackendAddressPool": {
   "properties": {
    "backendAddresses": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayBackendAddress",
      "type": "object"
     },
     "type": "array"
    },
    "id": {
     "type": "string"
    },
    "name": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayBackendAddressPoolResponse": {
   "properties": {
    "backendAddresses": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayBackendAddressResponse",
      "type": "object"
     }
    },
    "backendIPConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceIPConfigurationResponse",
      "type": "object"
     }
    },
    "etag": {},
    "id": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayBackendAddressResponse": {
   "properties": {
    "fqdn": {},
    "ipAddress": {}
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayBackendHealthHttpSettingsResponse": {
   "properties": {
    "backendHttpSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayBackendHttpSettingsResponse"
    },
    "servers": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayBackendHealthServerResponse",
      "type": "object"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayBackendHealthServerResponse": {
   "properties": {
    "address": {},
    "health": {},
    "healthProbeLog": {},
    "ipConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceIPConfigurationResponse"
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayBackendHttpSettings": {
   "properties": {
    "affinityCookieName": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "authenticationCertificates": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
      "type": "object"
     },
     "type": "array"
    },
    "connectionDraining": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayConnectionDraining",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "cookieBasedAffinity": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "hostName": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "id": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "path": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "pickHostNameFromBackendAddress": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "port": {
     "containers": [
      "properties"
     ],
     "type": "integer"
    },
    "probe": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "probeEnabled": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "protocol": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "requestTimeout": {
     "containers": [
      "properties"
     ],
     "type": "integer"
    },
    "trustedRootCertificates": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
      "type": "object"
     },
     "type": "array"
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayBackendHttpSettingsResponse": {
   "properties": {
    "affinityCookieName": {
     "containers": [
      "properties"
     ]
    },
    "authenticationCertificates": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "connectionDraining": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayConnectionDrainingResponse",
     "containers": [
      "properties"
     ]
    },
    "cookieBasedAffinity": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "hostName": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "name": {},
    "path": {
     "containers": [
      "properties"
     ]
    },
    "pickHostNameFromBackendAddress": {
     "containers": [
      "properties"
     ]
    },
    "port": {
     "containers": [
      "properties"
     ]
    },
    "probe": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "probeEnabled": {
     "containers": [
      "properties"
     ]
    },
    "protocol": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "requestTimeout": {
     "containers": [
      "properties"
     ]
    },
    "trustedRootCertificates": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayBackendSettings": {
   "properties": {
    "hostName": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "id": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "pickHostNameFromBackendAddress": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "port": {
     "containers": [
      "properties"
     ],
     "type": "integer"
    },
    "probe": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "protocol": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "timeout": {
     "containers": [
      "properties"
     ],
     "type": "integer"
    },
    "trustedRootCertificates": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
      "type": "object"
     },
     "type": "array"
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayBackendSettingsResponse": {
   "properties": {
    "etag": {},
    "hostName": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "name": {},
    "pickHostNameFromBackendAddress": {
     "containers": [
      "properties"
     ]
    },
    "port": {
     "containers": [
      "properties"
     ]
    },
    "probe": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "protocol": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "timeout": {
     "containers": [
      "properties"
     ]
    },
    "trustedRootCertificates": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayClientAuthConfiguration": {
   "properties": {
    "verifyClientCertIssuerDN": {
     "type": "boolean"
    },
    "verifyClientRevocation": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayClientAuthConfigurationResponse": {
   "properties": {
    "verifyClientCertIssuerDN": {},
    "verifyClientRevocation": {}
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayConnectionDraining": {
   "properties": {
    "drainTimeoutInSec": {
     "maximum": 3600,
     "minimum": 1,
     "type": "integer"
    },
    "enabled": {
     "type": "boolean"
    }
   },
   "required": [
    "drainTimeoutInSec",
    "enabled"
   ]
  },
  "azure-native_network_v20230201:network:ApplicationGatewayConnectionDrainingResponse": {
   "properties": {
    "drainTimeoutInSec": {},
    "enabled": {}
   },
   "required": [
    "drainTimeoutInSec",
    "enabled"
   ]
  },
  "azure-native_network_v20230201:network:ApplicationGatewayCustomError": {
   "properties": {
    "customErrorPageUrl": {
     "type": "string"
    },
    "statusCode": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayCustomErrorResponse": {
   "properties": {
    "customErrorPageUrl": {},
    "statusCode": {}
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayFirewallDisabledRuleGroup": {
   "properties": {
    "ruleGroupName": {
     "type": "string"
    },
    "rules": {
     "items": {
      "type": "integer"
     },
     "type": "array"
    }
   },
   "required": [
    "ruleGroupName"
   ]
  },
  "azure-native_network_v20230201:network:ApplicationGatewayFirewallDisabledRuleGroupResponse": {
   "properties": {
    "ruleGroupName": {},
    "rules": {
     "items": {
      "type": "integer"
     }
    }
   },
   "required": [
    "ruleGroupName"
   ]
  },
  "azure-native_network_v20230201:network:ApplicationGatewayFirewallExclusion": {
   "properties": {
    "matchVariable": {
     "type": "string"
    },
    "selector": {
     "type": "string"
    },
    "selectorMatchOperator": {
     "type": "string"
    }
   },
   "required": [
    "matchVariable",
    "selector",
    "selectorMatchOperator"
   ]
  },
  "azure-native_network_v20230201:network:ApplicationGatewayFirewallExclusionResponse": {
   "properties": {
    "matchVariable": {},
    "selector": {},
    "selectorMatchOperator": {}
   },
   "required": [
    "matchVariable",
    "selector",
    "selectorMatchOperator"
   ]
  },
  "azure-native_network_v20230201:network:ApplicationGatewayFrontendIPConfiguration": {
   "properties": {
    "id": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "privateIPAddress": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "privateIPAllocationMethod": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "privateLinkConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "publicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayFrontendIPConfigurationResponse": {
   "properties": {
    "etag": {},
    "id": {},
    "name": {},
    "privateIPAddress": {
     "containers": [
      "properties"
     ]
    },
    "privateIPAllocationMethod": {
     "containers": [
      "properties"
     ]
    },
    "privateLinkConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "publicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayFrontendPort": {
   "properties": {
    "id": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "port": {
     "containers": [
      "properties"
     ],
     "type": "integer"
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayFrontendPortResponse": {
   "properties": {
    "etag": {},
    "id": {},
    "name": {},
    "port": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayGlobalConfiguration": {
   "properties": {
    "enableRequestBuffering": {
     "type": "boolean"
    },
    "enableResponseBuffering": {
     "type": "boolean"
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayGlobalConfigurationResponse": {
   "properties": {
    "enableRequestBuffering": {},
    "enableResponseBuffering": {}
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayHeaderConfiguration": {
   "properties": {
    "headerName": {
     "type": "string"
    },
    "headerValue": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayHeaderConfigurationResponse": {
   "properties": {
    "headerName": {},
    "headerValue": {}
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayHttpListener": {
   "properties": {
    "customErrorConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayCustomError",
      "type": "object"
     },
     "type": "array"
    },
    "firewallPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "frontendIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "frontendPort": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "hostName": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "hostNames": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "id": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "protocol": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "requireServerNameIndication": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "sslCertificate": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "sslProfile": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayHttpListenerResponse": {
   "properties": {
    "customErrorConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayCustomErrorResponse",
      "type": "object"
     }
    },
    "etag": {},
    "firewallPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "frontendIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "frontendPort": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "hostName": {
     "containers": [
      "properties"
     ]
    },
    "hostNames": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "id": {},
    "name": {},
    "protocol": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "requireServerNameIndication": {
     "containers": [
      "properties"
     ]
    },
    "sslCertificate": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "sslProfile": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayIPConfiguration": {
   "properties": {
    "id": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayIPConfigurationResponse": {
   "properties": {
    "etag": {},
    "id": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayListener": {
   "properties": {
    "frontendIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "frontendPort": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "id": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "protocol": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "sslCertificate": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "sslProfile": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayListenerResponse": {
   "properties": {
    "etag": {},
    "frontendIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "frontendPort": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "name": {},
    "protocol": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "sslCertificate": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "sslProfile": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayLoadDistributionPolicy": {
   "properties": {
    "id": {
     "type": "string"
    },
    "loadDistributionAlgorithm": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "loadDistributionTargets": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayLoadDistributionTarget",
      "type": "object"
     },
     "type": "array"
    },
    "name": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayLoadDistributionPolicyResponse": {
   "properties": {
    "etag": {},
    "id": {},
    "loadDistributionAlgorithm": {
     "containers": [
      "properties"
     ]
    },
    "loadDistributionTargets": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayLoadDistributionTargetResponse",
      "type": "object"
     }
    },
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayLoadDistributionTarget": {
   "properties": {
    "backendAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "id": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "weightPerServer": {
     "containers": [
      "properties"
     ],
     "maximum": 100,
     "minimum": 1,
     "type": "integer"
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayLoadDistributionTargetResponse": {
   "properties": {
    "backendAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "name": {},
    "type": {},
    "weightPerServer": {
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayPathRule": {
   "properties": {
    "backendAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "backendHttpSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "firewallPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "id": {
     "type": "string"
    },
    "loadDistributionPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "name": {
     "type": "string"
    },
    "paths": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "redirectConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "rewriteRuleSet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayPathRuleResponse": {
   "properties": {
    "backendAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "backendHttpSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "firewallPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "loadDistributionPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "paths": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "redirectConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "rewriteRuleSet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayPrivateEndpointConnectionResponse": {
   "properties": {
    "etag": {},
    "id": {},
    "linkIdentifier": {
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "privateEndpoint": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateEndpointResponse",
     "containers": [
      "properties"
     ]
    },
    "privateLinkServiceConnectionState": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceConnectionStateResponse",
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayPrivateLinkConfiguration": {
   "properties": {
    "id": {
     "type": "string"
    },
    "ipConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayPrivateLinkIpConfiguration",
      "type": "object"
     },
     "type": "array"
    },
    "name": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayPrivateLinkConfigurationResponse": {
   "properties": {
    "etag": {},
    "id": {},
    "ipConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayPrivateLinkIpConfigurationResponse",
      "type": "object"
     }
    },
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayPrivateLinkIpConfiguration": {
   "properties": {
    "id": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "primary": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "privateIPAddress": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "privateIPAllocationMethod": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayPrivateLinkIpConfigurationResponse": {
   "properties": {
    "etag": {},
    "id": {},
    "name": {},
    "primary": {
     "containers": [
      "properties"
     ]
    },
    "privateIPAddress": {
     "containers": [
      "properties"
     ]
    },
    "privateIPAllocationMethod": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayProbe": {
   "properties": {
    "host": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "id": {
     "type": "string"
    },
    "interval": {
     "containers": [
      "properties"
     ],
     "type": "integer"
    },
    "match": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayProbeHealthResponseMatch",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "minServers": {
     "containers": [
      "properties"
     ],
     "type": "integer"
    },
    "name": {
     "type": "string"
    },
    "path": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "pickHostNameFromBackendHttpSettings": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "pickHostNameFromBackendSettings": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "port": {
     "containers": [
      "properties"
     ],
     "maximum": 65535,
     "minimum": 1,
     "type": "integer"
    },
    "protocol": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "timeout": {
     "containers": [
      "properties"
     ],
     "type": "integer"
    },
    "unhealthyThreshold": {
     "containers": [
      "properties"
     ],
     "type": "integer"
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayProbeHealthResponseMatch": {
   "properties": {
    "body": {
     "type": "string"
    },
    "statusCodes": {
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayProbeHealthResponseMatchResponse": {
   "properties": {
    "body": {},
    "statusCodes": {
     "items": {
      "type": "string"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayProbeResponse": {
   "properties": {
    "etag": {},
    "host": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "interval": {
     "containers": [
      "properties"
     ]
    },
    "match": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayProbeHealthResponseMatchResponse",
     "containers": [
      "properties"
     ]
    },
    "minServers": {
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "path": {
     "containers": [
      "properties"
     ]
    },
    "pickHostNameFromBackendHttpSettings": {
     "containers": [
      "properties"
     ]
    },
    "pickHostNameFromBackendSettings": {
     "containers": [
      "properties"
     ]
    },
    "port": {
     "containers": [
      "properties"
     ]
    },
    "protocol": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "timeout": {
     "containers": [
      "properties"
     ]
    },
    "type": {},
    "unhealthyThreshold": {
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayRedirectConfiguration": {
   "properties": {
    "id": {
     "type": "string"
    },
    "includePath": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "includeQueryString": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "name": {
     "type": "string"
    },
    "pathRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
      "type": "object"
     },
     "type": "array"
    },
    "redirectType": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "requestRoutingRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
      "type": "object"
     },
     "type": "array"
    },
    "targetListener": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "targetUrl": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "urlPathMaps": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
      "type": "object"
     },
     "type": "array"
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayRedirectConfigurationResponse": {
   "properties": {
    "etag": {},
    "id": {},
    "includePath": {
     "containers": [
      "properties"
     ]
    },
    "includeQueryString": {
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "pathRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "redirectType": {
     "containers": [
      "properties"
     ]
    },
    "requestRoutingRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "targetListener": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "targetUrl": {
     "containers": [
      "properties"
     ]
    },
    "type": {},
    "urlPathMaps": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayRequestRoutingRule": {
   "properties": {
    "backendAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "backendHttpSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "httpListener": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "id": {
     "type": "string"
    },
    "loadDistributionPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "name": {
     "type": "string"
    },
    "priority": {
     "containers": [
      "properties"
     ],
     "maximum": 20000,
     "minimum": 1,
     "type": "integer"
    },
    "redirectConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "rewriteRuleSet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "ruleType": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "urlPathMap": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayRequestRoutingRuleResponse": {
   "properties": {
    "backendAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "backendHttpSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "httpListener": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "loadDistributionPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "priority": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "redirectConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "rewriteRuleSet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "ruleType": {
     "containers": [
      "properties"
     ]
    },
    "type": {},
    "urlPathMap": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayResponse": {
   "properties": {
    "authenticationCertificates": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayAuthenticationCertificateResponse",
      "type": "object"
     }
    },
    "autoscaleConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayAutoscaleConfigurationResponse",
     "containers": [
      "properties"
     ]
    },
    "backendAddressPools": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayBackendAddressPoolResponse",
      "type": "object"
     }
    },
    "backendHttpSettingsCollection": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayBackendHttpSettingsResponse",
      "type": "object"
     }
    },
    "backendSettingsCollection": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayBackendSettingsResponse",
      "type": "object"
     }
    },
    "customErrorConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayCustomErrorResponse",
      "type": "object"
     }
    },
    "defaultPredefinedSslPolicy": {
     "containers": [
      "properties"
     ]
    },
    "enableFips": {
     "containers": [
      "properties"
     ]
    },
    "enableHttp2": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "firewallPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "forceFirewallPolicyAssociation": {
     "containers": [
      "properties"
     ]
    },
    "frontendIPConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayFrontendIPConfigurationResponse",
      "type": "object"
     }
    },
    "frontendPorts": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayFrontendPortResponse",
      "type": "object"
     }
    },
    "gatewayIPConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayIPConfigurationResponse",
      "type": "object"
     }
    },
    "globalConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayGlobalConfigurationResponse",
     "containers": [
      "properties"
     ]
    },
    "httpListeners": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayHttpListenerResponse",
      "type": "object"
     }
    },
    "id": {},
    "identity": {
     "$ref": "#/types/azure-native_network_v20230201:network:ManagedServiceIdentityResponse"
    },
    "listeners": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayListenerResponse",
      "type": "object"
     }
    },
    "loadDistributionPolicies": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayLoadDistributionPolicyResponse",
      "type": "object"
     }
    },
    "location": {},
    "name": {},
    "operationalState": {
     "containers": [
      "properties"
     ]
    },
    "privateEndpointConnections": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayPrivateEndpointConnectionResponse",
      "type": "object"
     }
    },
    "privateLinkConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayPrivateLinkConfigurationResponse",
      "type": "object"
     }
    },
    "probes": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayProbeResponse",
      "type": "object"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "redirectConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayRedirectConfigurationResponse",
      "type": "object"
     }
    },
    "requestRoutingRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayRequestRoutingRuleResponse",
      "type": "object"
     }
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "rewriteRuleSets": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayRewriteRuleSetResponse",
      "type": "object"
     }
    },
    "routingRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayRoutingRuleResponse",
      "type": "object"
     }
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewaySkuResponse",
     "containers": [
      "properties"
     ]
    },
    "sslCertificates": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewaySslCertificateResponse",
      "type": "object"
     }
    },
    "sslPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewaySslPolicyResponse",
     "containers": [
      "properties"
     ]
    },
    "sslProfiles": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewaySslProfileResponse",
      "type": "object"
     }
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "trustedClientCertificates": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayTrustedClientCertificateResponse",
      "type": "object"
     }
    },
    "trustedRootCertificates": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayTrustedRootCertificateResponse",
      "type": "object"
     }
    },
    "type": {},
    "urlPathMaps": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayUrlPathMapResponse",
      "type": "object"
     }
    },
    "webApplicationFirewallConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayWebApplicationFirewallConfigurationResponse",
     "containers": [
      "properties"
     ]
    },
    "zones": {
     "items": {
      "type": "string"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayRewriteRule": {
   "properties": {
    "actionSet": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayRewriteRuleActionSet",
     "type": "object"
    },
    "conditions": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayRewriteRuleCondition",
      "type": "object"
     },
     "type": "array"
    },
    "name": {
     "type": "string"
    },
    "ruleSequence": {
     "type": "integer"
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayRewriteRuleActionSet": {
   "properties": {
    "requestHeaderConfigurations": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayHeaderConfiguration",
      "type": "object"
     },
     "type": "array"
    },
    "responseHeaderConfigurations": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayHeaderConfiguration",
      "type": "object"
     },
     "type": "array"
    },
    "urlConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayUrlConfiguration",
     "type": "object"
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayRewriteRuleActionSetResponse": {
   "properties": {
    "requestHeaderConfigurations": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayHeaderConfigurationResponse",
      "type": "object"
     }
    },
    "responseHeaderConfigurations": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayHeaderConfigurationResponse",
      "type": "object"
     }
    },
    "urlConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayUrlConfigurationResponse"
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayRewriteRuleCondition": {
   "properties": {
    "ignoreCase": {
     "type": "boolean"
    },
    "negate": {
     "type": "boolean"
    },
    "pattern": {
     "type": "string"
    },
    "variable": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayRewriteRuleConditionResponse": {
   "properties": {
    "ignoreCase": {},
    "negate": {},
    "pattern": {},
    "variable": {}
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayRewriteRuleResponse": {
   "properties": {
    "actionSet": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayRewriteRuleActionSetResponse"
    },
    "conditions": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayRewriteRuleConditionResponse",
      "type": "object"
     }
    },
    "name": {},
    "ruleSequence": {}
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayRewriteRuleSet": {
   "properties": {
    "id": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "rewriteRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayRewriteRule",
      "type": "object"
     },
     "type": "array"
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayRewriteRuleSetResponse": {
   "properties": {
    "etag": {},
    "id": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "rewriteRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayRewriteRuleResponse",
      "type": "object"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayRoutingRule": {
   "properties": {
    "backendAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "backendSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "id": {
     "type": "string"
    },
    "listener": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "name": {
     "type": "string"
    },
    "priority": {
     "containers": [
      "properties"
     ],
     "maximum": 20000,
     "minimum": 1,
     "type": "integer"
    },
    "ruleType": {
     "containers": [
      "properties"
     ],
     "type": "string"
    }
   },
   "required": [
    "priority"
   ]
  },
  "azure-native_network_v20230201:network:ApplicationGatewayRoutingRuleResponse": {
   "properties": {
    "backendAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "backendSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "listener": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "priority": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "ruleType": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   },
   "required": [
    "priority"
   ]
  },
  "azure-native_network_v20230201:network:ApplicationGatewaySku": {
   "properties": {
    "capacity": {
     "type": "integer"
    },
    "name": {
     "type": "string"
    },
    "tier": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewaySkuResponse": {
   "properties": {
    "capacity": {},
    "name": {},
    "tier": {}
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewaySslCertificate": {
   "properties": {
    "data": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "id": {
     "type": "string"
    },
    "keyVaultSecretId": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "password": {
     "containers": [
      "properties"
     ],
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewaySslCertificateResponse": {
   "properties": {
    "data": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "keyVaultSecretId": {
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "password": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "publicCertData": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewaySslPolicy": {
   "properties": {
    "cipherSuites": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "disabledSslProtocols": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "minProtocolVersion": {
     "type": "string"
    },
    "policyName": {
     "type": "string"
    },
    "policyType": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewaySslPolicyResponse": {
   "properties": {
    "cipherSuites": {
     "items": {
      "type": "string"
     }
    },
    "disabledSslProtocols": {
     "items": {
      "type": "string"
     }
    },
    "minProtocolVersion": {},
    "policyName": {},
    "policyType": {}
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewaySslProfile": {
   "properties": {
    "clientAuthConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayClientAuthConfiguration",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "id": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "sslPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewaySslPolicy",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "trustedClientCertificates": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
      "type": "object"
     },
     "type": "array"
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewaySslProfileResponse": {
   "properties": {
    "clientAuthConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayClientAuthConfigurationResponse",
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "sslPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewaySslPolicyResponse",
     "containers": [
      "properties"
     ]
    },
    "trustedClientCertificates": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayTrustedClientCertificate": {
   "properties": {
    "data": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "id": {
     "type": "string"
    },
    "name": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayTrustedClientCertificateResponse": {
   "properties": {
    "clientCertIssuerDN": {
     "containers": [
      "properties"
     ]
    },
    "data": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {},
    "validatedCertData": {
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayTrustedRootCertificate": {
   "properties": {
    "data": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "id": {
     "type": "string"
    },
    "keyVaultSecretId": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "name": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayTrustedRootCertificateResponse": {
   "properties": {
    "data": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "keyVaultSecretId": {
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayUrlConfiguration": {
   "properties": {
    "modifiedPath": {
     "type": "string"
    },
    "modifiedQueryString": {
     "type": "string"
    },
    "reroute": {
     "type": "boolean"
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayUrlConfigurationResponse": {
   "properties": {
    "modifiedPath": {},
    "modifiedQueryString": {},
    "reroute": {}
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayUrlPathMap": {
   "properties": {
    "defaultBackendAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "defaultBackendHttpSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "defaultLoadDistributionPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "defaultRedirectConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "defaultRewriteRuleSet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "id": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "pathRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayPathRule",
      "type": "object"
     },
     "type": "array"
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayUrlPathMapResponse": {
   "properties": {
    "defaultBackendAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "defaultBackendHttpSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "defaultLoadDistributionPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "defaultRedirectConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "defaultRewriteRuleSet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "name": {},
    "pathRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayPathRuleResponse",
      "type": "object"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:ApplicationGatewayWebApplicationFirewallConfiguration": {
   "properties": {
    "disabledRuleGroups": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayFirewallDisabledRuleGroup",
      "type": "object"
     },
     "type": "array"
    },
    "enabled": {
     "type": "boolean"
    },
    "exclusions": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayFirewallExclusion",
      "type": "object"
     },
     "type": "array"
    },
    "fileUploadLimitInMb": {
     "minimum": 0,
     "type": "integer"
    },
    "firewallMode": {
     "type": "string"
    },
    "maxRequestBodySize": {
     "maximum": 128,
     "minimum": 8,
     "type": "integer"
    },
    "maxRequestBodySizeInKb": {
     "maximum": 128,
     "minimum": 8,
     "type": "integer"
    },
    "requestBodyCheck": {
     "type": "boolean"
    },
    "ruleSetType": {
     "type": "string"
    },
    "ruleSetVersion": {
     "type": "string"
    }
   },
   "required": [
    "enabled",
    "firewallMode",
    "ruleSetType",
    "ruleSetVersion"
   ]
  },
  "azure-native_network_v20230201:network:ApplicationGatewayWebApplicationFirewallConfigurationResponse": {
   "properties": {
    "disabledRuleGroups": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayFirewallDisabledRuleGroupResponse",
      "type": "object"
     }
    },
    "enabled": {},
    "exclusions": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayFirewallExclusionResponse",
      "type": "object"
     }
    },
    "fileUploadLimitInMb": {},
    "firewallMode": {},
    "maxRequestBodySize": {},
    "maxRequestBodySizeInKb": {},
    "requestBodyCheck": {},
    "ruleSetType": {},
    "ruleSetVersion": {}
   },
   "required": [
    "enabled",
    "firewallMode",
    "ruleSetType",
    "ruleSetVersion"
   ]
  },
  "azure-native_network_v20230201:network:ApplicationRule": {
   "properties": {
    "description": {
     "type": "string"
    },
    "destinationAddresses": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "fqdnTags": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "httpHeadersToInsert": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyHttpHeaderToInsert",
      "type": "object"
     },
     "type": "array"
    },
    "name": {
     "type": "string"
    },
    "protocols": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyRuleApplicationProtocol",
      "type": "object"
     },
     "type": "array"
    },
    "ruleType": {
     "const": "ApplicationRule",
     "type": "string"
    },
    "sourceAddresses": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "sourceIpGroups": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "targetFqdns": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "targetUrls": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "terminateTLS": {
     "type": "boolean"
    },
    "webCategories": {
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "required": [
    "ruleType"
   ]
  },
  "azure-native_network_v20230201:network:ApplicationRuleResponse": {
   "properties": {
    "description": {},
    "destinationAddresses": {
     "items": {
      "type": "string"
     }
    },
    "fqdnTags": {
     "items": {
      "type": "string"
     }
    },
    "httpHeadersToInsert": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyHttpHeaderToInsertResponse",
      "type": "object"
     }
    },
    "name": {},
    "protocols": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyRuleApplicationProtocolResponse",
      "type": "object"
     }
    },
    "ruleType": {
     "const": "ApplicationRule"
    },
    "sourceAddresses": {
     "items": {
      "type": "string"
     }
    },
    "sourceIpGroups": {
     "items": {
      "type": "string"
     }
    },
    "targetFqdns": {
     "items": {
      "type": "string"
     }
    },
    "targetUrls": {
     "items": {
      "type": "string"
     }
    },
    "terminateTLS": {},
    "webCategories": {
     "items": {
      "type": "string"
     }
    }
   },
   "required": [
    "ruleType"
   ]
  },
  "azure-native_network_v20230201:network:ApplicationSecurityGroup": {
   "properties": {
    "id": {
     "type": "string"
    },
    "location": {
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "type": "object"
    }
   }
  },
  "azure-native_network_v20230201:network:ApplicationSecurityGroupResponse": {
   "properties": {
    "etag": {},
    "id": {},
    "location": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:AzureFirewallApplicationRule": {
   "properties": {
    "description": {
     "type": "string"
    },
    "fqdnTags": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "name": {
     "type": "string"
    },
    "protocols": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallApplicationRuleProtocol",
      "type": "object"
     },
     "type": "array"
    },
    "sourceAddresses": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "sourceIpGroups": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "targetFqdns": {
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   }
  },
  "azure-native_network_v20230201:network:AzureFirewallApplicationRuleCollection": {
   "properties": {
    "action": {
     "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallRCAction",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "id": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "priority": {
     "containers": [
      "properties"
     ],
     "maximum": 65000,
     "minimum": 100,
     "type": "integer"
    },
    "rules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallApplicationRule",
      "type": "object"
     },
     "type": "array"
    }
   }
  },
  "azure-native_network_v20230201:network:AzureFirewallApplicationRuleCollectionResponse": {
   "properties": {
    "action": {
     "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallRCActionResponse",
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "name": {},
    "priority": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "rules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallApplicationRuleResponse",
      "type": "object"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:AzureFirewallApplicationRuleProtocol": {
   "properties": {
    "port": {
     "maximum": 64000,
     "minimum": 0,
     "type": "integer"
    },
    "protocolType": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:AzureFirewallApplicationRuleProtocolResponse": {
   "properties": {
    "port": {},
    "protocolType": {}
   }
  },
  "azure-native_network_v20230201:network:AzureFirewallApplicationRuleResponse": {
   "properties": {
    "description": {},
    "fqdnTags": {
     "items": {
      "type": "string"
     }
    },
    "name": {},
    "protocols": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallApplicationRuleProtocolResponse",
      "type": "object"
     }
    },
    "sourceAddresses": {
     "items": {
      "type": "string"
     }
    },
    "sourceIpGroups": {
     "items": {
      "type": "string"
     }
    },
    "targetFqdns": {
     "items": {
      "type": "string"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:AzureFirewallIPConfiguration": {
   "properties": {
    "id": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "publicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    }
   }
  },
  "azure-native_network_v20230201:network:AzureFirewallIPConfigurationResponse": {
   "properties": {
    "etag": {},
    "id": {},
    "name": {},
    "privateIPAddress": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "publicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:AzureFirewallIpGroupsResponse": {
   "properties": {
    "changeNumber": {},
    "id": {}
   }
  },
  "azure-native_network_v20230201:network:AzureFirewallNatRCAction": {
   "properties": {
    "type": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:AzureFirewallNatRCActionResponse": {
   "properties": {
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:AzureFirewallNatRule": {
   "properties": {
    "description": {
     "type": "string"
    },
    "destinationAddresses": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "destinationPorts": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "name": {
     "type": "string"
    },
    "protocols": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "sourceAddresses": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "sourceIpGroups": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "translatedAddress": {
     "type": "string"
    },
    "translatedFqdn": {
     "type": "string"
    },
    "translatedPort": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:AzureFirewallNatRuleCollection": {
   "properties": {
    "action": {
     "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallNatRCAction",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "id": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "priority": {
     "containers": [
      "properties"
     ],
     "maximum": 65000,
     "minimum": 100,
     "type": "integer"
    },
    "rules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallNatRule",
      "type": "object"
     },
     "type": "array"
    }
   }
  },
  "azure-native_network_v20230201:network:AzureFirewallNatRuleCollectionResponse": {
   "properties": {
    "action": {
     "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallNatRCActionResponse",
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "name": {},
    "priority": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "rules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallNatRuleResponse",
      "type": "object"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:AzureFirewallNatRuleResponse": {
   "properties": {
    "description": {},
    "destinationAddresses": {
     "items": {
      "type": "string"
     }
    },
    "destinationPorts": {
     "items": {
      "type": "string"
     }
    },
    "name": {},
    "protocols": {
     "items": {
      "type": "string"
     }
    },
    "sourceAddresses": {
     "items": {
      "type": "string"
     }
    },
    "sourceIpGroups": {
     "items": {
      "type": "string"
     }
    },
    "translatedAddress": {},
    "translatedFqdn": {},
    "translatedPort": {}
   }
  },
  "azure-native_network_v20230201:network:AzureFirewallNetworkRule": {
   "properties": {
    "description": {
     "type": "string"
    },
    "destinationAddresses": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "destinationFqdns": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "destinationIpGroups": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "destinationPorts": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "name": {
     "type": "string"
    },
    "protocols": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "sourceAddresses": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "sourceIpGroups": {
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   }
  },
  "azure-native_network_v20230201:network:AzureFirewallNetworkRuleCollection": {
   "properties": {
    "action": {
     "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallRCAction",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "id": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "priority": {
     "containers": [
      "properties"
     ],
     "maximum": 65000,
     "minimum": 100,
     "type": "integer"
    },
    "rules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallNetworkRule",
      "type": "object"
     },
     "type": "array"
    }
   }
  },
  "azure-native_network_v20230201:network:AzureFirewallNetworkRuleCollectionResponse": {
   "properties": {
    "action": {
     "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallRCActionResponse",
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "name": {},
    "priority": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "rules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallNetworkRuleResponse",
      "type": "object"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:AzureFirewallNetworkRuleResponse": {
   "properties": {
    "description": {},
    "destinationAddresses": {
     "items": {
      "type": "string"
     }
    },
    "destinationFqdns": {
     "items": {
      "type": "string"
     }
    },
    "destinationIpGroups": {
     "items": {
      "type": "string"
     }
    },
    "destinationPorts": {
     "items": {
      "type": "string"
     }
    },
    "name": {},
    "protocols": {
     "items": {
      "type": "string"
     }
    },
    "sourceAddresses": {
     "items": {
      "type": "string"
     }
    },
    "sourceIpGroups": {
     "items": {
      "type": "string"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:AzureFirewallPublicIPAddress": {
   "properties": {
    "address": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:AzureFirewallPublicIPAddressResponse": {
   "properties": {
    "address": {}
   }
  },
  "azure-native_network_v20230201:network:AzureFirewallRCAction": {
   "properties": {
    "type": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:AzureFirewallRCActionResponse": {
   "properties": {
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:AzureFirewallSku": {
   "properties": {
    "name": {
     "type": "string"
    },
    "tier": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:AzureFirewallSkuResponse": {
   "properties": {
    "name": {},
    "tier": {}
   }
  },
  "azure-native_network_v20230201:network:BackendAddressPool": {
   "properties": {
    "drainPeriodInSeconds": {
     "containers": [
      "properties"
     ],
     "type": "integer"
    },
    "id": {
     "type": "string"
    },
    "loadBalancerBackendAddresses": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:LoadBalancerBackendAddress",
      "type": "object"
     },
     "type": "array"
    },
    "location": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "tunnelInterfaces": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:GatewayLoadBalancerTunnelInterface",
      "type": "object"
     },
     "type": "array"
    },
    "virtualNetwork": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    }
   }
  },
  "azure-native_network_v20230201:network:BackendAddressPoolResponse": {
   "properties": {
    "backendIPConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceIPConfigurationResponse",
      "type": "object"
     }
    },
    "drainPeriodInSeconds": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "inboundNatRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "loadBalancerBackendAddresses": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:LoadBalancerBackendAddressResponse",
      "type": "object"
     }
    },
    "loadBalancingRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "location": {
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "outboundRule": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "outboundRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "tunnelInterfaces": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:GatewayLoadBalancerTunnelInterfaceResponse",
      "type": "object"
     }
    },
    "type": {},
    "virtualNetwork": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native_network_v20230201:network:BastionActiveSessionResponse": {
   "properties": {
    "protocol": {},
    "resourceType": {},
    "sessionDurationInMins": {},
    "sessionId": {},
    "startTime": {
     "$ref": "pulumi.json#/Any"
    },
    "targetHostName": {},
    "targetIpAddress": {},
    "targetResourceGroup": {},
    "targetResourceId": {},
    "targetSubscriptionId": {},
    "userName": {}
   }
  },
  "azure-native_network_v20230201:network:BastionHostIPConfiguration": {
   "properties": {
    "id": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "privateIPAllocationMethod": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "publicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    }
   },
   "required": [
    "publicIPAddress",
    "subnet"
   ]
  },
  "azure-native_network_v20230201:network:BastionHostIPConfigurationResponse": {
   "properties": {
    "etag": {},
    "id": {},
    "name": {},
    "privateIPAllocationMethod": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "publicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "type": {}
   },
   "required": [
    "publicIPAddress",
    "subnet"
   ]
  },
  "azure-native_network_v20230201:network:BastionShareableLink": {
   "properties": {
    "vm": {
     "$ref": "#/types/azure-native_network_v20230201:network:VM",
     "type": "object"
    }
   },
   "required": [
    "vm"
   ]
  },
  "azure-native_network_v20230201:network:BastionShareableLinkResponse": {
   "properties": {
    "bsl": {},
    "createdAt": {},
    "message": {},
    "vm": {
     "$ref": "#/types/azure-native_network_v20230201:network:VMResponse"
    }
   },
   "required": [
    "vm"
   ]
  },
  "azure-native_network_v20230201:network:BgpPeerStatusResponse": {
   "properties": {
    "asn": {},
    "connectedDuration": {},
    "localAddress": {},
    "messagesReceived": {},
    "messagesSent": {},
    "neighbor": {},
    "routesReceived": {},
    "state": {}
   }
  },
  "azure-native_network_v20230201:network:BgpSettings": {
   "properties": {
    "asn": {
     "maximum": 4294967295,
     "minimum": 0,
     "type": "number"
    },
    "bgpPeeringAddress": {
     "type": "string"
    },
    "bgpPeeringAddresses": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IPConfigurationBgpPeeringAddress",
      "type": "object"
     },
     "type": "array"
    },
    "peerWeight": {
     "type": "integer"
    }
   }
  },
  "azure-native_network_v20230201:network:BgpSettingsResponse": {
   "properties": {
    "asn": {},
    "bgpPeeringAddress": {},
    "bgpPeeringAddresses": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IPConfigurationBgpPeeringAddressResponse",
      "type": "object"
     }
    },
    "peerWeight": {}
   }
  },
  "azure-native_network_v20230201:network:BreakOutCategoryPolicies": {
   "properties": {
    "allow": {
     "type": "boolean"
    },
    "default": {
     "type": "boolean"
    },
    "optimize": {
     "type": "boolean"
    }
   }
  },
  "azure-native_network_v20230201:network:BreakOutCategoryPoliciesResponse": {
   "properties": {
    "allow": {},
    "default": {},
    "optimize": {}
   }
  },
  "azure-native_network_v20230201:network:ConfigurationGroupResponse": {
   "properties": {
    "description": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native_network_v20230201:network:ConnectionMonitorDestination": {
   "properties": {
    "address": {
     "type": "string"
    },
    "port": {
     "maximum": 65535,
     "minimum": 0,
     "type": "integer"
    },
    "resourceId": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:ConnectionMonitorDestinationResponse": {
   "properties": {
    "address": {},
    "port": {},
    "resourceId": {}
   }
  },
  "azure-native_network_v20230201:network:ConnectionMonitorEndpoint": {
   "properties": {
    "address": {
     "type": "string"
    },
    "coverageLevel": {
     "type": "string"
    },
    "filter": {
     "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorEndpointFilter",
     "type": "object"
    },
    "name": {
     "type": "string"
    },
    "resourceId": {
     "type": "string"
    },
    "scope": {
     "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorEndpointScope",
     "type": "object"
    },
    "type": {
     "type": "string"
    }
   },
   "required": [
    "name"
   ]
  },
  "azure-native_network_v20230201:network:ConnectionMonitorEndpointFilter": {
   "properties": {
    "items": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorEndpointFilterItem",
      "type": "object"
     },
     "type": "array"
    },
    "type": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:ConnectionMonitorEndpointFilterItem": {
   "properties": {
    "address": {
     "type": "string"
    },
    "type": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:ConnectionMonitorEndpointFilterItemResponse": {
   "properties": {
    "address": {},
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:ConnectionMonitorEndpointFilterResponse": {
   "properties": {
    "items": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorEndpointFilterItemResponse",
      "type": "object"
     }
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:ConnectionMonitorEndpointResponse": {
   "properties": {
    "address": {},
    "coverageLevel": {},
    "filter": {
     "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorEndpointFilterResponse"
    },
    "name": {},
    "resourceId": {},
    "scope": {
     "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorEndpointScopeResponse"
    },
    "type": {}
   },
   "required": [
    "name"
   ]
  },
  "azure-native_network_v20230201:network:ConnectionMonitorEndpointScope": {
   "properties": {
    "exclude": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorEndpointScopeItem",
      "type": "object"
     },
     "type": "array"
    },
    "include": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorEndpointScopeItem",
      "type": "object"
     },
     "type": "array"
    }
   }
  },
  "azure-native_network_v20230201:network:ConnectionMonitorEndpointScopeItem": {
   "properties": {
    "address": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:ConnectionMonitorEndpointScopeItemResponse": {
   "properties": {
    "address": {}
   }
  },
  "azure-native_network_v20230201:network:ConnectionMonitorEndpointScopeResponse": {
   "properties": {
    "exclude": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorEndpointScopeItemResponse",
      "type": "object"
     }
    },
    "include": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorEndpointScopeItemResponse",
      "type": "object"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:ConnectionMonitorHttpConfiguration": {
   "properties": {
    "method": {
     "type": "string"
    },
    "path": {
     "type": "string"
    },
    "port": {
     "maximum": 65535,
     "minimum": 0,
     "type": "integer"
    },
    "preferHTTPS": {
     "type": "boolean"
    },
    "requestHeaders": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:HTTPHeader",
      "type": "object"
     },
     "type": "array"
    },
    "validStatusCodeRanges": {
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   }
  },
  "azure-native_network_v20230201:network:ConnectionMonitorHttpConfigurationResponse": {
   "properties": {
    "method": {},
    "path": {},
    "port": {},
    "preferHTTPS": {},
    "requestHeaders": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:HTTPHeaderResponse",
      "type": "object"
     }
    },
    "validStatusCodeRanges": {
     "items": {
      "type": "string"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:ConnectionMonitorIcmpConfiguration": {
   "properties": {
    "disableTraceRoute": {
     "type": "boolean"
    }
   }
  },
  "azure-native_network_v20230201:network:ConnectionMonitorIcmpConfigurationResponse": {
   "properties": {
    "disableTraceRoute": {}
   }
  },
  "azure-native_network_v20230201:network:ConnectionMonitorOutput": {
   "properties": {
    "type": {
     "type": "string"
    },
    "workspaceSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorWorkspaceSettings",
     "type": "object"
    }
   }
  },
  "azure-native_network_v20230201:network:ConnectionMonitorOutputResponse": {
   "properties": {
    "type": {},
    "workspaceSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorWorkspaceSettingsResponse"
    }
   }
  },
  "azure-native_network_v20230201:network:ConnectionMonitorSource": {
   "properties": {
    "port": {
     "maximum": 65535,
     "minimum": 0,
     "type": "integer"
    },
    "resourceId": {
     "type": "string"
    }
   },
   "required": [
    "resourceId"
   ]
  },
  "azure-native_network_v20230201:network:ConnectionMonitorSourceResponse": {
   "properties": {
    "port": {},
    "resourceId": {}
   },
   "required": [
    "resourceId"
   ]
  },
  "azure-native_network_v20230201:network:ConnectionMonitorSuccessThreshold": {
   "properties": {
    "checksFailedPercent": {
     "type": "integer"
    },
    "roundTripTimeMs": {
     "type": "number"
    }
   }
  },
  "azure-native_network_v20230201:network:ConnectionMonitorSuccessThresholdResponse": {
   "properties": {
    "checksFailedPercent": {},
    "roundTripTimeMs": {}
   }
  },
  "azure-native_network_v20230201:network:ConnectionMonitorTcpConfiguration": {
   "properties": {
    "destinationPortBehavior": {
     "type": "string"
    },
    "disableTraceRoute": {
     "type": "boolean"
    },
    "port": {
     "maximum": 65535,
     "minimum": 0,
     "type": "integer"
    }
   }
  },
  "azure-native_network_v20230201:network:ConnectionMonitorTcpConfigurationResponse": {
   "properties": {
    "destinationPortBehavior": {},
    "disableTraceRoute": {},
    "port": {}
   }
  },
  "azure-native_network_v20230201:network:ConnectionMonitorTestConfiguration": {
   "properties": {
    "httpConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorHttpConfiguration",
     "type": "object"
    },
    "icmpConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorIcmpConfiguration",
     "type": "object"
    },
    "name": {
     "type": "string"
    },
    "preferredIPVersion": {
     "type": "string"
    },
    "protocol": {
     "type": "string"
    },
    "successThreshold": {
     "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorSuccessThreshold",
     "type": "object"
    },
    "tcpConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorTcpConfiguration",
     "type": "object"
    },
    "testFrequencySec": {
     "type": "integer"
    }
   },
   "required": [
    "name",
    "protocol"
   ]
  },
  "azure-native_network_v20230201:network:ConnectionMonitorTestConfigurationResponse": {
   "properties": {
    "httpConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorHttpConfigurationResponse"
    },
    "icmpConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorIcmpConfigurationResponse"
    },
    "name": {},
    "preferredIPVersion": {},
    "protocol": {},
    "successThreshold": {
     "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorSuccessThresholdResponse"
    },
    "tcpConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:ConnectionMonitorTcpConfigurationResponse"
    },
    "testFrequencySec": {}
   },
   "required": [
    "name",
    "protocol"
   ]
  },
  "azure-native_network_v20230201:network:ConnectionMonitorTestGroup": {
   "properties": {
    "destinations": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "disable": {
     "type": "boolean"
    },
    "name": {
     "type": "string"
    },
    "sources": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "testConfigurations": {
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "required": [
    "destinations",
    "name",
    "sources",
    "testConfigurations"
   ]
  },
  "azure-native_network_v20230201:network:ConnectionMonitorTestGroupResponse": {
   "properties": {
    "destinations": {
     "items": {
      "type": "string"
     }
    },
    "disable": {},
    "name": {},
    "sources": {
     "items": {
      "type": "string"
     }
    },
    "testConfigurations": {
     "items": {
      "type": "string"
     }
    }
   },
   "required": [
    "destinations",
    "name",
    "sources",
    "testConfigurations"
   ]
  },
  "azure-native_network_v20230201:network:ConnectionMonitorWorkspaceSettings": {
   "properties": {
    "workspaceResourceId": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:ConnectionMonitorWorkspaceSettingsResponse": {
   "properties": {
    "workspaceResourceId": {}
   }
  },
  "azure-native_network_v20230201:network:ConnectivityGroupItem": {
   "properties": {
    "groupConnectivity": {
     "type": "string"
    },
    "isGlobal": {
     "type": "string"
    },
    "networkGroupId": {
     "type": "string"
    },
    "useHubGateway": {
     "type": "string"
    }
   },
   "required": [
    "groupConnectivity",
    "networkGroupId"
   ]
  },
  "azure-native_network_v20230201:network:ConnectivityGroupItemResponse": {
   "properties": {
    "groupConnectivity": {},
    "isGlobal": {},
    "networkGroupId": {},
    "useHubGateway": {}
   },
   "required": [
    "groupConnectivity",
    "networkGroupId"
   ]
  },
  "azure-native_network_v20230201:network:ContainerNetworkInterfaceConfiguration": {
   "properties": {
    "containerNetworkInterfaces": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
      "type": "object"
     },
     "type": "array"
    },
    "id": {
     "type": "string"
    },
    "ipConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IPConfigurationProfile",
      "type": "object"
     },
     "type": "array"
    },
    "name": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:ContainerNetworkInterfaceConfigurationResponse": {
   "properties": {
    "containerNetworkInterfaces": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "etag": {},
    "id": {},
    "ipConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IPConfigurationProfileResponse",
      "type": "object"
     }
    },
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:ContainerNetworkInterfaceIpConfigurationResponse": {
   "properties": {
    "etag": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:ContainerNetworkInterfaceResponse": {
   "properties": {
    "container": {
     "$ref": "#/types/azure-native_network_v20230201:network:ContainerResponse",
     "containers": [
      "properties"
     ]
    },
    "containerNetworkInterfaceConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:ContainerNetworkInterfaceConfigurationResponse",
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "ipConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ContainerNetworkInterfaceIpConfigurationResponse",
      "type": "object"
     }
    },
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:ContainerResponse": {
   "properties": {
    "id": {}
   }
  },
  "azure-native_network_v20230201:network:Criterion": {
   "properties": {
    "asPath": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "community": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "matchCondition": {
     "type": "string"
    },
    "routePrefix": {
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   }
  },
  "azure-native_network_v20230201:network:CriterionResponse": {
   "properties": {
    "asPath": {
     "items": {
      "type": "string"
     }
    },
    "community": {
     "items": {
      "type": "string"
     }
    },
    "matchCondition": {},
    "routePrefix": {
     "items": {
      "type": "string"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:CrossTenantScopesResponse": {
   "properties": {
    "managementGroups": {
     "items": {
      "type": "string"
     }
    },
    "subscriptions": {
     "items": {
      "type": "string"
     }
    },
    "tenantId": {}
   }
  },
  "azure-native_network_v20230201:network:CustomDnsConfigPropertiesFormat": {
   "properties": {
    "fqdn": {
     "type": "string"
    },
    "ipAddresses": {
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   }
  },
  "azure-native_network_v20230201:network:CustomDnsConfigPropertiesFormatResponse": {
   "properties": {
    "fqdn": {},
    "ipAddresses": {
     "items": {
      "type": "string"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:DdosSettings": {
   "properties": {
    "ddosProtectionPlan": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "type": "object"
    },
    "protectionMode": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:DdosSettingsResponse": {
   "properties": {
    "ddosProtectionPlan": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse"
    },
    "protectionMode": {}
   }
  },
  "azure-native_network_v20230201:network:Delegation": {
   "properties": {
    "id": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "serviceName": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "type": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:DelegationProperties": {
   "properties": {
    "serviceName": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:DelegationPropertiesResponse": {
   "properties": {
    "provisioningState": {},
    "serviceName": {}
   }
  },
  "azure-native_network_v20230201:network:DelegationResponse": {
   "properties": {
    "actions": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "etag": {},
    "id": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "serviceName": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:DeviceProperties": {
   "properties": {
    "deviceModel": {
     "type": "string"
    },
    "deviceVendor": {
     "type": "string"
    },
    "linkSpeedInMbps": {
     "type": "integer"
    }
   }
  },
  "azure-native_network_v20230201:network:DevicePropertiesResponse": {
   "properties": {
    "deviceModel": {},
    "deviceVendor": {},
    "linkSpeedInMbps": {}
   }
  },
  "azure-native_network_v20230201:network:DhcpOptions": {
   "properties": {
    "dnsServers": {
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   }
  },
  "azure-native_network_v20230201:network:DhcpOptionsResponse": {
   "properties": {
    "dnsServers": {
     "items": {
      "type": "string"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:DnsSettings": {
   "properties": {
    "enableProxy": {
     "type": "boolean"
    },
    "requireProxyForNetworkRules": {
     "type": "boolean"
    },
    "servers": {
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   }
  },
  "azure-native_network_v20230201:network:DnsSettingsResponse": {
   "properties": {
    "enableProxy": {},
    "requireProxyForNetworkRules": {},
    "servers": {
     "items": {
      "type": "string"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:EffectiveConnectivityConfigurationResponse": {
   "properties": {
    "appliesToGroups": {
     "arrayIdentifiers": [
      "networkGroupId"
     ],
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConnectivityGroupItemResponse",
      "type": "object"
     }
    },
    "configurationGroups": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConfigurationGroupResponse",
      "type": "object"
     }
    },
    "connectivityTopology": {
     "containers": [
      "properties"
     ]
    },
    "deleteExistingPeering": {
     "containers": [
      "properties"
     ]
    },
    "description": {
     "containers": [
      "properties"
     ]
    },
    "hubs": {
     "arrayIdentifiers": [
      "resourceId"
     ],
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:HubResponse",
      "type": "object"
     }
    },
    "id": {},
    "isGlobal": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    }
   },
   "required": [
    "appliesToGroups",
    "connectivityTopology"
   ]
  },
  "azure-native_network_v20230201:network:EffectiveDefaultSecurityAdminRuleResponse": {
   "properties": {
    "access": {
     "containers": [
      "properties"
     ]
    },
    "configurationDescription": {},
    "description": {
     "containers": [
      "properties"
     ]
    },
    "destinationPortRanges": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "destinations": {
     "arrayIdentifiers": [
      "addressPrefix"
     ],
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AddressPrefixItemResponse",
      "type": "object"
     }
    },
    "direction": {
     "containers": [
      "properties"
     ]
    },
    "flag": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "kind": {
     "const": "Default"
    },
    "priority": {
     "containers": [
      "properties"
     ]
    },
    "protocol": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "ruleCollectionAppliesToGroups": {
     "arrayIdentifiers": [
      "networkGroupId"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkManagerSecurityGroupItemResponse",
      "type": "object"
     }
    },
    "ruleCollectionDescription": {},
    "ruleGroups": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConfigurationGroupResponse",
      "type": "object"
     }
    },
    "sourcePortRanges": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "sources": {
     "arrayIdentifiers": [
      "addressPrefix"
     ],
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AddressPrefixItemResponse",
      "type": "object"
     }
    }
   },
   "required": [
    "kind"
   ]
  },
  "azure-native_network_v20230201:network:EffectiveSecurityAdminRuleResponse": {
   "properties": {
    "access": {
     "containers": [
      "properties"
     ]
    },
    "configurationDescription": {},
    "description": {
     "containers": [
      "properties"
     ]
    },
    "destinationPortRanges": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "destinations": {
     "arrayIdentifiers": [
      "addressPrefix"
     ],
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AddressPrefixItemResponse",
      "type": "object"
     }
    },
    "direction": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "kind": {
     "const": "Custom"
    },
    "priority": {
     "containers": [
      "properties"
     ]
    },
    "protocol": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "ruleCollectionAppliesToGroups": {
     "arrayIdentifiers": [
      "networkGroupId"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkManagerSecurityGroupItemResponse",
      "type": "object"
     }
    },
    "ruleCollectionDescription": {},
    "ruleGroups": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ConfigurationGroupResponse",
      "type": "object"
     }
    },
    "sourcePortRanges": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "sources": {
     "arrayIdentifiers": [
      "addressPrefix"
     ],
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AddressPrefixItemResponse",
      "type": "object"
     }
    }
   },
   "required": [
    "access",
    "direction",
    "kind",
    "priority",
    "protocol"
   ]
  },
  "azure-native_network_v20230201:network:ExclusionManagedRule": {
   "properties": {
    "ruleId": {
     "type": "string"
    }
   },
   "required": [
    "ruleId"
   ]
  },
  "azure-native_network_v20230201:network:ExclusionManagedRuleGroup": {
   "properties": {
    "ruleGroupName": {
     "type": "string"
    },
    "rules": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExclusionManagedRule",
      "type": "object"
     },
     "type": "array"
    }
   },
   "required": [
    "ruleGroupName"
   ]
  },
  "azure-native_network_v20230201:network:ExclusionManagedRuleGroupResponse": {
   "properties": {
    "ruleGroupName": {},
    "rules": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExclusionManagedRuleResponse",
      "type": "object"
     }
    }
   },
   "required": [
    "ruleGroupName"
   ]
  },
  "azure-native_network_v20230201:network:ExclusionManagedRuleResponse": {
   "properties": {
    "ruleId": {}
   },
   "required": [
    "ruleId"
   ]
  },
  "azure-native_network_v20230201:network:ExclusionManagedRuleSet": {
   "properties": {
    "ruleGroups": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExclusionManagedRuleGroup",
      "type": "object"
     },
     "type": "array"
    },
    "ruleSetType": {
     "type": "string"
    },
    "ruleSetVersion": {
     "type": "string"
    }
   },
   "required": [
    "ruleSetType",
    "ruleSetVersion"
   ]
  },
  "azure-native_network_v20230201:network:ExclusionManagedRuleSetResponse": {
   "properties": {
    "ruleGroups": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExclusionManagedRuleGroupResponse",
      "type": "object"
     }
    },
    "ruleSetType": {},
    "ruleSetVersion": {}
   },
   "required": [
    "ruleSetType",
    "ruleSetVersion"
   ]
  },
  "azure-native_network_v20230201:network:ExplicitProxy": {
   "properties": {
    "enableExplicitProxy": {
     "type": "boolean"
    },
    "enablePacFile": {
     "type": "boolean"
    },
    "httpPort": {
     "maximum": 64000,
     "minimum": 0,
     "type": "integer"
    },
    "httpsPort": {
     "maximum": 64000,
     "minimum": 0,
     "type": "integer"
    },
    "pacFile": {
     "type": "string"
    },
    "pacFilePort": {
     "maximum": 64000,
     "minimum": 0,
     "type": "integer"
    }
   }
  },
  "azure-native_network_v20230201:network:ExplicitProxyResponse": {
   "properties": {
    "enableExplicitProxy": {},
    "enablePacFile": {},
    "httpPort": {},
    "httpsPort": {},
    "pacFile": {},
    "pacFilePort": {}
   }
  },
  "azure-native_network_v20230201:network:ExpressRouteCircuitAuthorization": {
   "properties": {
    "authorizationKey": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "authorizationUseStatus": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "id": {
     "type": "string"
    },
    "name": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:ExpressRouteCircuitAuthorizationResponse": {
   "properties": {
    "authorizationKey": {
     "containers": [
      "properties"
     ]
    },
    "authorizationUseStatus": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:ExpressRouteCircuitConnection": {
   "properties": {
    "addressPrefix": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "authorizationKey": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "expressRouteCircuitPeering": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "id": {
     "type": "string"
    },
    "ipv6CircuitConnectionConfig": {
     "$ref": "#/types/azure-native_network_v20230201:network:Ipv6CircuitConnectionConfig",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "name": {
     "type": "string"
    },
    "peerExpressRouteCircuitPeering": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    }
   }
  },
  "azure-native_network_v20230201:network:ExpressRouteCircuitConnectionResponse": {
   "properties": {
    "addressPrefix": {
     "containers": [
      "properties"
     ]
    },
    "authorizationKey": {
     "containers": [
      "properties"
     ]
    },
    "circuitConnectionStatus": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "expressRouteCircuitPeering": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "ipv6CircuitConnectionConfig": {
     "$ref": "#/types/azure-native_network_v20230201:network:Ipv6CircuitConnectionConfigResponse",
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "peerExpressRouteCircuitPeering": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:ExpressRouteCircuitPeering": {
   "properties": {
    "azureASN": {
     "containers": [
      "properties"
     ],
     "type": "integer"
    },
    "connections": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitConnection",
      "type": "object"
     },
     "type": "array"
    },
    "gatewayManagerEtag": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "id": {
     "type": "string"
    },
    "ipv6PeeringConfig": {
     "$ref": "#/types/azure-native_network_v20230201:network:Ipv6ExpressRouteCircuitPeeringConfig",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "microsoftPeeringConfig": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitPeeringConfig",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "name": {
     "type": "string"
    },
    "peerASN": {
     "containers": [
      "properties"
     ],
     "maximum": 4294967295,
     "minimum": 1,
     "type": "number"
    },
    "peeringType": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "primaryAzurePort": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "primaryPeerAddressPrefix": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "routeFilter": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "secondaryAzurePort": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "secondaryPeerAddressPrefix": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "sharedKey": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "state": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "stats": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitStats",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "vlanId": {
     "containers": [
      "properties"
     ],
     "type": "integer"
    }
   }
  },
  "azure-native_network_v20230201:network:ExpressRouteCircuitPeeringConfig": {
   "properties": {
    "advertisedCommunities": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "advertisedPublicPrefixes": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "customerASN": {
     "type": "integer"
    },
    "legacyMode": {
     "type": "integer"
    },
    "routingRegistryName": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:ExpressRouteCircuitPeeringConfigResponse": {
   "properties": {
    "advertisedCommunities": {
     "items": {
      "type": "string"
     }
    },
    "advertisedPublicPrefixes": {
     "items": {
      "type": "string"
     }
    },
    "advertisedPublicPrefixesState": {},
    "customerASN": {},
    "legacyMode": {},
    "routingRegistryName": {}
   }
  },
  "azure-native_network_v20230201:network:ExpressRouteCircuitPeeringId": {
   "properties": {
    "id": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:ExpressRouteCircuitPeeringIdResponse": {
   "properties": {
    "id": {}
   }
  },
  "azure-native_network_v20230201:network:ExpressRouteCircuitPeeringResponse": {
   "properties": {
    "azureASN": {
     "containers": [
      "properties"
     ]
    },
    "connections": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitConnectionResponse",
      "type": "object"
     }
    },
    "etag": {},
    "expressRouteConnection": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteConnectionIdResponse",
     "containers": [
      "properties"
     ]
    },
    "gatewayManagerEtag": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "ipv6PeeringConfig": {
     "$ref": "#/types/azure-native_network_v20230201:network:Ipv6ExpressRouteCircuitPeeringConfigResponse",
     "containers": [
      "properties"
     ]
    },
    "lastModifiedBy": {
     "containers": [
      "properties"
     ]
    },
    "microsoftPeeringConfig": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitPeeringConfigResponse",
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "peerASN": {
     "containers": [
      "properties"
     ]
    },
    "peeredConnections": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PeerExpressRouteCircuitConnectionResponse",
      "type": "object"
     }
    },
    "peeringType": {
     "containers": [
      "properties"
     ]
    },
    "primaryAzurePort": {
     "containers": [
      "properties"
     ]
    },
    "primaryPeerAddressPrefix": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "routeFilter": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "secondaryAzurePort": {
     "containers": [
      "properties"
     ]
    },
    "secondaryPeerAddressPrefix": {
     "containers": [
      "properties"
     ]
    },
    "sharedKey": {
     "containers": [
      "properties"
     ]
    },
    "state": {
     "containers": [
      "properties"
     ]
    },
    "stats": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitStatsResponse",
     "containers": [
      "properties"
     ]
    },
    "type": {},
    "vlanId": {
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native_network_v20230201:network:ExpressRouteCircuitServiceProviderProperties": {
   "properties": {
    "bandwidthInMbps": {
     "type": "integer"
    },
    "peeringLocation": {
     "type": "string"
    },
    "serviceProviderName": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:ExpressRouteCircuitServiceProviderPropertiesResponse": {
   "properties": {
    "bandwidthInMbps": {},
    "peeringLocation": {},
    "serviceProviderName": {}
   }
  },
  "azure-native_network_v20230201:network:ExpressRouteCircuitSku": {
   "properties": {
    "family": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "tier": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:ExpressRouteCircuitSkuResponse": {
   "properties": {
    "family": {},
    "name": {},
    "tier": {}
   }
  },
  "azure-native_network_v20230201:network:ExpressRouteCircuitStats": {
   "properties": {
    "primarybytesIn": {
     "type": "number"
    },
    "primarybytesOut": {
     "type": "number"
    },
    "secondarybytesIn": {
     "type": "number"
    },
    "secondarybytesOut": {
     "type": "number"
    }
   }
  },
  "azure-native_network_v20230201:network:ExpressRouteCircuitStatsResponse": {
   "properties": {
    "primarybytesIn": {},
    "primarybytesOut": {},
    "secondarybytesIn": {},
    "secondarybytesOut": {}
   }
  },
  "azure-native_network_v20230201:network:ExpressRouteConnection": {
   "properties": {
    "authorizationKey": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "enableInternetSecurity": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "enablePrivateLinkFastPath": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "expressRouteCircuitPeering": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitPeeringId",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "expressRouteGatewayBypass": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "id": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "routingConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfiguration",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "routingWeight": {
     "containers": [
      "properties"
     ],
     "type": "integer"
    }
   },
   "required": [
    "expressRouteCircuitPeering",
    "name"
   ]
  },
  "azure-native_network_v20230201:network:ExpressRouteConnectionIdResponse": {
   "properties": {
    "id": {}
   }
  },
  "azure-native_network_v20230201:network:ExpressRouteConnectionResponse": {
   "properties": {
    "authorizationKey": {
     "containers": [
      "properties"
     ]
    },
    "enableInternetSecurity": {
     "containers": [
      "properties"
     ]
    },
    "enablePrivateLinkFastPath": {
     "containers": [
      "properties"
     ]
    },
    "expressRouteCircuitPeering": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitPeeringIdResponse",
     "containers": [
      "properties"
     ]
    },
    "expressRouteGatewayBypass": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "routingConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfigurationResponse",
     "containers": [
      "properties"
     ]
    },
    "routingWeight": {
     "containers": [
      "properties"
     ]
    }
   },
   "required": [
    "expressRouteCircuitPeering",
    "name"
   ]
  },
  "azure-native_network_v20230201:network:ExpressRouteGatewayPropertiesAutoScaleConfiguration": {
   "properties": {
    "bounds": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteGatewayPropertiesBounds",
     "type": "object"
    }
   }
  },
  "azure-native_network_v20230201:network:ExpressRouteGatewayPropertiesBounds": {
   "properties": {
    "max": {
     "type": "integer"
    },
    "min": {
     "type": "integer"
    }
   }
  },
  "azure-native_network_v20230201:network:ExpressRouteGatewayPropertiesResponseAutoScaleConfiguration": {
   "properties": {
    "bounds": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteGatewayPropertiesResponseBounds"
    }
   }
  },
  "azure-native_network_v20230201:network:ExpressRouteGatewayPropertiesResponseBounds": {
   "properties": {
    "max": {},
    "min": {}
   }
  },
  "azure-native_network_v20230201:network:ExpressRouteLink": {
   "properties": {
    "adminState": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "id": {
     "type": "string"
    },
    "macSecConfig": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteLinkMacSecConfig",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "name": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:ExpressRouteLinkMacSecConfig": {
   "properties": {
    "cakSecretIdentifier": {
     "type": "string"
    },
    "cipher": {
     "type": "string"
    },
    "cknSecretIdentifier": {
     "type": "string"
    },
    "sciState": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:ExpressRouteLinkMacSecConfigResponse": {
   "properties": {
    "cakSecretIdentifier": {},
    "cipher": {},
    "cknSecretIdentifier": {},
    "sciState": {}
   }
  },
  "azure-native_network_v20230201:network:ExpressRouteLinkResponse": {
   "properties": {
    "adminState": {
     "containers": [
      "properties"
     ]
    },
    "coloLocation": {
     "containers": [
      "properties"
     ]
    },
    "connectorType": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "interfaceName": {
     "containers": [
      "properties"
     ]
    },
    "macSecConfig": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteLinkMacSecConfigResponse",
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "patchPanelId": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "rackId": {
     "containers": [
      "properties"
     ]
    },
    "routerName": {
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native_network_v20230201:network:ExtendedLocation": {
   "properties": {
    "name": {
     "type": "string"
    },
    "type": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:ExtendedLocationResponse": {
   "properties": {
    "name": {},
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:FilterItems": {
   "properties": {
    "field": {
     "type": "string"
    },
    "values": {
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   }
  },
  "azure-native_network_v20230201:network:FirewallPolicyCertificateAuthority": {
   "properties": {
    "keyVaultSecretId": {
     "type": "string"
    },
    "name": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:FirewallPolicyCertificateAuthorityResponse": {
   "properties": {
    "keyVaultSecretId": {},
    "name": {}
   }
  },
  "azure-native_network_v20230201:network:FirewallPolicyFilterRuleCollection": {
   "properties": {
    "action": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyFilterRuleCollectionAction",
     "type": "object"
    },
    "name": {
     "type": "string"
    },
    "priority": {
     "maximum": 65000,
     "minimum": 100,
     "type": "integer"
    },
    "ruleCollectionType": {
     "const": "FirewallPolicyFilterRuleCollection",
     "type": "string"
    },
    "rules": {
     "items": {
      "oneOf": [
       "#/types/azure-native_network_v20230201:network:ApplicationRule",
       "#/types/azure-native_network_v20230201:network:NatRule",
       "#/types/azure-native_network_v20230201:network:NetworkRule"
      ]
     },
     "type": "array"
    }
   },
   "required": [
    "ruleCollectionType"
   ]
  },
  "azure-native_network_v20230201:network:FirewallPolicyFilterRuleCollectionAction": {
   "properties": {
    "type": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:FirewallPolicyFilterRuleCollectionActionResponse": {
   "properties": {
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:FirewallPolicyFilterRuleCollectionResponse": {
   "properties": {
    "action": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyFilterRuleCollectionActionResponse"
    },
    "name": {},
    "priority": {},
    "ruleCollectionType": {
     "const": "FirewallPolicyFilterRuleCollection"
    },
    "rules": {
     "items": {
      "oneOf": [
       "#/types/azure-native_network_v20230201:network:ApplicationRuleResponse",
       "#/types/azure-native_network_v20230201:network:NatRuleResponse",
       "#/types/azure-native_network_v20230201:network:NetworkRuleResponse"
      ]
     }
    }
   },
   "required": [
    "ruleCollectionType"
   ]
  },
  "azure-native_network_v20230201:network:FirewallPolicyHttpHeaderToInsert": {
   "properties": {
    "headerName": {
     "type": "string"
    },
    "headerValue": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:FirewallPolicyHttpHeaderToInsertResponse": {
   "properties": {
    "headerName": {},
    "headerValue": {}
   }
  },
  "azure-native_network_v20230201:network:FirewallPolicyInsights": {
   "properties": {
    "isEnabled": {
     "type": "boolean"
    },
    "logAnalyticsResources": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyLogAnalyticsResources",
     "type": "object"
    },
    "retentionDays": {
     "type": "integer"
    }
   }
  },
  "azure-native_network_v20230201:network:FirewallPolicyInsightsResponse": {
   "properties": {
    "isEnabled": {},
    "logAnalyticsResources": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyLogAnalyticsResourcesResponse"
    },
    "retentionDays": {}
   }
  },
  "azure-native_network_v20230201:network:FirewallPolicyIntrusionDetection": {
   "properties": {
    "configuration": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyIntrusionDetectionConfiguration",
     "type": "object"
    },
    "mode": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:FirewallPolicyIntrusionDetectionBypassTrafficSpecifications": {
   "properties": {
    "description": {
     "type": "string"
    },
    "destinationAddresses": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "destinationIpGroups": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "destinationPorts": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "name": {
     "type": "string"
    },
    "protocol": {
     "type": "string"
    },
    "sourceAddresses": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "sourceIpGroups": {
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   }
  },
  "azure-native_network_v20230201:network:FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponse": {
   "properties": {
    "description": {},
    "destinationAddresses": {
     "items": {
      "type": "string"
     }
    },
    "destinationIpGroups": {
     "items": {
      "type": "string"
     }
    },
    "destinationPorts": {
     "items": {
      "type": "string"
     }
    },
    "name": {},
    "protocol": {},
    "sourceAddresses": {
     "items": {
      "type": "string"
     }
    },
    "sourceIpGroups": {
     "items": {
      "type": "string"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:FirewallPolicyIntrusionDetectionConfiguration": {
   "properties": {
    "bypassTrafficSettings": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyIntrusionDetectionBypassTrafficSpecifications",
      "type": "object"
     },
     "type": "array"
    },
    "privateRanges": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "signatureOverrides": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyIntrusionDetectionSignatureSpecification",
      "type": "object"
     },
     "type": "array"
    }
   }
  },
  "azure-native_network_v20230201:network:FirewallPolicyIntrusionDetectionConfigurationResponse": {
   "properties": {
    "bypassTrafficSettings": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponse",
      "type": "object"
     }
    },
    "privateRanges": {
     "items": {
      "type": "string"
     }
    },
    "signatureOverrides": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyIntrusionDetectionSignatureSpecificationResponse",
      "type": "object"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:FirewallPolicyIntrusionDetectionResponse": {
   "properties": {
    "configuration": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyIntrusionDetectionConfigurationResponse"
    },
    "mode": {}
   }
  },
  "azure-native_network_v20230201:network:FirewallPolicyIntrusionDetectionSignatureSpecification": {
   "properties": {
    "id": {
     "type": "string"
    },
    "mode": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:FirewallPolicyIntrusionDetectionSignatureSpecificationResponse": {
   "properties": {
    "id": {},
    "mode": {}
   }
  },
  "azure-native_network_v20230201:network:FirewallPolicyLogAnalyticsResources": {
   "properties": {
    "defaultWorkspaceId": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "type": "object"
    },
    "workspaces": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyLogAnalyticsWorkspace",
      "type": "object"
     },
     "type": "array"
    }
   }
  },
  "azure-native_network_v20230201:network:FirewallPolicyLogAnalyticsResourcesResponse": {
   "properties": {
    "defaultWorkspaceId": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse"
    },
    "workspaces": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyLogAnalyticsWorkspaceResponse",
      "type": "object"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:FirewallPolicyLogAnalyticsWorkspace": {
   "properties": {
    "region": {
     "type": "string"
    },
    "workspaceId": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "type": "object"
    }
   }
  },
  "azure-native_network_v20230201:network:FirewallPolicyLogAnalyticsWorkspaceResponse": {
   "properties": {
    "region": {},
    "workspaceId": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse"
    }
   }
  },
  "azure-native_network_v20230201:network:FirewallPolicyNatRuleCollection": {
   "properties": {
    "action": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyNatRuleCollectionAction",
     "type": "object"
    },
    "name": {
     "type": "string"
    },
    "priority": {
     "maximum": 65000,
     "minimum": 100,
     "type": "integer"
    },
    "ruleCollectionType": {
     "const": "FirewallPolicyNatRuleCollection",
     "type": "string"
    },
    "rules": {
     "items": {
      "oneOf": [
       "#/types/azure-native_network_v20230201:network:ApplicationRule",
       "#/types/azure-native_network_v20230201:network:NatRule",
       "#/types/azure-native_network_v20230201:network:NetworkRule"
      ]
     },
     "type": "array"
    }
   },
   "required": [
    "ruleCollectionType"
   ]
  },
  "azure-native_network_v20230201:network:FirewallPolicyNatRuleCollectionAction": {
   "properties": {
    "type": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:FirewallPolicyNatRuleCollectionActionResponse": {
   "properties": {
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:FirewallPolicyNatRuleCollectionResponse": {
   "properties": {
    "action": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyNatRuleCollectionActionResponse"
    },
    "name": {},
    "priority": {},
    "ruleCollectionType": {
     "const": "FirewallPolicyNatRuleCollection"
    },
    "rules": {
     "items": {
      "oneOf": [
       "#/types/azure-native_network_v20230201:network:ApplicationRuleResponse",
       "#/types/azure-native_network_v20230201:network:NatRuleResponse",
       "#/types/azure-native_network_v20230201:network:NetworkRuleResponse"
      ]
     }
    }
   },
   "required": [
    "ruleCollectionType"
   ]
  },
  "azure-native_network_v20230201:network:FirewallPolicyRuleApplicationProtocol": {
   "properties": {
    "port": {
     "maximum": 64000,
     "minimum": 0,
     "type": "integer"
    },
    "protocolType": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:FirewallPolicyRuleApplicationProtocolResponse": {
   "properties": {
    "port": {},
    "protocolType": {}
   }
  },
  "azure-native_network_v20230201:network:FirewallPolicySNAT": {
   "properties": {
    "autoLearnPrivateRanges": {
     "type": "string"
    },
    "privateRanges": {
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   }
  },
  "azure-native_network_v20230201:network:FirewallPolicySNATResponse": {
   "properties": {
    "autoLearnPrivateRanges": {},
    "privateRanges": {
     "items": {
      "type": "string"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:FirewallPolicySQL": {
   "properties": {
    "allowSqlRedirect": {
     "type": "boolean"
    }
   }
  },
  "azure-native_network_v20230201:network:FirewallPolicySQLResponse": {
   "properties": {
    "allowSqlRedirect": {}
   }
  },
  "azure-native_network_v20230201:network:FirewallPolicySku": {
   "properties": {
    "tier": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:FirewallPolicySkuResponse": {
   "properties": {
    "tier": {}
   }
  },
  "azure-native_network_v20230201:network:FirewallPolicyThreatIntelWhitelist": {
   "properties": {
    "fqdns": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "ipAddresses": {
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   }
  },
  "azure-native_network_v20230201:network:FirewallPolicyThreatIntelWhitelistResponse": {
   "properties": {
    "fqdns": {
     "items": {
      "type": "string"
     }
    },
    "ipAddresses": {
     "items": {
      "type": "string"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:FirewallPolicyTransportSecurity": {
   "properties": {
    "certificateAuthority": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyCertificateAuthority",
     "type": "object"
    }
   }
  },
  "azure-native_network_v20230201:network:FirewallPolicyTransportSecurityResponse": {
   "properties": {
    "certificateAuthority": {
     "$ref": "#/types/azure-native_network_v20230201:network:FirewallPolicyCertificateAuthorityResponse"
    }
   }
  },
  "azure-native_network_v20230201:network:FlowLogFormatParameters": {
   "properties": {
    "type": {
     "type": "string"
    },
    "version": {
     "default": 0,
     "type": "integer"
    }
   }
  },
  "azure-native_network_v20230201:network:FlowLogFormatParametersResponse": {
   "properties": {
    "type": {},
    "version": {
     "default": 0
    }
   }
  },
  "azure-native_network_v20230201:network:FlowLogResponse": {
   "properties": {
    "enabled": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "flowAnalyticsConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:TrafficAnalyticsPropertiesResponse",
     "containers": [
      "properties"
     ]
    },
    "format": {
     "$ref": "#/types/azure-native_network_v20230201:network:FlowLogFormatParametersResponse",
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "location": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "retentionPolicy": {
     "$ref": "#/types/azure-native_network_v20230201:network:RetentionPolicyParametersResponse",
     "containers": [
      "properties"
     ]
    },
    "storageId": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "targetResourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "targetResourceId": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   },
   "required": [
    "storageId",
    "targetResourceId"
   ]
  },
  "azure-native_network_v20230201:network:FrontendIPConfiguration": {
   "properties": {
    "gatewayLoadBalancer": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "id": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "privateIPAddress": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "privateIPAddressVersion": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "privateIPAllocationMethod": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "publicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddress",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "publicIPPrefix": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:Subnet",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "zones": {
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   }
  },
  "azure-native_network_v20230201:network:FrontendIPConfigurationResponse": {
   "properties": {
    "etag": {},
    "gatewayLoadBalancer": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "inboundNatPools": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "inboundNatRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "loadBalancingRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "name": {},
    "outboundRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "privateIPAddress": {
     "containers": [
      "properties"
     ]
    },
    "privateIPAddressVersion": {
     "containers": [
      "properties"
     ]
    },
    "privateIPAllocationMethod": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "publicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddressResponse",
     "containers": [
      "properties"
     ]
    },
    "publicIPPrefix": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubnetResponse",
     "containers": [
      "properties"
     ]
    },
    "type": {},
    "zones": {
     "items": {
      "type": "string"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:GatewayCustomBgpIpAddressIpConfiguration": {
   "properties": {
    "customBgpIpAddress": {
     "type": "string"
    },
    "ipConfigurationId": {
     "type": "string"
    }
   },
   "required": [
    "customBgpIpAddress",
    "ipConfigurationId"
   ]
  },
  "azure-native_network_v20230201:network:GatewayCustomBgpIpAddressIpConfigurationResponse": {
   "properties": {
    "customBgpIpAddress": {},
    "ipConfigurationId": {}
   },
   "required": [
    "customBgpIpAddress",
    "ipConfigurationId"
   ]
  },
  "azure-native_network_v20230201:network:GatewayLoadBalancerTunnelInterface": {
   "properties": {
    "identifier": {
     "type": "integer"
    },
    "port": {
     "type": "integer"
    },
    "protocol": {
     "type": "string"
    },
    "type": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:GatewayLoadBalancerTunnelInterfaceResponse": {
   "properties": {
    "identifier": {},
    "port": {},
    "protocol": {},
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:GatewayRouteResponse": {
   "properties": {
    "asPath": {},
    "localAddress": {},
    "network": {},
    "nextHop": {},
    "origin": {},
    "sourcePeer": {},
    "weight": {}
   }
  },
  "azure-native_network_v20230201:network:GroupByUserSession": {
   "properties": {
    "groupByVariables": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:GroupByVariable",
      "type": "object"
     },
     "type": "array"
    }
   },
   "required": [
    "groupByVariables"
   ]
  },
  "azure-native_network_v20230201:network:GroupByUserSessionResponse": {
   "properties": {
    "groupByVariables": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:GroupByVariableResponse",
      "type": "object"
     }
    }
   },
   "required": [
    "groupByVariables"
   ]
  },
  "azure-native_network_v20230201:network:GroupByVariable": {
   "properties": {
    "variableName": {
     "type": "string"
    }
   },
   "required": [
    "variableName"
   ]
  },
  "azure-native_network_v20230201:network:GroupByVariableResponse": {
   "properties": {
    "variableName": {}
   },
   "required": [
    "variableName"
   ]
  },
  "azure-native_network_v20230201:network:HTTPHeader": {
   "properties": {
    "name": {
     "type": "string"
    },
    "value": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:HTTPHeaderResponse": {
   "properties": {
    "name": {},
    "value": {}
   }
  },
  "azure-native_network_v20230201:network:Hub": {
   "properties": {
    "resourceId": {
     "type": "string"
    },
    "resourceType": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:HubIPAddresses": {
   "properties": {
    "privateIPAddress": {
     "type": "string"
    },
    "publicIPs": {
     "$ref": "#/types/azure-native_network_v20230201:network:HubPublicIPAddresses",
     "type": "object"
    }
   }
  },
  "azure-native_network_v20230201:network:HubIPAddressesResponse": {
   "properties": {
    "privateIPAddress": {},
    "publicIPs": {
     "$ref": "#/types/azure-native_network_v20230201:network:HubPublicIPAddressesResponse"
    }
   }
  },
  "azure-native_network_v20230201:network:HubPublicIPAddresses": {
   "properties": {
    "addresses": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallPublicIPAddress",
      "type": "object"
     },
     "type": "array"
    },
    "count": {
     "type": "integer"
    }
   }
  },
  "azure-native_network_v20230201:network:HubPublicIPAddressesResponse": {
   "properties": {
    "addresses": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:AzureFirewallPublicIPAddressResponse",
      "type": "object"
     }
    },
    "count": {}
   }
  },
  "azure-native_network_v20230201:network:HubResponse": {
   "properties": {
    "resourceId": {},
    "resourceType": {}
   }
  },
  "azure-native_network_v20230201:network:HubRoute": {
   "properties": {
    "destinationType": {
     "type": "string"
    },
    "destinations": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "name": {
     "type": "string"
    },
    "nextHop": {
     "type": "string"
    },
    "nextHopType": {
     "type": "string"
    }
   },
   "required": [
    "destinationType",
    "destinations",
    "name",
    "nextHop",
    "nextHopType"
   ]
  },
  "azure-native_network_v20230201:network:HubRouteResponse": {
   "properties": {
    "destinationType": {},
    "destinations": {
     "items": {
      "type": "string"
     }
    },
    "name": {},
    "nextHop": {},
    "nextHopType": {}
   },
   "required": [
    "destinationType",
    "destinations",
    "name",
    "nextHop",
    "nextHopType"
   ]
  },
  "azure-native_network_v20230201:network:IPConfigurationBgpPeeringAddress": {
   "properties": {
    "customBgpIpAddresses": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "ipconfigurationId": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:IPConfigurationBgpPeeringAddressResponse": {
   "properties": {
    "customBgpIpAddresses": {
     "items": {
      "type": "string"
     }
    },
    "defaultBgpIpAddresses": {
     "items": {
      "type": "string"
     }
    },
    "ipconfigurationId": {},
    "tunnelIpAddresses": {
     "items": {
      "type": "string"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:IPConfigurationProfile": {
   "properties": {
    "id": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:Subnet",
     "containers": [
      "properties"
     ],
     "type": "object"
    }
   }
  },
  "azure-native_network_v20230201:network:IPConfigurationProfileResponse": {
   "properties": {
    "etag": {},
    "id": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubnetResponse",
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:IPConfigurationResponse": {
   "properties": {
    "etag": {},
    "id": {},
    "name": {},
    "privateIPAddress": {
     "containers": [
      "properties"
     ]
    },
    "privateIPAllocationMethod": {
     "containers": [
      "properties"
     ],
     "default": "Dynamic"
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "publicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddressResponse",
     "containers": [
      "properties"
     ]
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubnetResponse",
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native_network_v20230201:network:InboundNatPool": {
   "properties": {
    "backendPort": {
     "containers": [
      "properties"
     ],
     "type": "integer"
    },
    "enableFloatingIP": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "enableTcpReset": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "frontendIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "frontendPortRangeEnd": {
     "containers": [
      "properties"
     ],
     "type": "integer"
    },
    "frontendPortRangeStart": {
     "containers": [
      "properties"
     ],
     "type": "integer"
    },
    "id": {
     "type": "string"
    },
    "idleTimeoutInMinutes": {
     "containers": [
      "properties"
     ],
     "type": "integer"
    },
    "name": {
     "type": "string"
    },
    "protocol": {
     "containers": [
      "properties"
     ],
     "type": "string"
    }
   },
   "required": [
    "backendPort",
    "frontendPortRangeEnd",
    "frontendPortRangeStart",
    "protocol"
   ]
  },
  "azure-native_network_v20230201:network:InboundNatPoolResponse": {
   "properties": {
    "backendPort": {
     "containers": [
      "properties"
     ]
    },
    "enableFloatingIP": {
     "containers": [
      "properties"
     ]
    },
    "enableTcpReset": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "frontendIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "frontendPortRangeEnd": {
     "containers": [
      "properties"
     ]
    },
    "frontendPortRangeStart": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "idleTimeoutInMinutes": {
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "protocol": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   },
   "required": [
    "backendPort",
    "frontendPortRangeEnd",
    "frontendPortRangeStart",
    "protocol"
   ]
  },
  "azure-native_network_v20230201:network:InboundNatRule": {
   "properties": {
    "backendAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "backendPort": {
     "containers": [
      "properties"
     ],
     "type": "integer"
    },
    "enableFloatingIP": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "enableTcpReset": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "frontendIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "frontendPort": {
     "containers": [
      "properties"
     ],
     "type": "integer"
    },
    "frontendPortRangeEnd": {
     "containers": [
      "properties"
     ],
     "type": "integer"
    },
    "frontendPortRangeStart": {
     "containers": [
      "properties"
     ],
     "type": "integer"
    },
    "id": {
     "type": "string"
    },
    "idleTimeoutInMinutes": {
     "containers": [
      "properties"
     ],
     "type": "integer"
    },
    "name": {
     "type": "string"
    },
    "protocol": {
     "containers": [
      "properties"
     ],
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:InboundNatRuleResponse": {
   "properties": {
    "backendAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "backendIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceIPConfigurationResponse",
     "containers": [
      "properties"
     ]
    },
    "backendPort": {
     "containers": [
      "properties"
     ]
    },
    "enableFloatingIP": {
     "containers": [
      "properties"
     ]
    },
    "enableTcpReset": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "frontendIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "frontendPort": {
     "containers": [
      "properties"
     ]
    },
    "frontendPortRangeEnd": {
     "containers": [
      "properties"
     ]
    },
    "frontendPortRangeStart": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "idleTimeoutInMinutes": {
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "protocol": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:IpTag": {
   "properties": {
    "ipTagType": {
     "type": "string"
    },
    "tag": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:IpTagResponse": {
   "properties": {
    "ipTagType": {},
    "tag": {}
   }
  },
  "azure-native_network_v20230201:network:IpsecPolicy": {
   "properties": {
    "dhGroup": {
     "type": "string"
    },
    "ikeEncryption": {
     "type": "string"
    },
    "ikeIntegrity": {
     "type": "string"
    },
    "ipsecEncryption": {
     "type": "string"
    },
    "ipsecIntegrity": {
     "type": "string"
    },
    "pfsGroup": {
     "type": "string"
    },
    "saDataSizeKilobytes": {
     "type": "integer"
    },
    "saLifeTimeSeconds": {
     "type": "integer"
    }
   },
   "required": [
    "dhGroup",
    "ikeEncryption",
    "ikeIntegrity",
    "ipsecEncryption",
    "ipsecIntegrity",
    "pfsGroup",
    "saDataSizeKilobytes",
    "saLifeTimeSeconds"
   ]
  },
  "azure-native_network_v20230201:network:IpsecPolicyResponse": {
   "properties": {
    "dhGroup": {},
    "ikeEncryption": {},
    "ikeIntegrity": {},
    "ipsecEncryption": {},
    "ipsecIntegrity": {},
    "pfsGroup": {},
    "saDataSizeKilobytes": {},
    "saLifeTimeSeconds": {}
   },
   "required": [
    "dhGroup",
    "ikeEncryption",
    "ikeIntegrity",
    "ipsecEncryption",
    "ipsecIntegrity",
    "pfsGroup",
    "saDataSizeKilobytes",
    "saLifeTimeSeconds"
   ]
  },
  "azure-native_network_v20230201:network:Ipv6CircuitConnectionConfig": {
   "properties": {
    "addressPrefix": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:Ipv6CircuitConnectionConfigResponse": {
   "properties": {
    "addressPrefix": {},
    "circuitConnectionStatus": {}
   }
  },
  "azure-native_network_v20230201:network:Ipv6ExpressRouteCircuitPeeringConfig": {
   "properties": {
    "microsoftPeeringConfig": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitPeeringConfig",
     "type": "object"
    },
    "primaryPeerAddressPrefix": {
     "type": "string"
    },
    "routeFilter": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "type": "object"
    },
    "secondaryPeerAddressPrefix": {
     "type": "string"
    },
    "state": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:Ipv6ExpressRouteCircuitPeeringConfigResponse": {
   "properties": {
    "microsoftPeeringConfig": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExpressRouteCircuitPeeringConfigResponse"
    },
    "primaryPeerAddressPrefix": {},
    "routeFilter": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse"
    },
    "secondaryPeerAddressPrefix": {},
    "state": {}
   }
  },
  "azure-native_network_v20230201:network:LoadBalancerBackendAddress": {
   "properties": {
    "adminState": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "ipAddress": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "loadBalancerFrontendIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "name": {
     "type": "string"
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "virtualNetwork": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    }
   }
  },
  "azure-native_network_v20230201:network:LoadBalancerBackendAddressResponse": {
   "properties": {
    "adminState": {
     "containers": [
      "properties"
     ]
    },
    "inboundNatRulesPortMapping": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NatRulePortMappingResponse",
      "type": "object"
     }
    },
    "ipAddress": {
     "containers": [
      "properties"
     ]
    },
    "loadBalancerFrontendIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "networkInterfaceIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "virtualNetwork": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native_network_v20230201:network:LoadBalancerSku": {
   "properties": {
    "name": {
     "type": "string"
    },
    "tier": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:LoadBalancerSkuResponse": {
   "properties": {
    "name": {},
    "tier": {}
   }
  },
  "azure-native_network_v20230201:network:LoadBalancingRule": {
   "properties": {
    "backendAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "backendAddressPools": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
      "type": "object"
     },
     "type": "array"
    },
    "backendPort": {
     "containers": [
      "properties"
     ],
     "type": "integer"
    },
    "disableOutboundSnat": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "enableFloatingIP": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "enableTcpReset": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "frontendIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "frontendPort": {
     "containers": [
      "properties"
     ],
     "type": "integer"
    },
    "id": {
     "type": "string"
    },
    "idleTimeoutInMinutes": {
     "containers": [
      "properties"
     ],
     "type": "integer"
    },
    "loadDistribution": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "probe": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "protocol": {
     "containers": [
      "properties"
     ],
     "type": "string"
    }
   },
   "required": [
    "frontendPort",
    "protocol"
   ]
  },
  "azure-native_network_v20230201:network:LoadBalancingRuleResponse": {
   "properties": {
    "backendAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "backendAddressPools": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "backendPort": {
     "containers": [
      "properties"
     ]
    },
    "disableOutboundSnat": {
     "containers": [
      "properties"
     ]
    },
    "enableFloatingIP": {
     "containers": [
      "properties"
     ]
    },
    "enableTcpReset": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "frontendIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "frontendPort": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "idleTimeoutInMinutes": {
     "containers": [
      "properties"
     ]
    },
    "loadDistribution": {
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "probe": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "protocol": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   },
   "required": [
    "frontendPort",
    "protocol"
   ]
  },
  "azure-native_network_v20230201:network:LocalNetworkGateway": {
   "properties": {
    "bgpSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:BgpSettings",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "fqdn": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "gatewayIpAddress": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "id": {
     "type": "string"
    },
    "localNetworkAddressSpace": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpace",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "location": {
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "type": "object"
    }
   }
  },
  "azure-native_network_v20230201:network:LocalNetworkGatewayResponse": {
   "properties": {
    "bgpSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:BgpSettingsResponse",
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "fqdn": {
     "containers": [
      "properties"
     ]
    },
    "gatewayIpAddress": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "localNetworkAddressSpace": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpaceResponse",
     "containers": [
      "properties"
     ]
    },
    "location": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:ManagedRuleGroupOverride": {
   "properties": {
    "ruleGroupName": {
     "type": "string"
    },
    "rules": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ManagedRuleOverride",
      "type": "object"
     },
     "type": "array"
    }
   },
   "required": [
    "ruleGroupName"
   ]
  },
  "azure-native_network_v20230201:network:ManagedRuleGroupOverrideResponse": {
   "properties": {
    "ruleGroupName": {},
    "rules": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ManagedRuleOverrideResponse",
      "type": "object"
     }
    }
   },
   "required": [
    "ruleGroupName"
   ]
  },
  "azure-native_network_v20230201:network:ManagedRuleOverride": {
   "properties": {
    "action": {
     "type": "string"
    },
    "ruleId": {
     "type": "string"
    },
    "state": {
     "type": "string"
    }
   },
   "required": [
    "ruleId"
   ]
  },
  "azure-native_network_v20230201:network:ManagedRuleOverrideResponse": {
   "properties": {
    "action": {},
    "ruleId": {},
    "state": {}
   },
   "required": [
    "ruleId"
   ]
  },
  "azure-native_network_v20230201:network:ManagedRuleSet": {
   "properties": {
    "ruleGroupOverrides": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ManagedRuleGroupOverride",
      "type": "object"
     },
     "type": "array"
    },
    "ruleSetType": {
     "type": "string"
    },
    "ruleSetVersion": {
     "type": "string"
    }
   },
   "required": [
    "ruleSetType",
    "ruleSetVersion"
   ]
  },
  "azure-native_network_v20230201:network:ManagedRuleSetResponse": {
   "properties": {
    "ruleGroupOverrides": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ManagedRuleGroupOverrideResponse",
      "type": "object"
     }
    },
    "ruleSetType": {},
    "ruleSetVersion": {}
   },
   "required": [
    "ruleSetType",
    "ruleSetVersion"
   ]
  },
  "azure-native_network_v20230201:network:ManagedRulesDefinition": {
   "properties": {
    "exclusions": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:OwaspCrsExclusionEntry",
      "type": "object"
     },
     "type": "array"
    },
    "managedRuleSets": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ManagedRuleSet",
      "type": "object"
     },
     "type": "array"
    }
   },
   "required": [
    "managedRuleSets"
   ]
  },
  "azure-native_network_v20230201:network:ManagedRulesDefinitionResponse": {
   "properties": {
    "exclusions": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:OwaspCrsExclusionEntryResponse",
      "type": "object"
     }
    },
    "managedRuleSets": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ManagedRuleSetResponse",
      "type": "object"
     }
    }
   },
   "required": [
    "managedRuleSets"
   ]
  },
  "azure-native_network_v20230201:network:ManagedServiceIdentity": {
   "properties": {
    "type": {
     "type": "string"
    },
    "userAssignedIdentities": {
     "isStringSet": true,
     "type": "object"
    }
   }
  },
  "azure-native_network_v20230201:network:ManagedServiceIdentityResponse": {
   "properties": {
    "principalId": {},
    "tenantId": {},
    "type": {},
    "userAssignedIdentities": {
     "additionalProperties": {
      "$ref": "#/types/azure-native_network_v20230201:network:ManagedServiceIdentityResponseUserAssignedIdentities",
      "type": "object"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:ManagedServiceIdentityResponseUserAssignedIdentities": {
   "properties": {
    "clientId": {},
    "principalId": {}
   }
  },
  "azure-native_network_v20230201:network:MatchCondition": {
   "properties": {
    "matchValues": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "matchVariables": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:MatchVariable",
      "type": "object"
     },
     "type": "array"
    },
    "negationConditon": {
     "type": "boolean"
    },
    "operator": {
     "type": "string"
    },
    "transforms": {
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "required": [
    "matchValues",
    "matchVariables",
    "operator"
   ]
  },
  "azure-native_network_v20230201:network:MatchConditionResponse": {
   "properties": {
    "matchValues": {
     "items": {
      "type": "string"
     }
    },
    "matchVariables": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:MatchVariableResponse",
      "type": "object"
     }
    },
    "negationConditon": {},
    "operator": {},
    "transforms": {
     "items": {
      "type": "string"
     }
    }
   },
   "required": [
    "matchValues",
    "matchVariables",
    "operator"
   ]
  },
  "azure-native_network_v20230201:network:MatchVariable": {
   "properties": {
    "selector": {
     "type": "string"
    },
    "variableName": {
     "type": "string"
    }
   },
   "required": [
    "variableName"
   ]
  },
  "azure-native_network_v20230201:network:MatchVariableResponse": {
   "properties": {
    "selector": {},
    "variableName": {}
   },
   "required": [
    "variableName"
   ]
  },
  "azure-native_network_v20230201:network:NatGateway": {
   "properties": {
    "id": {
     "type": "string"
    },
    "idleTimeoutInMinutes": {
     "containers": [
      "properties"
     ],
     "type": "integer"
    },
    "location": {
     "type": "string"
    },
    "publicIpAddresses": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
      "type": "object"
     },
     "type": "array"
    },
    "publicIpPrefixes": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
      "type": "object"
     },
     "type": "array"
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:NatGatewaySku",
     "type": "object"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "type": "object"
    },
    "zones": {
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   }
  },
  "azure-native_network_v20230201:network:NatGatewayResponse": {
   "properties": {
    "etag": {},
    "id": {},
    "idleTimeoutInMinutes": {
     "containers": [
      "properties"
     ]
    },
    "location": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "publicIpAddresses": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "publicIpPrefixes": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:NatGatewaySkuResponse"
    },
    "subnets": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {},
    "zones": {
     "items": {
      "type": "string"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:NatGatewaySku": {
   "properties": {
    "name": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:NatGatewaySkuResponse": {
   "properties": {
    "name": {}
   }
  },
  "azure-native_network_v20230201:network:NatRule": {
   "properties": {
    "description": {
     "type": "string"
    },
    "destinationAddresses": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "destinationPorts": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "ipProtocols": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "name": {
     "type": "string"
    },
    "ruleType": {
     "const": "NatRule",
     "type": "string"
    },
    "sourceAddresses": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "sourceIpGroups": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "translatedAddress": {
     "type": "string"
    },
    "translatedFqdn": {
     "type": "string"
    },
    "translatedPort": {
     "type": "string"
    }
   },
   "required": [
    "ruleType"
   ]
  },
  "azure-native_network_v20230201:network:NatRulePortMappingResponse": {
   "properties": {
    "backendPort": {},
    "frontendPort": {},
    "inboundNatRuleName": {}
   }
  },
  "azure-native_network_v20230201:network:NatRuleResponse": {
   "properties": {
    "description": {},
    "destinationAddresses": {
     "items": {
      "type": "string"
     }
    },
    "destinationPorts": {
     "items": {
      "type": "string"
     }
    },
    "ipProtocols": {
     "items": {
      "type": "string"
     }
    },
    "name": {},
    "ruleType": {
     "const": "NatRule"
    },
    "sourceAddresses": {
     "items": {
      "type": "string"
     }
    },
    "sourceIpGroups": {
     "items": {
      "type": "string"
     }
    },
    "translatedAddress": {},
    "translatedFqdn": {},
    "translatedPort": {}
   },
   "required": [
    "ruleType"
   ]
  },
  "azure-native_network_v20230201:network:NetworkInterfaceDnsSettings": {
   "properties": {
    "dnsServers": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "internalDnsNameLabel": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:NetworkInterfaceDnsSettingsResponse": {
   "properties": {
    "appliedDnsServers": {
     "items": {
      "type": "string"
     }
    },
    "dnsServers": {
     "items": {
      "type": "string"
     }
    },
    "internalDnsNameLabel": {},
    "internalDomainNameSuffix": {},
    "internalFqdn": {}
   }
  },
  "azure-native_network_v20230201:network:NetworkInterfaceIPConfiguration": {
   "properties": {
    "applicationGatewayBackendAddressPools": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayBackendAddressPool",
      "type": "object"
     },
     "type": "array"
    },
    "applicationSecurityGroups": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationSecurityGroup",
      "type": "object"
     },
     "type": "array"
    },
    "gatewayLoadBalancer": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "id": {
     "type": "string"
    },
    "loadBalancerBackendAddressPools": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:BackendAddressPool",
      "type": "object"
     },
     "type": "array"
    },
    "loadBalancerInboundNatRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:InboundNatRule",
      "type": "object"
     },
     "type": "array"
    },
    "name": {
     "type": "string"
    },
    "primary": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "privateIPAddress": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "privateIPAddressVersion": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "privateIPAllocationMethod": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "publicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddress",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:Subnet",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "type": {
     "type": "string"
    },
    "virtualNetworkTaps": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkTap",
      "type": "object"
     },
     "type": "array"
    }
   }
  },
  "azure-native_network_v20230201:network:NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse": {
   "properties": {
    "fqdns": {
     "items": {
      "type": "string"
     }
    },
    "groupId": {},
    "requiredMemberName": {}
   }
  },
  "azure-native_network_v20230201:network:NetworkInterfaceIPConfigurationResponse": {
   "properties": {
    "applicationGatewayBackendAddressPools": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayBackendAddressPoolResponse",
      "type": "object"
     }
    },
    "applicationSecurityGroups": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationSecurityGroupResponse",
      "type": "object"
     }
    },
    "etag": {},
    "gatewayLoadBalancer": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "loadBalancerBackendAddressPools": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:BackendAddressPoolResponse",
      "type": "object"
     }
    },
    "loadBalancerInboundNatRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:InboundNatRuleResponse",
      "type": "object"
     }
    },
    "name": {},
    "primary": {
     "containers": [
      "properties"
     ]
    },
    "privateIPAddress": {
     "containers": [
      "properties"
     ]
    },
    "privateIPAddressVersion": {
     "containers": [
      "properties"
     ]
    },
    "privateIPAllocationMethod": {
     "containers": [
      "properties"
     ]
    },
    "privateLinkConnectionProperties": {
     "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse",
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "publicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddressResponse",
     "containers": [
      "properties"
     ]
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubnetResponse",
     "containers": [
      "properties"
     ]
    },
    "type": {},
    "virtualNetworkTaps": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkTapResponse",
      "type": "object"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:NetworkInterfaceResponse": {
   "properties": {
    "auxiliaryMode": {
     "containers": [
      "properties"
     ]
    },
    "auxiliarySku": {
     "containers": [
      "properties"
     ]
    },
    "disableTcpStateTracking": {
     "containers": [
      "properties"
     ]
    },
    "dnsSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceDnsSettingsResponse",
     "containers": [
      "properties"
     ]
    },
    "dscpConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "enableAcceleratedNetworking": {
     "containers": [
      "properties"
     ]
    },
    "enableIPForwarding": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse"
    },
    "hostedWorkloads": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "id": {},
    "ipConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceIPConfigurationResponse",
      "type": "object"
     }
    },
    "location": {},
    "macAddress": {
     "containers": [
      "properties"
     ]
    },
    "migrationPhase": {
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "networkSecurityGroup": {
     "$ref": "#/types/azure-native_network_v20230201:network:NetworkSecurityGroupResponse",
     "containers": [
      "properties"
     ]
    },
    "nicType": {
     "containers": [
      "properties"
     ]
    },
    "primary": {
     "containers": [
      "properties"
     ]
    },
    "privateEndpoint": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateEndpointResponse",
     "containers": [
      "properties"
     ]
    },
    "privateLinkService": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceResponse",
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "tapConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceTapConfigurationResponse",
      "type": "object"
     }
    },
    "type": {},
    "virtualMachine": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "vnetEncryptionSupported": {
     "containers": [
      "properties"
     ]
    },
    "workloadType": {
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native_network_v20230201:network:NetworkInterfaceTapConfigurationResponse": {
   "properties": {
    "etag": {},
    "id": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {},
    "virtualNetworkTap": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkTapResponse",
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native_network_v20230201:network:NetworkManagerDeploymentStatusResponse": {
   "properties": {
    "commitTime": {},
    "configurationIds": {
     "items": {
      "type": "string"
     }
    },
    "deploymentStatus": {},
    "deploymentType": {},
    "errorMessage": {},
    "region": {}
   }
  },
  "azure-native_network_v20230201:network:NetworkManagerPropertiesNetworkManagerScopes": {
   "properties": {
    "managementGroups": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "subscriptions": {
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   }
  },
  "azure-native_network_v20230201:network:NetworkManagerPropertiesResponseNetworkManagerScopes": {
   "properties": {
    "crossTenantScopes": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:CrossTenantScopesResponse",
      "type": "object"
     }
    },
    "managementGroups": {
     "items": {
      "type": "string"
     }
    },
    "subscriptions": {
     "items": {
      "type": "string"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:NetworkManagerSecurityGroupItem": {
   "properties": {
    "networkGroupId": {
     "type": "string"
    }
   },
   "required": [
    "networkGroupId"
   ]
  },
  "azure-native_network_v20230201:network:NetworkManagerSecurityGroupItemResponse": {
   "properties": {
    "networkGroupId": {}
   },
   "required": [
    "networkGroupId"
   ]
  },
  "azure-native_network_v20230201:network:NetworkRule": {
   "properties": {
    "description": {
     "type": "string"
    },
    "destinationAddresses": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "destinationFqdns": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "destinationIpGroups": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "destinationPorts": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "ipProtocols": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "name": {
     "type": "string"
    },
    "ruleType": {
     "const": "NetworkRule",
     "type": "string"
    },
    "sourceAddresses": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "sourceIpGroups": {
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "required": [
    "ruleType"
   ]
  },
  "azure-native_network_v20230201:network:NetworkRuleResponse": {
   "properties": {
    "description": {},
    "destinationAddresses": {
     "items": {
      "type": "string"
     }
    },
    "destinationFqdns": {
     "items": {
      "type": "string"
     }
    },
    "destinationIpGroups": {
     "items": {
      "type": "string"
     }
    },
    "destinationPorts": {
     "items": {
      "type": "string"
     }
    },
    "ipProtocols": {
     "items": {
      "type": "string"
     }
    },
    "name": {},
    "ruleType": {
     "const": "NetworkRule"
    },
    "sourceAddresses": {
     "items": {
      "type": "string"
     }
    },
    "sourceIpGroups": {
     "items": {
      "type": "string"
     }
    }
   },
   "required": [
    "ruleType"
   ]
  },
  "azure-native_network_v20230201:network:NetworkSecurityGroup": {
   "properties": {
    "flushConnection": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "id": {
     "type": "string"
    },
    "location": {
     "type": "string"
    },
    "securityRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SecurityRule",
      "type": "object"
     },
     "type": "array"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "type": "object"
    }
   }
  },
  "azure-native_network_v20230201:network:NetworkSecurityGroupResponse": {
   "properties": {
    "defaultSecurityRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SecurityRuleResponse",
      "type": "object"
     }
    },
    "etag": {},
    "flowLogs": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:FlowLogResponse",
      "type": "object"
     }
    },
    "flushConnection": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "location": {},
    "name": {},
    "networkInterfaces": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceResponse",
      "type": "object"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "securityRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SecurityRuleResponse",
      "type": "object"
     }
    },
    "subnets": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubnetResponse",
      "type": "object"
     }
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:NetworkVirtualApplianceConnectionProperties": {
   "properties": {
    "asn": {
     "maximum": 4294967295,
     "minimum": 0,
     "type": "number"
    },
    "bgpPeerAddress": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "enableInternetSecurity": {
     "type": "boolean"
    },
    "name": {
     "type": "string"
    },
    "routingConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfigurationNfv",
     "type": "object"
    },
    "tunnelIdentifier": {
     "maximum": 4294967295,
     "minimum": 0,
     "type": "number"
    }
   }
  },
  "azure-native_network_v20230201:network:NetworkVirtualApplianceConnectionPropertiesResponse": {
   "properties": {
    "asn": {},
    "bgpPeerAddress": {
     "items": {
      "type": "string"
     }
    },
    "enableInternetSecurity": {},
    "name": {},
    "provisioningState": {},
    "routingConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfigurationNfvResponse"
    },
    "tunnelIdentifier": {}
   }
  },
  "azure-native_network_v20230201:network:O365BreakOutCategoryPolicies": {
   "properties": {
    "allow": {
     "type": "boolean"
    },
    "default": {
     "type": "boolean"
    },
    "optimize": {
     "type": "boolean"
    }
   }
  },
  "azure-native_network_v20230201:network:O365BreakOutCategoryPoliciesResponse": {
   "properties": {
    "allow": {},
    "default": {},
    "optimize": {}
   }
  },
  "azure-native_network_v20230201:network:O365PolicyProperties": {
   "properties": {
    "breakOutCategories": {
     "$ref": "#/types/azure-native_network_v20230201:network:O365BreakOutCategoryPolicies",
     "type": "object"
    }
   }
  },
  "azure-native_network_v20230201:network:O365PolicyPropertiesResponse": {
   "properties": {
    "breakOutCategories": {
     "$ref": "#/types/azure-native_network_v20230201:network:O365BreakOutCategoryPoliciesResponse"
    }
   }
  },
  "azure-native_network_v20230201:network:Office365PolicyProperties": {
   "properties": {
    "breakOutCategories": {
     "$ref": "#/types/azure-native_network_v20230201:network:BreakOutCategoryPolicies",
     "type": "object"
    }
   }
  },
  "azure-native_network_v20230201:network:Office365PolicyPropertiesResponse": {
   "properties": {
    "breakOutCategories": {
     "$ref": "#/types/azure-native_network_v20230201:network:BreakOutCategoryPoliciesResponse"
    }
   }
  },
  "azure-native_network_v20230201:network:OrderBy": {
   "properties": {
    "field": {
     "type": "string"
    },
    "order": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:OutboundRule": {
   "properties": {
    "allocatedOutboundPorts": {
     "containers": [
      "properties"
     ],
     "type": "integer"
    },
    "backendAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "enableTcpReset": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "frontendIPConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
      "type": "object"
     },
     "type": "array"
    },
    "id": {
     "type": "string"
    },
    "idleTimeoutInMinutes": {
     "containers": [
      "properties"
     ],
     "type": "integer"
    },
    "name": {
     "type": "string"
    },
    "protocol": {
     "containers": [
      "properties"
     ],
     "type": "string"
    }
   },
   "required": [
    "backendAddressPool",
    "frontendIPConfigurations",
    "protocol"
   ]
  },
  "azure-native_network_v20230201:network:OutboundRuleResponse": {
   "properties": {
    "allocatedOutboundPorts": {
     "containers": [
      "properties"
     ]
    },
    "backendAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "enableTcpReset": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "frontendIPConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "id": {},
    "idleTimeoutInMinutes": {
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "protocol": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   },
   "required": [
    "backendAddressPool",
    "frontendIPConfigurations",
    "protocol"
   ]
  },
  "azure-native_network_v20230201:network:OwaspCrsExclusionEntry": {
   "properties": {
    "exclusionManagedRuleSets": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExclusionManagedRuleSet",
      "type": "object"
     },
     "type": "array"
    },
    "matchVariable": {
     "type": "string"
    },
    "selector": {
     "type": "string"
    },
    "selectorMatchOperator": {
     "type": "string"
    }
   },
   "required": [
    "matchVariable",
    "selector",
    "selectorMatchOperator"
   ]
  },
  "azure-native_network_v20230201:network:OwaspCrsExclusionEntryResponse": {
   "properties": {
    "exclusionManagedRuleSets": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ExclusionManagedRuleSetResponse",
      "type": "object"
     }
    },
    "matchVariable": {},
    "selector": {},
    "selectorMatchOperator": {}
   },
   "required": [
    "matchVariable",
    "selector",
    "selectorMatchOperator"
   ]
  },
  "azure-native_network_v20230201:network:P2SConnectionConfiguration": {
   "properties": {
    "enableInternetSecurity": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "id": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "routingConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfiguration",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "vpnClientAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpace",
     "containers": [
      "properties"
     ],
     "type": "object"
    }
   }
  },
  "azure-native_network_v20230201:network:P2SConnectionConfigurationResponse": {
   "properties": {
    "configurationPolicyGroupAssociations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "enableInternetSecurity": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "name": {},
    "previousConfigurationPolicyGroupAssociations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnServerConfigurationPolicyGroupResponse",
      "type": "object"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "routingConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfigurationResponse",
     "containers": [
      "properties"
     ]
    },
    "vpnClientAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpaceResponse",
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native_network_v20230201:network:P2SVpnGatewayResponse": {
   "properties": {
    "customDnsServers": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "etag": {},
    "id": {},
    "isRoutingPreferenceInternet": {
     "containers": [
      "properties"
     ]
    },
    "location": {},
    "name": {},
    "p2SConnectionConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:P2SConnectionConfigurationResponse",
      "type": "object"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {},
    "virtualHub": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "vpnClientConnectionHealth": {
     "$ref": "#/types/azure-native_network_v20230201:network:VpnClientConnectionHealthResponse",
     "containers": [
      "properties"
     ]
    },
    "vpnGatewayScaleUnit": {
     "containers": [
      "properties"
     ]
    },
    "vpnServerConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    }
   },
   "required": [
    "location"
   ]
  },
  "azure-native_network_v20230201:network:PacketCaptureFilter": {
   "properties": {
    "localIPAddress": {
     "type": "string"
    },
    "localPort": {
     "type": "string"
    },
    "protocol": {
     "default": "Any",
     "type": "string"
    },
    "remoteIPAddress": {
     "type": "string"
    },
    "remotePort": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:PacketCaptureFilterResponse": {
   "properties": {
    "localIPAddress": {},
    "localPort": {},
    "protocol": {
     "default": "Any"
    },
    "remoteIPAddress": {},
    "remotePort": {}
   }
  },
  "azure-native_network_v20230201:network:PacketCaptureMachineScope": {
   "properties": {
    "exclude": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "include": {
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   }
  },
  "azure-native_network_v20230201:network:PacketCaptureMachineScopeResponse": {
   "properties": {
    "exclude": {
     "items": {
      "type": "string"
     }
    },
    "include": {
     "items": {
      "type": "string"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:PacketCaptureStorageLocation": {
   "properties": {
    "filePath": {
     "type": "string"
    },
    "storageId": {
     "type": "string"
    },
    "storagePath": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:PacketCaptureStorageLocationResponse": {
   "properties": {
    "filePath": {},
    "storageId": {},
    "storagePath": {}
   }
  },
  "azure-native_network_v20230201:network:Parameter": {
   "properties": {
    "asPath": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "community": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "routePrefix": {
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   }
  },
  "azure-native_network_v20230201:network:ParameterResponse": {
   "properties": {
    "asPath": {
     "items": {
      "type": "string"
     }
    },
    "community": {
     "items": {
      "type": "string"
     }
    },
    "routePrefix": {
     "items": {
      "type": "string"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:PartnerManagedResourcePropertiesResponse": {
   "properties": {
    "id": {},
    "internalLoadBalancerId": {},
    "standardLoadBalancerId": {}
   }
  },
  "azure-native_network_v20230201:network:PeerExpressRouteCircuitConnectionResponse": {
   "properties": {
    "addressPrefix": {
     "containers": [
      "properties"
     ]
    },
    "authResourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "circuitConnectionStatus": {
     "containers": [
      "properties"
     ]
    },
    "connectionName": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "expressRouteCircuitPeering": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "name": {},
    "peerExpressRouteCircuitPeering": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:PolicySettings": {
   "properties": {
    "customBlockResponseBody": {
     "maxLength": 32768,
     "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$",
     "type": "string"
    },
    "customBlockResponseStatusCode": {
     "minimum": 0,
     "type": "integer"
    },
    "fileUploadEnforcement": {
     "default": true,
     "type": "boolean"
    },
    "fileUploadLimitInMb": {
     "minimum": 0,
     "type": "integer"
    },
    "logScrubbing": {
     "$ref": "#/types/azure-native_network_v20230201:network:PolicySettingsLogScrubbing",
     "type": "object"
    },
    "maxRequestBodySizeInKb": {
     "minimum": 8,
     "type": "integer"
    },
    "mode": {
     "type": "string"
    },
    "requestBodyCheck": {
     "type": "boolean"
    },
    "requestBodyEnforcement": {
     "default": true,
     "type": "boolean"
    },
    "requestBodyInspectLimitInKB": {
     "type": "integer"
    },
    "state": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:PolicySettingsLogScrubbing": {
   "properties": {
    "scrubbingRules": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:WebApplicationFirewallScrubbingRules",
      "type": "object"
     },
     "type": "array"
    },
    "state": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:PolicySettingsResponse": {
   "properties": {
    "customBlockResponseBody": {},
    "customBlockResponseStatusCode": {},
    "fileUploadEnforcement": {
     "default": true
    },
    "fileUploadLimitInMb": {},
    "logScrubbing": {
     "$ref": "#/types/azure-native_network_v20230201:network:PolicySettingsResponseLogScrubbing"
    },
    "maxRequestBodySizeInKb": {},
    "mode": {},
    "requestBodyCheck": {},
    "requestBodyEnforcement": {
     "default": true
    },
    "requestBodyInspectLimitInKB": {},
    "state": {}
   }
  },
  "azure-native_network_v20230201:network:PolicySettingsResponseLogScrubbing": {
   "properties": {
    "scrubbingRules": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:WebApplicationFirewallScrubbingRulesResponse",
      "type": "object"
     }
    },
    "state": {}
   }
  },
  "azure-native_network_v20230201:network:PrivateDnsZoneConfig": {
   "properties": {
    "name": {
     "type": "string"
    },
    "privateDnsZoneId": {
     "containers": [
      "properties"
     ],
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:PrivateDnsZoneConfigResponse": {
   "properties": {
    "name": {},
    "privateDnsZoneId": {
     "containers": [
      "properties"
     ]
    },
    "recordSets": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:RecordSetResponse",
      "type": "object"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:PrivateEndpointConnectionResponse": {
   "properties": {
    "etag": {},
    "id": {},
    "linkIdentifier": {
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "privateEndpoint": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateEndpointResponse",
     "containers": [
      "properties"
     ]
    },
    "privateEndpointLocation": {
     "containers": [
      "properties"
     ]
    },
    "privateLinkServiceConnectionState": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceConnectionStateResponse",
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:PrivateEndpointIPConfiguration": {
   "properties": {
    "groupId": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "memberName": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "privateIPAddress": {
     "containers": [
      "properties"
     ],
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:PrivateEndpointIPConfigurationResponse": {
   "properties": {
    "etag": {},
    "groupId": {
     "containers": [
      "properties"
     ]
    },
    "memberName": {
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "privateIPAddress": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:PrivateEndpointResponse": {
   "properties": {
    "applicationSecurityGroups": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationSecurityGroupResponse",
      "type": "object"
     }
    },
    "customDnsConfigs": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:CustomDnsConfigPropertiesFormatResponse",
      "type": "object"
     }
    },
    "customNetworkInterfaceName": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse"
    },
    "id": {},
    "ipConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateEndpointIPConfigurationResponse",
      "type": "object"
     }
    },
    "location": {},
    "manualPrivateLinkServiceConnections": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceConnectionResponse",
      "type": "object"
     }
    },
    "name": {},
    "networkInterfaces": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceResponse",
      "type": "object"
     }
    },
    "privateLinkServiceConnections": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceConnectionResponse",
      "type": "object"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubnetResponse",
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:PrivateLinkService": {
   "properties": {
    "autoApproval": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServicePropertiesAutoApproval",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "enableProxyProtocol": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocation",
     "type": "object"
    },
    "fqdns": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "id": {
     "type": "string"
    },
    "ipConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceIpConfiguration",
      "type": "object"
     },
     "type": "array"
    },
    "loadBalancerFrontendIpConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:FrontendIPConfiguration",
      "type": "object"
     },
     "type": "array"
    },
    "location": {
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "type": "object"
    },
    "visibility": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServicePropertiesVisibility",
     "containers": [
      "properties"
     ],
     "type": "object"
    }
   }
  },
  "azure-native_network_v20230201:network:PrivateLinkServiceConnection": {
   "properties": {
    "groupIds": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "id": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "privateLinkServiceConnectionState": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceConnectionState",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "privateLinkServiceId": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "requestMessage": {
     "containers": [
      "properties"
     ],
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:PrivateLinkServiceConnectionResponse": {
   "properties": {
    "etag": {},
    "groupIds": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "id": {},
    "name": {},
    "privateLinkServiceConnectionState": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceConnectionStateResponse",
     "containers": [
      "properties"
     ]
    },
    "privateLinkServiceId": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "requestMessage": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:PrivateLinkServiceConnectionState": {
   "properties": {
    "actionsRequired": {
     "type": "string"
    },
    "description": {
     "type": "string"
    },
    "status": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:PrivateLinkServiceConnectionStateResponse": {
   "properties": {
    "actionsRequired": {},
    "description": {},
    "status": {}
   }
  },
  "azure-native_network_v20230201:network:PrivateLinkServiceIpConfiguration": {
   "properties": {
    "id": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "primary": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "privateIPAddress": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "privateIPAddressVersion": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "privateIPAllocationMethod": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:Subnet",
     "containers": [
      "properties"
     ],
     "type": "object"
    }
   }
  },
  "azure-native_network_v20230201:network:PrivateLinkServiceIpConfigurationResponse": {
   "properties": {
    "etag": {},
    "id": {},
    "name": {},
    "primary": {
     "containers": [
      "properties"
     ]
    },
    "privateIPAddress": {
     "containers": [
      "properties"
     ]
    },
    "privateIPAddressVersion": {
     "containers": [
      "properties"
     ]
    },
    "privateIPAllocationMethod": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubnetResponse",
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:PrivateLinkServicePropertiesAutoApproval": {
   "properties": {
    "subscriptions": {
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   }
  },
  "azure-native_network_v20230201:network:PrivateLinkServicePropertiesResponseAutoApproval": {
   "properties": {
    "subscriptions": {
     "items": {
      "type": "string"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:PrivateLinkServicePropertiesResponseVisibility": {
   "properties": {
    "subscriptions": {
     "items": {
      "type": "string"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:PrivateLinkServicePropertiesVisibility": {
   "properties": {
    "subscriptions": {
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   }
  },
  "azure-native_network_v20230201:network:PrivateLinkServiceResponse": {
   "properties": {
    "alias": {
     "containers": [
      "properties"
     ]
    },
    "autoApproval": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServicePropertiesResponseAutoApproval",
     "containers": [
      "properties"
     ]
    },
    "enableProxyProtocol": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse"
    },
    "fqdns": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "id": {},
    "ipConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServiceIpConfigurationResponse",
      "type": "object"
     }
    },
    "loadBalancerFrontendIpConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:FrontendIPConfigurationResponse",
      "type": "object"
     }
    },
    "location": {},
    "name": {},
    "networkInterfaces": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceResponse",
      "type": "object"
     }
    },
    "privateEndpointConnections": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateEndpointConnectionResponse",
      "type": "object"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {},
    "visibility": {
     "$ref": "#/types/azure-native_network_v20230201:network:PrivateLinkServicePropertiesResponseVisibility",
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native_network_v20230201:network:Probe": {
   "properties": {
    "id": {
     "type": "string"
    },
    "intervalInSeconds": {
     "containers": [
      "properties"
     ],
     "type": "integer"
    },
    "name": {
     "type": "string"
    },
    "numberOfProbes": {
     "containers": [
      "properties"
     ],
     "type": "integer"
    },
    "port": {
     "containers": [
      "properties"
     ],
     "type": "integer"
    },
    "probeThreshold": {
     "containers": [
      "properties"
     ],
     "type": "integer"
    },
    "protocol": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "requestPath": {
     "containers": [
      "properties"
     ],
     "type": "string"
    }
   },
   "required": [
    "port",
    "protocol"
   ]
  },
  "azure-native_network_v20230201:network:ProbeResponse": {
   "properties": {
    "etag": {},
    "id": {},
    "intervalInSeconds": {
     "containers": [
      "properties"
     ]
    },
    "loadBalancingRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "name": {},
    "numberOfProbes": {
     "containers": [
      "properties"
     ]
    },
    "port": {
     "containers": [
      "properties"
     ]
    },
    "probeThreshold": {
     "containers": [
      "properties"
     ]
    },
    "protocol": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "requestPath": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   },
   "required": [
    "port",
    "protocol"
   ]
  },
  "azure-native_network_v20230201:network:PropagatedRouteTable": {
   "properties": {
    "ids": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
      "type": "object"
     },
     "type": "array"
    },
    "labels": {
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   }
  },
  "azure-native_network_v20230201:network:PropagatedRouteTableNfv": {
   "properties": {
    "ids": {
     "arrayIdentifiers": [
      "resourceUri"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfigurationNfvSubResource",
      "type": "object"
     },
     "type": "array"
    },
    "labels": {
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   }
  },
  "azure-native_network_v20230201:network:PropagatedRouteTableNfvResponse": {
   "properties": {
    "ids": {
     "arrayIdentifiers": [
      "resourceUri"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfigurationNfvSubResourceResponse",
      "type": "object"
     }
    },
    "labels": {
     "items": {
      "type": "string"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:PropagatedRouteTableResponse": {
   "properties": {
    "ids": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "labels": {
     "items": {
      "type": "string"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:PublicIPAddress": {
   "properties": {
    "ddosSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:DdosSettings",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "deleteOption": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "dnsSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddressDnsSettings",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocation",
     "type": "object"
    },
    "id": {
     "type": "string"
    },
    "idleTimeoutInMinutes": {
     "containers": [
      "properties"
     ],
     "type": "integer"
    },
    "ipAddress": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "ipTags": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IpTag",
      "type": "object"
     },
     "type": "array"
    },
    "linkedPublicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddress",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "location": {
     "type": "string"
    },
    "migrationPhase": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "natGateway": {
     "$ref": "#/types/azure-native_network_v20230201:network:NatGateway",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "publicIPAddressVersion": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "publicIPAllocationMethod": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "publicIPPrefix": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "servicePublicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddress",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddressSku",
     "type": "object"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "type": "object"
    },
    "zones": {
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   }
  },
  "azure-native_network_v20230201:network:PublicIPAddressDnsSettings": {
   "properties": {
    "domainNameLabel": {
     "type": "string"
    },
    "domainNameLabelScope": {
     "type": "string"
    },
    "fqdn": {
     "type": "string"
    },
    "reverseFqdn": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:PublicIPAddressDnsSettingsResponse": {
   "properties": {
    "domainNameLabel": {},
    "domainNameLabelScope": {},
    "fqdn": {},
    "reverseFqdn": {}
   }
  },
  "azure-native_network_v20230201:network:PublicIPAddressResponse": {
   "properties": {
    "ddosSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:DdosSettingsResponse",
     "containers": [
      "properties"
     ]
    },
    "deleteOption": {
     "containers": [
      "properties"
     ]
    },
    "dnsSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddressDnsSettingsResponse",
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse"
    },
    "id": {},
    "idleTimeoutInMinutes": {
     "containers": [
      "properties"
     ]
    },
    "ipAddress": {
     "containers": [
      "properties"
     ]
    },
    "ipConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:IPConfigurationResponse",
     "containers": [
      "properties"
     ]
    },
    "ipTags": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IpTagResponse",
      "type": "object"
     }
    },
    "linkedPublicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddressResponse",
     "containers": [
      "properties"
     ]
    },
    "location": {},
    "migrationPhase": {
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "natGateway": {
     "$ref": "#/types/azure-native_network_v20230201:network:NatGatewayResponse",
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "publicIPAddressVersion": {
     "containers": [
      "properties"
     ]
    },
    "publicIPAllocationMethod": {
     "containers": [
      "properties"
     ]
    },
    "publicIPPrefix": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "servicePublicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddressResponse",
     "containers": [
      "properties"
     ]
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:PublicIPAddressSkuResponse"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {},
    "zones": {
     "items": {
      "type": "string"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:PublicIPAddressSku": {
   "properties": {
    "name": {
     "type": "string"
    },
    "tier": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:PublicIPAddressSkuResponse": {
   "properties": {
    "name": {},
    "tier": {}
   }
  },
  "azure-native_network_v20230201:network:PublicIPPrefixSku": {
   "properties": {
    "name": {
     "type": "string"
    },
    "tier": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:PublicIPPrefixSkuResponse": {
   "properties": {
    "name": {},
    "tier": {}
   }
  },
  "azure-native_network_v20230201:network:QosDefinition": {
   "properties": {
    "destinationIpRanges": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:QosIpRange",
      "type": "object"
     },
     "type": "array"
    },
    "destinationPortRanges": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:QosPortRange",
      "type": "object"
     },
     "type": "array"
    },
    "markings": {
     "items": {
      "type": "integer"
     },
     "type": "array"
    },
    "protocol": {
     "type": "string"
    },
    "sourceIpRanges": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:QosIpRange",
      "type": "object"
     },
     "type": "array"
    },
    "sourcePortRanges": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:QosPortRange",
      "type": "object"
     },
     "type": "array"
    }
   }
  },
  "azure-native_network_v20230201:network:QosDefinitionResponse": {
   "properties": {
    "destinationIpRanges": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:QosIpRangeResponse",
      "type": "object"
     }
    },
    "destinationPortRanges": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:QosPortRangeResponse",
      "type": "object"
     }
    },
    "markings": {
     "items": {
      "type": "integer"
     }
    },
    "protocol": {},
    "sourceIpRanges": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:QosIpRangeResponse",
      "type": "object"
     }
    },
    "sourcePortRanges": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:QosPortRangeResponse",
      "type": "object"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:QosIpRange": {
   "properties": {
    "endIP": {
     "type": "string"
    },
    "startIP": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:QosIpRangeResponse": {
   "properties": {
    "endIP": {},
    "startIP": {}
   }
  },
  "azure-native_network_v20230201:network:QosPortRange": {
   "properties": {
    "end": {
     "type": "integer"
    },
    "start": {
     "type": "integer"
    }
   }
  },
  "azure-native_network_v20230201:network:QosPortRangeResponse": {
   "properties": {
    "end": {},
    "start": {}
   }
  },
  "azure-native_network_v20230201:network:RadiusServer": {
   "properties": {
    "radiusServerAddress": {
     "type": "string"
    },
    "radiusServerScore": {
     "type": "number"
    },
    "radiusServerSecret": {
     "type": "string"
    }
   },
   "required": [
    "radiusServerAddress"
   ]
  },
  "azure-native_network_v20230201:network:RadiusServerResponse": {
   "properties": {
    "radiusServerAddress": {},
    "radiusServerScore": {},
    "radiusServerSecret": {}
   },
   "required": [
    "radiusServerAddress"
   ]
  },
  "azure-native_network_v20230201:network:RecordSetResponse": {
   "properties": {
    "fqdn": {},
    "ipAddresses": {
     "items": {
      "type": "string"
     }
    },
    "provisioningState": {},
    "recordSetName": {},
    "recordType": {},
    "ttl": {}
   }
  },
  "azure-native_network_v20230201:network:ReferencedPublicIpAddressResponse": {
   "properties": {
    "id": {}
   }
  },
  "azure-native_network_v20230201:network:ResourceNavigationLinkResponse": {
   "properties": {
    "etag": {},
    "id": {},
    "link": {
     "containers": [
      "properties"
     ]
    },
    "linkedResourceType": {
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:RetentionPolicyParameters": {
   "properties": {
    "days": {
     "default": 0,
     "type": "integer"
    },
    "enabled": {
     "default": false,
     "type": "boolean"
    }
   }
  },
  "azure-native_network_v20230201:network:RetentionPolicyParametersResponse": {
   "properties": {
    "days": {
     "default": 0
    },
    "enabled": {
     "default": false
    }
   }
  },
  "azure-native_network_v20230201:network:Route": {
   "properties": {
    "addressPrefix": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "hasBgpOverride": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "id": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "nextHopIpAddress": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "nextHopType": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "type": {
     "type": "string"
    }
   },
   "required": [
    "nextHopType"
   ]
  },
  "azure-native_network_v20230201:network:RouteFilterRule": {
   "properties": {
    "access": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "communities": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "id": {
     "type": "string"
    },
    "location": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "routeFilterRuleType": {
     "containers": [
      "properties"
     ],
     "type": "string"
    }
   },
   "required": [
    "access",
    "communities",
    "routeFilterRuleType"
   ]
  },
  "azure-native_network_v20230201:network:RouteFilterRuleResponse": {
   "properties": {
    "access": {
     "containers": [
      "properties"
     ]
    },
    "communities": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "etag": {},
    "id": {},
    "location": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "routeFilterRuleType": {
     "containers": [
      "properties"
     ]
    }
   },
   "required": [
    "access",
    "communities",
    "routeFilterRuleType"
   ]
  },
  "azure-native_network_v20230201:network:RouteMapRule": {
   "properties": {
    "actions": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:Action",
      "type": "object"
     },
     "type": "array"
    },
    "matchCriteria": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:Criterion",
      "type": "object"
     },
     "type": "array"
    },
    "name": {
     "type": "string"
    },
    "nextStepIfMatched": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:RouteMapRuleResponse": {
   "properties": {
    "actions": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ActionResponse",
      "type": "object"
     }
    },
    "matchCriteria": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:CriterionResponse",
      "type": "object"
     }
    },
    "name": {},
    "nextStepIfMatched": {}
   }
  },
  "azure-native_network_v20230201:network:RouteResponse": {
   "properties": {
    "addressPrefix": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "hasBgpOverride": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "name": {},
    "nextHopIpAddress": {
     "containers": [
      "properties"
     ]
    },
    "nextHopType": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   },
   "required": [
    "nextHopType"
   ]
  },
  "azure-native_network_v20230201:network:RouteTable": {
   "properties": {
    "disableBgpRoutePropagation": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "id": {
     "type": "string"
    },
    "location": {
     "type": "string"
    },
    "routes": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:Route",
      "type": "object"
     },
     "type": "array"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "type": "object"
    }
   }
  },
  "azure-native_network_v20230201:network:RouteTableResponse": {
   "properties": {
    "disableBgpRoutePropagation": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "location": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "routes": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:RouteResponse",
      "type": "object"
     }
    },
    "subnets": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubnetResponse",
      "type": "object"
     }
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:RoutingConfiguration": {
   "properties": {
    "associatedRouteTable": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "type": "object"
    },
    "inboundRouteMap": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "type": "object"
    },
    "outboundRouteMap": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "type": "object"
    },
    "propagatedRouteTables": {
     "$ref": "#/types/azure-native_network_v20230201:network:PropagatedRouteTable",
     "type": "object"
    },
    "vnetRoutes": {
     "$ref": "#/types/azure-native_network_v20230201:network:VnetRoute",
     "type": "object"
    }
   }
  },
  "azure-native_network_v20230201:network:RoutingConfigurationNfv": {
   "properties": {
    "associatedRouteTable": {
     "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfigurationNfvSubResource",
     "type": "object"
    },
    "inboundRouteMap": {
     "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfigurationNfvSubResource",
     "type": "object"
    },
    "outboundRouteMap": {
     "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfigurationNfvSubResource",
     "type": "object"
    },
    "propagatedRouteTables": {
     "$ref": "#/types/azure-native_network_v20230201:network:PropagatedRouteTableNfv",
     "type": "object"
    }
   }
  },
  "azure-native_network_v20230201:network:RoutingConfigurationNfvResponse": {
   "properties": {
    "associatedRouteTable": {
     "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfigurationNfvSubResourceResponse"
    },
    "inboundRouteMap": {
     "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfigurationNfvSubResourceResponse"
    },
    "outboundRouteMap": {
     "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfigurationNfvSubResourceResponse"
    },
    "propagatedRouteTables": {
     "$ref": "#/types/azure-native_network_v20230201:network:PropagatedRouteTableNfvResponse"
    }
   }
  },
  "azure-native_network_v20230201:network:RoutingConfigurationNfvSubResource": {
   "properties": {
    "resourceUri": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:RoutingConfigurationNfvSubResourceResponse": {
   "properties": {
    "resourceUri": {}
   }
  },
  "azure-native_network_v20230201:network:RoutingConfigurationResponse": {
   "properties": {
    "associatedRouteTable": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse"
    },
    "inboundRouteMap": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse"
    },
    "outboundRouteMap": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse"
    },
    "propagatedRouteTables": {
     "$ref": "#/types/azure-native_network_v20230201:network:PropagatedRouteTableResponse"
    },
    "vnetRoutes": {
     "$ref": "#/types/azure-native_network_v20230201:network:VnetRouteResponse"
    }
   }
  },
  "azure-native_network_v20230201:network:RoutingPolicy": {
   "properties": {
    "destinations": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "name": {
     "type": "string"
    },
    "nextHop": {
     "type": "string"
    }
   },
   "required": [
    "destinations",
    "name",
    "nextHop"
   ]
  },
  "azure-native_network_v20230201:network:RoutingPolicyResponse": {
   "properties": {
    "destinations": {
     "items": {
      "type": "string"
     }
    },
    "name": {},
    "nextHop": {}
   },
   "required": [
    "destinations",
    "name",
    "nextHop"
   ]
  },
  "azure-native_network_v20230201:network:SecurityRule": {
   "properties": {
    "access": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "description": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "destinationAddressPrefix": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "destinationAddressPrefixes": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "destinationApplicationSecurityGroups": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationSecurityGroup",
      "type": "object"
     },
     "type": "array"
    },
    "destinationPortRange": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "destinationPortRanges": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "direction": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "id": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "priority": {
     "containers": [
      "properties"
     ],
     "type": "integer"
    },
    "protocol": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "sourceAddressPrefix": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "sourceAddressPrefixes": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "sourceApplicationSecurityGroups": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationSecurityGroup",
      "type": "object"
     },
     "type": "array"
    },
    "sourcePortRange": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "sourcePortRanges": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "type": {
     "type": "string"
    }
   },
   "required": [
    "access",
    "direction",
    "priority",
    "protocol"
   ]
  },
  "azure-native_network_v20230201:network:SecurityRuleResponse": {
   "properties": {
    "access": {
     "containers": [
      "properties"
     ]
    },
    "description": {
     "containers": [
      "properties"
     ]
    },
    "destinationAddressPrefix": {
     "containers": [
      "properties"
     ]
    },
    "destinationAddressPrefixes": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "destinationApplicationSecurityGroups": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationSecurityGroupResponse",
      "type": "object"
     }
    },
    "destinationPortRange": {
     "containers": [
      "properties"
     ]
    },
    "destinationPortRanges": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "direction": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "name": {},
    "priority": {
     "containers": [
      "properties"
     ]
    },
    "protocol": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "sourceAddressPrefix": {
     "containers": [
      "properties"
     ]
    },
    "sourceAddressPrefixes": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "sourceApplicationSecurityGroups": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationSecurityGroupResponse",
      "type": "object"
     }
    },
    "sourcePortRange": {
     "containers": [
      "properties"
     ]
    },
    "sourcePortRanges": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "type": {}
   },
   "required": [
    "access",
    "direction",
    "priority",
    "protocol"
   ]
  },
  "azure-native_network_v20230201:network:ServiceAssociationLinkResponse": {
   "properties": {
    "allowDelete": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "link": {
     "containers": [
      "properties"
     ]
    },
    "linkedResourceType": {
     "containers": [
      "properties"
     ]
    },
    "locations": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:ServiceEndpointPolicy": {
   "properties": {
    "contextualServiceEndpointPolicies": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "id": {
     "type": "string"
    },
    "location": {
     "type": "string"
    },
    "serviceAlias": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "serviceEndpointPolicyDefinitions": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ServiceEndpointPolicyDefinition",
      "type": "object"
     },
     "type": "array"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "type": "object"
    }
   }
  },
  "azure-native_network_v20230201:network:ServiceEndpointPolicyDefinition": {
   "properties": {
    "description": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "id": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "service": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "serviceResources": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "type": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:ServiceEndpointPolicyDefinitionResponse": {
   "properties": {
    "description": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "service": {
     "containers": [
      "properties"
     ]
    },
    "serviceResources": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:ServiceEndpointPolicyResponse": {
   "properties": {
    "contextualServiceEndpointPolicies": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "etag": {},
    "id": {},
    "kind": {},
    "location": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "serviceAlias": {
     "containers": [
      "properties"
     ]
    },
    "serviceEndpointPolicyDefinitions": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ServiceEndpointPolicyDefinitionResponse",
      "type": "object"
     }
    },
    "subnets": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubnetResponse",
      "type": "object"
     }
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:ServiceEndpointPropertiesFormat": {
   "properties": {
    "locations": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "service": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:ServiceEndpointPropertiesFormatResponse": {
   "properties": {
    "locations": {
     "items": {
      "type": "string"
     }
    },
    "provisioningState": {},
    "service": {}
   }
  },
  "azure-native_network_v20230201:network:SingleQueryResultResponse": {
   "properties": {
    "description": {},
    "destinationPorts": {
     "items": {
      "type": "string"
     }
    },
    "direction": {},
    "group": {},
    "inheritedFromParentPolicy": {},
    "lastUpdated": {},
    "mode": {},
    "protocol": {},
    "severity": {},
    "signatureId": {},
    "sourcePorts": {
     "items": {
      "type": "string"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:Sku": {
   "properties": {
    "name": {
     "default": "Standard",
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:SkuResponse": {
   "properties": {
    "name": {
     "default": "Standard"
    }
   }
  },
  "azure-native_network_v20230201:network:StaticRoute": {
   "properties": {
    "addressPrefixes": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "name": {
     "type": "string"
    },
    "nextHopIpAddress": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:StaticRouteResponse": {
   "properties": {
    "addressPrefixes": {
     "items": {
      "type": "string"
     }
    },
    "name": {},
    "nextHopIpAddress": {}
   }
  },
  "azure-native_network_v20230201:network:StaticRoutesConfig": {
   "properties": {
    "vnetLocalRouteOverrideCriteria": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:StaticRoutesConfigResponse": {
   "properties": {
    "propagateStaticRoutes": {},
    "vnetLocalRouteOverrideCriteria": {}
   }
  },
  "azure-native_network_v20230201:network:SubResource": {
   "properties": {
    "id": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:SubResourceResponse": {
   "properties": {
    "id": {}
   }
  },
  "azure-native_network_v20230201:network:Subnet": {
   "properties": {
    "addressPrefix": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "addressPrefixes": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "applicationGatewayIPConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayIPConfiguration",
      "type": "object"
     },
     "type": "array"
    },
    "delegations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:Delegation",
      "type": "object"
     },
     "type": "array"
    },
    "id": {
     "type": "string"
    },
    "ipAllocations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
      "type": "object"
     },
     "type": "array"
    },
    "name": {
     "type": "string"
    },
    "natGateway": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "networkSecurityGroup": {
     "$ref": "#/types/azure-native_network_v20230201:network:NetworkSecurityGroup",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "privateEndpointNetworkPolicies": {
     "containers": [
      "properties"
     ],
     "default": "Disabled",
     "type": "string"
    },
    "privateLinkServiceNetworkPolicies": {
     "containers": [
      "properties"
     ],
     "default": "Enabled",
     "type": "string"
    },
    "routeTable": {
     "$ref": "#/types/azure-native_network_v20230201:network:RouteTable",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "serviceEndpointPolicies": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ServiceEndpointPolicy",
      "type": "object"
     },
     "type": "array"
    },
    "serviceEndpoints": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ServiceEndpointPropertiesFormat",
      "type": "object"
     },
     "type": "array"
    },
    "type": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:SubnetResponse": {
   "properties": {
    "addressPrefix": {
     "containers": [
      "properties"
     ]
    },
    "addressPrefixes": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "applicationGatewayIPConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ApplicationGatewayIPConfigurationResponse",
      "type": "object"
     }
    },
    "delegations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:DelegationResponse",
      "type": "object"
     }
    },
    "etag": {},
    "id": {},
    "ipAllocations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "ipConfigurationProfiles": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IPConfigurationProfileResponse",
      "type": "object"
     }
    },
    "ipConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IPConfigurationResponse",
      "type": "object"
     }
    },
    "name": {},
    "natGateway": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "networkSecurityGroup": {
     "$ref": "#/types/azure-native_network_v20230201:network:NetworkSecurityGroupResponse",
     "containers": [
      "properties"
     ]
    },
    "privateEndpointNetworkPolicies": {
     "containers": [
      "properties"
     ],
     "default": "Disabled"
    },
    "privateEndpoints": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:PrivateEndpointResponse",
      "type": "object"
     }
    },
    "privateLinkServiceNetworkPolicies": {
     "containers": [
      "properties"
     ],
     "default": "Enabled"
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "purpose": {
     "containers": [
      "properties"
     ]
    },
    "resourceNavigationLinks": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ResourceNavigationLinkResponse",
      "type": "object"
     }
    },
    "routeTable": {
     "$ref": "#/types/azure-native_network_v20230201:network:RouteTableResponse",
     "containers": [
      "properties"
     ]
    },
    "serviceAssociationLinks": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ServiceAssociationLinkResponse",
      "type": "object"
     }
    },
    "serviceEndpointPolicies": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ServiceEndpointPolicyResponse",
      "type": "object"
     }
    },
    "serviceEndpoints": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:ServiceEndpointPropertiesFormatResponse",
      "type": "object"
     }
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:SystemDataResponse": {
   "properties": {
    "createdAt": {},
    "createdBy": {},
    "createdByType": {},
    "lastModifiedAt": {},
    "lastModifiedBy": {},
    "lastModifiedByType": {}
   }
  },
  "azure-native_network_v20230201:network:TrafficAnalyticsConfigurationProperties": {
   "properties": {
    "enabled": {
     "type": "boolean"
    },
    "trafficAnalyticsInterval": {
     "type": "integer"
    },
    "workspaceId": {
     "type": "string"
    },
    "workspaceRegion": {
     "type": "string"
    },
    "workspaceResourceId": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:TrafficAnalyticsConfigurationPropertiesResponse": {
   "properties": {
    "enabled": {},
    "trafficAnalyticsInterval": {},
    "workspaceId": {},
    "workspaceRegion": {},
    "workspaceResourceId": {}
   }
  },
  "azure-native_network_v20230201:network:TrafficAnalyticsProperties": {
   "properties": {
    "networkWatcherFlowAnalyticsConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:TrafficAnalyticsConfigurationProperties",
     "type": "object"
    }
   }
  },
  "azure-native_network_v20230201:network:TrafficAnalyticsPropertiesResponse": {
   "properties": {
    "networkWatcherFlowAnalyticsConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:TrafficAnalyticsConfigurationPropertiesResponse"
    }
   }
  },
  "azure-native_network_v20230201:network:TrafficSelectorPolicy": {
   "properties": {
    "localAddressRanges": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "remoteAddressRanges": {
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   },
   "required": [
    "localAddressRanges",
    "remoteAddressRanges"
   ]
  },
  "azure-native_network_v20230201:network:TrafficSelectorPolicyResponse": {
   "properties": {
    "localAddressRanges": {
     "items": {
      "type": "string"
     }
    },
    "remoteAddressRanges": {
     "items": {
      "type": "string"
     }
    }
   },
   "required": [
    "localAddressRanges",
    "remoteAddressRanges"
   ]
  },
  "azure-native_network_v20230201:network:TunnelConnectionHealthResponse": {
   "properties": {
    "connectionStatus": {},
    "egressBytesTransferred": {},
    "ingressBytesTransferred": {},
    "lastConnectionEstablishedUtcTime": {},
    "tunnel": {}
   }
  },
  "azure-native_network_v20230201:network:VM": {
   "properties": {
    "id": {
     "type": "string"
    },
    "location": {
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "type": "object"
    }
   }
  },
  "azure-native_network_v20230201:network:VMResponse": {
   "properties": {
    "id": {},
    "location": {},
    "name": {},
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:VirtualApplianceAdditionalNicProperties": {
   "properties": {
    "hasPublicIp": {
     "type": "boolean"
    },
    "name": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:VirtualApplianceAdditionalNicPropertiesResponse": {
   "properties": {
    "hasPublicIp": {},
    "name": {}
   }
  },
  "azure-native_network_v20230201:network:VirtualApplianceNicPropertiesResponse": {
   "properties": {
    "instanceName": {},
    "name": {},
    "privateIpAddress": {},
    "publicIpAddress": {}
   }
  },
  "azure-native_network_v20230201:network:VirtualApplianceSkuProperties": {
   "properties": {
    "bundledScaleUnit": {
     "type": "string"
    },
    "marketPlaceVersion": {
     "type": "string"
    },
    "vendor": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:VirtualApplianceSkuPropertiesResponse": {
   "properties": {
    "bundledScaleUnit": {},
    "marketPlaceVersion": {},
    "vendor": {}
   }
  },
  "azure-native_network_v20230201:network:VirtualHubId": {
   "properties": {
    "id": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:VirtualHubIdResponse": {
   "properties": {
    "id": {}
   }
  },
  "azure-native_network_v20230201:network:VirtualHubRoute": {
   "properties": {
    "addressPrefixes": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "nextHopIpAddress": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:VirtualHubRouteResponse": {
   "properties": {
    "addressPrefixes": {
     "items": {
      "type": "string"
     }
    },
    "nextHopIpAddress": {}
   }
  },
  "azure-native_network_v20230201:network:VirtualHubRouteTable": {
   "properties": {
    "routes": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualHubRoute",
      "type": "object"
     },
     "type": "array"
    }
   }
  },
  "azure-native_network_v20230201:network:VirtualHubRouteTableResponse": {
   "properties": {
    "routes": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualHubRouteResponse",
      "type": "object"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:VirtualHubRouteTableV2": {
   "properties": {
    "attachedConnections": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "id": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "routes": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualHubRouteV2",
      "type": "object"
     },
     "type": "array"
    }
   }
  },
  "azure-native_network_v20230201:network:VirtualHubRouteTableV2Response": {
   "properties": {
    "attachedConnections": {
     "containers": [
      "properties"
     ],
     "items": {
      "type": "string"
     }
    },
    "etag": {},
    "id": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "routes": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualHubRouteV2Response",
      "type": "object"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:VirtualHubRouteV2": {
   "properties": {
    "destinationType": {
     "type": "string"
    },
    "destinations": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "nextHopType": {
     "type": "string"
    },
    "nextHops": {
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   }
  },
  "azure-native_network_v20230201:network:VirtualHubRouteV2Response": {
   "properties": {
    "destinationType": {},
    "destinations": {
     "items": {
      "type": "string"
     }
    },
    "nextHopType": {},
    "nextHops": {
     "items": {
      "type": "string"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:VirtualNetworkBgpCommunities": {
   "properties": {
    "virtualNetworkCommunity": {
     "type": "string"
    }
   },
   "required": [
    "virtualNetworkCommunity"
   ]
  },
  "azure-native_network_v20230201:network:VirtualNetworkBgpCommunitiesResponse": {
   "properties": {
    "regionalCommunity": {},
    "virtualNetworkCommunity": {}
   },
   "required": [
    "virtualNetworkCommunity"
   ]
  },
  "azure-native_network_v20230201:network:VirtualNetworkEncryption": {
   "properties": {
    "enabled": {
     "type": "boolean"
    },
    "enforcement": {
     "type": "string"
    }
   },
   "required": [
    "enabled"
   ]
  },
  "azure-native_network_v20230201:network:VirtualNetworkEncryptionResponse": {
   "properties": {
    "enabled": {},
    "enforcement": {}
   },
   "required": [
    "enabled"
   ]
  },
  "azure-native_network_v20230201:network:VirtualNetworkGateway": {
   "properties": {
    "activeActive": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "adminState": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "allowRemoteVnetTraffic": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "allowVirtualWanTraffic": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "bgpSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:BgpSettings",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "customRoutes": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpace",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "disableIPSecReplayProtection": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "enableBgp": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "enableBgpRouteTranslationForNat": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "enableDnsForwarding": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "enablePrivateIpAddress": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocation",
     "type": "object"
    },
    "gatewayDefaultSite": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "gatewayType": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "id": {
     "type": "string"
    },
    "ipConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewayIPConfiguration",
      "type": "object"
     },
     "type": "array"
    },
    "location": {
     "type": "string"
    },
    "natRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewayNatRule",
      "type": "object"
     },
     "type": "array"
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewaySku",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "type": "object"
    },
    "vNetExtendedLocationResourceId": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "virtualNetworkGatewayPolicyGroups": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewayPolicyGroup",
      "type": "object"
     },
     "type": "array"
    },
    "vpnClientConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:VpnClientConfiguration",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "vpnGatewayGeneration": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "vpnType": {
     "containers": [
      "properties"
     ],
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:VirtualNetworkGatewayIPConfiguration": {
   "properties": {
    "id": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "privateIPAllocationMethod": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "publicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    }
   }
  },
  "azure-native_network_v20230201:network:VirtualNetworkGatewayIPConfigurationResponse": {
   "properties": {
    "etag": {},
    "id": {},
    "name": {},
    "privateIPAddress": {
     "containers": [
      "properties"
     ]
    },
    "privateIPAllocationMethod": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "publicIPAddress": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "subnet": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native_network_v20230201:network:VirtualNetworkGatewayNatRule": {
   "properties": {
    "externalMappings": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnNatRuleMapping",
      "type": "object"
     },
     "type": "array"
    },
    "id": {
     "type": "string"
    },
    "internalMappings": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnNatRuleMapping",
      "type": "object"
     },
     "type": "array"
    },
    "ipConfigurationId": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "mode": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "type": {
     "containers": [
      "properties"
     ],
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:VirtualNetworkGatewayNatRuleResponse": {
   "properties": {
    "etag": {},
    "externalMappings": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnNatRuleMappingResponse",
      "type": "object"
     }
    },
    "id": {},
    "internalMappings": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnNatRuleMappingResponse",
      "type": "object"
     }
    },
    "ipConfigurationId": {
     "containers": [
      "properties"
     ]
    },
    "mode": {
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:VirtualNetworkGatewayPolicyGroup": {
   "properties": {
    "id": {
     "type": "string"
    },
    "isDefault": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "name": {
     "type": "string"
    },
    "policyMembers": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewayPolicyGroupMember",
      "type": "object"
     },
     "type": "array"
    },
    "priority": {
     "containers": [
      "properties"
     ],
     "type": "integer"
    }
   },
   "required": [
    "isDefault",
    "policyMembers",
    "priority"
   ]
  },
  "azure-native_network_v20230201:network:VirtualNetworkGatewayPolicyGroupMember": {
   "properties": {
    "attributeType": {
     "type": "string"
    },
    "attributeValue": {
     "type": "string"
    },
    "name": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:VirtualNetworkGatewayPolicyGroupMemberResponse": {
   "properties": {
    "attributeType": {},
    "attributeValue": {},
    "name": {}
   }
  },
  "azure-native_network_v20230201:network:VirtualNetworkGatewayPolicyGroupResponse": {
   "properties": {
    "etag": {},
    "id": {},
    "isDefault": {
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "policyMembers": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewayPolicyGroupMemberResponse",
      "type": "object"
     }
    },
    "priority": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "vngClientConnectionConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    }
   },
   "required": [
    "isDefault",
    "policyMembers",
    "priority"
   ]
  },
  "azure-native_network_v20230201:network:VirtualNetworkGatewayResponse": {
   "properties": {
    "activeActive": {
     "containers": [
      "properties"
     ]
    },
    "adminState": {
     "containers": [
      "properties"
     ]
    },
    "allowRemoteVnetTraffic": {
     "containers": [
      "properties"
     ]
    },
    "allowVirtualWanTraffic": {
     "containers": [
      "properties"
     ]
    },
    "bgpSettings": {
     "$ref": "#/types/azure-native_network_v20230201:network:BgpSettingsResponse",
     "containers": [
      "properties"
     ]
    },
    "customRoutes": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpaceResponse",
     "containers": [
      "properties"
     ]
    },
    "disableIPSecReplayProtection": {
     "containers": [
      "properties"
     ]
    },
    "enableBgp": {
     "containers": [
      "properties"
     ]
    },
    "enableBgpRouteTranslationForNat": {
     "containers": [
      "properties"
     ]
    },
    "enableDnsForwarding": {
     "containers": [
      "properties"
     ]
    },
    "enablePrivateIpAddress": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "extendedLocation": {
     "$ref": "#/types/azure-native_network_v20230201:network:ExtendedLocationResponse"
    },
    "gatewayDefaultSite": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "gatewayType": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "inboundDnsForwardingEndpoint": {
     "containers": [
      "properties"
     ]
    },
    "ipConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewayIPConfigurationResponse",
      "type": "object"
     }
    },
    "location": {},
    "name": {},
    "natRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewayNatRuleResponse",
      "type": "object"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "sku": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewaySkuResponse",
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {},
    "vNetExtendedLocationResourceId": {
     "containers": [
      "properties"
     ]
    },
    "virtualNetworkGatewayPolicyGroups": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkGatewayPolicyGroupResponse",
      "type": "object"
     }
    },
    "vpnClientConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:VpnClientConfigurationResponse",
     "containers": [
      "properties"
     ]
    },
    "vpnGatewayGeneration": {
     "containers": [
      "properties"
     ]
    },
    "vpnType": {
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native_network_v20230201:network:VirtualNetworkGatewaySku": {
   "properties": {
    "name": {
     "type": "string"
    },
    "tier": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:VirtualNetworkGatewaySkuResponse": {
   "properties": {
    "capacity": {},
    "name": {},
    "tier": {}
   }
  },
  "azure-native_network_v20230201:network:VirtualNetworkPeering": {
   "properties": {
    "allowForwardedTraffic": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "allowGatewayTransit": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "allowVirtualNetworkAccess": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "doNotVerifyRemoteGateways": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "id": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "peeringState": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "peeringSyncLevel": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "remoteAddressSpace": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpace",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "remoteBgpCommunities": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkBgpCommunities",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "remoteVirtualNetwork": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "remoteVirtualNetworkAddressSpace": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpace",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "type": {
     "type": "string"
    },
    "useRemoteGateways": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    }
   }
  },
  "azure-native_network_v20230201:network:VirtualNetworkPeeringResponse": {
   "properties": {
    "allowForwardedTraffic": {
     "containers": [
      "properties"
     ]
    },
    "allowGatewayTransit": {
     "containers": [
      "properties"
     ]
    },
    "allowVirtualNetworkAccess": {
     "containers": [
      "properties"
     ]
    },
    "doNotVerifyRemoteGateways": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "name": {},
    "peeringState": {
     "containers": [
      "properties"
     ]
    },
    "peeringSyncLevel": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "remoteAddressSpace": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpaceResponse",
     "containers": [
      "properties"
     ]
    },
    "remoteBgpCommunities": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkBgpCommunitiesResponse",
     "containers": [
      "properties"
     ]
    },
    "remoteVirtualNetwork": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "remoteVirtualNetworkAddressSpace": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpaceResponse",
     "containers": [
      "properties"
     ]
    },
    "remoteVirtualNetworkEncryption": {
     "$ref": "#/types/azure-native_network_v20230201:network:VirtualNetworkEncryptionResponse",
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "type": {},
    "useRemoteGateways": {
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native_network_v20230201:network:VirtualNetworkTap": {
   "properties": {
    "destinationLoadBalancerFrontEndIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:FrontendIPConfiguration",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "destinationNetworkInterfaceIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceIPConfiguration",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "destinationPort": {
     "containers": [
      "properties"
     ],
     "type": "integer"
    },
    "id": {
     "type": "string"
    },
    "location": {
     "type": "string"
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     },
     "type": "object"
    }
   }
  },
  "azure-native_network_v20230201:network:VirtualNetworkTapResponse": {
   "properties": {
    "destinationLoadBalancerFrontEndIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:FrontendIPConfigurationResponse",
     "containers": [
      "properties"
     ]
    },
    "destinationNetworkInterfaceIPConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceIPConfigurationResponse",
     "containers": [
      "properties"
     ]
    },
    "destinationPort": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "location": {},
    "name": {},
    "networkInterfaceTapConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:NetworkInterfaceTapConfigurationResponse",
      "type": "object"
     }
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "resourceGuid": {
     "containers": [
      "properties"
     ]
    },
    "tags": {
     "additionalProperties": {
      "type": "string"
     }
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:VirtualRouterAutoScaleConfiguration": {
   "properties": {
    "minCapacity": {
     "minimum": 0,
     "type": "integer"
    }
   }
  },
  "azure-native_network_v20230201:network:VirtualRouterAutoScaleConfigurationResponse": {
   "properties": {
    "minCapacity": {}
   }
  },
  "azure-native_network_v20230201:network:VnetRoute": {
   "properties": {
    "staticRoutes": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:StaticRoute",
      "type": "object"
     },
     "type": "array"
    },
    "staticRoutesConfig": {
     "$ref": "#/types/azure-native_network_v20230201:network:StaticRoutesConfig",
     "type": "object"
    }
   }
  },
  "azure-native_network_v20230201:network:VnetRouteResponse": {
   "properties": {
    "bgpConnections": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "staticRoutes": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:StaticRouteResponse",
      "type": "object"
     }
    },
    "staticRoutesConfig": {
     "$ref": "#/types/azure-native_network_v20230201:network:StaticRoutesConfigResponse"
    }
   }
  },
  "azure-native_network_v20230201:network:VngClientConnectionConfiguration": {
   "properties": {
    "id": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "virtualNetworkGatewayPolicyGroups": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
      "type": "object"
     },
     "type": "array"
    },
    "vpnClientAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpace",
     "containers": [
      "properties"
     ],
     "type": "object"
    }
   },
   "required": [
    "virtualNetworkGatewayPolicyGroups",
    "vpnClientAddressPool"
   ]
  },
  "azure-native_network_v20230201:network:VngClientConnectionConfigurationResponse": {
   "properties": {
    "etag": {},
    "id": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "virtualNetworkGatewayPolicyGroups": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "vpnClientAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpaceResponse",
     "containers": [
      "properties"
     ]
    }
   },
   "required": [
    "virtualNetworkGatewayPolicyGroups",
    "vpnClientAddressPool"
   ]
  },
  "azure-native_network_v20230201:network:VpnClientConfiguration": {
   "properties": {
    "aadAudience": {
     "type": "string"
    },
    "aadIssuer": {
     "type": "string"
    },
    "aadTenant": {
     "type": "string"
    },
    "radiusServerAddress": {
     "type": "string"
    },
    "radiusServerSecret": {
     "type": "string"
    },
    "radiusServers": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:RadiusServer",
      "type": "object"
     },
     "type": "array"
    },
    "vngClientConnectionConfigurations": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VngClientConnectionConfiguration",
      "type": "object"
     },
     "type": "array"
    },
    "vpnAuthenticationTypes": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "vpnClientAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpace",
     "type": "object"
    },
    "vpnClientIpsecPolicies": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IpsecPolicy",
      "type": "object"
     },
     "type": "array"
    },
    "vpnClientProtocols": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "vpnClientRevokedCertificates": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnClientRevokedCertificate",
      "type": "object"
     },
     "type": "array"
    },
    "vpnClientRootCertificates": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnClientRootCertificate",
      "type": "object"
     },
     "type": "array"
    }
   }
  },
  "azure-native_network_v20230201:network:VpnClientConfigurationResponse": {
   "properties": {
    "aadAudience": {},
    "aadIssuer": {},
    "aadTenant": {},
    "radiusServerAddress": {},
    "radiusServerSecret": {},
    "radiusServers": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:RadiusServerResponse",
      "type": "object"
     }
    },
    "vngClientConnectionConfigurations": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VngClientConnectionConfigurationResponse",
      "type": "object"
     }
    },
    "vpnAuthenticationTypes": {
     "items": {
      "type": "string"
     }
    },
    "vpnClientAddressPool": {
     "$ref": "#/types/azure-native_network_v20230201:network:AddressSpaceResponse"
    },
    "vpnClientIpsecPolicies": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IpsecPolicyResponse",
      "type": "object"
     }
    },
    "vpnClientProtocols": {
     "items": {
      "type": "string"
     }
    },
    "vpnClientRevokedCertificates": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnClientRevokedCertificateResponse",
      "type": "object"
     }
    },
    "vpnClientRootCertificates": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnClientRootCertificateResponse",
      "type": "object"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:VpnClientConnectionHealthDetailResponse": {
   "properties": {
    "egressBytesTransferred": {},
    "egressPacketsTransferred": {},
    "ingressBytesTransferred": {},
    "ingressPacketsTransferred": {},
    "maxBandwidth": {},
    "maxPacketsPerSecond": {},
    "privateIpAddress": {},
    "publicIpAddress": {},
    "vpnConnectionDuration": {},
    "vpnConnectionId": {},
    "vpnConnectionTime": {},
    "vpnUserName": {}
   }
  },
  "azure-native_network_v20230201:network:VpnClientConnectionHealthResponse": {
   "properties": {
    "allocatedIpAddresses": {
     "items": {
      "type": "string"
     }
    },
    "totalEgressBytesTransferred": {},
    "totalIngressBytesTransferred": {},
    "vpnClientConnectionsCount": {}
   }
  },
  "azure-native_network_v20230201:network:VpnClientRevokedCertificate": {
   "properties": {
    "id": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "thumbprint": {
     "containers": [
      "properties"
     ],
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:VpnClientRevokedCertificateResponse": {
   "properties": {
    "etag": {},
    "id": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "thumbprint": {
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native_network_v20230201:network:VpnClientRootCertificate": {
   "properties": {
    "id": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "publicCertData": {
     "containers": [
      "properties"
     ],
     "type": "string"
    }
   },
   "required": [
    "publicCertData"
   ]
  },
  "azure-native_network_v20230201:network:VpnClientRootCertificateResponse": {
   "properties": {
    "etag": {},
    "id": {},
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "publicCertData": {
     "containers": [
      "properties"
     ]
    }
   },
   "required": [
    "publicCertData"
   ]
  },
  "azure-native_network_v20230201:network:VpnConnection": {
   "properties": {
    "connectionBandwidth": {
     "containers": [
      "properties"
     ],
     "type": "integer"
    },
    "dpdTimeoutSeconds": {
     "containers": [
      "properties"
     ],
     "type": "integer"
    },
    "enableBgp": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "enableInternetSecurity": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "enableRateLimiting": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "id": {
     "type": "string"
    },
    "ipsecPolicies": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IpsecPolicy",
      "type": "object"
     },
     "type": "array"
    },
    "name": {
     "type": "string"
    },
    "remoteVpnSite": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "routingConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfiguration",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "routingWeight": {
     "containers": [
      "properties"
     ],
     "type": "integer"
    },
    "sharedKey": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "trafficSelectorPolicies": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:TrafficSelectorPolicy",
      "type": "object"
     },
     "type": "array"
    },
    "useLocalAzureIpAddress": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "usePolicyBasedTrafficSelectors": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "vpnConnectionProtocolType": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "vpnLinkConnections": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnSiteLinkConnection",
      "type": "object"
     },
     "type": "array"
    }
   }
  },
  "azure-native_network_v20230201:network:VpnConnectionResponse": {
   "properties": {
    "connectionBandwidth": {
     "containers": [
      "properties"
     ]
    },
    "connectionStatus": {
     "containers": [
      "properties"
     ]
    },
    "dpdTimeoutSeconds": {
     "containers": [
      "properties"
     ]
    },
    "egressBytesTransferred": {
     "containers": [
      "properties"
     ]
    },
    "enableBgp": {
     "containers": [
      "properties"
     ]
    },
    "enableInternetSecurity": {
     "containers": [
      "properties"
     ]
    },
    "enableRateLimiting": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "ingressBytesTransferred": {
     "containers": [
      "properties"
     ]
    },
    "ipsecPolicies": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IpsecPolicyResponse",
      "type": "object"
     }
    },
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "remoteVpnSite": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    },
    "routingConfiguration": {
     "$ref": "#/types/azure-native_network_v20230201:network:RoutingConfigurationResponse",
     "containers": [
      "properties"
     ]
    },
    "routingWeight": {
     "containers": [
      "properties"
     ]
    },
    "sharedKey": {
     "containers": [
      "properties"
     ]
    },
    "trafficSelectorPolicies": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:TrafficSelectorPolicyResponse",
      "type": "object"
     }
    },
    "useLocalAzureIpAddress": {
     "containers": [
      "properties"
     ]
    },
    "usePolicyBasedTrafficSelectors": {
     "containers": [
      "properties"
     ]
    },
    "vpnConnectionProtocolType": {
     "containers": [
      "properties"
     ]
    },
    "vpnLinkConnections": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnSiteLinkConnectionResponse",
      "type": "object"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:VpnGatewayIpConfigurationResponse": {
   "properties": {
    "id": {},
    "privateIpAddress": {},
    "publicIpAddress": {}
   }
  },
  "azure-native_network_v20230201:network:VpnGatewayNatRule": {
   "properties": {
    "externalMappings": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnNatRuleMapping",
      "type": "object"
     },
     "type": "array"
    },
    "id": {
     "type": "string"
    },
    "internalMappings": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnNatRuleMapping",
      "type": "object"
     },
     "type": "array"
    },
    "ipConfigurationId": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "mode": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "type": {
     "containers": [
      "properties"
     ],
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:VpnGatewayNatRuleResponse": {
   "properties": {
    "egressVpnSiteLinkConnections": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "etag": {},
    "externalMappings": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnNatRuleMappingResponse",
      "type": "object"
     }
    },
    "id": {},
    "ingressVpnSiteLinkConnections": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "internalMappings": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnNatRuleMappingResponse",
      "type": "object"
     }
    },
    "ipConfigurationId": {
     "containers": [
      "properties"
     ]
    },
    "mode": {
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:VpnLinkBgpSettings": {
   "properties": {
    "asn": {
     "type": "number"
    },
    "bgpPeeringAddress": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:VpnLinkBgpSettingsResponse": {
   "properties": {
    "asn": {},
    "bgpPeeringAddress": {}
   }
  },
  "azure-native_network_v20230201:network:VpnLinkProviderProperties": {
   "properties": {
    "linkProviderName": {
     "type": "string"
    },
    "linkSpeedInMbps": {
     "type": "integer"
    }
   }
  },
  "azure-native_network_v20230201:network:VpnLinkProviderPropertiesResponse": {
   "properties": {
    "linkProviderName": {},
    "linkSpeedInMbps": {}
   }
  },
  "azure-native_network_v20230201:network:VpnNatRuleMapping": {
   "properties": {
    "addressSpace": {
     "type": "string"
    },
    "portRange": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:VpnNatRuleMappingResponse": {
   "properties": {
    "addressSpace": {},
    "portRange": {}
   }
  },
  "azure-native_network_v20230201:network:VpnServerConfigRadiusClientRootCertificate": {
   "properties": {
    "name": {
     "type": "string"
    },
    "thumbprint": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:VpnServerConfigRadiusClientRootCertificateResponse": {
   "properties": {
    "name": {},
    "thumbprint": {}
   }
  },
  "azure-native_network_v20230201:network:VpnServerConfigRadiusServerRootCertificate": {
   "properties": {
    "name": {
     "type": "string"
    },
    "publicCertData": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:VpnServerConfigRadiusServerRootCertificateResponse": {
   "properties": {
    "name": {},
    "publicCertData": {}
   }
  },
  "azure-native_network_v20230201:network:VpnServerConfigVpnClientRevokedCertificate": {
   "properties": {
    "name": {
     "type": "string"
    },
    "thumbprint": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:VpnServerConfigVpnClientRevokedCertificateResponse": {
   "properties": {
    "name": {},
    "thumbprint": {}
   }
  },
  "azure-native_network_v20230201:network:VpnServerConfigVpnClientRootCertificate": {
   "properties": {
    "name": {
     "type": "string"
    },
    "publicCertData": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:VpnServerConfigVpnClientRootCertificateResponse": {
   "properties": {
    "name": {},
    "publicCertData": {}
   }
  },
  "azure-native_network_v20230201:network:VpnServerConfigurationPolicyGroup": {
   "properties": {
    "id": {
     "type": "string"
    },
    "isDefault": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "name": {
     "type": "string"
    },
    "policyMembers": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnServerConfigurationPolicyGroupMember",
      "type": "object"
     },
     "type": "array"
    },
    "priority": {
     "containers": [
      "properties"
     ],
     "type": "integer"
    }
   }
  },
  "azure-native_network_v20230201:network:VpnServerConfigurationPolicyGroupMember": {
   "properties": {
    "attributeType": {
     "type": "string"
    },
    "attributeValue": {
     "type": "string"
    },
    "name": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:VpnServerConfigurationPolicyGroupMemberResponse": {
   "properties": {
    "attributeType": {},
    "attributeValue": {},
    "name": {}
   }
  },
  "azure-native_network_v20230201:network:VpnServerConfigurationPolicyGroupResponse": {
   "properties": {
    "etag": {},
    "id": {},
    "isDefault": {
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "p2SConnectionConfigurations": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "policyMembers": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnServerConfigurationPolicyGroupMemberResponse",
      "type": "object"
     }
    },
    "priority": {
     "containers": [
      "properties"
     ]
    },
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:VpnServerConfigurationProperties": {
   "properties": {
    "aadAuthenticationParameters": {
     "$ref": "#/types/azure-native_network_v20230201:network:AadAuthenticationParameters",
     "type": "object"
    },
    "configurationPolicyGroups": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnServerConfigurationPolicyGroup",
      "type": "object"
     },
     "type": "array"
    },
    "name": {
     "type": "string"
    },
    "radiusClientRootCertificates": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnServerConfigRadiusClientRootCertificate",
      "type": "object"
     },
     "type": "array"
    },
    "radiusServerAddress": {
     "type": "string"
    },
    "radiusServerRootCertificates": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnServerConfigRadiusServerRootCertificate",
      "type": "object"
     },
     "type": "array"
    },
    "radiusServerSecret": {
     "type": "string"
    },
    "radiusServers": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:RadiusServer",
      "type": "object"
     },
     "type": "array"
    },
    "vpnAuthenticationTypes": {
     "items": {
      "type": "string"
     },
     "type": "array"
    },
    "vpnClientIpsecPolicies": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IpsecPolicy",
      "type": "object"
     },
     "type": "array"
    },
    "vpnClientRevokedCertificates": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnServerConfigVpnClientRevokedCertificate",
      "type": "object"
     },
     "type": "array"
    },
    "vpnClientRootCertificates": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnServerConfigVpnClientRootCertificate",
      "type": "object"
     },
     "type": "array"
    },
    "vpnProtocols": {
     "items": {
      "type": "string"
     },
     "type": "array"
    }
   }
  },
  "azure-native_network_v20230201:network:VpnServerConfigurationPropertiesResponse": {
   "properties": {
    "aadAuthenticationParameters": {
     "$ref": "#/types/azure-native_network_v20230201:network:AadAuthenticationParametersResponse"
    },
    "configurationPolicyGroups": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnServerConfigurationPolicyGroupResponse",
      "type": "object"
     }
    },
    "etag": {},
    "name": {},
    "p2SVpnGateways": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:P2SVpnGatewayResponse",
      "type": "object"
     }
    },
    "provisioningState": {},
    "radiusClientRootCertificates": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnServerConfigRadiusClientRootCertificateResponse",
      "type": "object"
     }
    },
    "radiusServerAddress": {},
    "radiusServerRootCertificates": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnServerConfigRadiusServerRootCertificateResponse",
      "type": "object"
     }
    },
    "radiusServerSecret": {},
    "radiusServers": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:RadiusServerResponse",
      "type": "object"
     }
    },
    "vpnAuthenticationTypes": {
     "items": {
      "type": "string"
     }
    },
    "vpnClientIpsecPolicies": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IpsecPolicyResponse",
      "type": "object"
     }
    },
    "vpnClientRevokedCertificates": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnServerConfigVpnClientRevokedCertificateResponse",
      "type": "object"
     }
    },
    "vpnClientRootCertificates": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:VpnServerConfigVpnClientRootCertificateResponse",
      "type": "object"
     }
    },
    "vpnProtocols": {
     "items": {
      "type": "string"
     }
    }
   }
  },
  "azure-native_network_v20230201:network:VpnSiteLink": {
   "properties": {
    "bgpProperties": {
     "$ref": "#/types/azure-native_network_v20230201:network:VpnLinkBgpSettings",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "fqdn": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "id": {
     "type": "string"
    },
    "ipAddress": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "linkProperties": {
     "$ref": "#/types/azure-native_network_v20230201:network:VpnLinkProviderProperties",
     "containers": [
      "properties"
     ],
     "type": "object"
    },
    "name": {
     "type": "string"
    }
   }
  },
  "azure-native_network_v20230201:network:VpnSiteLinkConnection": {
   "properties": {
    "connectionBandwidth": {
     "containers": [
      "properties"
     ],
     "type": "integer"
    },
    "egressNatRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
      "type": "object"
     },
     "type": "array"
    },
    "enableBgp": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "enableRateLimiting": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "id": {
     "type": "string"
    },
    "ingressNatRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
      "type": "object"
     },
     "type": "array"
    },
    "ipsecPolicies": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IpsecPolicy",
      "type": "object"
     },
     "type": "array"
    },
    "name": {
     "type": "string"
    },
    "routingWeight": {
     "containers": [
      "properties"
     ],
     "type": "integer"
    },
    "sharedKey": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "useLocalAzureIpAddress": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "usePolicyBasedTrafficSelectors": {
     "containers": [
      "properties"
     ],
     "type": "boolean"
    },
    "vpnConnectionProtocolType": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "vpnGatewayCustomBgpAddresses": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:GatewayCustomBgpIpAddressIpConfiguration",
      "type": "object"
     },
     "type": "array"
    },
    "vpnLinkConnectionMode": {
     "containers": [
      "properties"
     ],
     "type": "string"
    },
    "vpnSiteLink": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResource",
     "containers": [
      "properties"
     ],
     "type": "object"
    }
   }
  },
  "azure-native_network_v20230201:network:VpnSiteLinkConnectionResponse": {
   "properties": {
    "connectionBandwidth": {
     "containers": [
      "properties"
     ]
    },
    "connectionStatus": {
     "containers": [
      "properties"
     ]
    },
    "egressBytesTransferred": {
     "containers": [
      "properties"
     ]
    },
    "egressNatRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "enableBgp": {
     "containers": [
      "properties"
     ]
    },
    "enableRateLimiting": {
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "id": {},
    "ingressBytesTransferred": {
     "containers": [
      "properties"
     ]
    },
    "ingressNatRules": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
      "type": "object"
     }
    },
    "ipsecPolicies": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:IpsecPolicyResponse",
      "type": "object"
     }
    },
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "routingWeight": {
     "containers": [
      "properties"
     ]
    },
    "sharedKey": {
     "containers": [
      "properties"
     ]
    },
    "type": {},
    "useLocalAzureIpAddress": {
     "containers": [
      "properties"
     ]
    },
    "usePolicyBasedTrafficSelectors": {
     "containers": [
      "properties"
     ]
    },
    "vpnConnectionProtocolType": {
     "containers": [
      "properties"
     ]
    },
    "vpnGatewayCustomBgpAddresses": {
     "containers": [
      "properties"
     ],
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:GatewayCustomBgpIpAddressIpConfigurationResponse",
      "type": "object"
     }
    },
    "vpnLinkConnectionMode": {
     "containers": [
      "properties"
     ]
    },
    "vpnSiteLink": {
     "$ref": "#/types/azure-native_network_v20230201:network:SubResourceResponse",
     "containers": [
      "properties"
     ]
    }
   }
  },
  "azure-native_network_v20230201:network:VpnSiteLinkResponse": {
   "properties": {
    "bgpProperties": {
     "$ref": "#/types/azure-native_network_v20230201:network:VpnLinkBgpSettingsResponse",
     "containers": [
      "properties"
     ]
    },
    "etag": {},
    "fqdn": {
     "containers": [
      "properties"
     ]
    },
    "id": {},
    "ipAddress": {
     "containers": [
      "properties"
     ]
    },
    "linkProperties": {
     "$ref": "#/types/azure-native_network_v20230201:network:VpnLinkProviderPropertiesResponse",
     "containers": [
      "properties"
     ]
    },
    "name": {},
    "provisioningState": {
     "containers": [
      "properties"
     ]
    },
    "type": {}
   }
  },
  "azure-native_network_v20230201:network:WebApplicationFirewallCustomRule": {
   "properties": {
    "action": {
     "type": "string"
    },
    "groupByUserSession": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:GroupByUserSession",
      "type": "object"
     },
     "type": "array"
    },
    "matchConditions": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:MatchCondition",
      "type": "object"
     },
     "type": "array"
    },
    "name": {
     "maxLength": 128,
     "type": "string"
    },
    "priority": {
     "type": "integer"
    },
    "rateLimitDuration": {
     "type": "string"
    },
    "rateLimitThreshold": {
     "type": "integer"
    },
    "ruleType": {
     "type": "string"
    },
    "state": {
     "type": "string"
    }
   },
   "required": [
    "action",
    "matchConditions",
    "priority",
    "ruleType"
   ]
  },
  "azure-native_network_v20230201:network:WebApplicationFirewallCustomRuleResponse": {
   "properties": {
    "action": {},
    "etag": {},
    "groupByUserSession": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:GroupByUserSessionResponse",
      "type": "object"
     }
    },
    "matchConditions": {
     "items": {
      "$ref": "#/types/azure-native_network_v20230201:network:MatchConditionResponse",
      "type": "object"
     }
    },
    "name": {},
    "priority": {},
    "rateLimitDuration": {},
    "rateLimitThreshold": {},
    "ruleType": {},
    "state": {}
   },
   "required": [
    "action",
    "matchConditions",
    "priority",
    "ruleType"
   ]
  },
  "azure-native_network_v20230201:network:WebApplicationFirewallScrubbingRules": {
   "properties": {
    "matchVariable": {
     "type": "string"
    },
    "selector": {
     "type": "string"
    },
    "selectorMatchOperator": {
     "type": "string"
    },
    "state": {
     "type": "string"
    }
   },
   "required": [
    "matchVariable",
    "selectorMatchOperator"
   ]
  },
  "azure-native_network_v20230201:network:WebApplicationFirewallScrubbingRulesResponse": {
   "properties": {
    "matchVariable": {},
    "selector": {},
    "selectorMatchOperator": {},
    "state": {}
   },
   "required": [
    "matchVariable",
    "selectorMatchOperator"
   ]
  }
 }
}
---
