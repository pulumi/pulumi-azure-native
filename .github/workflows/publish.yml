name: publish

on:
  workflow_call:
    inputs:
      ref:
        required: true
        type: string
      version:
        required: true
        type: string
        description: Version to be used to publish the SDKs
      prerelease:
        required: true
        type: boolean
        description: Indicates if we're doing a pre- or proper release.

env:
  GITHUB_TOKEN: ${{ secrets.PULUMI_BOT_TOKEN }}
  PROVIDER: azure-native
  PROVIDER_VERSION: ${{ inputs.version }}
  PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
  PULUMI_LOCAL_NUGET: ${{ github.workspace }}/nuget
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  NUGET_PUBLISH_KEY: ${{ secrets.NUGET_PUBLISH_KEY }}
  PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
  TRAVIS_OS_NAME: linux
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  PULUMI_GO_DEP_ROOT: ${{ github.workspace }}/..
  PUBLISH_REPO_USERNAME: ${{ secrets.OSSRH_USERNAME }}
  PUBLISH_REPO_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
  SIGNING_KEY_ID: ${{ secrets.JAVA_SIGNING_KEY_ID }}
  SIGNING_KEY: ${{ secrets.JAVA_SIGNING_KEY }}
  SIGNING_PASSWORD: ${{ secrets.JAVA_SIGNING_PASSWORD }}
  ARM_CLIENT_ID: 30e520fa-12b4-4e21-b473-9426c5ac2e1e
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_ENVIRONMENT: public
  ARM_LOCATION: westus2
  ARM_SUBSCRIPTION_ID: 0282681f-7a9e-424b-80b2-96babd57a8a1
  ARM_TENANT_ID: 706143bc-e1d4-4593-aee2-c9dc60ab9be7
  PULUMI_API: https://api.pulumi-staging.io

jobs:
  publish-provider:
    runs-on: ubuntu-latest
    name: publish-provider
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          submodules: true
          ref: ${{ inputs.ref }}

      - name: Install Languages & Frameworks
        uses: ./.github/actions/install
        with:
          skip_dotnet_and_java: "true"

      - run: make ensure

      - name: Prerequisites artifact restore
        uses: ./.github/actions/prerequisites-artifact-restore

      - name: Mark prerequisites as up-to-date
        # Don't include provider as that's the bit we're going to rebuild
        run: make --touch codegen schema

      - name: Ensure provider build prerequisites
        run: make provider_prebuild

      - name: Build dist packages
        run: make dist --jobs=2

      - name: Install Schema Tools
        uses: jaxxstorm/action-install-gh-release@v1.9.0
        with:
          repo: pulumi/schema-tools

      - name: Get Schema Change Summary
        id: schema-summary
        shell: bash
        run: |
          # Get latest stable release. Return only first column from result (tag).
          LAST_VERSION=$(gh release view --repo pulumi/pulumi-azure-native --json tagName -q .tagName)
          {
            echo 'summary<<EOF'
            schema-tools compare --provider="azure-native" --old-commit="$LAST_VERSION" --new-commit="--local-path=provider/cmd/pulumi-resource-azure-native/schema.json"
            echo 'EOF'
          } >> "$GITHUB_OUTPUT"

      - name: Configure AWS Credentials
        # https://github.com/aws-actions/configure-aws-credentials#notice-node12-deprecation-warning
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: us-east-2
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 7200
          role-session-name: ${{ env.PROVIDER }}@githubActions
          role-external-id: upload-pulumi-release
          role-to-assume: ${{ secrets.AWS_UPLOAD_ROLE_ARN }}

      - name: Upload Provider Binaries
        run: aws s3 cp dist s3://get.pulumi.com/releases/plugins/ --recursive

      - name: Create GH Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ inputs.version }}
          prerelease: ${{ inputs.prerelease }}
          draft: ${{ inputs.prerelease }}
          body: ${{ steps.schema-summary.outputs.summary }}
          generate_release_notes: true
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.PULUMI_BOT_TOKEN }}

      - if: failure() && github.event_name == 'push'
        name: Notify Slack
        uses: 8398a7/action-slack@v3
        with:
          author_name: Failure in publishing binaries
          fields: repo,commit,author,action
          status: ${{ job.status }}

  publish-python-sdk:
    runs-on: ubuntu-latest
    name: publish-python-sdk
    needs: publish-provider
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install Languages & Frameworks
        uses: ./.github/actions/install

      - name: Download python SDK
        uses: actions/download-artifact@v3
        with:
          name: python-sdk.tar.gz
          path: ${{ github.workspace}}/sdk/

      - name: Uncompress python SDK
        run: tar -zxf ${{github.workspace}}/sdk/python.tar.gz -C
          ${{github.workspace}}/sdk/python

      - name: Install Twine
        run: python -m pip install pip twine

      - name: Publish PyPi Package
        run: >
          twine upload
          -u "pulumi"
          -p "${PYPI_PASSWORD}"
          "${{ github.workspace }}/sdk/python/bin/dist/*.tar.gz"
          --skip-existing
          --verbose

      - if: failure() && github.event_name == 'push'
        name: Notify Slack
        uses: 8398a7/action-slack@v3
        with:
          author_name: Failure in publishing Python SDK
          fields: repo,commit,author,action
          status: ${{ job.status }}

  publish-dotnet-sdk:
    runs-on: ubuntu-latest
    name: publish-dotnet-sdk
    needs: publish-provider
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Checkout Scripts Repo
        uses: actions/checkout@v2
        with:
          path: ci-scripts
          repository: pulumi/scripts

      - name: Install Languages & Frameworks
        uses: ./.github/actions/install

      - name: Download dotnet SDK
        uses: actions/download-artifact@v3
        with:
          name: dotnet-sdk.tar.gz
          path: ${{ github.workspace}}/sdk/

      - name: Uncompress dotnet SDK
        run: tar -zxf ${{github.workspace}}/sdk/dotnet.tar.gz -C
          ${{github.workspace}}/sdk/dotnet

      - name: Publish NuGet Package
        run: |
          find "sdk/dotnet/bin/Debug/" -name 'Pulumi.*.nupkg' \
            -exec dotnet nuget push -k "${NUGET_PUBLISH_KEY}" -s https://api.nuget.org/v3/index.json {} ';'

      - if: failure() && github.event_name == 'push'
        name: Notify Slack
        uses: 8398a7/action-slack@v3
        with:
          author_name: Failure in publishing dotnet SDK
          fields: repo,commit,author,action
          status: ${{ job.status }}

  publish-nodejs-sdk:
    runs-on: ubuntu-latest
    name: publish-nodejs-sdk
    needs: publish-provider
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install Languages & Frameworks
        uses: ./.github/actions/install

      - name: Download nodejs SDK
        uses: actions/download-artifact@v3
        with:
          name: nodejs-sdk.tar.gz
          path: ${{ github.workspace}}/sdk/

      - name: Uncompress nodejs SDK
        run: tar -zxf ${{github.workspace}}/sdk/nodejs.tar.gz -C
          ${{github.workspace}}/sdk/nodejs

      - name: Calculate tag
        id: tag
        run: echo "tag=$(./.github/scripts/calculate-npm-tag.sh "${{ inputs.version }}")" >> "$GITHUB_OUTPUT"

      - name: Publish Node.JS SDK
        working-directory: sdk/nodejs/bin
        run: npm publish --tag "${{ steps.tag.outputs.tag }}"
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - if: failure() && github.event_name == 'push'
        name: Notify Slack
        uses: 8398a7/action-slack@v3
        with:
          author_name: Failure in publishing SDK
          fields: repo,commit,author,action
          status: ${{ job.status }}

  publish-java-sdk:
    runs-on: ubuntu-latest
    name: publish-java-sdk
    needs: publish-provider
    env:
      PACKAGE_VERSION: ${{ inputs.version }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Install Languages & Frameworks
        uses: ./.github/actions/install

      - name: Download java SDK
        uses: actions/download-artifact@v3
        with:
          name: java-sdk.tar.gz
          path: ${{ github.workspace}}/sdk/

      - name: Uncompress java SDK
        run: tar -zxf ${{github.workspace}}/sdk/java.tar.gz -C
          ${{github.workspace}}/sdk/java

      - name: Publish Java SDK
        # Maven doesn't use lock files and version ranges can't exclude prereleases.
        # Therefore we can't publish prereleases without risking breaking customers.
        # All other ecosystems handle prereleases correctly, Maven is the exception.
        if: inputs.prerelease == false
        uses: gradle/gradle-build-action@9b814496b50909128c6a52622b416c5ffa04db49
        with:
          arguments: publishToSonatype closeAndReleaseSonatypeStagingRepository
          build-root-directory: ./sdk/java
          gradle-version: 7.4.1

      - if: failure() && github.event_name == 'push'
        name: Notify Slack
        uses: 8398a7/action-slack@v3
        with:
          author_name: Failure in publishing SDK
          fields: repo,commit,author,action
          status: ${{ job.status }}

  publish-go-sdk:
    runs-on: ubuntu-latest
    name: publish-go-sdk
    needs: publish-provider
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install Languages & Frameworks
        uses: ./.github/actions/install

      - name: Checkout Go SDK repo
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PULUMI_BOT_TOKEN }}
          repository: pulumi/pulumi-azure-native-sdk
          path: sdk/pulumi-azure-native-sdk
          fetch-depth: 0

      - name: Checkout prerelease branch
        if: inputs.prerelease == true
        working-directory: sdk/pulumi-azure-native-sdk
        run: git checkout -b ${{ inputs.version }}

      - name: Checkout master branch
        if: inputs.prerelease == false
        working-directory: sdk/pulumi-azure-native-sdk
        run: git checkout master

      - name: Clear all source files
        working-directory: sdk/pulumi-azure-native-sdk
        run: find . -maxdepth 1 -not -name '.*' -exec rm -rf {} \;

      - name: Download Go SDK artifact
        uses: actions/download-artifact@v3
        with:
          name: pulumi-azure-native-sdk.tar.gz
          path: ${{ github.workspace}}/sdk/

      - name: UnTar Go SDK artifact
        run: |
          mkdir -p ${{github.workspace}}/sdk/pulumi-azure-native-sdk
          tar -zxf ${{ github.workspace}}/sdk/pulumi-azure-native-sdk.tar.gz -C ${{github.workspace}}/sdk/pulumi-azure-native-sdk

      - name: Prepare for publishing
        run: make prepublish_go

      - name: Commit and tag
        working-directory: sdk/pulumi-azure-native-sdk
        run: |
          git config user.name "Pulumi Bot"
          git config user.email "bot@pulumi.com"
          git add .
          git commit -m "v${{ inputs.version }}"
          ../../.github/scripts/tag-go-modules.sh ${{ inputs.version }}

      - name: Publish to prerelease branch
        if: inputs.prerelease == true
        working-directory: sdk/pulumi-azure-native-sdk
        run: git push -u origin ${{ inputs.version }} --tags

      - name: Publish to master branch
        if: inputs.prerelease == false
        working-directory: sdk/pulumi-azure-native-sdk
        run: git push -u origin master --tags

      - if: failure() && github.event_name == 'push'
        name: Notify Slack
        uses: 8398a7/action-slack@v3
        with:
          author_name: Failure in publishing SDK
          fields: repo,commit,author,action
          status: ${{ job.status }}

  publish-arm2pulumi:
    runs-on: ubuntu-latest
    name: publish-arm2pulumi
    needs: publish-provider
    if: "!inputs.prerelease"
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install Languages & Frameworks
        uses: ./.github/actions/install
        with:
          skip_dotnet_and_java: "true"

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          args: -p 1 -f .goreleaser.arm2pulumi.yml release --rm-dist --timeout 60m0s
          version: 1.18.2
