name: build-test

on:
  workflow_call:
    inputs:
      ref:
        required: true
        type: string
      version:
        type: string
        description: Version to be used to build the binaries, schema and SDKs
        required: true
      short_test:
        type: boolean
        description: Skip longer running tests
        default: false
      oidc_arm_client_id:
        type: string
        description: The Azure Active Directory application to authenticate the OIDC tests. Empty skips the OIDC tests.
        default: "89380e12-5be6-486a-89ef-eea107af2f47" # AD app 'oidc-test'
      major_version_dir:
        type: string
        description: Major version to build, either "v2/" or empty
        default: ""

env:
  GITHUB_TOKEN: ${{ secrets.PULUMI_BOT_TOKEN }}
  PROVIDER: azure-native
  PROVIDER_VERSION: ${{ inputs.version }}
  PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
  PULUMI_LOCAL_NUGET: ${{ github.workspace }}/nuget
  # TRAVIS_OS_NAME required by https://github.com/pulumi/scripts/blob/master/ci/publish-tfgen-package
  TRAVIS_OS_NAME: linux
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  PULUMI_GO_DEP_ROOT: ${{ github.workspace }}/..
  ARM_CLIENT_ID: 30e520fa-12b4-4e21-b473-9426c5ac2e1e
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_ENVIRONMENT: public
  ARM_LOCATION: westus2
  ARM_SUBSCRIPTION_ID: 0282681f-7a9e-424b-80b2-96babd57a8a1
  ARM_TENANT_ID: 706143bc-e1d4-4593-aee2-c9dc60ab9be7
  PULUMI_API: https://api.pulumi-staging.io

jobs:
  prerequisites:
    runs-on: ubuntu-latest
    name: Build binaries and schema
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}
          submodules: true

      - name: Install Languages & Frameworks
        uses: ./.github/actions/install
        with:
          skip_dotnet_and_java: "true"

      - name: Build schema and binaries
        run: make codegen schema provider VERSION_DIR=${{ inputs.major_version_dir }}

      - name: Artifact capture
        uses: ./.github/actions/prerequisites-artifact-capture

      - name: Schema Check
        if: github.event_name == 'pull_request'
        uses: ./.github/actions/schema-check
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check worktree clean
        uses: ./.github/actions/check-worktree-clean

      - if: failure() && github.event_name == 'push'
        name: Notify Slack
        uses: 8398a7/action-slack@v3
        with:
          author_name: Failure in building provider prerequisites
          fields: repo,commit,author,action
          status: ${{ job.status }}

  build_sdks:
    needs: prerequisites
    # Use big runner for dotnet and nodejs because we need more memory and more compute, respectively
    runs-on: ${{ (matrix.language == 'dotnet' || matrix.language == 'nodejs') && 'pulumi-ubuntu-8core' || 'ubuntu-latest' }}
    strategy:
      fail-fast: true
      matrix:
        language:
          - nodejs
          - python
          - dotnet
          - go
          - java
    name: Build & Test SDKs
    permissions:
      id-token: write  # required for OIDC auth
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}
          submodules: true

      - name: Install Languages & Frameworks
        uses: ./.github/actions/install

      - run: make ensure

      - name: Prerequisites artifact restore
        uses: ./.github/actions/prerequisites-artifact-restore

      - name: Mark prerequisites as up-to-date
        run: make --touch codegen schema provider VERSION_DIR=${{ inputs.major_version_dir }}

      - name: Generate SDK
        run: make generate_${{ matrix.language }} VERSION_DIR=${{ inputs.major_version_dir }}

      - name: Build SDK
        run: make build_${{ matrix.language }}

      - name: Check worktree clean
        uses: ./.github/actions/check-worktree-clean

      - name: Update path
        run: echo "${{ github.workspace }}/bin" >> "$GITHUB_PATH"

      - name: Install Node dependencies
        run: yarn global add typescript

      - name: Install Python deps
        run: |-
          pip3 install virtualenv==20.0.23
          pip3 install pipenv

      - name: Install dependencies
        run: make install_${{ matrix.language}}_sdk

      - name: Install gotestfmt
        uses: jaxxstorm/action-install-gh-release@v1.9.0
        with:
          tag: v2.4.0
          repo: GoTestTools/gotestfmt

      - name: Run tests
        if: "!inputs.short_test"
        env:
          # specifying this id will cause the OIDC test(s) to run against this AD application
          OIDC_ARM_CLIENT_ID: ${{ inputs.oidc_arm_client_id }}
        run: |
          set -euo pipefail
          cd examples && go test -v -json -count=1 -cover -timeout 2h -tags=${{ matrix.language }} -parallel 4 . 2>&1 | tee /tmp/gotest.log | gotestfmt

      - name: Run short tests
        if: inputs.short_test
        run: |
          set -euo pipefail
          cd examples && go test -v -json -count=1 -cover -timeout 15m -short -tags=${{ matrix.language }} -parallel 4 . 2>&1 | tee /tmp/gotest.log | gotestfmt

      - name: Tar SDK folder
        if: ${{ matrix.language != 'go' }}
        run: tar -zcf sdk/${{ matrix.language }}.tar.gz -C sdk/${{ matrix.language }} .

      - name: Upload artifacts
        if: ${{ matrix.language != 'go' }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.language  }}-sdk.tar.gz
          path: ${{ github.workspace}}/sdk/${{ matrix.language }}.tar.gz

      - name: Tar split Go SDK folder
        if: ${{ matrix.language == 'go' }}
        run: tar -zcf sdk/pulumi-azure-native-sdk.tar.gz -C sdk/pulumi-azure-native-sdk .

      - name: Upload split Go artifacts
        uses: actions/upload-artifact@v3
        if: ${{ matrix.language == 'go' }}
        with:
          name: pulumi-azure-native-sdk.tar.gz
          path: ${{ github.workspace}}/sdk/pulumi-azure-native-sdk.tar.gz

      - if: failure() && github.event_name == 'push'
        name: Notify Slack
        uses: 8398a7/action-slack@v3
        with:
          author_name: Failure while building SDKs
          fields: repo,commit,author,action
          status: ${{ job.status }}

  test_provider:
    runs-on: ubuntu-latest
    name: Test Provider
    needs: prerequisites
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}
          submodules: true

      - name: Install Languages & Frameworks
        uses: ./.github/actions/install
        with:
          skip_dotnet_and_java: "true"

      - run: make ensure

      - name: Prerequisites artifact restore
        uses: ./.github/actions/prerequisites-artifact-restore

      - name: Mark prerequisites as up-to-date
        run: make --touch codegen schema provider

      - name: Test Provider Library
        run: make test_provider
