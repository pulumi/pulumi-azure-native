name: pull-request
"on":
  pull_request:
    branches:
      - master
    paths-ignore:
      - CHANGELOG.md
      - CODE-OF-CONDUCT.md
      - README.md
      - .github/arm2pulumi-coverage-report.yml
      - .github/cleanup-artifacts.yml
      - .github/master.yml
      - .github/nightly-sdk-generation.yml
      - .github/prerelease.yml
      - .github/release.yml
      - .github/weekly-pulumi-update.yml
      - .gitattributes
      - .gitignore
env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GO111MODULE: "on"
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  NUGET_PUBLISH_KEY: ${{ secrets.NUGET_PUBLISH_KEY }}
  PROVIDER: azure-native
  PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
  PULUMI_API: https://api.pulumi-staging.io
  PULUMI_LOCAL_NUGET: ${{ github.workspace }}/nuget
  PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  TRAVIS_OS_NAME: linux
jobs:
  prerequisites:
    name: prerequisites
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goversion: [1.17.x]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Checkout Scripts Repo
        uses: actions/checkout@v2
        with:
          path: ci-scripts
          repository: pulumi/scripts
      - name: Unshallow clone for tags
        run: git fetch --prune --unshallow --tags
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.goversion }}
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.1.0
        with:
          repo: pulumi/pulumictl
      - name: Install Schema Tools
        uses: jaxxstorm/action-install-gh-release@v1.1.0
        with:
          repo: mikhailshilkov/schema-tools
      - name: Install Pulumi CLI
        uses: pulumi/setup-pulumi@v2
      - name: Initialize submodules
        run: make init_submodules
      - name: Build codegen binaries
        run: make codegen
      - name: Build Schema
        run: make generate_schema
      - name: Check Schema is Valid
        run: |
          echo 'SCHEMA_CHANGES<<EOF' >> $GITHUB_ENV
          schema-tools compare ${{ env.PROVIDER }} master --local-path=provider/cmd/pulumi-resource-${{ env.PROVIDER }}/schema.json >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      - name: Comment on PR with Details of Schema Check
        uses: thollander/actions-comment-pull-request@1.0.1
        with:
          message: |
            ### Does the PR have any schema changes?

            ${{ env.SCHEMA_CHANGES }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Add label if no breaking changes
        if: contains(env.SCHEMA_CHANGES, 'Looking good! No breaking changes found.')
        uses: actions-ecosystem/action-add-labels@v1.1.0
        with:
          labels: impact/no-changelog-required
          number: ${{ github.event.issue.number }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build provider binary
        run: make provider
      - name: Check worktree clean
        run: ./ci-scripts/ci/check-worktree-is-clean
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: pulumi-${{ env.PROVIDER }}
          path: ${{ github.workspace }}/bin
      - name: Test Provider Library
        run: make test_provider
  build_sdks:
    name: build_sdks
    runs-on: ubuntu-latest
    needs: prerequisites
    strategy:
      fail-fast: true
      matrix:
        dotnetversion: [3.1.301]
        goversion: [1.17.x]
        language: [nodejs, python, dotnet, go]
        nodeversion: [14.x]
        pythonversion: [3.7]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Checkout Scripts Repo
        uses: actions/checkout@v2
        with:
          path: ci-scripts
          repository: pulumi/scripts
      - name: Unshallow clone for tags
        run: git fetch --prune --unshallow --tags
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.goversion }}
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{matrix.nodeversion}}
          registry-url: https://registry.npmjs.org
      - name: Setup DotNet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{matrix.dotnetversion}}
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{matrix.pythonversion}}
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.1.0
        with:
          repo: pulumi/pulumictl
      - name: Install Pulumi CLI
        uses: pulumi/setup-pulumi@v2
      - name: Download provider + tfgen binaries
        uses: actions/download-artifact@v2
        with:
          name: pulumi-${{ env.PROVIDER }}
          path: ${{ github.workspace }}/bin
      - name: Restore binary perms
        run: find ${{ github.workspace }} -name "pulumi-*-${{ env.PROVIDER }}" -print
          -exec chmod +x {} \;
      - name: Initialize submodules
        run: make init_submodules
      - name: Generate SDK
        run: make generate_${{ matrix.language }}
      - name: Build SDK
        run: make build_${{ matrix.language }}
      - name: Check worktree clean
        run: ./ci-scripts/ci/check-worktree-is-clean
      - name: Compress SDK folder
        run: tar -zcf sdk/${{ matrix.language }}.tar.gz -C sdk/${{ matrix.language }} .
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.language  }}-sdk.tar.gz
          path: ${{ github.workspace}}/sdk/${{ matrix.language }}.tar.gz
  test:
    name: ${{ matrix.language }} Tests
    needs: build_sdks
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        dotnetversion: [3.1.301]
        goversion: [1.17.x]
        language: [nodejs, python, dotnet, go]
        nodeversion: [14.x]
        pythonversion: [3.7]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Checkout Scripts Repo
        uses: actions/checkout@v2
        with:
          path: ci-scripts
          repository: pulumi/scripts
      - name: Unshallow clone for tags
        run: git fetch --prune --unshallow --tags
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.goversion }}
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.1.0
        with:
          repo: pulumi/pulumictl
      - name: Install Pulumi CLI
        uses: pulumi/setup-pulumi@v2
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{matrix.nodeversion}}
          registry-url: https://registry.npmjs.org
      - name: Setup DotNet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{matrix.dotnetversion}}
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{matrix.pythonversion}}
      - name: Download binaries
        uses: actions/download-artifact@v2
        with:
          name: pulumi-${{ env.PROVIDER }}
          path: ${{ github.workspace }}/bin
      - name: Restore binary perms
        run: find ${{ github.workspace }} -name "pulumi-*-${{ env.PROVIDER }}" -print
          -exec chmod +x {} \;
      - name: Download SDK
        uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.language  }}-sdk.tar.gz
          path: ${{ github.workspace}}/sdk
      - name: Uncompress SDK folder
        run: tar -zxf ${{ github.workspace}}/sdk/${{ matrix.language}}.tar.gz -C ${{ github.workspace}}/sdk/${{ matrix.language}}
      - name: Update path
        run: echo "${{ github.workspace }}/bin" >> $GITHUB_PATH
      - name: Install Node deps
        run:  yarn global add typescript
      - run: dotnet nuget add source ${{ github.workspace }}/nuget
      - name: Install Python deps
        run: |-
          pip3 install virtualenv==20.0.23
          pip3 install pipenv
      - name: Install dependencies
        run: make install_${{ matrix.language}}_sdk
      - name: Set up gotestfmt
        uses: haveyoudebuggedit/gotestfmt-action@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run tests
        run: |
          set -euo pipefail
          cd examples && go test -v -json -count=1 -cover -timeout 2h -tags=${{ matrix.language
          }} -parallel 4 . 2>&1 | tee /tmp/gotest.log | gotestfmt
  automerge:
    runs-on: ubuntu-latest
    name: automerge
    needs: test
    steps:
      - name: Automerge event
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.PULUMI_BOT_TOKEN }}
          event-type: automerge
