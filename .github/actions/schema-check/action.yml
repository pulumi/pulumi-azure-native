name: Schema Check
description: Compare schema to previous release and comment on PR

inputs:
  GITHUB_TOKEN:
    description: Token used to write the PR comment
  compare_to:
    description: Branch or commit to compare the new schema with

outputs:
  summary:
    description: Output of schema-tools compare
    value: ${{ steps.schema-tools.outputs.summary }}

runs:
  using: "composite"
  steps:
      - name: Install Schema Tools
        uses: jaxxstorm/action-install-gh-release@v1.9.0
        with:
          repo: pulumi/schema-tools
          tag: v0.1.3

      - name: Check Schema is Valid
        id: schema-tools
        shell: bash
        env:
          # If inputs.compare_to was given, use schema-tools `--old-commit` arg to compare to that ref.
          # Otherwise, leave it out (empty) to default to `master`.
          old_commit: ${{ inputs.compare_to != '' && format('--old-commit={0}', inputs.compare_to) || '' }}
        run: |
          echo 'summary<<EOF' >> $GITHUB_OUTPUT
          schema-tools compare --provider="azure-native" $old_commit --new-commit="--local-path=provider/cmd/pulumi-resource-azure-native/schema.json" >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      - name: Comment on PR with Details of Schema Check
        if: github.event_name == 'pull_request'
        uses: thollander/actions-comment-pull-request@v2
        with:
          # Update the comment if one already exists
          comment_tag: schema-check
          message: |
            ### Does the PR have any schema changes?

            ${{ steps.schema-tools.outputs.summary }}
          GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}

      - name: Add label if no breaking changes
        if:
          contains(steps.schema-tools.outputs.summary, 'Looking good! No breaking changes found.') &&
          github.event_name == 'pull_request' &&
          github.actor == 'pulumi-bot'
        uses: actions-ecosystem/action-add-labels@v1.1.0
        with:
          labels: impact/no-changelog-required
          number: ${{ github.event.issue.number }}
          github_token: ${{ inputs.GITHUB_TOKEN }}
